; ModuleID = '../../third_party/blink/renderer/core/svg/svg_animate_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_animate_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" }
%"class.WTF::StaticSingleton<const WTF::AtomicString>::InstanceStorage" = type { [8 x i8] }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.208", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.208" = type { %"class.base::RefCounted.209" }
%"class.base::RefCounted.209" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.212" }
%"class.blink::HeapHashMap.212" = type { %"class.WTF::HashMap.215" }
%"class.WTF::HashMap.215" = type { %"class.WTF::HashTable.216" }
%"class.WTF::HashTable.216" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type { %"class.blink::WeakMember.219", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.219" = type { %"class.blink::MemberBase.220" }
%"class.blink::MemberBase.220" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.221", i32, [4 x i8], %"class.std::__1::unique_ptr.357", %"class.std::__1::unique_ptr.357", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.373", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.391", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.398", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.224", %"class.std::__1::unique_ptr.230", %"class.std::__1::unique_ptr.236", %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.265", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.279", %"class.std::__1::unique_ptr.286", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.293", %"class.std::__1::unique_ptr.300", %"class.std::__1::unique_ptr.307", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.337", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.224" = type { %"class.std::__1::__compressed_pair.225" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i64 }
%"class.std::__1::unique_ptr.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.267" }
%"struct.std::__1::__compressed_pair_elem.267" = type { %"class.blink::Worklist.268"* }
%"class.blink::Worklist.268" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::Worklist.275"* }
%"class.blink::Worklist.275" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::Worklist.282"* }
%"class.blink::Worklist.282" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.286" = type { %"class.std::__1::__compressed_pair.287" }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.blink::Worklist.289"* }
%"class.blink::Worklist.289" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::Worklist.296"* }
%"class.blink::Worklist.296" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::Worklist.303"* }
%"class.blink::Worklist.303" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::Worklist.310"* }
%"class.blink::Worklist.310" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.257" }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.317", %"class.std::__1::__compressed_pair.324", %"class.std::__1::__compressed_pair.329", %"class.std::__1::__compressed_pair.331", [4 x i8] }>
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319", %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { i64 }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { float }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.340", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.342" }
%"struct.std::__1::__compressed_pair_elem.342" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.349" }
%"class.WTF::Vector.349" = type { %"class.WTF::VectorBuffer.350" }
%"class.WTF::VectorBuffer.350" = type { %"class.WTF::VectorBufferBase.351" }
%"class.WTF::VectorBufferBase.351" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.379" }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.268"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.275"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.282"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.289"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.296"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.631" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.397 }
%class.scoped_refptr.397 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.398" = type { %"struct.std::__1::__atomic_base.399" }
%"struct.std::__1::__atomic_base.399" = type { %"struct.std::__1::__cxx_atomic_impl.400" }
%"struct.std::__1::__cxx_atomic_impl.400" = type { %"struct.std::__1::__cxx_atomic_base_impl.401" }
%"struct.std::__1::__cxx_atomic_base_impl.401" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.173" }
%"struct.std::__1::atomic.173" = type { %"struct.std::__1::__atomic_base.174" }
%"struct.std::__1::__atomic_base.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::SVGAnimateElement" = type <{ %"class.blink::SVGAnimationElement", %"class.blink::Member.74", %"class.blink::Member.74", %"class.blink::Member.74", %"class.blink::Member.78", %"class.blink::QualifiedName", i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::SVGAnimationElement" = type { %"class.blink::SVGSMILElement.base", i8, i8, i8, %"class.WTF::Vector.59", %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.WTF::Vector.64", %"class.WTF::Vector.69", %"class.WTF::String", %"class.WTF::String", i32, i32 }
%"class.blink::SVGSMILElement.base" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.34", %"class.blink::Member.36", %"class.blink::HeapVector", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.45", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.57", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8 }>
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.28", %"class.blink::Member.30" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.80", %"class.blink::Member.82", %"class.blink::Member.0", %"class.blink::Member.84", %"class.blink::Member.84", %"class.blink::Member.108", %"class.blink::Member.110", %"class.blink::Member.112", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.117", %"class.blink::HeapVector.119" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::Document"* }
%"class.blink::Member.84" = type { %"class.blink::MemberBase.85" }
%"class.blink::MemberBase.85" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.88" }
%"class.blink::HeapHashMap.88" = type { %"class.WTF::HashMap.91" }
%"class.WTF::HashMap.91" = type { %"class.WTF::HashTable.92" }
%"class.WTF::HashTable.92" = type <{ %"struct.WTF::KeyValuePair.94"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.94" = type { %"class.WTF::AtomicString", %"class.blink::Member.95" }
%"class.blink::Member.95" = type { %"class.blink::MemberBase.96" }
%"class.blink::MemberBase.96" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.99", i32, %"class.blink::HeapVector.101" }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.101" = type { %"class.WTF::Vector.104" }
%"class.WTF::Vector.104" = type { %"class.WTF::VectorBuffer.105" }
%"class.WTF::VectorBuffer.105" = type { %"class.WTF::VectorBufferBase.106" }
%"class.WTF::VectorBufferBase.106" = type { %"class.blink::Member.99"*, i32, i32 }
%"class.blink::Member.108" = type { %"class.blink::MemberBase.109" }
%"class.blink::MemberBase.109" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.110" = type { %"class.blink::MemberBase.111" }
%"class.blink::MemberBase.111" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.112" = type { %"class.blink::MemberBase.113" }
%"class.blink::MemberBase.113" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.114" }
%"class.blink::Member.114" = type { %"class.blink::MemberBase.115" }
%"class.blink::MemberBase.115" = type { %"class.blink::HeapHashMap.116"* }
%"class.blink::HeapHashMap.116" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.119" = type { %"class.WTF::Vector.122" }
%"class.WTF::Vector.122" = type { %"class.WTF::VectorBuffer.123" }
%"class.WTF::VectorBuffer.123" = type { %"class.WTF::VectorBufferBase.124" }
%"class.WTF::VectorBufferBase.124" = type { %"class.blink::Member.125"*, i32, i32 }
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.127", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.129, %"class.WTF::Vector.130", %"class.WTF::Vector.130", %"class.blink::Member", %"class.blink::Member.135", %"class.blink::HeapHashSet.139", %"class.blink::Member.82", %"class.WTF::HashSet.146", %"class.WTF::TextPosition", %"class.blink::Member.150", %"class.blink::HeapVector.152", %"class.blink::Member.159" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.127" = type { %"class.blink::MemberBase.128" }
%"class.blink::MemberBase.128" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.129 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type opaque
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type opaque
%"class.blink::Member.135" = type { %"class.blink::MemberBase.136" }
%"class.blink::MemberBase.136" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.137" }
%"class.blink::Member.137" = type { %"class.blink::MemberBase.138" }
%"class.blink::MemberBase.138" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.139" = type { %"class.WTF::HashSet.142" }
%"class.WTF::HashSet.142" = type { %"class.WTF::HashTable.143" }
%"class.WTF::HashTable.143" = type <{ %"class.blink::WeakMember.145"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.145" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.146" = type { %"class.WTF::HashTable.147" }
%"class.WTF::HashTable.147" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type opaque
%"class.blink::HeapVector.152" = type { %"class.WTF::Vector.155" }
%"class.WTF::Vector.155" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"class.blink::Member.135"*, i32, i32 }
%"class.blink::Member.159" = type { %"class.blink::MemberBase.160" }
%"class.blink::MemberBase.160" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.19", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.26" }
%"class.WTF::HashTable.26" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.32", %"class.blink::Member.32" }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::IdTargetObserver"* }
%"class.blink::IdTargetObserver" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.43"*, i32, i32 }
%"class.blink::Member.43" = type opaque
%"class.blink::HeapHashSet.45" = type { %"class.WTF::HashSet.48" }
%"class.WTF::HashSet.48" = type { %"class.WTF::HashTable.49" }
%"class.WTF::HashTable.49" = type <{ %"class.blink::Member.51"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.51" = type opaque
%"class.blink::SMILInstanceTimeList" = type <{ %"class.WTF::Vector.52", i32, [4 x i8] }>
%"class.WTF::Vector.52" = type { %"class.WTF::VectorBuffer.53" }
%"class.WTF::VectorBuffer.53" = type { %"class.WTF::VectorBufferBase.54" }
%"class.WTF::VectorBufferBase.54" = type { %"class.blink::SMILTimeWithOrigin"*, i32, i32 }
%"class.blink::SMILTimeWithOrigin" = type <{ %"class.blink::SMILTime", i32, [4 x i8] }>
%"struct.blink::SMILInterval" = type { %"class.blink::SMILTime", %"class.blink::SMILTime" }
%"struct.blink::SVGSMILElement::ProgressState" = type { float, i32 }
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type opaque
%"class.blink::SMILRepeatCount" = type { double }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.64" = type { %"class.WTF::VectorBuffer.65" }
%"class.WTF::VectorBuffer.65" = type { %"class.WTF::VectorBufferBase.66" }
%"class.WTF::VectorBufferBase.66" = type { float*, i32, i32 }
%"class.WTF::Vector.69" = type { %"class.WTF::VectorBuffer.70" }
%"class.WTF::VectorBuffer.70" = type { %"class.WTF::VectorBufferBase.71" }
%"class.WTF::VectorBufferBase.71" = type { %"class.gfx::CubicBezier"*, i32, i32 }
%"class.gfx::CubicBezier" = type { double, double, double, double, double, double, double, double, double, double, [11 x double] }
%"class.blink::Member.74" = type { %"class.blink::MemberBase.75" }
%"class.blink::MemberBase.75" = type { %"class.blink::SVGPropertyBase"* }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.34", %"class.blink::QualifiedName"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.169", %"class.WTF::Vector.169", i8, i32, %"class.blink::Member.180", %"class.blink::Member.182", %"class.blink::Member.184", %"class.blink::Member.186", %"class.blink::Member.188", %"class.blink::Member.190", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.193", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.199", %"class.blink::Member.201", %"class.blink::Member.125", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.204", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.101", %"class.blink::Member.99", %"class.blink::Member.414", %"class.blink::Member.99", %"class.blink::Member.99", %"class.blink::Member.99", %"class.blink::UserActionElementSet", %"class.blink::Member.423", double, double, i64, i64, %"class.blink::HeapHashSet.425", %"class.blink::HeapHashSet.432", i16, i8, %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::Member.443", %"class.blink::Member.445", %"class.blink::TextLinkColors", %"class.blink::Member.447", i8, [7 x i8], %"class.blink::HeapHashMap.449", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.99", %"class.WTF::Vector.456", %"class.blink::Member.461", %"class.blink::Member.463", i8, %"class.blink::Member.99", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.465", %"class.blink::HeapVector.467", %"class.std::__1::unique_ptr.475", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.481", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.494", %"class.WTF::Vector.496", i8, i8, %"class.std::__1::unique_ptr.501", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.101", %"class.blink::HeapVector.507", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.515", i8, i32, %"class.blink::Member.517", %"class.blink::Member.519", %"class.blink::Member.521", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.523", %"class.WTF::HashMap.525", %"class.blink::Member.530", %"class.blink::Member.532", %"class.blink::Member.534", %"class.blink::Member.536", %"class.blink::Member.82", %"class.blink::Member.82", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.538", i8, i32, %"class.blink::Member.545", %"class.blink::Member.547", i32, %"class.blink::Member.549", %"class.blink::Member.551", %"class.blink::Member.553", %"class.std::__1::unique_ptr.555", i64, %"class.std::__1::unique_ptr.561", i32, i32, %"class.blink::Member.567", %"class.blink::Member.569", %"class.blink::Member.571", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.573", %"class.WTF::Vector.575", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.580", %"class.blink::Member.587", %"class.std::__1::unique_ptr.589", %"class.blink::Member.595", i8, i8, %"class.WTF::String", %"class.blink::Member.597", i8, [7 x i8], %"class.blink::HeapHashMap.599", %"class.blink::HeapObserverSet", %"class.blink::Member.613", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.615", i32, i8, i8, %"class.blink::WeakMember.617", %"class.blink::Member.618" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.162" }
%"class.blink::HeapHashMap.162" = type { %"class.WTF::HashMap.165" }
%"class.WTF::HashMap.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"struct.WTF::KeyValuePair.168"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.168" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.169" = type { %"class.WTF::VectorBuffer.170" }
%"class.WTF::VectorBuffer.170" = type { %"class.WTF::VectorBufferBase.171" }
%"class.WTF::VectorBufferBase.171" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.172 }
%class.scoped_refptr.172 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.173" }
%"class.blink::Member.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.182" = type { %"class.blink::MemberBase.183" }
%"class.blink::MemberBase.183" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.636", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.677", i32, i8, [3 x i8], %"class.blink::HeapVector.679", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.687", %"class.blink::Member.689", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.698", %"class.blink::Member.704", %"class.blink::Member.706", i8, [7 x i8] }>
%"class.blink::Supplementable.636" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.637" }
%"class.blink::HeapHashMap.637" = type { %"class.WTF::HashMap.640" }
%"class.WTF::HashMap.640" = type { %"class.WTF::HashTable.641" }
%"class.WTF::HashTable.641" = type <{ %"struct.WTF::KeyValuePair.643"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.643" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.652" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.644" }
%"class.blink::HeapObserverSet.644" = type { i32, [4 x i8], %"class.blink::HeapHashSet.645" }
%"class.blink::HeapHashSet.645" = type { %"class.WTF::HashSet.648" }
%"class.WTF::HashSet.648" = type { %"class.WTF::HashTable.649" }
%"class.WTF::HashTable.649" = type <{ %"class.blink::WeakMember.651"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.651" = type opaque
%"class.blink::Supplementable.652" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.653" }
%"class.blink::HeapHashMap.653" = type { %"class.WTF::HashMap.656" }
%"class.WTF::HashMap.656" = type { %"class.WTF::HashTable.657" }
%"class.WTF::HashTable.657" = type <{ %"struct.WTF::KeyValuePair.659"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.659" = type { i8*, %"class.blink::Member.780" }
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.782" }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.660, %"class.std::__1::unique_ptr.661", %"class.std::__1::unique_ptr.661", %"class.std::__1::unique_ptr.667", %"class.std::__1::unique_ptr.667", %"class.blink::Member.182", i32, [4 x i8], %"class.WTF::HashSet.673", i32, i32 }
%class.scoped_refptr.660 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.667" = type { %"class.std::__1::__compressed_pair.668" }
%"class.std::__1::__compressed_pair.668" = type { %"struct.std::__1::__compressed_pair_elem.669" }
%"struct.std::__1::__compressed_pair_elem.669" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.677" = type { %"class.blink::MemberBase.678" }
%"class.blink::MemberBase.678" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.679" = type { %"class.WTF::Vector.682" }
%"class.WTF::Vector.682" = type { %"class.WTF::VectorBuffer.683" }
%"class.WTF::VectorBuffer.683" = type { %"class.WTF::VectorBufferBase.684" }
%"class.WTF::VectorBufferBase.684" = type { %"class.blink::Member.685"*, i32, i32 }
%"class.blink::Member.685" = type opaque
%"class.blink::Member.687" = type { %"class.blink::MemberBase.688" }
%"class.blink::MemberBase.688" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.691", i32, i32 }
%"class.blink::HeapHashMap.691" = type { %"class.WTF::HashMap.694" }
%"class.WTF::HashMap.694" = type { %"class.WTF::HashTable.695" }
%"class.WTF::HashTable.695" = type <{ %"struct.WTF::KeyValuePair.697"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.697" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.704" = type { %"class.blink::MemberBase.705" }
%"class.blink::MemberBase.705" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.706" = type { %"class.blink::MemberBase.707" }
%"class.blink::MemberBase.707" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.184" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.186" = type { %"class.blink::MemberBase.187" }
%"class.blink::MemberBase.187" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.190" = type { %"class.blink::MemberBase.191" }
%"class.blink::MemberBase.191" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.203 }
%class.scoped_refptr.203 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.416" }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type opaque
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.425" = type { %"class.WTF::HashSet.428" }
%"class.WTF::HashSet.428" = type { %"class.WTF::HashTable.429" }
%"class.WTF::HashTable.429" = type <{ %"class.blink::WeakMember.431"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.431" = type opaque
%"class.blink::HeapHashSet.432" = type { %"class.WTF::HashSet.435" }
%"class.WTF::HashSet.435" = type { %"class.WTF::HashTable.436" }
%"class.WTF::HashTable.436" = type <{ %"class.blink::WeakMember.438"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.438" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.449" = type { %"class.WTF::HashMap.452" }
%"class.WTF::HashMap.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"struct.WTF::KeyValuePair.455"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.455" = type opaque
%"class.WTF::Vector.456" = type { %"class.WTF::VectorBuffer.457" }
%"class.WTF::VectorBuffer.457" = type { %"class.WTF::VectorBufferBase.458" }
%"class.WTF::VectorBufferBase.458" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.467" = type { %"class.WTF::Vector.470" }
%"class.WTF::Vector.470" = type { %"class.WTF::VectorBuffer.471" }
%"class.WTF::VectorBuffer.471" = type { %"class.WTF::VectorBufferBase.472" }
%"class.WTF::VectorBufferBase.472" = type { %"class.blink::Member.473"*, i32, i32 }
%"class.blink::Member.473" = type opaque
%"class.std::__1::unique_ptr.475" = type { %"class.std::__1::__compressed_pair.476" }
%"class.std::__1::__compressed_pair.476" = type { %"struct.std::__1::__compressed_pair_elem.477" }
%"struct.std::__1::__compressed_pair_elem.477" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.481" = type { %"class.WTF::HashSet.484" }
%"class.WTF::HashSet.484" = type { %"class.WTF::HashTable.485" }
%"class.WTF::HashTable.485" = type <{ %"class.blink::WeakMember.487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.487" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.488", i32, [4 x i8] }>
%"class.WTF::Vector.488" = type { %"class.WTF::VectorBuffer.489" }
%"class.WTF::VectorBuffer.489" = type { %"class.WTF::VectorBufferBase.490" }
%"class.WTF::VectorBufferBase.490" = type { %"struct.std::__1::pair.491"*, i32, i32 }
%"struct.std::__1::pair.491" = type opaque
%"class.blink::Member.494" = type { %"class.blink::MemberBase.495" }
%"class.blink::MemberBase.495" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.507" = type { %"class.WTF::Vector.510" }
%"class.WTF::Vector.510" = type { %"class.WTF::VectorBuffer.511" }
%"class.WTF::VectorBuffer.511" = type { %"class.WTF::VectorBufferBase.512" }
%"class.WTF::VectorBufferBase.512" = type { %"class.blink::Member.513"*, i32, i32 }
%"class.blink::Member.513" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.82" }
%"class.blink::Member.515" = type { %"class.blink::MemberBase.516" }
%"class.blink::MemberBase.516" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.517" = type { %"class.blink::MemberBase.518" }
%"class.blink::MemberBase.518" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.519" = type { %"class.blink::MemberBase.520" }
%"class.blink::MemberBase.520" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.521" = type { %"class.blink::MemberBase.522" }
%"class.blink::MemberBase.522" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.525" = type { %"class.WTF::HashTable.526" }
%"class.WTF::HashTable.526" = type <{ %"struct.WTF::KeyValuePair.529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.529" = type opaque
%"class.blink::Member.530" = type { %"class.blink::MemberBase.531" }
%"class.blink::MemberBase.531" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.532" = type { %"class.blink::MemberBase.533" }
%"class.blink::MemberBase.533" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.534" = type { %"class.blink::MemberBase.535" }
%"class.blink::MemberBase.535" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.413", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.404, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.404 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.405" }>
%"class.base::RefCountedThreadSafe.405" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.406 }
%class.scoped_refptr.406 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.407", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.407" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.408" }
%"struct.std::__1::atomic.408" = type { %"struct.std::__1::__atomic_base.409" }
%"struct.std::__1::__atomic_base.409" = type { %"struct.std::__1::__atomic_base.410" }
%"struct.std::__1::__atomic_base.410" = type { %"struct.std::__1::__cxx_atomic_impl.411" }
%"struct.std::__1::__cxx_atomic_impl.411" = type { %"struct.std::__1::__cxx_atomic_base_impl.412" }
%"struct.std::__1::__cxx_atomic_base_impl.412" = type { i8 }
%"class.blink::WeakMember.413" = type { %"class.blink::MemberBase.83" }
%"class.blink::HeapHashSet.538" = type { %"class.WTF::HashSet.541" }
%"class.WTF::HashSet.541" = type { %"class.WTF::HashTable.542" }
%"class.WTF::HashTable.542" = type <{ %"class.blink::Member.544"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.544" = type opaque
%"class.blink::Member.545" = type { %"class.blink::MemberBase.546" }
%"class.blink::MemberBase.546" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.547" = type { %"class.blink::MemberBase.548" }
%"class.blink::MemberBase.548" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.569" = type { %"class.blink::MemberBase.570" }
%"class.blink::MemberBase.570" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.571" = type { %"class.blink::MemberBase.572" }
%"class.blink::MemberBase.572" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.573" = type { %"class.blink::MemberBase.574" }
%"class.blink::MemberBase.574" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.580" = type { %"class.WTF::HashMap.583" }
%"class.WTF::HashMap.583" = type { %"class.WTF::HashTable.584" }
%"class.WTF::HashTable.584" = type <{ %"struct.WTF::KeyValuePair.586"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.586" = type opaque
%"class.blink::Member.587" = type { %"class.blink::MemberBase.588" }
%"class.blink::MemberBase.588" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.589" = type { %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.595" = type { %"class.blink::MemberBase.596" }
%"class.blink::MemberBase.596" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.597" = type { %"class.blink::MemberBase.598" }
%"class.blink::MemberBase.598" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.599" = type { %"class.WTF::HashMap.602" }
%"class.WTF::HashMap.602" = type { %"class.WTF::HashTable.603" }
%"class.WTF::HashTable.603" = type <{ %"struct.WTF::KeyValuePair.605"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.605" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.606" }
%"class.blink::HeapHashSet.606" = type { %"class.WTF::HashSet.609" }
%"class.WTF::HashSet.609" = type { %"class.WTF::HashTable.610" }
%"class.WTF::HashTable.610" = type <{ %"class.blink::WeakMember.612"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.612" = type opaque
%"class.blink::Member.613" = type { %"class.blink::MemberBase.614" }
%"class.blink::MemberBase.614" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.615" = type { %"class.blink::MemberBase.616" }
%"class.blink::MemberBase.616" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.82", %"class.blink::HeapHashSet.622", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.629", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.622" = type { %"class.WTF::HashSet.625" }
%"class.WTF::HashSet.625" = type { %"class.WTF::HashTable.626" }
%"class.WTF::HashTable.626" = type <{ %"class.blink::Member.628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.628" = type opaque
%"class.blink::HeapTaskRunnerTimer.629" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.630", { i64, i64 } }
%"class.blink::WeakMember.630" = type { %"class.blink::MemberBase.616" }
%"class.blink::WeakMember.617" = type { %"class.blink::MemberBase" }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::SVGSMILElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.34", %"class.blink::Member.36", %"class.blink::HeapVector", i8, i8, i8, i8, [4 x i8], %"class.blink::HeapHashSet.45", %"class.blink::SMILInstanceTimeList", %"class.blink::SMILInstanceTimeList", %"struct.blink::SMILInterval", %"struct.blink::SMILInterval", i8, [3 x i8], %"struct.blink::SVGSMILElement::ProgressState", [4 x i8], %"class.blink::Member.57", i32, i32, %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILRepeatCount", %"class.blink::SMILTime", %"class.blink::SMILTime", i8, i8, i8, [5 x i8] }>
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.785" }
%"class.WTF::Vector.785" = type { %"class.WTF::VectorBuffer.786" }
%"class.WTF::VectorBuffer.786" = type { %"class.WTF::VectorBufferBase.787", [64 x i8] }
%"class.WTF::VectorBufferBase.787" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.769" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.769" = type { %"class.v8::TracedReference.770" }
%"class.v8::TracedReference.770" = type { %"class.v8::BasicTracedReference.771" }
%"class.v8::BasicTracedReference.771" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::SVGColorProperty" = type { %"class.blink::SVGPropertyBase", %"class.blink::StyleColor" }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::SVGNumber" = type <{ %"class.blink::SVGListablePropertyBase", float, [4 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.708" }
%"class.blink::MemberBase.708" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector.709" }
%"class.blink::HeapVector.709" = type { %"class.WTF::Vector.712" }
%"class.WTF::Vector.712" = type { %"class.WTF::VectorBuffer.713" }
%"class.WTF::VectorBuffer.713" = type { %"class.WTF::VectorBufferBase.714" }
%"class.WTF::VectorBufferBase.714" = type { %"class.blink::Member.715"*, i32, i32 }
%"class.blink::Member.715" = type { %"class.blink::MemberBase.716" }
%"class.blink::MemberBase.716" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member.718", i8, [7 x i8] }>
%"class.blink::Member.718" = type { %"class.blink::MemberBase.719" }
%"class.blink::MemberBase.719" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::SVGLengthList" = type <{ %"class.blink::SVGListPropertyHelper", i32, [4 x i8] }>
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.791", %"class.blink::Member.794", %"class.blink::Member.796", %"class.blink::Member.815", %"class.blink::Member.817" }
%"class.blink::Member.791" = type { %"class.blink::MemberBase.792" }
%"class.blink::MemberBase.792" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.793 }
%"class.blink::LayoutObject" = type opaque
%class.scoped_refptr.793 = type { %"class.blink::ComputedStyle"* }
%"class.blink::Member.794" = type { %"class.blink::MemberBase.795" }
%"class.blink::MemberBase.795" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.796" = type { %"class.blink::MemberBase.797" }
%"class.blink::MemberBase.797" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.800", %"class.blink::HeapHashSet.809" }
%"class.blink::HeapVector.800" = type { %"class.WTF::Vector.803" }
%"class.WTF::Vector.803" = type { %"class.WTF::VectorBuffer.804" }
%"class.WTF::VectorBuffer.804" = type { %"class.WTF::VectorBufferBase.805" }
%"class.WTF::VectorBufferBase.805" = type { %"class.blink::Member.806"*, i32, i32 }
%"class.blink::Member.806" = type { %"class.blink::MemberBase.807" }
%"class.blink::MemberBase.807" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.809" = type { %"class.WTF::HashSet.812" }
%"class.WTF::HashSet.812" = type { %"class.WTF::HashTable.813" }
%"class.WTF::HashTable.813" = type <{ %"class.blink::Member.806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.817" = type { %"class.blink::MemberBase.818" }
%"class.blink::MemberBase.818" = type { %"class.blink::HeapHashSet.819"* }
%"class.blink::HeapHashSet.819" = type opaque
%"struct.blink::SMILAnimationValue" = type { %"class.blink::SVGPropertyBase"*, %"class.blink::AffineTransform" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"struct.blink::SMILAnimationEffectParameters" = type { i8, i8, i8 }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.722", %"class.blink::HeapVector.727", i8, [7 x i8] }>
%"class.blink::Member.722" = type { %"class.blink::MemberBase.723" }
%"class.blink::MemberBase.723" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.725" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.724" }
%"class.blink::WeakMember.724" = type { %"class.blink::MemberBase.183" }
%"class.blink::Member.725" = type { %"class.blink::MemberBase.726" }
%"class.blink::MemberBase.726" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.727" = type { %"class.WTF::Vector.730" }
%"class.WTF::Vector.730" = type { %"class.WTF::VectorBuffer.731" }
%"class.WTF::VectorBuffer.731" = type { %"class.WTF::VectorBufferBase.732", [96 x i8] }
%"class.WTF::VectorBufferBase.732" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.733" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::CSSValue"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.826", %"class.blink::FreeList", %"class.WTF::Vector.831" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833" }
%"class.WTF::VectorBufferBase.833" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.762" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.750" }
%"class.blink::HeapVector.750" = type { %"class.WTF::Vector.753" }
%"class.WTF::Vector.753" = type { %"class.WTF::VectorBuffer.754" }
%"class.WTF::VectorBuffer.754" = type { %"class.WTF::VectorBufferBase.755", [32 x i8] }
%"class.WTF::VectorBufferBase.755" = type { %"struct.std::__1::pair.756"*, i32, i32 }
%"struct.std::__1::pair.756" = type { %"class.WTF::AtomicString", %"class.blink::Member.757" }
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HeapVector.759"* }
%"class.blink::HeapVector.759" = type opaque
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.WTF::Vector.765"* }
%"class.WTF::Vector.765" = type opaque
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.741, %"class.blink::Member.742", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.741 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.744" }
%"class.blink::Persistent.744" = type { %"class.blink::PersistentBase.745" }
%"class.blink::PersistentBase.745" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::EventListener" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.746", i8, [7 x i8] }>
%"class.blink::Member.746" = type { %"class.blink::MemberBase.747" }
%"class.blink::MemberBase.747" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.772", %"class.WTF::String"* }
%"class.blink::HeapVector.772" = type { %"class.WTF::Vector.775" }
%"class.WTF::Vector.775" = type { %"class.WTF::VectorBuffer.776" }
%"class.WTF::VectorBuffer.776" = type { %"class.WTF::VectorBufferBase.777" }
%"class.WTF::VectorBufferBase.777" = type { %"class.blink::Member"*, i32, i32 }
%"class.WTF::HashMap.779" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN5blink19SVGAnimationElementD2Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink17SVGAnimateElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink10SVGElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink10SVGElement22IsStructurallyExternalEv = comdat any

$_ZNK5blink19SVGAnimationElement7IsValidEv = comdat any

$_ZN5blink10SVGElement22AnimateMotionTransformEv = comdat any

$_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink9svg_names11kAnimateTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink17SVGAnimateElementE = hidden unnamed_addr constant { [183 x i8*], [3 x i8*], [3 x i8*] } { [183 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"class.blink::Visitor"*)* @_ZNK5blink17SVGAnimateElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGAnimateElement"*)* @_ZNK5blink17SVGAnimateElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGAnimateElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17SVGAnimateElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink17SVGAnimateElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.779"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink17SVGAnimateElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateElement"*, %"class.blink::Attribute"*)* @_ZNK5blink17SVGAnimateElement43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*)* @_ZN5blink14SVGSMILElement20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::SVGElement"*, i32)* @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimationElement"*)* @_ZNK5blink19SVGAnimationElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElement25WillChangeAnimationTargetEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElement24DidChangeAnimationTargetEv to i8*), i8* bitcast (void (%"struct.blink::SMILAnimationValue"*, %"class.blink::SVGAnimateElement"*)* @_ZNK5blink17SVGAnimateElement20CreateAnimationValueEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"struct.blink::SMILAnimationValue"*)* @_ZN5blink17SVGAnimateElement20ApplyResultsToTargetERKNS_18SMILAnimationValueE to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElement19ClearAnimationValueEv to i8*), i8* bitcast (void (%"class.blink::SVGAnimationElement"*)* @_ZN5blink19SVGAnimationElement19UpdateAnimationModeEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateElement"*)* @_ZNK5blink17SVGAnimateElement17HasValidAnimationEv to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)* @_ZN5blink17SVGAnimateElement31CalculateToAtEndOfDurationValueERKN3WTF6StringE to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17SVGAnimateElement24CalculateFromAndToValuesERKN3WTF6StringES4_ to i8*), i8* bitcast (i1 (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17SVGAnimateElement24CalculateFromAndByValuesERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"struct.blink::SMILAnimationValue"*, float, i32)* @_ZNK5blink17SVGAnimateElement23CalculateAnimationValueERNS_18SMILAnimationValueEfj to i8*), i8* bitcast (float (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17SVGAnimateElement17CalculateDistanceERKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElement21ResolveTargetPropertyEv to i8*), i8* bitcast (%"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)* @_ZNK5blink17SVGAnimateElement10ParseValueERKN3WTF6StringE to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGAnimateElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink17SVGAnimateElement5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink9svg_names9kFromAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names7kToAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kValuesAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kAttributeNameAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names18kAttributeTypeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink19style_change_reason10kAnimationE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [4 x i8] c"CSS\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"XML\00", align 1
@_ZN5blink10g_any_nameE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink19SVGAnimationElementE = external unnamed_addr constant { [181 x i8*], [3 x i8*], [3 x i8*] }, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink11xlink_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names9kHrefAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [8 x i8] c"inherit\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink17SVGAnimateElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink9svg_names10kScriptTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.6 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink9SVGStringE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink9svg_names7kSetTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink17SVGAnimateElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGAnimateElement"*, %"class.blink::Document"*), void (%"class.blink::SVGAnimateElement"*, %"class.blink::Document"*)* @_ZN5blink17SVGAnimateElementC2ERNS_8DocumentE
@_ZN5blink17SVGAnimateElementC1ERKNS_13QualifiedNameERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGAnimateElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*), void (%"class.blink::SVGAnimateElement"*, %"class.blink::QualifiedName"*, %"class.blink::Document"*)* @_ZN5blink17SVGAnimateElementC2ERKNS_13QualifiedNameERNS_8DocumentE
@_ZN5blink17SVGAnimateElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGAnimateElement"*), void (%"class.blink::SVGAnimateElement"*)* @_ZN5blink17SVGAnimateElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElementC2ERNS_8DocumentE(%"class.blink::SVGAnimateElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names11kAnimateTagE to %"class.blink::QualifiedName"**), align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimationElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %3, %"class.blink::Document"* dereferenceable(2848) %1) #11
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.blink::SVGPropertyBase"** %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false) #11
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 16777216
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #11
  br label %22

22:                                               ; preds = %2, %15, %20
  %23 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 10
  %25 = bitcast i32* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #11
  store i32 2, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimateElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimationElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.blink::Document"* dereferenceable(2848) %2) #11
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast %"class.blink::SVGPropertyBase"** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 32, i1 false)
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %12, %"class.blink::QualifiedName::QualifiedNameImpl"** %13, align 8
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %12, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = and i32 %17, 16777216
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %12, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %21) #11
  br label %22

22:                                               ; preds = %3, %15, %20
  %23 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %24 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 10
  %25 = bitcast i32* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false)
  store i32 2, i32* %24, align 8
  ret void
}

declare void @_ZN5blink19SVGAnimationElementC2ERKNS_13QualifiedNameERNS_8DocumentE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElementD2Ev(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %5) #11
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"* %6) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [181 x i8*], [3 x i8*], [3 x i8*] }, { [181 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink19SVGAnimationElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #11
  br label %21

21:                                               ; preds = %1, %17, %20
  %22 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 9, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #11
  br label %38

38:                                               ; preds = %21, %34, %37
  %39 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %40 = load %"class.gfx::CubicBezier"*, %"class.gfx::CubicBezier"** %39, align 8
  %41 = icmp eq %"class.gfx::CubicBezier"* %40, null
  %42 = bitcast %"class.gfx::CubicBezier"* %40 to i8*
  br i1 %41, label %49, label %43, !prof !2

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %48, label %47, !prof !3

47:                                               ; preds = %43
  store i32 0, i32* %44, align 4
  br label %48

48:                                               ; preds = %47, %43
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %42) #11
  store %"class.gfx::CubicBezier"* null, %"class.gfx::CubicBezier"** %39, align 8
  br label %49

49:                                               ; preds = %38, %48
  %50 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %51 = load float*, float** %50, align 8
  %52 = icmp eq float* %51, null
  %53 = bitcast float* %51 to i8*
  br i1 %52, label %60, label %54, !prof !2

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %54
  store i32 0, i32* %55, align 4
  br label %59

59:                                               ; preds = %58, %54
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #11
  store float* null, float** %50, align 8
  br label %60

60:                                               ; preds = %49, %59
  %61 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %62 = load float*, float** %61, align 8
  %63 = icmp eq float* %62, null
  %64 = bitcast float* %62 to i8*
  br i1 %63, label %71, label %65, !prof !2

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %65
  store i32 0, i32* %66, align 4
  br label %70

70:                                               ; preds = %69, %65
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #11
  store float* null, float** %61, align 8
  br label %71

71:                                               ; preds = %60, %70
  %72 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %73 = load float*, float** %72, align 8
  %74 = icmp eq float* %73, null
  %75 = bitcast float* %73 to i8*
  br i1 %74, label %82, label %76, !prof !2

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !3

80:                                               ; preds = %76
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %76
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %75) #11
  store float* null, float** %72, align 8
  br label %82

82:                                               ; preds = %71, %81
  %83 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 4
  %84 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.WTF::String"*, %"class.WTF::String"** %84, align 8
  %86 = icmp eq %"class.WTF::String"* %85, null
  br i1 %86, label %121, label %87, !prof !2

87:                                               ; preds = %82
  %88 = bitcast %"class.WTF::String"* %85 to i8*
  %89 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %119, label %92, !prof !3

92:                                               ; preds = %87
  %93 = zext i32 %90 to i64
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %85, i64 %93
  br label %95

95:                                               ; preds = %113, %92
  %96 = phi %"class.WTF::String"* [ %114, %113 ], [ %85, %92 ]
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #11
  br label %113

113:                                              ; preds = %112, %109, %95
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %115 = icmp eq %"class.WTF::String"* %114, %94
  br i1 %115, label %116, label %95

116:                                              ; preds = %113
  store i32 0, i32* %89, align 4
  %117 = bitcast %"class.WTF::Vector.59"* %83 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %87
  %120 = phi i8* [ %118, %116 ], [ %88, %87 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %120) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %84, align 8
  br label %121

121:                                              ; preds = %82, %119
  %122 = bitcast %"class.blink::SVGAnimationElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElementD2Ev(%"class.blink::SVGSMILElement"* %122) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElementD0Ev(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [183 x i8*], [3 x i8*], [3 x i8*] }, { [183 x i8*], [3 x i8*], [3 x i8*] }* @_ZTVN5blink17SVGAnimateElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* %5) #11
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElementD2Ev(%"class.blink::SVGAnimationElement"* %6) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SVGAnimateElement43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::SVGAnimateElement"* nocapture readnone, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.59", align 8
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kFromAttrE, align 8
  %5 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %6, %8
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names7kToAttrE, align 8
  %12 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %12, align 8
  %14 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %6, %13
  br i1 %14, label %15, label %19

15:                                               ; preds = %10, %2
  %16 = tail call zeroext i1 @_ZN5blink7Element29AttributeValueIsJavaScriptURLERKNS_9AttributeE(%"class.blink::Attribute"* dereferenceable(16) %1) #11
  br i1 %16, label %86, label %17

17:                                               ; preds = %15
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %5, align 8
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %18, %17 ], [ %6, %10 ]
  %21 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kValuesAttrE, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %21, i64 0, i32 0, i32 0
  %23 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %22, align 8
  %24 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %20, %23
  br i1 %24, label %25, label %85

25:                                               ; preds = %19
  %26 = bitcast %"class.WTF::Vector.59"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #11
  %27 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %3, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::Vector.59", %"class.WTF::Vector.59"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 0, i64 16, i1 false) #11
  %29 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1, i64 0, i32 1, i32 0
  %30 = call zeroext i1 @_ZN5blink19SVGAnimationElement11ParseValuesERKN3WTF6StringERNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8) %29, %"class.WTF::Vector.59"* nonnull dereferenceable(16) %3) #11
  br i1 %30, label %31, label %43

31:                                               ; preds = %25
  %32 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  %33 = load i32, i32* %28, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %46, label %39

37:                                               ; preds = %39
  %38 = icmp eq %"class.WTF::String"* %42, %35
  br i1 %38, label %43, label %39

39:                                               ; preds = %31, %37
  %40 = phi %"class.WTF::String"* [ %42, %37 ], [ %32, %31 ]
  %41 = call zeroext i1 @_ZN5blink20ProtocolIsJavaScriptERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %40) #11
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 1
  br i1 %41, label %43, label %37

43:                                               ; preds = %39, %37, %25
  %44 = phi i32 [ 1, %25 ], [ 1, %39 ], [ 0, %37 ]
  %45 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  br label %46

46:                                               ; preds = %43, %31
  %47 = phi %"class.WTF::String"* [ %45, %43 ], [ %32, %31 ]
  %48 = phi i32 [ %44, %43 ], [ 0, %31 ]
  %49 = icmp eq %"class.WTF::String"* %47, null
  br i1 %49, label %83, label %50, !prof !2

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::String"* %47 to i8*
  %52 = load i32, i32* %28, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %81, label %54, !prof !3

54:                                               ; preds = %50
  %55 = zext i32 %52 to i64
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 %55
  br label %57

57:                                               ; preds = %75, %54
  %58 = phi %"class.WTF::String"* [ %76, %75 ], [ %47, %54 ]
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %75, label %62

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #11
  br label %75

75:                                               ; preds = %74, %71, %57
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %58, i64 1
  %77 = icmp eq %"class.WTF::String"* %76, %56
  br i1 %77, label %78, label %57

78:                                               ; preds = %75
  store i32 0, i32* %28, align 4
  %79 = bitcast %"class.WTF::Vector.59"* %3 to i8**
  %80 = load i8*, i8** %79, align 8
  br label %81

81:                                               ; preds = %78, %50
  %82 = phi i8* [ %80, %78 ], [ %51, %50 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %82) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %27, align 8
  br label %83

83:                                               ; preds = %46, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  %84 = icmp eq i32 %48, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %83, %19
  br label %86

86:                                               ; preds = %15, %83, %85
  %87 = phi i1 [ false, %85 ], [ true, %83 ], [ true, %15 ]
  ret i1 %87
}

declare zeroext i1 @_ZN5blink7Element29AttributeValueIsJavaScriptURLERKNS_9AttributeE(%"class.blink::Attribute"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN5blink19SVGAnimationElement11ParseValuesERKN3WTF6StringERNS1_6VectorIS2_Lj0ENS1_18PartitionAllocatorEEE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.59"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink20ProtocolIsJavaScriptERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17SVGAnimateElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGAnimateElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGSMILElement"*
  %5 = tail call i32 @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"* %4, %"class.blink::ContainerNode"* dereferenceable(80) %1) #11
  %6 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 256
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %71, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names18kAttributeNameAttrE, align 8
  %14 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %14, align 8
  %16 = icmp eq %"class.blink::ElementData"* %15, null
  br i1 %16, label %67, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::ElementData"* %15 to %"class.blink::UniqueElementData"*
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1, i32 1
  %25 = bitcast %"class.blink::Member.14"* %24 to %"class.blink::Attribute"**
  %26 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %23, i64 0, i32 2, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  br label %34

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 1
  %31 = bitcast %"class.blink::ElementData"* %30 to %"class.blink::Attribute"*
  %32 = lshr i32 %19, 1
  %33 = and i32 %32, 268435455
  br label %34

34:                                               ; preds = %29, %22
  %35 = phi %"class.blink::Attribute"* [ %31, %29 ], [ %26, %22 ]
  %36 = phi i32 [ %33, %29 ], [ %28, %22 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %35, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %67, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %13, i64 0, i32 0, i32 0
  %42 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 3, i32 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %42, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %45

45:                                               ; preds = %60, %40
  %46 = phi %"class.blink::Attribute"* [ %35, %40 ], [ %61, %60 ]
  %47 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %48, %42
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 3, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %52, %53
  br i1 %54, label %55, label %60

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %48, i64 0, i32 4, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %57, %58
  br i1 %59, label %63, label %60

60:                                               ; preds = %55, %50
  %61 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 1
  %62 = icmp eq %"class.blink::Attribute"* %61, %38
  br i1 %62, label %67, label %45

63:                                               ; preds = %55, %45
  %64 = icmp eq %"class.blink::Attribute"* %46, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %46, i64 0, i32 1
  br label %69

67:                                               ; preds = %60, %63, %34, %10
  %68 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  br label %69

69:                                               ; preds = %65, %67
  %70 = phi %"class.WTF::AtomicString"* [ %68, %67 ], [ %66, %65 ]
  call fastcc void @_ZN5blink12_GLOBAL__N_122ConstructQualifiedNameERKNS_10SVGElementERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* nonnull sret %3, %"class.blink::SVGElement"* dereferenceable(168) %12, %"class.WTF::AtomicString"* dereferenceable(8) %70)
  call void @_ZN5blink17SVGAnimateElement16SetAttributeNameERKNS_13QualifiedNameE(%"class.blink::SVGAnimateElement"* %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %3)
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %71

71:                                               ; preds = %2, %69
  ret i32 0
}

declare i32 @_ZN5blink14SVGSMILElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement16SetAttributeNameERKNS_13QualifiedNameE(%"class.blink::SVGAnimateElement"*, %"class.blink::QualifiedName"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %58, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %3) #11
  %11 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0
  %12 = bitcast %"class.blink::MemberBase.75"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2, i32 0
  %14 = bitcast %"class.blink::MemberBase.75"* %13 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3, i32 0
  %16 = bitcast %"class.blink::MemberBase.75"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  %17 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %18 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 16777216
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %25) #11
  br label %26

26:                                               ; preds = %24, %19, %9
  %27 = ptrtoint %"class.blink::QualifiedName::QualifiedNameImpl"* %17 to i64
  %28 = bitcast %"class.blink::QualifiedName"* %3 to i64*
  %29 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  store i64 %27, i64* %28, align 8
  %30 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %29, null
  br i1 %30, label %43, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = and i32 %33, 16777216
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #11
  %38 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  tail call void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"* nonnull %29) #11
  %42 = bitcast %"class.blink::QualifiedName::QualifiedNameImpl"* %29 to i8*
  tail call void @free(i8* %42) #11
  br label %43

43:                                               ; preds = %26, %31, %36, %41
  %44 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %44, align 8
  %46 = icmp eq %"class.blink::SVGElement"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::SVGAnimateElement"* %0 to void (%"class.blink::SVGAnimateElement"*)***
  %49 = load void (%"class.blink::SVGAnimateElement"*)**, void (%"class.blink::SVGAnimateElement"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %49, i64 179
  %51 = load void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %50, align 8
  tail call void %51(%"class.blink::SVGAnimateElement"* %0) #11
  br label %57

52:                                               ; preds = %43
  %53 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %54 = bitcast %"class.blink::Member.78"* %53 to i64*
  store atomic i64 0, i64* %54 monotonic, align 8
  %55 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %56, align 4
  br label %57

57:                                               ; preds = %47, %52
  tail call void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %10, %"class.blink::QualifiedName"* dereferenceable(8) %3) #11
  tail call void @_ZN5blink19SVGAnimationElement25AnimationAttributeChangedEv(%"class.blink::SVGAnimationElement"* %10) #11
  br label %58

58:                                               ; preds = %2, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_122ConstructQualifiedNameERKNS_10SVGElementERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* noalias sret, %"class.blink::SVGElement"* dereferenceable(168), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 {
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca %"class.WTF::AtomicString", align 8
  %6 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %7 = alloca %"class.blink::QualifiedName", align 8
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %2, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %28

15:                                               ; preds = %3, %11
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %18, %"class.blink::QualifiedName::QualifiedNameImpl"** %19, align 8
  %20 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %18, null
  br i1 %20, label %212, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 16777216
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %212

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %18, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %27) #11
  br label %212

28:                                               ; preds = %11
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %32, label %42, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.WTF::StringImpl"* %33 to i8*
  %36 = zext i32 %13 to i64
  %37 = tail call i8* @memchr(i8* %35, i32 58, i64 %36) #12
  %38 = icmp eq i8* %37, null
  %39 = ptrtoint i8* %37 to i64
  %40 = ptrtoint %"class.WTF::StringImpl"* %33 to i64
  %41 = sub i64 %39, %40
  br i1 %38, label %57, label %53

42:                                               ; preds = %28
  %43 = bitcast %"class.WTF::StringImpl"* %33 to i16*
  %44 = zext i32 %13 to i64
  br label %45

45:                                               ; preds = %50, %42
  %46 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %47 = getelementptr inbounds i16, i16* %43, i64 %46
  %48 = load i16, i16* %47, align 2
  %49 = icmp eq i16 %48, 58
  br i1 %49, label %53, label %50

50:                                               ; preds = %45
  %51 = add nuw nsw i64 %46, 1
  %52 = icmp eq i64 %51, %44
  br i1 %52, label %57, label %45

53:                                               ; preds = %45, %34
  %54 = phi i64 [ %41, %34 ], [ %46, %45 ]
  %55 = trunc i64 %54 to i32
  %56 = icmp eq i32 %55, -1
  br i1 %56, label %57, label %59

57:                                               ; preds = %50, %53, %34
  %58 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  tail call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %58, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* dereferenceable(8) %58) #11
  br label %212

59:                                               ; preds = %53
  %60 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #11
  %61 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %62 = bitcast %"class.WTF::AtomicString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %63, align 8
  %64 = bitcast %"class.blink::DummyExceptionStateForTesting"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %66, align 8
  %67 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %67, align 2
  %68 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 1, i32 2
  %69 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %70 = bitcast %"class.WTF::StringImpl"** %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #11
  %71 = bitcast i8** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 36, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0
  %73 = call zeroext i1 @_ZN5blink8Document18ParseQualifiedNameERKN3WTF12AtomicStringERS2_S5_RNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %72) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %74 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %78, label %77

77:                                               ; preds = %59
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %72) #11
  br label %78

78:                                               ; preds = %59, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %79 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = icmp eq i64* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %6, i64 0, i32 0, i32 3
  %84 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %83, align 8
  %85 = bitcast %"class.v8::Isolate"* %84 to %"class.v8::internal::Isolate"*
  %86 = load i64, i64* %80, align 8
  %87 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %85, i64 %86) #11
  %88 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %84) #11
  br i1 %88, label %92, label %89

89:                                               ; preds = %82
  %90 = bitcast i64* %87 to %"class.v8::Value"*
  %91 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %84, %"class.v8::Value"* %90) #11
  br label %92

92:                                               ; preds = %89, %82, %78
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #11
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %64) #11
  br i1 %73, label %122, label %109

109:                                              ; preds = %108
  %110 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %111 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %110, i64 0, i32 0, i32 0
  %112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %112, %"class.blink::QualifiedName::QualifiedNameImpl"** %113, align 8
  %114 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %112, null
  br i1 %114, label %179, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = and i32 %117, 16777216
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %179

120:                                              ; preds = %115
  %121 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %112, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %121) #11
  br label %179

122:                                              ; preds = %108
  %123 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0
  %125 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node18lookupNamespaceURIERKN3WTF6StringE(%"class.blink::Node"* %123, %"class.WTF::String"* nonnull dereferenceable(8) %124) #11
  %126 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %133, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %146

133:                                              ; preds = %122, %129
  %134 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  %135 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %134, i64 0, i32 0, i32 0
  %136 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %136, %"class.blink::QualifiedName::QualifiedNameImpl"** %137, align 8
  %138 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %136, null
  br i1 %138, label %179, label %139

139:                                              ; preds = %133
  %140 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = and i32 %141, 16777216
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %179

144:                                              ; preds = %139
  %145 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %136, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %145) #11
  br label %179

146:                                              ; preds = %129
  %147 = bitcast %"class.blink::QualifiedName"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #11
  %148 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* inttoptr (i64 -6148914691236517206 to %"class.blink::QualifiedName::QualifiedNameImpl"*), %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %149 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  call void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"* nonnull %7, %"class.WTF::AtomicString"* dereferenceable(8) %149, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %5, %"class.WTF::AtomicString"* dereferenceable(8) %125) #11
  %150 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink11xlink_names9kHrefAttrE, align 8
  %151 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %148, align 8
  %152 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %150, i64 0, i32 0, i32 0
  %153 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %152, align 8
  %154 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %151, %153
  br i1 %154, label %155, label %168

155:                                              ; preds = %146
  %156 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names9kHrefAttrE, align 8
  %157 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %156, i64 0, i32 0, i32 0
  %158 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %158, %"class.blink::QualifiedName::QualifiedNameImpl"** %159, align 8
  %160 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %158, null
  br i1 %160, label %178, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 1
  %163 = load i32, i32* %162, align 4
  %164 = and i32 %163, 16777216
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %158, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %167) #11
  br label %178

168:                                              ; preds = %146
  %169 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %0, i64 0, i32 0, i32 0
  store %"class.blink::QualifiedName::QualifiedNameImpl"* %151, %"class.blink::QualifiedName::QualifiedNameImpl"** %169, align 8
  %170 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %151, null
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 1
  %173 = load i32, i32* %172, align 4
  %174 = and i32 %173, 16777216
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %171
  %177 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %151, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %177) #11
  br label %178

178:                                              ; preds = %176, %171, %168, %166, %161, %155
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #11
  br label %179

179:                                              ; preds = %144, %139, %133, %120, %115, %109, %178
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %195, label %182

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #11
  br label %195

195:                                              ; preds = %179, %191, %194
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #11
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #11
  br label %211

211:                                              ; preds = %195, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #11
  br label %212

212:                                              ; preds = %26, %21, %15, %211, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGAnimateElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %2
  %8 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10g_any_nameE, align 8
  tail call void @_ZN5blink17SVGAnimateElement16SetAttributeNameERKNS_13QualifiedNameE(%"class.blink::SVGAnimateElement"* %0, %"class.blink::QualifiedName"* dereferenceable(8) %8)
  br label %9

9:                                                ; preds = %2, %7
  %10 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"* %10, %"class.blink::ContainerNode"* dereferenceable(80) %1) #11
  ret void
}

declare void @_ZN5blink14SVGSMILElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGSMILElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimateElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::QualifiedName", align 8
  %4 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %5 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %4, align 8
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names18kAttributeTypeAttrE, align 8
  %7 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %5, i64 0, i32 0, i32 0
  %8 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %9, align 8
  %11 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %14 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %13, align 8
  tail call void @_ZN5blink17SVGAnimateElement16SetAttributeTypeERKN3WTF12AtomicStringE(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::AtomicString"* dereferenceable(8) %14)
  br label %27

15:                                               ; preds = %2
  %16 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names18kAttributeNameAttrE, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %8, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  %21 = bitcast %"class.blink::QualifiedName"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  %22 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_122ConstructQualifiedNameERKNS_10SVGElementERKN3WTF12AtomicStringE(%"class.blink::QualifiedName"* nonnull sret %3, %"class.blink::SVGElement"* dereferenceable(168) %22, %"class.WTF::AtomicString"* dereferenceable(8) %24)
  call void @_ZN5blink17SVGAnimateElement16SetAttributeNameERKNS_13QualifiedNameE(%"class.blink::SVGAnimateElement"* %0, %"class.blink::QualifiedName"* nonnull dereferenceable(8) %3)
  call void @_ZN5blink13QualifiedNameD1Ev(%"class.blink::QualifiedName"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  br label %27

25:                                               ; preds = %15
  %26 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimationElement"* %26, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #11
  br label %27

27:                                               ; preds = %25, %20, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement16SetAttributeTypeERKN3WTF12AtomicStringE(%"class.blink::SVGAnimateElement"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %12, align 8
  %13 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %14 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %13, i64* %14, align 8
  br label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %21 = bitcast i8** %20 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %21, align 8
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %23

23:                                               ; preds = %15, %11
  %24 = phi i64 [ %22, %15 ], [ %13, %11 ]
  %25 = phi i32 [ %18, %15 ], [ 0, %11 ]
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %25, i32* %26, align 8
  %27 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i8** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %30, align 8
  %31 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #11
  br i1 %31, label %58, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #11
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %37, align 8
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %39 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %38, i64* %39, align 8
  br label %48

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %45 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %46 = bitcast i8** %45 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %46, align 8
  %47 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %48

48:                                               ; preds = %40, %36
  %49 = phi i64 [ %47, %40 ], [ %38, %36 ]
  %50 = phi i32 [ %43, %40 ], [ 0, %36 ]
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #11
  %53 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %49, i64* %53, align 8
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0), i8** %54, align 8
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 3, i32* %55, align 8
  %56 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #11
  %57 = select i1 %56, i32 1, i32 2
  br label %58

58:                                               ; preds = %48, %23
  %59 = phi i32 [ 0, %23 ], [ %57, %48 ]
  %60 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 10
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %86, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  %65 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  call void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %64, %"class.blink::QualifiedName"* dereferenceable(8) %65) #11
  %66 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0
  %67 = bitcast %"class.blink::MemberBase.75"* %66 to i64*
  store atomic i64 0, i64* %67 monotonic, align 8
  %68 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2, i32 0
  %69 = bitcast %"class.blink::MemberBase.75"* %68 to i64*
  store atomic i64 0, i64* %69 monotonic, align 8
  %70 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3, i32 0
  %71 = bitcast %"class.blink::MemberBase.75"* %70 to i64*
  store atomic i64 0, i64* %71 monotonic, align 8
  store i32 %59, i32* %60, align 8
  %72 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %72, align 8
  %74 = icmp eq %"class.blink::SVGElement"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %63
  %76 = bitcast %"class.blink::SVGAnimateElement"* %0 to void (%"class.blink::SVGAnimateElement"*)***
  %77 = load void (%"class.blink::SVGAnimateElement"*)**, void (%"class.blink::SVGAnimateElement"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %77, i64 179
  %79 = load void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %78, align 8
  call void %79(%"class.blink::SVGAnimateElement"* %0) #11
  br label %85

80:                                               ; preds = %63
  %81 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %82 = bitcast %"class.blink::Member.78"* %81 to i64*
  store atomic i64 0, i64* %82 monotonic, align 8
  %83 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %84, align 4
  br label %85

85:                                               ; preds = %75, %80
  call void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %64, %"class.blink::QualifiedName"* dereferenceable(8) %65) #11
  call void @_ZN5blink19SVGAnimationElement25AnimationAttributeChangedEv(%"class.blink::SVGAnimationElement"* %64) #11
  br label %86

86:                                               ; preds = %58, %85
  ret void
}

declare void @_ZN5blink19SVGAnimationElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGAnimationElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement21ResolveTargetPropertyEv(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  %5 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4) #11
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %7 = ptrtoint %"class.blink::SVGAnimatedPropertyBase"* %5 to i64
  %8 = bitcast %"class.blink::Member.78"* %6 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %5 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #11
  %14 = getelementptr inbounds %"class.blink::Member.78", %"class.blink::Member.78"* %6, i64 0, i32 0, i32 0
  %15 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %14, align 8
  br label %16

16:                                               ; preds = %1, %11
  %17 = phi %"class.blink::SVGAnimatedPropertyBase"* [ %5, %1 ], [ %15, %11 ]
  %18 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %17, i64 0, i32 1
  %21 = bitcast i24* %20 to i32*
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 31
  %24 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 %23, i32* %24, align 8
  %25 = load i32, i32* %21, align 8
  %26 = lshr i32 %25, 5
  %27 = and i32 %26, 2047
  %28 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 %27, i32* %28, align 4
  %29 = icmp eq i32 %23, 20
  br i1 %29, label %30, label %50

30:                                               ; preds = %19
  store i32 0, i32* %24, align 8
  store i32 0, i32* %28, align 4
  br label %50

31:                                               ; preds = %16
  %32 = tail call i32 @_ZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %4) #11
  %33 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 %32, i32* %33, align 8
  %34 = icmp eq i32 %32, 0
  br i1 %34, label %47, label %35

35:                                               ; preds = %31
  %36 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %37 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::SVGElement"* %36 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %39 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %39, i64 10
  %41 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %40, align 8
  %42 = tail call %"class.blink::ExecutionContext"* %41(%"class.blink::Node"* %37) #11
  %43 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %44, i64 0, i32 3, i32 0
  %46 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %42, %"class.WTF::String"* dereferenceable(8) %45) #11
  br label %47

47:                                               ; preds = %31, %35
  %48 = phi i32 [ %46, %35 ], [ 0, %31 ]
  %49 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 %48, i32* %49, align 4
  br label %50

50:                                               ; preds = %19, %30, %47
  %51 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %52 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names10kScriptTagE, align 8
  %53 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %51, i64 0, i32 0, i32 0, i32 0
  %54 = icmp eq %"class.blink::SVGElement"* %51, null
  br i1 %54, label %74, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %51, i64 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 48
  %59 = icmp eq i32 %58, 32
  br i1 %59, label %60, label %74

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %52, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 1, i32 2
  %64 = bitcast %"class.blink::Member"* %63 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %65 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %65, i64 0, i32 3, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %62, i64 0, i32 3, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %67, %69
  br i1 %70, label %71, label %74

71:                                               ; preds = %60
  %72 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %73, align 4
  br label %74

74:                                               ; preds = %50, %55, %71, %60
  ret void
}

declare %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN5blink10SVGElement35AnimatedPropertyTypeForCSSAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement19ClearTargetPropertyEv(%"class.blink::SVGAnimateElement"* nocapture) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::Member.78"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %5, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement20UpdateTargetPropertyEv(%"class.blink::SVGAnimateElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::SVGAnimateElement"* %0 to void (%"class.blink::SVGAnimateElement"*)***
  %7 = load void (%"class.blink::SVGAnimateElement"*)**, void (%"class.blink::SVGAnimateElement"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %7, i64 179
  %9 = load void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %8, align 8
  tail call void %9(%"class.blink::SVGAnimateElement"* %0) #11
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %12 = bitcast %"class.blink::Member.78"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 4
  br label %15

15:                                               ; preds = %10, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SVGAnimateElement17HasValidAnimationEv(%"class.blink::SVGAnimateElement"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 10
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  br label %13

13:                                               ; preds = %5, %9, %1
  %14 = phi i1 [ false, %1 ], [ true, %5 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement35CreatePropertyForAttributeAnimationERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %3, align 8
  %5 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %4 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)***
  %6 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %6, i64 3
  %8 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %7, align 8
  %9 = tail call dereferenceable(8) %"class.blink::SVGPropertyBase"* %8(%"class.blink::SVGAnimatedPropertyBase"* %4) #11
  %10 = bitcast %"class.blink::SVGPropertyBase"* %9 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)***
  %11 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %11, i64 2
  %13 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %12, align 8
  %14 = tail call %"class.blink::SVGPropertyBase"* %13(%"class.blink::SVGPropertyBase"* %9, %"class.WTF::String"* dereferenceable(8) %1) #11
  ret %"class.blink::SVGPropertyBase"* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement29CreatePropertyForCSSAnimationERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %93 [
    i32 3, label %5
    i32 9, label %13
    i32 7, label %26
    i32 8, label %35
    i32 17, label %44
  ]

5:                                                ; preds = %2
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #11
  %7 = bitcast i8* %6 to %"class.blink::SVGColorProperty"*
  tail call void @_ZN5blink16SVGColorPropertyC1ERKN3WTF6StringE(%"class.blink::SVGColorProperty"* %7, %"class.WTF::String"* dereferenceable(8) %1) #11
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast i8* %6 to %"class.blink::SVGPropertyBase"*
  br label %93

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #11
  %15 = bitcast i8* %14 to %"class.blink::SVGNumber"*
  tail call void @_ZN5blink9SVGNumberC1Ef(%"class.blink::SVGNumber"* %15, float 0.000000e+00) #11
  %16 = getelementptr inbounds i8, i8* %14, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = bitcast i8* %14 to i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)***
  %21 = load i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)**, i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)*, i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)** %21, i64 10
  %23 = load i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)*, i32 (%"class.blink::SVGNumber"*, %"class.WTF::String"*)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::SVGNumber"* %15, %"class.WTF::String"* dereferenceable(8) %1) #11
  %25 = bitcast i8* %14 to %"class.blink::SVGPropertyBase"*
  br label %93

26:                                               ; preds = %2
  %27 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %28 = bitcast i8* %27 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS_13SVGLengthModeE(%"class.blink::SVGLength"* %28, i32 2) #11
  %29 = getelementptr inbounds i8, i8* %27, i64 -4
  %30 = bitcast i8* %29 to i16*
  %31 = load atomic i16, i16* %30 monotonic, align 2
  %32 = or i16 %31, 1
  store atomic i16 %32, i16* %30 release, align 2
  %33 = tail call i32 @_ZN5blink9SVGLength16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLength"* %28, %"class.WTF::String"* dereferenceable(8) %1) #11
  %34 = bitcast i8* %27 to %"class.blink::SVGPropertyBase"*
  br label %93

35:                                               ; preds = %2
  %36 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #11
  %37 = bitcast i8* %36 to %"class.blink::SVGLengthList"*
  tail call void @_ZN5blink13SVGLengthListC1ENS_13SVGLengthModeE(%"class.blink::SVGLengthList"* %37, i32 2) #11
  %38 = getelementptr inbounds i8, i8* %36, i64 -4
  %39 = bitcast i8* %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = or i16 %40, 1
  store atomic i16 %41, i16* %39 release, align 2
  %42 = tail call i32 @_ZN5blink13SVGLengthList16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLengthList"* %37, %"class.WTF::String"* dereferenceable(8) %1) #11
  %43 = bitcast i8* %36 to %"class.blink::SVGPropertyBase"*
  br label %93

44:                                               ; preds = %2
  %45 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #11
  %46 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink9SVGStringE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 8
  %48 = bitcast i8* %47 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds i8, i8* %45, i64 -4
  %50 = bitcast i8* %49 to i16*
  %51 = load atomic i16, i16* %50 monotonic, align 2
  %52 = or i16 %51, 1
  store atomic i16 %52, i16* %50 release, align 2
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %73, label %56

56:                                               ; preds = %44
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i33
  %65 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %64, i33 1) #11
  %66 = extractvalue { i33, i1 } %65, 1
  %67 = extractvalue { i33, i1 } %65, 0
  %68 = icmp slt i33 %67, 0
  %69 = or i1 %66, %68
  br i1 %69, label %70, label %71, !prof !3

70:                                               ; preds = %61
  tail call void @llvm.trap() #11
  unreachable

71:                                               ; preds = %61
  %72 = trunc i33 %67 to i32
  store i32 %72, i32* %62, align 4
  br label %73

73:                                               ; preds = %71, %56, %44
  %74 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %75 = bitcast i8* %47 to i64*
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %74, i64* %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #11
  br label %91

91:                                               ; preds = %73, %87, %90
  %92 = bitcast i8* %45 to %"class.blink::SVGPropertyBase"*
  br label %93

93:                                               ; preds = %2, %91, %35, %26, %13, %5
  %94 = phi %"class.blink::SVGPropertyBase"* [ %92, %91 ], [ %43, %35 ], [ %34, %26 ], [ %25, %13 ], [ %12, %5 ], [ null, %2 ]
  ret %"class.blink::SVGPropertyBase"* %94
}

declare i32 @_ZN5blink9SVGLength16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLength"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZN5blink13SVGLengthList16SetValueAsStringERKN3WTF6StringE(%"class.blink::SVGLengthList"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement10ParseValueERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* nocapture readonly, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %3, align 8
  %5 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %4 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)***
  %8 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %8, i64 3
  %10 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %9, align 8
  %11 = tail call dereferenceable(8) %"class.blink::SVGPropertyBase"* %10(%"class.blink::SVGAnimatedPropertyBase"* nonnull %4) #11
  %12 = bitcast %"class.blink::SVGPropertyBase"* %11 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)***
  %13 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %13, i64 2
  %15 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGPropertyBase"*, %"class.WTF::String"*)** %14, align 8
  %16 = tail call %"class.blink::SVGPropertyBase"* %15(%"class.blink::SVGPropertyBase"* %11, %"class.WTF::String"* dereferenceable(8) %1) #11
  br label %19

17:                                               ; preds = %2
  %18 = tail call %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement29CreatePropertyForCSSAnimationERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %1)
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi %"class.blink::SVGPropertyBase"* [ %16, %6 ], [ %18, %17 ]
  ret %"class.blink::SVGPropertyBase"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement20AdjustForInheritanceEPNS_15SVGPropertyBaseENS_25AnimatedPropertyValueTypeE(%"class.blink::SVGAnimateElement"* nocapture readonly, %"class.blink::SVGPropertyBase"* readnone, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %6, label %41

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %9) #11
  %11 = icmp eq %"class.blink::ContainerNode"* %10, null
  br i1 %11, label %41, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %10, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 60
  %16 = icmp eq i32 %15, 32
  br i1 %16, label %17, label %41

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::ContainerNode"* %10 to %"class.blink::SVGElement"*
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_123ComputeCSSPropertyValueEPNS_10SVGElementENS_13CSSPropertyIDE(%"class.blink::SVGElement"* nonnull %18, i32 %22)
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %20, align 8
  %24 = call %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement29CreatePropertyForCSSAnimationERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #11
  br label %40

40:                                               ; preds = %17, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %41

41:                                               ; preds = %12, %6, %40, %3
  %42 = phi %"class.blink::SVGPropertyBase"* [ %1, %3 ], [ %24, %40 ], [ %1, %12 ], [ %1, %6 ]
  ret %"class.blink::SVGPropertyBase"* %42
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_123ComputeCSSPropertyValueEPNS_10SVGElementENS_13CSSPropertyIDE(%"class.blink::SVGElement"*, i32) unnamed_addr #0 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"* %8, %"class.blink::Node"* %4) #11
  %9 = tail call %"class.blink::ComputedStyle"* @_ZN5blink10SVGElement24BaseComputedStyleForSMILEv(%"class.blink::SVGElement"* %0) #11
  %10 = icmp eq %"class.blink::ComputedStyle"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #11
  br label %36

12:                                               ; preds = %2
  %13 = tail call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %1) #11
  %14 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = and i32 %15, 1
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %17, label %23, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRareData"**
  %21 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %21, i64 0, i32 1, i32 0, i32 0
  br label %25

23:                                               ; preds = %12
  %24 = bitcast %"class.blink::NodeData"** %18 to %"class.blink::NodeRenderingData"**
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi %"class.blink::NodeRenderingData"** [ %22, %19 ], [ %24, %23 ]
  %27 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %27, i64 0, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  %30 = tail call %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"* %13, %"class.blink::ComputedStyle"* nonnull %9, %"class.blink::LayoutObject"* %29, i1 zeroext false) #11
  %31 = icmp eq %"class.blink::CSSValue"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %30) #11
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %33, %"class.WTF::StringImpl"** %34, align 8
  br label %36

35:                                               ; preds = %25
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i64 0) #11
  br label %36

36:                                               ; preds = %32, %35, %11
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  ret %"class.WTF::StringImpl"* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17SVGAnimateElement23CalculateAnimationValueERNS_18SMILAnimationValueEfj(%"class.blink::SVGAnimateElement"*, %"struct.blink::SMILAnimationValue"* nocapture dereferenceable(56), float, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"struct.blink::SMILAnimationEffectParameters", align 4
  %6 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSetTagE, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = icmp eq %"class.blink::SVGAnimateElement"* %0, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 48
  %13 = icmp eq i32 %12, 32
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %6, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %7, i64 1, i32 2
  %18 = bitcast %"class.blink::Member"* %17 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %19 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %16, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %21, %23
  %25 = select i1 %24, float 1.000000e+00, float %2
  br label %26

26:                                               ; preds = %14, %4, %9
  %27 = phi float [ %2, %9 ], [ %2, %4 ], [ %25, %14 ]
  %28 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  %29 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  %32 = fcmp uge float %27, 5.000000e-01
  %33 = uitofp i1 %32 to float
  %34 = select i1 %31, float %33, float %27
  %35 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %1, i64 0, i32 0
  %36 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3
  %38 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %38, align 8
  %40 = icmp eq %"class.blink::SVGPropertyBase"* %39, null
  %41 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2
  %42 = select i1 %40, %"class.blink::Member.74"* %41, %"class.blink::Member.74"* %37
  %43 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 12
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %51, label %48

48:                                               ; preds = %26
  %49 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0, i32 0
  %50 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %49, align 8
  br label %51

51:                                               ; preds = %26, %48
  %52 = phi %"class.blink::SVGPropertyBase"* [ %50, %48 ], [ %36, %26 ]
  %53 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %41, i64 0, i32 0, i32 0
  %54 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 8
  %56 = load i32, i32* %55, align 8
  %57 = tail call %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement20AdjustForInheritanceEPNS_15SVGPropertyBaseENS_25AnimatedPropertyValueTypeE(%"class.blink::SVGAnimateElement"* %0, %"class.blink::SVGPropertyBase"* %52, i32 %56)
  %58 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 9
  %59 = load i32, i32* %58, align 4
  %60 = tail call %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement20AdjustForInheritanceEPNS_15SVGPropertyBaseENS_25AnimatedPropertyValueTypeE(%"class.blink::SVGAnimateElement"* %0, %"class.blink::SVGPropertyBase"* %54, i32 %59)
  %61 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %62 = load i32, i32* %61, align 8
  switch i32 %62, label %75 [
    i32 2, label %63
    i32 4, label %63
    i32 15, label %63
    i32 17, label %63
    i32 0, label %63
  ]

63:                                               ; preds = %51, %51, %51, %51, %51
  %64 = load i32, i32* %45, align 4
  %65 = icmp eq i32 %64, 1
  %66 = fcmp ogt float %34, 5.000000e-01
  %67 = and i1 %66, %65
  br i1 %67, label %73, label %68

68:                                               ; preds = %63
  %69 = icmp eq i32 %64, 3
  %70 = fcmp oeq float %34, 1.000000e+00
  %71 = or i1 %70, %69
  %72 = select i1 %71, %"class.blink::SVGPropertyBase"* %60, %"class.blink::SVGPropertyBase"* %57
  br label %73

73:                                               ; preds = %63, %68
  %74 = phi %"class.blink::SVGPropertyBase"* [ %72, %68 ], [ %60, %63 ]
  store %"class.blink::SVGPropertyBase"* %74, %"class.blink::SVGPropertyBase"** %35, align 8
  br label %85

75:                                               ; preds = %51
  %76 = getelementptr inbounds %"struct.blink::SMILAnimationEffectParameters", %"struct.blink::SMILAnimationEffectParameters"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 3, i8* nonnull %76) #11
  %77 = tail call i24 @_ZNK5blink19SVGAnimationElement23ComputeEffectParametersEv(%"class.blink::SVGAnimationElement"* %28) #11
  %78 = bitcast %"struct.blink::SMILAnimationEffectParameters"* %5 to i24*
  store i24 %77, i24* %78, align 4
  %79 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %79, align 8
  %81 = bitcast %"class.blink::SVGPropertyBase"* %36 to void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)***
  %82 = load void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)**, void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %82, i64 5
  %84 = load void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, void (%"class.blink::SVGPropertyBase"*, %"struct.blink::SMILAnimationEffectParameters"*, float, i32, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %83, align 8
  call void %84(%"class.blink::SVGPropertyBase"* %36, %"struct.blink::SMILAnimationEffectParameters"* nonnull dereferenceable(3) %5, float %34, i32 %3, %"class.blink::SVGPropertyBase"* %57, %"class.blink::SVGPropertyBase"* %60, %"class.blink::SVGPropertyBase"* %44, %"class.blink::SVGElement"* %80) #11
  call void @llvm.lifetime.end.p0i8(i64 3, i8* nonnull %76) #11
  br label %85

85:                                               ; preds = %75, %73
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17SVGAnimateElement36AnimatedPropertyTypeSupportsAdditionEv(%"class.blink::SVGAnimateElement"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 18
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = trunc i32 %3 to i18
  %7 = lshr i18 98282, %6
  %8 = and i18 %7, 1
  %9 = icmp ne i18 %8, 0
  ret i1 %9

10:                                               ; preds = %1
  ret i1 true
}

declare i24 @_ZNK5blink19SVGAnimationElement23ComputeEffectParametersEv(%"class.blink::SVGAnimationElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SVGAnimateElement31CalculateToAtEndOfDurationValueERKN3WTF6StringE(%"class.blink::SVGAnimateElement"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %24, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)***
  %12 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %12, i64 180
  %14 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %13, align 8
  %15 = tail call %"class.blink::SVGPropertyBase"* %14(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %1) #11
  %16 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3
  %17 = ptrtoint %"class.blink::SVGPropertyBase"* %15 to i64
  %18 = bitcast %"class.blink::Member.74"* %16 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::SVGPropertyBase"* %15 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #11
  br label %24

24:                                               ; preds = %2, %21, %10, %6
  %25 = phi i1 [ false, %6 ], [ true, %10 ], [ true, %21 ], [ false, %2 ]
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SVGAnimateElement24CalculateFromAndToValuesERKN3WTF6StringES4_(%"class.blink::SVGAnimateElement"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)***
  %5 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %5, i64 180
  %7 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %6, align 8
  %8 = tail call %"class.blink::SVGPropertyBase"* %7(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1
  %10 = ptrtoint %"class.blink::SVGPropertyBase"* %8 to i64
  %11 = bitcast %"class.blink::Member.74"* %9 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %3
  %15 = bitcast %"class.blink::SVGPropertyBase"* %8 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #11
  br label %17

17:                                               ; preds = %3, %14
  %18 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  %19 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %1)
  %20 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 8
  store i32 %19, i32* %20, align 8
  %21 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %4, align 8
  %22 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %21, i64 180
  %23 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %22, align 8
  %24 = tail call %"class.blink::SVGPropertyBase"* %23(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %2) #11
  %25 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2
  %26 = ptrtoint %"class.blink::SVGPropertyBase"* %24 to i64
  %27 = bitcast %"class.blink::Member.74"* %25 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = bitcast %"class.blink::SVGPropertyBase"* %24 to i8*
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %31) #11
  br label %33

33:                                               ; preds = %17, %30
  %34 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::QualifiedName"* dereferenceable(8) %18, %"class.WTF::String"* dereferenceable(8) %2)
  %35 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 9
  store i32 %34, i32* %35, align 4
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !4

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit to %"class.WTF::AtomicString"*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i64 7) #11
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit) #11
  br label %9

9:                                                ; preds = %5, %8, %2
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %23, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringEE9s_inherit to %"class.WTF::StringImpl"**), align 8
  %19 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"* nonnull %11) #11
  br i1 %19, label %20, label %23

20:                                               ; preds = %17
  %21 = tail call zeroext i1 @_ZN5blink10SVGElement23IsAnimatableCSSPropertyERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %0) #11
  %22 = zext i1 %21 to i32
  ret i32 %22

23:                                               ; preds = %17, %9, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17SVGAnimateElement24CalculateFromAndByValuesERKN3WTF6StringES4_(%"class.blink::SVGAnimateElement"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 18
  br i1 %6, label %50, label %7

7:                                                ; preds = %50, %3
  %8 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)***
  %9 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %9, i64 180
  %11 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %10, align 8
  %12 = tail call %"class.blink::SVGPropertyBase"* %11(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %1) #11
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1
  %14 = ptrtoint %"class.blink::SVGPropertyBase"* %12 to i64
  %15 = bitcast %"class.blink::Member.74"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::SVGPropertyBase"* %12 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #11
  br label %21

21:                                               ; preds = %7, %18
  %22 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  %23 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::QualifiedName"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %1)
  %24 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 8
  store i32 %23, i32* %24, align 8
  %25 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %8, align 8
  %26 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %25, i64 180
  %27 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %26, align 8
  %28 = tail call %"class.blink::SVGPropertyBase"* %27(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %2) #11
  %29 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2
  %30 = ptrtoint %"class.blink::SVGPropertyBase"* %28 to i64
  %31 = bitcast %"class.blink::Member.74"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %21
  %35 = bitcast %"class.blink::SVGPropertyBase"* %28 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #11
  br label %37

37:                                               ; preds = %21, %34
  %38 = tail call fastcc i32 @_ZN5blink12_GLOBAL__N_117PropertyValueTypeERKNS_13QualifiedNameERKN3WTF6StringE(%"class.blink::QualifiedName"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %2)
  %39 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 9
  store i32 %38, i32* %39, align 4
  %40 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %29, i64 0, i32 0, i32 0
  %41 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Member.74", %"class.blink::Member.74"* %13, i64 0, i32 0, i32 0
  %43 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %45 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %44, align 8
  %46 = bitcast %"class.blink::SVGPropertyBase"* %41 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)***
  %47 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %47, i64 4
  %49 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %48, align 8
  tail call void %49(%"class.blink::SVGPropertyBase"* %41, %"class.blink::SVGPropertyBase"* %43, %"class.blink::SVGElement"* %45) #11
  ret i1 true

50:                                               ; preds = %3
  %51 = lshr i32 163861, %5
  %52 = and i32 %51, 1
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %7, label %54

54:                                               ; preds = %50
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17SVGAnimateElement20CreateAnimationValueEv(%"struct.blink::SMILAnimationValue"* noalias sret, %"class.blink::SVGAnimateElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -1, i64 48, i1 false)
  store %"class.blink::SVGPropertyBase"* null, %"class.blink::SVGPropertyBase"** %4, align 8
  tail call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* %5) #11
  %7 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %1, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %7, align 8
  %9 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.blink::SVGAnimatedPropertyBase"* %8 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)***
  %12 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %12, i64 5
  %14 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimatedPropertyBase"*)** %13, align 8
  %15 = tail call %"class.blink::SVGPropertyBase"* %14(%"class.blink::SVGAnimatedPropertyBase"* nonnull %8) #11
  store %"class.blink::SVGPropertyBase"* %15, %"class.blink::SVGPropertyBase"** %4, align 8
  br label %41

16:                                               ; preds = %2
  %17 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %1, i64 0, i32 7
  %22 = load i32, i32* %21, align 4
  %23 = tail call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_123ComputeCSSPropertyValueEPNS_10SVGElementENS_13CSSPropertyIDE(%"class.blink::SVGElement"* %20, i32 %22)
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %18, align 8
  %24 = call %"class.blink::SVGPropertyBase"* @_ZNK5blink17SVGAnimateElement29CreatePropertyForCSSAnimationERKN3WTF6StringE(%"class.blink::SVGAnimateElement"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  store %"class.blink::SVGPropertyBase"* %24, %"class.blink::SVGPropertyBase"** %4, align 8
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #11
  br label %40

40:                                               ; preds = %16, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %41

41:                                               ; preds = %40, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement19ClearAnimationValueEv(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %55, label %8

8:                                                ; preds = %1
  %9 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink10SVGElement33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElement"* %4) #11
  %10 = load i32, i32* %5, align 4
  %11 = tail call zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"* %9, i32 %10, %"class.WTF::String"* null) #11
  br i1 %11, label %12, label %55

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %4, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::StyleChangeReasonForTracing"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %16 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #11
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !3

33:                                               ; preds = %24
  tail call void @llvm.trap() #11
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %12, %19, %34
  %37 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAnimationE, i64 0, i64 0), i8** %37, align 8
  %38 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %2, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %13, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %2) #11
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #11
  br label %54

54:                                               ; preds = %36, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %55

55:                                               ; preds = %1, %8, %54
  %56 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4, i32 0, i32 0
  %57 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %56, align 8
  %58 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  call void @_ZN5blink10SVGElement22ClearAnimatedAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %4, %"class.blink::QualifiedName"* dereferenceable(8) %60) #11
  br label %61

61:                                               ; preds = %55, %59
  ret void
}

declare %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink10SVGElement33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26MutableCSSPropertyValueSet14RemovePropertyINS_13CSSPropertyIDEEEbT_PN3WTF6StringE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement22ClearAnimatedAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement20ApplyResultsToTargetERKNS_18SMILAnimationValueE(%"class.blink::SVGAnimateElement"*, %"struct.blink::SMILAnimationValue"* nocapture readonly dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %5, align 8
  %7 = getelementptr inbounds %"struct.blink::SMILAnimationValue", %"struct.blink::SMILAnimationValue"* %1, i64 0, i32 0
  %8 = load %"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %95, label %12

12:                                               ; preds = %2
  %13 = tail call %"class.blink::MutableCSSPropertyValueSet"* @_ZN5blink10SVGElement33EnsureAnimatedSMILStylePropertiesEv(%"class.blink::SVGElement"* %6) #11
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.blink::SVGPropertyBase"* %8 to %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)***
  %17 = load %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)** %17, i64 3
  %19 = load %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::SVGPropertyBase"*)** %18, align 8
  %20 = tail call %"class.WTF::StringImpl"* %19(%"class.blink::SVGPropertyBase"* %8) #11
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %15, align 8
  %21 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %6, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %6, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = load i32, i32* %9, align 4
  %27 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %25) #11
  %28 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %27, i64 0, i32 6, i32 11
  %29 = load i32, i32* %28, align 8
  %30 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"* %25) #11
  %31 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %31, align 8
  %33 = call i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"* %13, i32 %26, %"class.WTF::String"* nonnull dereferenceable(8) %3, i1 zeroext false, i32 %29, %"class.blink::StyleSheetContents"* %32) #11
  %34 = and i16 %33, 256
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %78, label %36

36:                                               ; preds = %12
  %37 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %39 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %59, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %59

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = zext i32 %49 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #11
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %47
  call void @llvm.trap() #11
  unreachable

57:                                               ; preds = %47
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %48, align 4
  br label %59

59:                                               ; preds = %36, %42, %57
  %60 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAnimationE, i64 0, i64 0), i8** %60, align 8
  %61 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %61, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %21, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #11
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #11
  br label %77

77:                                               ; preds = %59, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  br label %78

78:                                               ; preds = %12, %77
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #11
  br label %94

94:                                               ; preds = %78, %90, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  br label %95

95:                                               ; preds = %2, %94
  %96 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4, i32 0, i32 0
  %97 = load %"class.blink::SVGAnimatedPropertyBase"*, %"class.blink::SVGAnimatedPropertyBase"** %96, align 8
  %98 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  call void @_ZN5blink10SVGElement20SetAnimatedAttributeERKNS_13QualifiedNameEPNS_15SVGPropertyBaseE(%"class.blink::SVGElement"* %6, %"class.blink::QualifiedName"* dereferenceable(8) %100, %"class.blink::SVGPropertyBase"* %8) #11
  br label %101

101:                                              ; preds = %95, %99
  ret void
}

declare i16 @_ZN5blink26MutableCSSPropertyValueSet11SetPropertyENS_13CSSPropertyIDERKN3WTF6StringEbNS_17SecureContextModeEPNS_18StyleSheetContentsE(%"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, %"class.blink::StyleSheetContents"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

declare dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink8Document12ElementSheetEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement20SetAnimatedAttributeERKNS_13QualifiedNameEPNS_15SVGPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::SVGPropertyBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink17SVGAnimateElement17CalculateDistanceERKN3WTF6StringES4_(%"class.blink::SVGAnimateElement"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)***
  %5 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %5, i64 180
  %7 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %6, align 8
  %8 = tail call %"class.blink::SVGPropertyBase"* %7(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %1) #11
  %9 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)**, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*** %4, align 8
  %10 = getelementptr inbounds %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %9, i64 180
  %11 = load %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)*, %"class.blink::SVGPropertyBase"* (%"class.blink::SVGAnimateElement"*, %"class.WTF::String"*)** %10, align 8
  %12 = tail call %"class.blink::SVGPropertyBase"* %11(%"class.blink::SVGAnimateElement"* %0, %"class.WTF::String"* dereferenceable(8) %2) #11
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %13, align 8
  %15 = bitcast %"class.blink::SVGPropertyBase"* %8 to float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)***
  %16 = load float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)**, float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*** %15, align 8
  %17 = getelementptr inbounds float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %16, i64 6
  %18 = load float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)*, float (%"class.blink::SVGPropertyBase"*, %"class.blink::SVGPropertyBase"*, %"class.blink::SVGElement"*)** %17, align 8
  %19 = tail call float %18(%"class.blink::SVGPropertyBase"* %8, %"class.blink::SVGPropertyBase"* %12, %"class.blink::SVGElement"* %14) #11
  ret float %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement22WillChangeAnimatedTypeEv(%"class.blink::SVGAnimateElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #11
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::MemberBase.75"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2, i32 0
  %7 = bitcast %"class.blink::MemberBase.75"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3, i32 0
  %9 = bitcast %"class.blink::MemberBase.75"* %8 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  ret void
}

declare void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement21DidChangeAnimatedTypeEv(%"class.blink::SVGAnimateElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::SVGAnimateElement"* %0 to void (%"class.blink::SVGAnimateElement"*)***
  %7 = load void (%"class.blink::SVGAnimateElement"*)**, void (%"class.blink::SVGAnimateElement"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %7, i64 179
  %9 = load void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %8, align 8
  tail call void %9(%"class.blink::SVGAnimateElement"* %0) #11
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %12 = bitcast %"class.blink::Member.78"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 4
  br label %15

15:                                               ; preds = %5, %10
  %16 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %16, %"class.blink::QualifiedName"* dereferenceable(8) %17) #11
  ret void
}

declare void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink19SVGAnimationElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimationElement"* %2) #11
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink19SVGAnimationElement19UnregisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %2, %"class.blink::QualifiedName"* dereferenceable(8) %3) #11
  %4 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1, i32 0
  %5 = bitcast %"class.blink::MemberBase.75"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2, i32 0
  %7 = bitcast %"class.blink::MemberBase.75"* %6 to i64*
  store atomic i64 0, i64* %7 monotonic, align 8
  %8 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3, i32 0
  %9 = bitcast %"class.blink::MemberBase.75"* %8 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  ret void
}

declare void @_ZN5blink19SVGAnimationElement25WillChangeAnimationTargetEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17SVGAnimateElement24DidChangeAnimationTargetEv(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::SVGElement"*, %"class.blink::SVGElement"** %2, align 8
  %4 = icmp eq %"class.blink::SVGElement"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::SVGAnimateElement"* %0 to void (%"class.blink::SVGAnimateElement"*)***
  %7 = load void (%"class.blink::SVGAnimateElement"*)**, void (%"class.blink::SVGAnimateElement"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %7, i64 179
  %9 = load void (%"class.blink::SVGAnimateElement"*)*, void (%"class.blink::SVGAnimateElement"*)** %8, align 8
  tail call void %9(%"class.blink::SVGAnimateElement"* %0) #11
  br label %15

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %12 = bitcast %"class.blink::Member.78"* %11 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 7
  store i32 0, i32* %14, align 4
  br label %15

15:                                               ; preds = %5, %10
  %16 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 5
  tail call void @_ZN5blink19SVGAnimationElement17RegisterAnimationERKNS_13QualifiedNameE(%"class.blink::SVGAnimationElement"* %16, %"class.blink::QualifiedName"* dereferenceable(8) %17) #11
  %18 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv(%"class.blink::SVGSMILElement"* %18) #11
  ret void
}

declare void @_ZN5blink14SVGSMILElement24DidChangeAnimationTargetEv(%"class.blink::SVGSMILElement"*) unnamed_addr #1

declare void @_ZN5blink19SVGAnimationElement25AnimationAttributeChangedEv(%"class.blink::SVGAnimationElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17SVGAnimateElement5TraceEPNS_7VisitorE(%"class.blink::SVGAnimateElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.74"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv) #11
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.74"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv) #11
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 3
  %26 = bitcast %"class.blink::Member.74"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv) #11
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 0, i32 4
  %37 = bitcast %"class.blink::Member.78"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %106, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = and i64 %38, -131072
  %43 = inttoptr i64 %42 to i8*
  %44 = getelementptr inbounds i8, i8* %43, i64 4138
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %40
  %48 = getelementptr inbounds i8, i8* %43, i64 4160
  br label %87

49:                                               ; preds = %40
  %50 = getelementptr inbounds i8, i8* %43, i64 4096
  %51 = bitcast i8* %50 to %"class.blink::NormalPage"*
  %52 = getelementptr inbounds i8, i8* %43, i64 4400
  %53 = bitcast i8* %52 to i8**
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %38, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %51, i64 0, i32 2, i32 0, i32 1, i64 %58
  %60 = load atomic i8, i8* %59 acquire, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 2, %62
  %64 = trunc i32 %63 to i8
  %65 = add i8 %64, -1
  %66 = and i8 %65, %60
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %49, %68
  %69 = phi i64 [ %70, %68 ], [ %58, %49 ]
  %70 = add i64 %69, -1
  %71 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %51, i64 0, i32 2, i32 0, i32 1, i64 %70
  %72 = load atomic i8, i8* %71 acquire, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %68, label %74

74:                                               ; preds = %68, %49
  %75 = phi i64 [ %58, %49 ], [ %70, %68 ]
  %76 = phi i8 [ %66, %49 ], [ %72, %68 ]
  %77 = zext i8 %76 to i32
  %78 = tail call i32 @llvm.ctlz.i32(i32 %77, i1 true) #11, !range !5
  %79 = add nsw i32 %78, -24
  %80 = shl i64 %75, 3
  %81 = or i64 %80, 7
  %82 = sext i32 %79 to i64
  %83 = sub i64 %81, %82
  %84 = shl i64 %83, 3
  %85 = load i8*, i8** %53, align 16
  %86 = getelementptr inbounds i8, i8* %85, i64 %84
  br label %87

87:                                               ; preds = %74, %47
  %88 = phi i8* [ %48, %47 ], [ %86, %74 ]
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = getelementptr inbounds i8, i8* %88, i64 4
  %91 = bitcast i8* %90 to i16*
  %92 = load atomic i16, i16* %91 acquire, align 2
  %93 = lshr i16 %92, 2
  %94 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %95 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %94, i64 0, i32 0
  %96 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %95, align 8
  %97 = zext i16 %93 to i64
  %98 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %96, i64 %97
  %99 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %98, align 8
  %100 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %99, i64 0, i32 0
  %101 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %100, align 8
  %102 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %103, i64 5
  %105 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %104, align 8
  tail call void %105(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* %89, void (%"class.blink::Visitor"*, i8*)* %101) #11
  br label %106

106:                                              ; preds = %35, %87
  %107 = bitcast %"class.blink::SVGAnimateElement"* %0 to %"class.blink::SVGSMILElement"*
  tail call void @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"* %107, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink14SVGSMILElement5TraceEPNS_7VisitorE(%"class.blink::SVGSMILElement"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink17SVGAnimateElement5TraceEPNS_7VisitorE(%"class.blink::SVGAnimateElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGAnimateElement", %"class.blink::SVGAnimateElement"* %0, i64 -1, i32 0, i32 4
  %4 = bitcast %"class.WTF::Vector.59"* %3 to %"class.blink::SVGAnimateElement"*
  tail call void @_ZNK5blink17SVGAnimateElement5TraceEPNS_7VisitorE(%"class.blink::SVGAnimateElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #11
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink17SVGAnimateElement18GetWrapperTypeInfoEv(%"class.blink::SVGAnimateElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink17SVGAnimateElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink14SVGSMILElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGSMILElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZNK5blink13ContainerNode11BoundingBoxEv() unnamed_addr

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #11
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.779"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

declare zeroext i1 @_ZNK5blink14SVGSMILElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGSMILElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink10SVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare %"class.blink::LayoutObject"* @_ZN5blink7Element18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Element"*, %"class.blink::ComputedStyle"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14SVGSMILElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGSMILElement"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13SupportsFocusEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink14SVGSMILElement20BuildPendingResourceEv(%"class.blink::SVGSMILElement"*) unnamed_addr #1

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink10SVGElement29LocalCoordinateSpaceTransformENS0_8CTMScopeE(%"class.blink::AffineTransform"* sret, %"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGraphicsElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22IsStructurallyExternalEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19SVGAnimationElement7IsValidEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGAnimationElement", %"class.blink::SVGAnimationElement"* %0, i64 0, i32 0, i32 1
  %3 = tail call zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"* %2) #11
  ret i1 %3
}

declare void @_ZN5blink14SVGSMILElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGSMILElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AffineTransform"* @_ZN5blink10SVGElement22AnimateMotionTransformEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AffineTransform"* null
}

declare zeroext i1 @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink19SVGAnimationElement19UpdateAnimationModeEv(%"class.blink::SVGAnimationElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14SVGSMILElementD2Ev(%"class.blink::SVGSMILElement"*) unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13QualifiedNameC1ERKN3WTF12AtomicStringES4_S4_(%"class.blink::QualifiedName"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN5blink8Document18ParseQualifiedNameERKN3WTF12AtomicStringERS2_S5_RNS_14ExceptionStateE(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node18lookupNamespaceURIERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #7

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink8Document31UpdateStyleAndLayoutTreeForNodeEPKNS_4NodeE(%"class.blink::Document"*, %"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink10SVGElement24BaseComputedStyleForSMILEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink11CSSProperty25CSSValueFromComputedStyleERKNS_13ComputedStyleEPKNS_12LayoutObjectEb(%"class.blink::CSSProperty"*, %"class.blink::ComputedStyle"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #10

declare zeroext i1 @_ZN5blink10SVGElement23IsAnimatableCSSPropertyERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13QualifiedName17QualifiedNameImplD1Ev(%"class.blink::QualifiedName::QualifiedNameImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16SVGColorPropertyC1ERKN3WTF6StringE(%"class.blink::SVGColorProperty"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink9SVGNumberC1Ef(%"class.blink::SVGNumber"*, float) unnamed_addr #1

declare void @_ZN5blink9SVGLengthC1ENS_13SVGLengthModeE(%"class.blink::SVGLength"*, i32) unnamed_addr #1

declare void @_ZN5blink13SVGLengthListC1ENS_13SVGLengthModeE(%"class.blink::SVGLengthList"*, i32) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nofree nounwind }
attributes #11 = { nounwind }
attributes #12 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{i32 24, i32 33}
