; ModuleID = '../../chrome/browser/media/webrtc/desktop_capture_devices_util.cc'
source_filename = "../../chrome/browser/media/webrtc/desktop_capture_devices_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.content::MediaStreamUI" = type { i32 (...)** }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1", %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"*, %"class.std::__1::__compressed_pair.66" }
%"struct.blink::MediaStreamDevice" = type { i32, %"class.std::__1::basic_string", %"struct.media::VideoCaptureControlSupport", i32, %"class.absl::optional", %"class.absl::optional", %"class.std::__1::basic_string", %"class.media::AudioParameters", %"class.absl::optional.25", %"class.absl::optional.61" }
%"struct.media::VideoCaptureControlSupport" = type { i8, i8, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.12 }
%union.anon.12 = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.media::AudioParameters" = type { i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.13", i32, %"class.absl::optional.20" }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.gfx::Point3F"*, %"class.gfx::Point3F"*, %"class.std::__1::__compressed_pair.15" }
%"class.gfx::Point3F" = type { float, float, float }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.gfx::Point3F"* }
%"class.absl::optional.20" = type { %"class.absl::optional_internal::optional_data.21" }
%"class.absl::optional_internal::optional_data.21" = type { %"class.absl::optional_internal::optional_data_base.22" }
%"class.absl::optional_internal::optional_data_base.22" = type { %"class.absl::optional_internal::optional_data_dtor_base.23" }
%"class.absl::optional_internal::optional_data_dtor_base.23" = type { i8, %union.anon.24 }
%union.anon.24 = type { %"struct.media::AudioParameters::HardwareCapabilities" }
%"struct.media::AudioParameters::HardwareCapabilities" = type { i32, i32 }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"class.mojo::StructPtr" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.30" }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.media::mojom::DisplayMediaInformation"* }
%"class.media::mojom::DisplayMediaInformation" = type { i32, i8, i32, %"class.mojo::StructPtr.33" }
%"class.mojo::StructPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.media::mojom::CaptureHandle"* }
%"class.media::mojom::CaptureHandle" = type { %"class.url::Origin", %"class.std::__1::basic_string.42" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.37" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::basic_string.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.45 }
%union.anon.45 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { %"class.base::UnguessableToken" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.blink::MediaStreamDevice"* }
%"struct.content::DesktopMediaID" = type { i32, i64, i64, i8, [3 x i8], %"struct.content::WebContentsMediaCaptureId" }
%"struct.content::WebContentsMediaCaptureId" = type <{ i32, i32, i8, [3 x i8] }>
%class.anon = type { %"class.url::Origin" }
%"class.content::RenderFrameHost" = type { %"class.IPC::Listener", %"class.IPC::Sender" }
%"class.IPC::Listener" = type { i32 (...)** }
%"class.IPC::Sender" = type { i32 (...)** }
%"class.content::RenderProcessHost" = type <{ %"class.IPC::Sender", %"class.IPC::Listener", %"class.base::SupportsUserData.base", [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.149" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %class.GURL* }
%"class.blink::mojom::CaptureHandleConfig" = type { i8, %"class.std::__1::basic_string.42", i8, %"class.std::__1::vector.155" }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.url::Origin"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.46 }
%struct.anon.46 = type { %"struct.std::__1::__padding.47", i8 }
%"struct.std::__1::__padding.47" = type { [1 x i8] }
%class.TabSharingUI = type { %class.MediaStreamUI }
%class.MediaStreamUI = type { i32 (...)** }
%class.ScreenCaptureNotificationUI = type { %class.MediaStreamUI }
%class.MediaCaptureDevicesDispatcher = type { %"class.content::MediaObserver", %"class.webrtc::MediaStreamDeviceEnumeratorImpl", %"class.std::__1::vector", %"class.std::__1::vector", %"class.base::ObserverList.130", i8, %class.scoped_refptr, %"class.std::__1::vector.141" }
%"class.content::MediaObserver" = type { i32 (...)** }
%"class.webrtc::MediaStreamDeviceEnumeratorImpl" = type { %"class.webrtc::MediaStreamDeviceEnumerator" }
%"class.webrtc::MediaStreamDeviceEnumerator" = type { i32 (...)** }
%"class.base::ObserverList.130" = type <{ %"class.std::__1::vector.131", %"class.base::LinkedList.138", i64, i32, [4 x i8] }>
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.133" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList.138" = type { %"class.base::LinkNode.139" }
%"class.base::LinkNode.139" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr = type { %class.MediaStreamCaptureIndicator* }
%class.MediaStreamCaptureIndicator = type { %"class.StatusIconMenuModel::Delegate", %"class.base::RefCountedThreadSafe", %class.StatusIcon*, %"class.std::__1::unordered_map", %"class.std::__1::vector.109", %"class.base::ObserverList" }
%"class.StatusIconMenuModel::Delegate" = type { i32 (...)** }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.89" }
%"struct.std::__1::__atomic_base.89" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.StatusIcon = type opaque
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.90", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92", %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::vector.109" = type { %"class.std::__1::__vector_base.110" }
%"class.std::__1::__vector_base.110" = type { %"class.content::WebContents"**, %"class.content::WebContents"**, %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.content::WebContents"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.116", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.116" = type { %"class.std::__1::__vector_base.117" }
%"class.std::__1::__vector_base.117" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.125" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.119", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.120" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i8 }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::vector.141" = type { %"class.std::__1::__vector_base.142" }
%"class.std::__1::__vector_base.142" = type { %"class.std::__1::unique_ptr.143"*, %"class.std::__1::unique_ptr.143"*, %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::unique_ptr.143" = type opaque
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::unique_ptr.143"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@.str = private unnamed_addr constant [10 x i8] c"Tab audio\00", align 1
@_ZN5media22AudioDeviceDescription25kLoopbackWithMuteDeviceIdE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"System Audio\00", align 1
@_ZN5media22AudioDeviceDescription22kLoopbackInputDeviceIdE = external constant [0 x i8], align 1
@_ZN8features32kDesktopCaptureTabSharingInfobarE = external global %"struct.base::Feature", align 8

; Function Attrs: nounwind ssp uwtable
define hidden %"class.content::MediaStreamUI"* @_Z27GetDevicesForDesktopCapturePN7content11WebContentsEPNSt3__16vectorIN5blink17MediaStreamDeviceENS2_9allocatorIS5_EEEERKNS_14DesktopMediaIDENS4_5mojom15MediaStreamTypeESE_bbbRKNS2_12basic_stringIDsNS2_11char_traitsIDsEENS6_IDsEEEESL_(%"class.content::WebContents"*, %"class.std::__1::vector"*, %"struct.content::DesktopMediaID"* dereferenceable(40), i32, i32, i1 zeroext, i1 zeroext, i1 zeroext, %"class.std::__1::basic_string.42"* dereferenceable(24), %"class.std::__1::basic_string.42"* dereferenceable(24)) local_unnamed_addr #0 {
  %11 = alloca %"class.mojo::StructPtr.33", align 8
  %12 = alloca %class.anon, align 8
  %13 = alloca %"class.url::Origin", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"struct.blink::MediaStreamDevice", align 8
  %18 = alloca %"struct.content::WebContentsMediaCaptureId", align 4
  %19 = alloca %"struct.blink::MediaStreamDevice", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"struct.blink::MediaStreamDevice", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca %"struct.blink::MediaStreamDevice", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string.42", align 8
  %29 = alloca %"class.std::__1::basic_string.42", align 8
  %30 = alloca %"class.std::__1::basic_string.42", align 8
  %31 = zext i1 %6 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #10
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  call void @_ZNK7content14DesktopMediaID8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %14, %"struct.content::DesktopMediaID"* %2) #10
  %36 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #10
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #10
  %40 = icmp eq %"class.content::WebContents"* %0, null
  %41 = icmp ne i32 %3, 9
  %42 = or i1 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %87

44:                                               ; preds = %10
  %45 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 0
  %46 = load i32, i32* %45, align 8, !noalias !2
  %47 = icmp eq i32 %46, 3
  br i1 %47, label %48, label %86

48:                                               ; preds = %44
  %49 = bitcast %"class.content::WebContents"* %0 to %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)***
  %50 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %49, align 8, !noalias !2
  %51 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %50, i64 10
  %52 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %51, align 8, !noalias !2
  %53 = call %"class.content::RenderFrameHost"* %52(%"class.content::WebContents"* nonnull %0) #10, !noalias !2
  %54 = bitcast %"class.content::RenderFrameHost"* %53 to %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)***
  %55 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)**, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*** %54, align 8, !noalias !2
  %56 = getelementptr inbounds %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %55, i64 14
  %57 = load %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)*, %"class.content::RenderProcessHost"* (%"class.content::RenderFrameHost"*)** %56, align 8, !noalias !2
  %58 = call %"class.content::RenderProcessHost"* %57(%"class.content::RenderFrameHost"* %53) #10, !noalias !2
  %59 = bitcast %"class.content::RenderProcessHost"* %58 to i32 (%"class.content::RenderProcessHost"*)***
  %60 = load i32 (%"class.content::RenderProcessHost"*)**, i32 (%"class.content::RenderProcessHost"*)*** %59, align 8, !noalias !2
  %61 = getelementptr inbounds i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %60, i64 29
  %62 = load i32 (%"class.content::RenderProcessHost"*)*, i32 (%"class.content::RenderProcessHost"*)** %61, align 8, !noalias !2
  %63 = call i32 %62(%"class.content::RenderProcessHost"* %58) #10, !noalias !2
  %64 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 5, i32 0
  %65 = load i32, i32* %64, align 4, !noalias !2
  %66 = icmp eq i32 %63, %65
  br i1 %66, label %67, label %86

67:                                               ; preds = %48
  %68 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %49, align 8, !noalias !2
  %69 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %68, i64 10
  %70 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %69, align 8, !noalias !2
  %71 = call %"class.content::RenderFrameHost"* %70(%"class.content::WebContents"* nonnull %0) #10, !noalias !2
  %72 = bitcast %"class.content::RenderFrameHost"* %71 to i32 (%"class.content::RenderFrameHost"*)***
  %73 = load i32 (%"class.content::RenderFrameHost"*)**, i32 (%"class.content::RenderFrameHost"*)*** %72, align 8, !noalias !2
  %74 = getelementptr inbounds i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %73, i64 9
  %75 = load i32 (%"class.content::RenderFrameHost"*)*, i32 (%"class.content::RenderFrameHost"*)** %74, align 8, !noalias !2
  %76 = call i32 %75(%"class.content::RenderFrameHost"* %71) #10, !noalias !2
  %77 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 5, i32 1
  %78 = load i32, i32* %77, align 4, !noalias !2
  %79 = icmp eq i32 %76, %78
  br i1 %79, label %80, label %86

80:                                               ; preds = %67
  %81 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  store i8 8, i8* %82, align 1, !alias.scope !2
  %83 = bitcast %"class.std::__1::basic_string"* %16 to i64*
  store i64 3275364210996049251, i64* %83, align 8, !alias.scope !2
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast i64* %84 to i8*
  store i8 0, i8* %85, align 8, !alias.scope !2
  br label %87

86:                                               ; preds = %67, %48, %44
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #10, !alias.scope !2
  br label %87

87:                                               ; preds = %43, %80, %86
  %88 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1, !noalias !5
  %91 = icmp slt i8 %90, 0
  %92 = load i8*, i8** %33, align 8, !noalias !5
  %93 = load i64, i64* %34, align 8, !noalias !5
  %94 = zext i8 %90 to i64
  %95 = select i1 %91, i8* %92, i8* %32
  %96 = select i1 %91, i64 %93, i64 %94
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %16, i8* %95, i64 %96) #10, !noalias !5
  %98 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %36, i8* align 8 %98, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 24, i1 false) #10, !noalias !5
  %99 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #11
  br label %106

106:                                              ; preds = %87, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #10
  %107 = bitcast %"struct.blink::MediaStreamDevice"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %107) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 232, i1 false)
  call void @_ZN5blink17MediaStreamDeviceC1ENS_5mojom15MediaStreamTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"struct.blink::MediaStreamDevice"* nonnull %17, i32 %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %14, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %15) #10
  %108 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 2
  %109 = load i64, i64* %108, align 8, !noalias !8
  %110 = icmp ne i64 %109, 0
  %111 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 0
  %112 = load i32, i32* %111, align 8, !noalias !8
  switch i32 %112, label %195 [
    i32 1, label %113
    i32 2, label %115
    i32 3, label %117
  ]

113:                                              ; preds = %106
  %114 = select i1 %110, i32 2, i32 1
  br label %195

115:                                              ; preds = %106
  %116 = select i1 %110, i32 2, i32 1
  br label %195

117:                                              ; preds = %106
  %118 = bitcast %"class.url::Origin"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %118) #10, !noalias !8
  %119 = bitcast %"class.content::WebContents"* %0 to %class.GURL* (%"class.content::WebContents"*)***
  %120 = load %class.GURL* (%"class.content::WebContents"*)**, %class.GURL* (%"class.content::WebContents"*)*** %119, align 8, !noalias !8
  %121 = getelementptr inbounds %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %120, i64 9
  %122 = load %class.GURL* (%"class.content::WebContents"*)*, %class.GURL* (%"class.content::WebContents"*)** %121, align 8, !noalias !8
  %123 = call dereferenceable(120) %class.GURL* %122(%"class.content::WebContents"* %0) #10, !noalias !8
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %13, %class.GURL* dereferenceable(120) %123) #10, !noalias !8
  %124 = bitcast %class.anon* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %124) #10, !noalias !8
  %125 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %126 = load i8, i8* %125, align 8, !range !11, !noalias !12
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %193

128:                                              ; preds = %117
  %129 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 5, i32 0
  %130 = load i32, i32* %129, align 4, !noalias !12
  %131 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 5, i32 1
  %132 = load i32, i32* %131, align 4, !noalias !12
  %133 = call %"class.content::RenderFrameHost"* @_ZN7content15RenderFrameHost6FromIDEii(i32 %130, i32 %132) #10, !noalias !12
  %134 = icmp eq %"class.content::RenderFrameHost"* %133, null
  br i1 %134, label %193, label %135

135:                                              ; preds = %128
  %136 = bitcast %"class.content::RenderFrameHost"* %133 to i1 (%"class.content::RenderFrameHost"*)***
  %137 = load i1 (%"class.content::RenderFrameHost"*)**, i1 (%"class.content::RenderFrameHost"*)*** %136, align 8, !noalias !12
  %138 = getelementptr inbounds i1 (%"class.content::RenderFrameHost"*)*, i1 (%"class.content::RenderFrameHost"*)** %137, i64 59
  %139 = load i1 (%"class.content::RenderFrameHost"*)*, i1 (%"class.content::RenderFrameHost"*)** %138, align 8, !noalias !12
  %140 = call zeroext i1 %139(%"class.content::RenderFrameHost"* nonnull %133) #10, !noalias !12
  br i1 %140, label %141, label %193

141:                                              ; preds = %135
  %142 = call %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"* nonnull %133) #10, !noalias !12
  %143 = icmp eq %"class.content::WebContents"* %142, null
  br i1 %143, label %193, label %144

144:                                              ; preds = %141
  %145 = bitcast %"class.content::WebContents"* %142 to %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)***
  %146 = load %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)**, %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)*** %145, align 8, !noalias !12
  %147 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)*, %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)** %146, i64 54
  %148 = load %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)*, %"class.blink::mojom::CaptureHandleConfig"* (%"class.content::WebContents"*)** %147, align 8, !noalias !12
  %149 = call dereferenceable(64) %"class.blink::mojom::CaptureHandleConfig"* %148(%"class.content::WebContents"* nonnull %142) #10, !noalias !12
  %150 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig", %"class.blink::mojom::CaptureHandleConfig"* %149, i64 0, i32 2
  %151 = load i8, i8* %150, align 8, !range !11, !noalias !12
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %168

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig", %"class.blink::mojom::CaptureHandleConfig"* %149, i64 0, i32 3, i32 0, i32 0
  %155 = load %"class.url::Origin"*, %"class.url::Origin"** %154, align 8, !noalias !12
  %156 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig", %"class.blink::mojom::CaptureHandleConfig"* %149, i64 0, i32 3, i32 0, i32 1
  %157 = load %"class.url::Origin"*, %"class.url::Origin"** %156, align 8, !noalias !12
  %158 = getelementptr inbounds %class.anon, %class.anon* %12, i64 0, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* nonnull %158, %"class.url::Origin"* nonnull dereferenceable(80) %13) #10, !noalias !12
  %159 = icmp eq %"class.url::Origin"* %155, %157
  br i1 %159, label %167, label %162

160:                                              ; preds = %162
  %161 = icmp eq %"class.url::Origin"* %165, %157
  br i1 %161, label %167, label %162

162:                                              ; preds = %153, %160
  %163 = phi %"class.url::Origin"* [ %165, %160 ], [ %155, %153 ]
  %164 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %158, %"class.url::Origin"* dereferenceable(80) %163) #10, !noalias !12
  %165 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %163, i64 1
  br i1 %164, label %166, label %160

166:                                              ; preds = %162
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %158) #10, !noalias !12
  br label %168

167:                                              ; preds = %160, %153
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %158) #10, !noalias !12
  br label %193

168:                                              ; preds = %166, %144
  %169 = call i8* @_Znwm(i64 104) #11, !noalias !15
  %170 = bitcast i8* %169 to %"class.media::mojom::CaptureHandle"*
  call void @_ZN5media5mojom13CaptureHandleC1Ev(%"class.media::mojom::CaptureHandle"* nonnull %170) #10, !noalias !15
  %171 = ptrtoint i8* %169 to i64
  %172 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig", %"class.blink::mojom::CaptureHandleConfig"* %149, i64 0, i32 0
  %173 = load i8, i8* %172, align 8, !range !11, !noalias !12
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %188, label %175

175:                                              ; preds = %168
  %176 = bitcast %"class.content::WebContents"* %142 to %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)***
  %177 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)**, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*** %176, align 8, !noalias !12
  %178 = getelementptr inbounds %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %177, i64 10
  %179 = load %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)*, %"class.content::RenderFrameHost"* (%"class.content::WebContents"*)** %178, align 8, !noalias !12
  %180 = call %"class.content::RenderFrameHost"* %179(%"class.content::WebContents"* nonnull %142) #10, !noalias !12
  %181 = bitcast %"class.content::RenderFrameHost"* %180 to %"class.url::Origin"* (%"class.content::RenderFrameHost"*)***
  %182 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)**, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*** %181, align 8, !noalias !12
  %183 = getelementptr inbounds %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %182, i64 36
  %184 = load %"class.url::Origin"* (%"class.content::RenderFrameHost"*)*, %"class.url::Origin"* (%"class.content::RenderFrameHost"*)** %183, align 8, !noalias !12
  %185 = call dereferenceable(80) %"class.url::Origin"* %184(%"class.content::RenderFrameHost"* %180) #10, !noalias !12
  %186 = bitcast i8* %169 to %"class.url::Origin"*
  %187 = call dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* nonnull %186, %"class.url::Origin"* dereferenceable(80) %185) #10, !noalias !12
  br label %188

188:                                              ; preds = %175, %168
  %189 = getelementptr inbounds %"class.blink::mojom::CaptureHandleConfig", %"class.blink::mojom::CaptureHandleConfig"* %149, i64 0, i32 1
  %190 = getelementptr inbounds i8, i8* %169, i64 80
  %191 = bitcast i8* %190 to %"class.std::__1::basic_string.42"*
  %192 = call dereferenceable(24) %"class.std::__1::basic_string.42"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.42"* %191, %"class.std::__1::basic_string.42"* dereferenceable(24) %189) #10, !noalias !12
  br label %193

193:                                              ; preds = %188, %167, %141, %135, %128, %117
  %194 = phi i64 [ 0, %167 ], [ %171, %188 ], [ 0, %117 ], [ 0, %135 ], [ 0, %128 ], [ 0, %141 ]
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %124) #10, !noalias !8
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %13) #10, !noalias !8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %118) #10, !noalias !8
  br label %195

195:                                              ; preds = %193, %115, %113, %106
  %196 = phi i32 [ 0, %106 ], [ 3, %193 ], [ 1, %115 ], [ 0, %113 ]
  %197 = phi i32 [ 0, %106 ], [ 2, %193 ], [ %116, %115 ], [ %114, %113 ]
  %198 = phi i64 [ 0, %106 ], [ %194, %193 ], [ 0, %115 ], [ 0, %113 ]
  %199 = bitcast %"class.mojo::StructPtr.33"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %199) #10, !noalias !18
  %200 = call i8* @_Znwm(i64 24) #11, !noalias !18
  %201 = bitcast i8* %200 to %"class.media::mojom::DisplayMediaInformation"*
  %202 = bitcast %"class.mojo::StructPtr.33"* %11 to i64*
  %203 = getelementptr inbounds %"class.mojo::StructPtr.33", %"class.mojo::StructPtr.33"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %198, i64* %202, align 8, !noalias !18
  call void @_ZN5media5mojom23DisplayMediaInformationC1ENS0_25DisplayCaptureSurfaceTypeEbNS0_17CursorCaptureTypeEN4mojo9StructPtrINS0_13CaptureHandleEEE(%"class.media::mojom::DisplayMediaInformation"* nonnull %201, i32 %196, i1 zeroext true, i32 %197, %"class.mojo::StructPtr.33"* nonnull %11) #10, !noalias !18
  %204 = ptrtoint i8* %200 to i64
  %205 = load %"class.media::mojom::CaptureHandle"*, %"class.media::mojom::CaptureHandle"** %203, align 8, !noalias !18
  store %"class.media::mojom::CaptureHandle"* null, %"class.media::mojom::CaptureHandle"** %203, align 8, !noalias !18
  %206 = icmp eq %"class.media::mojom::CaptureHandle"* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %195
  call void @_ZN5media5mojom13CaptureHandleD1Ev(%"class.media::mojom::CaptureHandle"* nonnull %205) #10, !noalias !18
  %208 = bitcast %"class.media::mojom::CaptureHandle"* %205 to i8*
  call void @_ZdlPv(i8* %208) #11, !noalias !18
  br label %209

209:                                              ; preds = %195, %207
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %199) #10, !noalias !18
  %210 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %17, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %211 = load i8, i8* %210, align 8, !range !11
  %212 = icmp eq i8 %211, 0
  %213 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %17, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %212, label %220, label %214

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %213, i64 0, i32 0, i32 0, i32 0, i32 0
  %216 = load %"class.media::mojom::DisplayMediaInformation"*, %"class.media::mojom::DisplayMediaInformation"** %215, align 8
  store %"class.media::mojom::DisplayMediaInformation"* null, %"class.media::mojom::DisplayMediaInformation"** %215, align 8
  %217 = icmp eq %"class.media::mojom::DisplayMediaInformation"* %216, null
  br i1 %217, label %218, label %222

218:                                              ; preds = %214
  %219 = bitcast %"class.mojo::StructPtr"* %213 to i64*
  store i64 %204, i64* %219, align 8
  br label %229

220:                                              ; preds = %209
  %221 = bitcast %"class.mojo::StructPtr"* %213 to i64*
  store i64 %204, i64* %221, align 8
  store i8 1, i8* %210, align 8
  br label %229

222:                                              ; preds = %214
  call void @_ZN5media5mojom23DisplayMediaInformationD1Ev(%"class.media::mojom::DisplayMediaInformation"* nonnull %216) #10
  %223 = bitcast %"class.media::mojom::DisplayMediaInformation"* %216 to i8*
  call void @_ZdlPv(i8* %223) #11
  %224 = bitcast %"class.mojo::StructPtr"* %213 to i64*
  %225 = load %"class.media::mojom::DisplayMediaInformation"*, %"class.media::mojom::DisplayMediaInformation"** %215, align 8
  store i64 %204, i64* %224, align 8
  %226 = icmp eq %"class.media::mojom::DisplayMediaInformation"* %225, null
  br i1 %226, label %229, label %227

227:                                              ; preds = %222
  call void @_ZN5media5mojom23DisplayMediaInformationD1Ev(%"class.media::mojom::DisplayMediaInformation"* nonnull %225) #10
  %228 = bitcast %"class.media::mojom::DisplayMediaInformation"* %225 to i8*
  call void @_ZdlPv(i8* %228) #11
  br label %229

229:                                              ; preds = %218, %220, %222, %227
  %230 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %231 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %230, align 8
  %232 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %233 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %232, align 8
  %234 = icmp eq %"struct.blink::MediaStreamDevice"* %231, %233
  br i1 %234, label %239, label %235

235:                                              ; preds = %229
  call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %231, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %17) #10
  %236 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %231, i64 1
  %237 = ptrtoint %"struct.blink::MediaStreamDevice"* %236 to i64
  %238 = bitcast %"struct.blink::MediaStreamDevice"** %230 to i64*
  store i64 %237, i64* %238, align 8
  br label %240

239:                                              ; preds = %229
  call void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"* %1, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %17) #10
  br label %240

240:                                              ; preds = %235, %239
  br i1 %5, label %241, label %387

241:                                              ; preds = %240
  %242 = load i32, i32* %111, align 8
  %243 = icmp eq i32 %242, 3
  br i1 %243, label %244, label %278

244:                                              ; preds = %241
  %245 = bitcast %"struct.content::WebContentsMediaCaptureId"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %245) #10
  %246 = getelementptr inbounds %"struct.content::WebContentsMediaCaptureId", %"struct.content::WebContentsMediaCaptureId"* %18, i64 0, i32 2
  %247 = getelementptr inbounds %"struct.content::DesktopMediaID", %"struct.content::DesktopMediaID"* %2, i64 0, i32 5
  %248 = bitcast %"struct.content::WebContentsMediaCaptureId"* %247 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %245, i8* align 4 %248, i64 12, i1 false)
  store i8 %31, i8* %246, align 4
  %249 = bitcast %"struct.blink::MediaStreamDevice"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %249) #10
  %250 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %250) #10
  call void @_ZNK7content25WebContentsMediaCaptureId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %20, %"struct.content::WebContentsMediaCaptureId"* nonnull %18) #10
  %251 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %251) #10
  %252 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %253 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %252, i64 0, i32 1, i32 0
  store i8 9, i8* %253, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %251, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i64 9, i1 false) #10
  %254 = getelementptr inbounds i8, i8* %251, i64 9
  store i8 0, i8* %254, align 1
  call void @_ZN5blink17MediaStreamDeviceC1ENS_5mojom15MediaStreamTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"struct.blink::MediaStreamDevice"* nonnull %19, i32 %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #10
  %255 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %230, align 8
  %256 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %232, align 8
  %257 = icmp ult %"struct.blink::MediaStreamDevice"* %255, %256
  br i1 %257, label %258, label %262

258:                                              ; preds = %244
  call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %255, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %19) #10
  %259 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %255, i64 1
  %260 = ptrtoint %"struct.blink::MediaStreamDevice"* %259 to i64
  %261 = bitcast %"struct.blink::MediaStreamDevice"** %230 to i64*
  store i64 %260, i64* %261, align 8
  br label %263

262:                                              ; preds = %244
  call void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %1, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %19) #10
  br label %263

263:                                              ; preds = %258, %262
  call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* nonnull %19) #10
  %264 = load i8, i8* %253, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %263
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i8*, i8** %267, align 8
  call void @_ZdlPv(i8* %268) #11
  br label %269

269:                                              ; preds = %263, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %251) #10
  %270 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %271 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %270, i64 0, i32 1, i32 0
  %272 = load i8, i8* %271, align 1
  %273 = icmp slt i8 %272, 0
  br i1 %273, label %274, label %277

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load i8*, i8** %275, align 8
  call void @_ZdlPv(i8* %276) #11
  br label %277

277:                                              ; preds = %269, %274
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %250) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %249) #10
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %245) #10
  br label %387

278:                                              ; preds = %241
  br i1 %6, label %279, label %333

279:                                              ; preds = %278
  %280 = bitcast %"struct.blink::MediaStreamDevice"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %280) #10
  %281 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %281) #10
  %282 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5media22AudioDeviceDescription25kLoopbackWithMuteDeviceIdE, i64 0, i64 0)) #10
  %283 = icmp ugt i64 %282, -17
  br i1 %283, label %284, label %286

284:                                              ; preds = %279
  %285 = bitcast %"class.std::__1::basic_string"* %23 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %285) #12
  unreachable

286:                                              ; preds = %279
  %287 = icmp ult i64 %282, 23
  br i1 %287, label %296, label %288

288:                                              ; preds = %286
  %289 = add nuw i64 %282, 16
  %290 = and i64 %289, -16
  %291 = call i8* @_Znwm(i64 %290) #11
  %292 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %291, i8** %292, align 8
  %293 = or i64 %290, -9223372036854775808
  %294 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %293, i64* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %282, i64* %295, align 8
  br label %301

296:                                              ; preds = %286
  %297 = trunc i64 %282 to i8
  %298 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %299 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %298, i64 0, i32 1, i32 0
  store i8 %297, i8* %299, align 1
  %300 = icmp eq i64 %282, 0
  br i1 %300, label %303, label %301

301:                                              ; preds = %296, %288
  %302 = phi i8* [ %291, %288 ], [ %281, %296 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %302, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5media22AudioDeviceDescription25kLoopbackWithMuteDeviceIdE, i64 0, i64 0), i64 %282, i1 false) #10
  br label %303

303:                                              ; preds = %296, %301
  %304 = phi i8* [ %281, %296 ], [ %302, %301 ]
  %305 = getelementptr inbounds i8, i8* %304, i64 %282
  store i8 0, i8* %305, align 1
  %306 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %306) #10
  %307 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  store i8 12, i8* %308, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %306, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #10
  %309 = getelementptr inbounds i8, i8* %306, i64 12
  store i8 0, i8* %309, align 4
  call void @_ZN5blink17MediaStreamDeviceC1ENS_5mojom15MediaStreamTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"struct.blink::MediaStreamDevice"* nonnull %22, i32 %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %23, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %24) #10
  %310 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %230, align 8
  %311 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %232, align 8
  %312 = icmp ult %"struct.blink::MediaStreamDevice"* %310, %311
  br i1 %312, label %313, label %317

313:                                              ; preds = %303
  call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %310, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %22) #10
  %314 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %310, i64 1
  %315 = ptrtoint %"struct.blink::MediaStreamDevice"* %314 to i64
  %316 = bitcast %"struct.blink::MediaStreamDevice"** %230 to i64*
  store i64 %315, i64* %316, align 8
  br label %318

317:                                              ; preds = %303
  call void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %1, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %22) #10
  br label %318

318:                                              ; preds = %313, %317
  call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* nonnull %22) #10
  %319 = load i8, i8* %308, align 1
  %320 = icmp slt i8 %319, 0
  br i1 %320, label %321, label %324

321:                                              ; preds = %318
  %322 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load i8*, i8** %322, align 8
  call void @_ZdlPv(i8* %323) #11
  br label %324

324:                                              ; preds = %318, %321
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %306) #10
  %325 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %326 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %325, i64 0, i32 1, i32 0
  %327 = load i8, i8* %326, align 1
  %328 = icmp slt i8 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %331 = load i8*, i8** %330, align 8
  call void @_ZdlPv(i8* %331) #11
  br label %332

332:                                              ; preds = %324, %329
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %281) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %280) #10
  br label %387

333:                                              ; preds = %278
  %334 = bitcast %"struct.blink::MediaStreamDevice"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %334) #10
  %335 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %335) #10
  %336 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5media22AudioDeviceDescription22kLoopbackInputDeviceIdE, i64 0, i64 0)) #10
  %337 = icmp ugt i64 %336, -17
  br i1 %337, label %338, label %340

338:                                              ; preds = %333
  %339 = bitcast %"class.std::__1::basic_string"* %26 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %339) #12
  unreachable

340:                                              ; preds = %333
  %341 = icmp ult i64 %336, 23
  br i1 %341, label %350, label %342

342:                                              ; preds = %340
  %343 = add nuw i64 %336, 16
  %344 = and i64 %343, -16
  %345 = call i8* @_Znwm(i64 %344) #11
  %346 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %345, i8** %346, align 8
  %347 = or i64 %344, -9223372036854775808
  %348 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %347, i64* %348, align 8
  %349 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %336, i64* %349, align 8
  br label %355

350:                                              ; preds = %340
  %351 = trunc i64 %336 to i8
  %352 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %353 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %352, i64 0, i32 1, i32 0
  store i8 %351, i8* %353, align 1
  %354 = icmp eq i64 %336, 0
  br i1 %354, label %357, label %355

355:                                              ; preds = %350, %342
  %356 = phi i8* [ %345, %342 ], [ %335, %350 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %356, i8* align 1 getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5media22AudioDeviceDescription22kLoopbackInputDeviceIdE, i64 0, i64 0), i64 %336, i1 false) #10
  br label %357

357:                                              ; preds = %350, %355
  %358 = phi i8* [ %335, %350 ], [ %356, %355 ]
  %359 = getelementptr inbounds i8, i8* %358, i64 %336
  store i8 0, i8* %359, align 1
  %360 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %360) #10
  %361 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %362 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %361, i64 0, i32 1, i32 0
  store i8 12, i8* %362, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %360, i8* align 1 getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12, i1 false) #10
  %363 = getelementptr inbounds i8, i8* %360, i64 12
  store i8 0, i8* %363, align 4
  call void @_ZN5blink17MediaStreamDeviceC1ENS_5mojom15MediaStreamTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"struct.blink::MediaStreamDevice"* nonnull %25, i32 %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %26, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %27) #10
  %364 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %230, align 8
  %365 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %232, align 8
  %366 = icmp ult %"struct.blink::MediaStreamDevice"* %364, %365
  br i1 %366, label %367, label %371

367:                                              ; preds = %357
  call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %364, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %25) #10
  %368 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %364, i64 1
  %369 = ptrtoint %"struct.blink::MediaStreamDevice"* %368 to i64
  %370 = bitcast %"struct.blink::MediaStreamDevice"** %230 to i64*
  store i64 %369, i64* %370, align 8
  br label %372

371:                                              ; preds = %357
  call void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"* %1, %"struct.blink::MediaStreamDevice"* nonnull dereferenceable(232) %25) #10
  br label %372

372:                                              ; preds = %367, %371
  call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* nonnull %25) #10
  %373 = load i8, i8* %362, align 1
  %374 = icmp slt i8 %373, 0
  br i1 %374, label %375, label %378

375:                                              ; preds = %372
  %376 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load i8*, i8** %376, align 8
  call void @_ZdlPv(i8* %377) #11
  br label %378

378:                                              ; preds = %372, %375
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %360) #10
  %379 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %380 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %379, i64 0, i32 1, i32 0
  %381 = load i8, i8* %380, align 1
  %382 = icmp slt i8 %381, 0
  br i1 %382, label %383, label %386

383:                                              ; preds = %378
  %384 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load i8*, i8** %384, align 8
  call void @_ZdlPv(i8* %385) #11
  br label %386

386:                                              ; preds = %378, %383
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %335) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %334) #10
  br label %387

387:                                              ; preds = %277, %386, %332, %240
  br i1 %7, label %390, label %388

388:                                              ; preds = %387
  %389 = bitcast %"class.std::__1::basic_string.42"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  br label %663

390:                                              ; preds = %387
  %391 = load i32, i32* %111, align 8
  %392 = icmp eq i32 %391, 3
  br i1 %392, label %393, label %590

393:                                              ; preds = %390
  %394 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features32kDesktopCaptureTabSharingInfobarE) #10
  br i1 %394, label %395, label %588

395:                                              ; preds = %393
  %396 = bitcast %"class.std::__1::basic_string.42"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %397 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %396, i64 0, i32 1, i32 1
  %398 = load i8, i8* %397, align 1
  %399 = icmp slt i8 %398, 0
  br i1 %399, label %403, label %400

400:                                              ; preds = %395
  %401 = bitcast %"class.std::__1::basic_string.42"* %28 to i8*
  %402 = bitcast %"class.std::__1::basic_string.42"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %401, i8* align 8 %402, i64 24, i1 false) #10
  br label %578

403:                                              ; preds = %395
  %404 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %405 = load i16*, i16** %404, align 8
  %406 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %407 = load i64, i64* %406, align 8
  %408 = icmp ult i64 %407, 11
  br i1 %408, label %409, label %414

409:                                              ; preds = %403
  %410 = bitcast %"class.std::__1::basic_string.42"* %28 to i16*
  %411 = trunc i64 %407 to i8
  %412 = bitcast %"class.std::__1::basic_string.42"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %413 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %412, i64 0, i32 1, i32 1
  store i8 %411, i8* %413, align 1
  br label %431

414:                                              ; preds = %403
  %415 = icmp ugt i64 %407, 9223372036854775791
  br i1 %415, label %416, label %418

416:                                              ; preds = %414
  %417 = bitcast %"class.std::__1::basic_string.42"* %28 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %417) #12
  unreachable

418:                                              ; preds = %414
  %419 = add nuw nsw i64 %407, 8
  %420 = and i64 %419, -8
  %421 = icmp slt i64 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %418
  call void @abort() #12
  unreachable

423:                                              ; preds = %418
  %424 = shl i64 %420, 1
  %425 = call i8* @_Znwm(i64 %424) #11
  %426 = bitcast i8* %425 to i16*
  %427 = bitcast %"class.std::__1::basic_string.42"* %28 to i8**
  store i8* %425, i8** %427, align 8
  %428 = or i64 %420, -9223372036854775808
  %429 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %407, i64* %430, align 8
  br label %431

431:                                              ; preds = %423, %409
  %432 = phi i16* [ %410, %409 ], [ %426, %423 ]
  %433 = add nuw nsw i64 %407, 1
  %434 = add i64 %407, 1
  %435 = icmp ult i64 %434, 16
  br i1 %435, label %525, label %436

436:                                              ; preds = %431
  %437 = add i64 %407, 1
  %438 = getelementptr i16, i16* %432, i64 %437
  %439 = getelementptr i16, i16* %405, i64 %437
  %440 = icmp ult i16* %432, %439
  %441 = icmp ult i16* %405, %438
  %442 = and i1 %440, %441
  br i1 %442, label %525, label %443

443:                                              ; preds = %436
  %444 = and i64 %434, -16
  %445 = sub i64 %433, %444
  %446 = getelementptr i16, i16* %405, i64 %444
  %447 = getelementptr i16, i16* %432, i64 %444
  %448 = add i64 %444, -16
  %449 = lshr exact i64 %448, 4
  %450 = add nuw nsw i64 %449, 1
  %451 = and i64 %450, 3
  %452 = icmp ult i64 %448, 48
  br i1 %452, label %504, label %453

453:                                              ; preds = %443
  %454 = sub nsw i64 %450, %451
  br label %455

455:                                              ; preds = %455, %453
  %456 = phi i64 [ 0, %453 ], [ %501, %455 ]
  %457 = phi i64 [ %454, %453 ], [ %502, %455 ]
  %458 = getelementptr i16, i16* %405, i64 %456
  %459 = getelementptr i16, i16* %432, i64 %456
  %460 = bitcast i16* %458 to <8 x i16>*
  %461 = load <8 x i16>, <8 x i16>* %460, align 2, !alias.scope !21
  %462 = getelementptr i16, i16* %458, i64 8
  %463 = bitcast i16* %462 to <8 x i16>*
  %464 = load <8 x i16>, <8 x i16>* %463, align 2, !alias.scope !21
  %465 = bitcast i16* %459 to <8 x i16>*
  store <8 x i16> %461, <8 x i16>* %465, align 2, !alias.scope !24, !noalias !21
  %466 = getelementptr i16, i16* %459, i64 8
  %467 = bitcast i16* %466 to <8 x i16>*
  store <8 x i16> %464, <8 x i16>* %467, align 2, !alias.scope !24, !noalias !21
  %468 = or i64 %456, 16
  %469 = getelementptr i16, i16* %405, i64 %468
  %470 = getelementptr i16, i16* %432, i64 %468
  %471 = bitcast i16* %469 to <8 x i16>*
  %472 = load <8 x i16>, <8 x i16>* %471, align 2, !alias.scope !21
  %473 = getelementptr i16, i16* %469, i64 8
  %474 = bitcast i16* %473 to <8 x i16>*
  %475 = load <8 x i16>, <8 x i16>* %474, align 2, !alias.scope !21
  %476 = bitcast i16* %470 to <8 x i16>*
  store <8 x i16> %472, <8 x i16>* %476, align 2, !alias.scope !24, !noalias !21
  %477 = getelementptr i16, i16* %470, i64 8
  %478 = bitcast i16* %477 to <8 x i16>*
  store <8 x i16> %475, <8 x i16>* %478, align 2, !alias.scope !24, !noalias !21
  %479 = or i64 %456, 32
  %480 = getelementptr i16, i16* %405, i64 %479
  %481 = getelementptr i16, i16* %432, i64 %479
  %482 = bitcast i16* %480 to <8 x i16>*
  %483 = load <8 x i16>, <8 x i16>* %482, align 2, !alias.scope !21
  %484 = getelementptr i16, i16* %480, i64 8
  %485 = bitcast i16* %484 to <8 x i16>*
  %486 = load <8 x i16>, <8 x i16>* %485, align 2, !alias.scope !21
  %487 = bitcast i16* %481 to <8 x i16>*
  store <8 x i16> %483, <8 x i16>* %487, align 2, !alias.scope !24, !noalias !21
  %488 = getelementptr i16, i16* %481, i64 8
  %489 = bitcast i16* %488 to <8 x i16>*
  store <8 x i16> %486, <8 x i16>* %489, align 2, !alias.scope !24, !noalias !21
  %490 = or i64 %456, 48
  %491 = getelementptr i16, i16* %405, i64 %490
  %492 = getelementptr i16, i16* %432, i64 %490
  %493 = bitcast i16* %491 to <8 x i16>*
  %494 = load <8 x i16>, <8 x i16>* %493, align 2, !alias.scope !21
  %495 = getelementptr i16, i16* %491, i64 8
  %496 = bitcast i16* %495 to <8 x i16>*
  %497 = load <8 x i16>, <8 x i16>* %496, align 2, !alias.scope !21
  %498 = bitcast i16* %492 to <8 x i16>*
  store <8 x i16> %494, <8 x i16>* %498, align 2, !alias.scope !24, !noalias !21
  %499 = getelementptr i16, i16* %492, i64 8
  %500 = bitcast i16* %499 to <8 x i16>*
  store <8 x i16> %497, <8 x i16>* %500, align 2, !alias.scope !24, !noalias !21
  %501 = add i64 %456, 64
  %502 = add i64 %457, -4
  %503 = icmp eq i64 %502, 0
  br i1 %503, label %504, label %455, !llvm.loop !26

504:                                              ; preds = %455, %443
  %505 = phi i64 [ 0, %443 ], [ %501, %455 ]
  %506 = icmp eq i64 %451, 0
  br i1 %506, label %523, label %507

507:                                              ; preds = %504, %507
  %508 = phi i64 [ %520, %507 ], [ %505, %504 ]
  %509 = phi i64 [ %521, %507 ], [ %451, %504 ]
  %510 = getelementptr i16, i16* %405, i64 %508
  %511 = getelementptr i16, i16* %432, i64 %508
  %512 = bitcast i16* %510 to <8 x i16>*
  %513 = load <8 x i16>, <8 x i16>* %512, align 2, !alias.scope !21
  %514 = getelementptr i16, i16* %510, i64 8
  %515 = bitcast i16* %514 to <8 x i16>*
  %516 = load <8 x i16>, <8 x i16>* %515, align 2, !alias.scope !21
  %517 = bitcast i16* %511 to <8 x i16>*
  store <8 x i16> %513, <8 x i16>* %517, align 2, !alias.scope !24, !noalias !21
  %518 = getelementptr i16, i16* %511, i64 8
  %519 = bitcast i16* %518 to <8 x i16>*
  store <8 x i16> %516, <8 x i16>* %519, align 2, !alias.scope !24, !noalias !21
  %520 = add i64 %508, 16
  %521 = add i64 %509, -1
  %522 = icmp eq i64 %521, 0
  br i1 %522, label %523, label %507, !llvm.loop !28

523:                                              ; preds = %507, %504
  %524 = icmp eq i64 %434, %444
  br i1 %524, label %578, label %525

525:                                              ; preds = %523, %436, %431
  %526 = phi i64 [ %433, %436 ], [ %433, %431 ], [ %445, %523 ]
  %527 = phi i16* [ %405, %436 ], [ %405, %431 ], [ %446, %523 ]
  %528 = phi i16* [ %432, %436 ], [ %432, %431 ], [ %447, %523 ]
  %529 = add i64 %526, -1
  %530 = and i64 %526, 7
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %543, label %532

532:                                              ; preds = %525, %532
  %533 = phi i64 [ %538, %532 ], [ %526, %525 ]
  %534 = phi i16* [ %540, %532 ], [ %527, %525 ]
  %535 = phi i16* [ %539, %532 ], [ %528, %525 ]
  %536 = phi i64 [ %541, %532 ], [ %530, %525 ]
  %537 = load i16, i16* %534, align 2
  store i16 %537, i16* %535, align 2
  %538 = add i64 %533, -1
  %539 = getelementptr inbounds i16, i16* %535, i64 1
  %540 = getelementptr inbounds i16, i16* %534, i64 1
  %541 = add i64 %536, -1
  %542 = icmp eq i64 %541, 0
  br i1 %542, label %543, label %532, !llvm.loop !30

543:                                              ; preds = %532, %525
  %544 = phi i64 [ %526, %525 ], [ %538, %532 ]
  %545 = phi i16* [ %527, %525 ], [ %540, %532 ]
  %546 = phi i16* [ %528, %525 ], [ %539, %532 ]
  %547 = icmp ult i64 %529, 7
  br i1 %547, label %578, label %548

548:                                              ; preds = %543, %548
  %549 = phi i64 [ %574, %548 ], [ %544, %543 ]
  %550 = phi i16* [ %576, %548 ], [ %545, %543 ]
  %551 = phi i16* [ %575, %548 ], [ %546, %543 ]
  %552 = load i16, i16* %550, align 2
  store i16 %552, i16* %551, align 2
  %553 = getelementptr inbounds i16, i16* %551, i64 1
  %554 = getelementptr inbounds i16, i16* %550, i64 1
  %555 = load i16, i16* %554, align 2
  store i16 %555, i16* %553, align 2
  %556 = getelementptr inbounds i16, i16* %551, i64 2
  %557 = getelementptr inbounds i16, i16* %550, i64 2
  %558 = load i16, i16* %557, align 2
  store i16 %558, i16* %556, align 2
  %559 = getelementptr inbounds i16, i16* %551, i64 3
  %560 = getelementptr inbounds i16, i16* %550, i64 3
  %561 = load i16, i16* %560, align 2
  store i16 %561, i16* %559, align 2
  %562 = getelementptr inbounds i16, i16* %551, i64 4
  %563 = getelementptr inbounds i16, i16* %550, i64 4
  %564 = load i16, i16* %563, align 2
  store i16 %564, i16* %562, align 2
  %565 = getelementptr inbounds i16, i16* %551, i64 5
  %566 = getelementptr inbounds i16, i16* %550, i64 5
  %567 = load i16, i16* %566, align 2
  store i16 %567, i16* %565, align 2
  %568 = getelementptr inbounds i16, i16* %551, i64 6
  %569 = getelementptr inbounds i16, i16* %550, i64 6
  %570 = load i16, i16* %569, align 2
  store i16 %570, i16* %568, align 2
  %571 = getelementptr inbounds i16, i16* %551, i64 7
  %572 = getelementptr inbounds i16, i16* %550, i64 7
  %573 = load i16, i16* %572, align 2
  store i16 %573, i16* %571, align 2
  %574 = add i64 %549, -8
  %575 = getelementptr inbounds i16, i16* %551, i64 8
  %576 = getelementptr inbounds i16, i16* %550, i64 8
  %577 = icmp eq i64 %574, 0
  br i1 %577, label %578, label %548, !llvm.loop !31

578:                                              ; preds = %543, %548, %523, %400
  %579 = call %class.TabSharingUI* @_ZN12TabSharingUI6CreateERKN7content14DesktopMediaIDENSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"struct.content::DesktopMediaID"* dereferenceable(40) %2, %"class.std::__1::basic_string.42"* nonnull %28) #10
  %580 = ptrtoint %class.TabSharingUI* %579 to i64
  %581 = bitcast %"class.std::__1::basic_string.42"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %582 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %581, i64 0, i32 1, i32 1
  %583 = load i8, i8* %582, align 1
  %584 = icmp slt i8 %583, 0
  br i1 %584, label %585, label %663

585:                                              ; preds = %578
  %586 = bitcast %"class.std::__1::basic_string.42"* %28 to i8**
  %587 = load i8*, i8** %586, align 8
  call void @_ZdlPv(i8* %587) #11
  br label %663

588:                                              ; preds = %393
  %589 = load i32, i32* %111, align 8
  br label %590

590:                                              ; preds = %588, %390
  %591 = phi i32 [ %589, %588 ], [ %391, %390 ]
  %592 = bitcast %"class.std::__1::basic_string.42"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %592) #10
  %593 = bitcast %"class.std::__1::basic_string.42"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %594 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %593, i64 0, i32 1, i32 1
  %595 = load i8, i8* %594, align 1, !noalias !32
  %596 = icmp slt i8 %595, 0
  %597 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %598 = load i64, i64* %597, align 8, !noalias !32
  %599 = zext i8 %595 to i64
  %600 = select i1 %596, i64 %598, i64 %599
  %601 = bitcast %"class.std::__1::basic_string.42"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %602 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %601, i64 0, i32 1, i32 1
  %603 = load i8, i8* %602, align 1, !noalias !32
  %604 = icmp slt i8 %603, 0
  %605 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %606 = load i64, i64* %605, align 8, !noalias !32
  %607 = zext i8 %603 to i64
  %608 = select i1 %604, i64 %606, i64 %607
  %609 = icmp eq i64 %600, %608
  br i1 %609, label %610, label %633

610:                                              ; preds = %590
  %611 = icmp eq i64 %600, 0
  br i1 %611, label %633, label %612

612:                                              ; preds = %610
  %613 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %614 = load i16*, i16** %613, align 8, !noalias !32
  %615 = bitcast %"class.std::__1::basic_string.42"* %9 to i16*
  %616 = select i1 %604, i16* %614, i16* %615
  %617 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %618 = load i16*, i16** %617, align 8, !noalias !32
  %619 = bitcast %"class.std::__1::basic_string.42"* %8 to i16*
  %620 = select i1 %596, i16* %618, i16* %619
  br label %621

621:                                              ; preds = %628, %612
  %622 = phi i64 [ %629, %628 ], [ %600, %612 ]
  %623 = phi i16* [ %631, %628 ], [ %616, %612 ]
  %624 = phi i16* [ %630, %628 ], [ %620, %612 ]
  %625 = load i16, i16* %624, align 2
  %626 = load i16, i16* %623, align 2
  %627 = icmp eq i16 %626, %625
  br i1 %627, label %628, label %633

628:                                              ; preds = %621
  %629 = add i64 %622, -1
  %630 = getelementptr inbounds i16, i16* %624, i64 1
  %631 = getelementptr inbounds i16, i16* %623, i64 1
  %632 = icmp eq i64 %629, 0
  br i1 %632, label %633, label %621

633:                                              ; preds = %628, %621, %610, %590
  %634 = phi i1 [ false, %590 ], [ true, %610 ], [ false, %621 ], [ true, %628 ]
  br i1 %5, label %644, label %635

635:                                              ; preds = %633
  br i1 %634, label %636, label %640

636:                                              ; preds = %635
  switch i32 %591, label %651 [
    i32 1, label %637
    i32 2, label %638
    i32 3, label %639
  ]

637:                                              ; preds = %636
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8221, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

638:                                              ; preds = %636
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8225, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

639:                                              ; preds = %636
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8227, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

640:                                              ; preds = %635
  switch i32 %591, label %651 [
    i32 1, label %641
    i32 2, label %642
    i32 3, label %643
  ]

641:                                              ; preds = %640
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8222, %"class.std::__1::basic_string.42"* dereferenceable(24) %9, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

642:                                              ; preds = %640
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8226, %"class.std::__1::basic_string.42"* dereferenceable(24) %9, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

643:                                              ; preds = %640
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8228, %"class.std::__1::basic_string.42"* dereferenceable(24) %9, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

644:                                              ; preds = %633
  br i1 %634, label %645, label %648

645:                                              ; preds = %644
  switch i32 %591, label %651 [
    i32 1, label %646
    i32 3, label %647
  ]

646:                                              ; preds = %645
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8223, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

647:                                              ; preds = %645
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8229, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

648:                                              ; preds = %644
  switch i32 %591, label %651 [
    i32 1, label %649
    i32 3, label %650
  ]

649:                                              ; preds = %648
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8224, %"class.std::__1::basic_string.42"* dereferenceable(24) %9, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

650:                                              ; preds = %648
  call void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* nonnull sret %29, i32 8230, %"class.std::__1::basic_string.42"* dereferenceable(24) %9, %"class.std::__1::basic_string.42"* dereferenceable(24) %8) #10
  br label %652

651:                                              ; preds = %648, %645, %640, %636
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %592, i8 0, i64 24, i1 false) #10, !alias.scope !32
  br label %652

652:                                              ; preds = %637, %638, %639, %641, %642, %643, %646, %647, %649, %650, %651
  %653 = call %class.ScreenCaptureNotificationUI* @_ZN27ScreenCaptureNotificationUI6CreateERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* nonnull dereferenceable(24) %29) #10
  %654 = ptrtoint %class.ScreenCaptureNotificationUI* %653 to i64
  %655 = bitcast %"class.std::__1::basic_string.42"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %655, i64 0, i32 1, i32 1
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %652
  %660 = bitcast %"class.std::__1::basic_string.42"* %29 to i8**
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #11
  br label %662

662:                                              ; preds = %652, %659
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %592) #10
  br label %663

663:                                              ; preds = %388, %585, %578, %662
  %664 = phi %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* [ %389, %388 ], [ %396, %585 ], [ %396, %578 ], [ %593, %662 ]
  %665 = phi i64 [ 0, %388 ], [ %580, %585 ], [ %580, %578 ], [ %654, %662 ]
  %666 = call %class.MediaCaptureDevicesDispatcher* @_ZN29MediaCaptureDevicesDispatcher11GetInstanceEv() #10
  %667 = call %class.MediaStreamCaptureIndicator* @_ZN29MediaCaptureDevicesDispatcher30GetMediaStreamCaptureIndicatorEv(%class.MediaCaptureDevicesDispatcher* %666) #10
  %668 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %664, i64 0, i32 1, i32 1
  %669 = load i8, i8* %668, align 1
  %670 = icmp slt i8 %669, 0
  br i1 %670, label %674, label %671

671:                                              ; preds = %663
  %672 = bitcast %"class.std::__1::basic_string.42"* %30 to i8*
  %673 = bitcast %"class.std::__1::basic_string.42"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %672, i8* align 8 %673, i64 24, i1 false) #10
  br label %849

674:                                              ; preds = %663
  %675 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load i16*, i16** %675, align 8
  %677 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %678 = load i64, i64* %677, align 8
  %679 = icmp ult i64 %678, 11
  br i1 %679, label %680, label %685

680:                                              ; preds = %674
  %681 = bitcast %"class.std::__1::basic_string.42"* %30 to i16*
  %682 = trunc i64 %678 to i8
  %683 = bitcast %"class.std::__1::basic_string.42"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %684 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %683, i64 0, i32 1, i32 1
  store i8 %682, i8* %684, align 1
  br label %702

685:                                              ; preds = %674
  %686 = icmp ugt i64 %678, 9223372036854775791
  br i1 %686, label %687, label %689

687:                                              ; preds = %685
  %688 = bitcast %"class.std::__1::basic_string.42"* %30 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %688) #12
  unreachable

689:                                              ; preds = %685
  %690 = add nuw nsw i64 %678, 8
  %691 = and i64 %690, -8
  %692 = icmp slt i64 %691, 0
  br i1 %692, label %693, label %694

693:                                              ; preds = %689
  call void @abort() #12
  unreachable

694:                                              ; preds = %689
  %695 = shl i64 %691, 1
  %696 = call i8* @_Znwm(i64 %695) #11
  %697 = bitcast i8* %696 to i16*
  %698 = bitcast %"class.std::__1::basic_string.42"* %30 to i8**
  store i8* %696, i8** %698, align 8
  %699 = or i64 %691, -9223372036854775808
  %700 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %699, i64* %700, align 8
  %701 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %678, i64* %701, align 8
  br label %702

702:                                              ; preds = %694, %680
  %703 = phi i16* [ %681, %680 ], [ %697, %694 ]
  %704 = add nuw nsw i64 %678, 1
  %705 = add i64 %678, 1
  %706 = icmp ult i64 %705, 16
  br i1 %706, label %796, label %707

707:                                              ; preds = %702
  %708 = add i64 %678, 1
  %709 = getelementptr i16, i16* %703, i64 %708
  %710 = getelementptr i16, i16* %676, i64 %708
  %711 = icmp ult i16* %703, %710
  %712 = icmp ult i16* %676, %709
  %713 = and i1 %711, %712
  br i1 %713, label %796, label %714

714:                                              ; preds = %707
  %715 = and i64 %705, -16
  %716 = sub i64 %704, %715
  %717 = getelementptr i16, i16* %676, i64 %715
  %718 = getelementptr i16, i16* %703, i64 %715
  %719 = add i64 %715, -16
  %720 = lshr exact i64 %719, 4
  %721 = add nuw nsw i64 %720, 1
  %722 = and i64 %721, 3
  %723 = icmp ult i64 %719, 48
  br i1 %723, label %775, label %724

724:                                              ; preds = %714
  %725 = sub nsw i64 %721, %722
  br label %726

726:                                              ; preds = %726, %724
  %727 = phi i64 [ 0, %724 ], [ %772, %726 ]
  %728 = phi i64 [ %725, %724 ], [ %773, %726 ]
  %729 = getelementptr i16, i16* %676, i64 %727
  %730 = getelementptr i16, i16* %703, i64 %727
  %731 = bitcast i16* %729 to <8 x i16>*
  %732 = load <8 x i16>, <8 x i16>* %731, align 2, !alias.scope !35
  %733 = getelementptr i16, i16* %729, i64 8
  %734 = bitcast i16* %733 to <8 x i16>*
  %735 = load <8 x i16>, <8 x i16>* %734, align 2, !alias.scope !35
  %736 = bitcast i16* %730 to <8 x i16>*
  store <8 x i16> %732, <8 x i16>* %736, align 2, !alias.scope !38, !noalias !35
  %737 = getelementptr i16, i16* %730, i64 8
  %738 = bitcast i16* %737 to <8 x i16>*
  store <8 x i16> %735, <8 x i16>* %738, align 2, !alias.scope !38, !noalias !35
  %739 = or i64 %727, 16
  %740 = getelementptr i16, i16* %676, i64 %739
  %741 = getelementptr i16, i16* %703, i64 %739
  %742 = bitcast i16* %740 to <8 x i16>*
  %743 = load <8 x i16>, <8 x i16>* %742, align 2, !alias.scope !35
  %744 = getelementptr i16, i16* %740, i64 8
  %745 = bitcast i16* %744 to <8 x i16>*
  %746 = load <8 x i16>, <8 x i16>* %745, align 2, !alias.scope !35
  %747 = bitcast i16* %741 to <8 x i16>*
  store <8 x i16> %743, <8 x i16>* %747, align 2, !alias.scope !38, !noalias !35
  %748 = getelementptr i16, i16* %741, i64 8
  %749 = bitcast i16* %748 to <8 x i16>*
  store <8 x i16> %746, <8 x i16>* %749, align 2, !alias.scope !38, !noalias !35
  %750 = or i64 %727, 32
  %751 = getelementptr i16, i16* %676, i64 %750
  %752 = getelementptr i16, i16* %703, i64 %750
  %753 = bitcast i16* %751 to <8 x i16>*
  %754 = load <8 x i16>, <8 x i16>* %753, align 2, !alias.scope !35
  %755 = getelementptr i16, i16* %751, i64 8
  %756 = bitcast i16* %755 to <8 x i16>*
  %757 = load <8 x i16>, <8 x i16>* %756, align 2, !alias.scope !35
  %758 = bitcast i16* %752 to <8 x i16>*
  store <8 x i16> %754, <8 x i16>* %758, align 2, !alias.scope !38, !noalias !35
  %759 = getelementptr i16, i16* %752, i64 8
  %760 = bitcast i16* %759 to <8 x i16>*
  store <8 x i16> %757, <8 x i16>* %760, align 2, !alias.scope !38, !noalias !35
  %761 = or i64 %727, 48
  %762 = getelementptr i16, i16* %676, i64 %761
  %763 = getelementptr i16, i16* %703, i64 %761
  %764 = bitcast i16* %762 to <8 x i16>*
  %765 = load <8 x i16>, <8 x i16>* %764, align 2, !alias.scope !35
  %766 = getelementptr i16, i16* %762, i64 8
  %767 = bitcast i16* %766 to <8 x i16>*
  %768 = load <8 x i16>, <8 x i16>* %767, align 2, !alias.scope !35
  %769 = bitcast i16* %763 to <8 x i16>*
  store <8 x i16> %765, <8 x i16>* %769, align 2, !alias.scope !38, !noalias !35
  %770 = getelementptr i16, i16* %763, i64 8
  %771 = bitcast i16* %770 to <8 x i16>*
  store <8 x i16> %768, <8 x i16>* %771, align 2, !alias.scope !38, !noalias !35
  %772 = add i64 %727, 64
  %773 = add i64 %728, -4
  %774 = icmp eq i64 %773, 0
  br i1 %774, label %775, label %726, !llvm.loop !40

775:                                              ; preds = %726, %714
  %776 = phi i64 [ 0, %714 ], [ %772, %726 ]
  %777 = icmp eq i64 %722, 0
  br i1 %777, label %794, label %778

778:                                              ; preds = %775, %778
  %779 = phi i64 [ %791, %778 ], [ %776, %775 ]
  %780 = phi i64 [ %792, %778 ], [ %722, %775 ]
  %781 = getelementptr i16, i16* %676, i64 %779
  %782 = getelementptr i16, i16* %703, i64 %779
  %783 = bitcast i16* %781 to <8 x i16>*
  %784 = load <8 x i16>, <8 x i16>* %783, align 2, !alias.scope !35
  %785 = getelementptr i16, i16* %781, i64 8
  %786 = bitcast i16* %785 to <8 x i16>*
  %787 = load <8 x i16>, <8 x i16>* %786, align 2, !alias.scope !35
  %788 = bitcast i16* %782 to <8 x i16>*
  store <8 x i16> %784, <8 x i16>* %788, align 2, !alias.scope !38, !noalias !35
  %789 = getelementptr i16, i16* %782, i64 8
  %790 = bitcast i16* %789 to <8 x i16>*
  store <8 x i16> %787, <8 x i16>* %790, align 2, !alias.scope !38, !noalias !35
  %791 = add i64 %779, 16
  %792 = add i64 %780, -1
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %794, label %778, !llvm.loop !41

794:                                              ; preds = %778, %775
  %795 = icmp eq i64 %705, %715
  br i1 %795, label %849, label %796

796:                                              ; preds = %794, %707, %702
  %797 = phi i64 [ %704, %707 ], [ %704, %702 ], [ %716, %794 ]
  %798 = phi i16* [ %676, %707 ], [ %676, %702 ], [ %717, %794 ]
  %799 = phi i16* [ %703, %707 ], [ %703, %702 ], [ %718, %794 ]
  %800 = add i64 %797, -1
  %801 = and i64 %797, 7
  %802 = icmp eq i64 %801, 0
  br i1 %802, label %814, label %803

803:                                              ; preds = %796, %803
  %804 = phi i64 [ %809, %803 ], [ %797, %796 ]
  %805 = phi i16* [ %811, %803 ], [ %798, %796 ]
  %806 = phi i16* [ %810, %803 ], [ %799, %796 ]
  %807 = phi i64 [ %812, %803 ], [ %801, %796 ]
  %808 = load i16, i16* %805, align 2
  store i16 %808, i16* %806, align 2
  %809 = add i64 %804, -1
  %810 = getelementptr inbounds i16, i16* %806, i64 1
  %811 = getelementptr inbounds i16, i16* %805, i64 1
  %812 = add i64 %807, -1
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %814, label %803, !llvm.loop !42

814:                                              ; preds = %803, %796
  %815 = phi i64 [ %797, %796 ], [ %809, %803 ]
  %816 = phi i16* [ %798, %796 ], [ %811, %803 ]
  %817 = phi i16* [ %799, %796 ], [ %810, %803 ]
  %818 = icmp ult i64 %800, 7
  br i1 %818, label %849, label %819

819:                                              ; preds = %814, %819
  %820 = phi i64 [ %845, %819 ], [ %815, %814 ]
  %821 = phi i16* [ %847, %819 ], [ %816, %814 ]
  %822 = phi i16* [ %846, %819 ], [ %817, %814 ]
  %823 = load i16, i16* %821, align 2
  store i16 %823, i16* %822, align 2
  %824 = getelementptr inbounds i16, i16* %822, i64 1
  %825 = getelementptr inbounds i16, i16* %821, i64 1
  %826 = load i16, i16* %825, align 2
  store i16 %826, i16* %824, align 2
  %827 = getelementptr inbounds i16, i16* %822, i64 2
  %828 = getelementptr inbounds i16, i16* %821, i64 2
  %829 = load i16, i16* %828, align 2
  store i16 %829, i16* %827, align 2
  %830 = getelementptr inbounds i16, i16* %822, i64 3
  %831 = getelementptr inbounds i16, i16* %821, i64 3
  %832 = load i16, i16* %831, align 2
  store i16 %832, i16* %830, align 2
  %833 = getelementptr inbounds i16, i16* %822, i64 4
  %834 = getelementptr inbounds i16, i16* %821, i64 4
  %835 = load i16, i16* %834, align 2
  store i16 %835, i16* %833, align 2
  %836 = getelementptr inbounds i16, i16* %822, i64 5
  %837 = getelementptr inbounds i16, i16* %821, i64 5
  %838 = load i16, i16* %837, align 2
  store i16 %838, i16* %836, align 2
  %839 = getelementptr inbounds i16, i16* %822, i64 6
  %840 = getelementptr inbounds i16, i16* %821, i64 6
  %841 = load i16, i16* %840, align 2
  store i16 %841, i16* %839, align 2
  %842 = getelementptr inbounds i16, i16* %822, i64 7
  %843 = getelementptr inbounds i16, i16* %821, i64 7
  %844 = load i16, i16* %843, align 2
  store i16 %844, i16* %842, align 2
  %845 = add i64 %820, -8
  %846 = getelementptr inbounds i16, i16* %822, i64 8
  %847 = getelementptr inbounds i16, i16* %821, i64 8
  %848 = icmp eq i64 %845, 0
  br i1 %848, label %849, label %819, !llvm.loop !43

849:                                              ; preds = %814, %819, %794, %671
  %850 = inttoptr i64 %665 to %class.MediaStreamUI*
  %851 = call %"class.content::MediaStreamUI"* @_ZN27MediaStreamCaptureIndicator19RegisterMediaStreamEPN7content11WebContentsERKNSt3__16vectorIN5blink17MediaStreamDeviceENS3_9allocatorIS6_EEEENS3_10unique_ptrI13MediaStreamUINS3_14default_deleteISD_EEEENS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEE(%class.MediaStreamCaptureIndicator* %667, %"class.content::WebContents"* %0, %"class.std::__1::vector"* dereferenceable(24) %1, %class.MediaStreamUI* %850, %"class.std::__1::basic_string.42"* nonnull %30) #10
  %852 = bitcast %"class.std::__1::basic_string.42"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %853 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %852, i64 0, i32 1, i32 1
  %854 = load i8, i8* %853, align 1
  %855 = icmp slt i8 %854, 0
  br i1 %855, label %856, label %859

856:                                              ; preds = %849
  %857 = bitcast %"class.std::__1::basic_string.42"* %30 to i8**
  %858 = load i8*, i8** %857, align 8
  call void @_ZdlPv(i8* %858) #11
  br label %859

859:                                              ; preds = %849, %856
  %860 = icmp eq %class.MediaStreamCaptureIndicator* %667, null
  br i1 %860, label %873, label %861

861:                                              ; preds = %859
  %862 = getelementptr inbounds %class.MediaStreamCaptureIndicator, %class.MediaStreamCaptureIndicator* %667, i64 0, i32 1
  %863 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %862, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %864 = atomicrmw sub i32* %863, i32 1 acq_rel
  %865 = icmp eq i32 %864, 1
  br i1 %865, label %866, label %873

866:                                              ; preds = %861
  %867 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %862, i64 -2
  %868 = bitcast %"class.base::RefCountedThreadSafe"* %867 to %class.MediaStreamCaptureIndicator*
  %869 = bitcast %"class.base::RefCountedThreadSafe"* %867 to void (%class.MediaStreamCaptureIndicator*)***
  %870 = load void (%class.MediaStreamCaptureIndicator*)**, void (%class.MediaStreamCaptureIndicator*)*** %869, align 8
  %871 = getelementptr inbounds void (%class.MediaStreamCaptureIndicator*)*, void (%class.MediaStreamCaptureIndicator*)** %870, i64 2
  %872 = load void (%class.MediaStreamCaptureIndicator*)*, void (%class.MediaStreamCaptureIndicator*)** %871, align 8
  call void %872(%class.MediaStreamCaptureIndicator* nonnull %868) #10
  br label %873

873:                                              ; preds = %866, %861, %859
  call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* nonnull %17) #10
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %107) #10
  %874 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %875 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %874, i64 0, i32 1, i32 0
  %876 = load i8, i8* %875, align 1
  %877 = icmp slt i8 %876, 0
  br i1 %877, label %878, label %880

878:                                              ; preds = %873
  %879 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %879) #11
  br label %880

880:                                              ; preds = %873, %878
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #10
  %881 = load i8, i8* %89, align 1
  %882 = icmp slt i8 %881, 0
  br i1 %882, label %883, label %885

883:                                              ; preds = %880
  %884 = load i8*, i8** %33, align 8
  call void @_ZdlPv(i8* %884) #11
  br label %885

885:                                              ; preds = %880, %883
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #10
  ret %"class.content::MediaStreamUI"* %851
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK7content14DesktopMediaID8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.content::DesktopMediaID"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink17MediaStreamDeviceC1ENS_5mojom15MediaStreamTypeERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEESB_(%"struct.blink::MediaStreamDevice"*, i32, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNK7content25WebContentsMediaCaptureId8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.content::WebContentsMediaCaptureId"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"*) unnamed_addr #3

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #2

declare %class.TabSharingUI* @_ZN12TabSharingUI6CreateERKN7content14DesktopMediaIDENSt3__112basic_stringIDsNS4_11char_traitsIDsEENS4_9allocatorIDsEEEE(%"struct.content::DesktopMediaID"* dereferenceable(40), %"class.std::__1::basic_string.42"*) local_unnamed_addr #2

declare %class.ScreenCaptureNotificationUI* @_ZN27ScreenCaptureNotificationUI6CreateERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* dereferenceable(24)) local_unnamed_addr #2

declare %class.MediaCaptureDevicesDispatcher* @_ZN29MediaCaptureDevicesDispatcher11GetInstanceEv() local_unnamed_addr #2

declare %class.MediaStreamCaptureIndicator* @_ZN29MediaCaptureDevicesDispatcher30GetMediaStreamCaptureIndicatorEv(%class.MediaCaptureDevicesDispatcher*) local_unnamed_addr #2

declare %"class.content::MediaStreamUI"* @_ZN27MediaStreamCaptureIndicator19RegisterMediaStreamEPN7content11WebContentsERKNSt3__16vectorIN5blink17MediaStreamDeviceENS3_9allocatorIS6_EEEENS3_10unique_ptrI13MediaStreamUINS3_14default_deleteISD_EEEENS3_12basic_stringIDsNS3_11char_traitsIDsEENS7_IDsEEEE(%class.MediaStreamCaptureIndicator*, %"class.content::WebContents"*, %"class.std::__1::vector"* dereferenceable(24), %class.MediaStreamUI*, %"class.std::__1::basic_string.42"*) local_unnamed_addr #2

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #3

declare %"class.content::RenderFrameHost"* @_ZN7content15RenderFrameHost6FromIDEii(i32, i32) local_unnamed_addr #2

declare %"class.content::WebContents"* @_ZN7content11WebContents19FromRenderFrameHostEPNS_15RenderFrameHostE(%"class.content::RenderFrameHost"*) local_unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

declare dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string.42"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string.42"*, %"class.std::__1::basic_string.42"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string.42"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string.42"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string.42"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string.42"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string.42"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string.42"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string.42"*
  %35 = icmp ugt %"class.std::__1::basic_string.42"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !44
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !44
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !47, !noalias !44
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !47, !noalias !44
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !44
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !44
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !47, !noalias !44
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !47, !noalias !44
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !44
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !44
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !47, !noalias !44
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !47, !noalias !44
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !44
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !44
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !47, !noalias !44
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !47, !noalias !44
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !49

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !44
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !44
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !47, !noalias !44
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !47, !noalias !44
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !50

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !51

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !52

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string.42"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #12
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #12
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #11
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !53
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !53
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !56, !noalias !53
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !56, !noalias !53
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !53
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !53
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !56, !noalias !53
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !56, !noalias !53
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !53
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !53
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !56, !noalias !53
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !56, !noalias !53
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !53
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !53
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !56, !noalias !53
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !56, !noalias !53
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !58

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !53
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !53
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !56, !noalias !53
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !56, !noalias !53
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !59

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !60

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !61

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string.42"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string.42"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !62
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !62
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !65, !noalias !62
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !65, !noalias !62
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !62
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !62
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !65, !noalias !62
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !65, !noalias !62
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !62
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !62
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !65, !noalias !62
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !65, !noalias !62
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !62
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !62
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !65, !noalias !62
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !65, !noalias !62
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !67

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !62
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !62
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !65, !noalias !62
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !65, !noalias !62
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !68

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !69

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !70

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.42"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #10
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string.42"* %0
}

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN5media5mojom13CaptureHandleC1Ev(%"class.media::mojom::CaptureHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string.42"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string.42"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #12
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string.42"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string.42"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #12
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #11
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !71
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !71
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !74, !noalias !71
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !74, !noalias !71
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !71
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !71
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !74, !noalias !71
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !74, !noalias !71
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !71
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !71
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !74, !noalias !71
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !74, !noalias !71
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !71
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !71
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !74, !noalias !71
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !74, !noalias !71
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !76

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !71
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !71
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !74, !noalias !71
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !74, !noalias !71
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !77

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !78

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !79

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !80

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !81

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !82

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !84
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !84
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !87, !noalias !84
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !87, !noalias !84
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !84
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !84
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !87, !noalias !84
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !87, !noalias !84
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !84
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !84
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !87, !noalias !84
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !87, !noalias !84
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !84
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !84
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !87, !noalias !84
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !87, !noalias !84
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !89

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !84
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !84
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !87, !noalias !84
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !87, !noalias !84
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !90

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !91

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !92

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #11
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string.42"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string.42", %"class.std::__1::basic_string.42"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN5media5mojom13CaptureHandleD1Ev(%"class.media::mojom::CaptureHandle"*) unnamed_addr #3

declare void @_ZN5media5mojom23DisplayMediaInformationC1ENS0_25DisplayCaptureSurfaceTypeEbNS0_17CursorCaptureTypeEN4mojo9StructPtrINS0_13CaptureHandleEEE(%"class.media::mojom::DisplayMediaInformation"*, i32, i1 zeroext, i32, %"class.mojo::StructPtr.33"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5media5mojom23DisplayMediaInformationD1Ev(%"class.media::mojom::DisplayMediaInformation"*) unnamed_addr #3

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.42"* sret, i32, %"class.std::__1::basic_string.42"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN9l10n_util15GetStringFUTF16EiRKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_(%"class.std::__1::basic_string.42"* sret, i32, %"class.std::__1::basic_string.42"* dereferenceable(24), %"class.std::__1::basic_string.42"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector"*, %"struct.blink::MediaStreamDevice"* dereferenceable(232)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::MediaStreamDevice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 232
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 79511827903920481
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::MediaStreamDevice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 232
  %20 = icmp ult i64 %19, 39755913951960240
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 79511827903920481, %14 ]
  %28 = mul i64 %27, 232
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.blink::MediaStreamDevice"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::MediaStreamDevice"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::MediaStreamDevice"* %35 to i64
  tail call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %34, %"struct.blink::MediaStreamDevice"* dereferenceable(232) %1) #10
  %37 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %34, i64 1
  %38 = ptrtoint %"struct.blink::MediaStreamDevice"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %39, align 8
  %41 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %3, align 8
  %42 = icmp eq %"struct.blink::MediaStreamDevice"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.blink::MediaStreamDevice"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.blink::MediaStreamDevice"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.blink::MediaStreamDevice"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %47, i64 -1
  tail call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %48, %"struct.blink::MediaStreamDevice"* dereferenceable(232) %49) #10
  %50 = icmp eq %"struct.blink::MediaStreamDevice"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.blink::MediaStreamDevice"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.blink::MediaStreamDevice"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.blink::MediaStreamDevice"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.blink::MediaStreamDevice"*
  %60 = icmp eq %"struct.blink::MediaStreamDevice"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.blink::MediaStreamDevice"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %62, i64 -1
  tail call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* %63) #10
  %64 = icmp eq %"struct.blink::MediaStreamDevice"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"* dereferenceable(232)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink17MediaStreamDeviceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector"*, %"struct.blink::MediaStreamDevice"* dereferenceable(232)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::MediaStreamDevice"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 232
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 79511827903920481
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::MediaStreamDevice"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 232
  %20 = icmp ult i64 %19, 39755913951960240
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 79511827903920481, %14 ]
  %28 = mul i64 %27, 232
  %29 = tail call i8* @_Znwm(i64 %28) #11
  %30 = bitcast i8* %29 to %"struct.blink::MediaStreamDevice"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::MediaStreamDevice"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::MediaStreamDevice"* %35 to i64
  tail call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %34, %"struct.blink::MediaStreamDevice"* dereferenceable(232) %1) #10
  %37 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %34, i64 1
  %38 = ptrtoint %"struct.blink::MediaStreamDevice"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %39, align 8
  %41 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %3, align 8
  %42 = icmp eq %"struct.blink::MediaStreamDevice"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.blink::MediaStreamDevice"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.blink::MediaStreamDevice"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.blink::MediaStreamDevice"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %47, i64 -1
  tail call void @_ZN5blink17MediaStreamDeviceC1ERKS0_(%"struct.blink::MediaStreamDevice"* %48, %"struct.blink::MediaStreamDevice"* dereferenceable(232) %49) #10
  %50 = icmp eq %"struct.blink::MediaStreamDevice"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.blink::MediaStreamDevice"*, %"struct.blink::MediaStreamDevice"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.blink::MediaStreamDevice"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.blink::MediaStreamDevice"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.blink::MediaStreamDevice"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.blink::MediaStreamDevice"*
  %60 = icmp eq %"struct.blink::MediaStreamDevice"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.blink::MediaStreamDevice"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.blink::MediaStreamDevice", %"struct.blink::MediaStreamDevice"* %62, i64 -1
  tail call void @_ZN5blink17MediaStreamDeviceD1Ev(%"struct.blink::MediaStreamDevice"* %63) #10
  %64 = icmp eq %"struct.blink::MediaStreamDevice"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_116DeviceNamePrefixEPN7content11WebContentsEN5blink5mojom15MediaStreamTypeERKNS0_14DesktopMediaIDE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_116DeviceNamePrefixEPN7content11WebContentsEN5blink5mojom15MediaStreamTypeERKNS0_14DesktopMediaIDE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN12_GLOBAL__N_139DesktopMediaIDToDisplayMediaInformationEPN7content11WebContentsERKNS0_14DesktopMediaIDE: argument 0"}
!10 = distinct !{!10, !"_ZN12_GLOBAL__N_139DesktopMediaIDToDisplayMediaInformationEPN7content11WebContentsERKNS0_14DesktopMediaIDE"}
!11 = !{i8 0, i8 2}
!12 = !{!13, !9}
!13 = distinct !{!13, !14, !"_ZN12_GLOBAL__N_119CreateCaptureHandleERKN3url6OriginERKN7content14DesktopMediaIDE: argument 0"}
!14 = distinct !{!14, !"_ZN12_GLOBAL__N_119CreateCaptureHandleERKN3url6OriginERKN7content14DesktopMediaIDE"}
!15 = !{!16, !13, !9}
!16 = distinct !{!16, !17, !"_ZN5media5mojom13CaptureHandle3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_: argument 0"}
!17 = distinct !{!17, !"_ZN5media5mojom13CaptureHandle3NewIJEEEN4mojo9StructPtrIS1_EEDpOT_"}
!18 = !{!19, !9}
!19 = distinct !{!19, !20, !"_ZN5media5mojom23DisplayMediaInformation3NewIJRNS0_25DisplayCaptureSurfaceTypeERbRNS0_17CursorCaptureTypeEN4mojo9StructPtrINS0_13CaptureHandleEEEEEENS9_IS1_EEDpOT_: argument 0"}
!20 = distinct !{!20, !"_ZN5media5mojom23DisplayMediaInformation3NewIJRNS0_25DisplayCaptureSurfaceTypeERbRNS0_17CursorCaptureTypeEN4mojo9StructPtrINS0_13CaptureHandleEEEEEENS9_IS1_EEDpOT_"}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !27}
!27 = !{!"llvm.loop.isvectorized", i32 1}
!28 = distinct !{!28, !29}
!29 = !{!"llvm.loop.unroll.disable"}
!30 = distinct !{!30, !29}
!31 = distinct !{!31, !27}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN12_GLOBAL__N_122GetStopSharingUIStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bN7content14DesktopMediaID4TypeE: argument 0"}
!34 = distinct !{!34, !"_ZN12_GLOBAL__N_122GetStopSharingUIStringERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEES8_bN7content14DesktopMediaID4TypeE"}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !27}
!41 = distinct !{!41, !29}
!42 = distinct !{!42, !29}
!43 = distinct !{!43, !27}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !27}
!50 = distinct !{!50, !29}
!51 = distinct !{!51, !29}
!52 = distinct !{!52, !27}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !27}
!59 = distinct !{!59, !29}
!60 = distinct !{!60, !29}
!61 = distinct !{!61, !27}
!62 = !{!63}
!63 = distinct !{!63, !64}
!64 = distinct !{!64, !"LVerDomain"}
!65 = !{!66}
!66 = distinct !{!66, !64}
!67 = distinct !{!67, !27}
!68 = distinct !{!68, !29}
!69 = distinct !{!69, !29}
!70 = distinct !{!70, !27}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !27}
!77 = distinct !{!77, !29}
!78 = distinct !{!78, !29}
!79 = distinct !{!79, !27}
!80 = distinct !{!80, !27}
!81 = distinct !{!81, !29}
!82 = distinct !{!82, !83, !27}
!83 = !{!"llvm.loop.unroll.runtime.disable"}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !27}
!90 = distinct !{!90, !29}
!91 = distinct !{!91, !29}
!92 = distinct !{!92, !27}
