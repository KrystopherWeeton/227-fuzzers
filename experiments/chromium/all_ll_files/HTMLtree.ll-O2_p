; ModuleID = '../../third_party/libxml/src/HTMLtree.c'
source_filename = "../../third_party/libxml/src/HTMLtree.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDict = type opaque
%struct._xmlBuffer = type { i8*, i32, i32, i32, i8* }
%struct._xmlBuf = type opaque
%struct._xmlOutputBuffer = type { i8*, i32 (i8*, i8*, i32)*, i32 (i8*)*, %struct._xmlCharEncodingHandler*, %struct._xmlBuf*, %struct._xmlBuf*, i32, i32 }
%struct._xmlCharEncodingHandler = type { i8*, i32 (i8*, i32*, i8*, i32*)*, i32 (i8*, i32*, i8*, i32*)*, %struct._uconv_t*, %struct._uconv_t* }
%struct._uconv_t = type { %struct.UConverter*, %struct.UConverter*, [1024 x i16], i16*, i16* }
%struct.UConverter = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._htmlElemDesc = type { i8*, i8, i8, i8, i8, i8, i8, i8, i8*, i8**, i8*, i8**, i8**, i8** }

@.str = private unnamed_addr constant [5 x i8] c"html\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"head\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"meta\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"http-equiv\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"Content-Type\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"content\00", align 1
@.str.6 = private unnamed_addr constant [9 x i8] c"charset=\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"Charset=\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"CHARSET=\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"charset =\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"Charset =\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"CHARSET =\00", align 1
@.str.12 = private unnamed_addr constant [22 x i8] c"text/html; charset=%s\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"HTML\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"ascii\00", align 1
@.str.15 = private unnamed_addr constant [2 x i8] c"<\00", align 1
@.str.16 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.17 = private unnamed_addr constant [2 x i8] c">\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"body\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"></\00", align 1
@.str.20 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@xmlStringText = external constant [0 x i8], align 1
@xmlStringTextNoenc = external constant [0 x i8], align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"script\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"style\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str.23 = private unnamed_addr constant [5 x i8] c"<!--\00", align 1
@.str.24 = private unnamed_addr constant [4 x i8] c"-->\00", align 1
@.str.25 = private unnamed_addr constant [3 x i8] c"<?\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.27 = private unnamed_addr constant [2 x i8] c"&\00", align 1
@.str.28 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c"</\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"UTF-8\00", align 1
@.str.31 = private unnamed_addr constant [8 x i8] c"checked\00", align 1
@.str.32 = private unnamed_addr constant [8 x i8] c"compact\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"declare\00", align 1
@.str.34 = private unnamed_addr constant [6 x i8] c"defer\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"disabled\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"ismap\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"multiple\00", align 1
@.str.38 = private unnamed_addr constant [7 x i8] c"nohref\00", align 1
@.str.39 = private unnamed_addr constant [9 x i8] c"noresize\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"noshade\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"nowrap\00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"readonly\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"selected\00", align 1
@xmlMalloc = external local_unnamed_addr global i8* (i64)*, align 8
@.str.44 = private unnamed_addr constant [30 x i8] c"allocating HTML output buffer\00", align 1
@.str.47 = private unnamed_addr constant [21 x i8] c"unknown encoding %s\0A\00", align 1
@.str.50 = private unnamed_addr constant [11 x i8] c"<!DOCTYPE \00", align 1
@.str.51 = private unnamed_addr constant [9 x i8] c" PUBLIC \00", align 1
@.str.52 = private unnamed_addr constant [20 x i8] c"about:legacy-compat\00", align 1
@.str.53 = private unnamed_addr constant [9 x i8] c" SYSTEM \00", align 1
@.str.54 = private unnamed_addr constant [3 x i8] c">\0A\00", align 1
@.str.55 = private unnamed_addr constant [2 x i8] c"=\00", align 1
@.str.56 = private unnamed_addr constant [5 x i8] c"href\00", align 1
@.str.57 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.58 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.59 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.60 = private unnamed_addr constant [2 x i8] c"a\00", align 1
@.str.61 = private unnamed_addr constant [14 x i8] c"@/:=?;#%&,+<>\00", align 1
@.str.62 = private unnamed_addr constant [4 x i8] c"=\22\22\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @htmlGetMetaEncoding(%struct._xmlDoc* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct._xmlDoc* %0, null
  br i1 %2, label %159, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %0, i64 0, i32 3
  %5 = load %struct._xmlNode*, %struct._xmlNode** %4, align 8
  %6 = icmp eq %struct._xmlNode* %5, null
  br i1 %6, label %159, label %7

7:                                                ; preds = %3, %27
  %8 = phi %struct._xmlNode* [ %29, %27 ], [ %5, %3 ]
  %9 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %27

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 2
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = tail call i32 @xmlStrEqual(i8* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %31

19:                                               ; preds = %16
  %20 = load i8*, i8** %13, align 8
  %21 = tail call i32 @xmlStrEqual(i8* %20, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %55

23:                                               ; preds = %19
  %24 = load i8*, i8** %13, align 8
  %25 = tail call i32 @xmlStrEqual(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %60

27:                                               ; preds = %23, %12, %7
  %28 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 6
  %29 = load %struct._xmlNode*, %struct._xmlNode** %28, align 8
  %30 = icmp eq %struct._xmlNode* %29, null
  br i1 %30, label %159, label %7

31:                                               ; preds = %16
  %32 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %8, i64 0, i32 3
  %33 = load %struct._xmlNode*, %struct._xmlNode** %32, align 8
  %34 = icmp eq %struct._xmlNode* %33, null
  br i1 %34, label %159, label %35

35:                                               ; preds = %31, %51
  %36 = phi %struct._xmlNode* [ %53, %51 ], [ %33, %31 ]
  %37 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  br i1 %39, label %40, label %51

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %36, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  %43 = icmp eq i8* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = tail call i32 @xmlStrEqual(i8* nonnull %42, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %44
  %48 = load i8*, i8** %41, align 8
  %49 = tail call i32 @xmlStrEqual(i8* %48, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %60

51:                                               ; preds = %47, %40, %35
  %52 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %36, i64 0, i32 6
  %53 = load %struct._xmlNode*, %struct._xmlNode** %52, align 8
  %54 = icmp eq %struct._xmlNode* %53, null
  br i1 %54, label %159, label %35

55:                                               ; preds = %19, %44
  %56 = phi %struct._xmlNode* [ %36, %44 ], [ %8, %19 ]
  %57 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %56, i64 0, i32 3
  %58 = load %struct._xmlNode*, %struct._xmlNode** %57, align 8
  %59 = icmp eq %struct._xmlNode* %58, null
  br i1 %59, label %159, label %60

60:                                               ; preds = %23, %47, %55
  %61 = phi %struct._xmlNode* [ %58, %55 ], [ %36, %47 ], [ %8, %23 ]
  br label %62

62:                                               ; preds = %60, %122
  %63 = phi %struct._xmlNode* [ %124, %122 ], [ %61, %60 ]
  %64 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %63, i64 0, i32 1
  %65 = load i32, i32* %64, align 8
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %122

67:                                               ; preds = %62
  %68 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %63, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %122, label %71

71:                                               ; preds = %67
  %72 = tail call i32 @xmlStrEqual(i8* nonnull %69, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %122, label %74

74:                                               ; preds = %71
  %75 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %63, i64 0, i32 11
  %76 = load %struct._xmlAttr*, %struct._xmlAttr** %75, align 8
  %77 = icmp eq %struct._xmlAttr* %76, null
  br i1 %77, label %122, label %78

78:                                               ; preds = %74, %116
  %79 = phi %struct._xmlAttr* [ %120, %116 ], [ %76, %74 ]
  %80 = phi i32 [ %118, %116 ], [ 0, %74 ]
  %81 = phi i8* [ %117, %116 ], [ null, %74 ]
  %82 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %79, i64 0, i32 3
  %83 = load %struct._xmlNode*, %struct._xmlNode** %82, align 8
  %84 = icmp eq %struct._xmlNode* %83, null
  br i1 %84, label %116, label %85

85:                                               ; preds = %78
  %86 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %83, i64 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 3
  br i1 %88, label %89, label %116

89:                                               ; preds = %85
  %90 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %83, i64 0, i32 6
  %91 = load %struct._xmlNode*, %struct._xmlNode** %90, align 8
  %92 = icmp eq %struct._xmlNode* %91, null
  br i1 %92, label %93, label %116

93:                                               ; preds = %89
  %94 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %83, i64 0, i32 10
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %79, i64 0, i32 2
  %97 = load i8*, i8** %96, align 8
  %98 = tail call i32 @xmlStrcasecmp(i8* %97, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = tail call i32 @xmlStrcasecmp(i8* %95, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %100, %93
  %104 = icmp eq i8* %95, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %103
  %106 = load i8*, i8** %96, align 8
  %107 = tail call i32 @xmlStrcasecmp(i8* %106, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #4
  %108 = icmp eq i32 %107, 0
  %109 = select i1 %108, i8* %95, i8* %81
  br label %110

110:                                              ; preds = %105, %100, %103
  %111 = phi i8* [ %81, %103 ], [ %81, %100 ], [ %109, %105 ]
  %112 = phi i32 [ %80, %103 ], [ 1, %100 ], [ %80, %105 ]
  %113 = icmp ne i32 %112, 0
  %114 = icmp ne i8* %111, null
  %115 = and i1 %114, %113
  br i1 %115, label %126, label %116

116:                                              ; preds = %78, %110, %89, %85
  %117 = phi i8* [ %111, %110 ], [ %81, %89 ], [ %81, %85 ], [ %81, %78 ]
  %118 = phi i32 [ %112, %110 ], [ %80, %89 ], [ %80, %85 ], [ %80, %78 ]
  %119 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %79, i64 0, i32 6
  %120 = load %struct._xmlAttr*, %struct._xmlAttr** %119, align 8
  %121 = icmp eq %struct._xmlAttr* %120, null
  br i1 %121, label %122, label %78

122:                                              ; preds = %116, %74, %71, %67, %62
  %123 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %63, i64 0, i32 6
  %124 = load %struct._xmlNode*, %struct._xmlNode** %123, align 8
  %125 = icmp eq %struct._xmlNode* %124, null
  br i1 %125, label %159, label %62

126:                                              ; preds = %110
  %127 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i64 0, i64 0)) #4
  %128 = icmp eq i8* %127, null
  br i1 %128, label %129, label %135

129:                                              ; preds = %126
  %130 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #4
  %131 = icmp eq i8* %130, null
  br i1 %131, label %132, label %135

132:                                              ; preds = %129
  %133 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #4
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %126, %129, %132
  %136 = phi i8* [ %133, %132 ], [ %130, %129 ], [ %127, %126 ]
  %137 = getelementptr inbounds i8, i8* %136, i64 8
  br label %151

138:                                              ; preds = %132
  %139 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #4
  %140 = icmp eq i8* %139, null
  br i1 %140, label %141, label %144

141:                                              ; preds = %138
  %142 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #4
  %143 = icmp eq i8* %142, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %141, %138
  %145 = phi i8* [ %139, %138 ], [ %142, %141 ]
  %146 = getelementptr inbounds i8, i8* %145, i64 9
  br label %151

147:                                              ; preds = %141
  %148 = tail call i8* @xmlStrstr(i8* nonnull %111, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #4
  %149 = icmp eq i8* %148, null
  %150 = getelementptr inbounds i8, i8* %148, i64 9
  br i1 %149, label %159, label %151

151:                                              ; preds = %144, %147, %135
  %152 = phi i8* [ %137, %135 ], [ %150, %147 ], [ %146, %144 ]
  %153 = icmp eq i8* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %151, %157
  %155 = phi i8* [ %158, %157 ], [ %152, %151 ]
  %156 = load i8, i8* %155, align 1
  switch i8 %156, label %159 [
    i8 32, label %157
    i8 9, label %157
  ]

157:                                              ; preds = %154, %154
  %158 = getelementptr inbounds i8, i8* %155, i64 1
  br label %154

159:                                              ; preds = %27, %51, %122, %154, %3, %31, %55, %147, %151, %1
  %160 = phi i8* [ null, %1 ], [ null, %151 ], [ null, %147 ], [ null, %55 ], [ null, %31 ], [ null, %3 ], [ %155, %154 ], [ null, %122 ], [ null, %51 ], [ null, %27 ]
  ret i8* %160
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @xmlStrEqual(i8*, i8*) local_unnamed_addr #2

declare i32 @xmlStrcasecmp(i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @xmlStrstr(i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlSetMetaEncoding(%struct._xmlDoc*, i8*) local_unnamed_addr #0 {
  %3 = alloca [100 x i8], align 16
  %4 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 100, i8* nonnull %4) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 100, i1 false)
  store i8 0, i8* %4, align 16
  %5 = icmp eq %struct._xmlDoc* %0, null
  br i1 %5, label %177, label %6

6:                                                ; preds = %2
  %7 = tail call i32 @xmlStrcasecmp(i8* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %177, label %9

9:                                                ; preds = %6
  %10 = icmp ne i8* %1, null
  br i1 %10, label %11, label %14

11:                                               ; preds = %9
  %12 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %4, i64 100, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.12, i64 0, i64 0), i8* nonnull %1) #4
  %13 = getelementptr inbounds [100 x i8], [100 x i8]* %3, i64 0, i64 99
  store i8 0, i8* %13, align 1
  br label %14

14:                                               ; preds = %11, %9
  %15 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %0, i64 0, i32 3
  %16 = load %struct._xmlNode*, %struct._xmlNode** %15, align 8
  %17 = icmp eq %struct._xmlNode* %16, null
  br i1 %17, label %177, label %18

18:                                               ; preds = %14, %38
  %19 = phi %struct._xmlNode* [ %40, %38 ], [ %16, %14 ]
  %20 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %19, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %38

23:                                               ; preds = %18
  %24 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %19, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %38, label %27

27:                                               ; preds = %23
  %28 = tail call i32 @xmlStrcasecmp(i8* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %42, label %30

30:                                               ; preds = %27
  %31 = load i8*, i8** %24, align 8
  %32 = tail call i32 @xmlStrcasecmp(i8* %31, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %69, label %34

34:                                               ; preds = %30
  %35 = load i8*, i8** %24, align 8
  %36 = tail call i32 @xmlStrcasecmp(i8* %35, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %74, label %38

38:                                               ; preds = %23, %34, %18
  %39 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %19, i64 0, i32 6
  %40 = load %struct._xmlNode*, %struct._xmlNode** %39, align 8
  %41 = icmp eq %struct._xmlNode* %40, null
  br i1 %41, label %177, label %18

42:                                               ; preds = %27
  %43 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %19, i64 0, i32 3
  %44 = load %struct._xmlNode*, %struct._xmlNode** %43, align 8
  %45 = icmp eq %struct._xmlNode* %44, null
  br i1 %45, label %177, label %46

46:                                               ; preds = %42, %65
  %47 = phi %struct._xmlNode* [ %67, %65 ], [ %44, %42 ]
  %48 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %47, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %65

51:                                               ; preds = %46
  %52 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %47, i64 0, i32 2
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @xmlStrcasecmp(i8* nonnull %53, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0)) #4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %55
  %59 = load i8*, i8** %52, align 8
  %60 = tail call i32 @xmlStrcasecmp(i8* %59, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %47, i64 0, i32 5
  %64 = load %struct._xmlNode*, %struct._xmlNode** %63, align 8
  br label %74

65:                                               ; preds = %51, %58, %46
  %66 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %47, i64 0, i32 6
  %67 = load %struct._xmlNode*, %struct._xmlNode** %66, align 8
  %68 = icmp eq %struct._xmlNode* %67, null
  br i1 %68, label %177, label %46

69:                                               ; preds = %30, %55
  %70 = phi %struct._xmlNode* [ %47, %55 ], [ %19, %30 ]
  %71 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %70, i64 0, i32 3
  %72 = load %struct._xmlNode*, %struct._xmlNode** %71, align 8
  %73 = icmp eq %struct._xmlNode* %72, null
  br i1 %73, label %153, label %74

74:                                               ; preds = %34, %62, %69
  %75 = phi %struct._xmlNode* [ %47, %62 ], [ %72, %69 ], [ %19, %34 ]
  %76 = phi %struct._xmlNode* [ %64, %62 ], [ %70, %69 ], [ null, %34 ]
  br label %77

77:                                               ; preds = %74, %144
  %78 = phi i8* [ %145, %144 ], [ null, %74 ]
  %79 = phi %struct._xmlNode* [ %147, %144 ], [ %75, %74 ]
  %80 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %79, i64 0, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %144

83:                                               ; preds = %77
  %84 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %79, i64 0, i32 2
  %85 = load i8*, i8** %84, align 8
  %86 = icmp eq i8* %85, null
  br i1 %86, label %144, label %87

87:                                               ; preds = %83
  %88 = tail call i32 @xmlStrcasecmp(i8* nonnull %85, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0)) #4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %144

90:                                               ; preds = %87
  %91 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %79, i64 0, i32 11
  %92 = load %struct._xmlAttr*, %struct._xmlAttr** %91, align 8
  %93 = icmp eq %struct._xmlAttr* %92, null
  br i1 %93, label %144, label %94

94:                                               ; preds = %90, %132
  %95 = phi %struct._xmlAttr* [ %136, %132 ], [ %92, %90 ]
  %96 = phi i32 [ %134, %132 ], [ 0, %90 ]
  %97 = phi i8* [ %133, %132 ], [ null, %90 ]
  %98 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %95, i64 0, i32 3
  %99 = load %struct._xmlNode*, %struct._xmlNode** %98, align 8
  %100 = icmp eq %struct._xmlNode* %99, null
  br i1 %100, label %132, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %99, i64 0, i32 1
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 3
  br i1 %104, label %105, label %132

105:                                              ; preds = %101
  %106 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %99, i64 0, i32 6
  %107 = load %struct._xmlNode*, %struct._xmlNode** %106, align 8
  %108 = icmp eq %struct._xmlNode* %107, null
  br i1 %108, label %109, label %132

109:                                              ; preds = %105
  %110 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %99, i64 0, i32 10
  %111 = load i8*, i8** %110, align 8
  %112 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %95, i64 0, i32 2
  %113 = load i8*, i8** %112, align 8
  %114 = tail call i32 @xmlStrcasecmp(i8* %113, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0)) #4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %109
  %117 = tail call i32 @xmlStrcasecmp(i8* %111, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #4
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %116, %109
  %120 = icmp eq i8* %111, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %119
  %122 = load i8*, i8** %112, align 8
  %123 = tail call i32 @xmlStrcasecmp(i8* %122, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #4
  %124 = icmp eq i32 %123, 0
  %125 = select i1 %124, i8* %111, i8* %97
  br label %126

126:                                              ; preds = %121, %116, %119
  %127 = phi i8* [ %97, %119 ], [ %97, %116 ], [ %125, %121 ]
  %128 = phi i32 [ %96, %119 ], [ 1, %116 ], [ %96, %121 ]
  %129 = icmp ne i32 %128, 0
  %130 = icmp ne i8* %127, null
  %131 = and i1 %130, %129
  br i1 %131, label %138, label %132

132:                                              ; preds = %94, %126, %105, %101
  %133 = phi i8* [ %127, %126 ], [ %97, %105 ], [ %97, %101 ], [ %97, %94 ]
  %134 = phi i32 [ %128, %126 ], [ %96, %105 ], [ %96, %101 ], [ %96, %94 ]
  %135 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %95, i64 0, i32 6
  %136 = load %struct._xmlAttr*, %struct._xmlAttr** %135, align 8
  %137 = icmp eq %struct._xmlAttr* %136, null
  br i1 %137, label %138, label %94

138:                                              ; preds = %126, %132
  %139 = phi i8* [ %127, %126 ], [ %133, %132 ]
  %140 = phi i32 [ %128, %126 ], [ %134, %132 ]
  %141 = icmp ne i32 %140, 0
  %142 = icmp ne i8* %139, null
  %143 = and i1 %142, %141
  br i1 %143, label %149, label %144

144:                                              ; preds = %90, %138, %83, %87, %77
  %145 = phi i8* [ %139, %138 ], [ %78, %87 ], [ %78, %83 ], [ %78, %77 ], [ null, %90 ]
  %146 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %79, i64 0, i32 6
  %147 = load %struct._xmlNode*, %struct._xmlNode** %146, align 8
  %148 = icmp eq %struct._xmlNode* %147, null
  br i1 %148, label %149, label %77

149:                                              ; preds = %144, %138
  %150 = phi %struct._xmlNode* [ null, %144 ], [ %79, %138 ]
  %151 = phi i8* [ %145, %144 ], [ %139, %138 ]
  %152 = icmp eq %struct._xmlNode* %150, null
  br i1 %152, label %153, label %169

153:                                              ; preds = %69, %149
  %154 = phi %struct._xmlNode* [ %76, %149 ], [ %70, %69 ]
  %155 = icmp ne %struct._xmlNode* %154, null
  %156 = and i1 %10, %155
  br i1 %156, label %157, label %177

157:                                              ; preds = %153
  %158 = tail call %struct._xmlNode* @xmlNewDocNode(%struct._xmlDoc* nonnull %0, %struct._xmlNs* null, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), i8* null) #4
  %159 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %154, i64 0, i32 3
  %160 = load %struct._xmlNode*, %struct._xmlNode** %159, align 8
  %161 = icmp eq %struct._xmlNode* %160, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %157
  %163 = tail call %struct._xmlNode* @xmlAddChild(%struct._xmlNode* nonnull %154, %struct._xmlNode* %158) #4
  br label %166

164:                                              ; preds = %157
  %165 = tail call %struct._xmlNode* @xmlAddPrevSibling(%struct._xmlNode* nonnull %160, %struct._xmlNode* %158) #4
  br label %166

166:                                              ; preds = %164, %162
  %167 = tail call %struct._xmlAttr* @xmlNewProp(%struct._xmlNode* %158, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0)) #4
  %168 = call %struct._xmlAttr* @xmlNewProp(%struct._xmlNode* %158, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %4) #4
  br label %177

169:                                              ; preds = %149
  %170 = icmp eq i8* %1, null
  br i1 %170, label %171, label %172

171:                                              ; preds = %169
  tail call void @xmlUnlinkNode(%struct._xmlNode* nonnull %150) #4
  tail call void @xmlFreeNode(%struct._xmlNode* nonnull %150) #4
  br label %177

172:                                              ; preds = %169
  %173 = tail call i8* @xmlStrcasestr(i8* %151, i8* nonnull %1) #4
  %174 = icmp eq i8* %173, null
  br i1 %174, label %175, label %177

175:                                              ; preds = %172
  %176 = call %struct._xmlAttr* @xmlSetProp(%struct._xmlNode* nonnull %150, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %4) #4
  br label %177

177:                                              ; preds = %38, %65, %14, %42, %166, %153, %172, %175, %171, %6, %2
  %178 = phi i32 [ -1, %2 ], [ -1, %6 ], [ 0, %171 ], [ 0, %175 ], [ 0, %172 ], [ 0, %153 ], [ 0, %166 ], [ -1, %42 ], [ -1, %14 ], [ -1, %65 ], [ -1, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 100, i8* nonnull %4) #4
  ret i32 %178
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #3

declare %struct._xmlNode* @xmlNewDocNode(%struct._xmlDoc*, %struct._xmlNs*, i8*, i8*) local_unnamed_addr #2

declare %struct._xmlNode* @xmlAddChild(%struct._xmlNode*, %struct._xmlNode*) local_unnamed_addr #2

declare %struct._xmlNode* @xmlAddPrevSibling(%struct._xmlNode*, %struct._xmlNode*) local_unnamed_addr #2

declare %struct._xmlAttr* @xmlNewProp(%struct._xmlNode*, i8*, i8*) local_unnamed_addr #2

declare void @xmlUnlinkNode(%struct._xmlNode*) local_unnamed_addr #2

declare void @xmlFreeNode(%struct._xmlNode*) local_unnamed_addr #2

declare i8* @xmlStrcasestr(i8*, i8*) local_unnamed_addr #2

declare %struct._xmlAttr* @xmlSetProp(%struct._xmlNode*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlIsBooleanAttr(i8*) local_unnamed_addr #0 {
  %2 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31, i64 0, i64 0), i8* %0) #4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.32, i64 0, i64 0), i8* %0) #4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %35, %32, %29, %26, %23, %20, %17, %14, %11, %8, %4, %1
  ret i32 1

8:                                                ; preds = %4
  %9 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i8* %0) #4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %7, label %11

11:                                               ; preds = %8
  %12 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.34, i64 0, i64 0), i8* %0) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %7, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* %0) #4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %7, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i64 0, i64 0), i8* %0) #4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %7, label %20

20:                                               ; preds = %17
  %21 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.37, i64 0, i64 0), i8* %0) #4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %7, label %23

23:                                               ; preds = %20
  %24 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.38, i64 0, i64 0), i8* %0) #4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %7, label %26

26:                                               ; preds = %23
  %27 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.39, i64 0, i64 0), i8* %0) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %7, label %29

29:                                               ; preds = %26
  %30 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0), i8* %0) #4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %7, label %32

32:                                               ; preds = %29
  %33 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0), i8* %0) #4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %7, label %35

35:                                               ; preds = %32
  %36 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0), i8* %0) #4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %7, label %38

38:                                               ; preds = %35
  %39 = tail call i32 @xmlStrcasecmp(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i8* %0) #4
  %40 = icmp eq i32 %39, 0
  %41 = zext i1 %40 to i32
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlNodeDump(%struct._xmlBuffer*, %struct._xmlDoc*, %struct._xmlNode*) local_unnamed_addr #0 {
  %4 = icmp eq %struct._xmlBuffer* %0, null
  %5 = icmp eq %struct._xmlNode* %2, null
  %6 = or i1 %4, %5
  br i1 %6, label %33, label %7

7:                                                ; preds = %3
  tail call void @xmlInitParser() #4
  %8 = tail call %struct._xmlBuf* @xmlBufFromBuffer(%struct._xmlBuffer* nonnull %0) #4
  %9 = icmp eq %struct._xmlBuf* %8, null
  br i1 %9, label %33, label %10

10:                                               ; preds = %7
  %11 = load i8* (i64)*, i8* (i64)** @xmlMalloc, align 8
  %12 = tail call i8* %11(i64 56) #4
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %10
  tail call void @__xmlSimpleError(i32 7, i32 2, %struct._xmlNode* null, i8* null, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.44, i64 0, i64 0)) #4
  %15 = tail call %struct._xmlBuffer* @xmlBufBackToBuffer(%struct._xmlBuf* nonnull %8) #4
  br label %32

16:                                               ; preds = %10
  %17 = bitcast i8* %12 to %struct._xmlOutputBuffer*
  %18 = getelementptr inbounds i8, i8* %12, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #4
  %19 = getelementptr inbounds i8, i8* %12, i64 32
  %20 = bitcast i8* %19 to %struct._xmlBuf**
  store %struct._xmlBuf* %8, %struct._xmlBuf** %20, align 8
  %21 = getelementptr inbounds i8, i8* %12, i64 48
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false) #4
  %23 = tail call i64 @xmlBufUse(%struct._xmlBuf* nonnull %8) #4
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %17, %struct._xmlDoc* %1, %struct._xmlNode* nonnull %2, i8* null, i32 1) #4
  %24 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %24(i8* nonnull %12) #4
  %25 = tail call i64 @xmlBufUse(%struct._xmlBuf* nonnull %8) #4
  %26 = sub i64 %25, %23
  %27 = shl i64 %26, 32
  %28 = ashr exact i64 %27, 32
  %29 = tail call %struct._xmlBuffer* @xmlBufBackToBuffer(%struct._xmlBuf* nonnull %8) #4
  %30 = icmp ugt i64 %28, 2147483647
  %31 = trunc i64 %28 to i32
  br i1 %30, label %32, label %33

32:                                               ; preds = %14, %16
  br label %33

33:                                               ; preds = %3, %7, %16, %32
  %34 = phi i32 [ -1, %32 ], [ %31, %16 ], [ -1, %7 ], [ -1, %3 ]
  ret i32 %34
}

declare void @xmlInitParser() local_unnamed_addr #2

declare %struct._xmlBuf* @xmlBufFromBuffer(%struct._xmlBuffer*) local_unnamed_addr #2

declare %struct._xmlBuffer* @xmlBufBackToBuffer(%struct._xmlBuf*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlNodeDumpFileFormat(%struct._IO_FILE*, %struct._xmlDoc*, %struct._xmlNode*, i8*, i32) local_unnamed_addr #0 {
  tail call void @xmlInitParser() #4
  %6 = icmp eq i8* %3, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %5
  %8 = tail call i32 @xmlParseCharEncoding(i8* nonnull %3) #4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %19, label %10

10:                                               ; preds = %7
  %11 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %3) #4
  %12 = icmp eq %struct._xmlCharEncodingHandler* %11, null
  br i1 %12, label %13, label %19

13:                                               ; preds = %10
  tail call void @__xmlSimpleError(i32 7, i32 1403, %struct._xmlNode* null, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %3) #4
  br label %19

14:                                               ; preds = %5
  %15 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %16 = icmp eq %struct._xmlCharEncodingHandler* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %14
  %18 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %19

19:                                               ; preds = %13, %10, %7, %14, %17
  %20 = phi %struct._xmlCharEncodingHandler* [ %18, %17 ], [ %15, %14 ], [ null, %13 ], [ %11, %10 ], [ null, %7 ]
  %21 = tail call %struct._xmlOutputBuffer* @xmlOutputBufferCreateFile(%struct._IO_FILE* %0, %struct._xmlCharEncodingHandler* %20) #4
  %22 = icmp eq %struct._xmlOutputBuffer* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %21, %struct._xmlDoc* %1, %struct._xmlNode* %2, i8* null, i32 %4)
  %24 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %21) #4
  br label %25

25:                                               ; preds = %19, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %19 ]
  ret i32 %26
}

declare i32 @xmlParseCharEncoding(i8*) local_unnamed_addr #2

declare %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8*) local_unnamed_addr #2

declare %struct._xmlOutputBuffer* @xmlOutputBufferCreateFile(%struct._IO_FILE*, %struct._xmlCharEncodingHandler*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer*, %struct._xmlDoc*, %struct._xmlNode*, i8* nocapture readnone, i32) local_unnamed_addr #0 {
  tail call void @xmlInitParser() #4
  %6 = icmp eq %struct._xmlNode* %2, null
  %7 = icmp eq %struct._xmlOutputBuffer* %0, null
  %8 = or i1 %7, %6
  br i1 %8, label %373, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %2, i64 0, i32 5
  %11 = load %struct._xmlNode*, %struct._xmlNode** %10, align 8
  %12 = icmp ne i32 %4, 0
  %13 = icmp eq i32 %4, 0
  %14 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  br label %15

15:                                               ; preds = %177, %9
  %16 = phi %struct._xmlNode* [ %2, %9 ], [ %178, %177 ]
  %17 = phi %struct._xmlNode* [ %11, %9 ], [ %179, %177 ]
  %18 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  switch i32 %19, label %281 [
    i32 13, label %20
    i32 9, label %20
    i32 1, label %68
    i32 2, label %208
    i32 3, label %210
    i32 8, label %243
    i32 7, label %252
    i32 5, label %269
    i32 4, label %275
  ]

20:                                               ; preds = %15, %15
  %21 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 10
  %22 = bitcast i8** %21 to %struct._xmlDtd**
  %23 = load %struct._xmlDtd*, %struct._xmlDtd** %22, align 8
  %24 = icmp eq %struct._xmlDtd* %23, null
  br i1 %24, label %60, label %25

25:                                               ; preds = %20
  %26 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.50, i64 0, i64 0)) #4
  %27 = getelementptr inbounds %struct._xmlDtd, %struct._xmlDtd* %23, i64 0, i32 2
  %28 = load i8*, i8** %27, align 8
  %29 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %28) #4
  %30 = getelementptr inbounds %struct._xmlDtd, %struct._xmlDtd* %23, i64 0, i32 13
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %25
  %34 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.51, i64 0, i64 0)) #4
  %35 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %36 = load i8*, i8** %30, align 8
  %37 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %35, i8* %36) #4
  %38 = getelementptr inbounds %struct._xmlDtd, %struct._xmlDtd* %23, i64 0, i32 14
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %33
  %42 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #4
  %43 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %44 = load i8*, i8** %38, align 8
  %45 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %43, i8* %44) #4
  br label %58

46:                                               ; preds = %25
  %47 = getelementptr inbounds %struct._xmlDtd, %struct._xmlDtd* %23, i64 0, i32 14
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %58, label %50

50:                                               ; preds = %46
  %51 = tail call i32 @xmlStrcmp(i8* nonnull %48, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.52, i64 0, i64 0)) #4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i64 0, i64 0)) #4
  %55 = load %struct._xmlBuf*, %struct._xmlBuf** %14, align 8
  %56 = load i8*, i8** %47, align 8
  %57 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %55, i8* %56) #4
  br label %58

58:                                               ; preds = %53, %50, %46, %41, %33
  %59 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.54, i64 0, i64 0)) #4
  br label %60

60:                                               ; preds = %58, %20
  %61 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 5
  %62 = load %struct._xmlNode*, %struct._xmlNode** %61, align 8
  %63 = icmp eq %struct._xmlNode* %62, %17
  br i1 %63, label %64, label %281

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 3
  %66 = load %struct._xmlNode*, %struct._xmlNode** %65, align 8
  %67 = icmp eq %struct._xmlNode* %66, null
  br i1 %67, label %281, label %177

68:                                               ; preds = %15
  %69 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 5
  %70 = load %struct._xmlNode*, %struct._xmlNode** %69, align 8
  %71 = icmp eq %struct._xmlNode* %70, %17
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 3
  %74 = load %struct._xmlNode*, %struct._xmlNode** %73, align 8
  %75 = icmp eq %struct._xmlNode* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %72
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlNode* %16, i8* %3, i32 %4)
  br label %281

77:                                               ; preds = %72, %68
  %78 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 9
  %79 = load %struct._xmlNs*, %struct._xmlNs** %78, align 8
  %80 = icmp eq %struct._xmlNs* %79, null
  br i1 %80, label %81, label %85

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 2
  %83 = load i8*, i8** %82, align 8
  %84 = tail call %struct._htmlElemDesc* @htmlTagLookup(i8* %83) #4
  br label %85

85:                                               ; preds = %77, %81
  %86 = phi %struct._htmlElemDesc* [ %84, %81 ], [ null, %77 ]
  %87 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.15, i64 0, i64 0)) #4
  %88 = load %struct._xmlNs*, %struct._xmlNs** %78, align 8
  %89 = icmp eq %struct._xmlNs* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %88, i64 0, i32 3
  %92 = load i8*, i8** %91, align 8
  %93 = icmp eq i8* %92, null
  br i1 %93, label %97, label %94

94:                                               ; preds = %90
  %95 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %92) #4
  %96 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #4
  br label %97

97:                                               ; preds = %90, %85, %94
  %98 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 2
  %99 = load i8*, i8** %98, align 8
  %100 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %99) #4
  %101 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 12
  %102 = load %struct._xmlNs*, %struct._xmlNs** %101, align 8
  %103 = icmp eq %struct._xmlNs* %102, null
  br i1 %103, label %105, label %104

104:                                              ; preds = %97
  tail call void @xmlNsListDumpOutput(%struct._xmlOutputBuffer* %0, %struct._xmlNs* nonnull %102) #4
  br label %105

105:                                              ; preds = %97, %104
  %106 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 11
  %107 = load %struct._xmlAttr*, %struct._xmlAttr** %106, align 8
  %108 = icmp eq %struct._xmlAttr* %107, null
  br i1 %108, label %114, label %109

109:                                              ; preds = %105, %109
  %110 = phi %struct._xmlAttr* [ %112, %109 ], [ %107, %105 ]
  tail call fastcc void @htmlAttrDumpOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlAttr* nonnull %110)
  %111 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %110, i64 0, i32 6
  %112 = load %struct._xmlAttr*, %struct._xmlAttr** %111, align 8
  %113 = icmp eq %struct._xmlAttr* %112, null
  br i1 %113, label %114, label %109

114:                                              ; preds = %109, %105
  %115 = icmp ne %struct._htmlElemDesc* %86, null
  br i1 %115, label %116, label %120

116:                                              ; preds = %114
  %117 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %86, i64 0, i32 4
  %118 = load i8, i8* %117, align 1
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %120, label %180

120:                                              ; preds = %116, %114
  %121 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 3
  %122 = load %struct._xmlNode*, %struct._xmlNode** %121, align 8
  %123 = icmp eq %struct._xmlNode* %122, null
  br i1 %123, label %124, label %152

124:                                              ; preds = %120
  br i1 %115, label %125, label %138

125:                                              ; preds = %124
  %126 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %86, i64 0, i32 3
  %127 = load i8, i8* %126, align 2
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %86, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = tail call i32 @xmlStrcmp(i8* %131, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0)) #4
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %129
  %135 = load i8*, i8** %130, align 8
  %136 = tail call i32 @xmlStrcmp(i8* %135, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %180

138:                                              ; preds = %134, %129, %125, %124
  %139 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0)) #4
  %140 = load %struct._xmlNs*, %struct._xmlNs** %78, align 8
  %141 = icmp eq %struct._xmlNs* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %140, i64 0, i32 3
  %144 = load i8*, i8** %143, align 8
  %145 = icmp eq i8* %144, null
  br i1 %145, label %149, label %146

146:                                              ; preds = %142
  %147 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %144) #4
  %148 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #4
  br label %149

149:                                              ; preds = %142, %138, %146
  %150 = load i8*, i8** %98, align 8
  %151 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %150) #4
  br label %180

152:                                              ; preds = %120
  %153 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #4
  %154 = and i1 %12, %115
  br i1 %154, label %155, label %175

155:                                              ; preds = %152
  %156 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %86, i64 0, i32 7
  %157 = load i8, i8* %156, align 2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %159, label %175

159:                                              ; preds = %155
  %160 = load %struct._xmlNode*, %struct._xmlNode** %121, align 8
  %161 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %160, i64 0, i32 1
  %162 = load i32, i32* %161, align 8
  switch i32 %162, label %163 [
    i32 3, label %175
    i32 5, label %175
  ]

163:                                              ; preds = %159
  %164 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 4
  %165 = load %struct._xmlNode*, %struct._xmlNode** %164, align 8
  %166 = icmp eq %struct._xmlNode* %160, %165
  br i1 %166, label %175, label %167

167:                                              ; preds = %163
  %168 = load i8*, i8** %98, align 8
  %169 = icmp eq i8* %168, null
  br i1 %169, label %175, label %170

170:                                              ; preds = %167
  %171 = load i8, i8* %168, align 1
  %172 = icmp eq i8 %171, 112
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %175

175:                                              ; preds = %159, %159, %170, %167, %163, %155, %173, %152
  %176 = load %struct._xmlNode*, %struct._xmlNode** %121, align 8
  br label %177

177:                                              ; preds = %283, %175, %64
  %178 = phi %struct._xmlNode* [ %176, %175 ], [ %66, %64 ], [ %287, %283 ]
  %179 = phi %struct._xmlNode* [ %16, %175 ], [ %16, %64 ], [ %284, %283 ]
  br label %15

180:                                              ; preds = %134, %116, %149
  %181 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #4
  br i1 %13, label %281, label %182

182:                                              ; preds = %180
  %183 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 6
  %184 = load %struct._xmlNode*, %struct._xmlNode** %183, align 8
  %185 = icmp ne %struct._xmlNode* %184, null
  %186 = and i1 %115, %185
  br i1 %186, label %187, label %281

187:                                              ; preds = %182
  %188 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %86, i64 0, i32 7
  %189 = load i8, i8* %188, align 2
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %281

191:                                              ; preds = %187
  %192 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %184, i64 0, i32 1
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 3
  br i1 %194, label %281, label %195

195:                                              ; preds = %191
  %196 = icmp ne i32 %193, 5
  %197 = icmp ne %struct._xmlNode* %17, null
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %281

199:                                              ; preds = %195
  %200 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %17, i64 0, i32 2
  %201 = load i8*, i8** %200, align 8
  %202 = icmp eq i8* %201, null
  br i1 %202, label %281, label %203

203:                                              ; preds = %199
  %204 = load i8, i8* %201, align 1
  %205 = icmp eq i8 %204, 112
  br i1 %205, label %281, label %206

206:                                              ; preds = %203
  %207 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %281

208:                                              ; preds = %15
  %209 = bitcast %struct._xmlNode* %16 to %struct._xmlAttr*
  tail call fastcc void @htmlAttrDumpOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlAttr* %209)
  br label %281

210:                                              ; preds = %15
  %211 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 10
  %212 = load i8*, i8** %211, align 8
  %213 = icmp eq i8* %212, null
  br i1 %213, label %281, label %214

214:                                              ; preds = %210
  %215 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 2
  %216 = load i8*, i8** %215, align 8
  %217 = icmp ne i8* %216, getelementptr inbounds ([0 x i8], [0 x i8]* @xmlStringText, i64 0, i64 0)
  %218 = icmp eq i8* %216, getelementptr inbounds ([0 x i8], [0 x i8]* @xmlStringTextNoenc, i64 0, i64 0)
  %219 = and i1 %217, %218
  br i1 %219, label %240, label %220

220:                                              ; preds = %214
  %221 = icmp eq %struct._xmlNode* %17, null
  br i1 %221, label %233, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %17, i64 0, i32 2
  %224 = load i8*, i8** %223, align 8
  %225 = tail call i32 @xmlStrcasecmp(i8* %224, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0)) #4
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %240, label %227

227:                                              ; preds = %222
  %228 = load i8*, i8** %223, align 8
  %229 = tail call i32 @xmlStrcasecmp(i8* %228, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %240, label %231

231:                                              ; preds = %227
  %232 = load i8*, i8** %211, align 8
  br label %233

233:                                              ; preds = %231, %220
  %234 = phi i8* [ %232, %231 ], [ %212, %220 ]
  %235 = tail call i8* @xmlEncodeEntitiesReentrant(%struct._xmlDoc* %1, i8* %234) #4
  %236 = icmp eq i8* %235, null
  br i1 %236, label %281, label %237

237:                                              ; preds = %233
  %238 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %235) #4
  %239 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %239(i8* nonnull %235) #4
  br label %281

240:                                              ; preds = %214, %227, %222
  %241 = load i8*, i8** %211, align 8
  %242 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %241) #4
  br label %281

243:                                              ; preds = %15
  %244 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 10
  %245 = load i8*, i8** %244, align 8
  %246 = icmp eq i8* %245, null
  br i1 %246, label %281, label %247

247:                                              ; preds = %243
  %248 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0)) #4
  %249 = load i8*, i8** %244, align 8
  %250 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %249) #4
  %251 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.24, i64 0, i64 0)) #4
  br label %281

252:                                              ; preds = %15
  %253 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 2
  %254 = load i8*, i8** %253, align 8
  %255 = icmp eq i8* %254, null
  br i1 %255, label %281, label %256

256:                                              ; preds = %252
  %257 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.25, i64 0, i64 0)) #4
  %258 = load i8*, i8** %253, align 8
  %259 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %258) #4
  %260 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 10
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, null
  br i1 %262, label %267, label %263

263:                                              ; preds = %256
  %264 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #4
  %265 = load i8*, i8** %260, align 8
  %266 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %265) #4
  br label %267

267:                                              ; preds = %256, %263
  %268 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #4
  br label %281

269:                                              ; preds = %15
  %270 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.27, i64 0, i64 0)) #4
  %271 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 2
  %272 = load i8*, i8** %271, align 8
  %273 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %272) #4
  %274 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.28, i64 0, i64 0)) #4
  br label %281

275:                                              ; preds = %15
  %276 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %16, i64 0, i32 10
  %277 = load i8*, i8** %276, align 8
  %278 = icmp eq i8* %277, null
  br i1 %278, label %281, label %279

279:                                              ; preds = %275
  %280 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %277) #4
  br label %281

281:                                              ; preds = %237, %233, %64, %203, %199, %191, %187, %180, %243, %252, %275, %15, %279, %267, %247, %240, %210, %182, %206, %195, %60, %269, %208, %76
  %282 = icmp eq %struct._xmlNode* %16, %2
  br i1 %282, label %373, label %283

283:                                              ; preds = %281, %371
  %284 = phi %struct._xmlNode* [ %291, %371 ], [ %17, %281 ]
  %285 = phi %struct._xmlNode* [ %284, %371 ], [ %16, %281 ]
  %286 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %285, i64 0, i32 6
  %287 = load %struct._xmlNode*, %struct._xmlNode** %286, align 8
  %288 = icmp eq %struct._xmlNode* %287, null
  br i1 %288, label %289, label %177

289:                                              ; preds = %283
  %290 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 5
  %291 = load %struct._xmlNode*, %struct._xmlNode** %290, align 8
  %292 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 1
  %293 = load i32, i32* %292, align 8
  switch i32 %293, label %296 [
    i32 13, label %294
    i32 9, label %294
  ]

294:                                              ; preds = %289, %289
  %295 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %371

296:                                              ; preds = %289
  br i1 %12, label %297, label %327

297:                                              ; preds = %296
  %298 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 9
  %299 = load %struct._xmlNs*, %struct._xmlNs** %298, align 8
  %300 = icmp eq %struct._xmlNs* %299, null
  br i1 %300, label %301, label %327

301:                                              ; preds = %297
  %302 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 2
  %303 = load i8*, i8** %302, align 8
  %304 = tail call %struct._htmlElemDesc* @htmlTagLookup(i8* %303) #4
  %305 = icmp eq %struct._htmlElemDesc* %304, null
  br i1 %305, label %327, label %306

306:                                              ; preds = %301
  %307 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %304, i64 0, i32 7
  %308 = load i8, i8* %307, align 2
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %310, label %327

310:                                              ; preds = %306
  %311 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 4
  %312 = load %struct._xmlNode*, %struct._xmlNode** %311, align 8
  %313 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %312, i64 0, i32 1
  %314 = load i32, i32* %313, align 8
  switch i32 %314, label %315 [
    i32 3, label %327
    i32 5, label %327
  ]

315:                                              ; preds = %310
  %316 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 3
  %317 = load %struct._xmlNode*, %struct._xmlNode** %316, align 8
  %318 = icmp eq %struct._xmlNode* %317, %312
  br i1 %318, label %327, label %319

319:                                              ; preds = %315
  %320 = load i8*, i8** %302, align 8
  %321 = icmp eq i8* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %319
  %323 = load i8, i8* %320, align 1
  %324 = icmp eq i8 %323, 112
  br i1 %324, label %327, label %325

325:                                              ; preds = %322
  %326 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %327

327:                                              ; preds = %301, %297, %296, %310, %310, %322, %319, %315, %306, %325
  %328 = phi i1 [ true, %310 ], [ true, %310 ], [ true, %322 ], [ true, %319 ], [ true, %315 ], [ true, %306 ], [ true, %325 ], [ false, %301 ], [ false, %296 ], [ false, %297 ]
  %329 = phi %struct._htmlElemDesc* [ %304, %310 ], [ %304, %310 ], [ %304, %322 ], [ %304, %319 ], [ %304, %315 ], [ %304, %306 ], [ %304, %325 ], [ null, %301 ], [ null, %296 ], [ null, %297 ]
  %330 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0)) #4
  %331 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 9
  %332 = load %struct._xmlNs*, %struct._xmlNs** %331, align 8
  %333 = icmp eq %struct._xmlNs* %332, null
  br i1 %333, label %341, label %334

334:                                              ; preds = %327
  %335 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %332, i64 0, i32 3
  %336 = load i8*, i8** %335, align 8
  %337 = icmp eq i8* %336, null
  br i1 %337, label %341, label %338

338:                                              ; preds = %334
  %339 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %336) #4
  %340 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #4
  br label %341

341:                                              ; preds = %334, %327, %338
  %342 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 2
  %343 = load i8*, i8** %342, align 8
  %344 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %343) #4
  %345 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.17, i64 0, i64 0)) #4
  br i1 %328, label %346, label %371

346:                                              ; preds = %341
  %347 = getelementptr inbounds %struct._htmlElemDesc, %struct._htmlElemDesc* %329, i64 0, i32 7
  %348 = load i8, i8* %347, align 2
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %350, label %371

350:                                              ; preds = %346
  %351 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %284, i64 0, i32 6
  %352 = load %struct._xmlNode*, %struct._xmlNode** %351, align 8
  %353 = icmp eq %struct._xmlNode* %352, null
  br i1 %353, label %371, label %354

354:                                              ; preds = %350
  %355 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %352, i64 0, i32 1
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %356, 3
  br i1 %357, label %371, label %358

358:                                              ; preds = %354
  %359 = icmp ne i32 %356, 5
  %360 = icmp ne %struct._xmlNode* %291, null
  %361 = and i1 %360, %359
  br i1 %361, label %362, label %371

362:                                              ; preds = %358
  %363 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %291, i64 0, i32 2
  %364 = load i8*, i8** %363, align 8
  %365 = icmp eq i8* %364, null
  br i1 %365, label %371, label %366

366:                                              ; preds = %362
  %367 = load i8, i8* %364, align 1
  %368 = icmp eq i8 %367, 112
  br i1 %368, label %371, label %369

369:                                              ; preds = %366
  %370 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.20, i64 0, i64 0)) #4
  br label %371

371:                                              ; preds = %366, %362, %354, %350, %346, %341, %369, %358, %294
  %372 = icmp eq %struct._xmlNode* %284, %2
  br i1 %372, label %373, label %283

373:                                              ; preds = %281, %371, %5
  ret void
}

declare i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlNodeDumpFile(%struct._IO_FILE*, %struct._xmlDoc*, %struct._xmlNode*) local_unnamed_addr #0 {
  tail call void @xmlInitParser() #4
  %4 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %5 = icmp eq %struct._xmlCharEncodingHandler* %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  %7 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi %struct._xmlCharEncodingHandler* [ %7, %6 ], [ %4, %3 ]
  %10 = tail call %struct._xmlOutputBuffer* @xmlOutputBufferCreateFile(%struct._IO_FILE* %0, %struct._xmlCharEncodingHandler* %9) #4
  %11 = icmp eq %struct._xmlOutputBuffer* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %10, %struct._xmlDoc* %1, %struct._xmlNode* %2, i8* null, i32 1) #4
  %13 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %10) #4
  br label %14

14:                                               ; preds = %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlDocDumpMemoryFormat(%struct._xmlDoc*, i8**, i32*, i32) local_unnamed_addr #0 {
  tail call void @xmlInitParser() #4
  %5 = icmp eq i8** %1, null
  %6 = icmp eq i32* %2, null
  %7 = or i1 %5, %6
  br i1 %7, label %52, label %8

8:                                                ; preds = %4
  %9 = icmp eq %struct._xmlDoc* %0, null
  br i1 %9, label %10, label %11

10:                                               ; preds = %8
  store i8* null, i8** %1, align 8
  store i32 0, i32* %2, align 4
  br label %52

11:                                               ; preds = %8
  %12 = tail call i8* @htmlGetMetaEncoding(%struct._xmlDoc* nonnull %0)
  %13 = icmp eq i8* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = tail call i32 @xmlParseCharEncoding(i8* nonnull %12) #4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %26, label %17

17:                                               ; preds = %14
  %18 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %12) #4
  %19 = icmp eq %struct._xmlCharEncodingHandler* %18, null
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  tail call void @__xmlSimpleError(i32 7, i32 1403, %struct._xmlNode* null, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %12) #4
  br label %26

21:                                               ; preds = %11
  %22 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %23 = icmp eq %struct._xmlCharEncodingHandler* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %21
  %25 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %26

26:                                               ; preds = %20, %17, %14, %21, %24
  %27 = phi %struct._xmlCharEncodingHandler* [ %25, %24 ], [ %22, %21 ], [ null, %20 ], [ %18, %17 ], [ null, %14 ]
  %28 = tail call %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler* %27) #4
  %29 = icmp eq %struct._xmlOutputBuffer* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i8* null, i8** %1, align 8
  store i32 0, i32* %2, align 4
  br label %52

31:                                               ; preds = %26
  %32 = bitcast %struct._xmlDoc* %0 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %28, %struct._xmlDoc* nonnull %0, %struct._xmlNode* nonnull %32, i8* null, i32 %3) #4
  %33 = tail call i32 @xmlOutputBufferFlush(%struct._xmlOutputBuffer* nonnull %28) #4
  %34 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %28, i64 0, i32 5
  %35 = load %struct._xmlBuf*, %struct._xmlBuf** %34, align 8
  %36 = icmp eq %struct._xmlBuf* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = tail call i64 @xmlBufUse(%struct._xmlBuf* nonnull %35) #4
  br label %43

39:                                               ; preds = %31
  %40 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %28, i64 0, i32 4
  %41 = load %struct._xmlBuf*, %struct._xmlBuf** %40, align 8
  %42 = tail call i64 @xmlBufUse(%struct._xmlBuf* %41) #4
  br label %43

43:                                               ; preds = %39, %37
  %44 = phi i64 [ %42, %39 ], [ %38, %37 ]
  %45 = phi %struct._xmlBuf** [ %40, %39 ], [ %34, %37 ]
  %46 = trunc i64 %44 to i32
  store i32 %46, i32* %2, align 4
  %47 = load %struct._xmlBuf*, %struct._xmlBuf** %45, align 8
  %48 = tail call i8* @xmlBufContent(%struct._xmlBuf* %47) #4
  %49 = load i32, i32* %2, align 4
  %50 = tail call i8* @xmlStrndup(i8* %48, i32 %49) #4
  store i8* %50, i8** %1, align 8
  %51 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %28) #4
  br label %52

52:                                               ; preds = %4, %43, %30, %10
  ret void
}

declare %struct._xmlOutputBuffer* @xmlAllocOutputBufferInternal(%struct._xmlCharEncodingHandler*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlDocContentDumpFormatOutput(%struct._xmlOutputBuffer*, %struct._xmlDoc*, i8* nocapture readnone, i32) local_unnamed_addr #0 {
  %5 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlNode* %5, i8* null, i32 %3)
  ret void
}

declare i32 @xmlOutputBufferFlush(%struct._xmlOutputBuffer*) local_unnamed_addr #2

declare i64 @xmlBufUse(%struct._xmlBuf*) local_unnamed_addr #2

declare i8* @xmlStrndup(i8*, i32) local_unnamed_addr #2

declare i8* @xmlBufContent(%struct._xmlBuf*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlDocDumpMemory(%struct._xmlDoc*, i8**, i32*) local_unnamed_addr #0 {
  tail call void @htmlDocDumpMemoryFormat(%struct._xmlDoc* %0, i8** %1, i32* %2, i32 1)
  ret void
}

declare %struct._htmlElemDesc* @htmlTagLookup(i8*) local_unnamed_addr #2

declare i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer*, i8*) local_unnamed_addr #2

declare void @xmlNsListDumpOutput(%struct._xmlOutputBuffer*, %struct._xmlNs*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @htmlAttrDumpOutput(%struct._xmlOutputBuffer*, %struct._xmlDoc*, %struct._xmlAttr* readonly) unnamed_addr #0 {
  %4 = icmp eq %struct._xmlAttr* %2, null
  br i1 %4, label %90, label %5

5:                                                ; preds = %3
  %6 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0)) #4
  %7 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %2, i64 0, i32 9
  %8 = load %struct._xmlNs*, %struct._xmlNs** %7, align 8
  %9 = icmp eq %struct._xmlNs* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %8, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %17, label %14

14:                                               ; preds = %10
  %15 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* nonnull %12) #4
  %16 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.16, i64 0, i64 0)) #4
  br label %17

17:                                               ; preds = %10, %5, %14
  %18 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %2, i64 0, i32 2
  %19 = load i8*, i8** %18, align 8
  %20 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* %19) #4
  %21 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %2, i64 0, i32 3
  %22 = load %struct._xmlNode*, %struct._xmlNode** %21, align 8
  %23 = icmp eq %struct._xmlNode* %22, null
  br i1 %23, label %90, label %24

24:                                               ; preds = %17
  %25 = load i8*, i8** %18, align 8
  %26 = tail call i32 @htmlIsBooleanAttr(i8* %25)
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %90

28:                                               ; preds = %24
  %29 = load %struct._xmlNode*, %struct._xmlNode** %21, align 8
  %30 = tail call i8* @xmlNodeListGetString(%struct._xmlDoc* %1, %struct._xmlNode* %29, i32 0) #4
  %31 = icmp eq i8* %30, null
  br i1 %31, label %88, label %32

32:                                               ; preds = %28
  %33 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.55, i64 0, i64 0)) #4
  %34 = load %struct._xmlNs*, %struct._xmlNs** %7, align 8
  %35 = icmp eq %struct._xmlNs* %34, null
  br i1 %35, label %36, label %82

36:                                               ; preds = %32
  %37 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %2, i64 0, i32 5
  %38 = load %struct._xmlNode*, %struct._xmlNode** %37, align 8
  %39 = icmp eq %struct._xmlNode* %38, null
  br i1 %39, label %82, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %38, i64 0, i32 9
  %42 = load %struct._xmlNs*, %struct._xmlNs** %41, align 8
  %43 = icmp eq %struct._xmlNs* %42, null
  br i1 %43, label %44, label %82

44:                                               ; preds = %40
  %45 = load i8*, i8** %18, align 8
  %46 = tail call i32 @xmlStrcasecmp(i8* %45, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.56, i64 0, i64 0)) #4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %66, label %48

48:                                               ; preds = %44
  %49 = load i8*, i8** %18, align 8
  %50 = tail call i32 @xmlStrcasecmp(i8* %49, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.57, i64 0, i64 0)) #4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %48
  %53 = load i8*, i8** %18, align 8
  %54 = tail call i32 @xmlStrcasecmp(i8* %53, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.58, i64 0, i64 0)) #4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %66, label %56

56:                                               ; preds = %52
  %57 = load i8*, i8** %18, align 8
  %58 = tail call i32 @xmlStrcasecmp(i8* %57, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.59, i64 0, i64 0)) #4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %82

60:                                               ; preds = %56
  %61 = load %struct._xmlNode*, %struct._xmlNode** %37, align 8
  %62 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %61, i64 0, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = tail call i32 @xmlStrcasecmp(i8* %63, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.60, i64 0, i64 0)) #4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %82

66:                                               ; preds = %60, %52, %48, %44
  br label %67

67:                                               ; preds = %66, %70
  %68 = phi i8* [ %71, %70 ], [ %30, %66 ]
  %69 = load i8, i8* %68, align 1
  switch i8 %69, label %72 [
    i8 32, label %70
    i8 13, label %70
    i8 10, label %70
    i8 9, label %70
  ]

70:                                               ; preds = %67, %67, %67, %67
  %71 = getelementptr inbounds i8, i8* %68, i64 1
  br label %67

72:                                               ; preds = %67
  %73 = tail call i8* @xmlURIEscapeStr(i8* %68, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.61, i64 0, i64 0)) #4
  %74 = icmp eq i8* %73, null
  %75 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %76 = load %struct._xmlBuf*, %struct._xmlBuf** %75, align 8
  br i1 %74, label %80, label %77

77:                                               ; preds = %72
  %78 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %76, i8* nonnull %73) #4
  %79 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %79(i8* nonnull %73) #4
  br label %86

80:                                               ; preds = %72
  %81 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %76, i8* nonnull %30) #4
  br label %86

82:                                               ; preds = %60, %56, %36, %40, %32
  %83 = getelementptr inbounds %struct._xmlOutputBuffer, %struct._xmlOutputBuffer* %0, i64 0, i32 4
  %84 = load %struct._xmlBuf*, %struct._xmlBuf** %83, align 8
  %85 = tail call i32 @xmlBufWriteQuotedString(%struct._xmlBuf* %84, i8* nonnull %30) #4
  br label %86

86:                                               ; preds = %77, %80, %82
  %87 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %87(i8* nonnull %30) #4
  br label %90

88:                                               ; preds = %28
  %89 = tail call i32 @xmlOutputBufferWriteString(%struct._xmlOutputBuffer* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.62, i64 0, i64 0)) #4
  br label %90

90:                                               ; preds = %88, %86, %17, %24, %3
  ret void
}

declare i32 @xmlStrcmp(i8*, i8*) local_unnamed_addr #2

declare i8* @xmlEncodeEntitiesReentrant(%struct._xmlDoc*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlNodeDumpOutput(%struct._xmlOutputBuffer*, %struct._xmlDoc*, %struct._xmlNode*, i8* nocapture readnone) local_unnamed_addr #0 {
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlNode* %2, i8* null, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @htmlDocContentDumpOutput(%struct._xmlOutputBuffer*, %struct._xmlDoc*, i8* nocapture readnone) local_unnamed_addr #0 {
  %4 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* %0, %struct._xmlDoc* %1, %struct._xmlNode* %4, i8* null, i32 1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlDocDump(%struct._IO_FILE*, %struct._xmlDoc*) local_unnamed_addr #0 {
  tail call void @xmlInitParser() #4
  %3 = icmp eq %struct._xmlDoc* %1, null
  %4 = icmp eq %struct._IO_FILE* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @htmlGetMetaEncoding(%struct._xmlDoc* nonnull %1)
  %8 = icmp eq i8* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @xmlParseCharEncoding(i8* nonnull %7) #4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %21, label %12

12:                                               ; preds = %9
  %13 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %7) #4
  %14 = icmp eq %struct._xmlCharEncodingHandler* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  tail call void @__xmlSimpleError(i32 7, i32 1403, %struct._xmlNode* null, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %7) #4
  br label %21

16:                                               ; preds = %6
  %17 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %18 = icmp eq %struct._xmlCharEncodingHandler* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %21

21:                                               ; preds = %15, %12, %9, %16, %19
  %22 = phi %struct._xmlCharEncodingHandler* [ %20, %19 ], [ %17, %16 ], [ null, %15 ], [ %13, %12 ], [ null, %9 ]
  %23 = tail call %struct._xmlOutputBuffer* @xmlOutputBufferCreateFile(%struct._IO_FILE* nonnull %0, %struct._xmlCharEncodingHandler* %22) #4
  %24 = icmp eq %struct._xmlOutputBuffer* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %23, %struct._xmlDoc* nonnull %1, %struct._xmlNode* %26, i8* null, i32 1) #4
  %27 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %23) #4
  br label %28

28:                                               ; preds = %21, %2, %25
  %29 = phi i32 [ %27, %25 ], [ -1, %2 ], [ -1, %21 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlSaveFile(i8*, %struct._xmlDoc*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xmlDoc* %1, null
  %4 = icmp eq i8* %0, null
  %5 = or i1 %4, %3
  br i1 %5, label %30, label %6

6:                                                ; preds = %2
  tail call void @xmlInitParser() #4
  %7 = tail call i8* @htmlGetMetaEncoding(%struct._xmlDoc* nonnull %1)
  %8 = icmp eq i8* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @xmlParseCharEncoding(i8* nonnull %7) #4
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %21, label %12

12:                                               ; preds = %9
  %13 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %7) #4
  %14 = icmp eq %struct._xmlCharEncodingHandler* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  tail call void @__xmlSimpleError(i32 7, i32 1403, %struct._xmlNode* null, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %7) #4
  br label %21

16:                                               ; preds = %6
  %17 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %18 = icmp eq %struct._xmlCharEncodingHandler* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %16
  %20 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %21

21:                                               ; preds = %15, %12, %9, %16, %19
  %22 = phi %struct._xmlCharEncodingHandler* [ %20, %19 ], [ %17, %16 ], [ null, %15 ], [ %13, %12 ], [ null, %9 ]
  %23 = getelementptr inbounds %struct._xmlDoc, %struct._xmlDoc* %1, i64 0, i32 9
  %24 = load i32, i32* %23, align 8
  %25 = tail call %struct._xmlOutputBuffer* @xmlOutputBufferCreateFilename(i8* nonnull %0, %struct._xmlCharEncodingHandler* %22, i32 %24) #4
  %26 = icmp eq %struct._xmlOutputBuffer* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %25, %struct._xmlDoc* nonnull %1, %struct._xmlNode* %28, i8* null, i32 1) #4
  %29 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %25) #4
  br label %30

30:                                               ; preds = %21, %2, %27
  %31 = phi i32 [ %29, %27 ], [ -1, %2 ], [ 0, %21 ]
  ret i32 %31
}

declare %struct._xmlOutputBuffer* @xmlOutputBufferCreateFilename(i8*, %struct._xmlCharEncodingHandler*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlSaveFileFormat(i8*, %struct._xmlDoc*, i8*, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct._xmlDoc* %1, null
  %6 = icmp eq i8* %0, null
  %7 = or i1 %6, %5
  br i1 %7, label %33, label %8

8:                                                ; preds = %4
  tail call void @xmlInitParser() #4
  %9 = icmp eq i8* %2, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %8
  %11 = tail call i32 @xmlParseCharEncoding(i8* nonnull %2) #4
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %17, label %13

13:                                               ; preds = %10
  %14 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* nonnull %2) #4
  %15 = icmp eq %struct._xmlCharEncodingHandler* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @__xmlSimpleError(i32 7, i32 1403, %struct._xmlNode* null, i8* nonnull getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i64 0, i64 0), i8* nonnull %2) #4
  br label %17

17:                                               ; preds = %10, %13, %16
  %18 = phi %struct._xmlCharEncodingHandler* [ null, %16 ], [ %14, %13 ], [ null, %10 ]
  %19 = tail call i32 @htmlSetMetaEncoding(%struct._xmlDoc* nonnull %1, i8* nonnull %2)
  br label %26

20:                                               ; preds = %8
  %21 = tail call i32 @htmlSetMetaEncoding(%struct._xmlDoc* nonnull %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0))
  %22 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.13, i64 0, i64 0)) #4
  %23 = icmp eq %struct._xmlCharEncodingHandler* %22, null
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = tail call %struct._xmlCharEncodingHandler* @xmlFindCharEncodingHandler(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #4
  br label %26

26:                                               ; preds = %20, %24, %17
  %27 = phi %struct._xmlCharEncodingHandler* [ %18, %17 ], [ %25, %24 ], [ %22, %20 ]
  %28 = tail call %struct._xmlOutputBuffer* @xmlOutputBufferCreateFilename(i8* nonnull %0, %struct._xmlCharEncodingHandler* %27, i32 0) #4
  %29 = icmp eq %struct._xmlOutputBuffer* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %struct._xmlDoc* %1 to %struct._xmlNode*
  tail call void @htmlNodeDumpFormatOutput(%struct._xmlOutputBuffer* nonnull %28, %struct._xmlDoc* nonnull %1, %struct._xmlNode* %31, i8* null, i32 %3) #4
  %32 = tail call i32 @xmlOutputBufferClose(%struct._xmlOutputBuffer* nonnull %28) #4
  br label %33

33:                                               ; preds = %26, %4, %30
  %34 = phi i32 [ %32, %30 ], [ -1, %4 ], [ 0, %26 ]
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @htmlSaveFileEnc(i8*, %struct._xmlDoc*, i8*) local_unnamed_addr #0 {
  %4 = tail call i32 @htmlSaveFileFormat(i8* %0, %struct._xmlDoc* %1, i8* %2, i32 1)
  ret i32 %4
}

declare void @__xmlSimpleError(i32, i32, %struct._xmlNode*, i8*, i8*) local_unnamed_addr #2

declare i32 @xmlBufWriteQuotedString(%struct._xmlBuf*, i8*) local_unnamed_addr #2

declare i8* @xmlNodeListGetString(%struct._xmlDoc*, %struct._xmlNode*, i32) local_unnamed_addr #2

declare i8* @xmlURIEscapeStr(i8*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
