; ModuleID = '../../third_party/skia/modules/skottie/src/effects/DropShadowEffect.cpp'
source_filename = "../../third_party/skia/modules/skottie/src/effects/DropShadowEffect.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.skottie::internal::EffectBuilder" = type { %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::CompositionBuilder"*, %struct.SkSize }
%"class.skottie::internal::AnimationBuilder" = type { %class.sk_sp, %"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr", %class.sk_sp.2, %class.sk_sp.3, %class.sk_sp.4, %class.sk_sp.5, %"struct.skottie::Animation::Builder::Stats"*, %struct.SkSize, float, float, i32, %"class.std::__1::vector"*, i8*, i8, %class.SkTHashMap, %class.SkTHashMap.11, %class.SkTHashMap.20 }
%class.sk_sp = type { %"class.skresources::ResourceProvider"* }
%"class.skresources::ResourceProvider" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.skottie::internal::AnimationBuilder::LazyResolveFontMgr" = type { %class.sk_sp.1 }
%class.sk_sp.1 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2 = type { %"class.skottie::PropertyObserver"* }
%"class.skottie::PropertyObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.3 = type { %"class.skottie::Logger"* }
%"class.skottie::Logger" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.4 = type { %"class.skottie::MarkerObserver"* }
%"class.skottie::MarkerObserver" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.5 = type { %"class.skottie::PrecompInterceptor"* }
%"class.skottie::PrecompInterceptor" = type { %class.SkRefCnt.base, [4 x i8] }
%"struct.skottie::Animation::Builder::Stats" = type { float, float, float, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.sk_sp.6*, %class.sk_sp.6*, %"class.std::__1::__compressed_pair" }
%class.sk_sp.6 = type { %"class.skottie::internal::Animator"* }
%"class.skottie::internal::Animator" = type { %class.SkRefCnt.base, [4 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.sk_sp.6* }
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::AssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.11 = type { %class.SkTHashTable.12 }
%class.SkTHashTable.12 = type { i32, i32, %class.SkAutoTArray.13 }
%class.SkAutoTArray.13 = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FontInfo, SkGoodHash>::Pair>::Slot" = type opaque
%class.SkTHashMap.20 = type { %class.SkTHashTable.21 }
%class.SkTHashTable.21 = type { i32, i32, %class.SkAutoTArray.22 }
%class.SkAutoTArray.22 = type { %"class.std::__1::unique_ptr.23" }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair, SkString, SkTHashMap<SkString, skottie::internal::AnimationBuilder::FootageAssetInfo, SkGoodHash>::Pair>::Slot" = type opaque
%"class.skottie::internal::CompositionBuilder" = type { %struct.SkSize, %"class.std::__1::vector.29", %class.SkTHashMap.39, %class.sk_sp.31, i64, float, float }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.skottie::internal::LayerBuilder"*, %"class.skottie::internal::LayerBuilder"*, %"class.std::__1::__compressed_pair.34" }
%"class.skottie::internal::LayerBuilder" = type <{ %"class.skjson::ObjectValue"*, i32, i32, i32, i8, [3 x i8], %"struct.skottie::internal::AnimationBuilder::LayerInfo", %class.sk_sp.31, [2 x %class.sk_sp.31], %class.sk_sp.32, %"class.std::__1::vector", i64, i32, [4 x i8] }>
%"class.skjson::ObjectValue" = type { %"class.skjson::VectorValue" }
%"class.skjson::VectorValue" = type { %"class.skjson::Value" }
%"class.skjson::Value" = type { [8 x i8] }
%"struct.skottie::internal::AnimationBuilder::LayerInfo" = type { %struct.SkSize, float, float }
%class.sk_sp.32 = type { %"class.sksg::RenderNode"* }
%"class.sksg::RenderNode" = type { %"class.sksg::Node.base", [6 x i8] }
%"class.sksg::Node.base" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16 }>
%union.anon = type { %"class.sksg::Node"* }
%"class.sksg::Node" = type <{ %class.SkRefCnt.base, [4 x i8], %union.anon, %struct.SkRect, i16, [6 x i8] }>
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.skottie::internal::LayerBuilder"* }
%class.SkTHashMap.39 = type { %class.SkTHashTable.40 }
%class.SkTHashTable.40 = type { i32, i32, %class.SkAutoTArray.41 }
%class.SkAutoTArray.41 = type { %"class.std::__1::unique_ptr.42" }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, unsigned long, SkGoodHash>::Pair, int, SkTHashMap<int, unsigned long, SkGoodHash>::Pair>::Slot" = type opaque
%class.sk_sp.31 = type { %"class.sksg::Transform"* }
%"class.sksg::Transform" = type opaque
%struct.SkSize = type { float, float }
%"class.skjson::ArrayValue" = type { %"class.skjson::VectorValue.48" }
%"class.skjson::VectorValue.48" = type { %"class.skjson::Value" }
%class.sk_sp.66 = type { %"class.sksg::ImageFilter"* }
%"class.sksg::ImageFilter" = type { %"class.sksg::Node.base", %"class.std::__1::unique_ptr.51", %class.sk_sp.58 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::vector.54"* }
%"class.std::__1::vector.54" = type opaque
%class.sk_sp.58 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.50 = type { %"class.sksg::DropShadowImageFilter"* }
%"class.sksg::DropShadowImageFilter" = type { %"class.sksg::ImageFilter", %struct.SkPoint, %struct.SkPoint, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.skottie::internal::Animator.base" = type { %class.SkRefCnt.base }
%"class.skottie::VectorValue" = type { %"class.std::__1::vector.59" }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { float*, float*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { float* }
%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter" = type <{ %"class.skottie::internal::AnimatablePropertyContainer.base", [7 x i8], %class.sk_sp.50, %class.sk_sp.32, %"class.skottie::VectorValue", float, float, float, float, float, [4 x i8] }>
%"class.skottie::internal::AnimatablePropertyContainer.base" = type <{ %"class.skottie::internal::Animator.base", [4 x i8], %"class.std::__1::vector", i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

@_ZTVN7skottie8internal12_GLOBAL__N_117DropShadowAdapterE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapterD2Ev to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (i1 (%"class.skottie::internal::AnimatablePropertyContainer"*, float)* @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf to i8*), i8* bitcast (void (%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"*)* @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapter6onSyncEv to i8*)] }, align 8
@.ref.tmp = private unnamed_addr constant [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4
@_ZTVN7skottie8internal27AnimatablePropertyContainerE = external unnamed_addr constant { [7 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7skottie8internal13EffectBuilder22attachDropShadowEffectERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEE(%class.sk_sp.32* noalias sret, %"class.skottie::internal::EffectBuilder"* nocapture readonly, %"class.skjson::ArrayValue"* dereferenceable(8), %class.sk_sp.32* nocapture) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.66, align 8
  %6 = alloca %class.sk_sp.32, align 8
  %7 = alloca %class.sk_sp.66, align 8
  %8 = alloca %class.sk_sp.6, align 8
  %9 = getelementptr inbounds %"class.skottie::internal::EffectBuilder", %"class.skottie::internal::EffectBuilder"* %1, i64 0, i32 0
  %10 = load %"class.skottie::internal::AnimationBuilder"*, %"class.skottie::internal::AnimationBuilder"** %9, align 8
  %11 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %0, i64 0, i32 0
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  %12 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %3, i64 0, i32 0
  %13 = bitcast %class.sk_sp.32* %3 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !2
  store %"class.sksg::RenderNode"* null, %"class.sksg::RenderNode"** %12, align 8, !noalias !2
  %15 = tail call i8* @_Znwm(i64 112) #11, !noalias !5
  %16 = bitcast %class.sk_sp.66* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12, !noalias !5
  %17 = bitcast %class.sk_sp.32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12, !noalias !5
  %18 = bitcast %class.sk_sp.66* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12, !noalias !5
  %19 = getelementptr inbounds i8, i8* %15, i64 8
  %20 = bitcast i8* %19 to i32*
  store i32 1, i32* %20, align 4, !noalias !5
  %21 = bitcast i8* %15 to i32 (...)***
  %22 = getelementptr inbounds i8, i8* %15, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #12, !noalias !5
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117DropShadowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %21, align 8, !noalias !5
  %23 = getelementptr inbounds i8, i8* %15, i64 48
  %24 = bitcast i8* %23 to %class.sk_sp.50*
  %25 = getelementptr inbounds %class.sk_sp.66, %class.sk_sp.66* %5, i64 0, i32 0
  store %"class.sksg::ImageFilter"* null, %"class.sksg::ImageFilter"** %25, align 8, !noalias !5
  call void @_ZN4sksg21DropShadowImageFilter4MakeE5sk_spINS_11ImageFilterEE(%class.sk_sp.50* sret %24, %class.sk_sp.66* nonnull %5) #12, !noalias !5
  %26 = load %"class.sksg::ImageFilter"*, %"class.sksg::ImageFilter"** %25, align 8, !noalias !5
  %27 = icmp eq %"class.sksg::ImageFilter"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.sksg::ImageFilter", %"class.sksg::ImageFilter"* %26, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 -1 acq_rel, !noalias !8
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %38

32:                                               ; preds = %28
  %33 = bitcast %"class.sksg::ImageFilter"* %26 to %class.SkRefCntBase*
  %34 = bitcast %"class.sksg::ImageFilter"* %26 to void (%class.SkRefCntBase*)***
  %35 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %34, align 8, !noalias !8
  %36 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %35, i64 2
  %37 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, align 8, !noalias !8
  call void %37(%class.SkRefCntBase* nonnull %33) #12, !noalias !8
  br label %38

38:                                               ; preds = %32, %28, %4
  %39 = getelementptr inbounds i8, i8* %15, i64 56
  %40 = bitcast i8* %39 to %class.sk_sp.32*
  %41 = bitcast %class.sk_sp.32* %6 to i64*
  store i64 %14, i64* %41, align 8, !noalias !5
  %42 = getelementptr inbounds %class.sk_sp.66, %class.sk_sp.66* %7, i64 0, i32 0
  %43 = bitcast i8* %23 to %"class.sksg::DropShadowImageFilter"**
  %44 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %43, align 8, !noalias !5
  %45 = icmp eq %"class.sksg::DropShadowImageFilter"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic, !noalias !8
  br label %49

49:                                               ; preds = %46, %38
  %50 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %44, i64 0, i32 0
  store %"class.sksg::ImageFilter"* %50, %"class.sksg::ImageFilter"** %42, align 8, !noalias !5
  call void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret %40, %class.sk_sp.32* nonnull %6, %class.sk_sp.66* nonnull %7) #12, !noalias !5
  %51 = load %"class.sksg::ImageFilter"*, %"class.sksg::ImageFilter"** %42, align 8, !noalias !5
  %52 = icmp eq %"class.sksg::ImageFilter"* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.sksg::ImageFilter", %"class.sksg::ImageFilter"* %51, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel, !noalias !8
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %"class.sksg::ImageFilter"* %51 to %class.SkRefCntBase*
  %59 = bitcast %"class.sksg::ImageFilter"* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8, !noalias !8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8, !noalias !8
  call void %62(%class.SkRefCntBase* nonnull %58) #12, !noalias !8
  br label %63

63:                                               ; preds = %57, %53, %49
  %64 = getelementptr inbounds %class.sk_sp.32, %class.sk_sp.32* %6, i64 0, i32 0
  %65 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %64, align 8, !noalias !5
  %66 = icmp eq %"class.sksg::RenderNode"* %65, null
  br i1 %66, label %77, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %65, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw add i32* %68, i32 -1 acq_rel, !noalias !8
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %77

71:                                               ; preds = %67
  %72 = bitcast %"class.sksg::RenderNode"* %65 to %class.SkRefCntBase*
  %73 = bitcast %"class.sksg::RenderNode"* %65 to void (%class.SkRefCntBase*)***
  %74 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %73, align 8, !noalias !8
  %75 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %74, i64 2
  %76 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, align 8, !noalias !8
  call void %76(%class.SkRefCntBase* nonnull %72) #12, !noalias !8
  br label %77

77:                                               ; preds = %71, %67, %63
  %78 = getelementptr inbounds i8, i8* %15, i64 64
  %79 = call i8* @_Znwm(i64 16) #11, !noalias !5
  %80 = getelementptr inbounds i8, i8* %15, i64 72
  %81 = bitcast i8* %78 to i8**
  store i8* %79, i8** %81, align 8, !noalias !5
  %82 = getelementptr inbounds i8, i8* %79, i64 16
  %83 = getelementptr inbounds i8, i8* %15, i64 80
  %84 = bitcast i8* %83 to i8**
  store i8* %82, i8** %84, align 8, !noalias !5
  %85 = bitcast i8* %80 to i64*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* align 4 bitcast ([4 x float]* @.ref.tmp to i8*), i64 16, i1 false) #12, !noalias !5
  %86 = ptrtoint i8* %82 to i64
  store i64 %86, i64* %85, align 8, !noalias !5
  %87 = getelementptr inbounds i8, i8* %15, i64 88
  %88 = bitcast i8* %87 to float*
  store float 2.550000e+02, float* %88, align 8, !noalias !5
  %89 = getelementptr inbounds i8, i8* %15, i64 92
  call void @llvm.memset.p0i8.i64(i8* align 4 %89, i8 0, i64 16, i1 false) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12, !noalias !5
  %90 = ptrtoint i8* %15 to i64
  %91 = bitcast i8* %15 to %"class.skottie::internal::AnimatablePropertyContainer"*
  %92 = bitcast i8* %78 to %"class.skottie::VectorValue"*
  %93 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 0) #12, !noalias !5
  %94 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %93, i64 0, i32 0, i64 0
  %95 = load i8, i8* %94, align 8, !noalias !5
  %96 = and i8 %95, 7
  %97 = icmp eq i8 %96, 7
  %98 = bitcast %"class.skjson::Value"* %93 to %"class.skjson::ObjectValue"*
  %99 = select i1 %97, %"class.skjson::ObjectValue"* %98, %"class.skjson::ObjectValue"* null
  %100 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %99, %"class.skottie::VectorValue"* %92) #12, !noalias !5
  %101 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 1) #12, !noalias !5
  %102 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %101, i64 0, i32 0, i64 0
  %103 = load i8, i8* %102, align 8, !noalias !5
  %104 = and i8 %103, 7
  %105 = icmp eq i8 %104, 7
  %106 = bitcast %"class.skjson::Value"* %101 to %"class.skjson::ObjectValue"*
  %107 = select i1 %105, %"class.skjson::ObjectValue"* %106, %"class.skjson::ObjectValue"* null
  %108 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %107, float* %88) #12, !noalias !5
  %109 = bitcast i8* %89 to float*
  %110 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 2) #12, !noalias !5
  %111 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %110, i64 0, i32 0, i64 0
  %112 = load i8, i8* %111, align 8, !noalias !5
  %113 = and i8 %112, 7
  %114 = icmp eq i8 %113, 7
  %115 = bitcast %"class.skjson::Value"* %110 to %"class.skjson::ObjectValue"*
  %116 = select i1 %114, %"class.skjson::ObjectValue"* %115, %"class.skjson::ObjectValue"* null
  %117 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %116, float* %109) #12, !noalias !5
  %118 = getelementptr inbounds i8, i8* %15, i64 96
  %119 = bitcast i8* %118 to float*
  %120 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 3) #12, !noalias !5
  %121 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %120, i64 0, i32 0, i64 0
  %122 = load i8, i8* %121, align 8, !noalias !5
  %123 = and i8 %122, 7
  %124 = icmp eq i8 %123, 7
  %125 = bitcast %"class.skjson::Value"* %120 to %"class.skjson::ObjectValue"*
  %126 = select i1 %124, %"class.skjson::ObjectValue"* %125, %"class.skjson::ObjectValue"* null
  %127 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %126, float* %119) #12, !noalias !5
  %128 = getelementptr inbounds i8, i8* %15, i64 100
  %129 = bitcast i8* %128 to float*
  %130 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 4) #12, !noalias !5
  %131 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %130, i64 0, i32 0, i64 0
  %132 = load i8, i8* %131, align 8, !noalias !5
  %133 = and i8 %132, 7
  %134 = icmp eq i8 %133, 7
  %135 = bitcast %"class.skjson::Value"* %130 to %"class.skjson::ObjectValue"*
  %136 = select i1 %134, %"class.skjson::ObjectValue"* %135, %"class.skjson::ObjectValue"* null
  %137 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %136, float* %129) #12, !noalias !5
  %138 = getelementptr inbounds i8, i8* %15, i64 104
  %139 = bitcast i8* %138 to float*
  %140 = call dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8) %2, i64 5) #12, !noalias !5
  %141 = getelementptr inbounds %"class.skjson::Value", %"class.skjson::Value"* %140, i64 0, i32 0, i64 0
  %142 = load i8, i8* %141, align 8, !noalias !5
  %143 = and i8 %142, 7
  %144 = icmp eq i8 %143, 7
  %145 = bitcast %"class.skjson::Value"* %140 to %"class.skjson::ObjectValue"*
  %146 = select i1 %144, %"class.skjson::ObjectValue"* %145, %"class.skjson::ObjectValue"* null
  %147 = call zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"* nonnull %91, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152) %10, %"class.skjson::ObjectValue"* %146, float* %139) #12, !noalias !5
  %148 = icmp eq %class.sk_sp.32* %40, %0
  br i1 %148, label %169, label %149

149:                                              ; preds = %77
  %150 = bitcast i8* %39 to %"class.sksg::RenderNode"**
  %151 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %150, align 8, !noalias !2
  %152 = icmp eq %"class.sksg::RenderNode"* %151, null
  br i1 %152, label %156, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %151, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = atomicrmw add i32* %154, i32 1 monotonic
  br label %156

156:                                              ; preds = %153, %149
  %157 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  store %"class.sksg::RenderNode"* %151, %"class.sksg::RenderNode"** %11, align 8, !alias.scope !2
  %158 = icmp eq %"class.sksg::RenderNode"* %157, null
  br i1 %158, label %169, label %159

159:                                              ; preds = %156
  %160 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %157, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i32* %160, i32 -1 acq_rel
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %163, label %169

163:                                              ; preds = %159
  %164 = bitcast %"class.sksg::RenderNode"* %157 to %class.SkRefCntBase*
  %165 = bitcast %"class.sksg::RenderNode"* %157 to void (%class.SkRefCntBase*)***
  %166 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %165, align 8
  %167 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %166, i64 2
  %168 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %167, align 8
  call void %168(%class.SkRefCntBase* nonnull %164) #12
  br label %169

169:                                              ; preds = %163, %159, %156, %77
  %170 = bitcast i8* %22 to %class.sk_sp.6**
  %171 = load %class.sk_sp.6*, %class.sk_sp.6** %170, align 8, !noalias !2
  %172 = getelementptr inbounds i8, i8* %15, i64 24
  %173 = bitcast i8* %172 to %class.sk_sp.6**
  %174 = load %class.sk_sp.6*, %class.sk_sp.6** %173, align 8, !noalias !2
  %175 = icmp eq %class.sk_sp.6* %171, %174
  br i1 %175, label %208, label %176

176:                                              ; preds = %169
  %177 = getelementptr inbounds %"class.skottie::internal::AnimationBuilder", %"class.skottie::internal::AnimationBuilder"* %10, i64 0, i32 11
  %178 = load %"class.std::__1::vector"*, %"class.std::__1::vector"** %177, align 8, !noalias !2
  %179 = bitcast %class.sk_sp.6* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #12, !noalias !2
  %180 = bitcast %class.sk_sp.6* %8 to i64*
  store i64 %90, i64* %180, align 8, !noalias !2
  %181 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %178, i64 0, i32 0, i32 1
  %182 = load %class.sk_sp.6*, %class.sk_sp.6** %181, align 8
  %183 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %178, i64 0, i32 0, i32 2, i32 0, i32 0
  %184 = load %class.sk_sp.6*, %class.sk_sp.6** %183, align 8
  %185 = icmp ult %class.sk_sp.6* %182, %184
  br i1 %185, label %186, label %192

186:                                              ; preds = %176
  %187 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %187, align 8, !noalias !2
  %188 = bitcast %class.sk_sp.6* %182 to i64*
  store i64 %90, i64* %188, align 8
  %189 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %182, i64 1
  %190 = ptrtoint %class.sk_sp.6* %189 to i64
  %191 = bitcast %class.sk_sp.6** %181 to i64*
  store i64 %190, i64* %191, align 8
  br label %193

192:                                              ; preds = %176
  call void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"* %178, %class.sk_sp.6* nonnull dereferenceable(8) %8) #12
  br label %193

193:                                              ; preds = %192, %186
  %194 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %8, i64 0, i32 0
  %195 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %194, align 8, !noalias !2
  %196 = icmp eq %"class.skottie::internal::Animator"* %195, null
  br i1 %196, label %207, label %197

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %195, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %199 = atomicrmw add i32* %198, i32 -1 acq_rel
  %200 = icmp eq i32 %199, 1
  br i1 %200, label %201, label %207

201:                                              ; preds = %197
  %202 = bitcast %"class.skottie::internal::Animator"* %195 to %class.SkRefCntBase*
  %203 = bitcast %"class.skottie::internal::Animator"* %195 to void (%class.SkRefCntBase*)***
  %204 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %203, align 8
  %205 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %204, i64 2
  %206 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %205, align 8
  call void %206(%class.SkRefCntBase* nonnull %202) #12
  br label %207

207:                                              ; preds = %201, %197, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %179) #12, !noalias !2
  br label %223

208:                                              ; preds = %169
  %209 = bitcast i8* %15 to %"class.skottie::internal::Animator"*
  %210 = bitcast i8* %15 to i1 (%"class.skottie::internal::Animator"*, float)***
  %211 = load i1 (%"class.skottie::internal::Animator"*, float)**, i1 (%"class.skottie::internal::Animator"*, float)*** %210, align 8, !noalias !2
  %212 = getelementptr inbounds i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %211, i64 3
  %213 = load i1 (%"class.skottie::internal::Animator"*, float)*, i1 (%"class.skottie::internal::Animator"*, float)** %212, align 8
  %214 = call zeroext i1 %213(%"class.skottie::internal::Animator"* nonnull %209, float 0.000000e+00) #12
  %215 = atomicrmw add i32* %20, i32 -1 acq_rel, !noalias !2
  %216 = icmp eq i32 %215, 1
  br i1 %216, label %217, label %223

217:                                              ; preds = %208
  %218 = bitcast i8* %15 to %class.SkRefCntBase*
  %219 = bitcast i8* %15 to void (%class.SkRefCntBase*)***
  %220 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %219, align 8, !noalias !2
  %221 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %220, i64 2
  %222 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %221, align 8
  call void %222(%class.SkRefCntBase* nonnull %218) #12
  br label %223

223:                                              ; preds = %207, %208, %217
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN4sksg21DropShadowImageFilter4MakeE5sk_spINS_11ImageFilterEE(%class.sk_sp.50* sret, %class.sk_sp.66*) local_unnamed_addr #3

declare void @_ZN4sksg17ImageFilterEffect4MakeE5sk_spINS_10RenderNodeEES1_INS_11ImageFilterEE(%class.sk_sp.32* sret, %class.sk_sp.32*, %class.sk_sp.66*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapterD2Ev(%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117DropShadowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %11, %15, %19
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 2, i32 0
  %27 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %26, align 8
  %28 = icmp eq %"class.sksg::DropShadowImageFilter"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %"class.sksg::DropShadowImageFilter"* %27 to %class.SkRefCntBase*
  %35 = bitcast %"class.sksg::DropShadowImageFilter"* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  tail call void %38(%class.SkRefCntBase* nonnull %34) #12
  br label %39

39:                                               ; preds = %25, %29, %33
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %40 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %42 = load %class.sk_sp.6*, %class.sk_sp.6** %41, align 8
  %43 = icmp eq %class.sk_sp.6* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %39
  %45 = bitcast %class.sk_sp.6* %42 to i8*
  %46 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = icmp eq %class.sk_sp.6* %47, %42
  br i1 %48, label %70, label %49

49:                                               ; preds = %44, %65
  %50 = phi %class.sk_sp.6* [ %51, %65 ], [ %47, %44 ]
  %51 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %50, i64 -1
  %52 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %51, i64 0, i32 0
  %53 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %52, align 8
  %54 = icmp eq %"class.skottie::internal::Animator"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.skottie::internal::Animator"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.skottie::internal::Animator"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  tail call void %64(%class.SkRefCntBase* nonnull %60) #12
  br label %65

65:                                               ; preds = %59, %55, %49
  %66 = icmp eq %class.sk_sp.6* %51, %42
  br i1 %66, label %67, label %49

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::vector"* %40 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %44
  %71 = phi i8* [ %69, %67 ], [ %45, %44 ]
  store %class.sk_sp.6* %42, %class.sk_sp.6** %46, align 8
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %39, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapterD0Ev(%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal12_GLOBAL__N_117DropShadowAdapterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #11
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 3, i32 0
  %13 = load %"class.sksg::RenderNode"*, %"class.sksg::RenderNode"** %12, align 8
  %14 = icmp eq %"class.sksg::RenderNode"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.sksg::RenderNode", %"class.sksg::RenderNode"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %"class.sksg::RenderNode"* %13 to %class.SkRefCntBase*
  %21 = bitcast %"class.sksg::RenderNode"* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  tail call void %24(%class.SkRefCntBase* nonnull %20) #12
  br label %25

25:                                               ; preds = %19, %15, %11
  %26 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 2, i32 0
  %27 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %26, align 8
  %28 = icmp eq %"class.sksg::DropShadowImageFilter"* %27, null
  br i1 %28, label %39, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 -1 acq_rel
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %39

33:                                               ; preds = %29
  %34 = bitcast %"class.sksg::DropShadowImageFilter"* %27 to %class.SkRefCntBase*
  %35 = bitcast %"class.sksg::DropShadowImageFilter"* %27 to void (%class.SkRefCntBase*)***
  %36 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %35, align 8
  %37 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %36, i64 2
  %38 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, align 8
  tail call void %38(%class.SkRefCntBase* nonnull %34) #12
  br label %39

39:                                               ; preds = %33, %29, %25
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7skottie8internal27AnimatablePropertyContainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %40 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 2
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %40, i64 0, i32 0, i32 0
  %42 = load %class.sk_sp.6*, %class.sk_sp.6** %41, align 8
  %43 = icmp eq %class.sk_sp.6* %42, null
  br i1 %43, label %72, label %44

44:                                               ; preds = %39
  %45 = bitcast %class.sk_sp.6* %42 to i8*
  %46 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = icmp eq %class.sk_sp.6* %47, %42
  br i1 %48, label %70, label %49

49:                                               ; preds = %44, %65
  %50 = phi %class.sk_sp.6* [ %51, %65 ], [ %47, %44 ]
  %51 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %50, i64 -1
  %52 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %51, i64 0, i32 0
  %53 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %52, align 8
  %54 = icmp eq %"class.skottie::internal::Animator"* %53, null
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw add i32* %56, i32 -1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %65

59:                                               ; preds = %55
  %60 = bitcast %"class.skottie::internal::Animator"* %53 to %class.SkRefCntBase*
  %61 = bitcast %"class.skottie::internal::Animator"* %53 to void (%class.SkRefCntBase*)***
  %62 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %61, align 8
  %63 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %62, i64 2
  %64 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %63, align 8
  tail call void %64(%class.SkRefCntBase* nonnull %60) #12
  br label %65

65:                                               ; preds = %59, %55, %49
  %66 = icmp eq %class.sk_sp.6* %51, %42
  br i1 %66, label %67, label %49

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::vector"* %40 to i8**
  %69 = load i8*, i8** %68, align 8
  br label %70

70:                                               ; preds = %67, %44
  %71 = phi i8* [ %69, %67 ], [ %45, %44 ]
  store %class.sk_sp.6* %42, %class.sk_sp.6** %46, align 8
  tail call void @_ZdlPv(i8* %71) #11
  br label %72

72:                                               ; preds = %39, %70
  %73 = bitcast %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0 to i8*
  tail call void @_ZdlPv(i8* %73) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #12
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer6onSeekEf(%"class.skottie::internal::AnimatablePropertyContainer"*, float) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapter6onSyncEv(%"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"*) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 4
  %3 = tail call i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"* %2) #12
  %4 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 2, i32 0
  %5 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %4, align 8
  %6 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 5
  %7 = load float, float* %6, align 8
  %8 = fadd float %7, 5.000000e-01
  %9 = tail call float @llvm.floor.f32(float %8)
  %10 = fcmp olt float %9, 0x41DFFFFFE0000000
  %11 = select i1 %10, float %9, float 0x41DFFFFFE0000000
  %12 = fcmp ogt float %11, 0xC1DFFFFFE0000000
  %13 = select i1 %12, float %11, float 0xC1DFFFFFE0000000
  %14 = fptosi float %13 to i32
  %15 = icmp slt i32 %14, 255
  %16 = select i1 %15, i32 %14, i32 255
  %17 = icmp sgt i32 %16, 0
  %18 = select i1 %17, i32 %16, i32 0
  %19 = and i32 %3, 16777215
  %20 = shl i32 %18, 24
  %21 = or i32 %20, %19
  %22 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %5, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, %21
  br i1 %24, label %28, label %25

25:                                               ; preds = %1
  store i32 %21, i32* %22, align 8
  %26 = bitcast %"class.sksg::DropShadowImageFilter"* %5 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %26, i1 zeroext true) #12
  %27 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %4, align 8
  br label %28

28:                                               ; preds = %1, %25
  %29 = phi %"class.sksg::DropShadowImageFilter"* [ %5, %1 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 6
  %31 = load float, float* %30, align 4
  %32 = fsub float 9.000000e+01, %31
  %33 = fmul float %32, 0x3F91DF46A0000000
  %34 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 7
  %35 = load float, float* %34, align 8
  %36 = tail call float @cosf(float %33) #12
  %37 = fmul float %35, %36
  %38 = load float, float* %34, align 8
  %39 = tail call float @sinf(float %33) #12
  %40 = fmul float %38, %39
  %41 = fsub float -0.000000e+00, %40
  %42 = insertelement <2 x float> undef, float %37, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  %44 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %29, i64 0, i32 1
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %44, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = fcmp oeq float %46, %37
  br i1 %47, label %48, label %52

48:                                               ; preds = %28
  %49 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %29, i64 0, i32 1, i32 1
  %50 = load float, float* %49, align 4
  %51 = fcmp oeq float %50, %41
  br i1 %51, label %55, label %52

52:                                               ; preds = %48, %28
  %53 = bitcast %struct.SkPoint* %44 to <2 x float>*
  store <2 x float> %43, <2 x float>* %53, align 8
  %54 = bitcast %"class.sksg::DropShadowImageFilter"* %29 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %54, i1 zeroext true) #12
  br label %55

55:                                               ; preds = %48, %52
  %56 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 8
  %57 = load float, float* %56, align 4
  %58 = fmul float %57, 0x3FD3333340000000
  %59 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %4, align 8
  %60 = insertelement <2 x float> undef, float %58, i32 0
  %61 = shufflevector <2 x float> %60, <2 x float> undef, <2 x i32> zeroinitializer
  %62 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %59, i64 0, i32 2
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %62, i64 0, i32 0
  %64 = load float, float* %63, align 4
  %65 = fcmp oeq float %64, %58
  br i1 %65, label %66, label %70

66:                                               ; preds = %55
  %67 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %59, i64 0, i32 2, i32 1
  %68 = load float, float* %67, align 4
  %69 = fcmp oeq float %68, %58
  br i1 %69, label %74, label %70

70:                                               ; preds = %66, %55
  %71 = bitcast %struct.SkPoint* %62 to <2 x float>*
  store <2 x float> %61, <2 x float>* %71, align 8
  %72 = bitcast %"class.sksg::DropShadowImageFilter"* %59 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %72, i1 zeroext true) #12
  %73 = load %"class.sksg::DropShadowImageFilter"*, %"class.sksg::DropShadowImageFilter"** %4, align 8
  br label %74

74:                                               ; preds = %66, %70
  %75 = phi %"class.sksg::DropShadowImageFilter"* [ %59, %66 ], [ %73, %70 ]
  %76 = getelementptr inbounds %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter", %"class.skottie::internal::(anonymous namespace)::DropShadowAdapter"* %0, i64 0, i32 9
  %77 = load float, float* %76, align 4
  %78 = fcmp une float %77, 0.000000e+00
  %79 = zext i1 %78 to i32
  %80 = getelementptr inbounds %"class.sksg::DropShadowImageFilter", %"class.sksg::DropShadowImageFilter"* %75, i64 0, i32 4
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, %79
  br i1 %82, label %85, label %83

83:                                               ; preds = %74
  store i32 %79, i32* %80, align 4
  %84 = bitcast %"class.sksg::DropShadowImageFilter"* %75 to %"class.sksg::Node"*
  tail call void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"* %84, i1 zeroext true) #12
  br label %85

85:                                               ; preds = %74, %83
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

declare i32 @_ZNK7skottie11VectorValuecvjEv(%"class.skottie::VectorValue"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #9

; Function Attrs: nofree nounwind
declare float @cosf(float) local_unnamed_addr #10

; Function Attrs: nofree nounwind
declare float @sinf(float) local_unnamed_addr #10

declare void @_ZN4sksg4Node10invalidateEb(%"class.sksg::Node"*, i1 zeroext) local_unnamed_addr #3

declare dereferenceable(8) %"class.skjson::Value"* @_ZN7skottie8internal13EffectBuilder12GetPropValueERKN6skjson10ArrayValueEm(%"class.skjson::ArrayValue"* dereferenceable(8), i64) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindINS_11VectorValueEEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, %"class.skottie::VectorValue"*) local_unnamed_addr #3

declare zeroext i1 @_ZN7skottie8internal27AnimatablePropertyContainer4bindIfEEbRKNS0_16AnimationBuilderEPKN6skjson11ObjectValueEPT_(%"class.skottie::internal::AnimatablePropertyContainer"*, %"class.skottie::internal::AnimationBuilder"* dereferenceable(152), %"class.skjson::ObjectValue"*, float*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI5sk_spIN7skottie8internal8AnimatorEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector"*, %class.sk_sp.6* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.sk_sp.6** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.sk_sp.6** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #11
  %33 = bitcast i8* %32 to %class.sk_sp.6*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.sk_sp.6* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %9
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %36, i64 %35
  %39 = ptrtoint %class.sk_sp.6* %38 to i64
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %1, i64 0, i32 0
  %41 = bitcast %class.sk_sp.6* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %40, align 8
  %43 = bitcast %class.sk_sp.6* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %37, i64 1
  %45 = ptrtoint %class.sk_sp.6* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %47 = load %class.sk_sp.6*, %class.sk_sp.6** %46, align 8
  %48 = ptrtoint %class.sk_sp.6* %47 to i64
  %49 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  %50 = icmp eq %class.sk_sp.6* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %class.sk_sp.6, %class.sk_sp.6* %49, i64 -1, i32 0
  %53 = ptrtoint %"class.skottie::internal::Animator"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %class.sk_sp.6* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %class.sk_sp.6* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %60, i64 -1
  %64 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %61, i64 -1
  %65 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %64, i64 0, i32 0
  %66 = bitcast %class.sk_sp.6* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %65, align 8
  %68 = bitcast %class.sk_sp.6* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !9

71:                                               ; preds = %59, %51
  %72 = phi %class.sk_sp.6* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %class.sk_sp.6* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %class.sk_sp.6* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %class.sk_sp.6* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %class.sk_sp.6* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -1
  %80 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -1
  %81 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %80, i64 0, i32 0
  %82 = bitcast %class.sk_sp.6* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %81, align 8
  %84 = bitcast %class.sk_sp.6* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -2
  %86 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -2
  %87 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %86, i64 0, i32 0
  %88 = bitcast %class.sk_sp.6* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %87, align 8
  %90 = bitcast %class.sk_sp.6* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -3
  %92 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -3
  %93 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %92, i64 0, i32 0
  %94 = bitcast %class.sk_sp.6* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %93, align 8
  %96 = bitcast %class.sk_sp.6* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -4
  %98 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -4
  %99 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %98, i64 0, i32 0
  %100 = bitcast %class.sk_sp.6* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %99, align 8
  %102 = bitcast %class.sk_sp.6* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -5
  %104 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -5
  %105 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %104, i64 0, i32 0
  %106 = bitcast %class.sk_sp.6* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %105, align 8
  %108 = bitcast %class.sk_sp.6* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -6
  %110 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -6
  %111 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %110, i64 0, i32 0
  %112 = bitcast %class.sk_sp.6* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %111, align 8
  %114 = bitcast %class.sk_sp.6* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -7
  %116 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -7
  %117 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %116, i64 0, i32 0
  %118 = bitcast %class.sk_sp.6* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %117, align 8
  %120 = bitcast %class.sk_sp.6* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %77, i64 -8
  %122 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %78, i64 -8
  %123 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %122, i64 0, i32 0
  %124 = bitcast %class.sk_sp.6* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.skottie::internal::Animator"* null, %"class.skottie::internal::Animator"** %123, align 8
  %126 = bitcast %class.sk_sp.6* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %class.sk_sp.6* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %class.sk_sp.6* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %class.sk_sp.6*, %class.sk_sp.6** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %class.sk_sp.6* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %class.sk_sp.6* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %class.sk_sp.6* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %class.sk_sp.6*
  %138 = icmp eq %class.sk_sp.6* %133, %137
  br i1 %138, label %157, label %139

139:                                              ; preds = %132, %155
  %140 = phi %class.sk_sp.6* [ %141, %155 ], [ %133, %132 ]
  %141 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %140, i64 -1
  %142 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %141, i64 0, i32 0
  %143 = load %"class.skottie::internal::Animator"*, %"class.skottie::internal::Animator"** %142, align 8
  %144 = icmp eq %"class.skottie::internal::Animator"* %143, null
  br i1 %144, label %155, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.skottie::internal::Animator", %"class.skottie::internal::Animator"* %143, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = atomicrmw add i32* %146, i32 -1 acq_rel
  %148 = icmp eq i32 %147, 1
  br i1 %148, label %149, label %155

149:                                              ; preds = %145
  %150 = bitcast %"class.skottie::internal::Animator"* %143 to %class.SkRefCntBase*
  %151 = bitcast %"class.skottie::internal::Animator"* %143 to void (%class.SkRefCntBase*)***
  %152 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %151, align 8
  %153 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %152, i64 2
  %154 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %153, align 8
  tail call void %154(%class.SkRefCntBase* nonnull %150) #12
  br label %155

155:                                              ; preds = %149, %145, %139
  %156 = icmp eq %class.sk_sp.6* %141, %137
  br i1 %156, label %157, label %139

157:                                              ; preds = %155, %132
  %158 = icmp eq i64 %135, 0
  br i1 %158, label %161, label %159

159:                                              ; preds = %157
  %160 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %160) #11
  br label %161

161:                                              ; preds = %157, %159
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { builtin nounwind }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117DropShadowAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_: argument 0"}
!4 = distinct !{!4, !"_ZNK7skottie8internal16AnimationBuilder24attachDiscardableAdapterINS0_12_GLOBAL__N_117DropShadowAdapterEJRKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKS1_EEENSt3__15decayIDTclptclsrT_4Makespclsr3stdE7forwardIT0_Efp_EE4nodeEEE4typeEDpOSI_"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderE: argument 0"}
!7 = distinct !{!7, !"_ZN7skottie8internal12_GLOBAL__N_117DropShadowAdapter4MakeERKN6skjson10ArrayValueE5sk_spIN4sksg10RenderNodeEERKNS0_16AnimationBuilderE"}
!8 = !{!6}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
