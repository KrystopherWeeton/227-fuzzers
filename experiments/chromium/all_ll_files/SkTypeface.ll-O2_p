; ModuleID = '../../third_party/skia/src/core/SkTypeface.cpp'
source_filename = "../../third_party/skia/src/core/SkTypeface.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkPaint = type <{ %class.sk_sp.21, %class.sk_sp.34, %class.sk_sp.22, %class.sk_sp.35, %class.sk_sp.36, %struct.SkRGBA4f, float, float, %union.anon.37, [4 x i8] }>
%class.sk_sp.21 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.34 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.22 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.35 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.36 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon.37 = type { %struct.anon }
%struct.anon = type { i32 }
%class.sk_sp.6 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkStreamAsset = type { %class.SkStreamSeekable }
%class.SkStreamSeekable = type { %class.SkStreamRewindable }
%class.SkStreamRewindable = type { %class.SkStream }
%class.SkStream = type { i32 (...)** }
%class.sk_sp.8 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.SkFontArguments = type { i32, %"struct.SkFontArguments::VariationPosition" }
%"struct.SkFontArguments::VariationPosition" = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32 }
%"struct.SkFontArguments::VariationPosition::Coordinate" = type { i32, float }
%class.SkWStream = type { i32 (...)** }
%class.SkFontDescriptor = type { %class.SkString, %class.SkString, %class.SkString, %class.SkFontStyle, %"class.std::__1::unique_ptr", i32, i8, i32, %class.SkAutoSTMalloc }
%class.SkString = type { %class.sk_sp.9 }
%class.sk_sp.9 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkStreamAsset* }
%class.SkAutoSTMalloc = type { %"struct.SkFontArguments::VariationPosition::Coordinate"*, %union.anon }
%union.anon = type { [8 x i32] }
%class.SkDynamicMemoryWStream = type { %class.SkWStream, %"struct.SkDynamicMemoryWStream::Block"*, %"struct.SkDynamicMemoryWStream::Block"*, i64 }
%"struct.SkDynamicMemoryWStream::Block" = type opaque
%class.SkFontData = type { %"class.std::__1::unique_ptr", i32, i32, %class.SkAutoSTMalloc.13 }
%class.SkAutoSTMalloc.13 = type { i32*, %union.anon.14 }
%union.anon.14 = type { [4 x i32] }
%"struct.SkFontParameters::Variation::Axis" = type <{ i32, float, float, float, i16, [2 x i8] }>
%class.SkScalerContext = type { i32 (...)**, %struct.SkScalerContextRec, %class.sk_sp, %class.sk_sp.21, %class.sk_sp.22, i8, %class.SkTMaskPreBlend }
%struct.SkScalerContextRec = type { i32, float, float, float, [2 x [2 x float]], float, float, i32, i8, i8, i8, i8, i8, i8, i16 }
%class.SkTMaskPreBlend = type { %class.sk_sp.23, i8*, i8*, i8* }
%class.sk_sp.23 = type { %class.SkTMaskGamma* }
%class.SkTMaskGamma = type { %class.SkRefCnt.base, [8 x [256 x i8]], i8, [3 x i8] }
%struct.SkScalerContextEffects = type { %class.SkPathEffect*, %class.SkMaskFilter* }
%class.SkDescriptor = type { i32, i32, i32 }
%"class.SkTypeface::LocalizedStrings" = type { i32 (...)** }
%struct.SkAdvancedTypefaceMetrics = type { %class.SkString, %class.SkString, i32, i8, i8, i16, i16, i16, i16, i16, %struct.SkIRect }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkOTTableOS2_V2::Type::Field" = type { i16 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%class.SkAutoDescriptor = type { %class.SkDescriptor*, [120 x i8] }
%struct.SkFontMetrics = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%class.SkMatrix = type { [9 x float], i32 }
%"class.(anonymous namespace)::SkEmptyTypeface" = type { %class.SkTypeface.base, [6 x i8] }
%class.SkTypeface.base = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8 }>
%"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings" = type { %"class.SkTypeface::LocalizedStrings" }
%"struct.SkTypeface::LocalizedString" = type { %class.SkString, %class.SkString }

$_ZNK12SkWeakRefCnt16internal_disposeEv = comdat any

$_ZNK12SkWeakRefCnt12weak_disposeEv = comdat any

$_ZNK10SkTypeface14onGetCTFontRefEv = comdat any

$_ZN10SkTypeface16LocalizedStringsD2Ev = comdat any

@_ZTV10SkTypeface = hidden unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTypeface*)* @_ZN10SkTypefaceD2Ev to i8*), i8* bitcast (void (%class.SkTypeface*)* @_ZN10SkTypefaceD0Ev to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt16internal_disposeEv to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt12weak_disposeEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%class.SkTypeface*, i16*, i32, i32*)* @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkTypeface*, i32)* @_ZNK10SkTypeface15onCopyTableDataEj to i8*), i8* bitcast (i1 (%class.SkTypeface*, %struct.SkRect*)* @_ZNK10SkTypeface15onComputeBoundsEP6SkRect to i8*), i8* bitcast (i8* (%class.SkTypeface*)* @_ZNK10SkTypeface14onGetCTFontRefEv to i8*)] }, align 8
@_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE4once = internal global [4 x %class.SkOnce] zeroinitializer, align 1
@_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults = internal unnamed_addr global [4 x %class.sk_sp] zeroinitializer, align 16
@_ZGVZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZTV22SkDynamicMemoryWStream = external unnamed_addr constant { [7 x i8*] }, align 8
@__const._ZN15SkScalerContext25MakeRecAndEffectsFromFontERK6SkFontP18SkScalerContextRecP22SkScalerContextEffects.paint = private unnamed_addr constant %class.SkPaint <{ %class.sk_sp.21 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.34 { %class.SkShader* inttoptr (i64 -6148914691236517206 to %class.SkShader*) }, %class.sk_sp.22 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.35 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.36 { %class.SkImageFilter* inttoptr (i64 -6148914691236517206 to %class.SkImageFilter*) }, %struct.SkRGBA4f { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, %union.anon.37 { %struct.anon { i32 -1431655766 } }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN12_GLOBAL__N_115SkEmptyTypefaceE = internal unnamed_addr constant { [28 x i8*] } { [28 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkTypeface*)* @_ZN10SkTypefaceD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*)* @_ZN12_GLOBAL__N_115SkEmptyTypefaceD0Ev to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt16internal_disposeEv to i8*), i8* bitcast (void (%class.SkWeakRefCnt*)* @_ZNK12SkWeakRefCnt12weak_disposeEv to i8*), i8* bitcast (void (%class.sk_sp*, %"class.(anonymous namespace)::SkEmptyTypeface"*, %struct.SkFontArguments*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface11onMakeCloneERK15SkFontArguments to i8*), i8* bitcast (%class.SkScalerContext* (%"class.(anonymous namespace)::SkEmptyTypeface"*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, %struct.SkScalerContextRec*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface11onFilterRecEP18SkScalerContextRec to i8*), i8* bitcast (%struct.SkAdvancedTypefaceMetrics* (%"class.(anonymous namespace)::SkEmptyTypeface"*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface20onGetAdvancedMetricsEv to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, %class.SkString*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface23getPostScriptGlyphNamesEP8SkString to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, i32*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface20getGlyphToUnicodeMapEPi to i8*), i8* bitcast (%class.SkStreamAsset* (%"class.(anonymous namespace)::SkEmptyTypeface"*, i32*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface12onOpenStreamEPi to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SkEmptyTypeface"*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SkEmptyTypeface"*, %"struct.SkFontParameters::Variation::Axis"*, i32)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, %class.SkFontDescriptor*, i8*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface19onGetFontDescriptorEP16SkFontDescriptorPb to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, i32*, i32, i16*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface15onCharsToGlyphsEPKiiPt to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SkEmptyTypeface"*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface13onCountGlyphsEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SkEmptyTypeface"*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface9onGetUPEMEv to i8*), i8* bitcast (i1 (%class.SkTypeface*, i16*, i32, i32*)* @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface"*, %class.SkString*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface15onGetFamilyNameEP8SkString to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkEmptyTypeface"*, %class.SkString*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface19onGetPostScriptNameEP8SkString to i8*), i8* bitcast (%"class.SkTypeface::LocalizedStrings"* (%"class.(anonymous namespace)::SkEmptyTypeface"*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface26onCreateFamilyNameIteratorEv to i8*), i8* bitcast (i32 (%"class.(anonymous namespace)::SkEmptyTypeface"*, i32*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface14onGetTableTagsEPj to i8*), i8* bitcast (i64 (%"class.(anonymous namespace)::SkEmptyTypeface"*, i32, i64, i64, i8*)* @_ZNK12_GLOBAL__N_115SkEmptyTypeface14onGetTableDataEjmmPv to i8*), i8* bitcast (void (%class.sk_sp.8*, %class.SkTypeface*, i32)* @_ZNK10SkTypeface15onCopyTableDataEj to i8*), i8* bitcast (i1 (%class.SkTypeface*, %struct.SkRect*)* @_ZNK10SkTypeface15onComputeBoundsEP6SkRect to i8*), i8* bitcast (i8* (%class.SkTypeface*)* @_ZNK10SkTypeface14onGetCTFontRefEv to i8*)] }, align 8
@_ZTVN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStringsE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.SkTypeface::LocalizedStrings"*)* @_ZN10SkTypeface16LocalizedStringsD2Ev to i8*), i8* bitcast (void (%"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings"*)* @_ZN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStringsD0Ev to i8*), i8* bitcast (i1 (%"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings"*, %"struct.SkTypeface::LocalizedString"*)* @_ZN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStrings4nextEPN10SkTypeface15LocalizedStringE to i8*)] }, align 8

@_ZN10SkTypefaceD1Ev = hidden unnamed_addr alias void (%class.SkTypeface*), void (%class.SkTypeface*)* @_ZN10SkTypefaceD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypefaceC2ERK11SkFontStyleb(%class.SkTypeface* nocapture, %class.SkFontStyle* nocapture readonly dereferenceable(4), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %5, align 4
  %6 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 1, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTV10SkTypeface, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 1
  %9 = tail call i32 @_ZN15SkTypefaceCache9NewFontIDEv() #12
  store i32 %9, i32* %8, align 8
  %10 = getelementptr inbounds %class.SkFontStyle, %class.SkFontStyle* %1, i64 0, i32 0
  %11 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 2, i32 0
  %12 = load i32, i32* %10, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 5
  store i8 %4, i8* %14, align 1
  ret void
}

declare i32 @_ZN15SkTypefaceCache9NewFontIDEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN10SkTypefaceD0Ev(%class.SkTypeface* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN10SkTypeface12FromOldStyleENS_5StyleE(i32) local_unnamed_addr #5 align 2 {
  %2 = and i32 %0, 1
  %3 = icmp eq i32 %2, 0
  %4 = select i1 %3, i32 328080, i32 328380
  %5 = shl i32 %0, 23
  %6 = and i32 %5, 16777216
  %7 = or i32 %4, %6
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.sk_sp.6, align 8
  %3 = alloca %class.sk_sp, align 8
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %11, !prof !2

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_atexit(void (i8*)* nonnull @__cxx_global_array_dtor, i8* null, i8* nonnull @__dso_handle) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults) #12
  br label %11

11:                                               ; preds = %6, %9, %1
  %12 = zext i32 %0 to i64
  %13 = getelementptr inbounds [4 x %class.SkOnce], [4 x %class.SkOnce]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE4once, i64 0, i64 %12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i8, i8* %13 acquire, align 1
  switch i8 %14, label %15 [
    i8 2, label %99
    i8 0, label %16
  ]

15:                                               ; preds = %16, %11
  br label %96

16:                                               ; preds = %11
  %17 = cmpxchg i8* %13, i8 0, i8 1 monotonic monotonic
  %18 = extractvalue { i8, i1 } %17, 1
  br i1 %18, label %19, label %15

19:                                               ; preds = %16
  %20 = bitcast %class.sk_sp.6* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  %21 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %2, i64 0, i32 0
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %21, align 8
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %2) #12
  %22 = bitcast %class.sk_sp* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  %23 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %3, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %23, align 8
  %24 = load %class.SkFontMgr*, %class.SkFontMgr** %21, align 8
  %25 = and i32 %0, 1
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 328080, i32 328380
  %28 = shl i32 %0, 23
  %29 = and i32 %28, 16777216
  %30 = or i32 %27, %29
  call void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp* nonnull sret %3, %class.SkFontMgr* %24, i8* null, i32 %30) #12
  %31 = load %class.SkTypeface*, %class.SkTypeface** %23, align 8
  %32 = icmp eq %class.SkTypeface* %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %19
  %34 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %31, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i32* %34, i32 1 monotonic
  %36 = ptrtoint %class.SkTypeface* %31 to i64
  br label %52

37:                                               ; preds = %19
  %38 = call i8* @_Znwm(i64 48) #14, !noalias !3
  %39 = getelementptr inbounds i8, i8* %38, i64 8
  %40 = bitcast i8* %39 to i32*
  store i32 1, i32* %40, align 4, !noalias !3
  %41 = bitcast i8* %38 to i32 (...)***
  %42 = getelementptr inbounds i8, i8* %38, i64 12
  %43 = bitcast i8* %42 to i32*
  store i32 1, i32* %43, align 4, !noalias !3
  %44 = getelementptr inbounds i8, i8* %38, i64 16
  %45 = bitcast i8* %44 to i32*
  %46 = call i32 @_ZN15SkTypefaceCache9NewFontIDEv() #12, !noalias !3
  store i32 %46, i32* %45, align 8, !noalias !3
  %47 = getelementptr inbounds i8, i8* %38, i64 20
  %48 = bitcast i8* %47 to i32*
  store i32 328080, i32* %48, align 4, !noalias !3
  %49 = getelementptr inbounds i8, i8* %38, i64 40
  store i8 0, i8* %49, align 1, !noalias !3
  %50 = getelementptr inbounds i8, i8* %38, i64 41
  store i8 1, i8* %50, align 1, !noalias !3
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [28 x i8*] }, { [28 x i8*] }* @_ZTVN12_GLOBAL__N_115SkEmptyTypefaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8, !noalias !3
  %51 = ptrtoint i8* %38 to i64
  br label %52

52:                                               ; preds = %37, %33
  %53 = phi i64 [ %36, %33 ], [ %51, %37 ]
  %54 = getelementptr inbounds [4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 %12
  %55 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %54, i64 0, i32 0
  %56 = load %class.SkTypeface*, %class.SkTypeface** %55, align 8
  %57 = bitcast %class.sk_sp* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %class.SkTypeface* %56, null
  br i1 %58, label %69, label %59

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i32* %60, i32 -1 acq_rel
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = bitcast %class.SkTypeface* %56 to %class.SkRefCntBase*
  %65 = bitcast %class.SkTypeface* %56 to void (%class.SkRefCntBase*)***
  %66 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %65, align 8
  %67 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, i64 2
  %68 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %67, align 8
  call void %68(%class.SkRefCntBase* nonnull %64) #12
  br label %69

69:                                               ; preds = %63, %59, %52
  %70 = load %class.SkTypeface*, %class.SkTypeface** %23, align 8
  %71 = icmp eq %class.SkTypeface* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %70, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkTypeface* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.SkTypeface* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  call void %81(%class.SkRefCntBase* nonnull %77) #12
  br label %82

82:                                               ; preds = %76, %72, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %83 = load %class.SkFontMgr*, %class.SkFontMgr** %21, align 8
  %84 = icmp eq %class.SkFontMgr* %83, null
  br i1 %84, label %95, label %85

85:                                               ; preds = %82
  %86 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 -1 acq_rel
  %88 = icmp eq i32 %87, 1
  br i1 %88, label %89, label %95

89:                                               ; preds = %85
  %90 = bitcast %class.SkFontMgr* %83 to %class.SkRefCntBase*
  %91 = bitcast %class.SkFontMgr* %83 to void (%class.SkRefCntBase*)***
  %92 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %92, i64 2
  %94 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %93, align 8
  call void %94(%class.SkRefCntBase* nonnull %90) #12
  br label %95

95:                                               ; preds = %89, %85, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  store atomic i8 2, i8* %13 release, align 1
  br label %99

96:                                               ; preds = %15, %96
  %97 = load atomic i8, i8* %13 acquire, align 1
  %98 = icmp eq i8 %97, 2
  br i1 %98, label %99, label %96

99:                                               ; preds = %96, %11, %95
  %100 = getelementptr inbounds [4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 %12, i32 0
  %101 = load %class.SkTypeface*, %class.SkTypeface** %100, align 8
  ret %class.SkTypeface* %101
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @__cxx_global_array_dtor(i8* nocapture readnone) #0 section ".text.startup" {
  %2 = load %class.SkTypeface*, %class.SkTypeface** getelementptr inbounds ([4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 3, i32 0), align 8
  %3 = icmp eq %class.SkTypeface* %2, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 -1 acq_rel
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %14

8:                                                ; preds = %4
  %9 = bitcast %class.SkTypeface* %2 to %class.SkRefCntBase*
  %10 = bitcast %class.SkTypeface* %2 to void (%class.SkRefCntBase*)***
  %11 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %11, i64 2
  %13 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %12, align 8
  tail call void %13(%class.SkRefCntBase* nonnull %9) #12
  br label %14

14:                                               ; preds = %1, %4, %8
  %15 = load %class.SkTypeface*, %class.SkTypeface** getelementptr inbounds ([4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 2, i32 0), align 16
  %16 = icmp eq %class.SkTypeface* %15, null
  br i1 %16, label %27, label %17

17:                                               ; preds = %14
  %18 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %27

21:                                               ; preds = %17
  %22 = bitcast %class.SkTypeface* %15 to %class.SkRefCntBase*
  %23 = bitcast %class.SkTypeface* %15 to void (%class.SkRefCntBase*)***
  %24 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %23, align 8
  %25 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, i64 2
  %26 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %25, align 8
  tail call void %26(%class.SkRefCntBase* nonnull %22) #12
  br label %27

27:                                               ; preds = %21, %17, %14
  %28 = load %class.SkTypeface*, %class.SkTypeface** getelementptr inbounds ([4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 1, i32 0), align 8
  %29 = icmp eq %class.SkTypeface* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %28, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkTypeface* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkTypeface* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  tail call void %39(%class.SkRefCntBase* nonnull %35) #12
  br label %40

40:                                               ; preds = %34, %30, %27
  %41 = load %class.SkTypeface*, %class.SkTypeface** getelementptr inbounds ([4 x %class.sk_sp], [4 x %class.sk_sp]* @_ZZN10SkTypeface18GetDefaultTypefaceENS_5StyleEE8defaults, i64 0, i64 0, i32 0), align 16
  %42 = icmp eq %class.SkTypeface* %41, null
  br i1 %42, label %53, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %41, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %53

47:                                               ; preds = %43
  %48 = bitcast %class.SkTypeface* %41 to %class.SkRefCntBase*
  %49 = bitcast %class.SkTypeface* %41 to void (%class.SkRefCntBase*)***
  %50 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %49, align 8
  %51 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %50, i64 2
  %52 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %51, align 8
  tail call void %52(%class.SkRefCntBase* nonnull %48) #12
  br label %53

53:                                               ; preds = %47, %43, %40
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface11MakeDefaultEv(%class.sk_sp* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32 0)
  %3 = icmp eq %class.SkTypeface* %2, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i32* %5, i32 1 monotonic, !noalias !6
  br label %7

7:                                                ; preds = %1, %4
  %8 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* %2, %class.SkTypeface** %8, align 8, !alias.scope !6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN10SkTypeface8UniqueIDEPKS_(%class.SkTypeface* readonly) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %class.SkTypeface* %0, null
  br i1 %2, label %3, label %5

3:                                                ; preds = %1
  %4 = tail call %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32 0)
  br label %5

5:                                                ; preds = %3, %1
  %6 = phi %class.SkTypeface* [ %4, %3 ], [ %0, %1 ]
  %7 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %6, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN10SkTypeface5EqualEPKS_S1_(%class.SkTypeface* readonly, %class.SkTypeface* readonly) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %class.SkTypeface* %0, %1
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = icmp eq %class.SkTypeface* %0, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = tail call %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32 0) #12
  br label %8

8:                                                ; preds = %4, %6
  %9 = phi %class.SkTypeface* [ %7, %6 ], [ %0, %4 ]
  %10 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %9, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq %class.SkTypeface* %1, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %8
  %14 = tail call %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32 0) #12
  br label %15

15:                                               ; preds = %8, %13
  %16 = phi %class.SkTypeface* [ %14, %13 ], [ %1, %8 ]
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %16, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %11, %18
  br label %20

20:                                               ; preds = %15, %2
  %21 = phi i1 [ true, %2 ], [ %19, %15 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface12MakeFromNameEPKc11SkFontStyle(%class.sk_sp* noalias sret, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = icmp eq i8* %1, null
  br i1 %5, label %6, label %25

6:                                                ; preds = %3
  %7 = and i32 %2, -16777216
  %8 = icmp eq i32 %7, 16777216
  %9 = icmp ult i32 %2, 33554432
  br i1 %9, label %10, label %25

10:                                               ; preds = %6
  %11 = trunc i32 %2 to i16
  switch i16 %11, label %25 [
    i16 700, label %12
    i16 400, label %12
  ]

12:                                               ; preds = %10, %10
  %13 = and i32 %2, 65535
  %14 = icmp eq i32 %13, 700
  %15 = select i1 %8, i32 2, i32 0
  %16 = zext i1 %14 to i32
  %17 = or i32 %15, %16
  %18 = tail call %class.SkTypeface* @_ZN10SkTypeface18GetDefaultTypefaceENS_5StyleE(i32 %17)
  %19 = icmp eq %class.SkTypeface* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i32* %21, i32 1 monotonic, !noalias !9
  br label %23

23:                                               ; preds = %12, %20
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* %18, %class.SkTypeface** %24, align 8, !alias.scope !9
  br label %42

25:                                               ; preds = %6, %10, %3
  %26 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %4) #12
  %27 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  %28 = load %class.SkFontMgr*, %class.SkFontMgr** %27, align 8
  call void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp* sret %0, %class.SkFontMgr* %28, i8* %1, i32 %2) #12
  %29 = load %class.SkFontMgr*, %class.SkFontMgr** %27, align 8
  %30 = icmp eq %class.SkFontMgr* %29, null
  br i1 %30, label %41, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %29, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw add i32* %32, i32 -1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %41

35:                                               ; preds = %31
  %36 = bitcast %class.SkFontMgr* %29 to %class.SkRefCntBase*
  %37 = bitcast %class.SkFontMgr* %29 to void (%class.SkRefCntBase*)***
  %38 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %37, align 8
  %39 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, i64 2
  %40 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %39, align 8
  call void %40(%class.SkRefCntBase* nonnull %36) #12
  br label %41

41:                                               ; preds = %25, %31, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  br label %42

42:                                               ; preds = %41, %23
  ret void
}

declare void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* sret) local_unnamed_addr #1

declare void @_ZNK9SkFontMgr18legacyMakeTypefaceEPKc11SkFontStyle(%class.sk_sp* sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface14MakeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* noalias sret, %class.SkStreamAsset*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = icmp eq %class.SkStreamAsset* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %4) #12
  %8 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  %9 = load %class.SkFontMgr*, %class.SkFontMgr** %8, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* sret %0, %class.SkFontMgr* %9, %class.SkStreamAsset* nonnull %1, i32 %2) #12
  %10 = load %class.SkFontMgr*, %class.SkFontMgr** %8, align 8
  %11 = icmp eq %class.SkFontMgr* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %10, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %22

16:                                               ; preds = %12
  %17 = bitcast %class.SkFontMgr* %10 to %class.SkRefCntBase*
  %18 = bitcast %class.SkFontMgr* %10 to void (%class.SkRefCntBase*)***
  %19 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %19, i64 2
  %21 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %20, align 8
  call void %21(%class.SkRefCntBase* nonnull %17) #12
  br label %22

22:                                               ; preds = %16, %12, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  br label %25

23:                                               ; preds = %3
  %24 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %24, align 8
  br label %25

25:                                               ; preds = %23, %22
  ret void
}

declare void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEEi(%class.sk_sp* sret, %class.SkFontMgr*, %class.SkStreamAsset*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface12MakeFromDataE5sk_spI6SkDataEi(%class.sk_sp* noalias sret, %class.sk_sp.8* nocapture, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = alloca %class.sk_sp.8, align 8
  %6 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %1, i64 0, i32 0
  %7 = load %class.SkData*, %class.SkData** %6, align 8
  %8 = icmp eq %class.SkData* %7, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %10, align 8
  br label %41

11:                                               ; preds = %3
  %12 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #12
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %4) #12
  %13 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  %14 = load %class.SkFontMgr*, %class.SkFontMgr** %13, align 8
  %15 = bitcast %class.sk_sp.8* %1 to i64*
  %16 = load i64, i64* %15, align 8
  store %class.SkData* null, %class.SkData** %6, align 8
  %17 = bitcast %class.sk_sp.8* %5 to i64*
  store i64 %16, i64* %17, align 8
  call void @_ZNK9SkFontMgr12makeFromDataE5sk_spI6SkDataEi(%class.sk_sp* sret %0, %class.SkFontMgr* %14, %class.sk_sp.8* nonnull %5, i32 %2) #12
  %18 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %5, i64 0, i32 0
  %19 = load %class.SkData*, %class.SkData** %18, align 8
  %20 = icmp eq %class.SkData* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %11
  %22 = getelementptr inbounds %class.SkData, %class.SkData* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 -1 acq_rel
  %24 = icmp eq i32 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN6SkDataD1Ev(%class.SkData* nonnull %19) #12
  %26 = bitcast %class.SkData* %19 to i8*
  call void @_ZN6SkDatadlEPv(i8* nonnull %26) #12
  br label %27

27:                                               ; preds = %11, %21, %25
  %28 = load %class.SkFontMgr*, %class.SkFontMgr** %13, align 8
  %29 = icmp eq %class.SkFontMgr* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %28, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw add i32* %31, i32 -1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = bitcast %class.SkFontMgr* %28 to %class.SkRefCntBase*
  %36 = bitcast %class.SkFontMgr* %28 to void (%class.SkRefCntBase*)***
  %37 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %36, align 8
  %38 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %37, i64 2
  %39 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %38, align 8
  call void %39(%class.SkRefCntBase* nonnull %35) #12
  br label %40

40:                                               ; preds = %27, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #12
  br label %41

41:                                               ; preds = %40, %9
  ret void
}

declare void @_ZNK9SkFontMgr12makeFromDataE5sk_spI6SkDataEi(%class.sk_sp* sret, %class.SkFontMgr*, %class.sk_sp.8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface12MakeFromFileEPKci(%class.sk_sp* noalias sret, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp.6, align 8
  %5 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %4) #12
  %6 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  %7 = load %class.SkFontMgr*, %class.SkFontMgr** %6, align 8
  call void @_ZNK9SkFontMgr12makeFromFileEPKci(%class.sk_sp* sret %0, %class.SkFontMgr* %7, i8* %1, i32 %2) #12
  %8 = load %class.SkFontMgr*, %class.SkFontMgr** %6, align 8
  %9 = icmp eq %class.SkFontMgr* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkFontMgr* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkFontMgr* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  call void %19(%class.SkRefCntBase* nonnull %15) #12
  br label %20

20:                                               ; preds = %3, %10, %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

declare void @_ZNK9SkFontMgr12makeFromFileEPKci(%class.sk_sp* sret, %class.SkFontMgr*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface9makeCloneERK15SkFontArguments(%class.sk_sp* noalias sret, %class.SkTypeface*, %struct.SkFontArguments* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %1 to void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)***
  %5 = load void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)**, void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)*, void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)** %5, i64 4
  %7 = load void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)*, void (%class.sk_sp*, %class.SkTypeface*, %struct.SkFontArguments*)** %6, align 8
  tail call void %7(%class.sk_sp* sret %0, %class.SkTypeface* %1, %struct.SkFontArguments* dereferenceable(24) %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface*, %class.SkWStream*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8, align 1
  %5 = alloca %class.SkFontDescriptor, align 8
  %6 = alloca i32, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %7 = bitcast %class.SkFontDescriptor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 96, i1 false)
  call void @_ZN16SkFontDescriptorC1Ev(%class.SkFontDescriptor* nonnull %5) #12
  %8 = bitcast %class.SkTypeface* %0 to void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)***
  %9 = load void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)**, void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)*** %8, align 8
  %10 = getelementptr inbounds void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)*, void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)** %9, i64 13
  %11 = load void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)*, void (%class.SkTypeface*, %class.SkFontDescriptor*, i8*)** %10, align 8
  call void %11(%class.SkTypeface* %0, %class.SkFontDescriptor* nonnull %5, i8* nonnull %4) #12
  switch i32 %2, label %81 [
    i32 0, label %15
    i32 2, label %12
  ]

12:                                               ; preds = %3
  %13 = load i8, i8* %4, align 1, !range !12
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %81, label %15

15:                                               ; preds = %12, %3
  %16 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #12
  store i32 -1431655766, i32* %6, align 4
  %17 = bitcast %class.SkTypeface* %0 to %class.SkStreamAsset* (%class.SkTypeface*, i32*)***
  %18 = load %class.SkStreamAsset* (%class.SkTypeface*, i32*)**, %class.SkStreamAsset* (%class.SkTypeface*, i32*)*** %17, align 8
  %19 = getelementptr inbounds %class.SkStreamAsset* (%class.SkTypeface*, i32*)*, %class.SkStreamAsset* (%class.SkTypeface*, i32*)** %18, i64 10
  %20 = load %class.SkStreamAsset* (%class.SkTypeface*, i32*)*, %class.SkStreamAsset* (%class.SkTypeface*, i32*)** %19, align 8
  %21 = call %class.SkStreamAsset* %20(%class.SkTypeface* %0, i32* nonnull %6) #12
  %22 = ptrtoint %class.SkStreamAsset* %21 to i64
  %23 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 4
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %class.SkStreamAsset*, %class.SkStreamAsset** %24, align 8
  %26 = bitcast %"class.std::__1::unique_ptr"* %23 to i64*
  store i64 %22, i64* %26, align 8
  %27 = icmp eq %class.SkStreamAsset* %25, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %15
  %29 = bitcast %class.SkStreamAsset* %25 to void (%class.SkStreamAsset*)***
  %30 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %30, i64 1
  %32 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %31, align 8
  call void %32(%class.SkStreamAsset* nonnull %25) #12
  %33 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %class.SkStreamAsset*, %class.SkStreamAsset** %33, align 8
  br label %35

35:                                               ; preds = %15, %28
  %36 = phi %class.SkStreamAsset* [ %21, %15 ], [ %34, %28 ]
  %37 = icmp eq %class.SkStreamAsset* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = load i32, i32* %6, align 4
  %40 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 5
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %35, %38
  %42 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)***
  %43 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)**, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %43, i64 11
  %45 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %44, align 8
  %46 = call i32 %45(%class.SkTypeface* %0, %"struct.SkFontArguments::VariationPosition::Coordinate"* null, i32 0) #12
  %47 = icmp sgt i32 %46, 0
  br i1 %47, label %48, label %80

48:                                               ; preds = %41
  %49 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 7
  store i32 %46, i32* %49, align 8
  %50 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 8
  %51 = sext i32 %46 to i64
  %52 = getelementptr inbounds %class.SkAutoSTMalloc, %class.SkAutoSTMalloc* %50, i64 0, i32 0
  %53 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %52, align 8
  %54 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 8, i32 1
  %55 = bitcast %union.anon* %54 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %56 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %53, %55
  br i1 %56, label %59, label %57

57:                                               ; preds = %48
  %58 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %53 to i8*
  call void @_Z7sk_freePv(i8* %58) #12
  br label %59

59:                                               ; preds = %57, %48
  %60 = icmp ugt i32 %46, 4
  br i1 %60, label %61, label %65

61:                                               ; preds = %59
  %62 = call i8* @_Z15sk_malloc_throwmm(i64 %51, i64 8) #12
  %63 = bitcast %class.SkAutoSTMalloc* %50 to i8**
  store i8* %62, i8** %63, align 8
  %64 = bitcast i8* %62 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  br label %67

65:                                               ; preds = %59
  %66 = bitcast %class.SkAutoSTMalloc* %50 to %union.anon**
  store %union.anon* %54, %union.anon** %66, align 8
  br label %67

67:                                               ; preds = %61, %65
  %68 = phi %"struct.SkFontArguments::VariationPosition::Coordinate"* [ %55, %65 ], [ %64, %61 ]
  %69 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)**, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*** %42, align 8
  %70 = getelementptr inbounds i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %69, i64 11
  %71 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %70, align 8
  %72 = call i32 %71(%class.SkTypeface* %0, %"struct.SkFontArguments::VariationPosition::Coordinate"* %68, i32 %46) #12
  %73 = icmp slt i32 %72, 1
  br i1 %73, label %74, label %80

74:                                               ; preds = %67
  store i32 0, i32* %49, align 8
  %75 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %52, align 8
  %76 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %75, %55
  br i1 %76, label %79, label %77

77:                                               ; preds = %74
  %78 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %75 to i8*
  call void @_Z7sk_freePv(i8* %78) #12
  br label %79

79:                                               ; preds = %74, %77
  store %"struct.SkFontArguments::VariationPosition::Coordinate"* null, %"struct.SkFontArguments::VariationPosition::Coordinate"** %52, align 8
  br label %80

80:                                               ; preds = %67, %79, %41
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #12
  br label %81

81:                                               ; preds = %12, %3, %80
  call void @_ZNK16SkFontDescriptor9serializeEP9SkWStream(%class.SkFontDescriptor* nonnull %5, %class.SkWStream* %1) #12
  %82 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 8, i32 0
  %83 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %82, align 8
  %84 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 8, i32 1
  %85 = bitcast %union.anon* %84 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %86 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %83, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %81
  %88 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %83 to i8*
  call void @_Z7sk_freePv(i8* %88) #12
  br label %89

89:                                               ; preds = %87, %81
  %90 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %class.SkStreamAsset*, %class.SkStreamAsset** %90, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %90, align 8
  %92 = icmp eq %class.SkStreamAsset* %91, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %89
  %94 = bitcast %class.SkStreamAsset* %91 to void (%class.SkStreamAsset*)***
  %95 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %95, i64 1
  %97 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %96, align 8
  call void %97(%class.SkStreamAsset* nonnull %91) #12
  br label %98

98:                                               ; preds = %89, %93
  %99 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 2
  call void @_ZN8SkStringD1Ev(%class.SkString* %99) #12
  %100 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %100) #12
  %101 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %5, i64 0, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %101) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN16SkFontDescriptorC1Ev(%class.SkFontDescriptor*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkStreamAsset* @_ZNK10SkTypeface10openStreamEPi(%class.SkTypeface*, i32*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #12
  store i32 -1431655766, i32* %3, align 4
  %5 = icmp eq i32* %1, null
  %6 = select i1 %5, i32* %3, i32* %1
  %7 = bitcast %class.SkTypeface* %0 to %class.SkStreamAsset* (%class.SkTypeface*, i32*)***
  %8 = load %class.SkStreamAsset* (%class.SkTypeface*, i32*)**, %class.SkStreamAsset* (%class.SkTypeface*, i32*)*** %7, align 8
  %9 = getelementptr inbounds %class.SkStreamAsset* (%class.SkTypeface*, i32*)*, %class.SkStreamAsset* (%class.SkTypeface*, i32*)** %8, i64 10
  %10 = load %class.SkStreamAsset* (%class.SkTypeface*, i32*)*, %class.SkStreamAsset* (%class.SkTypeface*, i32*)** %9, align 8
  %11 = call %class.SkStreamAsset* %10(%class.SkTypeface* %0, i32* %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #12
  ret %class.SkStreamAsset* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface26getVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)***
  %5 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)**, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %5, i64 11
  %7 = load i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontArguments::VariationPosition::Coordinate"*, i32)** %6, align 8
  %8 = tail call i32 %7(%class.SkTypeface* %0, %"struct.SkFontArguments::VariationPosition::Coordinate"* %1, i32 %2) #12
  ret i32 %8
}

declare void @_ZNK16SkFontDescriptor9serializeEP9SkWStream(%class.SkFontDescriptor*, %class.SkWStream*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface9serializeENS_17SerializeBehaviorE(%class.sk_sp.8* noalias sret, %class.SkTypeface*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %class.SkDynamicMemoryWStream, align 8
  %5 = bitcast %class.SkDynamicMemoryWStream* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #12
  %6 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 1
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTV22SkDynamicMemoryWStream, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %8 = bitcast %"struct.SkDynamicMemoryWStream::Block"** %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %class.SkDynamicMemoryWStream, %class.SkDynamicMemoryWStream* %4, i64 0, i32 0
  call void @_ZNK10SkTypeface9serializeEP9SkWStreamNS_17SerializeBehaviorE(%class.SkTypeface* %1, %class.SkWStream* nonnull %9, i32 %2)
  call void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.8* sret %0, %class.SkDynamicMemoryWStream* nonnull %4) #12
  call void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #12
  ret void
}

declare void @_ZN22SkDynamicMemoryWStream12detachAsDataEv(%class.sk_sp.8* sret, %class.SkDynamicMemoryWStream*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN22SkDynamicMemoryWStreamD1Ev(%class.SkDynamicMemoryWStream*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkTypeface15MakeDeserializeEP8SkStream(%class.sk_sp* noalias sret, %class.SkStream*) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.SkFontDescriptor, align 8
  %4 = alloca %class.sk_sp.6, align 8
  %5 = alloca %struct.SkFontArguments, align 8
  %6 = alloca %class.sk_sp.6, align 8
  %7 = bitcast %class.SkFontDescriptor* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %7) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 96, i1 false)
  call void @_ZN16SkFontDescriptorC1Ev(%class.SkFontDescriptor* nonnull %3) #12
  %8 = call zeroext i1 @_ZN16SkFontDescriptor11DeserializeEP8SkStreamPS_(%class.SkStream* %1, %class.SkFontDescriptor* nonnull %3) #12
  br i1 %8, label %11, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* null, %class.SkTypeface** %10, align 8
  br label %120

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %class.SkStreamAsset*, %class.SkStreamAsset** %12, align 8
  %14 = icmp eq %class.SkStreamAsset* %13, null
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %16, align 8
  %17 = bitcast %class.SkStreamAsset* %13 to %class.SkStreamAsset* (%class.SkStreamAsset*)***
  %18 = load %class.SkStreamAsset* (%class.SkStreamAsset*)**, %class.SkStreamAsset* (%class.SkStreamAsset*)*** %17, align 8
  %19 = getelementptr inbounds %class.SkStreamAsset* (%class.SkStreamAsset*)*, %class.SkStreamAsset* (%class.SkStreamAsset*)** %18, i64 13
  %20 = load %class.SkStreamAsset* (%class.SkStreamAsset*)*, %class.SkStreamAsset* (%class.SkStreamAsset*)** %19, align 8
  %21 = call %class.SkStreamAsset* %20(%class.SkStreamAsset* nonnull %13) #12
  %22 = getelementptr inbounds %class.SkStreamAsset, %class.SkStreamAsset* %21, i64 0, i32 0, i32 0, i32 0
  call void @_ZN23SkCustomTypefaceBuilder11DeserializeEP8SkStream(%class.sk_sp* sret %0, %class.SkStream* %22) #12
  %23 = icmp eq %class.SkStreamAsset* %21, null
  br i1 %23, label %29, label %24

24:                                               ; preds = %15
  %25 = bitcast %class.SkStreamAsset* %21 to void (%class.SkStreamAsset*)***
  %26 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %25, align 8
  %27 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %26, i64 1
  %28 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %27, align 8
  call void %28(%class.SkStreamAsset* nonnull %21) #12
  br label %29

29:                                               ; preds = %15, %24
  %30 = load %class.SkTypeface*, %class.SkTypeface** %16, align 8
  %31 = icmp eq %class.SkTypeface* %30, null
  br i1 %31, label %32, label %120

32:                                               ; preds = %11, %29
  %33 = call %class.SkFontData* @_ZN16SkFontDescriptor17maybeAsSkFontDataEv(%class.SkFontDescriptor* nonnull %3) #12
  %34 = ptrtoint %class.SkFontData* %33 to i64
  %35 = icmp eq %class.SkFontData* %33, null
  br i1 %35, label %56, label %36

36:                                               ; preds = %32
  %37 = bitcast %class.sk_sp.6* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %4, i64 0, i32 0
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %38, align 8
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %4) #12
  %39 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %39, align 8
  %40 = load %class.SkFontMgr*, %class.SkFontMgr** %38, align 8
  call void @_ZNK9SkFontMgr16makeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp* sret %0, %class.SkFontMgr* %40, %class.SkFontData* nonnull %33) #12
  %41 = load %class.SkTypeface*, %class.SkTypeface** %39, align 8
  %42 = icmp eq %class.SkTypeface* %41, null
  %43 = load %class.SkFontMgr*, %class.SkFontMgr** %38, align 8
  %44 = icmp eq %class.SkFontMgr* %43, null
  br i1 %44, label %55, label %45

45:                                               ; preds = %36
  %46 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw add i32* %46, i32 -1 acq_rel
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = bitcast %class.SkFontMgr* %43 to %class.SkRefCntBase*
  %51 = bitcast %class.SkFontMgr* %43 to void (%class.SkRefCntBase*)***
  %52 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %51, align 8
  %53 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %52, i64 2
  %54 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %53, align 8
  call void %54(%class.SkRefCntBase* nonnull %50) #12
  br label %55

55:                                               ; preds = %36, %45, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br i1 %42, label %56, label %120

56:                                               ; preds = %32, %55
  %57 = phi i64 [ 0, %55 ], [ %34, %32 ]
  %58 = load %class.SkStreamAsset*, %class.SkStreamAsset** %12, align 8
  %59 = icmp eq %class.SkStreamAsset* %58, null
  br i1 %59, label %93, label %60

60:                                               ; preds = %56
  %61 = bitcast %struct.SkFontArguments* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 -86, i64 24, i1 false)
  %62 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %5, i64 0, i32 0
  %63 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %5, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %struct.SkFontArguments, %struct.SkFontArguments* %5, i64 0, i32 1, i32 1
  %65 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %62, align 8
  %67 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 8, i32 0
  %68 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 7
  %71 = load i32, i32* %70, align 8
  %72 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"** %63 to i64*
  store i64 %69, i64* %72, align 8
  store i32 %71, i32* %64, align 8
  %73 = bitcast %class.sk_sp.6* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #12
  %74 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %6, i64 0, i32 0
  store %class.SkFontMgr* inttoptr (i64 -6148914691236517206 to %class.SkFontMgr*), %class.SkFontMgr** %74, align 8
  call void @_ZN9SkFontMgr10RefDefaultEv(%class.sk_sp.6* nonnull sret %6) #12
  %75 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %75, align 8
  %76 = load %class.SkFontMgr*, %class.SkFontMgr** %74, align 8
  %77 = load %class.SkStreamAsset*, %class.SkStreamAsset** %12, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %12, align 8
  call void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp* sret %0, %class.SkFontMgr* %76, %class.SkStreamAsset* %77, %struct.SkFontArguments* nonnull dereferenceable(24) %5) #12
  %78 = load %class.SkTypeface*, %class.SkTypeface** %75, align 8
  %79 = icmp eq %class.SkTypeface* %78, null
  %80 = load %class.SkFontMgr*, %class.SkFontMgr** %74, align 8
  %81 = icmp eq %class.SkFontMgr* %80, null
  br i1 %81, label %92, label %82

82:                                               ; preds = %60
  %83 = getelementptr inbounds %class.SkFontMgr, %class.SkFontMgr* %80, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %92

86:                                               ; preds = %82
  %87 = bitcast %class.SkFontMgr* %80 to %class.SkRefCntBase*
  %88 = bitcast %class.SkFontMgr* %80 to void (%class.SkRefCntBase*)***
  %89 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %88, align 8
  %90 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %89, i64 2
  %91 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %90, align 8
  call void %91(%class.SkRefCntBase* nonnull %87) #12
  br label %92

92:                                               ; preds = %60, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #12
  br i1 %79, label %93, label %99

93:                                               ; preds = %56, %92
  %94 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 0, i32 0, i32 0
  %95 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %94, align 8
  %96 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %95, i64 0, i32 2
  %97 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 3, i32 0
  %98 = load i32, i32* %97, align 8
  call void @_ZN10SkTypeface12MakeFromNameEPKc11SkFontStyle(%class.sk_sp* sret %0, i8* %96, i32 %98)
  br label %99

99:                                               ; preds = %92, %93
  %100 = inttoptr i64 %57 to %class.SkFontData*
  %101 = icmp eq i64 %57, 0
  br i1 %101, label %120, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %100, i64 0, i32 3, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %100, i64 0, i32 3, i32 1, i32 0, i64 0
  %106 = icmp eq i32* %104, %105
  br i1 %106, label %109, label %107

107:                                              ; preds = %102
  %108 = bitcast i32* %104 to i8*
  call void @_Z7sk_freePv(i8* %108) #12
  br label %109

109:                                              ; preds = %107, %102
  %110 = getelementptr inbounds %class.SkFontData, %class.SkFontData* %100, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %class.SkStreamAsset*, %class.SkStreamAsset** %110, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %110, align 8
  %112 = icmp eq %class.SkStreamAsset* %111, null
  br i1 %112, label %118, label %113

113:                                              ; preds = %109
  %114 = bitcast %class.SkStreamAsset* %111 to void (%class.SkStreamAsset*)***
  %115 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %114, align 8
  %116 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %115, i64 1
  %117 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %116, align 8
  call void %117(%class.SkStreamAsset* nonnull %111) #12
  br label %118

118:                                              ; preds = %113, %109
  %119 = inttoptr i64 %57 to i8*
  call void @_ZdlPv(i8* %119) #14
  br label %120

120:                                              ; preds = %55, %118, %99, %29, %9
  %121 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 8, i32 0
  %122 = load %"struct.SkFontArguments::VariationPosition::Coordinate"*, %"struct.SkFontArguments::VariationPosition::Coordinate"** %121, align 8
  %123 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 8, i32 1
  %124 = bitcast %union.anon* %123 to %"struct.SkFontArguments::VariationPosition::Coordinate"*
  %125 = icmp eq %"struct.SkFontArguments::VariationPosition::Coordinate"* %122, %124
  br i1 %125, label %128, label %126

126:                                              ; preds = %120
  %127 = bitcast %"struct.SkFontArguments::VariationPosition::Coordinate"* %122 to i8*
  call void @_Z7sk_freePv(i8* %127) #12
  br label %128

128:                                              ; preds = %126, %120
  %129 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %130 = load %class.SkStreamAsset*, %class.SkStreamAsset** %129, align 8
  store %class.SkStreamAsset* null, %class.SkStreamAsset** %129, align 8
  %131 = icmp eq %class.SkStreamAsset* %130, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %128
  %133 = bitcast %class.SkStreamAsset* %130 to void (%class.SkStreamAsset*)***
  %134 = load void (%class.SkStreamAsset*)**, void (%class.SkStreamAsset*)*** %133, align 8
  %135 = getelementptr inbounds void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %134, i64 1
  %136 = load void (%class.SkStreamAsset*)*, void (%class.SkStreamAsset*)** %135, align 8
  call void %136(%class.SkStreamAsset* nonnull %130) #12
  br label %137

137:                                              ; preds = %128, %132
  %138 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 2
  call void @_ZN8SkStringD1Ev(%class.SkString* %138) #12
  %139 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 1
  call void @_ZN8SkStringD1Ev(%class.SkString* %139) #12
  %140 = getelementptr inbounds %class.SkFontDescriptor, %class.SkFontDescriptor* %3, i64 0, i32 0
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %140) #12
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %7) #12
  ret void
}

declare zeroext i1 @_ZN16SkFontDescriptor11DeserializeEP8SkStreamPS_(%class.SkStream*, %class.SkFontDescriptor*) local_unnamed_addr #1

declare void @_ZN23SkCustomTypefaceBuilder11DeserializeEP8SkStream(%class.sk_sp* sret, %class.SkStream*) local_unnamed_addr #1

declare %class.SkFontData* @_ZN16SkFontDescriptor17maybeAsSkFontDataEv(%class.SkFontDescriptor*) local_unnamed_addr #1

declare void @_ZNK9SkFontMgr16makeFromFontDataENSt3__110unique_ptrI10SkFontDataNS0_14default_deleteIS2_EEEE(%class.sk_sp* sret, %class.SkFontMgr*, %class.SkFontData*) local_unnamed_addr #1

declare void @_ZNK9SkFontMgr14makeFromStreamENSt3__110unique_ptrI13SkStreamAssetNS0_14default_deleteIS2_EEEERK15SkFontArguments(%class.sk_sp* sret, %class.SkFontMgr*, %class.SkStreamAsset*, %struct.SkFontArguments* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface28getVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)***
  %5 = load i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)**, i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)*** %4, align 8
  %6 = getelementptr inbounds i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)** %5, i64 12
  %7 = load i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)*, i32 (%class.SkTypeface*, %"struct.SkFontParameters::Variation::Axis"*, i32)** %6, align 8
  %8 = tail call i32 %7(%class.SkTypeface* %0, %"struct.SkFontParameters::Variation::Axis"* %1, i32 %2) #12
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface11countTablesEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*, i32*)***
  %3 = load i32 (%class.SkTypeface*, i32*)**, i32 (%class.SkTypeface*, i32*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%class.SkTypeface*, i32*)*, i32 (%class.SkTypeface*, i32*)** %3, i64 21
  %5 = load i32 (%class.SkTypeface*, i32*)*, i32 (%class.SkTypeface*, i32*)** %4, align 8
  %6 = tail call i32 %5(%class.SkTypeface* %0, i32* null) #12
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface12getTableTagsEPj(%class.SkTypeface*, i32*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*, i32*)***
  %4 = load i32 (%class.SkTypeface*, i32*)**, i32 (%class.SkTypeface*, i32*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkTypeface*, i32*)*, i32 (%class.SkTypeface*, i32*)** %4, i64 21
  %6 = load i32 (%class.SkTypeface*, i32*)*, i32 (%class.SkTypeface*, i32*)** %5, align 8
  %7 = tail call i32 %6(%class.SkTypeface* %0, i32* %1) #12
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10SkTypeface12getTableSizeEj(%class.SkTypeface*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTypeface* %0 to i64 (%class.SkTypeface*, i32, i64, i64, i8*)***
  %4 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)**, i64 (%class.SkTypeface*, i32, i64, i64, i8*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %4, i64 22
  %6 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %5, align 8
  %7 = tail call i64 %6(%class.SkTypeface* %0, i32 %1, i64 0, i64 4294967295, i8* null) #12
  ret i64 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK10SkTypeface12getTableDataEjmmPv(%class.SkTypeface*, i32, i64, i64, i8*) local_unnamed_addr #0 align 2 {
  %6 = bitcast %class.SkTypeface* %0 to i64 (%class.SkTypeface*, i32, i64, i64, i8*)***
  %7 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)**, i64 (%class.SkTypeface*, i32, i64, i64, i8*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %7, i64 22
  %9 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %8, align 8
  %10 = tail call i64 %9(%class.SkTypeface* %0, i32 %1, i64 %2, i64 %3, i8* %4) #12
  ret i64 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface13copyTableDataEj(%class.sk_sp.8* noalias sret, %class.SkTypeface*, i32) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %1 to void (%class.sk_sp.8*, %class.SkTypeface*, i32)***
  %5 = load void (%class.sk_sp.8*, %class.SkTypeface*, i32)**, void (%class.sk_sp.8*, %class.SkTypeface*, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%class.sk_sp.8*, %class.SkTypeface*, i32)*, void (%class.sk_sp.8*, %class.SkTypeface*, i32)** %5, i64 23
  %7 = load void (%class.sk_sp.8*, %class.SkTypeface*, i32)*, void (%class.sk_sp.8*, %class.SkTypeface*, i32)** %6, align 8
  tail call void %7(%class.sk_sp.8* sret %0, %class.SkTypeface* %1, i32 %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface15onCopyTableDataEj(%class.sk_sp.8* noalias sret, %class.SkTypeface*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %1 to i64 (%class.SkTypeface*, i32, i64, i64, i8*)***
  %5 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)**, i64 (%class.SkTypeface*, i32, i64, i64, i8*)*** %4, align 8
  %6 = getelementptr inbounds i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %5, i64 22
  %7 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %6, align 8
  %8 = tail call i64 %7(%class.SkTypeface* %1, i32 %2, i64 0, i64 4294967295, i8* null) #12
  %9 = icmp eq i64 %8, 0
  %10 = getelementptr inbounds %class.sk_sp.8, %class.sk_sp.8* %0, i64 0, i32 0
  br i1 %9, label %19, label %11

11:                                               ; preds = %3
  store %class.SkData* inttoptr (i64 -6148914691236517206 to %class.SkData*), %class.SkData** %10, align 8
  tail call void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.8* sret %0, i64 %8) #12
  %12 = load %class.SkData*, %class.SkData** %10, align 8
  %13 = getelementptr inbounds %class.SkData, %class.SkData* %12, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)**, i64 (%class.SkTypeface*, i32, i64, i64, i8*)*** %4, align 8
  %16 = getelementptr inbounds i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %15, i64 22
  %17 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %16, align 8
  %18 = tail call i64 %17(%class.SkTypeface* %1, i32 %2, i64 0, i64 %8, i8* %14) #12
  br label %20

19:                                               ; preds = %3
  store %class.SkData* null, %class.SkData** %10, align 8
  br label %20

20:                                               ; preds = %11, %19
  ret void
}

declare void @_ZN6SkData17MakeUninitializedEm(%class.sk_sp.8* sret, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkScalerContext* @_ZNK10SkTypeface19createScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%class.SkTypeface*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) local_unnamed_addr #0 align 2 {
  %4 = bitcast %class.SkTypeface* %0 to %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)***
  %5 = load %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)**, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*** %4, align 8
  %6 = getelementptr inbounds %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)** %5, i64 5
  %7 = load %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)** %6, align 8
  %8 = tail call %class.SkScalerContext* %7(%class.SkTypeface* %0, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2) #12
  ret %class.SkScalerContext* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface16unicharsToGlyphsEPKiiPt(%class.SkTypeface*, i32*, i32, i16*) local_unnamed_addr #0 align 2 {
  %5 = icmp sgt i32 %2, 0
  %6 = icmp ne i16* %3, null
  %7 = and i1 %5, %6
  %8 = icmp ne i32* %1, null
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %15

10:                                               ; preds = %4
  %11 = bitcast %class.SkTypeface* %0 to void (%class.SkTypeface*, i32*, i32, i16*)***
  %12 = load void (%class.SkTypeface*, i32*, i32, i16*)**, void (%class.SkTypeface*, i32*, i32, i16*)*** %11, align 8
  %13 = getelementptr inbounds void (%class.SkTypeface*, i32*, i32, i16*)*, void (%class.SkTypeface*, i32*, i32, i16*)** %12, i64 14
  %14 = load void (%class.SkTypeface*, i32*, i32, i16*)*, void (%class.SkTypeface*, i32*, i32, i16*)** %13, align 8
  tail call void %14(%class.SkTypeface* %0, i32* nonnull %1, i32 %2, i16* nonnull %3) #12
  br label %15

15:                                               ; preds = %10, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK10SkTypeface14unicharToGlyphEi(%class.SkTypeface*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca [1 x i16], align 2
  store i32 %1, i32* %3, align 4
  %5 = bitcast [1 x i16]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %5) #12
  %6 = getelementptr inbounds [1 x i16], [1 x i16]* %4, i64 0, i64 0
  store i16 0, i16* %6, align 2
  %7 = bitcast %class.SkTypeface* %0 to void (%class.SkTypeface*, i32*, i32, i16*)***
  %8 = load void (%class.SkTypeface*, i32*, i32, i16*)**, void (%class.SkTypeface*, i32*, i32, i16*)*** %7, align 8
  %9 = getelementptr inbounds void (%class.SkTypeface*, i32*, i32, i16*)*, void (%class.SkTypeface*, i32*, i32, i16*)** %8, i64 14
  %10 = load void (%class.SkTypeface*, i32*, i32, i16*)*, void (%class.SkTypeface*, i32*, i32, i16*)** %9, align 8
  call void %10(%class.SkTypeface* %0, i32* nonnull %3, i32 1, i16* nonnull %6) #12
  %11 = load i16, i16* %6, align 2
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %5) #12
  ret i16 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface11countGlyphsEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*)***
  %3 = load i32 (%class.SkTypeface*)**, i32 (%class.SkTypeface*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %3, i64 15
  %5 = load i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %4, align 8
  %6 = tail call i32 %5(%class.SkTypeface* %0) #12
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK10SkTypeface13getUnitsPerEmEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*)***
  %3 = load i32 (%class.SkTypeface*)**, i32 (%class.SkTypeface*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %3, i64 16
  %5 = load i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %4, align 8
  %6 = tail call i32 %5(%class.SkTypeface* %0) #12
  ret i32 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkTypeface25getKerningPairAdjustmentsEPKtiPi(%class.SkTypeface*, i16*, i32, i32*) local_unnamed_addr #0 align 2 {
  %5 = bitcast %class.SkTypeface* %0 to i1 (%class.SkTypeface*, i16*, i32, i32*)***
  %6 = load i1 (%class.SkTypeface*, i16*, i32, i32*)**, i1 (%class.SkTypeface*, i16*, i32, i32*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkTypeface*, i16*, i32, i32*)*, i1 (%class.SkTypeface*, i16*, i32, i32*)** %6, i64 17
  %8 = load i1 (%class.SkTypeface*, i16*, i32, i32*)*, i1 (%class.SkTypeface*, i16*, i32, i32*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkTypeface* %0, i16* %1, i32 %2, i32* %3) #12
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.SkTypeface::LocalizedStrings"* @_ZNK10SkTypeface24createFamilyNameIteratorEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.SkTypeface* %0 to %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)***
  %3 = load %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)**, %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)*** %2, align 8
  %4 = getelementptr inbounds %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)*, %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)** %3, i64 20
  %5 = load %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)*, %"class.SkTypeface::LocalizedStrings"* (%class.SkTypeface*)** %4, align 8
  %6 = tail call %"class.SkTypeface::LocalizedStrings"* %5(%class.SkTypeface* %0) #12
  ret %"class.SkTypeface::LocalizedStrings"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface13getFamilyNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTypeface* %0 to void (%class.SkTypeface*, %class.SkString*)***
  %4 = load void (%class.SkTypeface*, %class.SkString*)**, void (%class.SkTypeface*, %class.SkString*)*** %3, align 8
  %5 = getelementptr inbounds void (%class.SkTypeface*, %class.SkString*)*, void (%class.SkTypeface*, %class.SkString*)** %4, i64 18
  %6 = load void (%class.SkTypeface*, %class.SkString*)*, void (%class.SkTypeface*, %class.SkString*)** %5, align 8
  tail call void %6(%class.SkTypeface* %0, %class.SkString* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkTypeface17getPostScriptNameEP8SkString(%class.SkTypeface*, %class.SkString*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTypeface* %0 to i1 (%class.SkTypeface*, %class.SkString*)***
  %4 = load i1 (%class.SkTypeface*, %class.SkString*)**, i1 (%class.SkTypeface*, %class.SkString*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkTypeface*, %class.SkString*)*, i1 (%class.SkTypeface*, %class.SkString*)** %4, i64 19
  %6 = load i1 (%class.SkTypeface*, %class.SkString*)*, i1 (%class.SkTypeface*, %class.SkString*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkTypeface* %0, %class.SkString* %1) #12
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK10SkTypeface20getGlyphToUnicodeMapEPi(%class.SkTypeface*, i32* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTypeface* %0 to i32 (%class.SkTypeface*)***
  %4 = load i32 (%class.SkTypeface*)**, i32 (%class.SkTypeface*)*** %3, align 8
  %5 = getelementptr inbounds i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %4, i64 15
  %6 = load i32 (%class.SkTypeface*)*, i32 (%class.SkTypeface*)** %5, align 8
  %7 = tail call i32 %6(%class.SkTypeface* %0) #12
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = sext i32 %7 to i64
  %11 = shl nsw i64 %10, 2
  %12 = bitcast i32* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 %11, i1 false) #12
  br label %13

13:                                               ; preds = %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.SkAdvancedTypefaceMetrics* @_ZNK10SkTypeface18getAdvancedMetricsEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.SkOTTableOS2_V2::Type::Field", align 2
  %3 = bitcast %class.SkTypeface* %0 to %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)***
  %4 = load %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)**, %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)*** %3, align 8
  %5 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)*, %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)** %4, i64 7
  %6 = load %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)*, %struct.SkAdvancedTypefaceMetrics* (%class.SkTypeface*)** %5, align 8
  %7 = tail call %struct.SkAdvancedTypefaceMetrics* %6(%class.SkTypeface* %0) #12
  %8 = icmp eq %struct.SkAdvancedTypefaceMetrics* %7, null
  br i1 %8, label %51, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %10, align 8
  %12 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 0
  %17 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 1
  %18 = tail call dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString* %16, %class.SkString* dereferenceable(8) %17) #12
  br label %19

19:                                               ; preds = %15, %9
  %20 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 3
  %21 = load i8, i8* %20, align 4
  %22 = icmp eq i8 %21, 3
  br i1 %22, label %23, label %51

23:                                               ; preds = %19
  %24 = bitcast %"struct.SkOTTableOS2_V2::Type::Field"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"struct.SkOTTableOS2_V2::Type::Field", %"struct.SkOTTableOS2_V2::Type::Field"* %2, i64 0, i32 0
  store i16 -21846, i16* %25, align 2
  %26 = bitcast %class.SkTypeface* %0 to i64 (%class.SkTypeface*, i32, i64, i64, i8*)***
  %27 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)**, i64 (%class.SkTypeface*, i32, i64, i64, i8*)*** %26, align 8
  %28 = getelementptr inbounds i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %27, i64 22
  %29 = load i64 (%class.SkTypeface*, i32, i64, i64, i8*)*, i64 (%class.SkTypeface*, i32, i64, i64, i8*)** %28, align 8
  %30 = call i64 %29(%class.SkTypeface* %0, i32 1330851634, i64 8, i64 2, i8* nonnull %24) #12
  %31 = icmp eq i64 %30, 2
  br i1 %31, label %32, label %50

32:                                               ; preds = %23
  %33 = load i16, i16* %25, align 2
  %34 = and i16 %33, 2
  %35 = icmp ne i16 %34, 0
  %36 = and i16 %33, 3584
  %37 = icmp eq i16 %36, 512
  %38 = or i1 %35, %37
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 4
  %41 = load i8, i8* %40, align 1
  %42 = or i8 %41, 2
  store i8 %42, i8* %40, align 1
  br label %43

43:                                               ; preds = %32, %39
  %44 = and i16 %33, 1
  %45 = icmp eq i16 %44, 0
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.SkAdvancedTypefaceMetrics, %struct.SkAdvancedTypefaceMetrics* %7, i64 0, i32 4
  %48 = load i8, i8* %47, align 1
  %49 = or i8 %48, 4
  store i8 %49, i8* %47, align 1
  br label %50

50:                                               ; preds = %43, %46, %23
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %24) #12
  br label %51

51:                                               ; preds = %1, %19, %50
  ret %struct.SkAdvancedTypefaceMetrics* %7
}

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSERKS_(%class.SkString*, %class.SkString* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK10SkTypeface27onGetKerningPairAdjustmentsEPKtiPi(%class.SkTypeface* nocapture readnone, i16* nocapture readnone, i32, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK10SkTypeface9getBoundsEv(%class.SkTypeface*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i8, i8* %2 acquire, align 1
  switch i8 %3, label %4 [
    i8 2, label %21
    i8 0, label %5
  ]

4:                                                ; preds = %5, %1
  br label %18

5:                                                ; preds = %1
  %6 = cmpxchg i8* %2, i8 0, i8 1 monotonic monotonic
  %7 = extractvalue { i8, i1 } %6, 1
  br i1 %7, label %8, label %4

8:                                                ; preds = %5
  %9 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 3
  %10 = bitcast %class.SkTypeface* %0 to i1 (%class.SkTypeface*, %struct.SkRect*)***
  %11 = load i1 (%class.SkTypeface*, %struct.SkRect*)**, i1 (%class.SkTypeface*, %struct.SkRect*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%class.SkTypeface*, %struct.SkRect*)*, i1 (%class.SkTypeface*, %struct.SkRect*)** %11, i64 24
  %13 = load i1 (%class.SkTypeface*, %struct.SkRect*)*, i1 (%class.SkTypeface*, %struct.SkRect*)** %12, align 8
  %14 = tail call zeroext i1 %13(%class.SkTypeface* %0, %struct.SkRect* %9) #12
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %struct.SkRect* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 16, i1 false) #12
  br label %17

17:                                               ; preds = %15, %8
  store atomic i8 2, i8* %2 release, align 1
  br label %21

18:                                               ; preds = %4, %18
  %19 = load atomic i8, i8* %2 acquire, align 1
  %20 = icmp eq i8 %19, 2
  br i1 %20, label %21, label %18

21:                                               ; preds = %18, %1, %17
  %22 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 3
  %23 = bitcast %struct.SkRect* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 8
  %25 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 3, i32 2
  %26 = bitcast float* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 8
  %28 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %24, 0
  %29 = insertvalue { <2 x float>, <2 x float> } %28, <2 x float> %27, 1
  ret { <2 x float>, <2 x float> } %29
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK10SkTypeface15onComputeBoundsEP6SkRect(%class.SkTypeface*, %struct.SkRect* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPaint, align 8
  %4 = alloca %class.SkSurfaceProps, align 4
  %5 = alloca %class.SkFont, align 8
  %6 = alloca %struct.SkScalerContextRec, align 4
  %7 = alloca %struct.SkScalerContextEffects, align 8
  %8 = alloca %class.SkAutoDescriptor, align 8
  %9 = alloca %struct.SkScalerContextEffects, align 8
  %10 = alloca %struct.SkFontMetrics, align 4
  %11 = bitcast %class.SkFont* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #12
  %12 = getelementptr inbounds %class.SkFont, %class.SkFont* %5, i64 0, i32 0, i32 0
  store %class.SkTypeface* inttoptr (i64 -6148914691236517206 to %class.SkTypeface*), %class.SkTypeface** %12, align 8
  %13 = getelementptr inbounds %class.SkFont, %class.SkFont* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %13, align 8
  %14 = getelementptr inbounds %class.SkFont, %class.SkFont* %5, i64 0, i32 2
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %class.SkFont, %class.SkFont* %5, i64 0, i32 3
  store float 0xFFFFFFFFE0000000, float* %15, align 8
  %16 = getelementptr inbounds %class.SkFont, %class.SkFont* %5, i64 0, i32 4
  %17 = bitcast i8* %16 to i32*
  store i32 -1431655766, i32* %17, align 4
  call void @_ZN6SkFontC1Ev(%class.SkFont* nonnull %5) #12
  %18 = icmp eq %class.SkTypeface* %0, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic, !noalias !13
  %22 = atomicrmw add i32* %20, i32 1 monotonic
  br label %23

23:                                               ; preds = %2, %19
  %24 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  store %class.SkTypeface* %0, %class.SkTypeface** %12, align 8
  %25 = icmp eq %class.SkTypeface* %24, null
  br i1 %25, label %36, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = atomicrmw add i32* %27, i32 -1 acq_rel
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %30, label %36

30:                                               ; preds = %26
  %31 = bitcast %class.SkTypeface* %24 to %class.SkRefCntBase*
  %32 = bitcast %class.SkTypeface* %24 to void (%class.SkRefCntBase*)***
  %33 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %32, align 8
  %34 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, i64 2
  %35 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %34, align 8
  call void %35(%class.SkRefCntBase* nonnull %31) #12
  br label %36

36:                                               ; preds = %23, %26, %30
  br i1 %18, label %47, label %37

37:                                               ; preds = %36
  %38 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkTypeface* %0 to %class.SkRefCntBase*
  %43 = bitcast %class.SkTypeface* %0 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8
  call void %46(%class.SkRefCntBase* nonnull %42) #12
  br label %47

47:                                               ; preds = %36, %37, %41
  call void @_ZN6SkFont7setSizeEf(%class.SkFont* nonnull %5, float 2.048000e+03) #12
  call void @_ZN6SkFont16setLinearMetricsEb(%class.SkFont* nonnull %5, i1 zeroext true) #12
  %48 = bitcast %struct.SkScalerContextRec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* nonnull %48) #12
  %49 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %6, i64 0, i32 0
  store i32 -1431655766, i32* %49, align 4
  %50 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %6, i64 0, i32 1
  %51 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %6, i64 0, i32 7
  %52 = bitcast float* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %52, i8 -1, i64 36, i1 false)
  %53 = getelementptr inbounds %struct.SkScalerContextRec, %struct.SkScalerContextRec* %6, i64 0, i32 11
  %54 = bitcast i32* %51 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %54, i8 -86, i64 12, i1 false)
  store i8 0, i8* %53, align 1
  %55 = bitcast %struct.SkScalerContextEffects* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 0, i64 16, i1 false) #12
  %56 = bitcast %class.SkPaint* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %56) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %56, i8* align 8 bitcast (%class.SkPaint* @__const._ZN15SkScalerContext25MakeRecAndEffectsFromFontERK6SkFontP18SkScalerContextRecP22SkScalerContextEffects.paint to i8*), i64 72, i1 false) #12
  call void @_ZN7SkPaintC1Ev(%class.SkPaint* nonnull %3) #12
  %57 = bitcast %class.SkSurfaceProps* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  call void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps* nonnull %4) #12
  %58 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() #12
  call void @_ZN15SkScalerContext17MakeRecAndEffectsERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP18SkScalerContextRecP22SkScalerContextEffects(%class.SkFont* nonnull dereferenceable(24) %5, %class.SkPaint* nonnull dereferenceable(72) %3, %class.SkSurfaceProps* nonnull dereferenceable(8) %4, i32 0, %class.SkMatrix* dereferenceable(40) %58, %struct.SkScalerContextRec* nonnull %6, %struct.SkScalerContextEffects* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  call void @_ZN7SkPaintD1Ev(%class.SkPaint* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %56) #12
  %59 = bitcast %class.SkAutoDescriptor* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %59) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 128, i1 false)
  call void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor* nonnull %8) #12
  %60 = bitcast %struct.SkScalerContextEffects* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #12
  %61 = call %class.SkDescriptor* @_ZN15SkScalerContext32AutoDescriptorGivenRecAndEffectsERK18SkScalerContextRecRK22SkScalerContextEffectsP16SkAutoDescriptor(%struct.SkScalerContextRec* nonnull dereferenceable(52) %6, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %9, %class.SkAutoDescriptor* nonnull %8) #12
  %62 = getelementptr inbounds %class.SkAutoDescriptor, %class.SkAutoDescriptor* %8, i64 0, i32 0
  %63 = load %class.SkDescriptor*, %class.SkDescriptor** %62, align 8
  %64 = bitcast %class.SkTypeface* %0 to %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)***
  %65 = load %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)**, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*** %64, align 8
  %66 = getelementptr inbounds %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)** %65, i64 5
  %67 = load %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)*, %class.SkScalerContext* (%class.SkTypeface*, %struct.SkScalerContextEffects*, %class.SkDescriptor*)** %66, align 8
  %68 = call %class.SkScalerContext* %67(%class.SkTypeface* %0, %struct.SkScalerContextEffects* nonnull dereferenceable(16) %9, %class.SkDescriptor* %63) #12
  %69 = bitcast %struct.SkFontMetrics* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %69) #12
  %70 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %10, i64 0, i32 0
  store i32 -1431655766, i32* %70, align 4
  %71 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %10, i64 0, i32 1
  %72 = bitcast float* %71 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %72, i8 -1, i64 60, i1 false)
  call void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext* %68, %struct.SkFontMetrics* nonnull %10) #12
  %73 = load i32, i32* %70, align 4
  %74 = and i32 %73, 16
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %47
  %77 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %10, i64 0, i32 9
  %78 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %10, i64 0, i32 8
  %79 = getelementptr inbounds %struct.SkFontMetrics, %struct.SkFontMetrics* %10, i64 0, i32 4
  %80 = load float, float* %78, align 4
  %81 = load float, float* %71, align 4
  %82 = load float, float* %77, align 4
  %83 = load float, float* %79, align 4
  %84 = insertelement <4 x float> undef, float %80, i32 0
  %85 = insertelement <4 x float> %84, float %81, i32 1
  %86 = insertelement <4 x float> %85, float %82, i32 2
  %87 = insertelement <4 x float> %86, float %83, i32 3
  %88 = fmul <4 x float> %87, <float 0x3F40000000000000, float 0x3F40000000000000, float 0x3F40000000000000, float 0x3F40000000000000>
  %89 = bitcast %struct.SkRect* %1 to <4 x float>*
  store <4 x float> %88, <4 x float>* %89, align 4
  br label %90

90:                                               ; preds = %47, %76
  %91 = phi i1 [ true, %76 ], [ false, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %69) #12
  %92 = icmp eq %class.SkScalerContext* %68, null
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = bitcast %class.SkScalerContext* %68 to void (%class.SkScalerContext*)***
  %95 = load void (%class.SkScalerContext*)**, void (%class.SkScalerContext*)*** %94, align 8
  %96 = getelementptr inbounds void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %95, i64 1
  %97 = load void (%class.SkScalerContext*)*, void (%class.SkScalerContext*)** %96, align 8
  call void %97(%class.SkScalerContext* nonnull %68) #12
  br label %98

98:                                               ; preds = %90, %93
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #12
  call void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #12
  call void @llvm.lifetime.end.p0i8(i64 52, i8* nonnull %48) #12
  %99 = load %class.SkTypeface*, %class.SkTypeface** %12, align 8
  %100 = icmp eq %class.SkTypeface* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %99, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = atomicrmw add i32* %102, i32 -1 acq_rel
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %105, label %111

105:                                              ; preds = %101
  %106 = bitcast %class.SkTypeface* %99 to %class.SkRefCntBase*
  %107 = bitcast %class.SkTypeface* %99 to void (%class.SkRefCntBase*)***
  %108 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %108, i64 2
  %110 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %109, align 8
  call void %110(%class.SkRefCntBase* nonnull %106) #12
  br label %111

111:                                              ; preds = %98, %101, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #12
  ret i1 %91
}

declare void @_ZN6SkFontC1Ev(%class.SkFont*) unnamed_addr #1

declare void @_ZN6SkFont7setSizeEf(%class.SkFont*, float) local_unnamed_addr #1

declare void @_ZN6SkFont16setLinearMetricsEb(%class.SkFont*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN16SkAutoDescriptorC1Ev(%class.SkAutoDescriptor*) unnamed_addr #1

declare %class.SkDescriptor* @_ZN15SkScalerContext32AutoDescriptorGivenRecAndEffectsERK18SkScalerContextRecRK22SkScalerContextEffectsP16SkAutoDescriptor(%struct.SkScalerContextRec* dereferenceable(52), %struct.SkScalerContextEffects* dereferenceable(16), %class.SkAutoDescriptor*) local_unnamed_addr #1

declare void @_ZN15SkScalerContext14getFontMetricsEP13SkFontMetrics(%class.SkScalerContext*, %struct.SkFontMetrics*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN16SkAutoDescriptorD1Ev(%class.SkAutoDescriptor*) unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.SkAdvancedTypefaceMetrics* @_ZNK10SkTypeface20onGetAdvancedMetricsEv(%class.SkTypeface* nocapture readnone) unnamed_addr #5 align 2 {
  ret %struct.SkAdvancedTypefaceMetrics* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt16internal_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkWeakRefCnt*)***
  %3 = load void (%class.SkWeakRefCnt*)**, void (%class.SkWeakRefCnt*)*** %2, align 8
  %4 = getelementptr inbounds void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %3, i64 3
  %5 = load void (%class.SkWeakRefCnt*)*, void (%class.SkWeakRefCnt*)** %4, align 8
  tail call void %5(%class.SkWeakRefCnt* %0) #12
  %6 = getelementptr inbounds %class.SkWeakRefCnt, %class.SkWeakRefCnt* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 -1 acq_rel
  %8 = icmp ne i32 %7, 1
  %9 = icmp eq %class.SkWeakRefCnt* %0, null
  %10 = or i1 %9, %8
  br i1 %10, label %17, label %11

11:                                               ; preds = %1
  %12 = bitcast %class.SkWeakRefCnt* %0 to %class.SkRefCntBase*
  %13 = bitcast %class.SkWeakRefCnt* %0 to void (%class.SkRefCntBase*)***
  %14 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %14, i64 1
  %16 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %15, align 8
  tail call void %16(%class.SkRefCntBase* nonnull %12) #12
  br label %17

17:                                               ; preds = %1, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkWeakRefCnt12weak_disposeEv(%class.SkWeakRefCnt*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK10SkTypeface14onGetCTFontRefEv(%class.SkTypeface*) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #7

declare void @_ZN7SkPaintC1Ev(%class.SkPaint*) unnamed_addr #1

declare void @_ZN15SkScalerContext17MakeRecAndEffectsERK6SkFontRK7SkPaintRK14SkSurfaceProps20SkScalerContextFlagsRK8SkMatrixP18SkScalerContextRecP22SkScalerContextEffects(%class.SkFont* dereferenceable(24), %class.SkPaint* dereferenceable(72), %class.SkSurfaceProps* dereferenceable(8), i32, %class.SkMatrix* dereferenceable(40), %struct.SkScalerContextRec*, %struct.SkScalerContextEffects*) local_unnamed_addr #1

declare void @_ZN14SkSurfacePropsC1Ev(%class.SkSurfaceProps*) unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix1IEv() local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7SkPaintD1Ev(%class.SkPaint*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDataD1Ev(%class.SkData*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN6SkDatadlEPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN10SkTypefaceD2Ev(%class.SkTypeface* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115SkEmptyTypefaceD0Ev(%"class.(anonymous namespace)::SkEmptyTypeface"*) unnamed_addr #10 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkEmptyTypeface"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface11onMakeCloneERK15SkFontArguments(%class.sk_sp* noalias nocapture sret, %"class.(anonymous namespace)::SkEmptyTypeface"*, %struct.SkFontArguments* nocapture readnone dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.(anonymous namespace)::SkEmptyTypeface"* %1, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.(anonymous namespace)::SkEmptyTypeface", %"class.(anonymous namespace)::SkEmptyTypeface"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic, !noalias !16
  br label %8

8:                                                ; preds = %5, %3
  %9 = ptrtoint %"class.(anonymous namespace)::SkEmptyTypeface"* %1 to i64
  %10 = bitcast %class.sk_sp* %0 to i64*
  store i64 %9, i64* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal %class.SkScalerContext* @_ZNK12_GLOBAL__N_115SkEmptyTypeface21onCreateScalerContextERK22SkScalerContextEffectsPK12SkDescriptor(%"class.(anonymous namespace)::SkEmptyTypeface"*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) unnamed_addr #0 align 2 {
  %4 = alloca %class.sk_sp, align 8
  %5 = icmp eq %"class.(anonymous namespace)::SkEmptyTypeface"* %0, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.(anonymous namespace)::SkEmptyTypeface", %"class.(anonymous namespace)::SkEmptyTypeface"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic, !noalias !19
  br label %9

9:                                                ; preds = %3, %6
  %10 = ptrtoint %"class.(anonymous namespace)::SkEmptyTypeface"* %0 to i64
  %11 = bitcast %class.sk_sp* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = call %class.SkScalerContext* @_ZN15SkScalerContext9MakeEmptyE5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.sk_sp* nonnull %4, %struct.SkScalerContextEffects* dereferenceable(16) %1, %class.SkDescriptor* %2) #12
  %13 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %4, i64 0, i32 0
  %14 = load %class.SkTypeface*, %class.SkTypeface** %13, align 8
  %15 = icmp eq %class.SkTypeface* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %class.SkTypeface, %class.SkTypeface* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 -1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %16
  %21 = bitcast %class.SkTypeface* %14 to %class.SkRefCntBase*
  %22 = bitcast %class.SkTypeface* %14 to void (%class.SkRefCntBase*)***
  %23 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %22, align 8
  %24 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, i64 2
  %25 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %24, align 8
  call void %25(%class.SkRefCntBase* nonnull %21) #12
  br label %26

26:                                               ; preds = %20, %16, %9
  ret %class.SkScalerContext* %12
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface11onFilterRecEP18SkScalerContextRec(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture, %struct.SkScalerContextRec* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %struct.SkAdvancedTypefaceMetrics* @_ZNK12_GLOBAL__N_115SkEmptyTypeface20onGetAdvancedMetricsEv(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret %struct.SkAdvancedTypefaceMetrics* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface23getPostScriptGlyphNamesEP8SkString(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture, %class.SkString* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface20getGlyphToUnicodeMapEPi(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture, i32* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %class.SkStreamAsset* @_ZNK12_GLOBAL__N_115SkEmptyTypeface12onOpenStreamEPi(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret %class.SkStreamAsset* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_115SkEmptyTypeface28onGetVariationDesignPositionEPN15SkFontArguments17VariationPosition10CoordinateEi(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, %"struct.SkFontArguments::VariationPosition::Coordinate"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_115SkEmptyTypeface30onGetVariationDesignParametersEPN16SkFontParameters9Variation4AxisEi(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, %"struct.SkFontParameters::Variation::Axis"* nocapture readnone, i32) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface19onGetFontDescriptorEP16SkFontDescriptorPb(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture, %class.SkFontDescriptor* nocapture, i8* nocapture) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface15onCharsToGlyphsEPKiiPt(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, i32* nocapture readnone, i32, i16* nocapture) unnamed_addr #0 align 2 {
  %5 = icmp eq i32 %2, 0
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = sext i32 %2 to i64
  %8 = shl nsw i64 %7, 1
  %9 = bitcast i16* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 0, i64 %8, i1 false) #12
  br label %10

10:                                               ; preds = %4, %6
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_115SkEmptyTypeface13onCountGlyphsEv(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_115SkEmptyTypeface9onGetUPEMEv(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK12_GLOBAL__N_115SkEmptyTypeface15onGetFamilyNameEP8SkString(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, %class.SkString*) unnamed_addr #0 align 2 {
  tail call void @_ZN8SkString5resetEv(%class.SkString* %1) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZNK12_GLOBAL__N_115SkEmptyTypeface19onGetPostScriptNameEP8SkString(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, %class.SkString* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nofree nounwind ssp uwtable
define internal noalias nonnull %"class.SkTypeface::LocalizedStrings"* @_ZNK12_GLOBAL__N_115SkEmptyTypeface26onCreateFamilyNameIteratorEv(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone) unnamed_addr #11 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #14
  %3 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStringsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i8* %2 to %"class.SkTypeface::LocalizedStrings"*
  ret %"class.SkTypeface::LocalizedStrings"* %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZNK12_GLOBAL__N_115SkEmptyTypeface14onGetTableTagsEPj(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, i32* nocapture readnone) unnamed_addr #5 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i64 @_ZNK12_GLOBAL__N_115SkEmptyTypeface14onGetTableDataEjmmPv(%"class.(anonymous namespace)::SkEmptyTypeface"* nocapture readnone, i32, i64, i64, i8* nocapture readnone) unnamed_addr #5 align 2 {
  ret i64 0
}

declare %class.SkScalerContext* @_ZN15SkScalerContext9MakeEmptyE5sk_spI10SkTypefaceERK22SkScalerContextEffectsPK12SkDescriptor(%class.sk_sp*, %struct.SkScalerContextEffects* dereferenceable(16), %class.SkDescriptor*) local_unnamed_addr #1

declare void @_ZN8SkString5resetEv(%class.SkString*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN10SkTypeface16LocalizedStringsD2Ev(%"class.SkTypeface::LocalizedStrings"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStringsD0Ev(%"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings"*) unnamed_addr #10 align 2 {
  %2 = bitcast %"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #14
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN12_GLOBAL__N_115SkEmptyTypeface21EmptyLocalizedStrings4nextEPN10SkTypeface15LocalizedStringE(%"class.(anonymous namespace)::SkEmptyTypeface::EmptyLocalizedStrings"* nocapture readnone, %"struct.SkTypeface::LocalizedString"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN12_GLOBAL__N_115SkEmptyTypeface4MakeEv: argument 0"}
!5 = distinct !{!5, !"_ZN12_GLOBAL__N_115SkEmptyTypeface4MakeEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_: argument 0"}
!8 = distinct !{!8, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_: argument 0"}
!11 = distinct !{!11, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_"}
!12 = !{i8 0, i8 2}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_: argument 0"}
!15 = distinct !{!15, !"_Z9sk_ref_spI10SkTypefaceE5sk_spIT_EPS2_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_Z9sk_ref_spIN12_GLOBAL__N_115SkEmptyTypefaceEE5sk_spIT_EPKS3_: argument 0"}
!18 = distinct !{!18, !"_Z9sk_ref_spIN12_GLOBAL__N_115SkEmptyTypefaceEE5sk_spIT_EPKS3_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_Z9sk_ref_spIN12_GLOBAL__N_115SkEmptyTypefaceEE5sk_spIT_EPS3_: argument 0"}
!21 = distinct !{!21, !"_Z9sk_ref_spIN12_GLOBAL__N_115SkEmptyTypefaceEE5sk_spIT_EPS3_"}
