; ModuleID = '../../services/service_manager/public/cpp/identity_mojom_traits.cc'
source_filename = "../../services/service_manager/public/cpp/identity_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.service_manager::mojom::internal::Identity_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.0" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.3", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.5" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.14, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.16", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.13", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.13" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.14 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.15" }>
%"class.base::RefCountedThreadSafe.15" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl.19" }
%"struct.std::__1::__cxx_atomic_impl.19" = type { %"struct.std::__1::__cxx_atomic_base_impl.20" }
%"struct.std::__1::__cxx_atomic_base_impl.20" = type { i32 }
%"class.service_manager::Identity" = type { %"class.std::__1::basic_string", %"class.base::Token", %"class.base::Token", %"class.base::Token" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo_base::mojom::internal::Token_Data" = type { %"struct.mojo::internal::StructHeader", i64, i64 }

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN15service_manager5mojom16IdentityDataViewENS1_8IdentityEE4ReadES3_PS4_(%"class.service_manager::mojom::internal::Identity_Data"*, %"class.mojo::Message"*, %"class.service_manager::Identity"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::Token", align 8
  %6 = alloca %"class.base::Token", align 8
  %7 = alloca %"class.base::Token", align 8
  %8 = alloca %"class.service_manager::Identity", align 8
  %9 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #6
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #6
  %12 = getelementptr inbounds %"class.service_manager::mojom::internal::Identity_Data", %"class.service_manager::mojom::internal::Identity_Data"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %12, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  %16 = bitcast %"struct.mojo::internal::Pointer"* %12 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %14
  br i1 %15, label %50, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds i8, i8* %17, i64 8
  %20 = getelementptr inbounds i8, i8* %17, i64 4
  %21 = bitcast i8* %20 to i32*
  %22 = load i32, i32* %21, align 1
  %23 = zext i32 %22 to i64
  %24 = tail call i1 @llvm.is.constant.i64(i64 %23) #6
  %25 = icmp ult i32 %22, 23
  %26 = and i1 %25, %24
  br i1 %26, label %27, label %35

27:                                               ; preds = %18
  %28 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = trunc i32 %22 to i8
  store i8 %30, i8* %29, align 1
  %31 = icmp eq i32 %22, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 1 %19, i64 %23, i1 false) #6
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds i8, i8* %9, i64 %23
  store i8 0, i8* %34, align 1
  br label %38

35:                                               ; preds = %18
  %36 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* nonnull %4, i8* %19, i64 %23) #6
  %37 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %38

38:                                               ; preds = %35, %33
  %39 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %37, %35 ], [ %28, %33 ]
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i8*, i8** %10, align 8
  %44 = select i1 %42, i8* %43, i8* %9
  %45 = load i64, i64* %11, align 8
  %46 = zext i8 %41 to i64
  %47 = select i1 %42, i64 %45, i64 %46
  %48 = call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %44, i64 %47) #6
  br i1 %48, label %50, label %49

49:                                               ; preds = %38
  call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #6
  br label %50

50:                                               ; preds = %49, %38, %3
  %51 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = load i64, i64* %11, align 8
  %56 = zext i8 %53 to i64
  %57 = select i1 %54, i64 %55, i64 %56
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %122, label %59

59:                                               ; preds = %50
  %60 = bitcast %"class.base::Token"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %60) #6
  %61 = getelementptr inbounds %"class.base::Token", %"class.base::Token"* %5, i64 0, i32 0
  %62 = getelementptr inbounds %"class.base::Token", %"class.base::Token"* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 0, i64 16, i1 false) #6
  %63 = getelementptr inbounds %"class.service_manager::mojom::internal::Identity_Data", %"class.service_manager::mojom::internal::Identity_Data"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %63, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %59
  %68 = bitcast %"struct.mojo::internal::Pointer.0"* %63 to i8*
  %69 = getelementptr inbounds i8, i8* %68, i64 %65
  %70 = bitcast i8* %69 to %"class.mojo_base::mojom::internal::Token_Data"*
  %71 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom13TokenDataViewEN4base5TokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Token_Data"* nonnull %70, %"class.base::Token"* nonnull %5) #6
  br i1 %71, label %72, label %119

72:                                               ; preds = %67
  %73 = load i64, i64* %61, align 8
  %74 = load i64, i64* %62, align 8
  br label %75

75:                                               ; preds = %72, %59
  %76 = phi i64 [ %74, %72 ], [ 0, %59 ]
  %77 = phi i64 [ %73, %72 ], [ 0, %59 ]
  %78 = or i64 %76, %77
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %119, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.base::Token"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 0, i64 16, i1 false) #6
  %82 = getelementptr inbounds %"class.service_manager::mojom::internal::Identity_Data", %"class.service_manager::mojom::internal::Identity_Data"* %0, i64 0, i32 3
  %83 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %82, i64 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %91, label %86

86:                                               ; preds = %80
  %87 = bitcast %"struct.mojo::internal::Pointer.0"* %82 to i8*
  %88 = getelementptr inbounds i8, i8* %87, i64 %84
  %89 = bitcast i8* %88 to %"class.mojo_base::mojom::internal::Token_Data"*
  %90 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom13TokenDataViewEN4base5TokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Token_Data"* nonnull %89, %"class.base::Token"* nonnull %6) #6
  br i1 %90, label %91, label %117

91:                                               ; preds = %80, %86
  %92 = bitcast %"class.base::Token"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #6
  %93 = getelementptr inbounds %"class.base::Token", %"class.base::Token"* %7, i64 0, i32 0
  %94 = getelementptr inbounds %"class.base::Token", %"class.base::Token"* %7, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 16, i1 false) #6
  %95 = getelementptr inbounds %"class.service_manager::mojom::internal::Identity_Data", %"class.service_manager::mojom::internal::Identity_Data"* %0, i64 0, i32 4
  %96 = getelementptr inbounds %"struct.mojo::internal::Pointer.0", %"struct.mojo::internal::Pointer.0"* %95, i64 0, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %107, label %99

99:                                               ; preds = %91
  %100 = bitcast %"struct.mojo::internal::Pointer.0"* %95 to i8*
  %101 = getelementptr inbounds i8, i8* %100, i64 %97
  %102 = bitcast i8* %101 to %"class.mojo_base::mojom::internal::Token_Data"*
  %103 = call zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom13TokenDataViewEN4base5TokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Token_Data"* nonnull %102, %"class.base::Token"* nonnull %7) #6
  br i1 %103, label %104, label %115

104:                                              ; preds = %99
  %105 = load i64, i64* %93, align 8
  %106 = load i64, i64* %94, align 8
  br label %107

107:                                              ; preds = %104, %91
  %108 = phi i64 [ %106, %104 ], [ 0, %91 ]
  %109 = phi i64 [ %105, %104 ], [ 0, %91 ]
  %110 = or i64 %108, %109
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = bitcast %"class.service_manager::Identity"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %113) #6
  call void @_ZN15service_manager8IdentityC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base5TokenESD_SD_(%"class.service_manager::Identity"* nonnull %8, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.base::Token"* nonnull dereferenceable(16) %5, %"class.base::Token"* nonnull dereferenceable(16) %6, %"class.base::Token"* nonnull dereferenceable(16) %7) #6
  %114 = call dereferenceable(72) %"class.service_manager::Identity"* @_ZN15service_manager8IdentityaSERKS0_(%"class.service_manager::Identity"* %2, %"class.service_manager::Identity"* nonnull dereferenceable(72) %8) #6
  call void @_ZN15service_manager8IdentityD1Ev(%"class.service_manager::Identity"* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %113) #6
  br label %115

115:                                              ; preds = %107, %99, %112
  %116 = phi i1 [ true, %112 ], [ false, %99 ], [ false, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #6
  br label %117

117:                                              ; preds = %86, %115
  %118 = phi i1 [ %116, %115 ], [ false, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #6
  br label %119

119:                                              ; preds = %75, %67, %117
  %120 = phi i1 [ %118, %117 ], [ false, %67 ], [ false, %75 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %60) #6
  %121 = load i8, i8* %52, align 1
  br label %122

122:                                              ; preds = %50, %119
  %123 = phi i8 [ %121, %119 ], [ %53, %50 ]
  %124 = phi i1 [ %120, %119 ], [ false, %50 ]
  %125 = icmp slt i8 %123, 0
  br i1 %125, label %126, label %128

126:                                              ; preds = %122
  %127 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %127) #7
  br label %128

128:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #6
  ret i1 %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN15service_manager8IdentityC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKN4base5TokenESD_SD_(%"class.service_manager::Identity"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.base::Token"* dereferenceable(16), %"class.base::Token"* dereferenceable(16), %"class.base::Token"* dereferenceable(16)) unnamed_addr #2

declare dereferenceable(72) %"class.service_manager::Identity"* @_ZN15service_manager8IdentityaSERKS0_(%"class.service_manager::Identity"*, %"class.service_manager::Identity"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15service_manager8IdentityD1Ev(%"class.service_manager::Identity"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #5

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StructTraitsIN9mojo_base5mojom13TokenDataViewEN4base5TokenEE4ReadES3_PS5_(%"class.mojo_base::mojom::internal::Token_Data"*, %"class.base::Token"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
