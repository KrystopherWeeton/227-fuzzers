; ModuleID = '../../third_party/blink/renderer/core/layout/scroll_anchor.cc'
source_filename = "../../third_party/blink/renderer/core/layout/scroll_anchor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::CustomCountHistogram>::InstanceStorage" = type { [8 x i8] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1692", [4 x i8] }>
%"class.WTF::RefCounted.1692" = type { %"class.base::RefCounted.1693" }
%"class.base::RefCounted.1693" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1685", i64 }
%"class.std::__1::vector.1685" = type { %"class.std::__1::__vector_base.1686" }
%"class.std::__1::__vector_base.1686" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1687" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1687" = type { %"struct.std::__1::__compressed_pair_elem.1688" }
%"struct.std::__1::__compressed_pair_elem.1688" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2003 }
%class.scoped_refptr.2003 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2004", %"class.WTF::Vector.630", %"class.WTF::Vector.2006", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2004" = type { %"class.base::RefCounted.2005" }
%"class.base::RefCounted.2005" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008" }
%"class.WTF::VectorBufferBase.2008" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2009 }
%union.anon.2009 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1473", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1481", i8, i32, %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::Member.1487", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1489", %"class.WTF::HashMap.1491", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.1502", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1504", i8, i32, %"class.blink::Member.1511", %"class.blink::Member.1513", i32, %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.blink::Member.1519", %"class.std::__1::unique_ptr.1521", i64, %"class.std::__1::unique_ptr.1527", i32, i32, %"class.blink::Member.1538", %"class.blink::Member.1540", %"class.blink::Member.1542", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1544", %"class.WTF::Vector.1546", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1551", %"class.blink::Member.1558", %"class.std::__1::unique_ptr.1560", %"class.blink::Member.1566", i8, i8, %"class.WTF::String", %"class.blink::Member.1568", i8, [7 x i8], %"class.blink::HeapHashMap.1570", %"class.blink::HeapObserverSet", %"class.blink::Member.1584", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1586", i32, i8, i8, %"class.blink::WeakMember.1588", %"class.blink::Member.1589" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1613", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1654", i32, i8, [3 x i8], %"class.blink::HeapVector.1656", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1664", %"class.blink::Member.1666", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1675", %"class.blink::Member.1681", %"class.blink::Member.1683", i8, [7 x i8] }>
%"class.blink::Supplementable.1613" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1614" }
%"class.blink::HeapHashMap.1614" = type { %"class.WTF::HashMap.1617" }
%"class.WTF::HashMap.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"struct.WTF::KeyValuePair.1620"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1620" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1629" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1621" }
%"class.blink::HeapObserverSet.1621" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1622" }
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::WeakMember.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1628" = type opaque
%"class.blink::Supplementable.1629" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1630" }
%"class.blink::HeapHashMap.1630" = type { %"class.WTF::HashMap.1633" }
%"class.WTF::HashMap.1633" = type { %"class.WTF::HashTable.1634" }
%"class.WTF::HashTable.1634" = type <{ %"struct.WTF::KeyValuePair.1636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1636" = type { i8*, %"class.blink::Member.1989" }
%"class.blink::Member.1989" = type { %"class.blink::MemberBase.1990" }
%"class.blink::MemberBase.1990" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1991" }
%"class.blink::Member.1991" = type { %"class.blink::MemberBase.1992" }
%"class.blink::MemberBase.1992" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1637, %"class.std::__1::unique_ptr.1638", %"class.std::__1::unique_ptr.1638", %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1644", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1650", i32, i32 }
%class.scoped_refptr.1637 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr.1638" = type { %"class.std::__1::__compressed_pair.1639" }
%"class.std::__1::__compressed_pair.1639" = type { %"struct.std::__1::__compressed_pair_elem.1640" }
%"struct.std::__1::__compressed_pair_elem.1640" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1650" = type { %"class.WTF::HashTable.1651" }
%"class.WTF::HashTable.1651" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1654" = type { %"class.blink::MemberBase.1655" }
%"class.blink::MemberBase.1655" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1656" = type { %"class.WTF::Vector.1659" }
%"class.WTF::Vector.1659" = type { %"class.WTF::VectorBuffer.1660" }
%"class.WTF::VectorBuffer.1660" = type { %"class.WTF::VectorBufferBase.1661" }
%"class.WTF::VectorBufferBase.1661" = type { %"class.blink::Member.1662"*, i32, i32 }
%"class.blink::Member.1662" = type opaque
%"class.blink::Member.1664" = type { %"class.blink::MemberBase.1665" }
%"class.blink::MemberBase.1665" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1666" = type { %"class.blink::MemberBase.1667" }
%"class.blink::MemberBase.1667" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1668", i32, i32 }
%"class.blink::HeapHashMap.1668" = type { %"class.WTF::HashMap.1671" }
%"class.WTF::HashMap.1671" = type { %"class.WTF::HashTable.1672" }
%"class.WTF::HashTable.1672" = type <{ %"struct.WTF::KeyValuePair.1674"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1674" = type opaque
%"class.std::__1::unique_ptr.1675" = type { %"class.std::__1::__compressed_pair.1676" }
%"class.std::__1::__compressed_pair.1676" = type { %"struct.std::__1::__compressed_pair_elem.1677" }
%"struct.std::__1::__compressed_pair_elem.1677" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1681" = type { %"class.blink::MemberBase.1682" }
%"class.blink::MemberBase.1682" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1683" = type { %"class.blink::MemberBase.1684" }
%"class.blink::MemberBase.1684" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1604", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1604" = type { %"class.WTF::Vector.1607" }
%"class.WTF::Vector.1607" = type { %"class.WTF::VectorBuffer.1608" }
%"class.WTF::VectorBuffer.1608" = type { %"class.WTF::VectorBufferBase.1609" }
%"class.WTF::VectorBufferBase.1609" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2017 }
%class.scoped_refptr.2017 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.2027" }
%"class.blink::Member.2027" = type { %"class.blink::MemberBase.2028" }
%"class.blink::MemberBase.2028" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.2023" }
%"class.blink::MemberBase.2023" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.2024" }
%"class.blink::MemberBase.2024" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.2018", %"class.WTF::Vector.2018" }
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020" }
%"class.WTF::VectorBufferBase.2020" = type { %class.scoped_refptr.2017*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type { %"class.blink::Document"*, %"class.blink::HeapHashMap.1471"*, %"class.blink::HeapHashMap.1472"* }
%"class.blink::HeapHashMap.1471" = type opaque
%"class.blink::HeapHashMap.1472" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1473" = type { %"class.WTF::Vector.1476" }
%"class.WTF::Vector.1476" = type { %"class.WTF::VectorBuffer.1477" }
%"class.WTF::VectorBuffer.1477" = type { %"class.WTF::VectorBufferBase.1478" }
%"class.WTF::VectorBufferBase.1478" = type { %"class.blink::Member.1479"*, i32, i32 }
%"class.blink::Member.1479" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1489" = type { %"class.blink::MemberBase.1490" }
%"class.blink::MemberBase.1490" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1491" = type { %"class.WTF::HashTable.1492" }
%"class.WTF::HashTable.1492" = type <{ %"struct.WTF::KeyValuePair.1495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1495" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1502" = type { %"class.blink::MemberBase.1503" }
%"class.blink::MemberBase.1503" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1504" = type { %"class.WTF::HashSet.1507" }
%"class.WTF::HashSet.1507" = type { %"class.WTF::HashTable.1508" }
%"class.WTF::HashTable.1508" = type <{ %"class.blink::Member.1510"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1510" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1519" = type { %"class.blink::MemberBase.1520" }
%"class.blink::MemberBase.1520" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1521" = type { %"class.std::__1::__compressed_pair.1522" }
%"class.std::__1::__compressed_pair.1522" = type { %"struct.std::__1::__compressed_pair_elem.1523" }
%"struct.std::__1::__compressed_pair_elem.1523" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1527" = type { %"class.std::__1::__compressed_pair.1528" }
%"class.std::__1::__compressed_pair.1528" = type { %"struct.std::__1::__compressed_pair_elem.1529" }
%"struct.std::__1::__compressed_pair_elem.1529" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", %"class.WTF::HashMap.1530", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1530" = type { %"class.WTF::HashTable.1531" }
%"class.WTF::HashTable.1531" = type <{ %"struct.WTF::KeyValuePair.1534"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1534" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1544" = type { %"class.blink::MemberBase.1545" }
%"class.blink::MemberBase.1545" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1546" = type { %"class.WTF::VectorBuffer.1547" }
%"class.WTF::VectorBuffer.1547" = type { %"class.WTF::VectorBufferBase.1548" }
%"class.WTF::VectorBufferBase.1548" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1551" = type { %"class.WTF::HashMap.1554" }
%"class.WTF::HashMap.1554" = type { %"class.WTF::HashTable.1555" }
%"class.WTF::HashTable.1555" = type <{ %"struct.WTF::KeyValuePair.1557"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1557" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1560" = type { %"class.std::__1::__compressed_pair.1561" }
%"class.std::__1::__compressed_pair.1561" = type { %"struct.std::__1::__compressed_pair_elem.1562" }
%"struct.std::__1::__compressed_pair_elem.1562" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1568" = type { %"class.blink::MemberBase.1569" }
%"class.blink::MemberBase.1569" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1570" = type { %"class.WTF::HashMap.1573" }
%"class.WTF::HashMap.1573" = type { %"class.WTF::HashTable.1574" }
%"class.WTF::HashTable.1574" = type <{ %"struct.WTF::KeyValuePair.1576"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1576" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1577" }
%"class.blink::HeapHashSet.1577" = type { %"class.WTF::HashSet.1580" }
%"class.WTF::HashSet.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"class.blink::WeakMember.1583"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1583" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1586" = type { %"class.blink::MemberBase.1587" }
%"class.blink::MemberBase.1587" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1593", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1600", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1593" = type { %"class.WTF::HashSet.1596" }
%"class.WTF::HashSet.1596" = type { %"class.WTF::HashTable.1597" }
%"class.WTF::HashTable.1597" = type <{ %"class.blink::Member.1599"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1599" = type opaque
%"class.blink::HeapTaskRunnerTimer.1600" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1601", { i64, i64 } }
%"class.blink::WeakMember.1601" = type { %"class.blink::MemberBase.1587" }
%"class.blink::WeakMember.1588" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1589" = type { %"class.blink::MemberBase.1590" }
%"class.blink::MemberBase.1590" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1993" }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995" }
%"class.WTF::VectorBufferBase.1995" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1998", %"class.absl::optional.1998", %"class.absl::optional.1998" }
%"class.absl::optional.1998" = type { %"class.absl::optional_internal::optional_data.1999" }
%"class.absl::optional_internal::optional_data.1999" = type { %"class.absl::optional_internal::optional_data_base.2000" }
%"class.absl::optional_internal::optional_data_base.2000" = type { %"class.absl::optional_internal::optional_data_dtor_base.2001" }
%"class.absl::optional_internal::optional_data_dtor_base.2001" = type { i8, %union.anon.2002 }
%union.anon.2002 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.2013" }
%"class.WTF::VectorBuffer.2013" = type { %"class.WTF::VectorBufferBase.2014", [32 x i8] }
%"class.WTF::VectorBufferBase.2014" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1714, %"class.WTF::Vector.1715", %"class.std::__1::unique_ptr.1720", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1741, %"class.blink::Persistent.1742" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1714 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1715" = type { %"class.WTF::VectorBuffer.1716" }
%"class.WTF::VectorBuffer.1716" = type { %"class.WTF::VectorBufferBase.1717", [8 x i8] }
%"class.WTF::VectorBufferBase.1717" = type { %class.scoped_refptr.1714*, i32, i32 }
%"class.std::__1::unique_ptr.1720" = type { %"class.std::__1::__compressed_pair.1721" }
%"class.std::__1::__compressed_pair.1721" = type { %"struct.std::__1::__compressed_pair_elem.1722" }
%"struct.std::__1::__compressed_pair_elem.1722" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1723", %"class.absl::optional.1728", %"class.absl::optional.1733" }
%"class.absl::optional.1723" = type { %"class.absl::optional_internal::optional_data.1724" }
%"class.absl::optional_internal::optional_data.1724" = type { %"class.absl::optional_internal::optional_data_base.1725" }
%"class.absl::optional_internal::optional_data_base.1725" = type { %"class.absl::optional_internal::optional_data_dtor_base.1726" }
%"class.absl::optional_internal::optional_data_dtor_base.1726" = type { i8, %union.anon.1727 }
%union.anon.1727 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1728" = type { %"class.absl::optional_internal::optional_data.1729" }
%"class.absl::optional_internal::optional_data.1729" = type { %"class.absl::optional_internal::optional_data_base.1730" }
%"class.absl::optional_internal::optional_data_base.1730" = type { %"class.absl::optional_internal::optional_data_dtor_base.1731" }
%"class.absl::optional_internal::optional_data_dtor_base.1731" = type { i8, [3 x i8], %union.anon.1732 }
%union.anon.1732 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1733" = type { %"class.absl::optional_internal::optional_data.1734" }
%"class.absl::optional_internal::optional_data.1734" = type { %"class.absl::optional_internal::optional_data_base.1735" }
%"class.absl::optional_internal::optional_data_base.1735" = type { %"class.absl::optional_internal::optional_data_dtor_base.1736" }
%"class.absl::optional_internal::optional_data_dtor_base.1736" = type { i8, %union.anon.1737 }
%union.anon.1737 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1741 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1694", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1694" = type { %"class.std::__1::__compressed_pair.1695" }
%"class.std::__1::__compressed_pair.1695" = type { %"struct.std::__1::__compressed_pair_elem.1696" }
%"struct.std::__1::__compressed_pair_elem.1696" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1697", %"class.absl::optional.1706" }
%"class.absl::optional.1697" = type { %"class.absl::optional_internal::optional_data.1698" }
%"class.absl::optional_internal::optional_data.1698" = type { %"class.absl::optional_internal::optional_data_base.1699" }
%"class.absl::optional_internal::optional_data_base.1699" = type { %"class.absl::optional_internal::optional_data_dtor_base.1700" }
%"class.absl::optional_internal::optional_data_dtor_base.1700" = type { i8, %union.anon.1701 }
%union.anon.1701 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1706" = type { %"class.absl::optional_internal::optional_data.1707" }
%"class.absl::optional_internal::optional_data.1707" = type { %"class.absl::optional_internal::optional_data_base.1708" }
%"class.absl::optional_internal::optional_data_base.1708" = type { %"class.absl::optional_internal::optional_data_dtor_base.1709" }
%"class.absl::optional_internal::optional_data_dtor_base.1709" = type { i8, %union.anon.1710 }
%union.anon.1710 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.1742" = type { %"class.blink::PersistentBase.1743" }
%"class.blink::PersistentBase.1743" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1746", %"struct.blink::PhysicalRect", %"class.blink::Member.1756" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.std::__1::unique_ptr.1746" = type { %"class.std::__1::__compressed_pair.1747" }
%"class.std::__1::__compressed_pair.1747" = type { %"struct.std::__1::__compressed_pair_elem.1748" }
%"struct.std::__1::__compressed_pair_elem.1748" = type { %"class.WTF::HashSet.1749"* }
%"class.WTF::HashSet.1749" = type { %"class.WTF::HashTable.1750" }
%"class.WTF::HashTable.1750" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1756" = type { %"class.blink::MemberBase.1757" }
%"class.blink::MemberBase.1757" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.2029", %"class.std::__1::unique_ptr.2039" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.2029" = type { %"class.blink::PersistentBase.2030" }
%"class.blink::PersistentBase.2030" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.2033", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.2033" = type { %"class.std::__1::__compressed_pair.2034" }
%"class.std::__1::__compressed_pair.2034" = type { %"struct.std::__1::__compressed_pair_elem.2035" }
%"struct.std::__1::__compressed_pair_elem.2035" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type opaque
%"class.std::__1::unique_ptr.2039" = type { %"class.std::__1::__compressed_pair.2040" }
%"class.std::__1::__compressed_pair.2040" = type { %"struct.std::__1::__compressed_pair_elem.2041" }
%"struct.std::__1::__compressed_pair_elem.2041" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.2042", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.2042" = type { %"class.WTF::HashTable.2045", %"class.WTF::MallocedListHashSetNode.2048"*, %"class.WTF::MallocedListHashSetNode.2048"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.2045" = type <{ %"class.WTF::MallocedListHashSetNode.2048"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode.2048" = type { %"class.std::__1::unique_ptr.2049", %"class.WTF::MallocedListHashSetNode.2048"*, %"class.WTF::MallocedListHashSetNode.2048"* }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2052, %"class.std::__1::unique_ptr.2053", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1694", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2052 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2072", i16, %class.scoped_refptr.2052 }
%"class.WTF::ThreadSafeRefCounted.2072" = type { %"class.base::RefCountedThreadSafe.2073" }
%"class.base::RefCountedThreadSafe.2073" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2053" = type { %"class.std::__1::__compressed_pair.2054" }
%"class.std::__1::__compressed_pair.2054" = type { %"struct.std::__1::__compressed_pair_elem.2055" }
%"struct.std::__1::__compressed_pair_elem.2055" = type { %"class.WTF::Vector.2056"* }
%"class.WTF::Vector.2056" = type { %"class.WTF::VectorBuffer.2057" }
%"class.WTF::VectorBuffer.2057" = type { %"class.WTF::VectorBufferBase.2058" }
%"class.WTF::VectorBufferBase.2058" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator.2067"* }
%"struct.WTF::MallocedListHashSetAllocator.2067" = type { %"class.WTF::MallocedListHashSetNode.2048"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2068, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%class.scoped_refptr.2068 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::LayoutText" = type { %"class.blink::LayoutObject", i16, i32, float, float, float, float, %"class.WTF::String", %"struct.blink::LogicalOffset", %union.anon.2074 }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2074 = type { %"class.blink::InlineTextBoxList" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.2075" }
%"class.blink::InlineBoxList.2075" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.blink::CustomCountHistogram" = type { %"class.base::HistogramBase"* }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2096", %"class.blink::Member.2098", %"class.blink::Member.2100", %"class.blink::Member.2119", %"class.blink::Member.2121" }
%"class.blink::Member.2096" = type { %"class.blink::MemberBase.2097" }
%"class.blink::MemberBase.2097" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.2098" = type { %"class.blink::MemberBase.2099" }
%"class.blink::MemberBase.2099" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2100" = type { %"class.blink::MemberBase.2101" }
%"class.blink::MemberBase.2101" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2104", %"class.blink::HeapHashSet.2113" }
%"class.blink::HeapVector.2104" = type { %"class.WTF::Vector.2107" }
%"class.WTF::Vector.2107" = type { %"class.WTF::VectorBuffer.2108" }
%"class.WTF::VectorBuffer.2108" = type { %"class.WTF::VectorBufferBase.2109" }
%"class.WTF::VectorBufferBase.2109" = type { %"class.blink::Member.2110"*, i32, i32 }
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2113" = type { %"class.WTF::HashSet.2116" }
%"class.WTF::HashSet.2116" = type { %"class.WTF::HashTable.2117" }
%"class.WTF::HashTable.2117" = type <{ %"class.blink::Member.2110"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::HeapHashSet.2123"* }
%"class.blink::HeapHashSet.2123" = type opaque
%"class.WTF::ListHashSet.1760" = type { %"class.WTF::HashTable.1763", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" }
%"class.WTF::HashTable.1763" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.blink::LayoutBox"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [384 x i8] }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1768", %"class.blink::Member.1773", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1775", i8, i32, %"class.blink::Color", %"class.absl::optional.1778", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1783", %"class.blink::Member.1785", %"class.blink::Member.1785", %"class.std::__1::unique_ptr.1788", i32, [4 x i8], %"class.WTF::HashSet.1791", %"class.blink::Member.1798", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1800", %"class.blink::HeapHashSet.1807", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1813", i8, %"class.blink::Member.1819", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1833", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.1847", i8, %"class.std::__1::unique_ptr.1853", %"class.std::__1::unique_ptr.1929", %"class.WTF::Vector.1935", i32, %class.scoped_refptr.1940, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.1941", %"class.blink::Member.1943", %"class.blink::Member.1945", %"class.blink::HeapHashSet.1947", %"class.blink::HeapHashSet.1954", %"class.std::__1::unique_ptr.1961", %"class.std::__1::unique_ptr.1968", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.1768" = type { %"class.WTF::HashTable.1769" }
%"class.WTF::HashTable.1769" = type <{ %class.scoped_refptr.1772*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1772 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1773" = type { %"class.blink::MemberBase.1774" }
%"class.blink::MemberBase.1774" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1775" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1776", { i64, i64 } }
%"class.blink::WeakMember.1776" = type { %"class.blink::MemberBase.1777" }
%"class.blink::MemberBase.1777" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.1778" = type { %"class.absl::optional_internal::optional_data.1779" }
%"class.absl::optional_internal::optional_data.1779" = type { %"class.absl::optional_internal::optional_data_base.1780" }
%"class.absl::optional_internal::optional_data_base.1780" = type { %"class.absl::optional_internal::optional_data_dtor_base.1781" }
%"class.absl::optional_internal::optional_data_dtor_base.1781" = type { i8, %union.anon.1782 }
%union.anon.1782 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1783" = type { %"class.blink::MemberBase.1784" }
%"class.blink::MemberBase.1784" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1785" = type { %"class.blink::MemberBase.1786" }
%"class.blink::MemberBase.1786" = type { %"class.blink::HeapHashSet.1787"* }
%"class.blink::HeapHashSet.1787" = type opaque
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"class.WTF::HashSet.1791"* }
%"class.WTF::HashSet.1791" = type { %"class.WTF::HashTable.1792" }
%"class.WTF::HashTable.1792" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1800" = type { %"class.WTF::HashSet.1803" }
%"class.WTF::HashSet.1803" = type { %"class.WTF::HashTable.1804" }
%"class.WTF::HashTable.1804" = type <{ %"class.blink::Member.1806"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1806" = type opaque
%"class.blink::HeapHashSet.1807" = type { %"class.WTF::HashSet.1810" }
%"class.WTF::HashSet.1810" = type { %"class.WTF::HashTable.1811" }
%"class.WTF::HashTable.1811" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1819" = type { %"class.blink::MemberBase.1820" }
%"class.blink::MemberBase.1820" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type <{ %"class.blink::ScrollableArea", %"class.blink::Member.784", %"class.blink::Member.784", %"class.absl::optional.814", i8, [7 x i8] }>
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1825", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1825" = type { %"class.WTF::HashTable.1826" }
%"class.WTF::HashTable.1826" = type <{ %"struct.WTF::KeyValuePair.1828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1828" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1829", i32, i32 }
%"class.WTF::Vector.1829" = type { %"class.WTF::VectorBuffer.1830" }
%"class.WTF::VectorBuffer.1830" = type { %"class.WTF::VectorBufferBase.1831" }
%"class.WTF::VectorBufferBase.1831" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1833" = type { %"class.WTF::LinkedHashSet.1836" }
%"class.WTF::LinkedHashSet.1836" = type { %"class.WTF::HashMap.1837", %"class.WTF::VectorBackedLinkedList.1841" }
%"class.WTF::HashMap.1837" = type { %"class.WTF::HashTable.1838" }
%"class.WTF::HashTable.1838" = type <{ %"struct.WTF::KeyValuePair.1840"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1840" = type opaque
%"class.WTF::VectorBackedLinkedList.1841" = type { %"class.WTF::Vector.1842", i32, i32 }
%"class.WTF::Vector.1842" = type { %"class.WTF::VectorBuffer.1843" }
%"class.WTF::VectorBuffer.1843" = type { %"class.WTF::VectorBufferBase.1844" }
%"class.WTF::VectorBufferBase.1844" = type { %"class.WTF::VectorBackedLinkedListNode.1845"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.1845" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1847" = type { %"class.std::__1::__compressed_pair.1848" }
%"class.std::__1::__compressed_pair.1848" = type { %"struct.std::__1::__compressed_pair_elem.1849" }
%"struct.std::__1::__compressed_pair_elem.1849" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.1853" = type { %"class.std::__1::__compressed_pair.1854" }
%"class.std::__1::__compressed_pair.1854" = type { %"struct.std::__1::__compressed_pair_elem.1855" }
%"struct.std::__1::__compressed_pair_elem.1855" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.1856, %class.scoped_refptr.1856, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.1906", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.1911", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.1856 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.1857", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.1864" }
%"class.WTF::RefCounted.1857" = type { %"class.base::RefCounted.1858" }
%"class.base::RefCounted.1858" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.1859", i32, [4 x i8] }>
%"class.WTF::Vector.1859" = type { %"class.WTF::VectorBuffer.1860" }
%"class.WTF::VectorBuffer.1860" = type { %"class.WTF::VectorBufferBase.1861" }
%"class.WTF::VectorBufferBase.1861" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.1864" = type { %"class.WTF::VectorBuffer.1865" }
%"class.WTF::VectorBuffer.1865" = type { %"class.WTF::VectorBufferBase.1866" }
%"class.WTF::VectorBufferBase.1866" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.1867", %"class.std::__1::unique_ptr.1878", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1867" = type { %"class.std::__1::__compressed_pair.1868" }
%"class.std::__1::__compressed_pair.1868" = type { %"struct.std::__1::__compressed_pair_elem.1869" }
%"struct.std::__1::__compressed_pair_elem.1869" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.1870", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.1870" = type { %"class.WTF::VectorBuffer.1871" }
%"class.WTF::VectorBuffer.1871" = type { %"class.WTF::VectorBufferBase.1872" }
%"class.WTF::VectorBufferBase.1872" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.1878" = type { %"class.std::__1::__compressed_pair.1879" }
%"class.std::__1::__compressed_pair.1879" = type { %"struct.std::__1::__compressed_pair_elem.1880" }
%"struct.std::__1::__compressed_pair_elem.1880" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.1881", %"class.absl::optional.1881" }
%"class.absl::optional.1881" = type { %"class.absl::optional_internal::optional_data.1882" }
%"class.absl::optional_internal::optional_data.1882" = type { %"class.absl::optional_internal::optional_data_base.1883" }
%"class.absl::optional_internal::optional_data_base.1883" = type { %"class.absl::optional_internal::optional_data_dtor_base.1884" }
%"class.absl::optional_internal::optional_data_dtor_base.1884" = type { i8, [3 x i8], %union.anon.1885 }
%union.anon.1885 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.1864"*, %"class.absl::optional.1891", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.1891" = type { %"class.absl::optional_internal::optional_data.1892" }
%"class.absl::optional_internal::optional_data.1892" = type { %"class.absl::optional_internal::optional_data_base.1893" }
%"class.absl::optional_internal::optional_data_base.1893" = type { %"class.absl::optional_internal::optional_data_dtor_base.1894" }
%"class.absl::optional_internal::optional_data_dtor_base.1894" = type { i8, %union.anon.1895 }
%union.anon.1895 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.1896", %"class.WTF::Vector.1901" }
%"class.WTF::Vector.1896" = type { %"class.WTF::VectorBuffer.1897" }
%"class.WTF::VectorBuffer.1897" = type { %"class.WTF::VectorBufferBase.1898", [128 x i8] }
%"class.WTF::VectorBufferBase.1898" = type { i32*, i32, i32 }
%"class.WTF::Vector.1901" = type { %"class.WTF::VectorBuffer.1902" }
%"class.WTF::VectorBuffer.1902" = type { %"class.WTF::VectorBufferBase.1903", [128 x i8] }
%"class.WTF::VectorBufferBase.1903" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.1911" = type { %"class.WTF::HashTable.1912" }
%"class.WTF::HashTable.1912" = type <{ %"struct.WTF::KeyValuePair.1915"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1915" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.1916", %"class.WTF::Vector.1921" }
%"class.WTF::HashMap.1916" = type { %"class.WTF::HashTable.1917" }
%"class.WTF::HashTable.1917" = type <{ %"struct.WTF::KeyValuePair.1920"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1920" = type opaque
%"class.WTF::Vector.1921" = type { %"class.WTF::VectorBuffer.1922" }
%"class.WTF::VectorBuffer.1922" = type { %"class.WTF::VectorBufferBase.1923" }
%"class.WTF::VectorBufferBase.1923" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.1929" = type { %"class.std::__1::__compressed_pair.1930" }
%"class.std::__1::__compressed_pair.1930" = type { %"struct.std::__1::__compressed_pair_elem.1931" }
%"struct.std::__1::__compressed_pair_elem.1931" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.1935" = type { %"class.WTF::VectorBuffer.1936" }
%"class.WTF::VectorBuffer.1936" = type { %"class.WTF::VectorBufferBase.1937" }
%"class.WTF::VectorBufferBase.1937" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.1940 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.1941" = type { %"class.blink::MemberBase.1942" }
%"class.blink::MemberBase.1942" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.1943" = type { %"class.blink::MemberBase.1944" }
%"class.blink::MemberBase.1944" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.1945" = type { %"class.blink::MemberBase.1946" }
%"class.blink::MemberBase.1946" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.1947" = type { %"class.WTF::HashSet.1950" }
%"class.WTF::HashSet.1950" = type { %"class.WTF::HashTable.1951" }
%"class.WTF::HashTable.1951" = type <{ %"class.blink::WeakMember.1953"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1953" = type opaque
%"class.blink::HeapHashSet.1954" = type { %"class.WTF::HashSet.1957" }
%"class.WTF::HashSet.1957" = type { %"class.WTF::HashTable.1958" }
%"class.WTF::HashTable.1958" = type <{ %"class.blink::WeakMember.1960"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1960" = type opaque
%"class.std::__1::unique_ptr.1961" = type { %"class.std::__1::__compressed_pair.1962" }
%"class.std::__1::__compressed_pair.1962" = type { %"struct.std::__1::__compressed_pair_elem.1963" }
%"struct.std::__1::__compressed_pair_elem.1963" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.1964" }
%"class.base::time_internal::TimeBase.1964" = type { i64 }
%"class.std::__1::unique_ptr.1968" = type { %"class.std::__1::__compressed_pair.1969" }
%"class.std::__1::__compressed_pair.1969" = type { %"struct.std::__1::__compressed_pair_elem.1970" }
%"struct.std::__1::__compressed_pair_elem.1970" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.1971", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.1971" = type { %"class.absl::optional_internal::optional_data.1972" }
%"class.absl::optional_internal::optional_data.1972" = type { %"class.absl::optional_internal::optional_data_base.1973" }
%"class.absl::optional_internal::optional_data_base.1973" = type { %"class.absl::optional_internal::optional_data_dtor_base.1974" }
%"class.absl::optional_internal::optional_data_dtor_base.1974" = type { i8, %union.anon.1975 }
%union.anon.1975 = type { %"class.base::Time" }
%"struct.blink::SerializedAnchor" = type { %"class.WTF::String", %"class.blink::LayoutPoint", i64 }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1983" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1983" = type { %"class.v8::TracedReference.1984" }
%"class.v8::TracedReference.1984" = type { %"class.v8::BasicTracedReference.1985" }
%"class.v8::BasicTracedReference.1985" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector.365" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.2128, i32, i8, i8, [2 x i8] }>
%union.anon.2128 = type { %"class.WTF::Vector.2129" }
%"class.WTF::Vector.2129" = type { %"class.WTF::VectorBuffer.2130" }
%"class.WTF::VectorBuffer.2130" = type { %"class.WTF::VectorBufferBase.2131", [16 x i8] }
%"class.WTF::VectorBufferBase.2131" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend.2148" = type { %"class.WTF::StringAppend.2149", i8* }
%"class.WTF::StringAppend.2149" = type { i8*, %"class.WTF::String" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.354", %"class.WTF::Vector.2154" }
%"class.WTF::Vector.2154" = type { %"class.WTF::VectorBuffer.2155" }
%"class.WTF::VectorBuffer.2155" = type { %"class.WTF::VectorBufferBase.2156", [64 x i8] }
%"class.WTF::VectorBufferBase.2156" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.WTF::StringTypeAdapter" = type { %"class.WTF::StringTypeAdapter.2150" }
%"class.WTF::StringTypeAdapter.2150" = type { %"class.WTF::StringView" }
%"class.WTF::StringTypeAdapter.2152" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.2153" = type { %"class.WTF::StringTypeAdapter.2150" }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringES1_EcvNS_6StringEEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS_12AtomicStringES1_EC2ES1_S1_ = comdat any

$_ZNK3WTF12StringAppendINS_12AtomicStringES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [25 x i8] c"ScrollAnchor::findAnchor\00", align 1
@_ZZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter = internal global i64 0, align 8
@_ZZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter = internal global i64 0, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.1 = private unnamed_addr constant [30 x i8] c"ScrollAnchor::SerializeAnchor\00", align 1
@_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter = internal global i64 0, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c">\00", align 1
@_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [52 x i8] c"Layout.ScrollAnchor.TimeToComputeAnchorNodeSelector\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c"#\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c":nth-child(\00", align 1
@.str.11 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.12 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.13 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.14 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@_ZN5blink10html_names7kIdAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.16 = private unnamed_addr constant [51 x i8] c"Layout.ScrollAnchor.SerializedAnchorSelectorLength\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.17 = private unnamed_addr constant [37 x i8] c"Layout.ScrollAnchor.TimeToFindAnchor\00", align 1
@.str.18 = private unnamed_addr constant [40 x i8] c"Layout.ScrollAnchor.TimeToRestoreAnchor\00", align 1

@_ZN5blink12ScrollAnchorC1Ev = hidden unnamed_addr alias void (%"class.blink::ScrollAnchor"*), void (%"class.blink::ScrollAnchor"*)* @_ZN5blink12ScrollAnchorC2Ev
@_ZN5blink12ScrollAnchorC1EPNS_14ScrollableAreaE = hidden unnamed_addr alias void (%"class.blink::ScrollAnchor"*, %"class.blink::ScrollableArea"*), void (%"class.blink::ScrollAnchor"*, %"class.blink::ScrollableArea"*)* @_ZN5blink12ScrollAnchorC2EPNS_14ScrollableAreaE
@_ZN5blink12ScrollAnchorD1Ev = hidden unnamed_addr alias void (%"class.blink::ScrollAnchor"*), void (%"class.blink::ScrollAnchor"*)* @_ZN5blink12ScrollAnchorD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink12ScrollAnchorC2Ev(%"class.blink::ScrollAnchor"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = bitcast %"class.blink::ScrollAnchor"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 28, i1 false)
  %4 = bitcast %"class.WTF::StringImpl"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 11, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchorC2EPNS_14ScrollableAreaE(%"class.blink::ScrollAnchor"* nocapture, %"class.blink::ScrollableArea"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %5 = bitcast %"class.blink::LayoutObject"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 20, i1 false) #12
  %6 = bitcast %"class.WTF::StringImpl"** %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 11, i1 false) #12
  %7 = ptrtoint %"class.blink::ScrollableArea"* %1 to i64
  %8 = bitcast %"class.blink::ScrollAnchor"* %0 to i64*
  store atomic i64 %7, i64* %8 monotonic, align 8
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %12, align 8
  %13 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %14 = bitcast %"class.WTF::String"* %13 to i64*
  store i64 0, i64* %14, align 8
  br label %42

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::ScrollableArea"* %1 to i8*
  %17 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %16) #12
  %18 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %24 = bitcast %"class.WTF::String"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #12
  br label %39

39:                                               ; preds = %38, %35, %15
  %40 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %19) #12
  br label %42

42:                                               ; preds = %11, %39, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor11SetScrollerEPNS_14ScrollableAreaE(%"class.blink::ScrollAnchor"* nocapture, %"class.blink::ScrollableArea"*) local_unnamed_addr #1 align 2 {
  %3 = ptrtoint %"class.blink::ScrollableArea"* %1 to i64
  %4 = bitcast %"class.blink::ScrollAnchor"* %0 to i64*
  store atomic i64 %3, i64* %4 monotonic, align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::ScrollableArea"* %1 to i8*
  %9 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %8) #12
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %14 = bitcast %"class.WTF::String"* %13 to i64*
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 0, i64* %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #12
  br label %31

31:                                               ; preds = %30, %27, %10
  %32 = icmp eq %"class.blink::LayoutObject"* %12, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %31
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %12) #12
  br label %34

34:                                               ; preds = %31, %33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchorD2Ev(%"class.blink::ScrollAnchor"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor9ClearSelfEv(%"class.blink::ScrollAnchor"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %5 = bitcast %"class.WTF::String"* %4 to i64*
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  store i64 0, i64* %5, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #12
  br label %22

22:                                               ; preds = %21, %18, %1
  %23 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %3) #12
  br label %25

25:                                               ; preds = %22, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK5blink12ScrollAnchor7ExamineEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::LayoutObject::AncestorSkipInfo", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"class.blink::LayoutRect"*
  %6 = alloca { i64, i64 }, align 8
  %7 = bitcast { i64, i64 }* %6 to %"class.blink::LayoutRect"*
  %8 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %10 = bitcast %"class.blink::ScrollableArea"* %9 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %11 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %11, i64 88
  %13 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %12, align 8
  %14 = tail call %"class.blink::LayoutBox"* %13(%"class.blink::ScrollableArea"* %9) #12
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %14, i64 0, i32 0, i32 0
  %16 = icmp eq %"class.blink::LayoutObject"* %15, %1
  br i1 %16, label %133, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %19 = bitcast %"class.blink::ComputedStyle"** %18 to %"class.blink::ComputedStyleBase"**
  %20 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %20, i64 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = and i160 %23, 29710560942849126597578981376
  %25 = icmp eq i160 %24, 0
  br i1 %25, label %133, label %26

26:                                               ; preds = %17
  %27 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %28 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %27, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %28, i64 26
  %30 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %1) #12
  br i1 %31, label %133, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 16777216
  %37 = icmp eq i96 %36, 0
  br i1 %37, label %38, label %133

38:                                               ; preds = %32
  %39 = and i96 %35, 100663296
  %40 = icmp eq i96 %39, 0
  br i1 %40, label %133, label %41

41:                                               ; preds = %38
  %42 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %18, align 8
  %44 = icmp eq %"class.blink::ComputedStyle"* %43, null
  br i1 %44, label %74, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = and i160 %48, 8462480737302404222943232
  %50 = icmp eq i160 %49, 1208925819614629174706176
  br i1 %50, label %133, label %51

51:                                               ; preds = %45
  %52 = icmp eq i160 %49, 4835703278458516698824704
  %53 = and i160 %48, 8462480737302533071962112
  %54 = icmp eq i160 %53, 4835703278458559648497664
  %55 = xor i1 %52, %54
  br i1 %55, label %56, label %74

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 7, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 18, i32 2
  %60 = load i8, i8* %59, align 1
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %133

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 8, i32 2
  %64 = load i8, i8* %63, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %133

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 17, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %133

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 7, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %133

74:                                               ; preds = %70, %51, %41
  %75 = bitcast %"class.blink::LayoutObject::AncestorSkipInfo"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 0
  %77 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 1
  %78 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 2
  %79 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 3
  %80 = bitcast %"class.blink::ScrollableArea"* %42 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false) #12
  %81 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %81, i64 88
  %83 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %82, align 8
  %84 = tail call %"class.blink::LayoutBox"* %83(%"class.blink::ScrollableArea"* %42) #12
  %85 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %84, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %85, %"class.blink::LayoutObject"** %76, align 8
  store i8 0, i8* %77, align 8
  store i8 0, i8* %78, align 1
  store i8 0, i8* %79, align 2
  %86 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject::AncestorSkipInfo"* nonnull %3) #12
  %87 = load i8, i8* %78, align 1, !range !2
  %88 = icmp eq i8 %87, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #12
  br i1 %88, label %89, label %133

89:                                               ; preds = %74
  %90 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #12
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %92 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %93 = call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %1, %"class.blink::ScrollableArea"* %92)
  %94 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %95 = extractvalue { i64, i64 } %93, 0
  store i64 %95, i64* %94, align 8
  %96 = extractvalue { i64, i64 } %93, 1
  store i64 %96, i64* %91, align 8
  %97 = bitcast { i64, i64 }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %97) #12
  %98 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 1
  %99 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %100 = call fastcc { i64, i64 } @_ZN5blinkL14GetVisibleRectEPNS_14ScrollableAreaE(%"class.blink::ScrollableArea"* %99)
  %101 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %6, i64 0, i32 0
  %102 = extractvalue { i64, i64 } %100, 0
  store i64 %102, i64* %101, align 8
  %103 = extractvalue { i64, i64 } %100, 1
  store i64 %103, i64* %98, align 8
  %104 = trunc i64 %96 to i32
  %105 = icmp sgt i32 %104, 0
  %106 = lshr i64 %96, 32
  %107 = trunc i64 %106 to i32
  %108 = icmp sgt i32 %107, 0
  %109 = and i1 %105, %108
  br i1 %109, label %110, label %129

110:                                              ; preds = %89
  %111 = call zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"* nonnull %7, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #12
  br i1 %111, label %112, label %129

112:                                              ; preds = %110
  %113 = call zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"* nonnull %7, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %5) #12
  %114 = select i1 %113, i64 3, i64 1
  %115 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %116 = bitcast %"class.blink::ScrollableArea"* %115 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %117 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %116, align 8
  %118 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %117, i64 88
  %119 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %118, align 8
  %120 = call %"class.blink::LayoutBox"* %119(%"class.blink::ScrollableArea"* %115) #12
  %121 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %120, i64 0, i32 0, i32 0, i32 5, i32 0
  %122 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %122, i64 0, i32 0, i32 9
  %124 = bitcast [20 x i8]* %123 to i160*
  %125 = load i160, i160* %124, align 8
  %126 = and i160 %125, 15211807202738752817960438464512
  %127 = icmp eq i160 %126, 5070602400912917605986812821504
  %128 = zext i1 %127 to i32
  br label %129

129:                                              ; preds = %110, %89, %112
  %130 = phi i64 [ %114, %112 ], [ 0, %89 ], [ 0, %110 ]
  %131 = phi i64 [ 4294967296, %112 ], [ 0, %89 ], [ 0, %110 ]
  %132 = phi i32 [ %128, %112 ], [ 0, %89 ], [ 0, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %97) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #12
  br label %133

133:                                              ; preds = %70, %38, %32, %56, %62, %66, %45, %74, %26, %17, %2, %129
  %134 = phi i64 [ %130, %129 ], [ 2, %2 ], [ 0, %17 ], [ 2, %26 ], [ 2, %32 ], [ 0, %74 ], [ 0, %45 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %56 ], [ 0, %38 ]
  %135 = phi i64 [ %131, %129 ], [ 0, %2 ], [ 0, %17 ], [ 0, %26 ], [ 0, %32 ], [ 0, %74 ], [ 0, %45 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %56 ], [ 0, %38 ]
  %136 = phi i32 [ %132, %129 ], [ 0, %2 ], [ 0, %17 ], [ 0, %26 ], [ 0, %32 ], [ 0, %74 ], [ 0, %45 ], [ 0, %70 ], [ 0, %66 ], [ 0, %62 ], [ 0, %56 ], [ 0, %38 ]
  %137 = and i64 %135, 1095216660480
  %138 = and i64 %134, 4294967295
  %139 = or i64 %137, %138
  %140 = insertvalue { i64, i32 } undef, i64 %139, 0
  %141 = insertvalue { i64, i32 } %140, i32 %136, 1
  ret { i64, i32 } %141
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"*, %"class.blink::ScrollableArea"*) unnamed_addr #3 {
  %3 = alloca %"struct.blink::PhysicalRect", align 8
  %4 = alloca { i64, i64 }, align 8
  %5 = bitcast { i64, i64 }* %4 to %"struct.blink::PhysicalRect"*
  %6 = alloca %"class.blink::FloatQuad", align 4
  %7 = alloca %"class.blink::FloatQuad", align 8
  %8 = bitcast %"struct.blink::PhysicalRect"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #12
  %13 = icmp eq %"class.blink::LayoutObject"* %0, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i96, i96* inttoptr (i64 20 to i96*), align 4
  br label %105

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 67108864
  %21 = icmp eq i96 %20, 0
  %22 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutBox"*
  br i1 %21, label %105, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 1, i32 4, i32 0, i64 4
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = bitcast %"struct.blink::PhysicalRect"* %3 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %3, i64 0, i32 1
  %29 = bitcast %"struct.blink::PhysicalSize"* %28 to i64*
  store i64 %26, i64* %29, align 8
  %30 = and i96 %19, 464227514732017603087171584
  %31 = icmp eq i96 %30, 0
  %32 = lshr i64 %26, 32
  %33 = trunc i64 %32 to i32
  %34 = trunc i64 %26 to i32
  br i1 %31, label %35, label %129

35:                                               ; preds = %23
  %36 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 2
  %37 = bitcast %"class.blink::LayoutObject"* %36 to %"struct.blink::BoxOverflowModel"**
  %38 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %37, align 8
  %39 = icmp eq %"struct.blink::BoxOverflowModel"* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.blink::LayoutRect"* %45 to i64*
  %47 = load i64, i64* %46, align 4
  %48 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %49 = bitcast %"class.blink::LayoutSize"* %48 to i64*
  %50 = load i64, i64* %49, align 4
  br label %55

51:                                               ; preds = %40, %35
  %52 = tail call { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"* nonnull %22) #12
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  br label %55

55:                                               ; preds = %44, %51
  %56 = phi i64 [ %47, %44 ], [ %53, %51 ]
  %57 = phi i64 [ %50, %44 ], [ %54, %51 ]
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = lshr i64 %57, 32
  %61 = trunc i64 %60 to i32
  %62 = icmp slt i32 %61, 0
  %63 = select i1 %62, i32 -2147483648, i32 2147483647
  %64 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %59, i32 %61) #12
  %65 = extractvalue { i32, i1 } %64, 1
  %66 = extractvalue { i32, i1 } %64, 0
  %67 = select i1 %65, i32 %63, i32 %66, !prof !3
  %68 = icmp sgt i32 %67, %33
  %69 = select i1 %68, i32 %67, i32 %33
  %70 = bitcast %"class.blink::LayoutObject"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %71 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %70, align 8
  %72 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %71, i64 24
  %73 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %72, align 8
  %74 = tail call zeroext i1 %73(%"class.blink::LayoutObject"* nonnull %0) #12
  %75 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutBlockFlow"*
  br i1 %74, label %76, label %89

76:                                               ; preds = %55
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 3, i32 1
  %78 = bitcast %"class.blink::DisplayItemClient.base"* %77 to %"class.blink::FloatingObjects"**
  %79 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %78, align 8
  %80 = icmp eq %"class.blink::FloatingObjects"* %79, null
  br i1 %80, label %89, label %81

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %79, i64 0, i32 0, i32 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %89, label %85

85:                                               ; preds = %81
  %86 = tail call i32 @_ZNK5blink15LayoutBlockFlow24LowestFloatLogicalBottomENS_6EClearE(%"class.blink::LayoutBlockFlow"* nonnull %75, i32 5) #12
  %87 = icmp slt i32 %69, %86
  %88 = select i1 %87, i32 %86, i32 %69
  br label %89

89:                                               ; preds = %81, %55, %76, %85
  %90 = phi i32 [ %69, %81 ], [ %69, %55 ], [ %69, %76 ], [ %88, %85 ]
  %91 = icmp sgt i32 %33, -1
  %92 = select i1 %91, i32 -2147483648, i32 2147483647
  %93 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %90, i32 %33) #12
  %94 = extractvalue { i32, i1 } %93, 1
  %95 = extractvalue { i32, i1 } %93, 0
  %96 = select i1 %94, i32 %92, i32 %95, !prof !3
  %97 = icmp slt i32 %96, 0
  %98 = select i1 %97, i32 -2147483648, i32 2147483647
  %99 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %96) #12
  %100 = extractvalue { i32, i1 } %99, 1
  %101 = extractvalue { i32, i1 } %99, 0
  %102 = select i1 %100, i32 %98, i32 %101, !prof !3
  %103 = icmp sgt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 0
  store i32 %104, i32* %12, align 4
  br label %129

105:                                              ; preds = %14, %16
  %106 = phi i96 [ %15, %14 ], [ %19, %16 ]
  %107 = and i96 %106, 33554432
  %108 = icmp eq i96 %107, 0
  br i1 %108, label %129, label %109

109:                                              ; preds = %105
  %110 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutText"*
  %111 = bitcast { i64, i64 }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %111) #12
  %112 = bitcast %"class.blink::LayoutObject"* %0 to { i64, i64 } (%"class.blink::LayoutText"*)***
  %113 = load { i64, i64 } (%"class.blink::LayoutText"*)**, { i64, i64 } (%"class.blink::LayoutText"*)*** %112, align 8
  %114 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %113, i64 113
  %115 = load { i64, i64 } (%"class.blink::LayoutText"*)*, { i64, i64 } (%"class.blink::LayoutText"*)** %114, align 8
  %116 = tail call { i64, i64 } %115(%"class.blink::LayoutText"* %110) #12
  %117 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 0
  %118 = extractvalue { i64, i64 } %116, 0
  store i64 %118, i64* %117, align 8
  %119 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %4, i64 0, i32 1
  %120 = extractvalue { i64, i64 } %116, 1
  store i64 %120, i64* %119, align 8
  call void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"* nonnull %3, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %111) #12
  %121 = load i32, i32* %9, align 8
  %122 = load i32, i32* %10, align 4
  %123 = load i32, i32* %11, align 8
  %124 = load i32, i32* %12, align 4
  %125 = sitofp i32 %121 to float
  %126 = fmul float %125, 1.562500e-02
  %127 = sitofp i32 %122 to float
  %128 = fmul float %127, 1.562500e-02
  br label %129

129:                                              ; preds = %105, %23, %109, %89
  %130 = phi i32 [ 0, %105 ], [ %33, %23 ], [ %124, %109 ], [ %104, %89 ]
  %131 = phi i32 [ 0, %105 ], [ %34, %23 ], [ %123, %109 ], [ %34, %89 ]
  %132 = phi float [ 0.000000e+00, %105 ], [ 0.000000e+00, %23 ], [ %128, %109 ], [ 0.000000e+00, %89 ]
  %133 = phi float [ 0.000000e+00, %105 ], [ 0.000000e+00, %23 ], [ %126, %109 ], [ 0.000000e+00, %89 ]
  %134 = bitcast %"class.blink::FloatQuad"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #12
  %135 = bitcast %"class.blink::FloatQuad"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %135) #12
  %136 = sitofp i32 %131 to float
  %137 = fmul float %136, 1.562500e-02
  %138 = sitofp i32 %130 to float
  %139 = fmul float %138, 1.562500e-02
  %140 = insertelement <2 x float> undef, float %133, i32 0
  %141 = insertelement <2 x float> %140, float %132, i32 1
  %142 = bitcast %"class.blink::FloatQuad"* %7 to <2 x float>*
  store <2 x float> %141, <2 x float>* %142, align 8
  %143 = fadd float %133, %137
  %144 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 0
  store float %143, float* %144, align 8
  %145 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 1, i32 1
  store float %132, float* %145, align 4
  %146 = fadd float %132, %139
  %147 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 0
  store float %143, float* %147, align 8
  %148 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 2, i32 1
  store float %146, float* %148, align 4
  %149 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 0
  store float %133, float* %149, align 8
  %150 = getelementptr inbounds %"class.blink::FloatQuad", %"class.blink::FloatQuad"* %7, i64 0, i32 3, i32 1
  store float %146, float* %150, align 4
  %151 = bitcast %"class.blink::ScrollableArea"* %1 to void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)***
  %152 = load void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)** %152, i64 89
  %154 = load void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::FloatQuad"*, %"class.blink::ScrollableArea"*, %"class.blink::FloatQuad"*, %"class.blink::LayoutObject"*, i32)** %153, align 8
  call void %154(%"class.blink::FloatQuad"* nonnull sret %6, %"class.blink::ScrollableArea"* %1, %"class.blink::FloatQuad"* nonnull dereferenceable(32) %7, %"class.blink::LayoutObject"* %0, i32 0) #12
  %155 = call { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"* nonnull %6) #12
  %156 = extractvalue { <2 x float>, <2 x float> } %155, 0
  %157 = extractvalue { <2 x float>, <2 x float> } %155, 1
  %158 = extractelement <2 x float> %156, i32 0
  %159 = fmul float %158, 6.400000e+01
  %160 = fcmp ult float %159, 0xC1E0000000000000
  %161 = fcmp ugt float %159, 0x41DFFFFFE0000000
  %162 = fcmp ogt float %159, 0xC1E0000000000000
  %163 = select i1 %162, float %159, float 0xC1E0000000000000
  %164 = fptosi float %163 to i32
  %165 = select i1 %160, i32 0, i32 2147483647
  %166 = select i1 %161, i32 %165, i32 %164
  %167 = extractelement <2 x float> %156, i32 1
  %168 = fmul float %167, 6.400000e+01
  %169 = fcmp ult float %168, 0xC1E0000000000000
  %170 = fcmp ugt float %168, 0x41DFFFFFE0000000
  %171 = fcmp ogt float %168, 0xC1E0000000000000
  %172 = select i1 %171, float %168, float 0xC1E0000000000000
  %173 = fptosi float %172 to i32
  %174 = select i1 %169, i32 0, i32 2147483647
  %175 = select i1 %170, i32 %174, i32 %173
  %176 = extractelement <2 x float> %157, i32 0
  %177 = fmul float %176, 6.400000e+01
  %178 = fcmp ult float %177, 0xC1E0000000000000
  %179 = fcmp ugt float %177, 0x41DFFFFFE0000000
  %180 = fcmp ogt float %177, 0xC1E0000000000000
  %181 = select i1 %180, float %177, float 0xC1E0000000000000
  %182 = fptosi float %181 to i32
  %183 = select i1 %178, i32 0, i32 2147483647
  %184 = select i1 %179, i32 %183, i32 %182
  %185 = extractelement <2 x float> %157, i32 1
  %186 = fmul float %185, 6.400000e+01
  %187 = fcmp ult float %186, 0xC1E0000000000000
  %188 = fcmp ugt float %186, 0x41DFFFFFE0000000
  %189 = fcmp ogt float %186, 0xC1E0000000000000
  %190 = select i1 %189, float %186, float 0xC1E0000000000000
  %191 = fptosi float %190 to i32
  %192 = select i1 %187, i32 0, i32 2147483647
  %193 = select i1 %188, i32 %192, i32 %191
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %135) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #12
  %194 = zext i32 %175 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %166 to i64
  %197 = or i64 %195, %196
  %198 = insertvalue { i64, i64 } undef, i64 %197, 0
  %199 = zext i32 %193 to i64
  %200 = shl nuw i64 %199, 32
  %201 = zext i32 %184 to i64
  %202 = or i64 %200, %201
  %203 = insertvalue { i64, i64 } %198, i64 %202, 1
  ret { i64, i64 } %203
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc { i64, i64 } @_ZN5blinkL14GetVisibleRectEPNS_14ScrollableAreaE(%"class.blink::ScrollableArea"*) unnamed_addr #1 {
  %2 = alloca %"struct.blink::PhysicalOffset", align 4
  %3 = bitcast %"class.blink::ScrollableArea"* %0 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %4 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %3, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %4, i64 88
  %6 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %5, align 8
  %7 = tail call %"class.blink::LayoutBox"* %6(%"class.blink::ScrollableArea"* %0) #12
  %8 = bitcast %"struct.blink::PhysicalOffset"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.blink::LayoutBox"* %7 to { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)***
  %12 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)**, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*** %11, align 8
  %13 = getelementptr inbounds { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %12, i64 177
  %14 = load { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)*, { i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)** %13, align 8
  %15 = call { i64, i64 } %14(%"class.blink::LayoutBox"* %7, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %2, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = trunc i64 %16 to i32
  %18 = lshr i64 %16, 32
  %19 = trunc i64 %18 to i32
  %20 = extractvalue { i64, i64 } %15, 1
  %21 = trunc i64 %20 to i32
  %22 = lshr i64 %20, 32
  %23 = trunc i64 %22 to i32
  %24 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %3, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %24, i64 88
  %26 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %25, align 8
  %27 = call %"class.blink::LayoutBox"* %26(%"class.blink::ScrollableArea"* %0) #12
  %28 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %27, i64 0, i32 0, i32 0, i32 5, i32 0
  %29 = bitcast %"class.blink::ComputedStyle"** %28 to %"class.blink::ComputedStyleBase"**
  %30 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 3, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %32, i64 0, i32 2, i32 0, i32 0
  %34 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 29
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 29, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %62, !prof !4

41:                                               ; preds = %1
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %36, i64 0, i32 29, i32 3
  %43 = load i8, i8* %42, align 2, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = bitcast %"class.blink::Length"* %37 to float*
  %47 = load float, float* %46, align 4
  br label %52

48:                                               ; preds = %41
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %37, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sitofp i32 %50 to float
  br label %52

52:                                               ; preds = %48, %45
  %53 = phi float [ %47, %45 ], [ %51, %48 ]
  %54 = fmul float %53, 6.400000e+01
  %55 = fcmp ult float %54, 0xC1E0000000000000
  %56 = fcmp ugt float %54, 0x41DFFFFFE0000000
  %57 = fcmp ogt float %54, 0xC1E0000000000000
  %58 = select i1 %57, float %54, float 0xC1E0000000000000
  %59 = fptosi float %58 to i32
  %60 = select i1 %55, i32 0, i32 2147483647
  %61 = select i1 %56, i32 %60, i32 %59
  br label %69

62:                                               ; preds = %1
  %63 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %37, i32 %23) #12
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %67, align 8
  br label %69

69:                                               ; preds = %52, %62
  %70 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %36, %52 ], [ %68, %62 ]
  %71 = phi i32 [ %61, %52 ], [ %63, %62 ]
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %70, i64 0, i32 28
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %70, i64 0, i32 28, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 2
  br i1 %75, label %76, label %97, !prof !4

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %70, i64 0, i32 28, i32 3
  %78 = load i8, i8* %77, align 2, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %83, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.blink::Length"* %72 to float*
  %82 = load float, float* %81, align 4
  br label %87

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = sitofp i32 %85 to float
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi float [ %82, %80 ], [ %86, %83 ]
  %89 = fmul float %88, 6.400000e+01
  %90 = fcmp ult float %89, 0xC1E0000000000000
  %91 = fcmp ugt float %89, 0x41DFFFFFE0000000
  %92 = fcmp ogt float %89, 0xC1E0000000000000
  %93 = select i1 %92, float %89, float 0xC1E0000000000000
  %94 = fptosi float %93 to i32
  %95 = select i1 %90, i32 0, i32 2147483647
  %96 = select i1 %91, i32 %95, i32 %94
  br label %104

97:                                               ; preds = %69
  %98 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %72, i32 %21) #12
  %99 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %99, i64 0, i32 2, i32 0, i32 0
  %101 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %101, i64 0, i32 2, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %102, align 8
  br label %104

104:                                              ; preds = %87, %97
  %105 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %70, %87 ], [ %103, %97 ]
  %106 = phi i32 [ %96, %87 ], [ %98, %97 ]
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %105, i64 0, i32 26
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %105, i64 0, i32 26, i32 2
  %109 = load i8, i8* %108, align 1
  %110 = icmp eq i8 %109, 2
  br i1 %110, label %111, label %132, !prof !4

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %105, i64 0, i32 26, i32 3
  %113 = load i8, i8* %112, align 2, !range !2
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %111
  %116 = bitcast %"class.blink::Length"* %107 to float*
  %117 = load float, float* %116, align 4
  br label %122

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %107, i64 0, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = sitofp i32 %120 to float
  br label %122

122:                                              ; preds = %118, %115
  %123 = phi float [ %117, %115 ], [ %121, %118 ]
  %124 = fmul float %123, 6.400000e+01
  %125 = fcmp ult float %124, 0xC1E0000000000000
  %126 = fcmp ugt float %124, 0x41DFFFFFE0000000
  %127 = fcmp ogt float %124, 0xC1E0000000000000
  %128 = select i1 %127, float %124, float 0xC1E0000000000000
  %129 = fptosi float %128 to i32
  %130 = select i1 %125, i32 0, i32 2147483647
  %131 = select i1 %126, i32 %130, i32 %129
  br label %139

132:                                              ; preds = %104
  %133 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %107, i32 %23) #12
  %134 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %31, align 8
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %134, i64 0, i32 2, i32 0, i32 0
  %136 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %136, i64 0, i32 2, i32 0, i32 0
  %138 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %137, align 8
  br label %139

139:                                              ; preds = %122, %132
  %140 = phi %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* [ %105, %122 ], [ %138, %132 ]
  %141 = phi i32 [ %131, %122 ], [ %133, %132 ]
  %142 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %140, i64 0, i32 27
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %140, i64 0, i32 27, i32 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 2
  br i1 %145, label %146, label %167, !prof !4

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %140, i64 0, i32 27, i32 3
  %148 = load i8, i8* %147, align 2, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.blink::Length"* %142 to float*
  %152 = load float, float* %151, align 4
  br label %157

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %142, i64 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = sitofp i32 %155 to float
  br label %157

157:                                              ; preds = %153, %150
  %158 = phi float [ %152, %150 ], [ %156, %153 ]
  %159 = fmul float %158, 6.400000e+01
  %160 = fcmp ult float %159, 0xC1E0000000000000
  %161 = fcmp ugt float %159, 0x41DFFFFFE0000000
  %162 = fcmp ogt float %159, 0xC1E0000000000000
  %163 = select i1 %162, float %159, float 0xC1E0000000000000
  %164 = fptosi float %163 to i32
  %165 = select i1 %160, i32 0, i32 2147483647
  %166 = select i1 %161, i32 %165, i32 %164
  br label %169

167:                                              ; preds = %139
  %168 = call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %142, i32 %21) #12
  br label %169

169:                                              ; preds = %157, %167
  %170 = phi i32 [ %166, %157 ], [ %168, %167 ]
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %17, i32 %170) #12
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  %177 = icmp slt i32 %71, 0
  %178 = select i1 %177, i32 -2147483648, i32 2147483647
  %179 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %19, i32 %71) #12
  %180 = extractvalue { i32, i1 } %179, 1
  %181 = extractvalue { i32, i1 } %179, 0
  %182 = select i1 %180, i32 %178, i32 %181, !prof !3
  %183 = icmp slt i32 %106, 0
  %184 = select i1 %183, i32 -2147483648, i32 2147483647
  %185 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %170, i32 %106) #12
  %186 = extractvalue { i32, i1 } %185, 1
  %187 = extractvalue { i32, i1 } %185, 0
  %188 = select i1 %186, i32 %184, i32 %187, !prof !3
  %189 = icmp slt i32 %141, 0
  %190 = select i1 %189, i32 -2147483648, i32 2147483647
  %191 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %141) #12
  %192 = extractvalue { i32, i1 } %191, 1
  %193 = extractvalue { i32, i1 } %191, 0
  %194 = select i1 %192, i32 %190, i32 %193, !prof !3
  %195 = icmp sgt i32 %188, -1
  %196 = select i1 %195, i32 -2147483648, i32 2147483647
  %197 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %21, i32 %188) #12
  %198 = extractvalue { i32, i1 } %197, 1
  %199 = extractvalue { i32, i1 } %197, 0
  %200 = select i1 %198, i32 %196, i32 %199, !prof !3
  %201 = icmp sgt i32 %194, -1
  %202 = select i1 %201, i32 -2147483648, i32 2147483647
  %203 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %23, i32 %194) #12
  %204 = extractvalue { i32, i1 } %203, 1
  %205 = extractvalue { i32, i1 } %203, 0
  %206 = select i1 %204, i32 %202, i32 %205, !prof !3
  %207 = zext i32 %182 to i64
  %208 = shl nuw i64 %207, 32
  %209 = zext i32 %176 to i64
  %210 = or i64 %208, %209
  %211 = insertvalue { i64, i64 } undef, i64 %210, 0
  %212 = zext i32 %206 to i64
  %213 = shl nuw i64 %212, 32
  %214 = zext i32 %200 to i64
  %215 = or i64 %213, %214
  %216 = insertvalue { i64, i64 } %211, i64 %215, 1
  ret { i64, i64 } %216
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK5blink10LayoutRect10IntersectsERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4

declare zeroext i1 @_ZNK5blink10LayoutRect8ContainsERKS0_(%"class.blink::LayoutRect"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor10FindAnchorEv(%"class.blink::ScrollAnchor"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !4

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %6 ]
  %16 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter to i8*) acquire, align 8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %22, !prof !5

18:                                               ; preds = %12
  %19 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter) #12
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %18
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i64 0, i64 0), i32 0, i32 10000000, i32 50) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter) #12
  br label %22

22:                                               ; preds = %18, %21, %12
  %23 = call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %24 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %23, i64 0, i32 0
  %25 = bitcast %"class.base::DefaultTickClock"* %23 to i64 (%"class.base::TickClock"*)***
  %26 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %25, align 8
  %27 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %26, i64 2
  %28 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %27, align 8
  %29 = call i64 %28(%"class.base::TickClock"* %24) #12
  %30 = call zeroext i1 @_ZN5blink12ScrollAnchor30FindAnchorInPriorityCandidatesEv(%"class.blink::ScrollAnchor"* %0)
  br i1 %30, label %41, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %32, align 8
  %34 = bitcast %"class.blink::ScrollableArea"* %33 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %35 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %35, i64 88
  %37 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %36, align 8
  %38 = call %"class.blink::LayoutBox"* %37(%"class.blink::ScrollableArea"* %33) #12
  %39 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %38, i64 0, i32 0, i32 0
  %40 = call zeroext i1 @_ZN5blink12ScrollAnchor19FindAnchorRecursiveEPNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* %39)
  br label %41

41:                                               ; preds = %31, %22
  %42 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %44 = icmp eq %"class.blink::LayoutObject"* %43, null
  br i1 %44, label %103, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %43, i64 0, i32 4
  %47 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %46 to i96*
  %48 = load i96, i96* %47, align 4
  %49 = or i96 %48, 562949953421312
  store i96 %49, i96* %47, align 4
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %51 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  %55 = call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %50, %"class.blink::ScrollableArea"* %52) #12
  %56 = extractvalue { i64, i64 } %55, 0
  %57 = extractvalue { i64, i64 } %55, 1
  %58 = trunc i64 %57 to i32
  switch i32 %54, label %71 [
    i32 0, label %59
    i32 1, label %62
  ]

59:                                               ; preds = %45
  %60 = trunc i64 %56 to i32
  %61 = and i64 %56, -4294967296
  br label %71

62:                                               ; preds = %45
  %63 = trunc i64 %56 to i32
  %64 = and i64 %56, -4294967296
  %65 = icmp slt i32 %58, 0
  %66 = select i1 %65, i32 -2147483648, i32 2147483647
  %67 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %63, i32 %58) #12
  %68 = extractvalue { i32, i1 } %67, 1
  %69 = extractvalue { i32, i1 } %67, 0
  %70 = select i1 %68, i32 %66, i32 %69, !prof !3
  br label %71

71:                                               ; preds = %62, %59, %45
  %72 = phi i32 [ %70, %62 ], [ %60, %59 ], [ 0, %45 ]
  %73 = phi i64 [ %64, %62 ], [ %61, %59 ], [ 0, %45 ]
  %74 = bitcast %"class.blink::ScrollableArea"* %52 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %75 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %74, align 8
  %76 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %75, i64 88
  %77 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %76, align 8
  %78 = call %"class.blink::LayoutBox"* %77(%"class.blink::ScrollableArea"* %52) #12
  %79 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %78, i64 0, i32 0, i32 0, i32 5, i32 0
  %80 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %80, i64 0, i32 0, i32 9
  %82 = bitcast [20 x i8]* %81 to i160*
  %83 = load i160, i160* %82, align 8
  %84 = and i160 %83, 15211807202738752817960438464512
  %85 = icmp eq i160 %84, 5070602400912917605986812821504
  br i1 %85, label %86, label %93, !prof !3

86:                                               ; preds = %71
  %87 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %78, i64 0, i32 0, i32 0
  %88 = bitcast %"class.blink::LayoutBox"* %78 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %89 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %89, i64 106
  %91 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %90, align 8
  %92 = call i32 %91(%"class.blink::LayoutObject"* %87, i32 %72, i32 0, %"class.blink::LayoutBox"* null) #12
  br label %93

93:                                               ; preds = %71, %86
  %94 = phi i32 [ %92, %86 ], [ %72, %71 ]
  %95 = zext i32 %94 to i64
  %96 = or i64 %73, %95
  %97 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 3
  %98 = bitcast %"class.blink::LayoutPoint"* %97 to i64*
  store i64 %96, i64* %98, align 4
  %99 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %42, align 8
  %100 = call zeroext i1 @_ZN5blink20DisplayLockUtilities19IsAutoWithoutLayoutERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %99) #12
  %101 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 8
  %102 = zext i1 %100 to i8
  store i8 %102, i8* %101, align 2
  br label %103

103:                                              ; preds = %41, %93
  %104 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %25, align 8
  %105 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %104, i64 2
  %106 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %105, align 8
  %107 = call i64 %106(%"class.base::TickClock"* %24) #12
  %108 = sub nsw i64 %107, %29
  call void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12ScrollAnchor10FindAnchorEvE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i64 %108) #12
  %109 = icmp eq i8* %15, null
  br i1 %109, label %114, label %110

110:                                              ; preds = %103
  %111 = load i8, i8* %15, align 1
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %114, label %113

113:                                              ; preds = %110
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #12
  br label %114

114:                                              ; preds = %103, %110, %113
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScrollAnchor30FindAnchorInPriorityCandidatesEv(%"class.blink::ScrollAnchor"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %2, align 8
  %4 = bitcast %"class.blink::ScrollableArea"* %3 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %5 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %5, i64 88
  %7 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %6, align 8
  %8 = tail call %"class.blink::LayoutBox"* %7(%"class.blink::ScrollableArea"* %3) #12
  %9 = icmp eq %"class.blink::LayoutBox"* %8, null
  br i1 %9, label %123, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %23

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %8, i64 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi %"class.blink::LayoutObject"* [ %19, %16 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %16, label %23

23:                                               ; preds = %16, %10
  %24 = phi %"class.blink::Node"* [ %12, %10 ], [ %21, %16 ]
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 43, i32 0, i32 0
  %30 = load %"class.blink::Element"*, %"class.blink::Element"** %29, align 8
  %31 = icmp eq %"class.blink::Element"* %30, null
  br i1 %31, label %77, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %30, i64 0, i32 0, i32 0
  %34 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %33) #12
  br i1 %34, label %35, label %77

35:                                               ; preds = %32, %63
  %36 = phi %"class.blink::Node"* [ %65, %63 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = and i32 %38, 1
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %36, i64 0, i32 6, i32 0, i32 0
  br i1 %40, label %46, label %42

42:                                               ; preds = %35
  %43 = bitcast %"class.blink::NodeData"** %41 to %"class.blink::NodeRareData"**
  %44 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %44, i64 0, i32 1, i32 0, i32 0
  br label %48

46:                                               ; preds = %35
  %47 = bitcast %"class.blink::NodeData"** %41 to %"class.blink::NodeRenderingData"**
  br label %48

48:                                               ; preds = %46, %42
  %49 = phi %"class.blink::NodeRenderingData"** [ %45, %42 ], [ %47, %46 ]
  %50 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %50, i64 0, i32 1
  %52 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutObject"* %52, null
  br i1 %53, label %63, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %52, i64 0, i32 4
  %56 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %55 to i96*
  %57 = load i96, i96* %56, align 4
  %58 = and i96 %57, 16777216
  %59 = icmp ne i96 %58, 0
  %60 = and i96 %57, 1207959552
  %61 = icmp eq i96 %60, 134217728
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %54, %48
  %64 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %36) #12
  %65 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %64, i64 0, i32 0
  %66 = icmp eq %"class.blink::ContainerNode"* %64, null
  br i1 %66, label %77, label %35

67:                                               ; preds = %54
  %68 = tail call { i64, i32 } @_ZNK5blink12ScrollAnchor24ExaminePriorityCandidateEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* nonnull %52)
  %69 = extractvalue { i64, i32 } %68, 0
  %70 = lshr i64 %69, 32
  %71 = trunc i64 %70 to i8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %67
  %74 = extractvalue { i64, i32 } %68, 1
  %75 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* %52, %"class.blink::LayoutObject"** %75, align 8
  %76 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 2
  store i32 %74, i32* %76, align 8
  br label %123

77:                                               ; preds = %63, %32, %67, %23
  %78 = tail call %"class.blink::Node"* @_ZNK5blink8Document28GetFindInPageActiveMatchNodeEv(%"class.blink::Document"* %28) #12
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %112, label %80

80:                                               ; preds = %77, %108
  %81 = phi %"class.blink::Node"* [ %110, %108 ], [ %78, %77 ]
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = and i32 %83, 1
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 6, i32 0, i32 0
  br i1 %85, label %91, label %87

87:                                               ; preds = %80
  %88 = bitcast %"class.blink::NodeData"** %86 to %"class.blink::NodeRareData"**
  %89 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %89, i64 0, i32 1, i32 0, i32 0
  br label %93

91:                                               ; preds = %80
  %92 = bitcast %"class.blink::NodeData"** %86 to %"class.blink::NodeRenderingData"**
  br label %93

93:                                               ; preds = %91, %87
  %94 = phi %"class.blink::NodeRenderingData"** [ %90, %87 ], [ %92, %91 ]
  %95 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %95, i64 0, i32 1
  %97 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %96, align 8
  %98 = icmp eq %"class.blink::LayoutObject"* %97, null
  br i1 %98, label %108, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %97, i64 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = and i96 %102, 16777216
  %104 = icmp ne i96 %103, 0
  %105 = and i96 %102, 1207959552
  %106 = icmp eq i96 %105, 134217728
  %107 = or i1 %104, %106
  br i1 %107, label %108, label %112

108:                                              ; preds = %99, %93
  %109 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %81) #12
  %110 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %109, i64 0, i32 0
  %111 = icmp eq %"class.blink::ContainerNode"* %109, null
  br i1 %111, label %112, label %80

112:                                              ; preds = %99, %108, %77
  %113 = phi %"class.blink::LayoutObject"* [ null, %77 ], [ null, %108 ], [ %97, %99 ]
  %114 = tail call { i64, i32 } @_ZNK5blink12ScrollAnchor24ExaminePriorityCandidateEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* %113)
  %115 = extractvalue { i64, i32 } %114, 0
  %116 = lshr i64 %115, 32
  %117 = trunc i64 %116 to i8
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %123, label %119

119:                                              ; preds = %112
  %120 = extractvalue { i64, i32 } %114, 1
  %121 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* %113, %"class.blink::LayoutObject"** %121, align 8
  %122 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 2
  store i32 %120, i32* %122, align 8
  br label %123

123:                                              ; preds = %73, %119, %112, %1
  %124 = phi i1 [ false, %1 ], [ true, %73 ], [ true, %119 ], [ false, %112 ]
  ret i1 %124
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScrollAnchor19FindAnchorRecursiveEPNS_12LayoutObjectE(%"class.blink::ScrollAnchor"*, %"class.blink::LayoutObject"*) local_unnamed_addr #1 align 2 {
  %3 = tail call { i64, i32 } @_ZNK5blink12ScrollAnchor7ExamineEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* %1)
  %4 = extractvalue { i64, i32 } %3, 0
  %5 = trunc i64 %4 to i32
  %6 = and i64 %4, 4294967296
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = extractvalue { i64, i32 } %3, 1
  %10 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"** %10, align 8
  %11 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 2
  store i32 %9, i32* %11, align 8
  br label %12

12:                                               ; preds = %2, %8
  switch i32 %5, label %14 [
    i32 3, label %69
    i32 0, label %13
  ]

13:                                               ; preds = %12
  br label %69

14:                                               ; preds = %12
  %15 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %16 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %16, i64 13
  %18 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %17, align 8
  %19 = tail call %"class.blink::LayoutObjectChildList"* %18(%"class.blink::LayoutObject"* %1) #12
  %20 = icmp eq %"class.blink::LayoutObjectChildList"* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %19, i64 0, i32 0
  %23 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %22, align 8
  %24 = icmp eq %"class.blink::LayoutObject"* %23, null
  br i1 %24, label %32, label %25

25:                                               ; preds = %21, %28
  %26 = phi %"class.blink::LayoutObject"* [ %30, %28 ], [ %23, %21 ]
  %27 = tail call zeroext i1 @_ZN5blink12ScrollAnchor19FindAnchorRecursiveEPNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* nonnull %26)
  br i1 %27, label %69, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 9
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = icmp eq %"class.blink::LayoutObject"* %30, null
  br i1 %31, label %32, label %25

32:                                               ; preds = %28, %14, %21
  %33 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %33, label %67, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %36 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %35, align 8
  %37 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %36, i64 23
  %38 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %37, align 8
  %39 = tail call zeroext i1 %38(%"class.blink::LayoutObject"* nonnull %1) #12
  %40 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBlock"*
  br i1 %39, label %41, label %67

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 2, i32 8
  %43 = bitcast %"class.blink::LayoutObject"** %42 to i16*
  %44 = load i16, i16* %43, align 8
  %45 = trunc i16 %44 to i8
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %67, !prof !3

47:                                               ; preds = %41
  %48 = tail call %"class.WTF::ListHashSet.1760"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"* nonnull %40) #12
  %49 = icmp eq %"class.WTF::ListHashSet.1760"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.WTF::ListHashSet.1760", %"class.WTF::ListHashSet.1760"* %48, i64 0, i32 1
  %52 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %51, align 8
  %53 = icmp eq %"class.WTF::MallocedListHashSetNode"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %50, %63
  %55 = phi %"class.WTF::MallocedListHashSetNode"* [ %65, %63 ], [ %52, %50 ]
  %56 = bitcast %"class.WTF::MallocedListHashSetNode"* %55 to %"class.blink::LayoutObject"**
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 7
  %59 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutObject"* %59, %1
  br i1 %60, label %63, label %61

61:                                               ; preds = %54
  %62 = tail call zeroext i1 @_ZN5blink12ScrollAnchor19FindAnchorRecursiveEPNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* %57)
  br i1 %62, label %69, label %63

63:                                               ; preds = %61, %54
  %64 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode", %"class.WTF::MallocedListHashSetNode"* %55, i64 0, i32 2
  %65 = load %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"** %64, align 8
  %66 = icmp eq %"class.WTF::MallocedListHashSetNode"* %65, null
  br i1 %66, label %67, label %54

67:                                               ; preds = %63, %50, %34, %41, %47, %32
  %68 = icmp eq i32 %5, 1
  br label %69

69:                                               ; preds = %25, %61, %67, %12, %13
  %70 = phi i1 [ false, %13 ], [ true, %12 ], [ %68, %67 ], [ true, %61 ], [ true, %25 ]
  ret i1 %70
}

declare zeroext i1 @_ZN5blink20DisplayLockUtilities19IsAutoWithoutLayoutERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZNK5blink12ScrollAnchor25PriorityCandidateFromNodeEPKNS_4NodeE(%"class.blink::ScrollAnchor"* nocapture readnone, %"class.blink::Node"*) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"class.blink::Node"* %1, null
  br i1 %3, label %36, label %4

4:                                                ; preds = %2, %32
  %5 = phi %"class.blink::Node"* [ %34, %32 ], [ %1, %2 ]
  %6 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %5, i64 0, i32 6, i32 0, i32 0
  br i1 %9, label %15, label %11

11:                                               ; preds = %4
  %12 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRareData"**
  %13 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %13, i64 0, i32 1, i32 0, i32 0
  br label %17

15:                                               ; preds = %4
  %16 = bitcast %"class.blink::NodeData"** %10 to %"class.blink::NodeRenderingData"**
  br label %17

17:                                               ; preds = %11, %15
  %18 = phi %"class.blink::NodeRenderingData"** [ %14, %11 ], [ %16, %15 ]
  %19 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %19, i64 0, i32 1
  %21 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %20, align 8
  %22 = icmp eq %"class.blink::LayoutObject"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %21, i64 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 16777216
  %28 = icmp ne i96 %27, 0
  %29 = and i96 %26, 1207959552
  %30 = icmp eq i96 %29, 134217728
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %36

32:                                               ; preds = %23, %17
  %33 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %5) #12
  %34 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %33, i64 0, i32 0
  %35 = icmp eq %"class.blink::ContainerNode"* %33, null
  br i1 %35, label %36, label %4

36:                                               ; preds = %32, %23, %2
  %37 = phi %"class.blink::LayoutObject"* [ null, %2 ], [ %21, %23 ], [ null, %32 ]
  ret %"class.blink::LayoutObject"* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK5blink12ScrollAnchor24ExaminePriorityCandidateEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* nocapture readonly, %"class.blink::LayoutObject"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.blink::LayoutObject::AncestorSkipInfo", align 8
  %4 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %6 = bitcast %"class.blink::ScrollableArea"* %5 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %7 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %7, i64 88
  %9 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %8, align 8
  %10 = tail call %"class.blink::LayoutBox"* %9(%"class.blink::ScrollableArea"* %5) #12
  %11 = icmp ne %"class.blink::LayoutObject"* %1, null
  %12 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %10, i64 0, i32 0, i32 0
  %13 = icmp ne %"class.blink::LayoutObject"* %12, %1
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %75

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::LayoutObject::AncestorSkipInfo"* %3 to i8*
  %17 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.blink::LayoutObject::AncestorSkipInfo", %"class.blink::LayoutObject::AncestorSkipInfo"* %3, i64 0, i32 3
  br label %21

21:                                               ; preds = %15, %69
  %22 = phi %"class.blink::LayoutObject"* [ %1, %15 ], [ %71, %69 ]
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %24 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 9
  %26 = bitcast [20 x i8]* %25 to i160*
  %27 = load i160, i160* %26, align 8
  %28 = and i160 %27, 29710560942849126597578981376
  %29 = icmp eq i160 %28, 0
  br i1 %29, label %84, label %30

30:                                               ; preds = %21
  %31 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %32 = icmp eq %"class.blink::ComputedStyle"* %24, null
  br i1 %32, label %59, label %33

33:                                               ; preds = %30
  %34 = and i160 %27, 8462480737302404222943232
  %35 = icmp eq i160 %34, 1208925819614629174706176
  br i1 %35, label %84, label %36

36:                                               ; preds = %33
  %37 = icmp eq i160 %34, 4835703278458516698824704
  %38 = and i160 %27, 8462480737302533071962112
  %39 = icmp eq i160 %38, 4835703278458559648497664
  %40 = xor i1 %37, %39
  br i1 %40, label %41, label %59

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %24, i64 0, i32 0, i32 7, i32 0, i32 0
  %43 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 18, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %84

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 8, i32 2
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %84

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 17, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %84

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %43, i64 0, i32 7, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %84

59:                                               ; preds = %55, %36, %30
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #12
  %60 = bitcast %"class.blink::ScrollableArea"* %31 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #12
  %61 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %61, i64 88
  %63 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %62, align 8
  %64 = call %"class.blink::LayoutBox"* %63(%"class.blink::ScrollableArea"* %31) #12
  %65 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %64, i64 0, i32 0, i32 0
  store %"class.blink::LayoutObject"* %65, %"class.blink::LayoutObject"** %17, align 8
  store i8 0, i8* %18, align 8
  store i8 0, i8* %19, align 1
  store i8 0, i8* %20, align 2
  %66 = call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* nonnull %22, %"class.blink::LayoutObject::AncestorSkipInfo"* nonnull %3) #12
  %67 = load i8, i8* %19, align 1, !range !2
  %68 = icmp eq i8 %67, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #12
  br i1 %68, label %69, label %84

69:                                               ; preds = %59
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 7
  %71 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %70, align 8
  %72 = icmp ne %"class.blink::LayoutObject"* %71, null
  %73 = icmp ne %"class.blink::LayoutObject"* %71, %12
  %74 = and i1 %72, %73
  br i1 %74, label %21, label %75

75:                                               ; preds = %69, %2
  %76 = phi i1 [ %11, %2 ], [ %72, %69 ]
  br i1 %76, label %77, label %84

77:                                               ; preds = %75
  %78 = call { i64, i32 } @_ZNK5blink12ScrollAnchor7ExamineEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* %0, %"class.blink::LayoutObject"* %1)
  %79 = extractvalue { i64, i32 } %78, 0
  %80 = extractvalue { i64, i32 } %78, 1
  %81 = and i64 %79, -1099511627776
  %82 = and i64 %79, 1095216660480
  %83 = and i64 %79, 4294967295
  br label %84

84:                                               ; preds = %55, %41, %47, %51, %33, %59, %21, %75, %77
  %85 = phi i32 [ %80, %77 ], [ 0, %75 ], [ 0, %21 ], [ 0, %59 ], [ 0, %33 ], [ 0, %51 ], [ 0, %47 ], [ 0, %41 ], [ 0, %55 ]
  %86 = phi i64 [ %81, %77 ], [ 0, %75 ], [ 0, %21 ], [ 0, %59 ], [ 0, %33 ], [ 0, %51 ], [ 0, %47 ], [ 0, %41 ], [ 0, %55 ]
  %87 = phi i64 [ %82, %77 ], [ 0, %75 ], [ 0, %21 ], [ 0, %59 ], [ 0, %33 ], [ 0, %51 ], [ 0, %47 ], [ 0, %41 ], [ 0, %55 ]
  %88 = phi i64 [ %83, %77 ], [ 0, %75 ], [ 0, %21 ], [ 0, %59 ], [ 0, %33 ], [ 0, %51 ], [ 0, %47 ], [ 0, %41 ], [ 0, %55 ]
  %89 = or i64 %87, %86
  %90 = or i64 %89, %88
  %91 = insertvalue { i64, i32 } undef, i64 %90, 0
  %92 = insertvalue { i64, i32 } %91, i32 %85, 1
  ret { i64, i32 } %92
}

declare %"class.blink::Node"* @_ZNK5blink8Document28GetFindInPageActiveMatchNodeEv(%"class.blink::Document"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScrollAnchor40ComputeScrollAnchorDisablingStyleChangedEv(%"class.blink::ScrollAnchor"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %6, align 8
  %8 = bitcast %"class.blink::ScrollableArea"* %7 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %9 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %9, i64 88
  %11 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %10, align 8
  %12 = tail call %"class.blink::LayoutBox"* %11(%"class.blink::ScrollableArea"* %7) #12
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %12, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %3, i64 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 1125899906842624
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %19, label %30

19:                                               ; preds = %5, %22
  %20 = phi %"class.blink::LayoutObject"* [ %24, %22 ], [ %3, %5 ]
  %21 = icmp eq %"class.blink::LayoutObject"* %20, %13
  br i1 %21, label %30, label %22

22:                                               ; preds = %19
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 1125899906842624
  %29 = icmp eq i96 %28, 0
  br i1 %29, label %19, label %30

30:                                               ; preds = %19, %22, %5, %1
  %31 = phi i1 [ false, %1 ], [ true, %5 ], [ false, %19 ], [ true, %22 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor18NotifyBeforeLayoutEv(%"class.blink::ScrollAnchor"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 7
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %8 = icmp eq %"class.blink::LayoutObject"* %7, null
  br i1 %8, label %34, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %10, align 8
  %12 = bitcast %"class.blink::ScrollableArea"* %11 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %13 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %13, i64 88
  %15 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %14, align 8
  %16 = tail call %"class.blink::LayoutBox"* %15(%"class.blink::ScrollableArea"* %11) #12
  %17 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %16, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 4
  %19 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %18 to i96*
  %20 = load i96, i96* %19, align 4
  %21 = and i96 %20, 1125899906842624
  %22 = icmp eq i96 %21, 0
  br i1 %22, label %23, label %34

23:                                               ; preds = %9, %26
  %24 = phi %"class.blink::LayoutObject"* [ %28, %26 ], [ %7, %9 ]
  %25 = icmp eq %"class.blink::LayoutObject"* %24, %17
  br i1 %25, label %34, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 1125899906842624
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %23, label %34

34:                                               ; preds = %23, %26, %5, %9
  %35 = phi i8 [ 0, %5 ], [ 1, %9 ], [ 1, %26 ], [ 0, %23 ]
  %36 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 6
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = or i8 %37, %35
  store i8 %38, i8* %36, align 8
  br label %159

39:                                               ; preds = %1
  %40 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  %42 = bitcast %"class.blink::ScrollableArea"* %41 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %43 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %42, align 8
  %44 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %43, i64 47
  %45 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %44, align 8
  %46 = tail call <2 x float> %45(%"class.blink::ScrollableArea"* %41) #12
  %47 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  %48 = bitcast %"class.blink::ScrollableArea"* %47 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %49 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %49, i64 88
  %51 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %50, align 8
  %52 = tail call %"class.blink::LayoutBox"* %51(%"class.blink::ScrollableArea"* %47) #12
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %52, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = trunc i96 %55 to i32
  %57 = icmp slt i32 %56, 0
  %58 = extractelement <2 x float> %46, i32 1
  %59 = extractelement <2 x float> %46, i32 0
  %60 = select i1 %57, float %58, float %59
  %61 = fcmp oeq float %60, 0.000000e+00
  %62 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  br i1 %61, label %64, label %86

64:                                               ; preds = %39
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %62, align 8
  %65 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %66 = bitcast %"class.WTF::String"* %65 to i64*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  store i64 0, i64* %66, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #12
  br label %83

83:                                               ; preds = %82, %79, %64
  %84 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %84, label %159, label %85

85:                                               ; preds = %83
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %63) #12
  br label %159

86:                                               ; preds = %39
  %87 = icmp eq %"class.blink::LayoutObject"* %63, null
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  tail call void @_ZN5blink12ScrollAnchor10FindAnchorEv(%"class.blink::ScrollAnchor"* %0)
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %90 = icmp eq %"class.blink::LayoutObject"* %89, null
  br i1 %90, label %159, label %91

91:                                               ; preds = %86, %88
  %92 = phi %"class.blink::LayoutObject"* [ %89, %88 ], [ %63, %86 ]
  %93 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  %94 = bitcast %"class.blink::ScrollableArea"* %93 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %95 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %94, align 8
  %96 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %95, i64 88
  %97 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %96, align 8
  %98 = tail call %"class.blink::LayoutBox"* %97(%"class.blink::ScrollableArea"* %93) #12
  %99 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %98, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %92, i64 0, i32 4
  %101 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %100 to i96*
  %102 = load i96, i96* %101, align 4
  %103 = and i96 %102, 1125899906842624
  %104 = icmp eq i96 %103, 0
  br i1 %104, label %105, label %116

105:                                              ; preds = %91, %108
  %106 = phi %"class.blink::LayoutObject"* [ %110, %108 ], [ %92, %91 ]
  %107 = icmp eq %"class.blink::LayoutObject"* %106, %99
  br i1 %107, label %116, label %108

108:                                              ; preds = %105
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 7
  %110 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %110, i64 0, i32 4
  %112 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %111 to i96*
  %113 = load i96, i96* %112, align 4
  %114 = and i96 %113, 1125899906842624
  %115 = icmp eq i96 %114, 0
  br i1 %115, label %105, label %116

116:                                              ; preds = %105, %108, %91
  %117 = phi i8 [ 1, %91 ], [ 1, %108 ], [ 0, %105 ]
  %118 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 6
  store i8 %117, i8* %118, align 8
  %119 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  %120 = bitcast %"class.blink::ScrollableArea"* %119 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %121 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %120, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %121, i64 88
  %123 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %122, align 8
  %124 = tail call %"class.blink::LayoutBox"* %123(%"class.blink::ScrollableArea"* %119) #12
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %124, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %126 = load %"class.blink::Node"*, %"class.blink::Node"** %125, align 8
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %128, label %137

128:                                              ; preds = %116
  %129 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %124, i64 0, i32 0, i32 0
  br label %130

130:                                              ; preds = %128, %130
  %131 = phi %"class.blink::LayoutObject"* [ %133, %130 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %131, i64 0, i32 7
  %133 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %133, i64 0, i32 6, i32 0, i32 0
  %135 = load %"class.blink::Node"*, %"class.blink::Node"** %134, align 8
  %136 = icmp eq %"class.blink::Node"* %135, null
  br i1 %136, label %130, label %137

137:                                              ; preds = %130, %116
  %138 = phi %"class.blink::Node"* [ %126, %116 ], [ %135, %130 ]
  %139 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %138, i64 0, i32 3, i32 0, i32 0
  %140 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %140, i64 0, i32 2, i32 0, i32 0
  %142 = load %"class.blink::Document"*, %"class.blink::Document"** %141, align 8
  %143 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %142) #12
  %144 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  %145 = icmp eq %"class.blink::ScrollableArea"* %144, null
  br i1 %145, label %157, label %146

146:                                              ; preds = %137
  %147 = bitcast %"class.blink::ScrollableArea"* %144 to i1 (%"class.blink::ScrollableArea"*)***
  %148 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %147, align 8
  %149 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %148, i64 91
  %150 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %149, align 8
  %151 = tail call zeroext i1 %150(%"class.blink::ScrollableArea"* nonnull %144) #12
  br i1 %151, label %154, label %152

152:                                              ; preds = %146
  %153 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %40, align 8
  br label %157

154:                                              ; preds = %146
  %155 = bitcast %"class.blink::ScrollableArea"* %144 to %"class.blink::RootFrameViewport"*
  %156 = tail call dereferenceable(80) %"class.blink::ScrollableArea"* @_ZNK5blink17RootFrameViewport14LayoutViewportEv(%"class.blink::RootFrameViewport"* nonnull %155) #12
  br label %157

157:                                              ; preds = %137, %152, %154
  %158 = phi %"class.blink::ScrollableArea"* [ %156, %154 ], [ %153, %152 ], [ null, %137 ]
  tail call void @_ZN5blink14LocalFrameView32EnqueueScrollAnchoringAdjustmentEPNS_14ScrollableAreaE(%"class.blink::LocalFrameView"* %143, %"class.blink::ScrollableArea"* %158) #12
  store i8 1, i8* %2, align 1
  br label %159

159:                                              ; preds = %157, %88, %83, %85, %34
  ret void
}

declare dereferenceable(80) %"class.blink::ScrollableArea"* @_ZNK5blink17RootFrameViewport14LayoutViewportEv(%"class.blink::RootFrameViewport"*) local_unnamed_addr #4

declare void @_ZN5blink14LocalFrameView32EnqueueScrollAnchoringAdjustmentEPNS_14ScrollableAreaE(%"class.blink::LocalFrameView"*, %"class.blink::ScrollableArea"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink12ScrollAnchor17ComputeAdjustmentEv(%"class.blink::ScrollAnchor"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = tail call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %3, %"class.blink::ScrollableArea"* %5) #12
  %9 = extractvalue { i64, i64 } %8, 0
  %10 = extractvalue { i64, i64 } %8, 1
  %11 = trunc i64 %10 to i32
  switch i32 %7, label %24 [
    i32 0, label %12
    i32 1, label %15
  ]

12:                                               ; preds = %1
  %13 = trunc i64 %9 to i32
  %14 = and i64 %9, -4294967296
  br label %24

15:                                               ; preds = %1
  %16 = trunc i64 %9 to i32
  %17 = and i64 %9, -4294967296
  %18 = icmp slt i32 %11, 0
  %19 = select i1 %18, i32 -2147483648, i32 2147483647
  %20 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %16, i32 %11) #12
  %21 = extractvalue { i32, i1 } %20, 1
  %22 = extractvalue { i32, i1 } %20, 0
  %23 = select i1 %21, i32 %19, i32 %22, !prof !3
  br label %24

24:                                               ; preds = %15, %12, %1
  %25 = phi i32 [ %23, %15 ], [ %13, %12 ], [ 0, %1 ]
  %26 = phi i64 [ %17, %15 ], [ %14, %12 ], [ 0, %1 ]
  %27 = bitcast %"class.blink::ScrollableArea"* %5 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %28 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %28, i64 88
  %30 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %29, align 8
  %31 = tail call %"class.blink::LayoutBox"* %30(%"class.blink::ScrollableArea"* %5) #12
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %31, i64 0, i32 0, i32 0, i32 5, i32 0
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 5070602400912917605986812821504
  br i1 %38, label %39, label %46, !prof !3

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %31, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::LayoutBox"* %31 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %42 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %41, align 8
  %43 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %42, i64 106
  %44 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %43, align 8
  %45 = tail call i32 %44(%"class.blink::LayoutObject"* %40, i32 %25, i32 0, %"class.blink::LayoutBox"* null) #12
  br label %46

46:                                               ; preds = %24, %39
  %47 = phi i32 [ %45, %39 ], [ %25, %24 ]
  %48 = lshr exact i64 %26, 32
  %49 = trunc i64 %48 to i32
  %50 = sdiv i32 %47, 64
  %51 = srem i32 %47, 64
  %52 = add nsw i32 %51, 32
  %53 = ashr i32 %52, 6
  %54 = sdiv i32 %49, 64
  %55 = srem i32 %49, 64
  %56 = add nsw i32 %55, 32
  %57 = ashr i32 %56, 6
  %58 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 3, i32 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = srem i32 %59, 64
  %61 = add nsw i32 %60, 32
  %62 = ashr i32 %61, 6
  %63 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 3, i32 1, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = srem i32 %64, 64
  %66 = add nsw i32 %65, 32
  %67 = ashr i32 %66, 6
  %68 = sdiv i32 %59, -64
  %69 = add nsw i32 %68, %50
  %70 = add nsw i32 %69, %53
  %71 = sub nsw i32 %70, %62
  %72 = sdiv i32 %64, -64
  %73 = add nsw i32 %57, %54
  %74 = add nsw i32 %73, %72
  %75 = sub nsw i32 %74, %67
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %77 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %78 = tail call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %76, %"class.blink::ScrollableArea"* %77)
  %79 = extractvalue { i64, i64 } %78, 0
  %80 = trunc i64 %79 to i32
  %81 = lshr i64 %79, 32
  %82 = trunc i64 %81 to i32
  %83 = extractvalue { i64, i64 } %78, 1
  %84 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %85 = bitcast %"class.blink::ScrollableArea"* %84 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %86 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %85, align 8
  %87 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %86, i64 88
  %88 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %87, align 8
  %89 = tail call %"class.blink::LayoutBox"* %88(%"class.blink::ScrollableArea"* %84) #12
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 4
  %91 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %90 to i96*
  %92 = load i96, i96* %91, align 4
  %93 = trunc i96 %92 to i32
  %94 = icmp slt i32 %93, 0
  %95 = select i1 %94, i32 0, i32 %71
  %96 = select i1 %94, i32 %75, i32 0
  %97 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 8
  %98 = load i8, i8* %97, align 2, !range !2
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %181, label %100

100:                                              ; preds = %46
  %101 = icmp slt i32 %95, -33554431
  br i1 %101, label %107, label %102

102:                                              ; preds = %100
  %103 = icmp sgt i32 %95, 33554432
  %104 = shl i32 %95, 6
  %105 = sub i32 0, %104
  %106 = select i1 %103, i32 -2147483648, i32 %105
  br label %107

107:                                              ; preds = %102, %100
  %108 = phi i32 [ 2147483647, %100 ], [ %106, %102 ]
  %109 = icmp slt i32 %96, -33554431
  br i1 %109, label %115, label %110

110:                                              ; preds = %107
  %111 = icmp sgt i32 %96, 33554432
  %112 = shl i32 %96, 6
  %113 = sub i32 0, %112
  %114 = select i1 %111, i32 -2147483648, i32 %113
  br label %115

115:                                              ; preds = %110, %107
  %116 = phi i32 [ 2147483647, %107 ], [ %114, %110 ]
  %117 = icmp slt i32 %108, 0
  %118 = select i1 %117, i32 -2147483648, i32 2147483647
  %119 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %80, i32 %108) #12
  %120 = extractvalue { i32, i1 } %119, 1
  %121 = extractvalue { i32, i1 } %119, 0
  %122 = select i1 %120, i32 %118, i32 %121, !prof !3
  %123 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %116) #12
  br i1 %94, label %124, label %142

124:                                              ; preds = %115
  %125 = extractvalue { i32, i1 } %123, 1
  %126 = icmp slt i32 %116, 0
  %127 = select i1 %126, i32 -2147483648, i32 2147483647
  %128 = extractvalue { i32, i1 } %123, 0
  %129 = select i1 %125, i32 %127, i32 %128, !prof !3
  %130 = lshr i64 %83, 32
  %131 = trunc i64 %130 to i32
  %132 = icmp slt i32 %131, 0
  %133 = select i1 %132, i32 -2147483648, i32 2147483647
  %134 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %129, i32 %131) #12
  %135 = extractvalue { i32, i1 } %134, 1
  %136 = extractvalue { i32, i1 } %134, 0
  %137 = select i1 %135, i32 %133, i32 %136, !prof !3
  %138 = icmp slt i32 %137, 0
  br i1 %138, label %139, label %181

139:                                              ; preds = %124
  %140 = sdiv i32 %137, 64
  %141 = add nsw i32 %140, %96
  br label %181

142:                                              ; preds = %115
  %143 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 5, i32 0
  %144 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %144, i64 0, i32 0, i32 9
  %146 = bitcast [20 x i8]* %145 to i160*
  %147 = load i160, i160* %146, align 8
  %148 = and i160 %147, 15211807202738752817960438464512
  %149 = icmp eq i160 %148, 5070602400912917605986812821504
  br i1 %149, label %150, label %169

150:                                              ; preds = %142
  %151 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %4, align 8
  %152 = tail call fastcc { i64, i64 } @_ZN5blinkL14GetVisibleRectEPNS_14ScrollableAreaE(%"class.blink::ScrollableArea"* %151)
  %153 = extractvalue { i64, i64 } %152, 0
  %154 = trunc i64 %153 to i32
  %155 = extractvalue { i64, i64 } %152, 1
  %156 = trunc i64 %155 to i32
  %157 = icmp slt i32 %156, 0
  %158 = select i1 %157, i32 -2147483648, i32 2147483647
  %159 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %154, i32 %156) #12
  %160 = extractvalue { i32, i1 } %159, 1
  %161 = extractvalue { i32, i1 } %159, 0
  %162 = select i1 %160, i32 %158, i32 %161, !prof !3
  %163 = icmp sgt i32 %122, %162
  br i1 %163, label %164, label %181

164:                                              ; preds = %150
  %165 = sdiv i32 %162, 64
  %166 = sdiv i32 %122, -64
  %167 = add nsw i32 %166, %95
  %168 = add nsw i32 %167, %165
  br label %181

169:                                              ; preds = %142
  %170 = trunc i64 %83 to i32
  %171 = icmp slt i32 %170, 0
  %172 = select i1 %171, i32 -2147483648, i32 2147483647
  %173 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %122, i32 %170) #12
  %174 = extractvalue { i32, i1 } %173, 1
  %175 = extractvalue { i32, i1 } %173, 0
  %176 = select i1 %174, i32 %172, i32 %175, !prof !3
  %177 = icmp slt i32 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %169
  %179 = sdiv i32 %176, 64
  %180 = add nsw i32 %179, %95
  br label %181

181:                                              ; preds = %150, %164, %46, %139, %124, %169, %178
  %182 = phi i32 [ %95, %46 ], [ 0, %139 ], [ 0, %124 ], [ %180, %178 ], [ %71, %169 ], [ %168, %164 ], [ %71, %150 ]
  %183 = phi i32 [ %96, %46 ], [ %141, %139 ], [ %75, %124 ], [ 0, %178 ], [ 0, %169 ], [ 0, %164 ], [ 0, %150 ]
  %184 = load i96, i96* %91, align 4
  %185 = trunc i96 %184 to i32
  %186 = icmp slt i32 %185, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %89, i64 0, i32 0, i32 0, i32 5, i32 0
  %189 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %188, align 8
  %190 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %189, i64 0, i32 0, i32 9
  %191 = bitcast [20 x i8]* %190 to i160*
  %192 = load i160, i160* %191, align 8
  %193 = and i160 %192, 15211807202738752817960438464512
  %194 = icmp eq i160 %193, 5070602400912917605986812821504
  %195 = sub nsw i32 0, %182
  %196 = select i1 %194, i32 %195, i32 %182
  br label %197

197:                                              ; preds = %187, %181
  %198 = phi i32 [ %182, %181 ], [ %196, %187 ]
  %199 = zext i32 %183 to i64
  %200 = shl nuw i64 %199, 32
  %201 = zext i32 %198 to i64
  %202 = or i64 %200, %201
  ret i64 %202
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor6AdjustEv(%"class.blink::ScrollAnchor"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = bitcast <2 x float>* %2 to %"class.blink::FloatSize"*
  %4 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 1, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %123, label %7

7:                                                ; preds = %1
  store i8 0, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = icmp eq %"class.blink::LayoutObject"* %9, null
  br i1 %10, label %123, label %11

11:                                               ; preds = %7
  %12 = tail call i64 @_ZNK5blink12ScrollAnchor17ComputeAdjustmentEv(%"class.blink::ScrollAnchor"* %0)
  %13 = trunc i64 %12 to i32
  %14 = lshr i64 %12, 32
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 8
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %11
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %8, align 8
  %21 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %22 = bitcast %"class.WTF::String"* %21 to i64*
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  store i64 0, i64* %22, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %39

39:                                               ; preds = %38, %35, %19
  %40 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %20) #12
  br label %42

42:                                               ; preds = %41, %39, %11
  %43 = or i64 %14, %12
  %44 = trunc i64 %43 to i32
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %123, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 6
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %73, label %50

50:                                               ; preds = %46
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %8, align 8
  %52 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %53 = bitcast %"class.WTF::String"* %52 to i64*
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %52, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  store i64 0, i64* %53, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #12
  br label %70

70:                                               ; preds = %69, %66, %50
  %71 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %71, label %123, label %72

72:                                               ; preds = %70
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %51) #12
  br label %123

73:                                               ; preds = %46
  %74 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %74, align 8
  %76 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #12
  %77 = bitcast %"class.blink::ScrollableArea"* %75 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %78 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %77, align 8
  %79 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %78, i64 47
  %80 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %79, align 8
  %81 = tail call <2 x float> %80(%"class.blink::ScrollableArea"* %75) #12
  %82 = sitofp i32 %13 to float
  %83 = sitofp i32 %15 to float
  %84 = extractelement <2 x float> %81, i32 0
  %85 = fadd float %84, %82
  %86 = extractelement <2 x float> %81, i32 1
  %87 = fadd float %86, %83
  %88 = insertelement <2 x float> undef, float %85, i32 0
  %89 = insertelement <2 x float> %88, float %87, i32 1
  store <2 x float> %89, <2 x float>* %2, align 8
  %90 = bitcast %"class.blink::ScrollableArea"* %75 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %91 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %90, align 8
  %92 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %91, i64 5
  %93 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %92, align 8
  call void %93(%"class.blink::ScrollableArea"* %75, %"class.blink::FloatSize"* nonnull dereferenceable(8) %3, i32 4, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #12
  %94 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %74, align 8
  %95 = bitcast %"class.blink::ScrollableArea"* %94 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %96 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %95, align 8
  %97 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %96, i64 88
  %98 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %97, align 8
  %99 = call %"class.blink::LayoutBox"* %98(%"class.blink::ScrollableArea"* %94) #12
  %100 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %99, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %101 = load %"class.blink::Node"*, %"class.blink::Node"** %100, align 8
  %102 = icmp eq %"class.blink::Node"* %101, null
  br i1 %102, label %103, label %112

103:                                              ; preds = %73
  %104 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %99, i64 0, i32 0, i32 0
  br label %105

105:                                              ; preds = %103, %105
  %106 = phi %"class.blink::LayoutObject"* [ %108, %105 ], [ %104, %103 ]
  %107 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %106, i64 0, i32 7
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  %109 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %108, i64 0, i32 6, i32 0, i32 0
  %110 = load %"class.blink::Node"*, %"class.blink::Node"** %109, align 8
  %111 = icmp eq %"class.blink::Node"* %110, null
  br i1 %111, label %105, label %112

112:                                              ; preds = %105, %73
  %113 = phi %"class.blink::Node"* [ %101, %73 ], [ %110, %105 ]
  %114 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %113, i64 0, i32 3, i32 0, i32 0
  %115 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %114, align 8
  %116 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %115, i64 0, i32 2, i32 0, i32 0
  %117 = load %"class.blink::Document"*, %"class.blink::Document"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %117, i64 0, i32 2
  %119 = bitcast %"class.blink::UseCounter"* %118 to void (%"class.blink::UseCounter"*, i32)***
  %120 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %120, i64 3
  %122 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %121, align 8
  call void %122(%"class.blink::UseCounter"* %118, i32 1278) #12
  br label %123

123:                                              ; preds = %42, %112, %70, %72, %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorE(%"class.blink::ScrollAnchor"*, %"struct.blink::SerializedAnchor"* nocapture readonly dereferenceable(24)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %4 = alloca %"class.WTF::AtomicString", align 8
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.blink::FloatSize"*
  %7 = alloca %"class.blink::FloatSize", align 4
  %8 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %10 = icmp eq %"class.blink::ScrollableArea"* %9, null
  br i1 %10, label %317, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %1, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %317, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %317, label %19

19:                                               ; preds = %15
  %20 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter to i8*) acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26, !prof !5

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter) #12
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  tail call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18, i64 0, i64 0), i32 0, i32 10000000, i32 50) #12
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter) #12
  br label %26

26:                                               ; preds = %22, %25, %19
  %27 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %28 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %27, i64 0, i32 0
  %29 = bitcast %"class.base::DefaultTickClock"* %27 to i64 (%"class.base::TickClock"*)***
  %30 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %30, i64 2
  %32 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %31, align 8
  %33 = tail call i64 %32(%"class.base::TickClock"* %28) #12
  %34 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %35 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutObject"* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %26
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %39 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"* %40) #12
  br i1 %41, label %310, label %42

42:                                               ; preds = %37
  %43 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %44 = icmp eq %"class.blink::LayoutObject"* %43, null
  br i1 %44, label %45, label %310

45:                                               ; preds = %26, %42
  %46 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %47 = bitcast %"class.blink::ScrollableArea"* %46 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %48 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %48, i64 88
  %50 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %49, align 8
  %51 = tail call %"class.blink::LayoutBox"* %50(%"class.blink::ScrollableArea"* %46) #12
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %51, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %55, label %64

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %51, i64 0, i32 0, i32 0
  br label %57

57:                                               ; preds = %55, %57
  %58 = phi %"class.blink::LayoutObject"* [ %60, %57 ], [ %56, %55 ]
  %59 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %58, i64 0, i32 7
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %57, label %64

64:                                               ; preds = %57, %45
  %65 = phi %"class.blink::Node"* [ %53, %45 ], [ %62, %57 ]
  %66 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %65, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %67, i64 0, i32 2, i32 0, i32 0
  %69 = load %"class.blink::Document"*, %"class.blink::Document"** %68, align 8
  %70 = bitcast %"class.blink::DummyExceptionStateForTesting"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %70) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 56, i1 false)
  %71 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %72, align 8
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %73, align 2
  %74 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 1, i32 2
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 5, i32 0, i32 0
  %76 = bitcast %"class.WTF::StringImpl"** %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #12
  %77 = bitcast i8** %74 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 36, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %78 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %69, i64 0, i32 0
  %79 = bitcast %"class.WTF::AtomicString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #12
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %105, label %82

82:                                               ; preds = %64
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 acquire, align 4
  %85 = and i32 %84, 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %103, label %87

87:                                               ; preds = %82
  %88 = load atomic i32, i32* %83 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %105

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #12
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %91
  tail call void @llvm.trap() #12
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %105

103:                                              ; preds = %82
  %104 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %105

105:                                              ; preds = %64, %87, %101, %103
  %106 = phi %"class.WTF::StringImpl"* [ %104, %103 ], [ %80, %87 ], [ %80, %101 ], [ null, %64 ]
  %107 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %108 = bitcast %"class.WTF::AtomicString"* %4 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0
  %110 = call %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"* %78, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %4, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %109) #12
  %111 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %4, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %105
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load atomic i32, i32* %115 monotonic, align 4
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  br i1 %118, label %121, label %123

121:                                              ; preds = %114
  %122 = add i32 %120, -1
  store i32 %122, i32* %119, align 4
  br label %123

123:                                              ; preds = %121, %114
  %124 = phi i32 [ %122, %121 ], [ %120, %114 ]
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #12
  br label %127

127:                                              ; preds = %105, %123, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #12
  %128 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 4
  %129 = load i32, i32* %128, align 8
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %132, label %131

131:                                              ; preds = %127
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  br label %276

132:                                              ; preds = %127
  %133 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %110, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %272, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %110, i64 0, i32 1, i32 0
  %138 = bitcast <2 x float>* %5 to i8*
  %139 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %140 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %6, i64 0, i32 1
  %141 = bitcast %"class.blink::FloatSize"* %7 to i8*
  %142 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 0
  %143 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 1
  %144 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %1, i64 0, i32 1, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %1, i64 0, i32 1, i32 1, i32 0
  br label %146

146:                                              ; preds = %136, %267
  %147 = phi i32 [ 0, %136 ], [ %268, %267 ]
  %148 = call dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"* %137, i32 %147) #12
  %149 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %148, i64 0, i32 0, i32 0
  %150 = load %"class.blink::Element"*, %"class.blink::Element"** %149, align 8
  %151 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0, i32 1
  %152 = load i32, i32* %151, align 8
  %153 = and i32 %152, 1
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %150, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %154, label %160, label %156

156:                                              ; preds = %146
  %157 = bitcast %"class.blink::NodeData"** %155 to %"class.blink::NodeRareData"**
  %158 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %157, align 8
  %159 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %158, i64 0, i32 1, i32 0, i32 0
  br label %162

160:                                              ; preds = %146
  %161 = bitcast %"class.blink::NodeData"** %155 to %"class.blink::NodeRenderingData"**
  br label %162

162:                                              ; preds = %156, %160
  %163 = phi %"class.blink::NodeRenderingData"** [ %159, %156 ], [ %161, %160 ]
  %164 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %164, i64 0, i32 1
  %166 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %165, align 8
  %167 = icmp eq %"class.blink::LayoutObject"* %166, null
  br i1 %167, label %267, label %168

168:                                              ; preds = %162
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #12
  store float 0xFFFFFFFFE0000000, float* %139, align 8
  store float 0xFFFFFFFFE0000000, float* %140, align 4
  %169 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %170 = bitcast %"class.blink::ScrollableArea"* %169 to <2 x float> (%"class.blink::ScrollableArea"*)***
  %171 = load <2 x float> (%"class.blink::ScrollableArea"*)**, <2 x float> (%"class.blink::ScrollableArea"*)*** %170, align 8
  %172 = getelementptr inbounds <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %171, i64 47
  %173 = load <2 x float> (%"class.blink::ScrollableArea"*)*, <2 x float> (%"class.blink::ScrollableArea"*)** %172, align 8
  %174 = call <2 x float> %173(%"class.blink::ScrollableArea"* %169) #12
  store <2 x float> %174, <2 x float>* %5, align 8
  %175 = call { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"* nonnull %166, i32 0) #12
  %176 = extractvalue { <2 x float>, <2 x float> } %175, 0
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %166, i64 0, i32 5, i32 0
  %178 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %177, align 8
  %179 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %178, i64 0, i32 0, i32 9
  %180 = bitcast [20 x i8]* %179 to i160*
  %181 = load i160, i160* %180, align 8
  %182 = and i160 %181, 15211807202738752817960438464512
  %183 = icmp eq i160 %182, 5070602400912917605986812821504
  br i1 %183, label %184, label %190

184:                                              ; preds = %168
  %185 = extractvalue { <2 x float>, <2 x float> } %175, 1
  %186 = extractelement <2 x float> %176, i32 0
  %187 = extractelement <2 x float> %185, i32 0
  %188 = fadd float %186, %187
  %189 = insertelement <2 x float> %176, float %188, i32 0
  br label %190

190:                                              ; preds = %168, %184
  %191 = phi <2 x float> [ %189, %184 ], [ %176, %168 ]
  %192 = extractelement <2 x float> %191, i32 0
  %193 = load float, float* %139, align 8
  %194 = fadd float %192, %193
  %195 = extractelement <2 x float> %191, i32 1
  %196 = load float, float* %140, align 4
  %197 = fadd float %195, %196
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #12
  %198 = load i32, i32* %144, align 4
  %199 = sdiv i32 %198, 64
  %200 = srem i32 %198, 64
  %201 = add nsw i32 %200, 32
  %202 = ashr i32 %201, 6
  %203 = add nsw i32 %202, %199
  %204 = load i32, i32* %145, align 4
  %205 = sdiv i32 %204, 64
  %206 = srem i32 %204, 64
  %207 = add nsw i32 %206, 32
  %208 = ashr i32 %207, 6
  %209 = add nsw i32 %208, %205
  %210 = sitofp i32 %203 to float
  %211 = sitofp i32 %209 to float
  %212 = fsub float %194, %210
  store float %212, float* %142, align 4
  %213 = fsub float %197, %211
  store float %213, float* %143, align 4
  %214 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %215 = bitcast %"class.blink::ScrollableArea"* %214 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %216 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %215, align 8
  %217 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %216, i64 5
  %218 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %217, align 8
  call void %218(%"class.blink::ScrollableArea"* %214, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7, i32 4, i32 1) #12
  call void @_ZN5blink12ScrollAnchor10FindAnchorEv(%"class.blink::ScrollAnchor"* %0)
  %219 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %34, align 8
  %220 = icmp eq %"class.blink::LayoutObject"* %219, null
  br i1 %220, label %261, label %221

221:                                              ; preds = %190
  %222 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %224 = icmp eq %"class.WTF::StringImpl"* %223, null
  br i1 %224, label %242, label %225

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %242

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %223, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #12
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %240, !prof !3

239:                                              ; preds = %230
  call void @llvm.trap() #12
  unreachable

240:                                              ; preds = %230
  %241 = trunc i33 %236 to i32
  store i32 %241, i32* %231, align 4
  br label %242

242:                                              ; preds = %240, %225, %221
  %243 = ptrtoint %"class.WTF::StringImpl"* %223 to i64
  %244 = bitcast %"class.WTF::String"* %222 to i64*
  %245 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %222, i64 0, i32 0, i32 0
  %246 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %245, align 8
  store i64 %243, i64* %244, align 8
  %247 = icmp eq %"class.WTF::StringImpl"* %246, null
  br i1 %247, label %271, label %248

248:                                              ; preds = %242
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = and i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %246, i64 0, i32 0
  %254 = load i32, i32* %253, align 4
  br i1 %252, label %255, label %257

255:                                              ; preds = %248
  %256 = add i32 %254, -1
  store i32 %256, i32* %253, align 4
  br label %257

257:                                              ; preds = %255, %248
  %258 = phi i32 [ %256, %255 ], [ %254, %248 ]
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %271

260:                                              ; preds = %257
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %246) #12
  br label %271

261:                                              ; preds = %190
  %262 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %8, align 8
  %263 = bitcast %"class.blink::ScrollableArea"* %262 to void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)***
  %264 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)**, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*** %263, align 8
  %265 = getelementptr inbounds void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %264, i64 5
  %266 = load void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)*, void (%"class.blink::ScrollableArea"*, %"class.blink::FloatSize"*, i32, i32)** %265, align 8
  call void %266(%"class.blink::ScrollableArea"* %262, %"class.blink::FloatSize"* nonnull dereferenceable(8) %6, i32 4, i32 1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12
  br label %267

267:                                              ; preds = %162, %261
  %268 = add nuw i32 %147, 1
  %269 = load i32, i32* %133, align 4
  %270 = icmp ult i32 %268, %269
  br i1 %270, label %146, label %272

271:                                              ; preds = %242, %257, %260
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12
  br label %272

272:                                              ; preds = %267, %271, %132
  %273 = phi i1 [ true, %271 ], [ false, %132 ], [ false, %267 ]
  %274 = load i32, i32* %128, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %278, label %276

276:                                              ; preds = %131, %272
  %277 = phi i1 [ false, %131 ], [ %273, %272 ]
  call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* nonnull %109) #12
  br label %278

278:                                              ; preds = %272, %276
  %279 = phi i1 [ %273, %272 ], [ %277, %276 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %71, align 8
  %280 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %281 = load i64*, i64** %280, align 8
  %282 = icmp eq i64* %281, null
  br i1 %282, label %293, label %283

283:                                              ; preds = %278
  %284 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %3, i64 0, i32 0, i32 3
  %285 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %284, align 8
  %286 = bitcast %"class.v8::Isolate"* %285 to %"class.v8::internal::Isolate"*
  %287 = load i64, i64* %281, align 8
  %288 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %286, i64 %287) #12
  %289 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %285) #12
  br i1 %289, label %293, label %290

290:                                              ; preds = %283
  %291 = bitcast i64* %288 to %"class.v8::Value"*
  %292 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %285, %"class.v8::Value"* %291) #12
  br label %293

293:                                              ; preds = %290, %283, %278
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %305

303:                                              ; preds = %296
  %304 = add i32 %302, -1
  store i32 %304, i32* %301, align 4
  br label %305

305:                                              ; preds = %303, %296
  %306 = phi i32 [ %304, %303 ], [ %302, %296 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #12
  br label %309

309:                                              ; preds = %293, %305, %308
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %70) #12
  br label %310

310:                                              ; preds = %42, %37, %309
  %311 = phi i1 [ %279, %309 ], [ true, %37 ], [ false, %42 ]
  %312 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %29, align 8
  %313 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %312, i64 2
  %314 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %313, align 8
  %315 = call i64 %314(%"class.base::TickClock"* %28) #12
  %316 = sub nsw i64 %315, %33
  call void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink12ScrollAnchor13RestoreAnchorERKNS_16SerializedAnchorEE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i64 %316) #12
  br label %317

317:                                              ; preds = %15, %2, %11, %310
  %318 = phi i1 [ %311, %310 ], [ false, %15 ], [ false, %2 ], [ false, %11 ]
  ret i1 %318
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare %"class.blink::StaticNodeTypeList"* @_ZN5blink13ContainerNode16QuerySelectorAllERKN3WTF12AtomicStringERNS_14ExceptionStateE(%"class.blink::ContainerNode"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject28AbsoluteBoundingBoxFloatRectEj(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor19GetSerializedAnchorEv(%"struct.blink::SerializedAnchor"* noalias nocapture sret, %"class.blink::ScrollAnchor"*) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::StringBuilder", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::AtomicString", align 8
  %10 = alloca %"class.WTF::StringAppend.2148", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = alloca %"class.WTF::Vector.630", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringBuilder", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %17, align 8
  %19 = bitcast %"class.blink::ScrollableArea"* %18 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %20 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %20, i64 88
  %22 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %21, align 8
  %23 = tail call %"class.blink::LayoutBox"* %22(%"class.blink::ScrollableArea"* %18) #12
  %24 = icmp eq %"class.blink::LayoutBox"* %23, null
  br i1 %24, label %46, label %25

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %23, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %27 = load %"class.blink::Node"*, %"class.blink::Node"** %26, align 8
  %28 = icmp eq %"class.blink::Node"* %27, null
  br i1 %28, label %29, label %38

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %23, i64 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %29, %31
  %32 = phi %"class.blink::LayoutObject"* [ %34, %31 ], [ %30, %29 ]
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %32, i64 0, i32 7
  %34 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %34, i64 0, i32 6, i32 0, i32 0
  %36 = load %"class.blink::Node"*, %"class.blink::Node"** %35, align 8
  %37 = icmp eq %"class.blink::Node"* %36, null
  br i1 %37, label %31, label %38

38:                                               ; preds = %31, %25
  %39 = phi %"class.blink::Node"* [ %27, %25 ], [ %36, %31 ]
  %40 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %39, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %41, i64 0, i32 2, i32 0, i32 0
  %43 = load %"class.blink::Document"*, %"class.blink::Document"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %43, i64 0, i32 59, i32 0, i32 0
  %45 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %44, align 8
  tail call void @_ZN5blink11StyleEngine17UpdateActiveStyleEv(%"class.blink::StyleEngine"* %45) #12
  br label %46

46:                                               ; preds = %2, %38
  %47 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 5
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %47, i64 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %127, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 1
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %127, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 1
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %17, align 8
  %59 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = tail call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %57, %"class.blink::ScrollableArea"* %58) #12
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = trunc i64 %63 to i32
  switch i32 %60, label %77 [
    i32 0, label %65
    i32 1, label %68
  ]

65:                                               ; preds = %55
  %66 = trunc i64 %62 to i32
  %67 = and i64 %62, -4294967296
  br label %77

68:                                               ; preds = %55
  %69 = trunc i64 %62 to i32
  %70 = and i64 %62, -4294967296
  %71 = icmp slt i32 %64, 0
  %72 = select i1 %71, i32 -2147483648, i32 2147483647
  %73 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %64) #12
  %74 = extractvalue { i32, i1 } %73, 1
  %75 = extractvalue { i32, i1 } %73, 0
  %76 = select i1 %74, i32 %72, i32 %75, !prof !3
  br label %77

77:                                               ; preds = %68, %65, %55
  %78 = phi i32 [ %76, %68 ], [ %66, %65 ], [ 0, %55 ]
  %79 = phi i64 [ %70, %68 ], [ %67, %65 ], [ 0, %55 ]
  %80 = bitcast %"class.blink::ScrollableArea"* %58 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %81 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %81, i64 88
  %83 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %82, align 8
  %84 = tail call %"class.blink::LayoutBox"* %83(%"class.blink::ScrollableArea"* %58) #12
  %85 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %84, i64 0, i32 0, i32 0, i32 5, i32 0
  %86 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %86, i64 0, i32 0, i32 9
  %88 = bitcast [20 x i8]* %87 to i160*
  %89 = load i160, i160* %88, align 8
  %90 = and i160 %89, 15211807202738752817960438464512
  %91 = icmp eq i160 %90, 5070602400912917605986812821504
  br i1 %91, label %92, label %99, !prof !3

92:                                               ; preds = %77
  %93 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %84, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::LayoutBox"* %84 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %95 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %94, align 8
  %96 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %95, i64 106
  %97 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %96, align 8
  %98 = tail call i32 %97(%"class.blink::LayoutObject"* %93, i32 %78, i32 0, %"class.blink::LayoutBox"* null) #12
  br label %99

99:                                               ; preds = %77, %92
  %100 = phi i32 [ %98, %92 ], [ %78, %77 ]
  %101 = zext i32 %100 to i64
  %102 = or i64 %79, %101
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %104 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %104, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %105, label %123, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %123

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  %114 = zext i32 %113 to i33
  %115 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %114, i33 1) #12
  %116 = extractvalue { i33, i1 } %115, 1
  %117 = extractvalue { i33, i1 } %115, 0
  %118 = icmp slt i33 %117, 0
  %119 = or i1 %116, %118
  br i1 %119, label %120, label %121, !prof !3

120:                                              ; preds = %111
  tail call void @llvm.trap() #12
  unreachable

121:                                              ; preds = %111
  %122 = trunc i33 %117 to i32
  store i32 %122, i32* %112, align 4
  br label %123

123:                                              ; preds = %99, %106, %121
  %124 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 1
  %125 = bitcast %"class.blink::LayoutPoint"* %124 to i64*
  store i64 %102, i64* %125, align 8
  %126 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 2
  store i64 0, i64* %126, align 8
  br label %1501

127:                                              ; preds = %46, %51
  %128 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 1
  %129 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %128, align 8
  %130 = icmp eq %"class.blink::LayoutObject"* %129, null
  br i1 %130, label %131, label %136

131:                                              ; preds = %127
  tail call void @_ZN5blink12ScrollAnchor10FindAnchorEv(%"class.blink::ScrollAnchor"* %1)
  %132 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %128, align 8
  %133 = icmp eq %"class.blink::LayoutObject"* %132, null
  br i1 %133, label %134, label %136

134:                                              ; preds = %131
  %135 = bitcast %"struct.blink::SerializedAnchor"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  br label %1501

136:                                              ; preds = %131, %127
  %137 = phi %"class.blink::LayoutObject"* [ %132, %131 ], [ %129, %127 ]
  %138 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %137, i64 0, i32 4
  %139 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %138 to i96*
  %140 = load i96, i96* %139, align 4
  %141 = and i96 %140, 16777216
  %142 = icmp eq i96 %141, 0
  br i1 %142, label %143, label %147

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %137, i64 0, i32 6, i32 0, i32 0
  %145 = load %"class.blink::Node"*, %"class.blink::Node"** %144, align 8
  %146 = bitcast %"class.blink::Node"* %145 to i8 (%"class.blink::Node"*)***
  br label %147

147:                                              ; preds = %136, %143
  %148 = phi i8 (%"class.blink::Node"*)*** [ %146, %143 ], [ null, %136 ]
  %149 = phi %"class.blink::Node"* [ %145, %143 ], [ null, %136 ]
  %150 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %148, align 8
  %151 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %150, i64 34
  %152 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %151, align 8
  %153 = tail call zeroext i8 %152(%"class.blink::Node"* %149) #12
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %155, label %1347

155:                                              ; preds = %147
  %156 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), align 16
  %157 = and i8 %156, 25
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %165, label %159, !prof !4

159:                                              ; preds = %155
  %160 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %161 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #12
  %162 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %163 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %163, i64* %162, align 8
  %164 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %160, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* null, i32 0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #12
  br label %165

165:                                              ; preds = %159, %155
  %166 = phi i8* [ null, %155 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 10, i32 0), %159 ]
  %167 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %155 ], [ getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0), %159 ]
  %168 = phi i64 [ -6148914691236517206, %155 ], [ %164, %159 ]
  %169 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter to i8*) acquire, align 8
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %171, label %175, !prof !5

171:                                              ; preds = %165
  %172 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter) #12
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %175, label %174

174:                                              ; preds = %171
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.3, i64 0, i64 0), i32 0, i32 10000000, i32 50) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter) #12
  br label %175

175:                                              ; preds = %174, %171, %165
  %176 = call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #12
  %177 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %176, i64 0, i32 0
  %178 = bitcast %"class.base::DefaultTickClock"* %176 to i64 (%"class.base::TickClock"*)***
  %179 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %178, align 8
  %180 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %179, i64 2
  %181 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %180, align 8
  %182 = call i64 %181(%"class.base::TickClock"* %177) #12
  %183 = bitcast %"class.WTF::Vector.630"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %183) #12
  %184 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %12, i64 0, i32 0, i32 0, i32 0
  %185 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %12, i64 0, i32 0, i32 0, i32 1
  %186 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %12, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 0, i64 16, i1 false) #12
  %187 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %149, i64 0, i32 1
  %188 = load i32, i32* %187, align 8
  %189 = and i32 %188, 12
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %193

191:                                              ; preds = %175
  %192 = bitcast %"class.blink::Node"* %149 to %"class.blink::Element"*
  br label %209

193:                                              ; preds = %175
  %194 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %149) #12
  %195 = icmp eq %"class.blink::ContainerNode"* %194, null
  br i1 %195, label %206, label %196

196:                                              ; preds = %193, %202
  %197 = phi %"class.blink::ContainerNode"* [ %204, %202 ], [ %194, %193 ]
  %198 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %197, i64 0, i32 0, i32 1
  %199 = load i32, i32* %198, align 8
  %200 = and i32 %199, 12
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %206, label %202

202:                                              ; preds = %196
  %203 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %197, i64 0, i32 0
  %204 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %203) #12
  %205 = icmp eq %"class.blink::ContainerNode"* %204, null
  br i1 %205, label %206, label %196

206:                                              ; preds = %202, %196, %193
  %207 = phi %"class.blink::ContainerNode"* [ null, %193 ], [ %197, %196 ], [ null, %202 ]
  %208 = bitcast %"class.blink::ContainerNode"* %207 to %"class.blink::Element"*
  br label %209

209:                                              ; preds = %206, %191
  %210 = phi %"class.blink::Element"* [ %192, %191 ], [ %208, %206 ]
  %211 = icmp eq %"class.blink::Element"* %210, null
  br i1 %211, label %1223, label %212

212:                                              ; preds = %209
  %213 = bitcast %"class.WTF::String"* %13 to i8*
  %214 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names7kIdAttrE, align 8
  %215 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %214, i64 0, i32 0, i32 0
  %216 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %217 = bitcast %"class.WTF::StringBuilder"* %4 to i8*
  %218 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 0, i32 0, i32 0
  %219 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 1
  %220 = bitcast %union.anon.2128* %219 to i8*
  %221 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 2
  %222 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 3
  %223 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %4, i64 0, i32 4
  %224 = bitcast %"class.WTF::StringView"* %5 to i8*
  %225 = bitcast %"class.WTF::StringView"* %5 to i64*
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %228 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  %229 = bitcast %"class.WTF::AtomicString"* %9 to i8*
  %230 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %231 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0, i32 0
  %232 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %9, i64 0, i32 0, i32 0, i32 0
  %233 = bitcast %"class.WTF::StringAppend.2148"* %10 to i8*
  %234 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  %235 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 11
  %236 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  %237 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 3
  %238 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 12
  %239 = ptrtoint i8* %235 to i64
  %240 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 10
  %241 = ptrtoint i8* %240 to i64
  %242 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 9
  %243 = bitcast i8** %236 to i64*
  %244 = ptrtoint i8* %238 to i64
  %245 = bitcast %"class.WTF::StringAppend.2148"* %10 to i64*
  %246 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %247 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %10, i64 0, i32 1
  %248 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  %249 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  %250 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %251 = bitcast %union.anon.2128* %250 to i8*
  %252 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  %253 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  %254 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  %255 = bitcast %"class.WTF::String"* %7 to i8*
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %258 = ptrtoint i8* %242 to i64
  %259 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 8
  %260 = ptrtoint i8* %259 to i64
  %261 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 7
  br label %262

262:                                              ; preds = %1221, %212
  %263 = phi %"class.blink::Element"* [ %210, %212 ], [ %1222, %1221 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #12
  %264 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 3, i32 0, i32 0
  %265 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %264, align 8
  %266 = icmp eq %"class.blink::ElementData"* %265, null
  br i1 %266, label %507, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %265, i64 0, i32 3, i32 0, i32 0, i32 0
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %268, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %507, label %271

271:                                              ; preds = %267
  %272 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %273 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %272, align 8
  %274 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %273, i64 0, i32 2, i32 0, i32 0
  %275 = load %"class.blink::Document"*, %"class.blink::Document"** %274, align 8
  %276 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %265, i64 0, i32 0, i32 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = and i32 %277, 1
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %287, label %280

280:                                              ; preds = %271
  %281 = bitcast %"class.blink::ElementData"* %265 to %"class.blink::UniqueElementData"*
  %282 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %265, i64 1, i32 1
  %283 = bitcast %"class.blink::Member.354"* %282 to %"class.blink::Attribute"**
  %284 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %281, i64 0, i32 2, i32 0, i32 0, i32 2
  %286 = load i32, i32* %285, align 4
  br label %292

287:                                              ; preds = %271
  %288 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %265, i64 1
  %289 = bitcast %"class.blink::ElementData"* %288 to %"class.blink::Attribute"*
  %290 = lshr i32 %277, 1
  %291 = and i32 %290, 268435455
  br label %292

292:                                              ; preds = %287, %280
  %293 = phi %"class.blink::Attribute"* [ %289, %287 ], [ %284, %280 ]
  %294 = phi i32 [ %291, %287 ], [ %286, %280 ]
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %293, i64 %295
  %297 = icmp eq i32 %294, 0
  br i1 %297, label %324, label %298

298:                                              ; preds = %292
  %299 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %300 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %299, i64 0, i32 3, i32 0, i32 0, i32 0
  %301 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %299, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %302

302:                                              ; preds = %317, %298
  %303 = phi %"class.blink::Attribute"* [ %293, %298 ], [ %318, %317 ]
  %304 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %304, align 8
  %306 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %305, %299
  br i1 %306, label %320, label %307

307:                                              ; preds = %302
  %308 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %305, i64 0, i32 3, i32 0, i32 0, i32 0
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %308, align 8
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %309, %310
  br i1 %311, label %312, label %317

312:                                              ; preds = %307
  %313 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %305, i64 0, i32 4, i32 0, i32 0, i32 0
  %314 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %314, %315
  br i1 %316, label %320, label %317

317:                                              ; preds = %312, %307
  %318 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %303, i64 1
  %319 = icmp eq %"class.blink::Attribute"* %318, %296
  br i1 %319, label %324, label %302

320:                                              ; preds = %312, %302
  %321 = icmp eq %"class.blink::Attribute"* %303, null
  %322 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %303, i64 0, i32 1
  %323 = select i1 %321, %"class.WTF::AtomicString"* %216, %"class.WTF::AtomicString"* %322
  br label %324

324:                                              ; preds = %317, %320, %292
  %325 = phi %"class.WTF::AtomicString"* [ %216, %292 ], [ %323, %320 ], [ %216, %317 ]
  %326 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %275, i64 0, i32 1, i32 4, i32 0, i32 0
  %327 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %326, align 8
  %328 = icmp eq %"class.blink::TreeOrderedMap"* %327, null
  br i1 %328, label %400, label %329

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %327, i64 0, i32 0, i32 0, i32 0, i32 0
  %331 = load %"struct.WTF::KeyValuePair.338"*, %"struct.WTF::KeyValuePair.338"** %330, align 8
  %332 = icmp eq %"struct.WTF::KeyValuePair.338"* %331, null
  %333 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %327, i64 0, i32 0, i32 0, i32 0, i32 1
  %334 = load i32, i32* %333, align 8
  br i1 %332, label %386, label %335

335:                                              ; preds = %329
  %336 = add i32 %334, -1
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %325, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %338, align 8
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %339, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %341 = load atomic i32, i32* %340 monotonic, align 4
  %342 = lshr i32 %341, 8
  %343 = and i32 %342, %336
  %344 = zext i32 %343 to i64
  %345 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %331, i64 %344
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %345, i64 0, i32 0, i32 0, i32 0, i32 0
  %347 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %346, align 8
  %348 = icmp eq %"class.WTF::StringImpl"* %347, null
  br i1 %348, label %386, label %349

349:                                              ; preds = %335
  %350 = xor i32 %342, -1
  %351 = lshr i32 %341, 31
  %352 = add nsw i32 %351, %350
  %353 = shl i32 %352, 12
  %354 = xor i32 %353, %352
  %355 = lshr i32 %354, 7
  %356 = xor i32 %355, %354
  %357 = shl i32 %356, 2
  %358 = xor i32 %357, %356
  %359 = lshr i32 %358, 20
  %360 = xor i32 %359, %358
  %361 = or i32 %360, 1
  %362 = zext i32 %361 to i64
  br label %363

363:                                              ; preds = %373, %349
  %364 = phi %"struct.WTF::KeyValuePair.338"* [ %345, %349 ], [ %378, %373 ]
  %365 = phi i64 [ %344, %349 ], [ %377, %373 ]
  %366 = phi i64 [ 0, %349 ], [ %375, %373 ]
  %367 = bitcast %"struct.WTF::KeyValuePair.338"* %364 to i8**
  %368 = load i8*, i8** %367, align 8
  %369 = icmp ne i8* %368, inttoptr (i64 -1 to i8*)
  %370 = bitcast i8* %368 to %"class.WTF::StringImpl"*
  %371 = icmp eq %"class.WTF::StringImpl"* %339, %370
  %372 = and i1 %369, %371
  br i1 %372, label %382, label %373

373:                                              ; preds = %363
  %374 = icmp eq i64 %366, 0
  %375 = select i1 %374, i64 %362, i64 %366
  %376 = add i64 %375, %365
  %377 = and i64 %376, %337
  %378 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %331, i64 %377
  %379 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %378, i64 0, i32 0, i32 0, i32 0, i32 0
  %380 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %379, align 8
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %386, label %363

382:                                              ; preds = %363
  %383 = icmp eq %"struct.WTF::KeyValuePair.338"* %364, null
  br i1 %383, label %386, label %384

384:                                              ; preds = %382
  %385 = zext i32 %334 to i64
  br label %389

386:                                              ; preds = %373, %382, %335, %329
  %387 = zext i32 %334 to i64
  %388 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %331, i64 %387
  br label %389

389:                                              ; preds = %386, %384
  %390 = phi i64 [ %385, %384 ], [ %387, %386 ]
  %391 = phi %"struct.WTF::KeyValuePair.338"* [ %364, %384 ], [ %388, %386 ]
  %392 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %331, i64 %390
  %393 = icmp eq %"struct.WTF::KeyValuePair.338"* %391, %392
  br i1 %393, label %400, label %394

394:                                              ; preds = %389
  %395 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %391, i64 0, i32 1, i32 0, i32 0
  %396 = load %"class.blink::TreeOrderedMap::MapEntry"*, %"class.blink::TreeOrderedMap::MapEntry"** %395, align 8
  %397 = getelementptr inbounds %"class.blink::TreeOrderedMap::MapEntry", %"class.blink::TreeOrderedMap::MapEntry"* %396, i64 0, i32 1
  %398 = load i32, i32* %397, align 8
  %399 = icmp ugt i32 %398, 1
  br i1 %399, label %507, label %400

400:                                              ; preds = %394, %389, %324
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %217) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %217, i8 -86, i64 48, i1 false) #12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %218, align 8
  store i8 0, i8* %220, align 8
  store i32 0, i32* %221, align 8
  store i8 1, i8* %222, align 4
  store i8 0, i8* %223, align 1
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %224) #12
  %401 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %401, i64* %225, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i8** %226, align 8
  store i32 1, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %224) #12
  %402 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %264, align 8
  %403 = icmp eq %"class.blink::ElementData"* %402, null
  br i1 %403, label %457, label %404

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %402, i64 0, i32 3, i32 0, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %457, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %402, i64 0, i32 0, i32 0, i32 0
  %410 = load i32, i32* %409, align 4
  %411 = and i32 %410, 1
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %420, label %413

413:                                              ; preds = %408
  %414 = bitcast %"class.blink::ElementData"* %402 to %"class.blink::UniqueElementData"*
  %415 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %402, i64 1, i32 1
  %416 = bitcast %"class.blink::Member.354"* %415 to %"class.blink::Attribute"**
  %417 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %416, align 8
  %418 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %414, i64 0, i32 2, i32 0, i32 0, i32 2
  %419 = load i32, i32* %418, align 4
  br label %425

420:                                              ; preds = %408
  %421 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %402, i64 1
  %422 = bitcast %"class.blink::ElementData"* %421 to %"class.blink::Attribute"*
  %423 = lshr i32 %410, 1
  %424 = and i32 %423, 268435455
  br label %425

425:                                              ; preds = %420, %413
  %426 = phi %"class.blink::Attribute"* [ %422, %420 ], [ %417, %413 ]
  %427 = phi i32 [ %424, %420 ], [ %419, %413 ]
  %428 = zext i32 %427 to i64
  %429 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %426, i64 %428
  %430 = icmp eq i32 %427, 0
  br i1 %430, label %457, label %431

431:                                              ; preds = %425
  %432 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %433 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %432, i64 0, i32 3, i32 0, i32 0, i32 0
  %434 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %432, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %435

435:                                              ; preds = %450, %431
  %436 = phi %"class.blink::Attribute"* [ %426, %431 ], [ %451, %450 ]
  %437 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %436, i64 0, i32 0, i32 0, i32 0
  %438 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %437, align 8
  %439 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %438, %432
  br i1 %439, label %453, label %440

440:                                              ; preds = %435
  %441 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %438, i64 0, i32 3, i32 0, i32 0, i32 0
  %442 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %441, align 8
  %443 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  %444 = icmp eq %"class.WTF::StringImpl"* %442, %443
  br i1 %444, label %445, label %450

445:                                              ; preds = %440
  %446 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %438, i64 0, i32 4, i32 0, i32 0, i32 0
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %446, align 8
  %448 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %434, align 8
  %449 = icmp eq %"class.WTF::StringImpl"* %447, %448
  br i1 %449, label %453, label %450

450:                                              ; preds = %445, %440
  %451 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %436, i64 1
  %452 = icmp eq %"class.blink::Attribute"* %451, %429
  br i1 %452, label %457, label %435

453:                                              ; preds = %445, %435
  %454 = icmp eq %"class.blink::Attribute"* %436, null
  %455 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %436, i64 0, i32 1
  %456 = select i1 %454, %"class.WTF::AtomicString"* %216, %"class.WTF::AtomicString"* %455
  br label %457

457:                                              ; preds = %450, %453, %425, %404, %400
  %458 = phi %"class.WTF::AtomicString"* [ %216, %425 ], [ %216, %404 ], [ %216, %400 ], [ %456, %453 ], [ %216, %450 ]
  %459 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %458, i64 0, i32 0
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* dereferenceable(8) %459, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %4, i1 zeroext false) #12
  %460 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %461 = icmp eq %"class.WTF::StringImpl"* %460, null
  br i1 %461, label %490, label %462

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %464 = load atomic i32, i32* %463 monotonic, align 4
  %465 = and i32 %464, 2
  %466 = icmp eq i32 %465, 0
  %467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %460, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  br i1 %466, label %469, label %479

469:                                              ; preds = %462
  %470 = zext i32 %468 to i33
  %471 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %470, i33 1) #12
  %472 = extractvalue { i33, i1 } %471, 1
  %473 = extractvalue { i33, i1 } %471, 0
  %474 = icmp slt i33 %473, 0
  %475 = or i1 %472, %474
  br i1 %475, label %476, label %477, !prof !3

476:                                              ; preds = %469
  call void @llvm.trap() #12
  unreachable

477:                                              ; preds = %469
  %478 = trunc i33 %473 to i32
  store i32 %478, i32* %467, align 4
  br label %479

479:                                              ; preds = %477, %462
  %480 = phi i32 [ %478, %477 ], [ %468, %462 ]
  %481 = load atomic i32, i32* %463 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %486

484:                                              ; preds = %479
  %485 = add i32 %480, -1
  store i32 %485, i32* %467, align 4
  br label %486

486:                                              ; preds = %484, %479
  %487 = phi i32 [ %485, %484 ], [ %480, %479 ]
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %490

489:                                              ; preds = %486
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %460) #12
  br label %490

490:                                              ; preds = %489, %486, %457
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %4) #12
  %491 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %218, align 8
  %492 = icmp eq %"class.WTF::StringImpl"* %491, null
  br i1 %492, label %506, label %493

493:                                              ; preds = %490
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %495 = load atomic i32, i32* %494 monotonic, align 4
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  %498 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %491, i64 0, i32 0
  %499 = load i32, i32* %498, align 4
  br i1 %497, label %500, label %502

500:                                              ; preds = %493
  %501 = add i32 %499, -1
  store i32 %501, i32* %498, align 4
  br label %502

502:                                              ; preds = %500, %493
  %503 = phi i32 [ %501, %500 ], [ %499, %493 ]
  %504 = icmp eq i32 %503, 0
  br i1 %504, label %505, label %506

505:                                              ; preds = %502
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %491) #12
  br label %506

506:                                              ; preds = %505, %502, %490
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %217) #12
  br label %1024

507:                                              ; preds = %394, %267, %262
  %508 = call i32 @_ZN5blink13NthIndexCache14NthOfTypeIndexERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %263) #12
  %509 = icmp eq i32 %508, 1
  br i1 %509, label %510, label %579

510:                                              ; preds = %507
  %511 = call i32 @_ZN5blink13NthIndexCache18NthLastOfTypeIndexERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %263) #12
  %512 = icmp eq i32 %511, 1
  br i1 %512, label %513, label %579

513:                                              ; preds = %510
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %248) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %248, i8 -86, i64 48, i1 false) #12
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %249, align 8
  store i8 0, i8* %251, align 8
  store i32 0, i32* %252, align 8
  store i8 1, i8* %253, align 4
  store i8 0, i8* %254, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #12
  %514 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 2
  %515 = call %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"* %514) #12
  store %"class.WTF::StringImpl"* %515, %"class.WTF::StringImpl"** %256, align 8
  call void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::StringBuilder"* nonnull dereferenceable(48) %6, i1 zeroext false) #12
  %516 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %517 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %517, label %531, label %518

518:                                              ; preds = %513
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load atomic i32, i32* %519 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %524 = load i32, i32* %523, align 4
  br i1 %522, label %525, label %527

525:                                              ; preds = %518
  %526 = add i32 %524, -1
  store i32 %526, i32* %523, align 4
  br label %527

527:                                              ; preds = %525, %518
  %528 = phi i32 [ %526, %525 ], [ %524, %518 ]
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %531

530:                                              ; preds = %527
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %516) #12
  br label %531

531:                                              ; preds = %530, %527, %513
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #12
  %532 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %533 = icmp eq %"class.WTF::StringImpl"* %532, null
  br i1 %533, label %562, label %534

534:                                              ; preds = %531
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %532, i64 0, i32 0
  %540 = load i32, i32* %539, align 4
  br i1 %538, label %541, label %551

541:                                              ; preds = %534
  %542 = zext i32 %540 to i33
  %543 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %542, i33 1) #12
  %544 = extractvalue { i33, i1 } %543, 1
  %545 = extractvalue { i33, i1 } %543, 0
  %546 = icmp slt i33 %545, 0
  %547 = or i1 %544, %546
  br i1 %547, label %548, label %549, !prof !3

548:                                              ; preds = %541
  call void @llvm.trap() #12
  unreachable

549:                                              ; preds = %541
  %550 = trunc i33 %545 to i32
  store i32 %550, i32* %539, align 4
  br label %551

551:                                              ; preds = %549, %534
  %552 = phi i32 [ %550, %549 ], [ %540, %534 ]
  %553 = load atomic i32, i32* %535 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %558

556:                                              ; preds = %551
  %557 = add i32 %552, -1
  store i32 %557, i32* %539, align 4
  br label %558

558:                                              ; preds = %556, %551
  %559 = phi i32 [ %557, %556 ], [ %552, %551 ]
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %562

561:                                              ; preds = %558
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %532) #12
  br label %562

562:                                              ; preds = %561, %558, %531
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #12
  %563 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %564 = icmp eq %"class.WTF::StringImpl"* %563, null
  br i1 %564, label %578, label %565

565:                                              ; preds = %562
  %566 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %567 = load atomic i32, i32* %566 monotonic, align 4
  %568 = and i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %563, i64 0, i32 0
  %571 = load i32, i32* %570, align 4
  br i1 %569, label %572, label %574

572:                                              ; preds = %565
  %573 = add i32 %571, -1
  store i32 %573, i32* %570, align 4
  br label %574

574:                                              ; preds = %572, %565
  %575 = phi i32 [ %573, %572 ], [ %571, %565 ]
  %576 = icmp eq i32 %575, 0
  br i1 %576, label %577, label %578

577:                                              ; preds = %574
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %563) #12
  br label %578

578:                                              ; preds = %577, %574, %562
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %248) #12
  br label %1024

579:                                              ; preds = %510, %507
  %580 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %264, align 8
  %581 = icmp eq %"class.blink::ElementData"* %580, null
  br i1 %581, label %847, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %580, i64 0, i32 2, i32 0, i32 0
  %584 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %583, align 8
  %585 = icmp eq %"class.blink::SpaceSplitString::Data"* %584, null
  br i1 %585, label %847, label %586

586:                                              ; preds = %582
  %587 = call noalias i8* @malloc(i64 4096) #12
  %588 = bitcast i8* %587 to %"class.WTF::BloomFilter"*
  call void @llvm.memset.p0i8.i64(i8* align 1 %587, i8 0, i64 4096, i1 false) #12
  %589 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 0, i32 0
  %590 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %589) #12
  %591 = icmp eq %"class.blink::ContainerNode"* %590, null
  br i1 %591, label %619, label %592

592:                                              ; preds = %586, %598
  %593 = phi %"class.blink::ContainerNode"* [ %600, %598 ], [ %590, %586 ]
  %594 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %593, i64 0, i32 0, i32 1
  %595 = load i32, i32* %594, align 8
  %596 = and i32 %595, 12
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %602, label %598

598:                                              ; preds = %592
  %599 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %593, i64 0, i32 0
  %600 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %599) #12
  %601 = icmp eq %"class.blink::ContainerNode"* %600, null
  br i1 %601, label %619, label %592

602:                                              ; preds = %592
  %603 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %593, i64 0, i32 1, i32 0, i32 0
  %604 = load %"class.blink::Node"*, %"class.blink::Node"** %603, align 8
  %605 = icmp eq %"class.blink::Node"* %604, null
  br i1 %605, label %616, label %606

606:                                              ; preds = %602, %612
  %607 = phi %"class.blink::Node"* [ %614, %612 ], [ %604, %602 ]
  %608 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %607, i64 0, i32 1
  %609 = load i32, i32* %608, align 8
  %610 = and i32 %609, 12
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %616, label %612

612:                                              ; preds = %606
  %613 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %607, i64 0, i32 5, i32 0, i32 0
  %614 = load %"class.blink::Node"*, %"class.blink::Node"** %613, align 8
  %615 = icmp eq %"class.blink::Node"* %614, null
  br i1 %615, label %616, label %606

616:                                              ; preds = %612, %606, %602
  %617 = phi %"class.blink::Node"* [ null, %602 ], [ null, %612 ], [ %607, %606 ]
  %618 = bitcast %"class.blink::Node"* %617 to %"class.blink::Element"*
  br label %619

619:                                              ; preds = %598, %616, %586
  %620 = phi %"class.blink::Element"* [ %618, %616 ], [ %263, %586 ], [ %263, %598 ]
  %621 = icmp eq %"class.blink::Element"* %620, null
  br i1 %621, label %683, label %622

622:                                              ; preds = %619, %681
  %623 = phi %"class.blink::Element"* [ %682, %681 ], [ %620, %619 ]
  %624 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %623, i64 0, i32 3, i32 0, i32 0
  %625 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %624, align 8
  %626 = icmp eq %"class.blink::ElementData"* %625, null
  br i1 %626, label %669, label %627

627:                                              ; preds = %622
  %628 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %625, i64 0, i32 2, i32 0, i32 0
  %629 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %628, align 8
  %630 = icmp eq %"class.blink::SpaceSplitString::Data"* %629, null
  %631 = icmp eq %"class.blink::Element"* %623, %263
  %632 = or i1 %631, %630
  br i1 %632, label %669, label %633

633:                                              ; preds = %627, %666
  %634 = phi %"class.blink::SpaceSplitString::Data"* [ %668, %666 ], [ %629, %627 ]
  %635 = phi i32 [ %667, %666 ], [ 0, %627 ]
  %636 = icmp eq %"class.blink::SpaceSplitString::Data"* %634, null
  br i1 %636, label %640, label %637

637:                                              ; preds = %633
  %638 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %634, i64 0, i32 2, i32 0, i32 0, i32 2
  %639 = load i32, i32* %638, align 4
  br label %640

640:                                              ; preds = %637, %633
  %641 = phi i32 [ %639, %637 ], [ 0, %633 ]
  %642 = icmp ult i32 %635, %641
  br i1 %642, label %643, label %669

643:                                              ; preds = %640
  %644 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %634, i64 0, i32 2
  %645 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %644, i32 %635) #12
  %646 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %645, i64 0, i32 0, i32 0, i32 0
  %647 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %646, align 8
  %648 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %649 = load atomic i32, i32* %648 monotonic, align 4
  %650 = lshr i32 %649, 8
  %651 = and i32 %650, 4095
  %652 = zext i32 %651 to i64
  %653 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %588, i64 0, i32 0, i64 %652
  %654 = lshr i32 %649, 24
  %655 = zext i32 %654 to i64
  %656 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %588, i64 0, i32 0, i64 %655
  %657 = load i8, i8* %653, align 1
  %658 = icmp eq i8 %657, -1
  br i1 %658, label %661, label %659, !prof !3

659:                                              ; preds = %643
  %660 = add nuw i8 %657, 1
  store i8 %660, i8* %653, align 1
  br label %661

661:                                              ; preds = %659, %643
  %662 = load i8, i8* %656, align 1
  %663 = icmp eq i8 %662, -1
  br i1 %663, label %666, label %664, !prof !3

664:                                              ; preds = %661
  %665 = add nuw i8 %662, 1
  store i8 %665, i8* %656, align 1
  br label %666

666:                                              ; preds = %664, %661
  %667 = add nuw i32 %635, 1
  %668 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %628, align 8
  br label %633

669:                                              ; preds = %640, %627, %622
  %670 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %623, i64 0, i32 0, i32 0
  br label %671

671:                                              ; preds = %676, %669
  %672 = phi %"class.blink::Node"* [ %670, %669 ], [ %674, %676 ]
  %673 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %672, i64 0, i32 5, i32 0, i32 0
  %674 = load %"class.blink::Node"*, %"class.blink::Node"** %673, align 8
  %675 = icmp eq %"class.blink::Node"* %674, null
  br i1 %675, label %683, label %676

676:                                              ; preds = %671
  %677 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %674, i64 0, i32 1
  %678 = load i32, i32* %677, align 8
  %679 = and i32 %678, 12
  %680 = icmp eq i32 %679, 0
  br i1 %680, label %681, label %671

681:                                              ; preds = %676
  %682 = bitcast %"class.blink::Node"* %674 to %"class.blink::Element"*
  br label %622

683:                                              ; preds = %671, %619
  %684 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %264, align 8
  %685 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %684, i64 0, i32 2, i32 0, i32 0
  br label %686

686:                                              ; preds = %740, %683
  %687 = phi i32 [ 0, %683 ], [ %741, %740 ]
  %688 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %685, align 8
  %689 = icmp eq %"class.blink::SpaceSplitString::Data"* %688, null
  br i1 %689, label %693, label %690

690:                                              ; preds = %686
  %691 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %688, i64 0, i32 2, i32 0, i32 0, i32 2
  %692 = load i32, i32* %691, align 4
  br label %693

693:                                              ; preds = %690, %686
  %694 = phi i32 [ %692, %690 ], [ 0, %686 ]
  %695 = icmp ult i32 %687, %694
  br i1 %695, label %696, label %742

696:                                              ; preds = %693
  %697 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %688, i64 0, i32 2
  %698 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %697, i32 %687) #12
  %699 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %698, i64 0, i32 0, i32 0, i32 0
  %700 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %699, align 8
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %700, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = lshr i32 %702, 8
  %704 = and i32 %703, 4095
  %705 = zext i32 %704 to i64
  %706 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %588, i64 0, i32 0, i64 %705
  %707 = load i8, i8* %706, align 1
  %708 = icmp eq i8 %707, 0
  br i1 %708, label %715, label %709

709:                                              ; preds = %696
  %710 = lshr i32 %702, 24
  %711 = zext i32 %710 to i64
  %712 = getelementptr inbounds %"class.WTF::BloomFilter", %"class.WTF::BloomFilter"* %588, i64 0, i32 0, i64 %711
  %713 = load i8, i8* %712, align 1
  %714 = icmp eq i8 %713, 0
  br i1 %714, label %715, label %740

715:                                              ; preds = %709, %696
  %716 = load %"class.blink::SpaceSplitString::Data"*, %"class.blink::SpaceSplitString::Data"** %685, align 8
  %717 = getelementptr inbounds %"class.blink::SpaceSplitString::Data", %"class.blink::SpaceSplitString::Data"* %716, i64 0, i32 2
  %718 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"* %717, i32 %687) #12
  %719 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %718, i64 0, i32 0, i32 0, i32 0
  %720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %719, align 8
  %721 = ptrtoint %"class.WTF::StringImpl"* %720 to i64
  %722 = icmp eq %"class.WTF::StringImpl"* %720, null
  br i1 %722, label %742, label %723

723:                                              ; preds = %715
  %724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %725 = load atomic i32, i32* %724 monotonic, align 4
  %726 = and i32 %725, 2
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %742

728:                                              ; preds = %723
  %729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 0
  %730 = load i32, i32* %729, align 4
  %731 = zext i32 %730 to i33
  %732 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %731, i33 1) #12
  %733 = extractvalue { i33, i1 } %732, 1
  %734 = extractvalue { i33, i1 } %732, 0
  %735 = icmp slt i33 %734, 0
  %736 = or i1 %733, %735
  br i1 %736, label %737, label %738, !prof !3

737:                                              ; preds = %728
  call void @llvm.trap() #12
  unreachable

738:                                              ; preds = %728
  %739 = trunc i33 %734 to i32
  store i32 %739, i32* %729, align 4
  br label %742

740:                                              ; preds = %709
  %741 = add nuw i32 %687, 1
  br label %686

742:                                              ; preds = %693, %738, %723, %715
  %743 = phi i64 [ %721, %715 ], [ %721, %723 ], [ %721, %738 ], [ 0, %693 ]
  %744 = icmp eq i8* %587, null
  br i1 %744, label %746, label %745

745:                                              ; preds = %742
  call void @free(i8* nonnull %587) #12
  br label %746

746:                                              ; preds = %745, %742
  %747 = inttoptr i64 %743 to %"class.WTF::StringImpl"*
  %748 = icmp eq i64 %743, 0
  br i1 %748, label %847, label %749

749:                                              ; preds = %746
  %750 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 1
  %751 = load i32, i32* %750, align 4
  %752 = icmp eq i32 %751, 0
  br i1 %752, label %834, label %753

753:                                              ; preds = %749
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %228) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #12
  call void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"* nonnull %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.9, i64 0, i64 0), i64 1) #12
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %770

758:                                              ; preds = %753
  %759 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %760 = load i32, i32* %759, align 4
  %761 = zext i32 %760 to i33
  %762 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %761, i33 1) #12
  %763 = extractvalue { i33, i1 } %762, 1
  %764 = extractvalue { i33, i1 } %762, 0
  %765 = icmp slt i33 %764, 0
  %766 = or i1 %763, %765
  br i1 %766, label %767, label %768, !prof !3

767:                                              ; preds = %758
  call void @llvm.trap() #12
  unreachable

768:                                              ; preds = %758
  %769 = trunc i33 %764 to i32
  store i32 %769, i32* %759, align 4
  br label %770

770:                                              ; preds = %768, %753
  %771 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::AtomicString"* nonnull dereferenceable(8) %9, %"class.WTF::StringImpl"* nonnull %747) #12
  %772 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %771, 0
  store %"class.WTF::StringImpl"* %772, %"class.WTF::StringImpl"** %230, align 8
  %773 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %771, 1
  store %"class.WTF::StringImpl"* %773, %"class.WTF::StringImpl"** %231, align 8
  %774 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"* nonnull %8) #12
  %775 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %776 = icmp eq %"class.WTF::StringImpl"* %775, null
  br i1 %776, label %790, label %777

777:                                              ; preds = %770
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4
  %780 = and i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %775, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  br i1 %781, label %784, label %786

784:                                              ; preds = %777
  %785 = add i32 %783, -1
  store i32 %785, i32* %782, align 4
  br label %786

786:                                              ; preds = %784, %777
  %787 = phi i32 [ %785, %784 ], [ %783, %777 ]
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %790

789:                                              ; preds = %786
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %775) #12
  br label %790

790:                                              ; preds = %789, %786, %770
  %791 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %792 = icmp eq %"class.WTF::StringImpl"* %791, null
  br i1 %792, label %806, label %793

793:                                              ; preds = %790
  %794 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %795 = load atomic i32, i32* %794 monotonic, align 4
  %796 = and i32 %795, 2
  %797 = icmp eq i32 %796, 0
  %798 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 0
  %799 = load i32, i32* %798, align 4
  br i1 %797, label %800, label %802

800:                                              ; preds = %793
  %801 = add i32 %799, -1
  store i32 %801, i32* %798, align 4
  br label %802

802:                                              ; preds = %800, %793
  %803 = phi i32 [ %801, %800 ], [ %799, %793 ]
  %804 = icmp eq i32 %803, 0
  br i1 %804, label %805, label %806

805:                                              ; preds = %802
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %791) #12
  br label %806

806:                                              ; preds = %805, %802, %790
  %807 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %808 = icmp eq %"class.WTF::StringImpl"* %807, null
  br i1 %808, label %822, label %809

809:                                              ; preds = %806
  %810 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %807, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %811 = load atomic i32, i32* %810 monotonic, align 4
  %812 = and i32 %811, 2
  %813 = icmp eq i32 %812, 0
  %814 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %807, i64 0, i32 0
  %815 = load i32, i32* %814, align 4
  br i1 %813, label %816, label %818

816:                                              ; preds = %809
  %817 = add i32 %815, -1
  store i32 %817, i32* %814, align 4
  br label %818

818:                                              ; preds = %816, %809
  %819 = phi i32 [ %817, %816 ], [ %815, %809 ]
  %820 = icmp eq i32 %819, 0
  br i1 %820, label %821, label %822

821:                                              ; preds = %818
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %807) #12
  br label %822

822:                                              ; preds = %821, %818, %806
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %228) #12
  %823 = load atomic i32, i32* %754 monotonic, align 4
  %824 = and i32 %823, 2
  %825 = icmp eq i32 %824, 0
  %826 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %827 = load i32, i32* %826, align 4
  br i1 %825, label %828, label %830

828:                                              ; preds = %822
  %829 = add i32 %827, -1
  store i32 %829, i32* %826, align 4
  br label %830

830:                                              ; preds = %828, %822
  %831 = phi i32 [ %829, %828 ], [ %827, %822 ]
  %832 = icmp eq i32 %831, 0
  br i1 %832, label %833, label %1024

833:                                              ; preds = %830
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %747) #12
  br label %1024

834:                                              ; preds = %749
  %835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %836 = load atomic i32, i32* %835 monotonic, align 4
  %837 = and i32 %836, 2
  %838 = icmp eq i32 %837, 0
  %839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %747, i64 0, i32 0
  %840 = load i32, i32* %839, align 4
  br i1 %838, label %841, label %843

841:                                              ; preds = %834
  %842 = add i32 %840, -1
  store i32 %842, i32* %839, align 4
  br label %843

843:                                              ; preds = %841, %834
  %844 = phi i32 [ %842, %841 ], [ %840, %834 ]
  %845 = icmp eq i32 %844, 0
  br i1 %845, label %846, label %847

846:                                              ; preds = %843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %747) #12
  br label %847

847:                                              ; preds = %846, %843, %746, %582, %579
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #12
  %848 = call i32 @_ZN5blink13NthIndexCache13NthChildIndexERNS_7ElementE(%"class.blink::Element"* nonnull dereferenceable(104) %263) #12
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %234) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %234, i8 -86, i64 32, i1 false) #12
  store i8* %235, i8** %236, align 8
  %849 = urem i32 %848, 10
  %850 = udiv i32 %848, 10
  %851 = trunc i32 %849 to i8
  %852 = or i8 %851, 48
  store i8 %852, i8* %235, align 1
  %853 = icmp ugt i32 %848, 9
  br i1 %853, label %854, label %888

854:                                              ; preds = %847
  store i8* %240, i8** %236, align 8
  %855 = urem i32 %850, 10
  %856 = trunc i32 %855 to i8
  %857 = or i8 %856, 48
  store i8 %857, i8* %240, align 2
  %858 = icmp ugt i32 %848, 99
  br i1 %858, label %859, label %888

859:                                              ; preds = %854
  %860 = udiv i32 %848, 100
  store i8* %242, i8** %236, align 8
  %861 = urem i32 %860, 10
  %862 = trunc i32 %861 to i8
  %863 = or i8 %862, 48
  store i8 %863, i8* %242, align 1
  %864 = icmp ugt i32 %848, 999
  br i1 %864, label %865, label %888

865:                                              ; preds = %859
  %866 = udiv i32 %848, 1000
  store i8* %259, i8** %236, align 8
  %867 = urem i32 %866, 10
  %868 = trunc i32 %867 to i8
  %869 = or i8 %868, 48
  store i8 %869, i8* %259, align 8
  %870 = icmp ugt i32 %848, 9999
  br i1 %870, label %871, label %888

871:                                              ; preds = %865
  %872 = udiv i32 %848, 10000
  store i8* %261, i8** %236, align 8
  %873 = urem i32 %872, 10
  %874 = trunc i32 %873 to i8
  %875 = or i8 %874, 48
  store i8 %875, i8* %261, align 1
  %876 = icmp ugt i32 %848, 99999
  br i1 %876, label %877, label %886

877:                                              ; preds = %871, %877
  %878 = phi i32 [ %880, %877 ], [ %872, %871 ]
  %879 = load i8*, i8** %236, align 8
  %880 = udiv i32 %878, 10
  %881 = getelementptr inbounds i8, i8* %879, i64 -1
  store i8* %881, i8** %236, align 8
  %882 = urem i32 %880, 10
  %883 = trunc i32 %882 to i8
  %884 = or i8 %883, 48
  store i8 %884, i8* %881, align 1
  %885 = icmp ugt i32 %878, 99
  br i1 %885, label %877, label %886

886:                                              ; preds = %877, %871
  %887 = load i64, i64* %243, align 8
  br label %888

888:                                              ; preds = %865, %886, %859, %854, %847
  %889 = phi i64 [ %241, %854 ], [ %239, %847 ], [ %258, %859 ], [ %887, %886 ], [ %260, %865 ]
  %890 = sub i64 %244, %889
  %891 = trunc i64 %890 to i32
  store i32 %891, i32* %237, align 8
  %892 = inttoptr i64 %889 to i8*
  %893 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %892, i32 %891) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %234) #12
  %894 = icmp eq %"class.WTF::StringImpl"* %893, null
  br i1 %894, label %968, label %895

895:                                              ; preds = %888
  %896 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %897 = load atomic i32, i32* %896 monotonic, align 4
  %898 = and i32 %897, 2
  %899 = icmp eq i32 %898, 0
  %900 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 0
  %901 = load i32, i32* %900, align 4
  br i1 %899, label %902, label %912

902:                                              ; preds = %895
  %903 = zext i32 %901 to i33
  %904 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %903, i33 1) #12
  %905 = extractvalue { i33, i1 } %904, 1
  %906 = extractvalue { i33, i1 } %904, 0
  %907 = icmp slt i33 %906, 0
  %908 = or i1 %905, %907
  br i1 %908, label %909, label %910, !prof !3

909:                                              ; preds = %902
  call void @llvm.trap() #12
  unreachable

910:                                              ; preds = %902
  %911 = trunc i33 %906 to i32
  store i32 %911, i32* %900, align 4
  br label %912

912:                                              ; preds = %910, %895
  %913 = phi i32 [ %911, %910 ], [ %901, %895 ]
  %914 = load atomic i32, i32* %896 monotonic, align 4
  %915 = and i32 %914, 2
  %916 = icmp eq i32 %915, 0
  br i1 %916, label %917, label %927

917:                                              ; preds = %912
  %918 = zext i32 %913 to i33
  %919 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %918, i33 1) #12
  %920 = extractvalue { i33, i1 } %919, 1
  %921 = extractvalue { i33, i1 } %919, 0
  %922 = icmp slt i33 %921, 0
  %923 = or i1 %920, %922
  br i1 %923, label %924, label %925, !prof !3

924:                                              ; preds = %917
  call void @llvm.trap() #12
  unreachable

925:                                              ; preds = %917
  %926 = trunc i33 %921 to i32
  store i32 %926, i32* %900, align 4
  br label %927

927:                                              ; preds = %925, %912
  %928 = phi i32 [ %926, %925 ], [ %913, %912 ]
  %929 = load atomic i32, i32* %896 monotonic, align 4
  %930 = and i32 %929, 2
  %931 = icmp eq i32 %930, 0
  br i1 %931, label %932, label %934

932:                                              ; preds = %927
  %933 = add i32 %928, -1
  store i32 %933, i32* %900, align 4
  br label %934

934:                                              ; preds = %932, %927
  %935 = phi i32 [ %933, %932 ], [ %928, %927 ]
  %936 = icmp eq i32 %935, 0
  br i1 %936, label %937, label %938

937:                                              ; preds = %934
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #12
  br label %938

938:                                              ; preds = %937, %934
  %939 = load atomic i32, i32* %896 monotonic, align 4
  %940 = and i32 %939, 2
  %941 = icmp eq i32 %940, 0
  br i1 %941, label %942, label %953

942:                                              ; preds = %938
  %943 = load i32, i32* %900, align 4
  %944 = zext i32 %943 to i33
  %945 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %944, i33 1) #12
  %946 = extractvalue { i33, i1 } %945, 1
  %947 = extractvalue { i33, i1 } %945, 0
  %948 = icmp slt i33 %947, 0
  %949 = or i1 %946, %948
  br i1 %949, label %950, label %951, !prof !3

950:                                              ; preds = %942
  call void @llvm.trap() #12
  unreachable

951:                                              ; preds = %942
  %952 = trunc i33 %947 to i32
  store i32 %952, i32* %900, align 4
  br label %953

953:                                              ; preds = %951, %938
  store i64 ptrtoint ([12 x i8]* @.str.10 to i64), i64* %245, align 8
  store %"class.WTF::StringImpl"* %893, %"class.WTF::StringImpl"** %246, align 8
  %954 = load atomic i32, i32* %896 monotonic, align 4
  %955 = and i32 %954, 2
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %957, label %969

957:                                              ; preds = %953
  %958 = load i32, i32* %900, align 4
  %959 = zext i32 %958 to i33
  %960 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %959, i33 1) #12
  %961 = extractvalue { i33, i1 } %960, 1
  %962 = extractvalue { i33, i1 } %960, 0
  %963 = icmp slt i33 %962, 0
  %964 = or i1 %961, %963
  br i1 %964, label %965, label %966, !prof !3

965:                                              ; preds = %957
  call void @llvm.trap() #12
  unreachable

966:                                              ; preds = %957
  %967 = trunc i33 %962 to i32
  store i32 %967, i32* %900, align 4
  br label %969

968:                                              ; preds = %888
  store i64 ptrtoint ([12 x i8]* @.str.10 to i64), i64* %245, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %246, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %247, align 8
  br label %980

969:                                              ; preds = %966, %953
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.11, i64 0, i64 0), i8** %247, align 8
  %970 = load atomic i32, i32* %896 monotonic, align 4
  %971 = and i32 %970, 2
  %972 = icmp eq i32 %971, 0
  %973 = load i32, i32* %900, align 4
  br i1 %972, label %974, label %976

974:                                              ; preds = %969
  %975 = add i32 %973, -1
  store i32 %975, i32* %900, align 4
  br label %976

976:                                              ; preds = %974, %969
  %977 = phi i32 [ %975, %974 ], [ %973, %969 ]
  %978 = icmp eq i32 %977, 0
  br i1 %978, label %979, label %980

979:                                              ; preds = %976
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #12
  br label %980

980:                                              ; preds = %979, %976, %968
  %981 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2148"* nonnull %10) #12
  %982 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %246, align 8
  %983 = icmp eq %"class.WTF::StringImpl"* %982, null
  br i1 %983, label %997, label %984

984:                                              ; preds = %980
  %985 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %982, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %986 = load atomic i32, i32* %985 monotonic, align 4
  %987 = and i32 %986, 2
  %988 = icmp eq i32 %987, 0
  %989 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %982, i64 0, i32 0
  %990 = load i32, i32* %989, align 4
  br i1 %988, label %991, label %993

991:                                              ; preds = %984
  %992 = add i32 %990, -1
  store i32 %992, i32* %989, align 4
  br label %993

993:                                              ; preds = %991, %984
  %994 = phi i32 [ %992, %991 ], [ %990, %984 ]
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %996, label %997

996:                                              ; preds = %993
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %982) #12
  br label %997

997:                                              ; preds = %996, %993, %980
  br i1 %894, label %1023, label %998

998:                                              ; preds = %997
  %999 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1000 = load atomic i32, i32* %999 monotonic, align 4
  %1001 = and i32 %1000, 2
  %1002 = icmp eq i32 %1001, 0
  %1003 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %893, i64 0, i32 0
  %1004 = load i32, i32* %1003, align 4
  br i1 %1002, label %1005, label %1007

1005:                                             ; preds = %998
  %1006 = add i32 %1004, -1
  store i32 %1006, i32* %1003, align 4
  br label %1007

1007:                                             ; preds = %1005, %998
  %1008 = phi i32 [ %1006, %1005 ], [ %1004, %998 ]
  %1009 = icmp eq i32 %1008, 0
  br i1 %1009, label %1010, label %1012

1010:                                             ; preds = %1007
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #12
  %1011 = load i32, i32* %1003, align 4
  br label %1012

1012:                                             ; preds = %1010, %1007
  %1013 = phi i32 [ %1008, %1007 ], [ %1011, %1010 ]
  %1014 = load atomic i32, i32* %999 monotonic, align 4
  %1015 = and i32 %1014, 2
  %1016 = icmp eq i32 %1015, 0
  br i1 %1016, label %1017, label %1019

1017:                                             ; preds = %1012
  %1018 = add i32 %1013, -1
  store i32 %1018, i32* %1003, align 4
  br label %1019

1019:                                             ; preds = %1017, %1012
  %1020 = phi i32 [ %1018, %1017 ], [ %1013, %1012 ]
  %1021 = icmp eq i32 %1020, 0
  br i1 %1021, label %1022, label %1023

1022:                                             ; preds = %1019
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %893) #12
  br label %1023

1023:                                             ; preds = %1022, %1019, %997
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #12
  br label %1024

1024:                                             ; preds = %1023, %833, %830, %578, %506
  %1025 = phi %"class.WTF::StringImpl"* [ %532, %578 ], [ %981, %1023 ], [ %460, %506 ], [ %774, %830 ], [ %774, %833 ]
  store %"class.WTF::StringImpl"* %1025, %"class.WTF::StringImpl"** %257, align 8
  %1026 = load i32, i32* %186, align 4
  %1027 = load i32, i32* %185, align 8
  %1028 = icmp eq i32 %1026, %1027
  br i1 %1028, label %1054, label %1029, !prof !3

1029:                                             ; preds = %1024
  %1030 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  %1031 = zext i32 %1026 to i64
  %1032 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1030, i64 %1031, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1025, %"class.WTF::StringImpl"** %1032, align 8
  %1033 = icmp eq %"class.WTF::StringImpl"* %1025, null
  br i1 %1033, label %1051, label %1034

1034:                                             ; preds = %1029
  %1035 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1036 = load atomic i32, i32* %1035 monotonic, align 4
  %1037 = and i32 %1036, 2
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1039, label %1051

1039:                                             ; preds = %1034
  %1040 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1025, i64 0, i32 0
  %1041 = load i32, i32* %1040, align 4
  %1042 = zext i32 %1041 to i33
  %1043 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1042, i33 1) #12
  %1044 = extractvalue { i33, i1 } %1043, 1
  %1045 = extractvalue { i33, i1 } %1043, 0
  %1046 = icmp slt i33 %1045, 0
  %1047 = or i1 %1044, %1046
  br i1 %1047, label %1048, label %1049, !prof !3

1048:                                             ; preds = %1039
  call void @llvm.trap() #12
  unreachable

1049:                                             ; preds = %1039
  %1050 = trunc i33 %1045 to i32
  store i32 %1050, i32* %1040, align 4
  br label %1051

1051:                                             ; preds = %1049, %1034, %1029
  %1052 = load i32, i32* %186, align 4
  %1053 = add i32 %1052, 1
  store i32 %1053, i32* %186, align 4
  br label %1055

1054:                                             ; preds = %1024
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS1_EEvOT_(%"class.WTF::Vector.630"* nonnull %12, %"class.WTF::String"* nonnull dereferenceable(8) %13) #12
  br label %1055

1055:                                             ; preds = %1054, %1051
  %1056 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %1057 = icmp eq %"class.WTF::StringImpl"* %1056, null
  br i1 %1057, label %1071, label %1058

1058:                                             ; preds = %1055
  %1059 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1056, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1060 = load atomic i32, i32* %1059 monotonic, align 4
  %1061 = and i32 %1060, 2
  %1062 = icmp eq i32 %1061, 0
  %1063 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1056, i64 0, i32 0
  %1064 = load i32, i32* %1063, align 4
  br i1 %1062, label %1065, label %1067

1065:                                             ; preds = %1058
  %1066 = add i32 %1064, -1
  store i32 %1066, i32* %1063, align 4
  br label %1067

1067:                                             ; preds = %1065, %1058
  %1068 = phi i32 [ %1066, %1065 ], [ %1064, %1058 ]
  %1069 = icmp eq i32 %1068, 0
  br i1 %1069, label %1070, label %1071

1070:                                             ; preds = %1067
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1056) #12
  br label %1071

1071:                                             ; preds = %1070, %1067, %1055
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #12
  %1072 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %264, align 8
  %1073 = icmp eq %"class.blink::ElementData"* %1072, null
  br i1 %1073, label %1207, label %1074

1074:                                             ; preds = %1071
  %1075 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1072, i64 0, i32 3, i32 0, i32 0, i32 0
  %1076 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1075, align 8
  %1077 = icmp eq %"class.WTF::StringImpl"* %1076, null
  br i1 %1077, label %1207, label %1078

1078:                                             ; preds = %1074
  %1079 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %1080 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %1079, align 8
  %1081 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %1080, i64 0, i32 2, i32 0, i32 0
  %1082 = load %"class.blink::Document"*, %"class.blink::Document"** %1081, align 8
  %1083 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1072, i64 0, i32 0, i32 0, i32 0
  %1084 = load i32, i32* %1083, align 4
  %1085 = and i32 %1084, 1
  %1086 = icmp eq i32 %1085, 0
  br i1 %1086, label %1094, label %1087

1087:                                             ; preds = %1078
  %1088 = bitcast %"class.blink::ElementData"* %1072 to %"class.blink::UniqueElementData"*
  %1089 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1072, i64 1, i32 1
  %1090 = bitcast %"class.blink::Member.354"* %1089 to %"class.blink::Attribute"**
  %1091 = load %"class.blink::Attribute"*, %"class.blink::Attribute"** %1090, align 8
  %1092 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %1088, i64 0, i32 2, i32 0, i32 0, i32 2
  %1093 = load i32, i32* %1092, align 4
  br label %1099

1094:                                             ; preds = %1078
  %1095 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %1072, i64 1
  %1096 = bitcast %"class.blink::ElementData"* %1095 to %"class.blink::Attribute"*
  %1097 = lshr i32 %1084, 1
  %1098 = and i32 %1097, 268435455
  br label %1099

1099:                                             ; preds = %1094, %1087
  %1100 = phi %"class.blink::Attribute"* [ %1096, %1094 ], [ %1091, %1087 ]
  %1101 = phi i32 [ %1098, %1094 ], [ %1093, %1087 ]
  %1102 = zext i32 %1101 to i64
  %1103 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1100, i64 %1102
  %1104 = icmp eq i32 %1101, 0
  br i1 %1104, label %1131, label %1105

1105:                                             ; preds = %1099
  %1106 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %215, align 8
  %1107 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1106, i64 0, i32 3, i32 0, i32 0, i32 0
  %1108 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1106, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %1109

1109:                                             ; preds = %1124, %1105
  %1110 = phi %"class.blink::Attribute"* [ %1100, %1105 ], [ %1125, %1124 ]
  %1111 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1110, i64 0, i32 0, i32 0, i32 0
  %1112 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %1111, align 8
  %1113 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %1112, %1106
  br i1 %1113, label %1127, label %1114

1114:                                             ; preds = %1109
  %1115 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1112, i64 0, i32 3, i32 0, i32 0, i32 0
  %1116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1115, align 8
  %1117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1107, align 8
  %1118 = icmp eq %"class.WTF::StringImpl"* %1116, %1117
  br i1 %1118, label %1119, label %1124

1119:                                             ; preds = %1114
  %1120 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %1112, i64 0, i32 4, i32 0, i32 0, i32 0
  %1121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1120, align 8
  %1122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1108, align 8
  %1123 = icmp eq %"class.WTF::StringImpl"* %1121, %1122
  br i1 %1123, label %1127, label %1124

1124:                                             ; preds = %1119, %1114
  %1125 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1110, i64 1
  %1126 = icmp eq %"class.blink::Attribute"* %1125, %1103
  br i1 %1126, label %1131, label %1109

1127:                                             ; preds = %1119, %1109
  %1128 = icmp eq %"class.blink::Attribute"* %1110, null
  %1129 = getelementptr inbounds %"class.blink::Attribute", %"class.blink::Attribute"* %1110, i64 0, i32 1
  %1130 = select i1 %1128, %"class.WTF::AtomicString"* %216, %"class.WTF::AtomicString"* %1129
  br label %1131

1131:                                             ; preds = %1124, %1127, %1099
  %1132 = phi %"class.WTF::AtomicString"* [ %216, %1099 ], [ %1130, %1127 ], [ %216, %1124 ]
  %1133 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1082, i64 0, i32 1, i32 4, i32 0, i32 0
  %1134 = load %"class.blink::TreeOrderedMap"*, %"class.blink::TreeOrderedMap"** %1133, align 8
  %1135 = icmp eq %"class.blink::TreeOrderedMap"* %1134, null
  br i1 %1135, label %1223, label %1136

1136:                                             ; preds = %1131
  %1137 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %1134, i64 0, i32 0, i32 0, i32 0, i32 0
  %1138 = load %"struct.WTF::KeyValuePair.338"*, %"struct.WTF::KeyValuePair.338"** %1137, align 8
  %1139 = icmp eq %"struct.WTF::KeyValuePair.338"* %1138, null
  %1140 = getelementptr inbounds %"class.blink::TreeOrderedMap", %"class.blink::TreeOrderedMap"* %1134, i64 0, i32 0, i32 0, i32 0, i32 1
  %1141 = load i32, i32* %1140, align 8
  br i1 %1139, label %1193, label %1142

1142:                                             ; preds = %1136
  %1143 = add i32 %1141, -1
  %1144 = zext i32 %1143 to i64
  %1145 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1132, i64 0, i32 0, i32 0, i32 0
  %1146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1145, align 8
  %1147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1148 = load atomic i32, i32* %1147 monotonic, align 4
  %1149 = lshr i32 %1148, 8
  %1150 = and i32 %1149, %1143
  %1151 = zext i32 %1150 to i64
  %1152 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1138, i64 %1151
  %1153 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1152, i64 0, i32 0, i32 0, i32 0, i32 0
  %1154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1153, align 8
  %1155 = icmp eq %"class.WTF::StringImpl"* %1154, null
  br i1 %1155, label %1193, label %1156

1156:                                             ; preds = %1142
  %1157 = xor i32 %1149, -1
  %1158 = lshr i32 %1148, 31
  %1159 = add nsw i32 %1158, %1157
  %1160 = shl i32 %1159, 12
  %1161 = xor i32 %1160, %1159
  %1162 = lshr i32 %1161, 7
  %1163 = xor i32 %1162, %1161
  %1164 = shl i32 %1163, 2
  %1165 = xor i32 %1164, %1163
  %1166 = lshr i32 %1165, 20
  %1167 = xor i32 %1166, %1165
  %1168 = or i32 %1167, 1
  %1169 = zext i32 %1168 to i64
  br label %1170

1170:                                             ; preds = %1180, %1156
  %1171 = phi %"struct.WTF::KeyValuePair.338"* [ %1152, %1156 ], [ %1185, %1180 ]
  %1172 = phi i64 [ %1151, %1156 ], [ %1184, %1180 ]
  %1173 = phi i64 [ 0, %1156 ], [ %1182, %1180 ]
  %1174 = bitcast %"struct.WTF::KeyValuePair.338"* %1171 to i8**
  %1175 = load i8*, i8** %1174, align 8
  %1176 = icmp ne i8* %1175, inttoptr (i64 -1 to i8*)
  %1177 = bitcast i8* %1175 to %"class.WTF::StringImpl"*
  %1178 = icmp eq %"class.WTF::StringImpl"* %1146, %1177
  %1179 = and i1 %1176, %1178
  br i1 %1179, label %1189, label %1180

1180:                                             ; preds = %1170
  %1181 = icmp eq i64 %1173, 0
  %1182 = select i1 %1181, i64 %1169, i64 %1173
  %1183 = add i64 %1182, %1172
  %1184 = and i64 %1183, %1144
  %1185 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1138, i64 %1184
  %1186 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1185, i64 0, i32 0, i32 0, i32 0, i32 0
  %1187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1186, align 8
  %1188 = icmp eq %"class.WTF::StringImpl"* %1187, null
  br i1 %1188, label %1193, label %1170

1189:                                             ; preds = %1170
  %1190 = icmp eq %"struct.WTF::KeyValuePair.338"* %1171, null
  br i1 %1190, label %1193, label %1191

1191:                                             ; preds = %1189
  %1192 = zext i32 %1141 to i64
  br label %1196

1193:                                             ; preds = %1180, %1189, %1142, %1136
  %1194 = zext i32 %1141 to i64
  %1195 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1138, i64 %1194
  br label %1196

1196:                                             ; preds = %1193, %1191
  %1197 = phi i64 [ %1192, %1191 ], [ %1194, %1193 ]
  %1198 = phi %"struct.WTF::KeyValuePair.338"* [ %1171, %1191 ], [ %1195, %1193 ]
  %1199 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1138, i64 %1197
  %1200 = icmp eq %"struct.WTF::KeyValuePair.338"* %1198, %1199
  br i1 %1200, label %1223, label %1201

1201:                                             ; preds = %1196
  %1202 = getelementptr inbounds %"struct.WTF::KeyValuePair.338", %"struct.WTF::KeyValuePair.338"* %1198, i64 0, i32 1, i32 0, i32 0
  %1203 = load %"class.blink::TreeOrderedMap::MapEntry"*, %"class.blink::TreeOrderedMap::MapEntry"** %1202, align 8
  %1204 = getelementptr inbounds %"class.blink::TreeOrderedMap::MapEntry", %"class.blink::TreeOrderedMap::MapEntry"* %1203, i64 0, i32 1
  %1205 = load i32, i32* %1204, align 8
  %1206 = icmp ugt i32 %1205, 1
  br i1 %1206, label %1207, label %1223

1207:                                             ; preds = %1201, %1074, %1071
  %1208 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %263, i64 0, i32 0, i32 0
  %1209 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1208) #12
  %1210 = icmp eq %"class.blink::ContainerNode"* %1209, null
  br i1 %1210, label %1223, label %1211

1211:                                             ; preds = %1207, %1217
  %1212 = phi %"class.blink::ContainerNode"* [ %1219, %1217 ], [ %1209, %1207 ]
  %1213 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1212, i64 0, i32 0, i32 1
  %1214 = load i32, i32* %1213, align 8
  %1215 = and i32 %1214, 12
  %1216 = icmp eq i32 %1215, 0
  br i1 %1216, label %1221, label %1217

1217:                                             ; preds = %1211
  %1218 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1212, i64 0, i32 0
  %1219 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %1218) #12
  %1220 = icmp eq %"class.blink::ContainerNode"* %1219, null
  br i1 %1220, label %1223, label %1211

1221:                                             ; preds = %1211
  %1222 = bitcast %"class.blink::ContainerNode"* %1212 to %"class.blink::Element"*
  br label %262

1223:                                             ; preds = %1207, %1201, %1196, %1131, %1217, %209
  %1224 = bitcast %"class.WTF::StringBuilder"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %1224) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1224, i8 -86, i64 48, i1 false) #12
  %1225 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %14, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1225, align 8
  %1226 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %14, i64 0, i32 1
  %1227 = bitcast %union.anon.2128* %1226 to i8*
  store i8 0, i8* %1227, align 8
  %1228 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %14, i64 0, i32 2
  store i32 0, i32* %1228, align 8
  %1229 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %14, i64 0, i32 3
  store i8 1, i8* %1229, align 4
  %1230 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %14, i64 0, i32 4
  store i8 0, i8* %1230, align 1
  %1231 = load i32, i32* %186, align 4
  %1232 = icmp eq i32 %1231, 0
  br i1 %1232, label %1247, label %1233

1233:                                             ; preds = %1223
  %1234 = zext i32 %1231 to i64
  %1235 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  %1236 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1235, i64 %1234
  %1237 = bitcast %"class.WTF::StringView"* %15 to i8*
  %1238 = bitcast %"class.WTF::StringView"* %15 to i64*
  %1239 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  %1240 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  %1241 = bitcast %"class.WTF::StringView"* %16 to i8*
  %1242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  %1243 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %1244 = bitcast i8** %1243 to %"class.WTF::StringImpl"**
  %1245 = bitcast %"class.WTF::StringView"* %16 to i64*
  %1246 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  br label %1250

1247:                                             ; preds = %1267, %1223
  %1248 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram to i8*) acquire, align 8
  %1249 = icmp eq i8 %1248, 0
  br i1 %1249, label %1272, label %1276, !prof !5

1250:                                             ; preds = %1267, %1233
  %1251 = phi i64 [ 0, %1233 ], [ %1269, %1267 ]
  %1252 = phi %"class.WTF::String"* [ %1236, %1233 ], [ %1257, %1267 ]
  %1253 = icmp eq i64 %1251, 0
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1250
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1237) #12
  %1255 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1255, i64* %1238, align 8
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %1239, align 8
  store i32 1, i32* %1240, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1237) #12
  br label %1256

1256:                                             ; preds = %1254, %1250
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1241) #12
  %1257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1252, i64 -1
  %1258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1257, i64 0, i32 0, i32 0
  %1259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1258, align 8
  %1260 = icmp eq %"class.WTF::StringImpl"* %1259, null
  br i1 %1260, label %1261, label %1263

1261:                                             ; preds = %1256
  store i8* null, i8** %1243, align 8
  %1262 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %1262, i64* %1245, align 8
  br label %1267

1263:                                             ; preds = %1256
  store %"class.WTF::StringImpl"* %1259, %"class.WTF::StringImpl"** %1242, align 8
  %1264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 0, i32 1
  %1265 = load i32, i32* %1264, align 4
  %1266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1259, i64 1
  store %"class.WTF::StringImpl"* %1266, %"class.WTF::StringImpl"** %1244, align 8
  br label %1267

1267:                                             ; preds = %1263, %1261
  %1268 = phi i32 [ %1265, %1263 ], [ 0, %1261 ]
  store i32 %1268, i32* %1246, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %16) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1241) #12
  %1269 = add i64 %1251, 1
  %1270 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  %1271 = icmp eq %"class.WTF::String"* %1257, %1270
  br i1 %1271, label %1247, label %1250

1272:                                             ; preds = %1247
  %1273 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram) #12
  %1274 = icmp eq i32 %1273, 0
  br i1 %1274, label %1276, label %1275

1275:                                             ; preds = %1272
  call void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram to %"class.blink::CustomCountHistogram"*), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.16, i64 0, i64 0), i32 1, i32 500, i32 50) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram) #12
  br label %1276

1276:                                             ; preds = %1275, %1272, %1247
  %1277 = load i32, i32* %1228, align 8
  call void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE27s_selector_length_histogram to %"class.blink::CustomCountHistogram"*), i32 %1277) #12
  %1278 = load i32, i32* %1228, align 8
  %1279 = icmp ugt i32 %1278, 500
  br i1 %1279, label %1283, label %1280

1280:                                             ; preds = %1276
  %1281 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %14) #12
  %1282 = ptrtoint %"class.WTF::StringImpl"* %1281 to i64
  br label %1283

1283:                                             ; preds = %1280, %1276
  %1284 = phi i64 [ %1282, %1280 ], [ 0, %1276 ]
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %14) #12
  %1285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1225, align 8
  %1286 = icmp eq %"class.WTF::StringImpl"* %1285, null
  br i1 %1286, label %1300, label %1287

1287:                                             ; preds = %1283
  %1288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1289 = load atomic i32, i32* %1288 monotonic, align 4
  %1290 = and i32 %1289, 2
  %1291 = icmp eq i32 %1290, 0
  %1292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1285, i64 0, i32 0
  %1293 = load i32, i32* %1292, align 4
  br i1 %1291, label %1294, label %1296

1294:                                             ; preds = %1287
  %1295 = add i32 %1293, -1
  store i32 %1295, i32* %1292, align 4
  br label %1296

1296:                                             ; preds = %1294, %1287
  %1297 = phi i32 [ %1295, %1294 ], [ %1293, %1287 ]
  %1298 = icmp eq i32 %1297, 0
  br i1 %1298, label %1299, label %1300

1299:                                             ; preds = %1296
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1285) #12
  br label %1300

1300:                                             ; preds = %1299, %1296, %1283
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %1224) #12
  %1301 = load %"class.WTF::String"*, %"class.WTF::String"** %184, align 8
  %1302 = icmp eq %"class.WTF::String"* %1301, null
  br i1 %1302, label %1336, label %1303, !prof !4

1303:                                             ; preds = %1300
  %1304 = bitcast %"class.WTF::String"* %1301 to i8*
  %1305 = load i32, i32* %186, align 4
  %1306 = icmp eq i32 %1305, 0
  br i1 %1306, label %1334, label %1307, !prof !3

1307:                                             ; preds = %1303
  %1308 = zext i32 %1305 to i64
  %1309 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1301, i64 %1308
  br label %1310

1310:                                             ; preds = %1328, %1307
  %1311 = phi %"class.WTF::String"* [ %1329, %1328 ], [ %1301, %1307 ]
  %1312 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1311, i64 0, i32 0, i32 0
  %1313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1312, align 8
  %1314 = icmp eq %"class.WTF::StringImpl"* %1313, null
  br i1 %1314, label %1328, label %1315

1315:                                             ; preds = %1310
  %1316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1317 = load atomic i32, i32* %1316 monotonic, align 4
  %1318 = and i32 %1317, 2
  %1319 = icmp eq i32 %1318, 0
  %1320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1313, i64 0, i32 0
  %1321 = load i32, i32* %1320, align 4
  br i1 %1319, label %1322, label %1324

1322:                                             ; preds = %1315
  %1323 = add i32 %1321, -1
  store i32 %1323, i32* %1320, align 4
  br label %1324

1324:                                             ; preds = %1322, %1315
  %1325 = phi i32 [ %1323, %1322 ], [ %1321, %1315 ]
  %1326 = icmp eq i32 %1325, 0
  br i1 %1326, label %1327, label %1328

1327:                                             ; preds = %1324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1313) #12
  br label %1328

1328:                                             ; preds = %1327, %1324, %1310
  %1329 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1311, i64 1
  %1330 = icmp eq %"class.WTF::String"* %1329, %1309
  br i1 %1330, label %1331, label %1310

1331:                                             ; preds = %1328
  store i32 0, i32* %186, align 4
  %1332 = bitcast %"class.WTF::Vector.630"* %12 to i8**
  %1333 = load i8*, i8** %1332, align 8
  br label %1334

1334:                                             ; preds = %1331, %1303
  %1335 = phi i8* [ %1333, %1331 ], [ %1304, %1303 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1335) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %184, align 8
  br label %1336

1336:                                             ; preds = %1334, %1300
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %183) #12
  %1337 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %178, align 8
  %1338 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %1337, i64 2
  %1339 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %1338, align 8
  %1340 = call i64 %1339(%"class.base::TickClock"* %177) #12
  %1341 = sub nsw i64 %1340, %182
  call void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL21ComputeUniqueSelectorEPNS_4NodeEE19s_scoped_us_counter to %"class.blink::CustomCountHistogram"*), i64 %1341) #12
  %1342 = icmp eq i8* %166, null
  br i1 %1342, label %1347, label %1343

1343:                                             ; preds = %1336
  %1344 = load i8, i8* %166, align 1
  %1345 = icmp eq i8 %1344, 0
  br i1 %1345, label %1347, label %1346

1346:                                             ; preds = %1343
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %166, i8* %167, i64 %168) #12
  br label %1347

1347:                                             ; preds = %147, %1336, %1343, %1346
  %1348 = phi i64 [ 0, %147 ], [ %1284, %1336 ], [ %1284, %1343 ], [ %1284, %1346 ]
  %1349 = inttoptr i64 %1348 to %"class.WTF::StringImpl"*
  %1350 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %128, align 8
  %1351 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %17, align 8
  %1352 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %1, i64 0, i32 2
  %1353 = load i32, i32* %1352, align 8
  %1354 = call fastcc { i64, i64 } @_ZN5blinkL14RelativeBoundsEPKNS_12LayoutObjectEPKNS_14ScrollableAreaE(%"class.blink::LayoutObject"* %1350, %"class.blink::ScrollableArea"* %1351) #12
  %1355 = extractvalue { i64, i64 } %1354, 0
  %1356 = extractvalue { i64, i64 } %1354, 1
  %1357 = trunc i64 %1356 to i32
  switch i32 %1353, label %1370 [
    i32 0, label %1358
    i32 1, label %1361
  ]

1358:                                             ; preds = %1347
  %1359 = trunc i64 %1355 to i32
  %1360 = and i64 %1355, -4294967296
  br label %1370

1361:                                             ; preds = %1347
  %1362 = trunc i64 %1355 to i32
  %1363 = and i64 %1355, -4294967296
  %1364 = icmp slt i32 %1357, 0
  %1365 = select i1 %1364, i32 -2147483648, i32 2147483647
  %1366 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1362, i32 %1357) #12
  %1367 = extractvalue { i32, i1 } %1366, 1
  %1368 = extractvalue { i32, i1 } %1366, 0
  %1369 = select i1 %1367, i32 %1365, i32 %1368, !prof !3
  br label %1370

1370:                                             ; preds = %1361, %1358, %1347
  %1371 = phi i32 [ %1369, %1361 ], [ %1359, %1358 ], [ 0, %1347 ]
  %1372 = phi i64 [ %1363, %1361 ], [ %1360, %1358 ], [ 0, %1347 ]
  %1373 = bitcast %"class.blink::ScrollableArea"* %1351 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %1374 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %1373, align 8
  %1375 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %1374, i64 88
  %1376 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %1375, align 8
  %1377 = call %"class.blink::LayoutBox"* %1376(%"class.blink::ScrollableArea"* %1351) #12
  %1378 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1377, i64 0, i32 0, i32 0, i32 5, i32 0
  %1379 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %1378, align 8
  %1380 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1379, i64 0, i32 0, i32 9
  %1381 = bitcast [20 x i8]* %1380 to i160*
  %1382 = load i160, i160* %1381, align 8
  %1383 = and i160 %1382, 15211807202738752817960438464512
  %1384 = icmp eq i160 %1383, 5070602400912917605986812821504
  br i1 %1384, label %1385, label %1392, !prof !3

1385:                                             ; preds = %1370
  %1386 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1377, i64 0, i32 0, i32 0
  %1387 = bitcast %"class.blink::LayoutBox"* %1377 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %1388 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %1387, align 8
  %1389 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %1388, i64 106
  %1390 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %1389, align 8
  %1391 = call i32 %1390(%"class.blink::LayoutObject"* %1386, i32 %1371, i32 0, %"class.blink::LayoutBox"* null) #12
  br label %1392

1392:                                             ; preds = %1370, %1385
  %1393 = phi i32 [ %1391, %1385 ], [ %1371, %1370 ]
  %1394 = icmp eq i64 %1348, 0
  br i1 %1394, label %1476, label %1395

1395:                                             ; preds = %1392
  %1396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1397 = load atomic i32, i32* %1396 monotonic, align 4
  %1398 = and i32 %1397, 2
  %1399 = icmp eq i32 %1398, 0
  %1400 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 0
  %1401 = load i32, i32* %1400, align 4
  br i1 %1399, label %1402, label %1412

1402:                                             ; preds = %1395
  %1403 = zext i32 %1401 to i33
  %1404 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1403, i33 1) #12
  %1405 = extractvalue { i33, i1 } %1404, 1
  %1406 = extractvalue { i33, i1 } %1404, 0
  %1407 = icmp slt i33 %1406, 0
  %1408 = or i1 %1405, %1407
  br i1 %1408, label %1409, label %1410, !prof !3

1409:                                             ; preds = %1402
  call void @llvm.trap() #12
  unreachable

1410:                                             ; preds = %1402
  %1411 = trunc i33 %1406 to i32
  store i32 %1411, i32* %1400, align 4
  br label %1412

1412:                                             ; preds = %1395, %1410
  %1413 = phi i32 [ %1411, %1410 ], [ %1401, %1395 ]
  %1414 = load atomic i32, i32* %1396 monotonic, align 4
  %1415 = and i32 %1414, 2
  %1416 = icmp eq i32 %1415, 0
  %1417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 0
  br i1 %1416, label %1418, label %1420

1418:                                             ; preds = %1412
  %1419 = add i32 %1413, -1
  store i32 %1419, i32* %1417, align 4
  br label %1420

1420:                                             ; preds = %1418, %1412
  %1421 = phi i32 [ %1419, %1418 ], [ %1413, %1412 ]
  %1422 = icmp eq i32 %1421, 0
  br i1 %1422, label %1423, label %1424

1423:                                             ; preds = %1420
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1349) #12
  br label %1424

1424:                                             ; preds = %1423, %1420
  %1425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 1
  %1426 = load i32, i32* %1425, align 4
  %1427 = icmp eq i32 %1426, 0
  br i1 %1427, label %1460, label %1428

1428:                                             ; preds = %1424
  %1429 = load atomic i32, i32* %1396 monotonic, align 4
  %1430 = and i32 %1429, 2
  %1431 = icmp eq i32 %1430, 0
  br i1 %1431, label %1432, label %1443

1432:                                             ; preds = %1428
  %1433 = load i32, i32* %1417, align 4
  %1434 = zext i32 %1433 to i33
  %1435 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1434, i33 1) #12
  %1436 = extractvalue { i33, i1 } %1435, 1
  %1437 = extractvalue { i33, i1 } %1435, 0
  %1438 = icmp slt i33 %1437, 0
  %1439 = or i1 %1436, %1438
  br i1 %1439, label %1440, label %1441, !prof !3

1440:                                             ; preds = %1432
  call void @llvm.trap() #12
  unreachable

1441:                                             ; preds = %1432
  %1442 = trunc i33 %1437 to i32
  store i32 %1442, i32* %1417, align 4
  br label %1443

1443:                                             ; preds = %1441, %1428
  %1444 = bitcast %"class.WTF::String"* %47 to i64*
  %1445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  store i64 %1348, i64* %1444, align 8
  %1446 = icmp eq %"class.WTF::StringImpl"* %1445, null
  br i1 %1446, label %1460, label %1447

1447:                                             ; preds = %1443
  %1448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1449 = load atomic i32, i32* %1448 monotonic, align 4
  %1450 = and i32 %1449, 2
  %1451 = icmp eq i32 %1450, 0
  %1452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1445, i64 0, i32 0
  %1453 = load i32, i32* %1452, align 4
  br i1 %1451, label %1454, label %1456

1454:                                             ; preds = %1447
  %1455 = add i32 %1453, -1
  store i32 %1455, i32* %1452, align 4
  br label %1456

1456:                                             ; preds = %1454, %1447
  %1457 = phi i32 [ %1455, %1454 ], [ %1453, %1447 ]
  %1458 = icmp eq i32 %1457, 0
  br i1 %1458, label %1459, label %1460

1459:                                             ; preds = %1456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1445) #12
  br label %1460

1460:                                             ; preds = %1424, %1459, %1456, %1443
  %1461 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1349, %"class.WTF::StringImpl"** %1461, align 8
  %1462 = load atomic i32, i32* %1396 monotonic, align 4
  %1463 = and i32 %1462, 2
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %1465, label %1483

1465:                                             ; preds = %1460
  %1466 = load i32, i32* %1417, align 4
  %1467 = zext i32 %1466 to i33
  %1468 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1467, i33 1) #12
  %1469 = extractvalue { i33, i1 } %1468, 1
  %1470 = extractvalue { i33, i1 } %1468, 0
  %1471 = icmp slt i33 %1470, 0
  %1472 = or i1 %1469, %1471
  br i1 %1472, label %1473, label %1474, !prof !3

1473:                                             ; preds = %1465
  call void @llvm.trap() #12
  unreachable

1474:                                             ; preds = %1465
  %1475 = trunc i33 %1470 to i32
  store i32 %1475, i32* %1417, align 4
  br label %1483

1476:                                             ; preds = %1392
  %1477 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1349, %"class.WTF::StringImpl"** %1477, align 8
  %1478 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 1
  %1479 = bitcast %"class.blink::LayoutPoint"* %1478 to i64*
  %1480 = zext i32 %1393 to i64
  %1481 = or i64 %1372, %1480
  store i64 %1481, i64* %1479, align 8
  %1482 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 2
  store i64 0, i64* %1482, align 8
  br label %1501

1483:                                             ; preds = %1460, %1474
  %1484 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 1
  %1485 = bitcast %"class.blink::LayoutPoint"* %1484 to i64*
  %1486 = zext i32 %1393 to i64
  %1487 = or i64 %1372, %1486
  store i64 %1487, i64* %1485, align 8
  %1488 = getelementptr inbounds %"struct.blink::SerializedAnchor", %"struct.blink::SerializedAnchor"* %0, i64 0, i32 2
  store i64 0, i64* %1488, align 8
  %1489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1490 = load atomic i32, i32* %1489 monotonic, align 4
  %1491 = and i32 %1490, 2
  %1492 = icmp eq i32 %1491, 0
  %1493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1349, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 4
  br i1 %1492, label %1495, label %1497

1495:                                             ; preds = %1483
  %1496 = add i32 %1494, -1
  store i32 %1496, i32* %1493, align 4
  br label %1497

1497:                                             ; preds = %1495, %1483
  %1498 = phi i32 [ %1496, %1495 ], [ %1494, %1483 ]
  %1499 = icmp eq i32 %1498, 0
  br i1 %1499, label %1500, label %1501

1500:                                             ; preds = %1497
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1349) #12
  br label %1501

1501:                                             ; preds = %1476, %1500, %1497, %134, %123
  ret void
}

declare void @_ZN5blink11StyleEngine17UpdateActiveStyleEv(%"class.blink::StyleEngine"*) local_unnamed_addr #4

declare void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor7DisposeEv(%"class.blink::ScrollAnchor"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %2, align 8
  %4 = icmp eq %"class.blink::ScrollableArea"* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ScrollableArea"* %3 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %7 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %7, i64 88
  %9 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %8, align 8
  %10 = tail call %"class.blink::LayoutBox"* %9(%"class.blink::ScrollableArea"* nonnull %3) #12
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %10, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %23

14:                                               ; preds = %5
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %10, i64 0, i32 0, i32 0
  br label %16

16:                                               ; preds = %14, %16
  %17 = phi %"class.blink::LayoutObject"* [ %19, %16 ], [ %15, %14 ]
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 7
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %19, i64 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %16, label %23

23:                                               ; preds = %16, %5
  %24 = phi %"class.blink::Node"* [ %12, %5 ], [ %21, %16 ]
  %25 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %24, i64 0, i32 3, i32 0, i32 0
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %28) #12
  %30 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %2, align 8
  %31 = icmp eq %"class.blink::ScrollableArea"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %23
  %33 = bitcast %"class.blink::ScrollableArea"* %30 to i1 (%"class.blink::ScrollableArea"*)***
  %34 = load i1 (%"class.blink::ScrollableArea"*)**, i1 (%"class.blink::ScrollableArea"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %34, i64 91
  %36 = load i1 (%"class.blink::ScrollableArea"*)*, i1 (%"class.blink::ScrollableArea"*)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::ScrollableArea"* nonnull %30) #12
  br i1 %37, label %40, label %38

38:                                               ; preds = %32
  %39 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %2, align 8
  br label %43

40:                                               ; preds = %32
  %41 = bitcast %"class.blink::ScrollableArea"* %30 to %"class.blink::RootFrameViewport"*
  %42 = tail call dereferenceable(80) %"class.blink::ScrollableArea"* @_ZNK5blink17RootFrameViewport14LayoutViewportEv(%"class.blink::RootFrameViewport"* nonnull %41) #12
  br label %43

43:                                               ; preds = %23, %38, %40
  %44 = phi %"class.blink::ScrollableArea"* [ %42, %40 ], [ %39, %38 ], [ null, %23 ]
  tail call void @_ZN5blink14LocalFrameView32DequeueScrollAnchoringAdjustmentEPNS_14ScrollableAreaE(%"class.blink::LocalFrameView"* %29, %"class.blink::ScrollableArea"* %44) #12
  %45 = bitcast %"class.blink::ScrollAnchor"* %0 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  br label %46

46:                                               ; preds = %1, %43
  %47 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %47, align 8
  %48 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %49 = bitcast %"class.WTF::String"* %48 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %48, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 0, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #12
  br label %66

66:                                               ; preds = %65, %62, %46
  ret void
}

declare void @_ZN5blink14LocalFrameView32DequeueScrollAnchoringAdjustmentEPNS_14ScrollableAreaE(%"class.blink::LocalFrameView"*, %"class.blink::ScrollableArea"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor5ClearEv(%"class.blink::ScrollAnchor"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::ScrollableArea"*, %"class.blink::ScrollableArea"** %6, align 8
  %8 = bitcast %"class.blink::ScrollableArea"* %7 to %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)***
  %9 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)**, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %9, i64 88
  %11 = load %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)*, %"class.blink::LayoutBox"* (%"class.blink::ScrollableArea"*)** %10, align 8
  %12 = tail call %"class.blink::LayoutBox"* %11(%"class.blink::ScrollableArea"* %7) #12
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %12, i64 0, i32 0, i32 0
  br label %14

14:                                               ; preds = %1, %5
  %15 = phi %"class.blink::LayoutObject"* [ %13, %5 ], [ %3, %1 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %55, label %19

19:                                               ; preds = %14
  %20 = tail call %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"* nonnull %17) #12
  %21 = icmp eq %"class.blink::PaintLayer"* %20, null
  br i1 %21, label %55, label %22

22:                                               ; preds = %19, %51
  %23 = phi %"class.blink::PaintLayer"* [ %53, %51 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %23, i64 0, i32 14, i32 0, i32 0
  %25 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %24, align 8
  %26 = icmp eq %"class.blink::PaintLayerScrollableArea"* %25, null
  br i1 %26, label %51, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %25, i64 0, i32 12, i32 1
  %29 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %28, align 8
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %25, i64 0, i32 12, i32 5
  %31 = bitcast %"class.WTF::String"* %30 to i64*
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %30, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  store i64 0, i64* %31, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #12
  br label %48

48:                                               ; preds = %47, %44, %27
  %49 = icmp eq %"class.blink::LayoutObject"* %29, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %29) #12
  br label %51

51:                                               ; preds = %50, %48, %22
  %52 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %23, i64 0, i32 3
  %53 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %52, align 8
  %54 = icmp eq %"class.blink::PaintLayer"* %53, null
  br i1 %54, label %55, label %22

55:                                               ; preds = %51, %14, %19
  ret void
}

declare %"class.blink::PaintLayer"* @_ZNK5blink12LayoutObject14EnclosingLayerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink12ScrollAnchor8RefersToEPKNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* nocapture readonly, %"class.blink::LayoutObject"* readnone) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, %1
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink12ScrollAnchor13NotifyRemovedEPNS_12LayoutObjectE(%"class.blink::ScrollAnchor"* nocapture, %"class.blink::LayoutObject"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 1
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, %1
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  store %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"** %3, align 8
  %7 = getelementptr inbounds %"class.blink::ScrollAnchor", %"class.blink::ScrollAnchor"* %0, i64 0, i32 5
  %8 = bitcast %"class.WTF::String"* %7 to i64*
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  store i64 0, i64* %8, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #12
  br label %25

25:                                               ; preds = %24, %21, %6
  %26 = icmp eq %"class.blink::LayoutObject"* %1, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %25
  tail call void @_ZN5blink12LayoutObject30MaybeClearIsScrollAnchorObjectEv(%"class.blink::LayoutObject"* nonnull %1) #12
  br label %28

28:                                               ; preds = %27, %25, %2
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #4

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #4

declare i32 @_ZNK5blink15LayoutBlockFlow24LowestFloatLogicalBottomENS_6EClearE(%"class.blink::LayoutBlockFlow"*, i32) local_unnamed_addr #4

declare void @_ZN5blink12PhysicalRect5UniteERKS0_(%"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #4

declare { <2 x float>, <2 x float> } @_ZNK5blink9FloatQuad11BoundingBoxEv(%"class.blink::FloatQuad"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #7

declare { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #7

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #4

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #4

declare void @_ZN5blink20CustomCountHistogram17CountMicrosecondsEN4base9TimeDeltaE(%"class.blink::CustomCountHistogram"*, i64) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #4

declare %"class.WTF::ListHashSet.1760"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #4

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #4

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #4

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #4

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN5blink20CustomCountHistogram5CountEi(%"class.blink::CustomCountHistogram"*, i32) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare void @_ZN5blink20CustomCountHistogramC1EPKciii(%"class.blink::CustomCountHistogram"*, i8*, i32, i32, i32) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIKS1_EEvOT_(%"class.WTF::Vector.630"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !4

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !4

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !4

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !4

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.630"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.630"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #12
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %113
  tail call void @llvm.trap() #12
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare void @_ZN5blink19SerializeIdentifierERKN3WTF6StringERNS0_13StringBuilderEb(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringBuilder"* dereferenceable(48), i1 zeroext) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder14ToAtomicStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZNK5blink13QualifiedName8ToStringEv(%"class.blink::QualifiedName"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_12AtomicStringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::AtomicString"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #1 comdat {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_12AtomicStringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_12AtomicStringES1_EC2ES1_S1_(%"class.WTF::StringAppend"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_12AtomicStringES1_EcvNS_6StringEEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #12
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #12
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #12
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2150"* nonnull %67, i8* %30) #12
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2150"* nonnull %68, i8* %71) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #12
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #12
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #12
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_12AtomicStringES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #12
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #12
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #12
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #12
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2150"* nonnull %144, i16* %107) #12
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter", %"class.WTF::StringTypeAdapter"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2150"* nonnull %145, i16* %148) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #12
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #12
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #12
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #12
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #12
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

declare i32 @_ZN5blink13NthIndexCache13NthChildIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.2148"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.2152"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #12
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %3, i8* %8) #12
  %9 = bitcast %"class.WTF::StringTypeAdapter.2152"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #12
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %2, i8* %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2148"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #12
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2148"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #12
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !3

41:                                               ; preds = %34
  call void @llvm.trap() #12
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #12
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2148"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #12
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2148"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #12
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !3

77:                                               ; preds = %70
  call void @llvm.trap() #12
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #12
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #12
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare i32 @_ZN5blink13NthIndexCache14NthOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #4

declare i32 @_ZN5blink13NthIndexCache18NthLastOfTypeIndexERNS_7ElementE(%"class.blink::Element"* dereferenceable(104)) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZN3WTF6VectorINS_12AtomicStringELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.361"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.361", %"class.WTF::Vector.361"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_12AtomicStringES1_EC2ES1_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #1 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #12
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #12
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #12
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #12
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #12
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #12
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

declare void @_ZN3WTF12AtomicStringC2EPKhm(%"class.WTF::AtomicString"*, i8*, i64) unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_12AtomicStringES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %31, i8* %32) #12
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #12
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #12
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #12
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %46, i8* %47) #12
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #12
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #12
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  ret i32 %24
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2150"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2150"*, i16*) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.2148"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.2152"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2152", %"class.WTF::StringTypeAdapter.2152"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.2152"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %4, i8* %14) #12
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2149"* %9) #12
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2149"* %9) #12
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %25, i8* %26) #12
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #12
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #12
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %41, i8* %42) #12
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.2148"*, i8*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2152"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2152"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.2152"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2152", %"class.WTF::StringTypeAdapter.2152"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.2153"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2153"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2152"* nonnull %3, i8* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.2150"* nonnull %34, i8* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2149"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2152"* nonnull %5, i8* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.2148"*, i16*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2153", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.2152"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.2152"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.WTF::StringTypeAdapter.2152"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2152", %"class.WTF::StringTypeAdapter.2152"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #12
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %3, i8* %14) #12
  %15 = bitcast %"class.WTF::StringTypeAdapter.2153"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.2148", %"class.WTF::StringAppend.2148"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #12
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.2153"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2152"* nonnull %3, i16* %1) #12
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2153", %"class.WTF::StringTypeAdapter.2153"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2150"* nonnull %34, i16* %37) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2149"* %6) #12
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2152"* nonnull %5, i16* %40) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"*, i8*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.2149"*) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.2152", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.2152"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.2152", %"class.WTF::StringTypeAdapter.2152"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.2149", %"class.WTF::StringAppend.2149"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.2152"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.2152"* nonnull %4, i8* %13) #12
  %14 = getelementptr inbounds %"class.WTF::StringAppend.2149", %"class.WTF::StringAppend.2149"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8* %30, i8* %31) #12
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #12
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #12
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #12
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* %45, i8* %46) #12
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.14, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #12
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #12
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #12
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.2152"*, i8*) local_unnamed_addr #4

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.2152"*, i16*) local_unnamed_addr #4

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #4

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.343"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7ElementEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.368"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.12, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.368", %"class.WTF::Vector.368"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.343"*, %"class.blink::Member.343"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.343", %"class.blink::Member.343"* %24, i64 %25
  ret %"class.blink::Member.343"* %26
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{!"branch_weights", i32 1, i32 1048575}
