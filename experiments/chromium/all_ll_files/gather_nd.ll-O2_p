; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/gather_nd.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/gather_nd.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::reference_ops::GatherNdHelperResult" = type { i32, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.tflite::DynamicBuffer" = type { %"class.std::__1::vector.2", %"class.std::__1::vector" }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { i8*, i8*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"struct.tflite::StringRef" = type { i8*, i32 }

$_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIfiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIhiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIaiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIiiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIliEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_ = comdat any

$_ZN6tflite13reference_ops14GatherNdStringIiEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIflEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIhlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIalEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIilEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd8GatherNdIllEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_ = comdat any

$_ZN6tflite13reference_ops14GatherNdStringIlEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [66 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/gather_nd.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [52 x i8] c"Params of type '%s' are not supported by gather_nd.\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"Indices of type '%s' are not supported by gather_nd.\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"Params must be at least a vector.\00", align 1
@.str.11 = private unnamed_addr constant [35 x i8] c"Indices must be at least a vector.\00", align 1
@.str.12 = private unnamed_addr constant [57 x i8] c"Index innermost dimension length must be <= params rank.\00", align 1
@_ZZN6tflite3ops7builtin18Register_GATHER_NDEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9gather_nd7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9gather_nd4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.14 = private unnamed_addr constant [49 x i8] c"Params type '%s' are not supported by gather_nd.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9gather_nd7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %6, i32 2) #8
  br label %205

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #8
  br label %205

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %29, %34
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %42 = load i32, i32* %41, align 4
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %46 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %45, align 8
  %47 = sext i32 %42 to i64
  %48 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 %47
  br label %49

49:                                               ; preds = %39, %44
  %50 = phi %struct.TfLiteTensor* [ %48, %44 ], [ null, %39 ]
  %51 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %52 = load i32, i32* %51, align 8
  switch i32 %52, label %53 [
    i32 1, label %57
    i32 3, label %57
    i32 9, label %57
    i32 4, label %57
    i32 2, label %57
    i32 5, label %57
  ]

53:                                               ; preds = %49
  %54 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %55 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %54, align 8
  %56 = tail call i8* @TfLiteTypeGetName(i32 %52) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %55(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8, i64 0, i64 0), i8* %56) #8
  br label %205

57:                                               ; preds = %49, %49, %49, %49, %49, %49
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  switch i32 %59, label %60 [
    i32 4, label %64
    i32 2, label %64
  ]

60:                                               ; preds = %57
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %62 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %61, align 8
  %63 = tail call i8* @TfLiteTypeGetName(i32 %59) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %62(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i8* %63) #8
  br label %205

64:                                               ; preds = %57, %57
  %65 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %66 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %67 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %70 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = add i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %70, i64 0, i32 1, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = icmp slt i32 %68, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %64
  %79 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %80 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %79, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %80(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10, i64 0, i64 0)) #8
  br label %205

81:                                               ; preds = %64
  %82 = icmp slt i32 %72, 1
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %85 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %84, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %85(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #8
  br label %205

86:                                               ; preds = %81
  %87 = icmp sgt i32 %76, %68
  br i1 %87, label %88, label %91

88:                                               ; preds = %86
  %89 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %90 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %89, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %90(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.12, i64 0, i64 0)) #8
  br label %205

91:                                               ; preds = %86
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %50, i64 0, i32 0
  store i32 %52, i32* %92, align 8
  %93 = add nuw nsw i32 %72, %68
  %94 = xor i32 %76, -1
  %95 = add i32 %93, %94
  %96 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %95) #8
  %97 = icmp sgt i32 %73, 0
  br i1 %97, label %98, label %118

98:                                               ; preds = %91
  %99 = zext i32 %73 to i64
  %100 = add nsw i64 %99, -1
  %101 = and i64 %99, 3
  %102 = icmp ult i64 %100, 3
  br i1 %102, label %105, label %103

103:                                              ; preds = %98
  %104 = sub nsw i64 %99, %101
  br label %148

105:                                              ; preds = %148, %98
  %106 = phi i64 [ 0, %98 ], [ %169, %148 ]
  %107 = icmp eq i64 %101, 0
  br i1 %107, label %118, label %108

108:                                              ; preds = %105, %108
  %109 = phi i64 [ %114, %108 ], [ %106, %105 ]
  %110 = phi i64 [ %116, %108 ], [ %101, %105 ]
  %111 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %112 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %111, i64 0, i32 1, i64 %109
  %113 = load i32, i32* %112, align 4
  %114 = add nuw nsw i64 %109, 1
  %115 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %109
  store i32 %113, i32* %115, align 4
  %116 = add i64 %110, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %108, !llvm.loop !2

118:                                              ; preds = %105, %108, %91
  %119 = phi i32 [ 0, %91 ], [ %73, %108 ], [ %73, %105 ]
  %120 = icmp slt i32 %76, %68
  br i1 %120, label %121, label %173

121:                                              ; preds = %118
  %122 = sext i32 %76 to i64
  %123 = zext i32 %119 to i64
  %124 = add i32 %119, %68
  %125 = sub i32 %124, %76
  %126 = zext i32 %125 to i64
  %127 = sub nsw i64 %126, %123
  %128 = xor i64 %123, -1
  %129 = add nsw i64 %128, %126
  %130 = and i64 %127, 3
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %144, label %132

132:                                              ; preds = %121, %132
  %133 = phi i64 [ %139, %132 ], [ %123, %121 ]
  %134 = phi i64 [ %141, %132 ], [ %122, %121 ]
  %135 = phi i64 [ %142, %132 ], [ %130, %121 ]
  %136 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %136, i64 0, i32 1, i64 %134
  %138 = load i32, i32* %137, align 4
  %139 = add nuw nsw i64 %133, 1
  %140 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %133
  store i32 %138, i32* %140, align 4
  %141 = add nsw i64 %134, 1
  %142 = add i64 %135, -1
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %132, !llvm.loop !4

144:                                              ; preds = %132, %121
  %145 = phi i64 [ %123, %121 ], [ %139, %132 ]
  %146 = phi i64 [ %122, %121 ], [ %141, %132 ]
  %147 = icmp ult i64 %129, 3
  br i1 %147, label %173, label %177

148:                                              ; preds = %148, %103
  %149 = phi i64 [ 0, %103 ], [ %169, %148 ]
  %150 = phi i64 [ %104, %103 ], [ %171, %148 ]
  %151 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %151, i64 0, i32 1, i64 %149
  %153 = load i32, i32* %152, align 4
  %154 = or i64 %149, 1
  %155 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %149
  store i32 %153, i32* %155, align 4
  %156 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %157 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %156, i64 0, i32 1, i64 %154
  %158 = load i32, i32* %157, align 4
  %159 = or i64 %149, 2
  %160 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %154
  store i32 %158, i32* %160, align 4
  %161 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %162 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %161, i64 0, i32 1, i64 %159
  %163 = load i32, i32* %162, align 4
  %164 = or i64 %149, 3
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %159
  store i32 %163, i32* %165, align 4
  %166 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %69, align 8
  %167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %166, i64 0, i32 1, i64 %164
  %168 = load i32, i32* %167, align 4
  %169 = add nuw nsw i64 %149, 4
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %164
  store i32 %168, i32* %170, align 4
  %171 = add i64 %150, -4
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %105, label %148

173:                                              ; preds = %144, %177, %118
  %174 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %175 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %174, align 8
  %176 = tail call i32 %175(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %50, %struct.TfLiteIntArray* %96) #8
  br label %205

177:                                              ; preds = %144, %177
  %178 = phi i64 [ %201, %177 ], [ %145, %144 ]
  %179 = phi i64 [ %203, %177 ], [ %146, %144 ]
  %180 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %181 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %180, i64 0, i32 1, i64 %179
  %182 = load i32, i32* %181, align 4
  %183 = add nuw nsw i64 %178, 1
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %178
  store i32 %182, i32* %184, align 4
  %185 = add nsw i64 %179, 1
  %186 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %187 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %186, i64 0, i32 1, i64 %185
  %188 = load i32, i32* %187, align 4
  %189 = add nuw nsw i64 %178, 2
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %183
  store i32 %188, i32* %190, align 4
  %191 = add nsw i64 %179, 2
  %192 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %193 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %192, i64 0, i32 1, i64 %191
  %194 = load i32, i32* %193, align 4
  %195 = add nuw nsw i64 %178, 3
  %196 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %189
  store i32 %194, i32* %196, align 4
  %197 = add nsw i64 %179, 3
  %198 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %65, align 8
  %199 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %198, i64 0, i32 1, i64 %197
  %200 = load i32, i32* %199, align 4
  %201 = add nuw nsw i64 %178, 4
  %202 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %96, i64 0, i32 1, i64 %195
  store i32 %200, i32* %202, align 4
  %203 = add nsw i64 %179, 4
  %204 = icmp eq i64 %201, %126
  br i1 %204, label %173, label %177

205:                                              ; preds = %53, %60, %173, %88, %83, %78, %17, %8
  %206 = phi i32 [ 1, %8 ], [ 1, %17 ], [ 1, %53 ], [ 1, %60 ], [ 1, %78 ], [ 1, %83 ], [ 1, %88 ], [ %176, %173 ]
  ret i32 %206
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9gather_nd4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %13 ]
  %25 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %26 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %25, align 8
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %26, i64 0, i32 1, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %23, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %23 ]
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  switch i32 %38, label %43 [
    i32 2, label %39
    i32 4, label %41
  ]

39:                                               ; preds = %35
  %40 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %14, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %36)
  br label %47

41:                                               ; preds = %35
  %42 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %14, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %36)
  br label %47

43:                                               ; preds = %35
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %45 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %44, align 8
  %46 = tail call i8* @TfLiteTypeGetName(i32 %38) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %45(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0), i8* %46) #8
  br label %47

47:                                               ; preds = %43, %41, %39
  %48 = phi i32 [ 1, %43 ], [ %42, %41 ], [ %40, %39 ]
  ret i32 %48
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIiEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %19 [
    i32 1, label %7
    i32 3, label %9
    i32 9, label %11
    i32 2, label %13
    i32 4, label %15
    i32 5, label %17
  ]

7:                                                ; preds = %4
  %8 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIfiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIhiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

11:                                               ; preds = %4
  %12 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIaiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

13:                                               ; preds = %4
  %14 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIiiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

15:                                               ; preds = %4
  %16 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIliEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

17:                                               ; preds = %4
  %18 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  %22 = tail call i8* @TfLiteTypeGetName(i32 %6) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* %22) #8
  br label %23

23:                                               ; preds = %19, %17, %15, %13, %11, %9, %7
  %24 = phi i32 [ 1, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd12EvalGatherNdIlEE12TfLiteStatusP13TfLiteContextPK12TfLiteTensorS9_PS7_(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %19 [
    i32 1, label %7
    i32 3, label %9
    i32 9, label %11
    i32 2, label %13
    i32 4, label %15
    i32 5, label %17
  ]

7:                                                ; preds = %4
  %8 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIflEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

9:                                                ; preds = %4
  %10 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIhlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

11:                                               ; preds = %4
  %12 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIalEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

13:                                               ; preds = %4
  %14 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIilEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

15:                                               ; preds = %4
  %16 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIllEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

17:                                               ; preds = %4
  %18 = tail call i32 @_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor* %1, %struct.TfLiteTensor* %2, %struct.TfLiteTensor* %3)
  br label %23

19:                                               ; preds = %4
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  %22 = tail call i8* @TfLiteTypeGetName(i32 %6) #8
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.14, i64 0, i64 0), i8* %22) #8
  br label %23

23:                                               ; preds = %19, %17, %15, %13, %11, %9, %7
  %24 = phi i32 [ 1, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ]
  ret i32 %24
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_GATHER_NDEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin18Register_GATHER_NDEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIfiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !5
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !5
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !5
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !5
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !5
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !5
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to float**
  %39 = load float*, float** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi float* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !8
  br label %73

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !8
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !8
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !8
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !8
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !8
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %72 = load i32*, i32** %71, align 8
  br label %73

73:                                               ; preds = %44, %66
  %74 = phi i32* [ %72, %66 ], [ null, %44 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %76 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !11
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !11
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !11
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !11
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #9, !noalias !11
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !11
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to float**
  %106 = load float*, float** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi i32 [ %83, %99 ], [ 0, %77 ]
  %109 = phi float* [ %106, %99 ], [ null, %77 ]
  %110 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %111 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %250

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %118 = load i32, i32* %115, align 8
  %119 = icmp sgt i32 %118, 0
  %120 = sext i32 %118 to i64
  %121 = add nsw i64 %120, -1
  %122 = add nsw i64 %120, -8
  %123 = lshr i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = icmp ult i32 %118, 8
  %126 = trunc i64 %121 to i32
  %127 = icmp ugt i64 %121, 4294967295
  %128 = and i64 %120, -8
  %129 = and i64 %124, 1
  %130 = icmp eq i64 %123, 0
  %131 = sub nuw nsw i64 %124, %129
  %132 = icmp eq i64 %129, 0
  %133 = icmp eq i64 %128, %120
  %134 = and i64 %120, 1
  %135 = icmp eq i64 %134, 0
  %136 = sub nsw i64 0, %120
  br label %137

137:                                              ; preds = %259, %114
  %138 = phi i32 [ 0, %114 ], [ %271, %259 ]
  %139 = mul i32 %118, %138
  br i1 %119, label %140, label %259

140:                                              ; preds = %137
  %141 = load i32*, i32** %116, align 8
  %142 = mul nsw i32 %138, %118
  br i1 %125, label %143, label %163

143:                                              ; preds = %241, %163, %140
  %144 = phi i64 [ 0, %163 ], [ 0, %140 ], [ %128, %241 ]
  %145 = phi i32 [ 0, %163 ], [ 0, %140 ], [ %249, %241 ]
  %146 = xor i64 %144, -1
  br i1 %135, label %158, label %147

147:                                              ; preds = %143
  %148 = trunc i64 %144 to i32
  %149 = add nsw i32 %142, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %74, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i32, i32* %141, i64 %144
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %154, %152
  %156 = add nsw i32 %155, %145
  %157 = or i64 %144, 1
  br label %158

158:                                              ; preds = %147, %143
  %159 = phi i32 [ %156, %147 ], [ undef, %143 ]
  %160 = phi i64 [ %157, %147 ], [ %144, %143 ]
  %161 = phi i32 [ %156, %147 ], [ %145, %143 ]
  %162 = icmp eq i64 %146, %136
  br i1 %162, label %259, label %273

163:                                              ; preds = %140
  %164 = add i32 %139, %126
  %165 = icmp slt i32 %164, %139
  %166 = or i1 %165, %127
  br i1 %166, label %143, label %167

167:                                              ; preds = %163
  br i1 %130, label %215, label %168

168:                                              ; preds = %167, %168
  %169 = phi i64 [ %212, %168 ], [ 0, %167 ]
  %170 = phi <4 x i32> [ %210, %168 ], [ zeroinitializer, %167 ]
  %171 = phi <4 x i32> [ %211, %168 ], [ zeroinitializer, %167 ]
  %172 = phi i64 [ %213, %168 ], [ %131, %167 ]
  %173 = trunc i64 %169 to i32
  %174 = add nsw i32 %142, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %74, i64 %175
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 4
  %182 = getelementptr inbounds i32, i32* %141, i64 %169
  %183 = bitcast i32* %182 to <4 x i32>*
  %184 = load <4 x i32>, <4 x i32>* %183, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 4
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4
  %188 = mul nsw <4 x i32> %184, %178
  %189 = mul nsw <4 x i32> %187, %181
  %190 = add nsw <4 x i32> %188, %170
  %191 = add nsw <4 x i32> %189, %171
  %192 = or i64 %169, 8
  %193 = trunc i64 %192 to i32
  %194 = add nsw i32 %142, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %74, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = getelementptr inbounds i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4
  %202 = getelementptr inbounds i32, i32* %141, i64 %192
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4
  %205 = getelementptr inbounds i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4
  %208 = mul nsw <4 x i32> %204, %198
  %209 = mul nsw <4 x i32> %207, %201
  %210 = add nsw <4 x i32> %208, %190
  %211 = add nsw <4 x i32> %209, %191
  %212 = add i64 %169, 16
  %213 = add i64 %172, -2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %168, !llvm.loop !14

215:                                              ; preds = %168, %167
  %216 = phi <4 x i32> [ undef, %167 ], [ %210, %168 ]
  %217 = phi <4 x i32> [ undef, %167 ], [ %211, %168 ]
  %218 = phi i64 [ 0, %167 ], [ %212, %168 ]
  %219 = phi <4 x i32> [ zeroinitializer, %167 ], [ %210, %168 ]
  %220 = phi <4 x i32> [ zeroinitializer, %167 ], [ %211, %168 ]
  br i1 %132, label %241, label %221

221:                                              ; preds = %215
  %222 = trunc i64 %218 to i32
  %223 = add nsw i32 %142, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %74, i64 %224
  %226 = getelementptr inbounds i32, i32* %141, i64 %218
  %227 = getelementptr inbounds i32, i32* %226, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4
  %230 = getelementptr inbounds i32, i32* %225, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4
  %233 = mul nsw <4 x i32> %229, %232
  %234 = add nsw <4 x i32> %233, %220
  %235 = bitcast i32* %226 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = bitcast i32* %225 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4
  %239 = mul nsw <4 x i32> %236, %238
  %240 = add nsw <4 x i32> %239, %219
  br label %241

241:                                              ; preds = %215, %221
  %242 = phi <4 x i32> [ %216, %215 ], [ %240, %221 ]
  %243 = phi <4 x i32> [ %217, %215 ], [ %234, %221 ]
  %244 = add <4 x i32> %243, %242
  %245 = shufflevector <4 x i32> %244, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %246 = add <4 x i32> %244, %245
  %247 = shufflevector <4 x i32> %246, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %248 = add <4 x i32> %246, %247
  %249 = extractelement <4 x i32> %248, i32 0
  br i1 %133, label %259, label %143

250:                                              ; preds = %259, %107
  %251 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %297, label %254

254:                                              ; preds = %250
  %255 = ptrtoint i32* %252 to i64
  %256 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %257 = bitcast i32** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = bitcast i32* %252 to i8*
  call void @_ZdlPv(i8* %258) #9
  br label %297

259:                                              ; preds = %158, %273, %241, %137
  %260 = phi i32 [ 0, %137 ], [ %249, %241 ], [ %159, %158 ], [ %294, %273 ]
  %261 = load i32, i32* %117, align 4
  %262 = mul nsw i32 %261, %138
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds float, float* %109, i64 %263
  %265 = bitcast float* %264 to i8*
  %266 = sext i32 %260 to i64
  %267 = getelementptr inbounds float, float* %41, i64 %266
  %268 = bitcast float* %267 to i8*
  %269 = sext i32 %261 to i64
  %270 = shl nsw i64 %269, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %265, i8* align 4 %268, i64 %270, i1 false) #8
  %271 = add nuw nsw i32 %138, 1
  %272 = icmp eq i32 %271, %112
  br i1 %272, label %250, label %137

273:                                              ; preds = %158, %273
  %274 = phi i64 [ %295, %273 ], [ %160, %158 ]
  %275 = phi i32 [ %294, %273 ], [ %161, %158 ]
  %276 = trunc i64 %274 to i32
  %277 = add nsw i32 %142, %276
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %74, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds i32, i32* %141, i64 %274
  %282 = load i32, i32* %281, align 4
  %283 = mul nsw i32 %282, %280
  %284 = add nsw i32 %283, %275
  %285 = add nuw nsw i64 %274, 1
  %286 = trunc i64 %285 to i32
  %287 = add nsw i32 %142, %286
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i32, i32* %74, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds i32, i32* %141, i64 %285
  %292 = load i32, i32* %291, align 4
  %293 = mul nsw i32 %292, %290
  %294 = add nsw i32 %293, %284
  %295 = add nuw nsw i64 %274, 2
  %296 = icmp eq i64 %295, %120
  br i1 %296, label %259, label %273, !llvm.loop !16

297:                                              ; preds = %250, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #8
  %298 = icmp sgt i32 %108, 5
  br i1 %298, label %299, label %305

299:                                              ; preds = %297
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %297, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp sgt i32 %307, 5
  br i1 %308, label %309, label %315

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = bitcast i32* %311 to i8*
  call void @_ZdaPv(i8* %314) #9
  br label %315

315:                                              ; preds = %305, %309, %313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp sgt i32 %317, 5
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %321 = load i32*, i32** %320, align 8
  %322 = icmp eq i32* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = bitcast i32* %321 to i8*
  call void @_ZdaPv(i8* %324) #9
  br label %325

325:                                              ; preds = %315, %319, %323
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIhiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !17
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !17
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !17
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !17
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !17
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !17
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i8* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !20
  br label %73

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !20
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !20
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !20
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !20
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !20
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %72 = load i32*, i32** %71, align 8
  br label %73

73:                                               ; preds = %44, %66
  %74 = phi i32* [ %72, %66 ], [ null, %44 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %76 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !23
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !23
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !23
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !23
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #9, !noalias !23
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !23
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi i32 [ %83, %99 ], [ 0, %77 ]
  %109 = phi i8* [ %106, %99 ], [ null, %77 ]
  %110 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %111 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %250

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %118 = load i32, i32* %115, align 8
  %119 = icmp sgt i32 %118, 0
  %120 = sext i32 %118 to i64
  %121 = add nsw i64 %120, -1
  %122 = add nsw i64 %120, -8
  %123 = lshr i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = icmp ult i32 %118, 8
  %126 = trunc i64 %121 to i32
  %127 = icmp ugt i64 %121, 4294967295
  %128 = and i64 %120, -8
  %129 = and i64 %124, 1
  %130 = icmp eq i64 %123, 0
  %131 = sub nuw nsw i64 %124, %129
  %132 = icmp eq i64 %129, 0
  %133 = icmp eq i64 %128, %120
  %134 = and i64 %120, 1
  %135 = icmp eq i64 %134, 0
  %136 = sub nsw i64 0, %120
  br label %137

137:                                              ; preds = %259, %114
  %138 = phi i32 [ 0, %114 ], [ %268, %259 ]
  %139 = mul i32 %118, %138
  br i1 %119, label %140, label %259

140:                                              ; preds = %137
  %141 = load i32*, i32** %116, align 8
  %142 = mul nsw i32 %138, %118
  br i1 %125, label %143, label %163

143:                                              ; preds = %241, %163, %140
  %144 = phi i64 [ 0, %163 ], [ 0, %140 ], [ %128, %241 ]
  %145 = phi i32 [ 0, %163 ], [ 0, %140 ], [ %249, %241 ]
  %146 = xor i64 %144, -1
  br i1 %135, label %158, label %147

147:                                              ; preds = %143
  %148 = trunc i64 %144 to i32
  %149 = add nsw i32 %142, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %74, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i32, i32* %141, i64 %144
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %154, %152
  %156 = add nsw i32 %155, %145
  %157 = or i64 %144, 1
  br label %158

158:                                              ; preds = %147, %143
  %159 = phi i32 [ %156, %147 ], [ undef, %143 ]
  %160 = phi i64 [ %157, %147 ], [ %144, %143 ]
  %161 = phi i32 [ %156, %147 ], [ %145, %143 ]
  %162 = icmp eq i64 %146, %136
  br i1 %162, label %259, label %270

163:                                              ; preds = %140
  %164 = add i32 %139, %126
  %165 = icmp slt i32 %164, %139
  %166 = or i1 %165, %127
  br i1 %166, label %143, label %167

167:                                              ; preds = %163
  br i1 %130, label %215, label %168

168:                                              ; preds = %167, %168
  %169 = phi i64 [ %212, %168 ], [ 0, %167 ]
  %170 = phi <4 x i32> [ %210, %168 ], [ zeroinitializer, %167 ]
  %171 = phi <4 x i32> [ %211, %168 ], [ zeroinitializer, %167 ]
  %172 = phi i64 [ %213, %168 ], [ %131, %167 ]
  %173 = trunc i64 %169 to i32
  %174 = add nsw i32 %142, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %74, i64 %175
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 4
  %182 = getelementptr inbounds i32, i32* %141, i64 %169
  %183 = bitcast i32* %182 to <4 x i32>*
  %184 = load <4 x i32>, <4 x i32>* %183, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 4
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4
  %188 = mul nsw <4 x i32> %184, %178
  %189 = mul nsw <4 x i32> %187, %181
  %190 = add nsw <4 x i32> %188, %170
  %191 = add nsw <4 x i32> %189, %171
  %192 = or i64 %169, 8
  %193 = trunc i64 %192 to i32
  %194 = add nsw i32 %142, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %74, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = getelementptr inbounds i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4
  %202 = getelementptr inbounds i32, i32* %141, i64 %192
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4
  %205 = getelementptr inbounds i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4
  %208 = mul nsw <4 x i32> %204, %198
  %209 = mul nsw <4 x i32> %207, %201
  %210 = add nsw <4 x i32> %208, %190
  %211 = add nsw <4 x i32> %209, %191
  %212 = add i64 %169, 16
  %213 = add i64 %172, -2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %168, !llvm.loop !26

215:                                              ; preds = %168, %167
  %216 = phi <4 x i32> [ undef, %167 ], [ %210, %168 ]
  %217 = phi <4 x i32> [ undef, %167 ], [ %211, %168 ]
  %218 = phi i64 [ 0, %167 ], [ %212, %168 ]
  %219 = phi <4 x i32> [ zeroinitializer, %167 ], [ %210, %168 ]
  %220 = phi <4 x i32> [ zeroinitializer, %167 ], [ %211, %168 ]
  br i1 %132, label %241, label %221

221:                                              ; preds = %215
  %222 = trunc i64 %218 to i32
  %223 = add nsw i32 %142, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %74, i64 %224
  %226 = getelementptr inbounds i32, i32* %141, i64 %218
  %227 = getelementptr inbounds i32, i32* %226, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4
  %230 = getelementptr inbounds i32, i32* %225, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4
  %233 = mul nsw <4 x i32> %229, %232
  %234 = add nsw <4 x i32> %233, %220
  %235 = bitcast i32* %226 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = bitcast i32* %225 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4
  %239 = mul nsw <4 x i32> %236, %238
  %240 = add nsw <4 x i32> %239, %219
  br label %241

241:                                              ; preds = %215, %221
  %242 = phi <4 x i32> [ %216, %215 ], [ %240, %221 ]
  %243 = phi <4 x i32> [ %217, %215 ], [ %234, %221 ]
  %244 = add <4 x i32> %243, %242
  %245 = shufflevector <4 x i32> %244, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %246 = add <4 x i32> %244, %245
  %247 = shufflevector <4 x i32> %246, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %248 = add <4 x i32> %246, %247
  %249 = extractelement <4 x i32> %248, i32 0
  br i1 %133, label %259, label %143

250:                                              ; preds = %259, %107
  %251 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %294, label %254

254:                                              ; preds = %250
  %255 = ptrtoint i32* %252 to i64
  %256 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %257 = bitcast i32** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = bitcast i32* %252 to i8*
  call void @_ZdlPv(i8* %258) #9
  br label %294

259:                                              ; preds = %158, %270, %241, %137
  %260 = phi i32 [ 0, %137 ], [ %249, %241 ], [ %159, %158 ], [ %291, %270 ]
  %261 = load i32, i32* %117, align 4
  %262 = mul nsw i32 %261, %138
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8, i8* %109, i64 %263
  %265 = sext i32 %260 to i64
  %266 = getelementptr inbounds i8, i8* %41, i64 %265
  %267 = sext i32 %261 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %264, i8* align 1 %266, i64 %267, i1 false) #8
  %268 = add nuw nsw i32 %138, 1
  %269 = icmp eq i32 %268, %112
  br i1 %269, label %250, label %137

270:                                              ; preds = %158, %270
  %271 = phi i64 [ %292, %270 ], [ %160, %158 ]
  %272 = phi i32 [ %291, %270 ], [ %161, %158 ]
  %273 = trunc i64 %271 to i32
  %274 = add nsw i32 %142, %273
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i32, i32* %74, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %141, i64 %271
  %279 = load i32, i32* %278, align 4
  %280 = mul nsw i32 %279, %277
  %281 = add nsw i32 %280, %272
  %282 = add nuw nsw i64 %271, 1
  %283 = trunc i64 %282 to i32
  %284 = add nsw i32 %142, %283
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i32, i32* %74, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i32, i32* %141, i64 %282
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, %287
  %291 = add nsw i32 %290, %281
  %292 = add nuw nsw i64 %271, 2
  %293 = icmp eq i64 %292, %120
  br i1 %293, label %259, label %270, !llvm.loop !27

294:                                              ; preds = %250, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #8
  %295 = icmp sgt i32 %108, 5
  br i1 %295, label %296, label %302

296:                                              ; preds = %294
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %298 = load i32*, i32** %297, align 8
  %299 = icmp eq i32* %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %296
  %301 = bitcast i32* %298 to i8*
  call void @_ZdaPv(i8* %301) #9
  br label %302

302:                                              ; preds = %294, %296, %300
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = icmp sgt i32 %304, 5
  br i1 %305, label %306, label %312

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %302, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %313 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, 5
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = icmp eq i32* %318, null
  br i1 %319, label %322, label %320

320:                                              ; preds = %316
  %321 = bitcast i32* %318 to i8*
  call void @_ZdaPv(i8* %321) #9
  br label %322

322:                                              ; preds = %312, %316, %320
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIaiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !28
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !28
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !28
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !28
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !28
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !28
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i8* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !31
  br label %73

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !31
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !31
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !31
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !31
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !31
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %72 = load i32*, i32** %71, align 8
  br label %73

73:                                               ; preds = %44, %66
  %74 = phi i32* [ %72, %66 ], [ null, %44 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %76 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !34
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !34
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !34
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !34
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #9, !noalias !34
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !34
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to i8**
  %106 = load i8*, i8** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi i32 [ %83, %99 ], [ 0, %77 ]
  %109 = phi i8* [ %106, %99 ], [ null, %77 ]
  %110 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %111 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %250

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %118 = load i32, i32* %115, align 8
  %119 = icmp sgt i32 %118, 0
  %120 = sext i32 %118 to i64
  %121 = add nsw i64 %120, -1
  %122 = add nsw i64 %120, -8
  %123 = lshr i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = icmp ult i32 %118, 8
  %126 = trunc i64 %121 to i32
  %127 = icmp ugt i64 %121, 4294967295
  %128 = and i64 %120, -8
  %129 = and i64 %124, 1
  %130 = icmp eq i64 %123, 0
  %131 = sub nuw nsw i64 %124, %129
  %132 = icmp eq i64 %129, 0
  %133 = icmp eq i64 %128, %120
  %134 = and i64 %120, 1
  %135 = icmp eq i64 %134, 0
  %136 = sub nsw i64 0, %120
  br label %137

137:                                              ; preds = %259, %114
  %138 = phi i32 [ 0, %114 ], [ %268, %259 ]
  %139 = mul i32 %118, %138
  br i1 %119, label %140, label %259

140:                                              ; preds = %137
  %141 = load i32*, i32** %116, align 8
  %142 = mul nsw i32 %138, %118
  br i1 %125, label %143, label %163

143:                                              ; preds = %241, %163, %140
  %144 = phi i64 [ 0, %163 ], [ 0, %140 ], [ %128, %241 ]
  %145 = phi i32 [ 0, %163 ], [ 0, %140 ], [ %249, %241 ]
  %146 = xor i64 %144, -1
  br i1 %135, label %158, label %147

147:                                              ; preds = %143
  %148 = trunc i64 %144 to i32
  %149 = add nsw i32 %142, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %74, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i32, i32* %141, i64 %144
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %154, %152
  %156 = add nsw i32 %155, %145
  %157 = or i64 %144, 1
  br label %158

158:                                              ; preds = %147, %143
  %159 = phi i32 [ %156, %147 ], [ undef, %143 ]
  %160 = phi i64 [ %157, %147 ], [ %144, %143 ]
  %161 = phi i32 [ %156, %147 ], [ %145, %143 ]
  %162 = icmp eq i64 %146, %136
  br i1 %162, label %259, label %270

163:                                              ; preds = %140
  %164 = add i32 %139, %126
  %165 = icmp slt i32 %164, %139
  %166 = or i1 %165, %127
  br i1 %166, label %143, label %167

167:                                              ; preds = %163
  br i1 %130, label %215, label %168

168:                                              ; preds = %167, %168
  %169 = phi i64 [ %212, %168 ], [ 0, %167 ]
  %170 = phi <4 x i32> [ %210, %168 ], [ zeroinitializer, %167 ]
  %171 = phi <4 x i32> [ %211, %168 ], [ zeroinitializer, %167 ]
  %172 = phi i64 [ %213, %168 ], [ %131, %167 ]
  %173 = trunc i64 %169 to i32
  %174 = add nsw i32 %142, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %74, i64 %175
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 4
  %182 = getelementptr inbounds i32, i32* %141, i64 %169
  %183 = bitcast i32* %182 to <4 x i32>*
  %184 = load <4 x i32>, <4 x i32>* %183, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 4
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4
  %188 = mul nsw <4 x i32> %184, %178
  %189 = mul nsw <4 x i32> %187, %181
  %190 = add nsw <4 x i32> %188, %170
  %191 = add nsw <4 x i32> %189, %171
  %192 = or i64 %169, 8
  %193 = trunc i64 %192 to i32
  %194 = add nsw i32 %142, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %74, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = getelementptr inbounds i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4
  %202 = getelementptr inbounds i32, i32* %141, i64 %192
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4
  %205 = getelementptr inbounds i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4
  %208 = mul nsw <4 x i32> %204, %198
  %209 = mul nsw <4 x i32> %207, %201
  %210 = add nsw <4 x i32> %208, %190
  %211 = add nsw <4 x i32> %209, %191
  %212 = add i64 %169, 16
  %213 = add i64 %172, -2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %168, !llvm.loop !37

215:                                              ; preds = %168, %167
  %216 = phi <4 x i32> [ undef, %167 ], [ %210, %168 ]
  %217 = phi <4 x i32> [ undef, %167 ], [ %211, %168 ]
  %218 = phi i64 [ 0, %167 ], [ %212, %168 ]
  %219 = phi <4 x i32> [ zeroinitializer, %167 ], [ %210, %168 ]
  %220 = phi <4 x i32> [ zeroinitializer, %167 ], [ %211, %168 ]
  br i1 %132, label %241, label %221

221:                                              ; preds = %215
  %222 = trunc i64 %218 to i32
  %223 = add nsw i32 %142, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %74, i64 %224
  %226 = getelementptr inbounds i32, i32* %141, i64 %218
  %227 = getelementptr inbounds i32, i32* %226, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4
  %230 = getelementptr inbounds i32, i32* %225, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4
  %233 = mul nsw <4 x i32> %229, %232
  %234 = add nsw <4 x i32> %233, %220
  %235 = bitcast i32* %226 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = bitcast i32* %225 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4
  %239 = mul nsw <4 x i32> %236, %238
  %240 = add nsw <4 x i32> %239, %219
  br label %241

241:                                              ; preds = %215, %221
  %242 = phi <4 x i32> [ %216, %215 ], [ %240, %221 ]
  %243 = phi <4 x i32> [ %217, %215 ], [ %234, %221 ]
  %244 = add <4 x i32> %243, %242
  %245 = shufflevector <4 x i32> %244, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %246 = add <4 x i32> %244, %245
  %247 = shufflevector <4 x i32> %246, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %248 = add <4 x i32> %246, %247
  %249 = extractelement <4 x i32> %248, i32 0
  br i1 %133, label %259, label %143

250:                                              ; preds = %259, %107
  %251 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %294, label %254

254:                                              ; preds = %250
  %255 = ptrtoint i32* %252 to i64
  %256 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %257 = bitcast i32** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = bitcast i32* %252 to i8*
  call void @_ZdlPv(i8* %258) #9
  br label %294

259:                                              ; preds = %158, %270, %241, %137
  %260 = phi i32 [ 0, %137 ], [ %249, %241 ], [ %159, %158 ], [ %291, %270 ]
  %261 = load i32, i32* %117, align 4
  %262 = mul nsw i32 %261, %138
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i8, i8* %109, i64 %263
  %265 = sext i32 %260 to i64
  %266 = getelementptr inbounds i8, i8* %41, i64 %265
  %267 = sext i32 %261 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %264, i8* align 1 %266, i64 %267, i1 false) #8
  %268 = add nuw nsw i32 %138, 1
  %269 = icmp eq i32 %268, %112
  br i1 %269, label %250, label %137

270:                                              ; preds = %158, %270
  %271 = phi i64 [ %292, %270 ], [ %160, %158 ]
  %272 = phi i32 [ %291, %270 ], [ %161, %158 ]
  %273 = trunc i64 %271 to i32
  %274 = add nsw i32 %142, %273
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i32, i32* %74, i64 %275
  %277 = load i32, i32* %276, align 4
  %278 = getelementptr inbounds i32, i32* %141, i64 %271
  %279 = load i32, i32* %278, align 4
  %280 = mul nsw i32 %279, %277
  %281 = add nsw i32 %280, %272
  %282 = add nuw nsw i64 %271, 1
  %283 = trunc i64 %282 to i32
  %284 = add nsw i32 %142, %283
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i32, i32* %74, i64 %285
  %287 = load i32, i32* %286, align 4
  %288 = getelementptr inbounds i32, i32* %141, i64 %282
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %289, %287
  %291 = add nsw i32 %290, %281
  %292 = add nuw nsw i64 %271, 2
  %293 = icmp eq i64 %292, %120
  br i1 %293, label %259, label %270, !llvm.loop !38

294:                                              ; preds = %250, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #8
  %295 = icmp sgt i32 %108, 5
  br i1 %295, label %296, label %302

296:                                              ; preds = %294
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %298 = load i32*, i32** %297, align 8
  %299 = icmp eq i32* %298, null
  br i1 %299, label %302, label %300

300:                                              ; preds = %296
  %301 = bitcast i32* %298 to i8*
  call void @_ZdaPv(i8* %301) #9
  br label %302

302:                                              ; preds = %294, %296, %300
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  %303 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %304 = load i32, i32* %303, align 8
  %305 = icmp sgt i32 %304, 5
  br i1 %305, label %306, label %312

306:                                              ; preds = %302
  %307 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast i32* %308 to i8*
  call void @_ZdaPv(i8* %311) #9
  br label %312

312:                                              ; preds = %302, %306, %310
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %313 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = icmp sgt i32 %314, 5
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %318 = load i32*, i32** %317, align 8
  %319 = icmp eq i32* %318, null
  br i1 %319, label %322, label %320

320:                                              ; preds = %316
  %321 = bitcast i32* %318 to i8*
  call void @_ZdaPv(i8* %321) #9
  br label %322

322:                                              ; preds = %312, %316, %320
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIiiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !39
  br label %39

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !39
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !39
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !39
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !39
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !39
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1, i32 0
  %38 = load i32*, i32** %37, align 8
  br label %39

39:                                               ; preds = %10, %32
  %40 = phi i32* [ %38, %32 ], [ null, %10 ]
  %41 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #8
  %42 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !42
  br label %72

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8, !noalias !42
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !42
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %49, i32* %51, align 8, !alias.scope !42
  %52 = icmp sgt i32 %49, 5
  br i1 %52, label %53, label %60

53:                                               ; preds = %45
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 2
  %56 = tail call i8* @_Znam(i64 %55) #9, !noalias !42
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %58 = bitcast i32** %57 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !42
  %59 = bitcast i8* %56 to i32*
  br label %65

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %62 = bitcast %union.anon* %61 to i32*
  %63 = sext i32 %49 to i64
  %64 = shl nsw i64 %63, 2
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi i64 [ %55, %53 ], [ %64, %60 ]
  %67 = phi i32* [ %59, %53 ], [ %62, %60 ]
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %66, i1 false) #8
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %71 = load i32*, i32** %70, align 8
  br label %72

72:                                               ; preds = %43, %65
  %73 = phi i32* [ %71, %65 ], [ null, %43 ]
  %74 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #8
  %75 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %77, align 8, !alias.scope !45
  br label %105

78:                                               ; preds = %72
  %79 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %80 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %79, align 8, !noalias !45
  %81 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %80, i64 0, i32 0
  %82 = load i32, i32* %81, align 4, !noalias !45
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %80, i64 0, i32 1, i64 0
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %82, i32* %84, align 8, !alias.scope !45
  %85 = icmp sgt i32 %82, 5
  br i1 %85, label %86, label %93

86:                                               ; preds = %78
  %87 = sext i32 %82 to i64
  %88 = shl nsw i64 %87, 2
  %89 = tail call i8* @_Znam(i64 %88) #9, !noalias !45
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %91 = bitcast i32** %90 to i8**
  store i8* %89, i8** %91, align 8, !alias.scope !45
  %92 = bitcast i8* %89 to i32*
  br label %98

93:                                               ; preds = %78
  %94 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %95 = bitcast %union.anon* %94 to i32*
  %96 = sext i32 %82 to i64
  %97 = shl nsw i64 %96, 2
  br label %98

98:                                               ; preds = %93, %86
  %99 = phi i64 [ %88, %86 ], [ %97, %93 ]
  %100 = phi i32* [ %92, %86 ], [ %95, %93 ]
  %101 = bitcast i32* %100 to i8*
  %102 = bitcast i32* %83 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64 %99, i1 false) #8
  %103 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %104 = load i32*, i32** %103, align 8
  br label %105

105:                                              ; preds = %76, %98
  %106 = phi i32 [ %82, %98 ], [ 0, %76 ]
  %107 = phi i32* [ %104, %98 ], [ null, %76 ]
  %108 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %108) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %109 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp sgt i32 %110, 0
  br i1 %111, label %112, label %248

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %114 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %116 = load i32, i32* %113, align 8
  %117 = icmp sgt i32 %116, 0
  %118 = sext i32 %116 to i64
  %119 = add nsw i64 %118, -1
  %120 = add nsw i64 %118, -8
  %121 = lshr i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = icmp ult i32 %116, 8
  %124 = trunc i64 %119 to i32
  %125 = icmp ugt i64 %119, 4294967295
  %126 = and i64 %118, -8
  %127 = and i64 %122, 1
  %128 = icmp eq i64 %121, 0
  %129 = sub nuw nsw i64 %122, %127
  %130 = icmp eq i64 %127, 0
  %131 = icmp eq i64 %126, %118
  %132 = and i64 %118, 1
  %133 = icmp eq i64 %132, 0
  %134 = sub nsw i64 0, %118
  br label %135

135:                                              ; preds = %257, %112
  %136 = phi i32 [ 0, %112 ], [ %269, %257 ]
  %137 = mul i32 %116, %136
  br i1 %117, label %138, label %257

138:                                              ; preds = %135
  %139 = load i32*, i32** %114, align 8
  %140 = mul nsw i32 %136, %116
  br i1 %123, label %141, label %161

141:                                              ; preds = %239, %161, %138
  %142 = phi i64 [ 0, %161 ], [ 0, %138 ], [ %126, %239 ]
  %143 = phi i32 [ 0, %161 ], [ 0, %138 ], [ %247, %239 ]
  %144 = xor i64 %142, -1
  br i1 %133, label %156, label %145

145:                                              ; preds = %141
  %146 = trunc i64 %142 to i32
  %147 = add nsw i32 %140, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i32, i32* %73, i64 %148
  %150 = load i32, i32* %149, align 4
  %151 = getelementptr inbounds i32, i32* %139, i64 %142
  %152 = load i32, i32* %151, align 4
  %153 = mul nsw i32 %152, %150
  %154 = add nsw i32 %153, %143
  %155 = or i64 %142, 1
  br label %156

156:                                              ; preds = %145, %141
  %157 = phi i32 [ %154, %145 ], [ undef, %141 ]
  %158 = phi i64 [ %155, %145 ], [ %142, %141 ]
  %159 = phi i32 [ %154, %145 ], [ %143, %141 ]
  %160 = icmp eq i64 %144, %134
  br i1 %160, label %257, label %271

161:                                              ; preds = %138
  %162 = add i32 %137, %124
  %163 = icmp slt i32 %162, %137
  %164 = or i1 %163, %125
  br i1 %164, label %141, label %165

165:                                              ; preds = %161
  br i1 %128, label %213, label %166

166:                                              ; preds = %165, %166
  %167 = phi i64 [ %210, %166 ], [ 0, %165 ]
  %168 = phi <4 x i32> [ %208, %166 ], [ zeroinitializer, %165 ]
  %169 = phi <4 x i32> [ %209, %166 ], [ zeroinitializer, %165 ]
  %170 = phi i64 [ %211, %166 ], [ %129, %165 ]
  %171 = trunc i64 %167 to i32
  %172 = add nsw i32 %140, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i32, i32* %73, i64 %173
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4
  %177 = getelementptr inbounds i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4
  %180 = getelementptr inbounds i32, i32* %139, i64 %167
  %181 = bitcast i32* %180 to <4 x i32>*
  %182 = load <4 x i32>, <4 x i32>* %181, align 4
  %183 = getelementptr inbounds i32, i32* %180, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  %185 = load <4 x i32>, <4 x i32>* %184, align 4
  %186 = mul nsw <4 x i32> %182, %176
  %187 = mul nsw <4 x i32> %185, %179
  %188 = add nsw <4 x i32> %186, %168
  %189 = add nsw <4 x i32> %187, %169
  %190 = or i64 %167, 8
  %191 = trunc i64 %190 to i32
  %192 = add nsw i32 %140, %191
  %193 = sext i32 %192 to i64
  %194 = getelementptr inbounds i32, i32* %73, i64 %193
  %195 = bitcast i32* %194 to <4 x i32>*
  %196 = load <4 x i32>, <4 x i32>* %195, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 4
  %198 = bitcast i32* %197 to <4 x i32>*
  %199 = load <4 x i32>, <4 x i32>* %198, align 4
  %200 = getelementptr inbounds i32, i32* %139, i64 %190
  %201 = bitcast i32* %200 to <4 x i32>*
  %202 = load <4 x i32>, <4 x i32>* %201, align 4
  %203 = getelementptr inbounds i32, i32* %200, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4
  %206 = mul nsw <4 x i32> %202, %196
  %207 = mul nsw <4 x i32> %205, %199
  %208 = add nsw <4 x i32> %206, %188
  %209 = add nsw <4 x i32> %207, %189
  %210 = add i64 %167, 16
  %211 = add i64 %170, -2
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %166, !llvm.loop !48

213:                                              ; preds = %166, %165
  %214 = phi <4 x i32> [ undef, %165 ], [ %208, %166 ]
  %215 = phi <4 x i32> [ undef, %165 ], [ %209, %166 ]
  %216 = phi i64 [ 0, %165 ], [ %210, %166 ]
  %217 = phi <4 x i32> [ zeroinitializer, %165 ], [ %208, %166 ]
  %218 = phi <4 x i32> [ zeroinitializer, %165 ], [ %209, %166 ]
  br i1 %130, label %239, label %219

219:                                              ; preds = %213
  %220 = trunc i64 %216 to i32
  %221 = add nsw i32 %140, %220
  %222 = sext i32 %221 to i64
  %223 = getelementptr inbounds i32, i32* %73, i64 %222
  %224 = getelementptr inbounds i32, i32* %139, i64 %216
  %225 = getelementptr inbounds i32, i32* %224, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4
  %228 = getelementptr inbounds i32, i32* %223, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4
  %231 = mul nsw <4 x i32> %227, %230
  %232 = add nsw <4 x i32> %231, %218
  %233 = bitcast i32* %224 to <4 x i32>*
  %234 = load <4 x i32>, <4 x i32>* %233, align 4
  %235 = bitcast i32* %223 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = mul nsw <4 x i32> %234, %236
  %238 = add nsw <4 x i32> %237, %217
  br label %239

239:                                              ; preds = %213, %219
  %240 = phi <4 x i32> [ %214, %213 ], [ %238, %219 ]
  %241 = phi <4 x i32> [ %215, %213 ], [ %232, %219 ]
  %242 = add <4 x i32> %241, %240
  %243 = shufflevector <4 x i32> %242, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %244 = add <4 x i32> %242, %243
  %245 = shufflevector <4 x i32> %244, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %246 = add <4 x i32> %244, %245
  %247 = extractelement <4 x i32> %246, i32 0
  br i1 %131, label %257, label %141

248:                                              ; preds = %257, %105
  %249 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %250 = load i32*, i32** %249, align 8
  %251 = icmp eq i32* %250, null
  br i1 %251, label %295, label %252

252:                                              ; preds = %248
  %253 = ptrtoint i32* %250 to i64
  %254 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %255 = bitcast i32** %254 to i64*
  store i64 %253, i64* %255, align 8
  %256 = bitcast i32* %250 to i8*
  call void @_ZdlPv(i8* %256) #9
  br label %295

257:                                              ; preds = %156, %271, %239, %135
  %258 = phi i32 [ 0, %135 ], [ %247, %239 ], [ %157, %156 ], [ %292, %271 ]
  %259 = load i32, i32* %115, align 4
  %260 = mul nsw i32 %259, %136
  %261 = sext i32 %260 to i64
  %262 = getelementptr inbounds i32, i32* %107, i64 %261
  %263 = bitcast i32* %262 to i8*
  %264 = sext i32 %258 to i64
  %265 = getelementptr inbounds i32, i32* %40, i64 %264
  %266 = bitcast i32* %265 to i8*
  %267 = sext i32 %259 to i64
  %268 = shl nsw i64 %267, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %263, i8* align 4 %266, i64 %268, i1 false) #8
  %269 = add nuw nsw i32 %136, 1
  %270 = icmp eq i32 %269, %110
  br i1 %270, label %248, label %135

271:                                              ; preds = %156, %271
  %272 = phi i64 [ %293, %271 ], [ %158, %156 ]
  %273 = phi i32 [ %292, %271 ], [ %159, %156 ]
  %274 = trunc i64 %272 to i32
  %275 = add nsw i32 %140, %274
  %276 = sext i32 %275 to i64
  %277 = getelementptr inbounds i32, i32* %73, i64 %276
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds i32, i32* %139, i64 %272
  %280 = load i32, i32* %279, align 4
  %281 = mul nsw i32 %280, %278
  %282 = add nsw i32 %281, %273
  %283 = add nuw nsw i64 %272, 1
  %284 = trunc i64 %283 to i32
  %285 = add nsw i32 %140, %284
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i32, i32* %73, i64 %286
  %288 = load i32, i32* %287, align 4
  %289 = getelementptr inbounds i32, i32* %139, i64 %283
  %290 = load i32, i32* %289, align 4
  %291 = mul nsw i32 %290, %288
  %292 = add nsw i32 %291, %282
  %293 = add nuw nsw i64 %272, 2
  %294 = icmp eq i64 %293, %118
  br i1 %294, label %257, label %271, !llvm.loop !49

295:                                              ; preds = %248, %252
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %108) #8
  %296 = icmp sgt i32 %106, 5
  br i1 %296, label %297, label %303

297:                                              ; preds = %295
  %298 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %299 = load i32*, i32** %298, align 8
  %300 = icmp eq i32* %299, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %297
  %302 = bitcast i32* %299 to i8*
  call void @_ZdaPv(i8* %302) #9
  br label %303

303:                                              ; preds = %295, %297, %301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #8
  %304 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %305 = load i32, i32* %304, align 8
  %306 = icmp sgt i32 %305, 5
  br i1 %306, label %307, label %313

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = bitcast i32* %309 to i8*
  call void @_ZdaPv(i8* %312) #9
  br label %313

313:                                              ; preds = %303, %307, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #8
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = icmp sgt i32 %315, 5
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = icmp eq i32* %319, null
  br i1 %320, label %323, label %321

321:                                              ; preds = %317
  %322 = bitcast i32* %319 to i8*
  call void @_ZdaPv(i8* %322) #9
  br label %323

323:                                              ; preds = %313, %317, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIliEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !50
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !50
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !50
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !50
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !50
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !50
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i64* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !53
  br label %73

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !53
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !53
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !53
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !53
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !53
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %72 = load i32*, i32** %71, align 8
  br label %73

73:                                               ; preds = %44, %66
  %74 = phi i32* [ %72, %66 ], [ null, %44 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %76 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !56
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !56
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !56
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !56
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #9, !noalias !56
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !56
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to i64**
  %106 = load i64*, i64** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi i32 [ %83, %99 ], [ 0, %77 ]
  %109 = phi i64* [ %106, %99 ], [ null, %77 ]
  %110 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %110) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %111 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 0
  br i1 %113, label %114, label %250

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %118 = load i32, i32* %115, align 8
  %119 = icmp sgt i32 %118, 0
  %120 = sext i32 %118 to i64
  %121 = add nsw i64 %120, -1
  %122 = add nsw i64 %120, -8
  %123 = lshr i64 %122, 3
  %124 = add nuw nsw i64 %123, 1
  %125 = icmp ult i32 %118, 8
  %126 = trunc i64 %121 to i32
  %127 = icmp ugt i64 %121, 4294967295
  %128 = and i64 %120, -8
  %129 = and i64 %124, 1
  %130 = icmp eq i64 %123, 0
  %131 = sub nuw nsw i64 %124, %129
  %132 = icmp eq i64 %129, 0
  %133 = icmp eq i64 %128, %120
  %134 = and i64 %120, 1
  %135 = icmp eq i64 %134, 0
  %136 = sub nsw i64 0, %120
  br label %137

137:                                              ; preds = %259, %114
  %138 = phi i32 [ 0, %114 ], [ %271, %259 ]
  %139 = mul i32 %118, %138
  br i1 %119, label %140, label %259

140:                                              ; preds = %137
  %141 = load i32*, i32** %116, align 8
  %142 = mul nsw i32 %138, %118
  br i1 %125, label %143, label %163

143:                                              ; preds = %241, %163, %140
  %144 = phi i64 [ 0, %163 ], [ 0, %140 ], [ %128, %241 ]
  %145 = phi i32 [ 0, %163 ], [ 0, %140 ], [ %249, %241 ]
  %146 = xor i64 %144, -1
  br i1 %135, label %158, label %147

147:                                              ; preds = %143
  %148 = trunc i64 %144 to i32
  %149 = add nsw i32 %142, %148
  %150 = sext i32 %149 to i64
  %151 = getelementptr inbounds i32, i32* %74, i64 %150
  %152 = load i32, i32* %151, align 4
  %153 = getelementptr inbounds i32, i32* %141, i64 %144
  %154 = load i32, i32* %153, align 4
  %155 = mul nsw i32 %154, %152
  %156 = add nsw i32 %155, %145
  %157 = or i64 %144, 1
  br label %158

158:                                              ; preds = %147, %143
  %159 = phi i32 [ %156, %147 ], [ undef, %143 ]
  %160 = phi i64 [ %157, %147 ], [ %144, %143 ]
  %161 = phi i32 [ %156, %147 ], [ %145, %143 ]
  %162 = icmp eq i64 %146, %136
  br i1 %162, label %259, label %273

163:                                              ; preds = %140
  %164 = add i32 %139, %126
  %165 = icmp slt i32 %164, %139
  %166 = or i1 %165, %127
  br i1 %166, label %143, label %167

167:                                              ; preds = %163
  br i1 %130, label %215, label %168

168:                                              ; preds = %167, %168
  %169 = phi i64 [ %212, %168 ], [ 0, %167 ]
  %170 = phi <4 x i32> [ %210, %168 ], [ zeroinitializer, %167 ]
  %171 = phi <4 x i32> [ %211, %168 ], [ zeroinitializer, %167 ]
  %172 = phi i64 [ %213, %168 ], [ %131, %167 ]
  %173 = trunc i64 %169 to i32
  %174 = add nsw i32 %142, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i32, i32* %74, i64 %175
  %177 = bitcast i32* %176 to <4 x i32>*
  %178 = load <4 x i32>, <4 x i32>* %177, align 4
  %179 = getelementptr inbounds i32, i32* %176, i64 4
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 4
  %182 = getelementptr inbounds i32, i32* %141, i64 %169
  %183 = bitcast i32* %182 to <4 x i32>*
  %184 = load <4 x i32>, <4 x i32>* %183, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 4
  %186 = bitcast i32* %185 to <4 x i32>*
  %187 = load <4 x i32>, <4 x i32>* %186, align 4
  %188 = mul nsw <4 x i32> %184, %178
  %189 = mul nsw <4 x i32> %187, %181
  %190 = add nsw <4 x i32> %188, %170
  %191 = add nsw <4 x i32> %189, %171
  %192 = or i64 %169, 8
  %193 = trunc i64 %192 to i32
  %194 = add nsw i32 %142, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i32, i32* %74, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  %198 = load <4 x i32>, <4 x i32>* %197, align 4
  %199 = getelementptr inbounds i32, i32* %196, i64 4
  %200 = bitcast i32* %199 to <4 x i32>*
  %201 = load <4 x i32>, <4 x i32>* %200, align 4
  %202 = getelementptr inbounds i32, i32* %141, i64 %192
  %203 = bitcast i32* %202 to <4 x i32>*
  %204 = load <4 x i32>, <4 x i32>* %203, align 4
  %205 = getelementptr inbounds i32, i32* %202, i64 4
  %206 = bitcast i32* %205 to <4 x i32>*
  %207 = load <4 x i32>, <4 x i32>* %206, align 4
  %208 = mul nsw <4 x i32> %204, %198
  %209 = mul nsw <4 x i32> %207, %201
  %210 = add nsw <4 x i32> %208, %190
  %211 = add nsw <4 x i32> %209, %191
  %212 = add i64 %169, 16
  %213 = add i64 %172, -2
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %168, !llvm.loop !59

215:                                              ; preds = %168, %167
  %216 = phi <4 x i32> [ undef, %167 ], [ %210, %168 ]
  %217 = phi <4 x i32> [ undef, %167 ], [ %211, %168 ]
  %218 = phi i64 [ 0, %167 ], [ %212, %168 ]
  %219 = phi <4 x i32> [ zeroinitializer, %167 ], [ %210, %168 ]
  %220 = phi <4 x i32> [ zeroinitializer, %167 ], [ %211, %168 ]
  br i1 %132, label %241, label %221

221:                                              ; preds = %215
  %222 = trunc i64 %218 to i32
  %223 = add nsw i32 %142, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i32, i32* %74, i64 %224
  %226 = getelementptr inbounds i32, i32* %141, i64 %218
  %227 = getelementptr inbounds i32, i32* %226, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4
  %230 = getelementptr inbounds i32, i32* %225, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4
  %233 = mul nsw <4 x i32> %229, %232
  %234 = add nsw <4 x i32> %233, %220
  %235 = bitcast i32* %226 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = bitcast i32* %225 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4
  %239 = mul nsw <4 x i32> %236, %238
  %240 = add nsw <4 x i32> %239, %219
  br label %241

241:                                              ; preds = %215, %221
  %242 = phi <4 x i32> [ %216, %215 ], [ %240, %221 ]
  %243 = phi <4 x i32> [ %217, %215 ], [ %234, %221 ]
  %244 = add <4 x i32> %243, %242
  %245 = shufflevector <4 x i32> %244, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %246 = add <4 x i32> %244, %245
  %247 = shufflevector <4 x i32> %246, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %248 = add <4 x i32> %246, %247
  %249 = extractelement <4 x i32> %248, i32 0
  br i1 %133, label %259, label %143

250:                                              ; preds = %259, %107
  %251 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %297, label %254

254:                                              ; preds = %250
  %255 = ptrtoint i32* %252 to i64
  %256 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %257 = bitcast i32** %256 to i64*
  store i64 %255, i64* %257, align 8
  %258 = bitcast i32* %252 to i8*
  call void @_ZdlPv(i8* %258) #9
  br label %297

259:                                              ; preds = %158, %273, %241, %137
  %260 = phi i32 [ 0, %137 ], [ %249, %241 ], [ %159, %158 ], [ %294, %273 ]
  %261 = load i32, i32* %117, align 4
  %262 = mul nsw i32 %261, %138
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds i64, i64* %109, i64 %263
  %265 = bitcast i64* %264 to i8*
  %266 = sext i32 %260 to i64
  %267 = getelementptr inbounds i64, i64* %41, i64 %266
  %268 = bitcast i64* %267 to i8*
  %269 = sext i32 %261 to i64
  %270 = shl nsw i64 %269, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %265, i8* align 8 %268, i64 %270, i1 false) #8
  %271 = add nuw nsw i32 %138, 1
  %272 = icmp eq i32 %271, %112
  br i1 %272, label %250, label %137

273:                                              ; preds = %158, %273
  %274 = phi i64 [ %295, %273 ], [ %160, %158 ]
  %275 = phi i32 [ %294, %273 ], [ %161, %158 ]
  %276 = trunc i64 %274 to i32
  %277 = add nsw i32 %142, %276
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i32, i32* %74, i64 %278
  %280 = load i32, i32* %279, align 4
  %281 = getelementptr inbounds i32, i32* %141, i64 %274
  %282 = load i32, i32* %281, align 4
  %283 = mul nsw i32 %282, %280
  %284 = add nsw i32 %283, %275
  %285 = add nuw nsw i64 %274, 1
  %286 = trunc i64 %285 to i32
  %287 = add nsw i32 %142, %286
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i32, i32* %74, i64 %288
  %290 = load i32, i32* %289, align 4
  %291 = getelementptr inbounds i32, i32* %141, i64 %285
  %292 = load i32, i32* %291, align 4
  %293 = mul nsw i32 %292, %290
  %294 = add nsw i32 %293, %284
  %295 = add nuw nsw i64 %274, 2
  %296 = icmp eq i64 %295, %120
  br i1 %296, label %259, label %273, !llvm.loop !60

297:                                              ; preds = %250, %254
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %110) #8
  %298 = icmp sgt i32 %108, 5
  br i1 %298, label %299, label %305

299:                                              ; preds = %297
  %300 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %301 = load i32*, i32** %300, align 8
  %302 = icmp eq i32* %301, null
  br i1 %302, label %305, label %303

303:                                              ; preds = %299
  %304 = bitcast i32* %301 to i8*
  call void @_ZdaPv(i8* %304) #9
  br label %305

305:                                              ; preds = %297, %299, %303
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %307 = load i32, i32* %306, align 8
  %308 = icmp sgt i32 %307, 5
  br i1 %308, label %309, label %315

309:                                              ; preds = %305
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %315, label %313

313:                                              ; preds = %309
  %314 = bitcast i32* %311 to i8*
  call void @_ZdaPv(i8* %314) #9
  br label %315

315:                                              ; preds = %305, %309, %313
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %317 = load i32, i32* %316, align 8
  %318 = icmp sgt i32 %317, 5
  br i1 %318, label %319, label %325

319:                                              ; preds = %315
  %320 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %321 = load i32*, i32** %320, align 8
  %322 = icmp eq i32* %321, null
  br i1 %322, label %325, label %323

323:                                              ; preds = %319
  %324 = bitcast i32* %321 to i8*
  call void @_ZdaPv(i8* %324) #9
  br label %325

325:                                              ; preds = %315, %319, %323
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIiEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !61
  br label %36

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8, !noalias !61
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !61
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %15, i32* %17, align 8, !alias.scope !61
  %18 = icmp sgt i32 %15, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = sext i32 %15 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #9, !noalias !61
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8, !alias.scope !61
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %15 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = bitcast i32* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 %32, i1 false) #8
  br label %36

36:                                               ; preds = %9, %31
  %37 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #8
  %38 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %40, align 8, !alias.scope !64
  br label %68

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %43 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %42, align 8, !noalias !64
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4, !noalias !64
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 1, i64 0
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %45, i32* %47, align 8, !alias.scope !64
  %48 = icmp sgt i32 %45, 5
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = sext i32 %45 to i64
  %51 = shl nsw i64 %50, 2
  %52 = tail call i8* @_Znam(i64 %51) #9, !noalias !64
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %54 = bitcast i32** %53 to i8**
  store i8* %52, i8** %54, align 8, !alias.scope !64
  %55 = bitcast i8* %52 to i32*
  br label %61

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %58 = bitcast %union.anon* %57 to i32*
  %59 = sext i32 %45 to i64
  %60 = shl nsw i64 %59, 2
  br label %61

61:                                               ; preds = %56, %49
  %62 = phi i64 [ %51, %49 ], [ %60, %56 ]
  %63 = phi i32* [ %55, %49 ], [ %58, %56 ]
  %64 = bitcast i32* %63 to i8*
  %65 = bitcast i32* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 %62, i1 false) #8
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %67 = load i32*, i32** %66, align 8
  br label %68

68:                                               ; preds = %39, %61
  %69 = phi i32* [ %67, %61 ], [ null, %39 ]
  %70 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %70) #8
  %71 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %73, align 8, !alias.scope !67
  br label %99

74:                                               ; preds = %68
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %76 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %75, align 8, !noalias !67
  %77 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 0
  %78 = load i32, i32* %77, align 4, !noalias !67
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %76, i64 0, i32 1, i64 0
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %78, i32* %80, align 8, !alias.scope !67
  %81 = icmp sgt i32 %78, 5
  br i1 %81, label %82, label %89

82:                                               ; preds = %74
  %83 = sext i32 %78 to i64
  %84 = shl nsw i64 %83, 2
  %85 = tail call i8* @_Znam(i64 %84) #9, !noalias !67
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %87 = bitcast i32** %86 to i8**
  store i8* %85, i8** %87, align 8, !alias.scope !67
  %88 = bitcast i8* %85 to i32*
  br label %94

89:                                               ; preds = %74
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %91 = bitcast %union.anon* %90 to i32*
  %92 = sext i32 %78 to i64
  %93 = shl nsw i64 %92, 2
  br label %94

94:                                               ; preds = %89, %82
  %95 = phi i64 [ %84, %82 ], [ %93, %89 ]
  %96 = phi i32* [ %88, %82 ], [ %91, %89 ]
  %97 = bitcast i32* %96 to i8*
  %98 = bitcast i32* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %97, i8* align 4 %98, i64 %95, i1 false) #8
  br label %99

99:                                               ; preds = %72, %94
  call void @_ZN6tflite13reference_ops14GatherNdStringIiEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, %struct.TfLiteTensor* %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i32* %69, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %struct.TfLiteTensor* %2)
  %100 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = icmp sgt i32 %101, 5
  br i1 %102, label %103, label %109

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %105 = load i32*, i32** %104, align 8
  %106 = icmp eq i32* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %103
  %108 = bitcast i32* %105 to i8*
  call void @_ZdaPv(i8* %108) #9
  br label %109

109:                                              ; preds = %99, %103, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %70) #8
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp sgt i32 %111, 5
  br i1 %112, label %113, label %119

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = icmp eq i32* %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast i32* %115 to i8*
  call void @_ZdaPv(i8* %118) #9
  br label %119

119:                                              ; preds = %109, %113, %117
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #8
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %121 = load i32, i32* %120, align 8
  %122 = icmp sgt i32 %121, 5
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %125 = load i32*, i32** %124, align 8
  %126 = icmp eq i32* %125, null
  br i1 %126, label %129, label %127

127:                                              ; preds = %123
  %128 = bitcast i32* %125 to i8*
  call void @_ZdaPv(i8* %128) #9
  br label %129

129:                                              ; preds = %119, %123, %127
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* noalias sret, %"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 16, i1 false)
  %6 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 3
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 0
  store i32 1, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 1
  store i32 1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = add i32 %11, -1
  %13 = icmp sgt i32 %11, 5
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %2, i64 0, i32 1
  %15 = getelementptr inbounds %union.anon, %union.anon* %14, i64 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = sext i32 %12 to i64
  %18 = getelementptr inbounds i32, i32* %16, i64 %17
  %19 = bitcast %union.anon* %14 to [5 x i32]*
  %20 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %17
  %21 = select i1 %13, i32* %18, i32* %20
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp sgt i32 %12, 0
  br i1 %26, label %27, label %53

27:                                               ; preds = %3
  %28 = zext i32 %12 to i64
  %29 = add nsw i64 %28, -1
  %30 = and i64 %28, 3
  %31 = icmp ult i64 %29, 3
  br i1 %31, label %34, label %32

32:                                               ; preds = %27
  %33 = sub nsw i64 %28, %30
  br label %70

34:                                               ; preds = %70, %27
  %35 = phi i32 [ undef, %27 ], [ %96, %70 ]
  %36 = phi i64 [ 0, %27 ], [ %97, %70 ]
  %37 = phi i32 [ 1, %27 ], [ %96, %70 ]
  %38 = icmp eq i64 %30, 0
  br i1 %38, label %51, label %39

39:                                               ; preds = %34, %39
  %40 = phi i64 [ %48, %39 ], [ %36, %34 ]
  %41 = phi i32 [ %47, %39 ], [ %37, %34 ]
  %42 = phi i64 [ %49, %39 ], [ %30, %34 ]
  %43 = getelementptr inbounds i32, i32* %16, i64 %40
  %44 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %40
  %45 = select i1 %13, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  %47 = mul nsw i32 %41, %46
  %48 = add nuw nsw i64 %40, 1
  %49 = add i64 %42, -1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %39, !llvm.loop !70

51:                                               ; preds = %39, %34
  %52 = phi i32 [ %35, %34 ], [ %47, %39 ]
  store i32 %52, i32* %8, align 8
  br label %53

53:                                               ; preds = %51, %3
  %54 = icmp slt i32 %22, %25
  %55 = icmp sgt i32 %25, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  br i1 %54, label %57, label %119

57:                                               ; preds = %53
  %58 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = bitcast %union.anon* %56 to [5 x i32]*
  %61 = sext i32 %22 to i64
  %62 = sext i32 %25 to i64
  %63 = sub nsw i64 %62, %61
  %64 = xor i64 %61, -1
  %65 = add nsw i64 %64, %62
  %66 = and i64 %63, 3
  %67 = icmp ult i64 %65, 3
  br i1 %67, label %100, label %68

68:                                               ; preds = %57
  %69 = sub nsw i64 %63, %66
  br label %266

70:                                               ; preds = %70, %32
  %71 = phi i64 [ 0, %32 ], [ %97, %70 ]
  %72 = phi i32 [ 1, %32 ], [ %96, %70 ]
  %73 = phi i64 [ %33, %32 ], [ %98, %70 ]
  %74 = getelementptr inbounds i32, i32* %16, i64 %71
  %75 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %71
  %76 = select i1 %13, i32* %74, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %72, %77
  %79 = or i64 %71, 1
  %80 = getelementptr inbounds i32, i32* %16, i64 %79
  %81 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %79
  %82 = select i1 %13, i32* %80, i32* %81
  %83 = load i32, i32* %82, align 4
  %84 = mul nsw i32 %78, %83
  %85 = or i64 %71, 2
  %86 = getelementptr inbounds i32, i32* %16, i64 %85
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %85
  %88 = select i1 %13, i32* %86, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = mul nsw i32 %84, %89
  %91 = or i64 %71, 3
  %92 = getelementptr inbounds i32, i32* %16, i64 %91
  %93 = getelementptr inbounds [5 x i32], [5 x i32]* %19, i64 0, i64 %91
  %94 = select i1 %13, i32* %92, i32* %93
  %95 = load i32, i32* %94, align 4
  %96 = mul nsw i32 %90, %95
  %97 = add nuw nsw i64 %71, 4
  %98 = add i64 %73, -4
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %34, label %70

100:                                              ; preds = %266, %57
  %101 = phi i32 [ undef, %57 ], [ %292, %266 ]
  %102 = phi i64 [ %61, %57 ], [ %293, %266 ]
  %103 = phi i32 [ 1, %57 ], [ %292, %266 ]
  %104 = icmp eq i64 %66, 0
  br i1 %104, label %117, label %105

105:                                              ; preds = %100, %105
  %106 = phi i64 [ %114, %105 ], [ %102, %100 ]
  %107 = phi i32 [ %113, %105 ], [ %103, %100 ]
  %108 = phi i64 [ %115, %105 ], [ %66, %100 ]
  %109 = getelementptr inbounds i32, i32* %59, i64 %106
  %110 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 %106
  %111 = select i1 %55, i32* %109, i32* %110
  %112 = load i32, i32* %111, align 4
  %113 = mul nsw i32 %107, %112
  %114 = add nsw i64 %106, 1
  %115 = add i64 %108, -1
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %105, !llvm.loop !71

117:                                              ; preds = %105, %100
  %118 = phi i32 [ %101, %100 ], [ %113, %105 ]
  store i32 %118, i32* %9, align 4
  br label %119

119:                                              ; preds = %117, %53
  br i1 %55, label %120, label %123

120:                                              ; preds = %119
  %121 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %122 = load i32*, i32** %121, align 8
  br label %126

123:                                              ; preds = %119
  %124 = bitcast %union.anon* %56 to i32*
  %125 = icmp sgt i32 %25, 0
  br i1 %125, label %126, label %226

126:                                              ; preds = %123, %120
  %127 = phi i32* [ %122, %120 ], [ %124, %123 ]
  %128 = zext i32 %25 to i64
  %129 = icmp ult i32 %25, 8
  br i1 %129, label %215, label %130

130:                                              ; preds = %126
  %131 = and i64 %128, 4294967288
  %132 = add nsw i64 %131, -8
  %133 = lshr exact i64 %132, 3
  %134 = add nuw nsw i64 %133, 1
  %135 = and i64 %134, 3
  %136 = icmp ult i64 %132, 24
  br i1 %136, label %182, label %137

137:                                              ; preds = %130
  %138 = sub nsw i64 %134, %135
  br label %139

139:                                              ; preds = %139, %137
  %140 = phi i64 [ 0, %137 ], [ %179, %139 ]
  %141 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %137 ], [ %177, %139 ]
  %142 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %137 ], [ %178, %139 ]
  %143 = phi i64 [ %138, %137 ], [ %180, %139 ]
  %144 = getelementptr inbounds i32, i32* %127, i64 %140
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4
  %147 = getelementptr inbounds i32, i32* %144, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4
  %150 = mul nsw <4 x i32> %146, %141
  %151 = mul nsw <4 x i32> %149, %142
  %152 = or i64 %140, 8
  %153 = getelementptr inbounds i32, i32* %127, i64 %152
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4
  %156 = getelementptr inbounds i32, i32* %153, i64 4
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = mul nsw <4 x i32> %155, %150
  %160 = mul nsw <4 x i32> %158, %151
  %161 = or i64 %140, 16
  %162 = getelementptr inbounds i32, i32* %127, i64 %161
  %163 = bitcast i32* %162 to <4 x i32>*
  %164 = load <4 x i32>, <4 x i32>* %163, align 4
  %165 = getelementptr inbounds i32, i32* %162, i64 4
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4
  %168 = mul nsw <4 x i32> %164, %159
  %169 = mul nsw <4 x i32> %167, %160
  %170 = or i64 %140, 24
  %171 = getelementptr inbounds i32, i32* %127, i64 %170
  %172 = bitcast i32* %171 to <4 x i32>*
  %173 = load <4 x i32>, <4 x i32>* %172, align 4
  %174 = getelementptr inbounds i32, i32* %171, i64 4
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4
  %177 = mul nsw <4 x i32> %173, %168
  %178 = mul nsw <4 x i32> %176, %169
  %179 = add i64 %140, 32
  %180 = add i64 %143, -4
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %139, !llvm.loop !72

182:                                              ; preds = %139, %130
  %183 = phi <4 x i32> [ undef, %130 ], [ %177, %139 ]
  %184 = phi <4 x i32> [ undef, %130 ], [ %178, %139 ]
  %185 = phi i64 [ 0, %130 ], [ %179, %139 ]
  %186 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %130 ], [ %177, %139 ]
  %187 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %130 ], [ %178, %139 ]
  %188 = icmp eq i64 %135, 0
  br i1 %188, label %205, label %189

189:                                              ; preds = %182, %189
  %190 = phi i64 [ %202, %189 ], [ %185, %182 ]
  %191 = phi <4 x i32> [ %200, %189 ], [ %186, %182 ]
  %192 = phi <4 x i32> [ %201, %189 ], [ %187, %182 ]
  %193 = phi i64 [ %203, %189 ], [ %135, %182 ]
  %194 = getelementptr inbounds i32, i32* %127, i64 %190
  %195 = bitcast i32* %194 to <4 x i32>*
  %196 = load <4 x i32>, <4 x i32>* %195, align 4
  %197 = getelementptr inbounds i32, i32* %194, i64 4
  %198 = bitcast i32* %197 to <4 x i32>*
  %199 = load <4 x i32>, <4 x i32>* %198, align 4
  %200 = mul nsw <4 x i32> %196, %191
  %201 = mul nsw <4 x i32> %199, %192
  %202 = add i64 %190, 8
  %203 = add i64 %193, -1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %189, !llvm.loop !73

205:                                              ; preds = %189, %182
  %206 = phi <4 x i32> [ %183, %182 ], [ %200, %189 ]
  %207 = phi <4 x i32> [ %184, %182 ], [ %201, %189 ]
  %208 = mul <4 x i32> %207, %206
  %209 = shufflevector <4 x i32> %208, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %210 = mul <4 x i32> %208, %209
  %211 = shufflevector <4 x i32> %210, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %212 = mul <4 x i32> %210, %211
  %213 = extractelement <4 x i32> %212, i32 0
  %214 = icmp eq i64 %131, %128
  br i1 %214, label %226, label %215

215:                                              ; preds = %205, %126
  %216 = phi i64 [ 0, %126 ], [ %131, %205 ]
  %217 = phi i32 [ 1, %126 ], [ %213, %205 ]
  br label %218

218:                                              ; preds = %215, %218
  %219 = phi i64 [ %224, %218 ], [ %216, %215 ]
  %220 = phi i32 [ %223, %218 ], [ %217, %215 ]
  %221 = getelementptr inbounds i32, i32* %127, i64 %219
  %222 = load i32, i32* %221, align 4
  %223 = mul nsw i32 %222, %220
  %224 = add nuw nsw i64 %219, 1
  %225 = icmp eq i64 %224, %128
  br i1 %225, label %226, label %218, !llvm.loop !74

226:                                              ; preds = %218, %205, %123
  %227 = phi i32 [ 1, %123 ], [ %213, %205 ], [ %223, %218 ]
  %228 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #8
  %229 = sext i32 %22 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %228, i8 0, i64 24, i1 false) #8
  %230 = icmp eq i32 %22, 0
  br i1 %230, label %246, label %231

231:                                              ; preds = %226
  %232 = icmp slt i32 %22, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %231
  %234 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %234) #10
  unreachable

235:                                              ; preds = %231
  %236 = shl nsw i64 %229, 2
  %237 = tail call i8* @_Znwm(i64 %236) #9
  %238 = bitcast i8* %237 to i32*
  %239 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %240 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %237, i8** %240, align 8
  %241 = getelementptr inbounds i32, i32* %238, i64 %229
  %242 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  store i32* %241, i32** %242, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %237, i8 0, i64 %236, i1 false)
  %243 = bitcast i32** %239 to i64*
  %244 = ptrtoint i32* %241 to i64
  store i64 %244, i64* %243, align 8
  %245 = ptrtoint i8* %237 to i64
  br label %246

246:                                              ; preds = %235, %226
  %247 = phi i64 [ 0, %226 ], [ %244, %235 ]
  %248 = phi i64 [ 0, %226 ], [ %245, %235 ]
  %249 = bitcast %"class.std::__1::vector"* %6 to i64*
  store i64 %248, i64* %249, align 8
  %250 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 3, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %247, i64* %251, align 8
  %252 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %253 = bitcast i32** %252 to i64*
  store i64 %247, i64* %253, align 8
  %254 = inttoptr i64 %248 to i32*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %228) #8
  %255 = icmp sgt i32 %22, 0
  br i1 %255, label %256, label %310

256:                                              ; preds = %246
  %257 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %258 = bitcast %union.anon* %56 to [5 x i32]*
  %259 = icmp sgt i32 %25, 5
  %260 = load i32*, i32** %257, align 8
  %261 = bitcast %union.anon* %56 to i32*
  %262 = select i1 %259, i32* %260, i32* %261
  %263 = load i32, i32* %262, align 4
  %264 = sdiv i32 %227, %263
  store i32 %264, i32* %254, align 4
  %265 = icmp eq i32 %22, 1
  br i1 %265, label %310, label %296

266:                                              ; preds = %266, %68
  %267 = phi i64 [ %61, %68 ], [ %293, %266 ]
  %268 = phi i32 [ 1, %68 ], [ %292, %266 ]
  %269 = phi i64 [ %69, %68 ], [ %294, %266 ]
  %270 = getelementptr inbounds i32, i32* %59, i64 %267
  %271 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 %267
  %272 = select i1 %55, i32* %270, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = mul nsw i32 %268, %273
  %275 = add nsw i64 %267, 1
  %276 = getelementptr inbounds i32, i32* %59, i64 %275
  %277 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 %275
  %278 = select i1 %55, i32* %276, i32* %277
  %279 = load i32, i32* %278, align 4
  %280 = mul nsw i32 %274, %279
  %281 = add nsw i64 %267, 2
  %282 = getelementptr inbounds i32, i32* %59, i64 %281
  %283 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 %281
  %284 = select i1 %55, i32* %282, i32* %283
  %285 = load i32, i32* %284, align 4
  %286 = mul nsw i32 %280, %285
  %287 = add nsw i64 %267, 3
  %288 = getelementptr inbounds i32, i32* %59, i64 %287
  %289 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 %287
  %290 = select i1 %55, i32* %288, i32* %289
  %291 = load i32, i32* %290, align 4
  %292 = mul nsw i32 %286, %291
  %293 = add nsw i64 %267, 4
  %294 = add i64 %269, -4
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %100, label %266

296:                                              ; preds = %256, %296
  %297 = phi i64 [ %308, %296 ], [ 1, %256 ]
  %298 = phi i32 [ %306, %296 ], [ %264, %256 ]
  %299 = load i32, i32* %24, align 8
  %300 = icmp sgt i32 %299, 5
  %301 = load i32*, i32** %257, align 8
  %302 = getelementptr inbounds i32, i32* %301, i64 %297
  %303 = getelementptr inbounds [5 x i32], [5 x i32]* %258, i64 0, i64 %297
  %304 = select i1 %300, i32* %302, i32* %303
  %305 = load i32, i32* %304, align 4
  %306 = sdiv i32 %298, %305
  %307 = getelementptr inbounds i32, i32* %254, i64 %297
  store i32 %306, i32* %307, align 4
  %308 = add nuw nsw i64 %297, 1
  %309 = icmp slt i64 %308, %229
  br i1 %309, label %296, label %310

310:                                              ; preds = %296, %256, %246
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14GatherNdStringIiEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*) local_unnamed_addr #4 comdat {
  %7 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %8 = alloca %"class.tflite::DynamicBuffer", align 8
  %9 = alloca %"struct.tflite::StringRef", align 8
  %10 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %7, %"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2)
  %11 = bitcast %"class.tflite::DynamicBuffer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #8
  %18 = call i8* @_Znwm(i64 4) #9
  %19 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 4
  %21 = bitcast i32** %16 to i8**
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32** %15 to i64*
  %23 = bitcast i8* %18 to i32*
  store i32 0, i32* %23, align 4
  %24 = ptrtoint i8* %20 to i64
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %149

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 1
  %32 = bitcast %"struct.tflite::StringRef"* %9 to i8*
  %33 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %9, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %9, i64 0, i32 1
  br label %35

35:                                               ; preds = %28, %191
  %36 = phi i32 [ %26, %28 ], [ %192, %191 ]
  %37 = phi i32 [ 0, %28 ], [ %193, %191 ]
  %38 = load i32, i32* %29, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %171

40:                                               ; preds = %35
  %41 = load i32*, i32** %30, align 8
  %42 = sext i32 %38 to i64
  %43 = mul nsw i32 %38, %37
  %44 = icmp ult i32 %38, 8
  br i1 %44, label %45, label %48

45:                                               ; preds = %139, %48, %40
  %46 = phi i64 [ 0, %48 ], [ 0, %40 ], [ %57, %139 ]
  %47 = phi i32 [ 0, %48 ], [ 0, %40 ], [ %147, %139 ]
  br label %175

48:                                               ; preds = %40
  %49 = add nsw i64 %42, -1
  %50 = mul i32 %38, %37
  %51 = trunc i64 %49 to i32
  %52 = add i32 %50, %51
  %53 = icmp slt i32 %52, %50
  %54 = icmp ugt i64 %49, 4294967295
  %55 = or i1 %53, %54
  br i1 %55, label %45, label %56

56:                                               ; preds = %48
  %57 = and i64 %42, -8
  %58 = add nsw i64 %57, -8
  %59 = lshr exact i64 %58, 3
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %58, 0
  br i1 %62, label %112, label %63

63:                                               ; preds = %56
  %64 = sub nuw nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %109, %65 ]
  %67 = phi <4 x i32> [ zeroinitializer, %63 ], [ %107, %65 ]
  %68 = phi <4 x i32> [ zeroinitializer, %63 ], [ %108, %65 ]
  %69 = phi i64 [ %64, %63 ], [ %110, %65 ]
  %70 = trunc i64 %66 to i32
  %71 = add nsw i32 %43, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %3, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4
  %76 = getelementptr inbounds i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4
  %79 = getelementptr inbounds i32, i32* %41, i64 %66
  %80 = bitcast i32* %79 to <4 x i32>*
  %81 = load <4 x i32>, <4 x i32>* %80, align 4
  %82 = getelementptr inbounds i32, i32* %79, i64 4
  %83 = bitcast i32* %82 to <4 x i32>*
  %84 = load <4 x i32>, <4 x i32>* %83, align 4
  %85 = mul nsw <4 x i32> %81, %75
  %86 = mul nsw <4 x i32> %84, %78
  %87 = add nsw <4 x i32> %85, %67
  %88 = add nsw <4 x i32> %86, %68
  %89 = or i64 %66, 8
  %90 = trunc i64 %89 to i32
  %91 = add nsw i32 %43, %90
  %92 = sext i32 %91 to i64
  %93 = getelementptr inbounds i32, i32* %3, i64 %92
  %94 = bitcast i32* %93 to <4 x i32>*
  %95 = load <4 x i32>, <4 x i32>* %94, align 4
  %96 = getelementptr inbounds i32, i32* %93, i64 4
  %97 = bitcast i32* %96 to <4 x i32>*
  %98 = load <4 x i32>, <4 x i32>* %97, align 4
  %99 = getelementptr inbounds i32, i32* %41, i64 %89
  %100 = bitcast i32* %99 to <4 x i32>*
  %101 = load <4 x i32>, <4 x i32>* %100, align 4
  %102 = getelementptr inbounds i32, i32* %99, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4
  %105 = mul nsw <4 x i32> %101, %95
  %106 = mul nsw <4 x i32> %104, %98
  %107 = add nsw <4 x i32> %105, %87
  %108 = add nsw <4 x i32> %106, %88
  %109 = add i64 %66, 16
  %110 = add i64 %69, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %65, !llvm.loop !76

112:                                              ; preds = %65, %56
  %113 = phi <4 x i32> [ undef, %56 ], [ %107, %65 ]
  %114 = phi <4 x i32> [ undef, %56 ], [ %108, %65 ]
  %115 = phi i64 [ 0, %56 ], [ %109, %65 ]
  %116 = phi <4 x i32> [ zeroinitializer, %56 ], [ %107, %65 ]
  %117 = phi <4 x i32> [ zeroinitializer, %56 ], [ %108, %65 ]
  %118 = icmp eq i64 %61, 0
  br i1 %118, label %139, label %119

119:                                              ; preds = %112
  %120 = trunc i64 %115 to i32
  %121 = add nsw i32 %43, %120
  %122 = sext i32 %121 to i64
  %123 = getelementptr inbounds i32, i32* %3, i64 %122
  %124 = getelementptr inbounds i32, i32* %41, i64 %115
  %125 = getelementptr inbounds i32, i32* %124, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4
  %128 = getelementptr inbounds i32, i32* %123, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4
  %131 = mul nsw <4 x i32> %127, %130
  %132 = add nsw <4 x i32> %131, %117
  %133 = bitcast i32* %124 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4
  %135 = bitcast i32* %123 to <4 x i32>*
  %136 = load <4 x i32>, <4 x i32>* %135, align 4
  %137 = mul nsw <4 x i32> %134, %136
  %138 = add nsw <4 x i32> %137, %116
  br label %139

139:                                              ; preds = %112, %119
  %140 = phi <4 x i32> [ %113, %112 ], [ %138, %119 ]
  %141 = phi <4 x i32> [ %114, %112 ], [ %132, %119 ]
  %142 = add <4 x i32> %141, %140
  %143 = shufflevector <4 x i32> %142, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %144 = add <4 x i32> %142, %143
  %145 = shufflevector <4 x i32> %144, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %146 = add <4 x i32> %144, %145
  %147 = extractelement <4 x i32> %146, i32 0
  %148 = icmp eq i64 %57, %42
  br i1 %148, label %171, label %45

149:                                              ; preds = %191, %6
  call void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"* nonnull %8, %struct.TfLiteTensor* %5, %struct.TfLiteIntArray* null) #8
  %150 = load i32*, i32** %14, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %149
  %153 = ptrtoint i32* %150 to i64
  store i64 %153, i64* %22, align 8
  %154 = bitcast i32* %150 to i8*
  call void @_ZdlPv(i8* %154) #9
  br label %155

155:                                              ; preds = %152, %149
  %156 = load i8*, i8** %12, align 8
  %157 = icmp eq i8* %156, null
  br i1 %157, label %161, label %158

158:                                              ; preds = %155
  %159 = ptrtoint i8* %156 to i64
  %160 = bitcast i8** %13 to i64*
  store i64 %159, i64* %160, align 8
  call void @_ZdlPv(i8* nonnull %156) #9
  br label %161

161:                                              ; preds = %155, %158
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #8
  %162 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = icmp eq i32* %163, null
  br i1 %164, label %170, label %165

165:                                              ; preds = %161
  %166 = ptrtoint i32* %163 to i64
  %167 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 1
  %168 = bitcast i32** %167 to i64*
  store i64 %166, i64* %168, align 8
  %169 = bitcast i32* %163 to i8*
  call void @_ZdlPv(i8* %169) #9
  br label %170

170:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  ret void

171:                                              ; preds = %175, %139, %35
  %172 = phi i32 [ 0, %35 ], [ %147, %139 ], [ %186, %175 ]
  %173 = load i32, i32* %31, align 4
  %174 = icmp sgt i32 %173, 0
  br i1 %174, label %195, label %191

175:                                              ; preds = %45, %175
  %176 = phi i64 [ %187, %175 ], [ %46, %45 ]
  %177 = phi i32 [ %186, %175 ], [ %47, %45 ]
  %178 = trunc i64 %176 to i32
  %179 = add nsw i32 %43, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i32, i32* %3, i64 %180
  %182 = load i32, i32* %181, align 4
  %183 = getelementptr inbounds i32, i32* %41, i64 %176
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nsw i32 %185, %177
  %187 = add nuw nsw i64 %176, 1
  %188 = icmp slt i64 %187, %42
  br i1 %188, label %175, label %171, !llvm.loop !77

189:                                              ; preds = %195
  %190 = load i32, i32* %25, align 8
  br label %191

191:                                              ; preds = %189, %171
  %192 = phi i32 [ %190, %189 ], [ %36, %171 ]
  %193 = add nuw nsw i32 %37, 1
  %194 = icmp slt i32 %193, %192
  br i1 %194, label %35, label %149

195:                                              ; preds = %171, %195
  %196 = phi i32 [ %201, %195 ], [ 0, %171 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %197 = add nsw i32 %196, %172
  %198 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %1, i32 %197) #8
  %199 = extractvalue { i8*, i32 } %198, 0
  store i8* %199, i8** %33, align 8
  %200 = extractvalue { i8*, i32 } %198, 1
  store i32 %200, i32* %34, align 8
  call void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"* nonnull %8, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %201 = add nuw nsw i32 %196, 1
  %202 = load i32, i32* %31, align 4
  %203 = icmp slt i32 %201, %202
  br i1 %203, label %195, label %189
}

declare void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"*, %"struct.tflite::StringRef"* dereferenceable(16)) local_unnamed_addr #2

declare { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor*, i32) local_unnamed_addr #2

declare void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIflEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !78
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !78
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !78
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !78
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !78
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !78
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to float**
  %39 = load float*, float** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi float* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !81
  br label %74

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !81
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !81
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !81
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !81
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !81
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %72 = bitcast %union.TfLitePtrUnion* %71 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %44, %66
  %75 = phi i64* [ %73, %66 ], [ null, %44 ]
  %76 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #8
  %77 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !84
  br label %108

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !84
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !84
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !84
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = tail call i8* @_Znam(i64 %90) #9, !noalias !84
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !84
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to float**
  %107 = load float*, float** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi float* [ %107, %100 ], [ null, %78 ]
  %111 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %112 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %256

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %119 = load i32, i32* %116, align 8
  %120 = icmp sgt i32 %119, 0
  %121 = sext i32 %119 to i64
  %122 = add nsw i64 %121, -1
  %123 = add nsw i64 %121, -4
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i32 %119, 4
  %127 = trunc i64 %122 to i32
  %128 = icmp ugt i64 %122, 4294967295
  %129 = and i64 %121, -4
  %130 = and i64 %125, 1
  %131 = icmp eq i64 %124, 0
  %132 = sub nuw nsw i64 %125, %130
  %133 = icmp eq i64 %130, 0
  %134 = icmp eq i64 %129, %121
  %135 = and i64 %121, 1
  %136 = icmp eq i64 %135, 0
  %137 = sub nsw i64 0, %121
  br label %138

138:                                              ; preds = %265, %115
  %139 = phi i32 [ 0, %115 ], [ %277, %265 ]
  %140 = mul i32 %119, %139
  br i1 %120, label %141, label %265

141:                                              ; preds = %138
  %142 = load i32*, i32** %117, align 8
  %143 = mul nsw i32 %139, %119
  br i1 %126, label %144, label %165

144:                                              ; preds = %249, %165, %141
  %145 = phi i64 [ 0, %165 ], [ 0, %141 ], [ %129, %249 ]
  %146 = phi i32 [ 0, %165 ], [ 0, %141 ], [ %255, %249 ]
  %147 = xor i64 %145, -1
  br i1 %136, label %160, label %148

148:                                              ; preds = %144
  %149 = trunc i64 %145 to i32
  %150 = add nsw i32 %143, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i64, i64* %75, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds i32, i32* %142, i64 %145
  %155 = load i32, i32* %154, align 4
  %156 = trunc i64 %153 to i32
  %157 = mul i32 %155, %156
  %158 = add i32 %157, %146
  %159 = or i64 %145, 1
  br label %160

160:                                              ; preds = %148, %144
  %161 = phi i32 [ %158, %148 ], [ undef, %144 ]
  %162 = phi i64 [ %159, %148 ], [ %145, %144 ]
  %163 = phi i32 [ %158, %148 ], [ %146, %144 ]
  %164 = icmp eq i64 %147, %137
  br i1 %164, label %265, label %279

165:                                              ; preds = %141
  %166 = add i32 %140, %127
  %167 = icmp slt i32 %166, %140
  %168 = or i1 %167, %128
  br i1 %168, label %144, label %169

169:                                              ; preds = %165
  br i1 %131, label %221, label %170

170:                                              ; preds = %169, %170
  %171 = phi i64 [ %218, %170 ], [ 0, %169 ]
  %172 = phi <2 x i32> [ %216, %170 ], [ zeroinitializer, %169 ]
  %173 = phi <2 x i32> [ %217, %170 ], [ zeroinitializer, %169 ]
  %174 = phi i64 [ %219, %170 ], [ %132, %169 ]
  %175 = trunc i64 %171 to i32
  %176 = add nsw i32 %143, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i64, i64* %75, i64 %177
  %179 = bitcast i64* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = getelementptr inbounds i64, i64* %178, i64 2
  %182 = bitcast i64* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = getelementptr inbounds i32, i32* %142, i64 %171
  %185 = bitcast i32* %184 to <2 x i32>*
  %186 = load <2 x i32>, <2 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 2
  %188 = bitcast i32* %187 to <2 x i32>*
  %189 = load <2 x i32>, <2 x i32>* %188, align 4
  %190 = trunc <2 x i64> %180 to <2 x i32>
  %191 = trunc <2 x i64> %183 to <2 x i32>
  %192 = mul <2 x i32> %186, %190
  %193 = mul <2 x i32> %189, %191
  %194 = add <2 x i32> %192, %172
  %195 = add <2 x i32> %193, %173
  %196 = or i64 %171, 4
  %197 = trunc i64 %196 to i32
  %198 = add nsw i32 %143, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i64, i64* %75, i64 %199
  %201 = bitcast i64* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = getelementptr inbounds i64, i64* %200, i64 2
  %204 = bitcast i64* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  %206 = getelementptr inbounds i32, i32* %142, i64 %196
  %207 = bitcast i32* %206 to <2 x i32>*
  %208 = load <2 x i32>, <2 x i32>* %207, align 4
  %209 = getelementptr inbounds i32, i32* %206, i64 2
  %210 = bitcast i32* %209 to <2 x i32>*
  %211 = load <2 x i32>, <2 x i32>* %210, align 4
  %212 = trunc <2 x i64> %202 to <2 x i32>
  %213 = trunc <2 x i64> %205 to <2 x i32>
  %214 = mul <2 x i32> %208, %212
  %215 = mul <2 x i32> %211, %213
  %216 = add <2 x i32> %214, %194
  %217 = add <2 x i32> %215, %195
  %218 = add i64 %171, 8
  %219 = add i64 %174, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %170, !llvm.loop !87

221:                                              ; preds = %170, %169
  %222 = phi <2 x i32> [ undef, %169 ], [ %216, %170 ]
  %223 = phi <2 x i32> [ undef, %169 ], [ %217, %170 ]
  %224 = phi i64 [ 0, %169 ], [ %218, %170 ]
  %225 = phi <2 x i32> [ zeroinitializer, %169 ], [ %216, %170 ]
  %226 = phi <2 x i32> [ zeroinitializer, %169 ], [ %217, %170 ]
  br i1 %133, label %249, label %227

227:                                              ; preds = %221
  %228 = trunc i64 %224 to i32
  %229 = add nsw i32 %143, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i64, i64* %75, i64 %230
  %232 = getelementptr inbounds i32, i32* %142, i64 %224
  %233 = getelementptr inbounds i32, i32* %232, i64 2
  %234 = bitcast i32* %233 to <2 x i32>*
  %235 = load <2 x i32>, <2 x i32>* %234, align 4
  %236 = getelementptr inbounds i64, i64* %231, i64 2
  %237 = bitcast i64* %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8
  %239 = trunc <2 x i64> %238 to <2 x i32>
  %240 = mul <2 x i32> %235, %239
  %241 = add <2 x i32> %240, %226
  %242 = bitcast i32* %232 to <2 x i32>*
  %243 = load <2 x i32>, <2 x i32>* %242, align 4
  %244 = bitcast i64* %231 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = trunc <2 x i64> %245 to <2 x i32>
  %247 = mul <2 x i32> %243, %246
  %248 = add <2 x i32> %247, %225
  br label %249

249:                                              ; preds = %221, %227
  %250 = phi <2 x i32> [ %222, %221 ], [ %248, %227 ]
  %251 = phi <2 x i32> [ %223, %221 ], [ %241, %227 ]
  %252 = add <2 x i32> %251, %250
  %253 = shufflevector <2 x i32> %252, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %254 = add <2 x i32> %252, %253
  %255 = extractelement <2 x i32> %254, i32 0
  br i1 %134, label %265, label %144

256:                                              ; preds = %265, %108
  %257 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %305, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i32* %258 to i64
  %262 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast i32* %258 to i8*
  call void @_ZdlPv(i8* %264) #9
  br label %305

265:                                              ; preds = %160, %279, %249, %138
  %266 = phi i32 [ 0, %138 ], [ %255, %249 ], [ %161, %160 ], [ %302, %279 ]
  %267 = load i32, i32* %118, align 4
  %268 = mul nsw i32 %267, %139
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds float, float* %110, i64 %269
  %271 = bitcast float* %270 to i8*
  %272 = sext i32 %266 to i64
  %273 = getelementptr inbounds float, float* %41, i64 %272
  %274 = bitcast float* %273 to i8*
  %275 = sext i32 %267 to i64
  %276 = shl nsw i64 %275, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %271, i8* align 4 %274, i64 %276, i1 false) #8
  %277 = add nuw nsw i32 %139, 1
  %278 = icmp eq i32 %277, %113
  br i1 %278, label %256, label %138

279:                                              ; preds = %160, %279
  %280 = phi i64 [ %303, %279 ], [ %162, %160 ]
  %281 = phi i32 [ %302, %279 ], [ %163, %160 ]
  %282 = trunc i64 %280 to i32
  %283 = add nsw i32 %143, %282
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i64, i64* %75, i64 %284
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds i32, i32* %142, i64 %280
  %288 = load i32, i32* %287, align 4
  %289 = trunc i64 %286 to i32
  %290 = mul i32 %288, %289
  %291 = add i32 %290, %281
  %292 = add nuw nsw i64 %280, 1
  %293 = trunc i64 %292 to i32
  %294 = add nsw i32 %143, %293
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i64, i64* %75, i64 %295
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds i32, i32* %142, i64 %292
  %299 = load i32, i32* %298, align 4
  %300 = trunc i64 %297 to i32
  %301 = mul i32 %299, %300
  %302 = add i32 %301, %291
  %303 = add nuw nsw i64 %280, 2
  %304 = icmp eq i64 %303, %121
  br i1 %304, label %265, label %279, !llvm.loop !88

305:                                              ; preds = %256, %260
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #8
  %306 = icmp sgt i32 %109, 5
  br i1 %306, label %307, label %313

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = bitcast i32* %309 to i8*
  call void @_ZdaPv(i8* %312) #9
  br label %313

313:                                              ; preds = %305, %307, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #8
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = icmp sgt i32 %315, 5
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = icmp eq i32* %319, null
  br i1 %320, label %323, label %321

321:                                              ; preds = %317
  %322 = bitcast i32* %319 to i8*
  call void @_ZdaPv(i8* %322) #9
  br label %323

323:                                              ; preds = %313, %317, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %325 = load i32, i32* %324, align 8
  %326 = icmp sgt i32 %325, 5
  br i1 %326, label %327, label %333

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %329 = load i32*, i32** %328, align 8
  %330 = icmp eq i32* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %327
  %332 = bitcast i32* %329 to i8*
  call void @_ZdaPv(i8* %332) #9
  br label %333

333:                                              ; preds = %323, %327, %331
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIhlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !89
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !89
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !89
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !89
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !89
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !89
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i8* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !92
  br label %74

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !92
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !92
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !92
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !92
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !92
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %72 = bitcast %union.TfLitePtrUnion* %71 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %44, %66
  %75 = phi i64* [ %73, %66 ], [ null, %44 ]
  %76 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #8
  %77 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !95
  br label %108

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !95
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !95
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !95
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = tail call i8* @_Znam(i64 %90) #9, !noalias !95
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !95
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi i8* [ %107, %100 ], [ null, %78 ]
  %111 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %112 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %256

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %119 = load i32, i32* %116, align 8
  %120 = icmp sgt i32 %119, 0
  %121 = sext i32 %119 to i64
  %122 = add nsw i64 %121, -1
  %123 = add nsw i64 %121, -4
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i32 %119, 4
  %127 = trunc i64 %122 to i32
  %128 = icmp ugt i64 %122, 4294967295
  %129 = and i64 %121, -4
  %130 = and i64 %125, 1
  %131 = icmp eq i64 %124, 0
  %132 = sub nuw nsw i64 %125, %130
  %133 = icmp eq i64 %130, 0
  %134 = icmp eq i64 %129, %121
  %135 = and i64 %121, 1
  %136 = icmp eq i64 %135, 0
  %137 = sub nsw i64 0, %121
  br label %138

138:                                              ; preds = %265, %115
  %139 = phi i32 [ 0, %115 ], [ %274, %265 ]
  %140 = mul i32 %119, %139
  br i1 %120, label %141, label %265

141:                                              ; preds = %138
  %142 = load i32*, i32** %117, align 8
  %143 = mul nsw i32 %139, %119
  br i1 %126, label %144, label %165

144:                                              ; preds = %249, %165, %141
  %145 = phi i64 [ 0, %165 ], [ 0, %141 ], [ %129, %249 ]
  %146 = phi i32 [ 0, %165 ], [ 0, %141 ], [ %255, %249 ]
  %147 = xor i64 %145, -1
  br i1 %136, label %160, label %148

148:                                              ; preds = %144
  %149 = trunc i64 %145 to i32
  %150 = add nsw i32 %143, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i64, i64* %75, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds i32, i32* %142, i64 %145
  %155 = load i32, i32* %154, align 4
  %156 = trunc i64 %153 to i32
  %157 = mul i32 %155, %156
  %158 = add i32 %157, %146
  %159 = or i64 %145, 1
  br label %160

160:                                              ; preds = %148, %144
  %161 = phi i32 [ %158, %148 ], [ undef, %144 ]
  %162 = phi i64 [ %159, %148 ], [ %145, %144 ]
  %163 = phi i32 [ %158, %148 ], [ %146, %144 ]
  %164 = icmp eq i64 %147, %137
  br i1 %164, label %265, label %276

165:                                              ; preds = %141
  %166 = add i32 %140, %127
  %167 = icmp slt i32 %166, %140
  %168 = or i1 %167, %128
  br i1 %168, label %144, label %169

169:                                              ; preds = %165
  br i1 %131, label %221, label %170

170:                                              ; preds = %169, %170
  %171 = phi i64 [ %218, %170 ], [ 0, %169 ]
  %172 = phi <2 x i32> [ %216, %170 ], [ zeroinitializer, %169 ]
  %173 = phi <2 x i32> [ %217, %170 ], [ zeroinitializer, %169 ]
  %174 = phi i64 [ %219, %170 ], [ %132, %169 ]
  %175 = trunc i64 %171 to i32
  %176 = add nsw i32 %143, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i64, i64* %75, i64 %177
  %179 = bitcast i64* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = getelementptr inbounds i64, i64* %178, i64 2
  %182 = bitcast i64* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = getelementptr inbounds i32, i32* %142, i64 %171
  %185 = bitcast i32* %184 to <2 x i32>*
  %186 = load <2 x i32>, <2 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 2
  %188 = bitcast i32* %187 to <2 x i32>*
  %189 = load <2 x i32>, <2 x i32>* %188, align 4
  %190 = trunc <2 x i64> %180 to <2 x i32>
  %191 = trunc <2 x i64> %183 to <2 x i32>
  %192 = mul <2 x i32> %186, %190
  %193 = mul <2 x i32> %189, %191
  %194 = add <2 x i32> %192, %172
  %195 = add <2 x i32> %193, %173
  %196 = or i64 %171, 4
  %197 = trunc i64 %196 to i32
  %198 = add nsw i32 %143, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i64, i64* %75, i64 %199
  %201 = bitcast i64* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = getelementptr inbounds i64, i64* %200, i64 2
  %204 = bitcast i64* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  %206 = getelementptr inbounds i32, i32* %142, i64 %196
  %207 = bitcast i32* %206 to <2 x i32>*
  %208 = load <2 x i32>, <2 x i32>* %207, align 4
  %209 = getelementptr inbounds i32, i32* %206, i64 2
  %210 = bitcast i32* %209 to <2 x i32>*
  %211 = load <2 x i32>, <2 x i32>* %210, align 4
  %212 = trunc <2 x i64> %202 to <2 x i32>
  %213 = trunc <2 x i64> %205 to <2 x i32>
  %214 = mul <2 x i32> %208, %212
  %215 = mul <2 x i32> %211, %213
  %216 = add <2 x i32> %214, %194
  %217 = add <2 x i32> %215, %195
  %218 = add i64 %171, 8
  %219 = add i64 %174, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %170, !llvm.loop !98

221:                                              ; preds = %170, %169
  %222 = phi <2 x i32> [ undef, %169 ], [ %216, %170 ]
  %223 = phi <2 x i32> [ undef, %169 ], [ %217, %170 ]
  %224 = phi i64 [ 0, %169 ], [ %218, %170 ]
  %225 = phi <2 x i32> [ zeroinitializer, %169 ], [ %216, %170 ]
  %226 = phi <2 x i32> [ zeroinitializer, %169 ], [ %217, %170 ]
  br i1 %133, label %249, label %227

227:                                              ; preds = %221
  %228 = trunc i64 %224 to i32
  %229 = add nsw i32 %143, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i64, i64* %75, i64 %230
  %232 = getelementptr inbounds i32, i32* %142, i64 %224
  %233 = getelementptr inbounds i32, i32* %232, i64 2
  %234 = bitcast i32* %233 to <2 x i32>*
  %235 = load <2 x i32>, <2 x i32>* %234, align 4
  %236 = getelementptr inbounds i64, i64* %231, i64 2
  %237 = bitcast i64* %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8
  %239 = trunc <2 x i64> %238 to <2 x i32>
  %240 = mul <2 x i32> %235, %239
  %241 = add <2 x i32> %240, %226
  %242 = bitcast i32* %232 to <2 x i32>*
  %243 = load <2 x i32>, <2 x i32>* %242, align 4
  %244 = bitcast i64* %231 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = trunc <2 x i64> %245 to <2 x i32>
  %247 = mul <2 x i32> %243, %246
  %248 = add <2 x i32> %247, %225
  br label %249

249:                                              ; preds = %221, %227
  %250 = phi <2 x i32> [ %222, %221 ], [ %248, %227 ]
  %251 = phi <2 x i32> [ %223, %221 ], [ %241, %227 ]
  %252 = add <2 x i32> %251, %250
  %253 = shufflevector <2 x i32> %252, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %254 = add <2 x i32> %252, %253
  %255 = extractelement <2 x i32> %254, i32 0
  br i1 %134, label %265, label %144

256:                                              ; preds = %265, %108
  %257 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %302, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i32* %258 to i64
  %262 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast i32* %258 to i8*
  call void @_ZdlPv(i8* %264) #9
  br label %302

265:                                              ; preds = %160, %276, %249, %138
  %266 = phi i32 [ 0, %138 ], [ %255, %249 ], [ %161, %160 ], [ %299, %276 ]
  %267 = load i32, i32* %118, align 4
  %268 = mul nsw i32 %267, %139
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* %110, i64 %269
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i8, i8* %41, i64 %271
  %273 = sext i32 %267 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %270, i8* align 1 %272, i64 %273, i1 false) #8
  %274 = add nuw nsw i32 %139, 1
  %275 = icmp eq i32 %274, %113
  br i1 %275, label %256, label %138

276:                                              ; preds = %160, %276
  %277 = phi i64 [ %300, %276 ], [ %162, %160 ]
  %278 = phi i32 [ %299, %276 ], [ %163, %160 ]
  %279 = trunc i64 %277 to i32
  %280 = add nsw i32 %143, %279
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i64, i64* %75, i64 %281
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds i32, i32* %142, i64 %277
  %285 = load i32, i32* %284, align 4
  %286 = trunc i64 %283 to i32
  %287 = mul i32 %285, %286
  %288 = add i32 %287, %278
  %289 = add nuw nsw i64 %277, 1
  %290 = trunc i64 %289 to i32
  %291 = add nsw i32 %143, %290
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i64, i64* %75, i64 %292
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds i32, i32* %142, i64 %289
  %296 = load i32, i32* %295, align 4
  %297 = trunc i64 %294 to i32
  %298 = mul i32 %296, %297
  %299 = add i32 %298, %288
  %300 = add nuw nsw i64 %277, 2
  %301 = icmp eq i64 %300, %121
  br i1 %301, label %265, label %276, !llvm.loop !99

302:                                              ; preds = %256, %260
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #8
  %303 = icmp sgt i32 %109, 5
  br i1 %303, label %304, label %310

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %306 = load i32*, i32** %305, align 8
  %307 = icmp eq i32* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  %309 = bitcast i32* %306 to i8*
  call void @_ZdaPv(i8* %309) #9
  br label %310

310:                                              ; preds = %302, %304, %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #8
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = icmp sgt i32 %312, 5
  br i1 %313, label %314, label %320

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %316 = load i32*, i32** %315, align 8
  %317 = icmp eq i32* %316, null
  br i1 %317, label %320, label %318

318:                                              ; preds = %314
  %319 = bitcast i32* %316 to i8*
  call void @_ZdaPv(i8* %319) #9
  br label %320

320:                                              ; preds = %310, %314, %318
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = icmp sgt i32 %322, 5
  br i1 %323, label %324, label %330

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = icmp eq i32* %326, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %324
  %329 = bitcast i32* %326 to i8*
  call void @_ZdaPv(i8* %329) #9
  br label %330

330:                                              ; preds = %320, %324, %328
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIalEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !100
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !100
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !100
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !100
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !100
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !100
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i8* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !103
  br label %74

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !103
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !103
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !103
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !103
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !103
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %72 = bitcast %union.TfLitePtrUnion* %71 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %44, %66
  %75 = phi i64* [ %73, %66 ], [ null, %44 ]
  %76 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #8
  %77 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !106
  br label %108

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !106
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !106
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !106
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = tail call i8* @_Znam(i64 %90) #9, !noalias !106
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !106
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to i8**
  %107 = load i8*, i8** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi i8* [ %107, %100 ], [ null, %78 ]
  %111 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %112 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %256

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %119 = load i32, i32* %116, align 8
  %120 = icmp sgt i32 %119, 0
  %121 = sext i32 %119 to i64
  %122 = add nsw i64 %121, -1
  %123 = add nsw i64 %121, -4
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i32 %119, 4
  %127 = trunc i64 %122 to i32
  %128 = icmp ugt i64 %122, 4294967295
  %129 = and i64 %121, -4
  %130 = and i64 %125, 1
  %131 = icmp eq i64 %124, 0
  %132 = sub nuw nsw i64 %125, %130
  %133 = icmp eq i64 %130, 0
  %134 = icmp eq i64 %129, %121
  %135 = and i64 %121, 1
  %136 = icmp eq i64 %135, 0
  %137 = sub nsw i64 0, %121
  br label %138

138:                                              ; preds = %265, %115
  %139 = phi i32 [ 0, %115 ], [ %274, %265 ]
  %140 = mul i32 %119, %139
  br i1 %120, label %141, label %265

141:                                              ; preds = %138
  %142 = load i32*, i32** %117, align 8
  %143 = mul nsw i32 %139, %119
  br i1 %126, label %144, label %165

144:                                              ; preds = %249, %165, %141
  %145 = phi i64 [ 0, %165 ], [ 0, %141 ], [ %129, %249 ]
  %146 = phi i32 [ 0, %165 ], [ 0, %141 ], [ %255, %249 ]
  %147 = xor i64 %145, -1
  br i1 %136, label %160, label %148

148:                                              ; preds = %144
  %149 = trunc i64 %145 to i32
  %150 = add nsw i32 %143, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i64, i64* %75, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds i32, i32* %142, i64 %145
  %155 = load i32, i32* %154, align 4
  %156 = trunc i64 %153 to i32
  %157 = mul i32 %155, %156
  %158 = add i32 %157, %146
  %159 = or i64 %145, 1
  br label %160

160:                                              ; preds = %148, %144
  %161 = phi i32 [ %158, %148 ], [ undef, %144 ]
  %162 = phi i64 [ %159, %148 ], [ %145, %144 ]
  %163 = phi i32 [ %158, %148 ], [ %146, %144 ]
  %164 = icmp eq i64 %147, %137
  br i1 %164, label %265, label %276

165:                                              ; preds = %141
  %166 = add i32 %140, %127
  %167 = icmp slt i32 %166, %140
  %168 = or i1 %167, %128
  br i1 %168, label %144, label %169

169:                                              ; preds = %165
  br i1 %131, label %221, label %170

170:                                              ; preds = %169, %170
  %171 = phi i64 [ %218, %170 ], [ 0, %169 ]
  %172 = phi <2 x i32> [ %216, %170 ], [ zeroinitializer, %169 ]
  %173 = phi <2 x i32> [ %217, %170 ], [ zeroinitializer, %169 ]
  %174 = phi i64 [ %219, %170 ], [ %132, %169 ]
  %175 = trunc i64 %171 to i32
  %176 = add nsw i32 %143, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i64, i64* %75, i64 %177
  %179 = bitcast i64* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = getelementptr inbounds i64, i64* %178, i64 2
  %182 = bitcast i64* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = getelementptr inbounds i32, i32* %142, i64 %171
  %185 = bitcast i32* %184 to <2 x i32>*
  %186 = load <2 x i32>, <2 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 2
  %188 = bitcast i32* %187 to <2 x i32>*
  %189 = load <2 x i32>, <2 x i32>* %188, align 4
  %190 = trunc <2 x i64> %180 to <2 x i32>
  %191 = trunc <2 x i64> %183 to <2 x i32>
  %192 = mul <2 x i32> %186, %190
  %193 = mul <2 x i32> %189, %191
  %194 = add <2 x i32> %192, %172
  %195 = add <2 x i32> %193, %173
  %196 = or i64 %171, 4
  %197 = trunc i64 %196 to i32
  %198 = add nsw i32 %143, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i64, i64* %75, i64 %199
  %201 = bitcast i64* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = getelementptr inbounds i64, i64* %200, i64 2
  %204 = bitcast i64* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  %206 = getelementptr inbounds i32, i32* %142, i64 %196
  %207 = bitcast i32* %206 to <2 x i32>*
  %208 = load <2 x i32>, <2 x i32>* %207, align 4
  %209 = getelementptr inbounds i32, i32* %206, i64 2
  %210 = bitcast i32* %209 to <2 x i32>*
  %211 = load <2 x i32>, <2 x i32>* %210, align 4
  %212 = trunc <2 x i64> %202 to <2 x i32>
  %213 = trunc <2 x i64> %205 to <2 x i32>
  %214 = mul <2 x i32> %208, %212
  %215 = mul <2 x i32> %211, %213
  %216 = add <2 x i32> %214, %194
  %217 = add <2 x i32> %215, %195
  %218 = add i64 %171, 8
  %219 = add i64 %174, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %170, !llvm.loop !109

221:                                              ; preds = %170, %169
  %222 = phi <2 x i32> [ undef, %169 ], [ %216, %170 ]
  %223 = phi <2 x i32> [ undef, %169 ], [ %217, %170 ]
  %224 = phi i64 [ 0, %169 ], [ %218, %170 ]
  %225 = phi <2 x i32> [ zeroinitializer, %169 ], [ %216, %170 ]
  %226 = phi <2 x i32> [ zeroinitializer, %169 ], [ %217, %170 ]
  br i1 %133, label %249, label %227

227:                                              ; preds = %221
  %228 = trunc i64 %224 to i32
  %229 = add nsw i32 %143, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i64, i64* %75, i64 %230
  %232 = getelementptr inbounds i32, i32* %142, i64 %224
  %233 = getelementptr inbounds i32, i32* %232, i64 2
  %234 = bitcast i32* %233 to <2 x i32>*
  %235 = load <2 x i32>, <2 x i32>* %234, align 4
  %236 = getelementptr inbounds i64, i64* %231, i64 2
  %237 = bitcast i64* %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8
  %239 = trunc <2 x i64> %238 to <2 x i32>
  %240 = mul <2 x i32> %235, %239
  %241 = add <2 x i32> %240, %226
  %242 = bitcast i32* %232 to <2 x i32>*
  %243 = load <2 x i32>, <2 x i32>* %242, align 4
  %244 = bitcast i64* %231 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = trunc <2 x i64> %245 to <2 x i32>
  %247 = mul <2 x i32> %243, %246
  %248 = add <2 x i32> %247, %225
  br label %249

249:                                              ; preds = %221, %227
  %250 = phi <2 x i32> [ %222, %221 ], [ %248, %227 ]
  %251 = phi <2 x i32> [ %223, %221 ], [ %241, %227 ]
  %252 = add <2 x i32> %251, %250
  %253 = shufflevector <2 x i32> %252, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %254 = add <2 x i32> %252, %253
  %255 = extractelement <2 x i32> %254, i32 0
  br i1 %134, label %265, label %144

256:                                              ; preds = %265, %108
  %257 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %302, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i32* %258 to i64
  %262 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast i32* %258 to i8*
  call void @_ZdlPv(i8* %264) #9
  br label %302

265:                                              ; preds = %160, %276, %249, %138
  %266 = phi i32 [ 0, %138 ], [ %255, %249 ], [ %161, %160 ], [ %299, %276 ]
  %267 = load i32, i32* %118, align 4
  %268 = mul nsw i32 %267, %139
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i8, i8* %110, i64 %269
  %271 = sext i32 %266 to i64
  %272 = getelementptr inbounds i8, i8* %41, i64 %271
  %273 = sext i32 %267 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %270, i8* align 1 %272, i64 %273, i1 false) #8
  %274 = add nuw nsw i32 %139, 1
  %275 = icmp eq i32 %274, %113
  br i1 %275, label %256, label %138

276:                                              ; preds = %160, %276
  %277 = phi i64 [ %300, %276 ], [ %162, %160 ]
  %278 = phi i32 [ %299, %276 ], [ %163, %160 ]
  %279 = trunc i64 %277 to i32
  %280 = add nsw i32 %143, %279
  %281 = sext i32 %280 to i64
  %282 = getelementptr inbounds i64, i64* %75, i64 %281
  %283 = load i64, i64* %282, align 8
  %284 = getelementptr inbounds i32, i32* %142, i64 %277
  %285 = load i32, i32* %284, align 4
  %286 = trunc i64 %283 to i32
  %287 = mul i32 %285, %286
  %288 = add i32 %287, %278
  %289 = add nuw nsw i64 %277, 1
  %290 = trunc i64 %289 to i32
  %291 = add nsw i32 %143, %290
  %292 = sext i32 %291 to i64
  %293 = getelementptr inbounds i64, i64* %75, i64 %292
  %294 = load i64, i64* %293, align 8
  %295 = getelementptr inbounds i32, i32* %142, i64 %289
  %296 = load i32, i32* %295, align 4
  %297 = trunc i64 %294 to i32
  %298 = mul i32 %296, %297
  %299 = add i32 %298, %288
  %300 = add nuw nsw i64 %277, 2
  %301 = icmp eq i64 %300, %121
  br i1 %301, label %265, label %276, !llvm.loop !110

302:                                              ; preds = %256, %260
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #8
  %303 = icmp sgt i32 %109, 5
  br i1 %303, label %304, label %310

304:                                              ; preds = %302
  %305 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %306 = load i32*, i32** %305, align 8
  %307 = icmp eq i32* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %304
  %309 = bitcast i32* %306 to i8*
  call void @_ZdaPv(i8* %309) #9
  br label %310

310:                                              ; preds = %302, %304, %308
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #8
  %311 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  %313 = icmp sgt i32 %312, 5
  br i1 %313, label %314, label %320

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %316 = load i32*, i32** %315, align 8
  %317 = icmp eq i32* %316, null
  br i1 %317, label %320, label %318

318:                                              ; preds = %314
  %319 = bitcast i32* %316 to i8*
  call void @_ZdaPv(i8* %319) #9
  br label %320

320:                                              ; preds = %310, %314, %318
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %321 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %322 = load i32, i32* %321, align 8
  %323 = icmp sgt i32 %322, 5
  br i1 %323, label %324, label %330

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = icmp eq i32* %326, null
  br i1 %327, label %330, label %328

328:                                              ; preds = %324
  %329 = bitcast i32* %326 to i8*
  call void @_ZdaPv(i8* %329) #9
  br label %330

330:                                              ; preds = %320, %324, %328
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIilEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !111
  br label %39

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !111
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !111
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !111
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !111
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !111
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1, i32 0
  %38 = load i32*, i32** %37, align 8
  br label %39

39:                                               ; preds = %10, %32
  %40 = phi i32* [ %38, %32 ], [ null, %10 ]
  %41 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #8
  %42 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !114
  br label %73

45:                                               ; preds = %39
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8, !noalias !114
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !114
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %49, i32* %51, align 8, !alias.scope !114
  %52 = icmp sgt i32 %49, 5
  br i1 %52, label %53, label %60

53:                                               ; preds = %45
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 2
  %56 = tail call i8* @_Znam(i64 %55) #9, !noalias !114
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %58 = bitcast i32** %57 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !114
  %59 = bitcast i8* %56 to i32*
  br label %65

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %62 = bitcast %union.anon* %61 to i32*
  %63 = sext i32 %49 to i64
  %64 = shl nsw i64 %63, 2
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi i64 [ %55, %53 ], [ %64, %60 ]
  %67 = phi i32* [ %59, %53 ], [ %62, %60 ]
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %66, i1 false) #8
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %71 = bitcast %union.TfLitePtrUnion* %70 to i64**
  %72 = load i64*, i64** %71, align 8
  br label %73

73:                                               ; preds = %43, %65
  %74 = phi i64* [ %72, %65 ], [ null, %43 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #8
  %76 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !117
  br label %106

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !117
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !117
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !117
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #9, !noalias !117
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !117
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #8
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1, i32 0
  %105 = load i32*, i32** %104, align 8
  br label %106

106:                                              ; preds = %77, %99
  %107 = phi i32 [ %83, %99 ], [ 0, %77 ]
  %108 = phi i32* [ %105, %99 ], [ null, %77 ]
  %109 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %110 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %254

113:                                              ; preds = %106
  %114 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %115 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %117 = load i32, i32* %114, align 8
  %118 = icmp sgt i32 %117, 0
  %119 = sext i32 %117 to i64
  %120 = add nsw i64 %119, -1
  %121 = add nsw i64 %119, -4
  %122 = lshr i64 %121, 2
  %123 = add nuw nsw i64 %122, 1
  %124 = icmp ult i32 %117, 4
  %125 = trunc i64 %120 to i32
  %126 = icmp ugt i64 %120, 4294967295
  %127 = and i64 %119, -4
  %128 = and i64 %123, 1
  %129 = icmp eq i64 %122, 0
  %130 = sub nuw nsw i64 %123, %128
  %131 = icmp eq i64 %128, 0
  %132 = icmp eq i64 %127, %119
  %133 = and i64 %119, 1
  %134 = icmp eq i64 %133, 0
  %135 = sub nsw i64 0, %119
  br label %136

136:                                              ; preds = %263, %113
  %137 = phi i32 [ 0, %113 ], [ %275, %263 ]
  %138 = mul i32 %117, %137
  br i1 %118, label %139, label %263

139:                                              ; preds = %136
  %140 = load i32*, i32** %115, align 8
  %141 = mul nsw i32 %137, %117
  br i1 %124, label %142, label %163

142:                                              ; preds = %247, %163, %139
  %143 = phi i64 [ 0, %163 ], [ 0, %139 ], [ %127, %247 ]
  %144 = phi i32 [ 0, %163 ], [ 0, %139 ], [ %253, %247 ]
  %145 = xor i64 %143, -1
  br i1 %134, label %158, label %146

146:                                              ; preds = %142
  %147 = trunc i64 %143 to i32
  %148 = add nsw i32 %141, %147
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i64, i64* %74, i64 %149
  %151 = load i64, i64* %150, align 8
  %152 = getelementptr inbounds i32, i32* %140, i64 %143
  %153 = load i32, i32* %152, align 4
  %154 = trunc i64 %151 to i32
  %155 = mul i32 %153, %154
  %156 = add i32 %155, %144
  %157 = or i64 %143, 1
  br label %158

158:                                              ; preds = %146, %142
  %159 = phi i32 [ %156, %146 ], [ undef, %142 ]
  %160 = phi i64 [ %157, %146 ], [ %143, %142 ]
  %161 = phi i32 [ %156, %146 ], [ %144, %142 ]
  %162 = icmp eq i64 %145, %135
  br i1 %162, label %263, label %277

163:                                              ; preds = %139
  %164 = add i32 %138, %125
  %165 = icmp slt i32 %164, %138
  %166 = or i1 %165, %126
  br i1 %166, label %142, label %167

167:                                              ; preds = %163
  br i1 %129, label %219, label %168

168:                                              ; preds = %167, %168
  %169 = phi i64 [ %216, %168 ], [ 0, %167 ]
  %170 = phi <2 x i32> [ %214, %168 ], [ zeroinitializer, %167 ]
  %171 = phi <2 x i32> [ %215, %168 ], [ zeroinitializer, %167 ]
  %172 = phi i64 [ %217, %168 ], [ %130, %167 ]
  %173 = trunc i64 %169 to i32
  %174 = add nsw i32 %141, %173
  %175 = sext i32 %174 to i64
  %176 = getelementptr inbounds i64, i64* %74, i64 %175
  %177 = bitcast i64* %176 to <2 x i64>*
  %178 = load <2 x i64>, <2 x i64>* %177, align 8
  %179 = getelementptr inbounds i64, i64* %176, i64 2
  %180 = bitcast i64* %179 to <2 x i64>*
  %181 = load <2 x i64>, <2 x i64>* %180, align 8
  %182 = getelementptr inbounds i32, i32* %140, i64 %169
  %183 = bitcast i32* %182 to <2 x i32>*
  %184 = load <2 x i32>, <2 x i32>* %183, align 4
  %185 = getelementptr inbounds i32, i32* %182, i64 2
  %186 = bitcast i32* %185 to <2 x i32>*
  %187 = load <2 x i32>, <2 x i32>* %186, align 4
  %188 = trunc <2 x i64> %178 to <2 x i32>
  %189 = trunc <2 x i64> %181 to <2 x i32>
  %190 = mul <2 x i32> %184, %188
  %191 = mul <2 x i32> %187, %189
  %192 = add <2 x i32> %190, %170
  %193 = add <2 x i32> %191, %171
  %194 = or i64 %169, 4
  %195 = trunc i64 %194 to i32
  %196 = add nsw i32 %141, %195
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i64, i64* %74, i64 %197
  %199 = bitcast i64* %198 to <2 x i64>*
  %200 = load <2 x i64>, <2 x i64>* %199, align 8
  %201 = getelementptr inbounds i64, i64* %198, i64 2
  %202 = bitcast i64* %201 to <2 x i64>*
  %203 = load <2 x i64>, <2 x i64>* %202, align 8
  %204 = getelementptr inbounds i32, i32* %140, i64 %194
  %205 = bitcast i32* %204 to <2 x i32>*
  %206 = load <2 x i32>, <2 x i32>* %205, align 4
  %207 = getelementptr inbounds i32, i32* %204, i64 2
  %208 = bitcast i32* %207 to <2 x i32>*
  %209 = load <2 x i32>, <2 x i32>* %208, align 4
  %210 = trunc <2 x i64> %200 to <2 x i32>
  %211 = trunc <2 x i64> %203 to <2 x i32>
  %212 = mul <2 x i32> %206, %210
  %213 = mul <2 x i32> %209, %211
  %214 = add <2 x i32> %212, %192
  %215 = add <2 x i32> %213, %193
  %216 = add i64 %169, 8
  %217 = add i64 %172, -2
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %168, !llvm.loop !120

219:                                              ; preds = %168, %167
  %220 = phi <2 x i32> [ undef, %167 ], [ %214, %168 ]
  %221 = phi <2 x i32> [ undef, %167 ], [ %215, %168 ]
  %222 = phi i64 [ 0, %167 ], [ %216, %168 ]
  %223 = phi <2 x i32> [ zeroinitializer, %167 ], [ %214, %168 ]
  %224 = phi <2 x i32> [ zeroinitializer, %167 ], [ %215, %168 ]
  br i1 %131, label %247, label %225

225:                                              ; preds = %219
  %226 = trunc i64 %222 to i32
  %227 = add nsw i32 %141, %226
  %228 = sext i32 %227 to i64
  %229 = getelementptr inbounds i64, i64* %74, i64 %228
  %230 = getelementptr inbounds i32, i32* %140, i64 %222
  %231 = getelementptr inbounds i32, i32* %230, i64 2
  %232 = bitcast i32* %231 to <2 x i32>*
  %233 = load <2 x i32>, <2 x i32>* %232, align 4
  %234 = getelementptr inbounds i64, i64* %229, i64 2
  %235 = bitcast i64* %234 to <2 x i64>*
  %236 = load <2 x i64>, <2 x i64>* %235, align 8
  %237 = trunc <2 x i64> %236 to <2 x i32>
  %238 = mul <2 x i32> %233, %237
  %239 = add <2 x i32> %238, %224
  %240 = bitcast i32* %230 to <2 x i32>*
  %241 = load <2 x i32>, <2 x i32>* %240, align 4
  %242 = bitcast i64* %229 to <2 x i64>*
  %243 = load <2 x i64>, <2 x i64>* %242, align 8
  %244 = trunc <2 x i64> %243 to <2 x i32>
  %245 = mul <2 x i32> %241, %244
  %246 = add <2 x i32> %245, %223
  br label %247

247:                                              ; preds = %219, %225
  %248 = phi <2 x i32> [ %220, %219 ], [ %246, %225 ]
  %249 = phi <2 x i32> [ %221, %219 ], [ %239, %225 ]
  %250 = add <2 x i32> %249, %248
  %251 = shufflevector <2 x i32> %250, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %252 = add <2 x i32> %250, %251
  %253 = extractelement <2 x i32> %252, i32 0
  br i1 %132, label %263, label %142

254:                                              ; preds = %263, %106
  %255 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %303, label %258

258:                                              ; preds = %254
  %259 = ptrtoint i32* %256 to i64
  %260 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %261 = bitcast i32** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = bitcast i32* %256 to i8*
  call void @_ZdlPv(i8* %262) #9
  br label %303

263:                                              ; preds = %158, %277, %247, %136
  %264 = phi i32 [ 0, %136 ], [ %253, %247 ], [ %159, %158 ], [ %300, %277 ]
  %265 = load i32, i32* %116, align 4
  %266 = mul nsw i32 %265, %137
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds i32, i32* %108, i64 %267
  %269 = bitcast i32* %268 to i8*
  %270 = sext i32 %264 to i64
  %271 = getelementptr inbounds i32, i32* %40, i64 %270
  %272 = bitcast i32* %271 to i8*
  %273 = sext i32 %265 to i64
  %274 = shl nsw i64 %273, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %269, i8* align 4 %272, i64 %274, i1 false) #8
  %275 = add nuw nsw i32 %137, 1
  %276 = icmp eq i32 %275, %111
  br i1 %276, label %254, label %136

277:                                              ; preds = %158, %277
  %278 = phi i64 [ %301, %277 ], [ %160, %158 ]
  %279 = phi i32 [ %300, %277 ], [ %161, %158 ]
  %280 = trunc i64 %278 to i32
  %281 = add nsw i32 %141, %280
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i64, i64* %74, i64 %282
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds i32, i32* %140, i64 %278
  %286 = load i32, i32* %285, align 4
  %287 = trunc i64 %284 to i32
  %288 = mul i32 %286, %287
  %289 = add i32 %288, %279
  %290 = add nuw nsw i64 %278, 1
  %291 = trunc i64 %290 to i32
  %292 = add nsw i32 %141, %291
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i64, i64* %74, i64 %293
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds i32, i32* %140, i64 %290
  %297 = load i32, i32* %296, align 4
  %298 = trunc i64 %295 to i32
  %299 = mul i32 %297, %298
  %300 = add i32 %299, %289
  %301 = add nuw nsw i64 %278, 2
  %302 = icmp eq i64 %301, %119
  br i1 %302, label %263, label %277, !llvm.loop !121

303:                                              ; preds = %254, %258
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #8
  %304 = icmp sgt i32 %107, 5
  br i1 %304, label %305, label %311

305:                                              ; preds = %303
  %306 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %307 = load i32*, i32** %306, align 8
  %308 = icmp eq i32* %307, null
  br i1 %308, label %311, label %309

309:                                              ; preds = %305
  %310 = bitcast i32* %307 to i8*
  call void @_ZdaPv(i8* %310) #9
  br label %311

311:                                              ; preds = %303, %305, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #8
  %312 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %313 = load i32, i32* %312, align 8
  %314 = icmp sgt i32 %313, 5
  br i1 %314, label %315, label %321

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = icmp eq i32* %317, null
  br i1 %318, label %321, label %319

319:                                              ; preds = %315
  %320 = bitcast i32* %317 to i8*
  call void @_ZdaPv(i8* %320) #9
  br label %321

321:                                              ; preds = %311, %315, %319
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #8
  %322 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %323 = load i32, i32* %322, align 8
  %324 = icmp sgt i32 %323, 5
  br i1 %324, label %325, label %331

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %327 = load i32*, i32** %326, align 8
  %328 = icmp eq i32* %327, null
  br i1 %328, label %331, label %329

329:                                              ; preds = %325
  %330 = bitcast i32* %327 to i8*
  call void @_ZdaPv(i8* %330) #9
  br label %331

331:                                              ; preds = %321, %325, %329
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd8GatherNdIllEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  %9 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %11, align 8, !alias.scope !122
  br label %40

12:                                               ; preds = %3
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8, !noalias !122
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !122
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %16, i32* %18, align 8, !alias.scope !122
  %19 = icmp sgt i32 %16, 5
  br i1 %19, label %20, label %27

20:                                               ; preds = %12
  %21 = sext i32 %16 to i64
  %22 = shl nsw i64 %21, 2
  %23 = tail call i8* @_Znam(i64 %22) #9, !noalias !122
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %25 = bitcast i32** %24 to i8**
  store i8* %23, i8** %25, align 8, !alias.scope !122
  %26 = bitcast i8* %23 to i32*
  br label %32

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %29 = bitcast %union.anon* %28 to i32*
  %30 = sext i32 %16 to i64
  %31 = shl nsw i64 %30, 2
  br label %32

32:                                               ; preds = %27, %20
  %33 = phi i64 [ %22, %20 ], [ %31, %27 ]
  %34 = phi i32* [ %26, %20 ], [ %29, %27 ]
  %35 = bitcast i32* %34 to i8*
  %36 = bitcast i32* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64 %33, i1 false) #8
  %37 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 1
  %38 = bitcast %union.TfLitePtrUnion* %37 to i64**
  %39 = load i64*, i64** %38, align 8
  br label %40

40:                                               ; preds = %10, %32
  %41 = phi i64* [ %39, %32 ], [ null, %10 ]
  %42 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #8
  %43 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %45, align 8, !alias.scope !125
  br label %74

46:                                               ; preds = %40
  %47 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %48 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %47, align 8, !noalias !125
  %49 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 4, !noalias !125
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %48, i64 0, i32 1, i64 0
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %50, i32* %52, align 8, !alias.scope !125
  %53 = icmp sgt i32 %50, 5
  br i1 %53, label %54, label %61

54:                                               ; preds = %46
  %55 = sext i32 %50 to i64
  %56 = shl nsw i64 %55, 2
  %57 = tail call i8* @_Znam(i64 %56) #9, !noalias !125
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %59 = bitcast i32** %58 to i8**
  store i8* %57, i8** %59, align 8, !alias.scope !125
  %60 = bitcast i8* %57 to i32*
  br label %66

61:                                               ; preds = %46
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %63 = bitcast %union.anon* %62 to i32*
  %64 = sext i32 %50 to i64
  %65 = shl nsw i64 %64, 2
  br label %66

66:                                               ; preds = %61, %54
  %67 = phi i64 [ %56, %54 ], [ %65, %61 ]
  %68 = phi i32* [ %60, %54 ], [ %63, %61 ]
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %51 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %69, i8* align 4 %70, i64 %67, i1 false) #8
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %72 = bitcast %union.TfLitePtrUnion* %71 to i64**
  %73 = load i64*, i64** %72, align 8
  br label %74

74:                                               ; preds = %44, %66
  %75 = phi i64* [ %73, %66 ], [ null, %44 ]
  %76 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %76) #8
  %77 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %77, label %78, label %80

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %79, align 8, !alias.scope !128
  br label %108

80:                                               ; preds = %74
  %81 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %82 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %81, align 8, !noalias !128
  %83 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 0
  %84 = load i32, i32* %83, align 4, !noalias !128
  %85 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %82, i64 0, i32 1, i64 0
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %84, i32* %86, align 8, !alias.scope !128
  %87 = icmp sgt i32 %84, 5
  br i1 %87, label %88, label %95

88:                                               ; preds = %80
  %89 = sext i32 %84 to i64
  %90 = shl nsw i64 %89, 2
  %91 = tail call i8* @_Znam(i64 %90) #9, !noalias !128
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8, !alias.scope !128
  %94 = bitcast i8* %91 to i32*
  br label %100

95:                                               ; preds = %80
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %97 = bitcast %union.anon* %96 to i32*
  %98 = sext i32 %84 to i64
  %99 = shl nsw i64 %98, 2
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %90, %88 ], [ %99, %95 ]
  %102 = phi i32* [ %94, %88 ], [ %97, %95 ]
  %103 = bitcast i32* %102 to i8*
  %104 = bitcast i32* %85 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %103, i8* align 4 %104, i64 %101, i1 false) #8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %106 = bitcast %union.TfLitePtrUnion* %105 to i64**
  %107 = load i64*, i64** %106, align 8
  br label %108

108:                                              ; preds = %78, %100
  %109 = phi i32 [ %84, %100 ], [ 0, %78 ]
  %110 = phi i64* [ %107, %100 ], [ null, %78 ]
  %111 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %111) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %111, i8 -86, i64 40, i1 false) #8
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6) #8
  %112 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp sgt i32 %113, 0
  br i1 %114, label %115, label %256

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 2
  %117 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 1
  %119 = load i32, i32* %116, align 8
  %120 = icmp sgt i32 %119, 0
  %121 = sext i32 %119 to i64
  %122 = add nsw i64 %121, -1
  %123 = add nsw i64 %121, -4
  %124 = lshr i64 %123, 2
  %125 = add nuw nsw i64 %124, 1
  %126 = icmp ult i32 %119, 4
  %127 = trunc i64 %122 to i32
  %128 = icmp ugt i64 %122, 4294967295
  %129 = and i64 %121, -4
  %130 = and i64 %125, 1
  %131 = icmp eq i64 %124, 0
  %132 = sub nuw nsw i64 %125, %130
  %133 = icmp eq i64 %130, 0
  %134 = icmp eq i64 %129, %121
  %135 = and i64 %121, 1
  %136 = icmp eq i64 %135, 0
  %137 = sub nsw i64 0, %121
  br label %138

138:                                              ; preds = %265, %115
  %139 = phi i32 [ 0, %115 ], [ %277, %265 ]
  %140 = mul i32 %119, %139
  br i1 %120, label %141, label %265

141:                                              ; preds = %138
  %142 = load i32*, i32** %117, align 8
  %143 = mul nsw i32 %139, %119
  br i1 %126, label %144, label %165

144:                                              ; preds = %249, %165, %141
  %145 = phi i64 [ 0, %165 ], [ 0, %141 ], [ %129, %249 ]
  %146 = phi i32 [ 0, %165 ], [ 0, %141 ], [ %255, %249 ]
  %147 = xor i64 %145, -1
  br i1 %136, label %160, label %148

148:                                              ; preds = %144
  %149 = trunc i64 %145 to i32
  %150 = add nsw i32 %143, %149
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i64, i64* %75, i64 %151
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds i32, i32* %142, i64 %145
  %155 = load i32, i32* %154, align 4
  %156 = trunc i64 %153 to i32
  %157 = mul i32 %155, %156
  %158 = add i32 %157, %146
  %159 = or i64 %145, 1
  br label %160

160:                                              ; preds = %148, %144
  %161 = phi i32 [ %158, %148 ], [ undef, %144 ]
  %162 = phi i64 [ %159, %148 ], [ %145, %144 ]
  %163 = phi i32 [ %158, %148 ], [ %146, %144 ]
  %164 = icmp eq i64 %147, %137
  br i1 %164, label %265, label %279

165:                                              ; preds = %141
  %166 = add i32 %140, %127
  %167 = icmp slt i32 %166, %140
  %168 = or i1 %167, %128
  br i1 %168, label %144, label %169

169:                                              ; preds = %165
  br i1 %131, label %221, label %170

170:                                              ; preds = %169, %170
  %171 = phi i64 [ %218, %170 ], [ 0, %169 ]
  %172 = phi <2 x i32> [ %216, %170 ], [ zeroinitializer, %169 ]
  %173 = phi <2 x i32> [ %217, %170 ], [ zeroinitializer, %169 ]
  %174 = phi i64 [ %219, %170 ], [ %132, %169 ]
  %175 = trunc i64 %171 to i32
  %176 = add nsw i32 %143, %175
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i64, i64* %75, i64 %177
  %179 = bitcast i64* %178 to <2 x i64>*
  %180 = load <2 x i64>, <2 x i64>* %179, align 8
  %181 = getelementptr inbounds i64, i64* %178, i64 2
  %182 = bitcast i64* %181 to <2 x i64>*
  %183 = load <2 x i64>, <2 x i64>* %182, align 8
  %184 = getelementptr inbounds i32, i32* %142, i64 %171
  %185 = bitcast i32* %184 to <2 x i32>*
  %186 = load <2 x i32>, <2 x i32>* %185, align 4
  %187 = getelementptr inbounds i32, i32* %184, i64 2
  %188 = bitcast i32* %187 to <2 x i32>*
  %189 = load <2 x i32>, <2 x i32>* %188, align 4
  %190 = trunc <2 x i64> %180 to <2 x i32>
  %191 = trunc <2 x i64> %183 to <2 x i32>
  %192 = mul <2 x i32> %186, %190
  %193 = mul <2 x i32> %189, %191
  %194 = add <2 x i32> %192, %172
  %195 = add <2 x i32> %193, %173
  %196 = or i64 %171, 4
  %197 = trunc i64 %196 to i32
  %198 = add nsw i32 %143, %197
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i64, i64* %75, i64 %199
  %201 = bitcast i64* %200 to <2 x i64>*
  %202 = load <2 x i64>, <2 x i64>* %201, align 8
  %203 = getelementptr inbounds i64, i64* %200, i64 2
  %204 = bitcast i64* %203 to <2 x i64>*
  %205 = load <2 x i64>, <2 x i64>* %204, align 8
  %206 = getelementptr inbounds i32, i32* %142, i64 %196
  %207 = bitcast i32* %206 to <2 x i32>*
  %208 = load <2 x i32>, <2 x i32>* %207, align 4
  %209 = getelementptr inbounds i32, i32* %206, i64 2
  %210 = bitcast i32* %209 to <2 x i32>*
  %211 = load <2 x i32>, <2 x i32>* %210, align 4
  %212 = trunc <2 x i64> %202 to <2 x i32>
  %213 = trunc <2 x i64> %205 to <2 x i32>
  %214 = mul <2 x i32> %208, %212
  %215 = mul <2 x i32> %211, %213
  %216 = add <2 x i32> %214, %194
  %217 = add <2 x i32> %215, %195
  %218 = add i64 %171, 8
  %219 = add i64 %174, -2
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %170, !llvm.loop !131

221:                                              ; preds = %170, %169
  %222 = phi <2 x i32> [ undef, %169 ], [ %216, %170 ]
  %223 = phi <2 x i32> [ undef, %169 ], [ %217, %170 ]
  %224 = phi i64 [ 0, %169 ], [ %218, %170 ]
  %225 = phi <2 x i32> [ zeroinitializer, %169 ], [ %216, %170 ]
  %226 = phi <2 x i32> [ zeroinitializer, %169 ], [ %217, %170 ]
  br i1 %133, label %249, label %227

227:                                              ; preds = %221
  %228 = trunc i64 %224 to i32
  %229 = add nsw i32 %143, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i64, i64* %75, i64 %230
  %232 = getelementptr inbounds i32, i32* %142, i64 %224
  %233 = getelementptr inbounds i32, i32* %232, i64 2
  %234 = bitcast i32* %233 to <2 x i32>*
  %235 = load <2 x i32>, <2 x i32>* %234, align 4
  %236 = getelementptr inbounds i64, i64* %231, i64 2
  %237 = bitcast i64* %236 to <2 x i64>*
  %238 = load <2 x i64>, <2 x i64>* %237, align 8
  %239 = trunc <2 x i64> %238 to <2 x i32>
  %240 = mul <2 x i32> %235, %239
  %241 = add <2 x i32> %240, %226
  %242 = bitcast i32* %232 to <2 x i32>*
  %243 = load <2 x i32>, <2 x i32>* %242, align 4
  %244 = bitcast i64* %231 to <2 x i64>*
  %245 = load <2 x i64>, <2 x i64>* %244, align 8
  %246 = trunc <2 x i64> %245 to <2 x i32>
  %247 = mul <2 x i32> %243, %246
  %248 = add <2 x i32> %247, %225
  br label %249

249:                                              ; preds = %221, %227
  %250 = phi <2 x i32> [ %222, %221 ], [ %248, %227 ]
  %251 = phi <2 x i32> [ %223, %221 ], [ %241, %227 ]
  %252 = add <2 x i32> %251, %250
  %253 = shufflevector <2 x i32> %252, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %254 = add <2 x i32> %252, %253
  %255 = extractelement <2 x i32> %254, i32 0
  br i1 %134, label %265, label %144

256:                                              ; preds = %265, %108
  %257 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = icmp eq i32* %258, null
  br i1 %259, label %305, label %260

260:                                              ; preds = %256
  %261 = ptrtoint i32* %258 to i64
  %262 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %4, i64 0, i32 3, i32 0, i32 1
  %263 = bitcast i32** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast i32* %258 to i8*
  call void @_ZdlPv(i8* %264) #9
  br label %305

265:                                              ; preds = %160, %279, %249, %138
  %266 = phi i32 [ 0, %138 ], [ %255, %249 ], [ %161, %160 ], [ %302, %279 ]
  %267 = load i32, i32* %118, align 4
  %268 = mul nsw i32 %267, %139
  %269 = sext i32 %268 to i64
  %270 = getelementptr inbounds i64, i64* %110, i64 %269
  %271 = bitcast i64* %270 to i8*
  %272 = sext i32 %266 to i64
  %273 = getelementptr inbounds i64, i64* %41, i64 %272
  %274 = bitcast i64* %273 to i8*
  %275 = sext i32 %267 to i64
  %276 = shl nsw i64 %275, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %271, i8* align 8 %274, i64 %276, i1 false) #8
  %277 = add nuw nsw i32 %139, 1
  %278 = icmp eq i32 %277, %113
  br i1 %278, label %256, label %138

279:                                              ; preds = %160, %279
  %280 = phi i64 [ %303, %279 ], [ %162, %160 ]
  %281 = phi i32 [ %302, %279 ], [ %163, %160 ]
  %282 = trunc i64 %280 to i32
  %283 = add nsw i32 %143, %282
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds i64, i64* %75, i64 %284
  %286 = load i64, i64* %285, align 8
  %287 = getelementptr inbounds i32, i32* %142, i64 %280
  %288 = load i32, i32* %287, align 4
  %289 = trunc i64 %286 to i32
  %290 = mul i32 %288, %289
  %291 = add i32 %290, %281
  %292 = add nuw nsw i64 %280, 1
  %293 = trunc i64 %292 to i32
  %294 = add nsw i32 %143, %293
  %295 = sext i32 %294 to i64
  %296 = getelementptr inbounds i64, i64* %75, i64 %295
  %297 = load i64, i64* %296, align 8
  %298 = getelementptr inbounds i32, i32* %142, i64 %292
  %299 = load i32, i32* %298, align 4
  %300 = trunc i64 %297 to i32
  %301 = mul i32 %299, %300
  %302 = add i32 %301, %291
  %303 = add nuw nsw i64 %280, 2
  %304 = icmp eq i64 %303, %121
  br i1 %304, label %265, label %279, !llvm.loop !132

305:                                              ; preds = %256, %260
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %111) #8
  %306 = icmp sgt i32 %109, 5
  br i1 %306, label %307, label %313

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %309 = load i32*, i32** %308, align 8
  %310 = icmp eq i32* %309, null
  br i1 %310, label %313, label %311

311:                                              ; preds = %307
  %312 = bitcast i32* %309 to i8*
  call void @_ZdaPv(i8* %312) #9
  br label %313

313:                                              ; preds = %305, %307, %311
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %76) #8
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %315 = load i32, i32* %314, align 8
  %316 = icmp sgt i32 %315, 5
  br i1 %316, label %317, label %323

317:                                              ; preds = %313
  %318 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %319 = load i32*, i32** %318, align 8
  %320 = icmp eq i32* %319, null
  br i1 %320, label %323, label %321

321:                                              ; preds = %317
  %322 = bitcast i32* %319 to i8*
  call void @_ZdaPv(i8* %322) #9
  br label %323

323:                                              ; preds = %313, %317, %321
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #8
  %324 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %325 = load i32, i32* %324, align 8
  %326 = icmp sgt i32 %325, 5
  br i1 %326, label %327, label %333

327:                                              ; preds = %323
  %328 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %329 = load i32*, i32** %328, align 8
  %330 = icmp eq i32* %329, null
  br i1 %330, label %333, label %331

331:                                              ; preds = %327
  %332 = bitcast i32* %329 to i8*
  call void @_ZdaPv(i8* %332) #9
  br label %333

333:                                              ; preds = %323, %327, %331
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9gather_nd14GatherNdStringIlEE12TfLiteStatusPK12TfLiteTensorS7_PS5_(%struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"class.tflite::RuntimeShape", align 8
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #8
  %8 = icmp eq %struct.TfLiteTensor* %0, null
  br i1 %8, label %9, label %11

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %10, align 8, !alias.scope !133
  br label %36

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %0, i64 0, i32 2
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8, !noalias !133
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !133
  %16 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %15, i32* %17, align 8, !alias.scope !133
  %18 = icmp sgt i32 %15, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %11
  %20 = sext i32 %15 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #9, !noalias !133
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8, !alias.scope !133
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %15 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %26, %19
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = bitcast i32* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %35, i64 %32, i1 false) #8
  br label %36

36:                                               ; preds = %9, %31
  %37 = bitcast %"class.tflite::RuntimeShape"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #8
  %38 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %38, label %39, label %41

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 0, i32* %40, align 8, !alias.scope !136
  br label %69

41:                                               ; preds = %36
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %43 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %42, align 8, !noalias !136
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 4, !noalias !136
  %46 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %43, i64 0, i32 1, i64 0
  %47 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  store i32 %45, i32* %47, align 8, !alias.scope !136
  %48 = icmp sgt i32 %45, 5
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = sext i32 %45 to i64
  %51 = shl nsw i64 %50, 2
  %52 = tail call i8* @_Znam(i64 %51) #9, !noalias !136
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %54 = bitcast i32** %53 to i8**
  store i8* %52, i8** %54, align 8, !alias.scope !136
  %55 = bitcast i8* %52 to i32*
  br label %61

56:                                               ; preds = %41
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %58 = bitcast %union.anon* %57 to i32*
  %59 = sext i32 %45 to i64
  %60 = shl nsw i64 %59, 2
  br label %61

61:                                               ; preds = %56, %49
  %62 = phi i64 [ %51, %49 ], [ %60, %56 ]
  %63 = phi i32* [ %55, %49 ], [ %58, %56 ]
  %64 = bitcast i32* %63 to i8*
  %65 = bitcast i32* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %65, i64 %62, i1 false) #8
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %67 = bitcast %union.TfLitePtrUnion* %66 to i64**
  %68 = load i64*, i64** %67, align 8
  br label %69

69:                                               ; preds = %39, %61
  %70 = phi i64* [ %68, %61 ], [ null, %39 ]
  %71 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %71) #8
  %72 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %72, label %73, label %75

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %74, align 8, !alias.scope !139
  br label %100

75:                                               ; preds = %69
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8, !noalias !139
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4, !noalias !139
  %80 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %79, i32* %81, align 8, !alias.scope !139
  %82 = icmp sgt i32 %79, 5
  br i1 %82, label %83, label %90

83:                                               ; preds = %75
  %84 = sext i32 %79 to i64
  %85 = shl nsw i64 %84, 2
  %86 = tail call i8* @_Znam(i64 %85) #9, !noalias !139
  %87 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %88 = bitcast i32** %87 to i8**
  store i8* %86, i8** %88, align 8, !alias.scope !139
  %89 = bitcast i8* %86 to i32*
  br label %95

90:                                               ; preds = %75
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %92 = bitcast %union.anon* %91 to i32*
  %93 = sext i32 %79 to i64
  %94 = shl nsw i64 %93, 2
  br label %95

95:                                               ; preds = %90, %83
  %96 = phi i64 [ %85, %83 ], [ %94, %90 ]
  %97 = phi i32* [ %89, %83 ], [ %92, %90 ]
  %98 = bitcast i32* %97 to i8*
  %99 = bitcast i32* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %96, i1 false) #8
  br label %100

100:                                              ; preds = %73, %95
  call void @_ZN6tflite13reference_ops14GatherNdStringIlEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, %struct.TfLiteTensor* %0, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %5, i64* %70, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %struct.TfLiteTensor* %2)
  %101 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %102 = load i32, i32* %101, align 8
  %103 = icmp sgt i32 %102, 5
  br i1 %103, label %104, label %110

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = icmp eq i32* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %104
  %109 = bitcast i32* %106 to i8*
  call void @_ZdaPv(i8* %109) #9
  br label %110

110:                                              ; preds = %100, %104, %108
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %71) #8
  %111 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = icmp sgt i32 %112, 5
  br i1 %113, label %114, label %120

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = icmp eq i32* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %114
  %119 = bitcast i32* %116 to i8*
  call void @_ZdaPv(i8* %119) #9
  br label %120

120:                                              ; preds = %110, %114, %118
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #8
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = icmp sgt i32 %122, 5
  br i1 %123, label %124, label %130

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %130, label %128

128:                                              ; preds = %124
  %129 = bitcast i32* %126 to i8*
  call void @_ZdaPv(i8* %129) #9
  br label %130

130:                                              ; preds = %120, %124, %128
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #8
  ret i32 0
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops14GatherNdStringIlEEvRKNS_12RuntimeShapeEPK12TfLiteTensorS4_PKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), %struct.TfLiteTensor*) local_unnamed_addr #4 comdat {
  %7 = alloca %"struct.tflite::reference_ops::GatherNdHelperResult", align 8
  %8 = alloca %"class.tflite::DynamicBuffer", align 8
  %9 = alloca %"struct.tflite::StringRef", align 8
  %10 = bitcast %"struct.tflite::reference_ops::GatherNdHelperResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 40, i1 false)
  call void @_ZN6tflite13reference_ops14GatherNdHelperERKNS_12RuntimeShapeES3_(%"struct.tflite::reference_ops::GatherNdHelperResult"* nonnull sret %7, %"class.tflite::RuntimeShape"* dereferenceable(32) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %2)
  %11 = bitcast %"class.tflite::DynamicBuffer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #8
  %12 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = getelementptr inbounds %"class.tflite::DynamicBuffer", %"class.tflite::DynamicBuffer"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #8
  %18 = call i8* @_Znwm(i64 4) #9
  %19 = bitcast %"class.std::__1::vector"* %17 to i8**
  store i8* %18, i8** %19, align 8
  %20 = getelementptr inbounds i8, i8* %18, i64 4
  %21 = bitcast i32** %16 to i8**
  store i8* %20, i8** %21, align 8
  %22 = bitcast i32** %15 to i64*
  %23 = bitcast i8* %18 to i32*
  store i32 0, i32* %23, align 4
  %24 = ptrtoint i8* %20 to i64
  store i64 %24, i64* %22, align 8
  %25 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 0
  br i1 %27, label %28, label %153

28:                                               ; preds = %6
  %29 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 2
  %30 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 1
  %32 = bitcast %"struct.tflite::StringRef"* %9 to i8*
  %33 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %9, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.tflite::StringRef", %"struct.tflite::StringRef"* %9, i64 0, i32 1
  br label %35

35:                                               ; preds = %28, %196
  %36 = phi i32 [ %26, %28 ], [ %197, %196 ]
  %37 = phi i32 [ 0, %28 ], [ %198, %196 ]
  %38 = load i32, i32* %29, align 8
  %39 = icmp sgt i32 %38, 0
  br i1 %39, label %40, label %175

40:                                               ; preds = %35
  %41 = load i32*, i32** %30, align 8
  %42 = sext i32 %38 to i64
  %43 = mul nsw i32 %38, %37
  %44 = icmp ult i32 %38, 4
  br i1 %44, label %45, label %48

45:                                               ; preds = %145, %48, %40
  %46 = phi i64 [ 0, %48 ], [ 0, %40 ], [ %57, %145 ]
  %47 = phi i32 [ 0, %48 ], [ 0, %40 ], [ %151, %145 ]
  br label %179

48:                                               ; preds = %40
  %49 = add nsw i64 %42, -1
  %50 = mul i32 %38, %37
  %51 = trunc i64 %49 to i32
  %52 = add i32 %50, %51
  %53 = icmp slt i32 %52, %50
  %54 = icmp ugt i64 %49, 4294967295
  %55 = or i1 %53, %54
  br i1 %55, label %45, label %56

56:                                               ; preds = %48
  %57 = and i64 %42, -4
  %58 = add nsw i64 %57, -4
  %59 = lshr exact i64 %58, 2
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 1
  %62 = icmp eq i64 %58, 0
  br i1 %62, label %116, label %63

63:                                               ; preds = %56
  %64 = sub nuw nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %113, %65 ]
  %67 = phi <2 x i32> [ zeroinitializer, %63 ], [ %111, %65 ]
  %68 = phi <2 x i32> [ zeroinitializer, %63 ], [ %112, %65 ]
  %69 = phi i64 [ %64, %63 ], [ %114, %65 ]
  %70 = trunc i64 %66 to i32
  %71 = add nsw i32 %43, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i64, i64* %3, i64 %72
  %74 = bitcast i64* %73 to <2 x i64>*
  %75 = load <2 x i64>, <2 x i64>* %74, align 8
  %76 = getelementptr inbounds i64, i64* %73, i64 2
  %77 = bitcast i64* %76 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8
  %79 = getelementptr inbounds i32, i32* %41, i64 %66
  %80 = bitcast i32* %79 to <2 x i32>*
  %81 = load <2 x i32>, <2 x i32>* %80, align 4
  %82 = getelementptr inbounds i32, i32* %79, i64 2
  %83 = bitcast i32* %82 to <2 x i32>*
  %84 = load <2 x i32>, <2 x i32>* %83, align 4
  %85 = trunc <2 x i64> %75 to <2 x i32>
  %86 = trunc <2 x i64> %78 to <2 x i32>
  %87 = mul <2 x i32> %81, %85
  %88 = mul <2 x i32> %84, %86
  %89 = add <2 x i32> %87, %67
  %90 = add <2 x i32> %88, %68
  %91 = or i64 %66, 4
  %92 = trunc i64 %91 to i32
  %93 = add nsw i32 %43, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i64, i64* %3, i64 %94
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8
  %98 = getelementptr inbounds i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8
  %101 = getelementptr inbounds i32, i32* %41, i64 %91
  %102 = bitcast i32* %101 to <2 x i32>*
  %103 = load <2 x i32>, <2 x i32>* %102, align 4
  %104 = getelementptr inbounds i32, i32* %101, i64 2
  %105 = bitcast i32* %104 to <2 x i32>*
  %106 = load <2 x i32>, <2 x i32>* %105, align 4
  %107 = trunc <2 x i64> %97 to <2 x i32>
  %108 = trunc <2 x i64> %100 to <2 x i32>
  %109 = mul <2 x i32> %103, %107
  %110 = mul <2 x i32> %106, %108
  %111 = add <2 x i32> %109, %89
  %112 = add <2 x i32> %110, %90
  %113 = add i64 %66, 8
  %114 = add i64 %69, -2
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %65, !llvm.loop !142

116:                                              ; preds = %65, %56
  %117 = phi <2 x i32> [ undef, %56 ], [ %111, %65 ]
  %118 = phi <2 x i32> [ undef, %56 ], [ %112, %65 ]
  %119 = phi i64 [ 0, %56 ], [ %113, %65 ]
  %120 = phi <2 x i32> [ zeroinitializer, %56 ], [ %111, %65 ]
  %121 = phi <2 x i32> [ zeroinitializer, %56 ], [ %112, %65 ]
  %122 = icmp eq i64 %61, 0
  br i1 %122, label %145, label %123

123:                                              ; preds = %116
  %124 = trunc i64 %119 to i32
  %125 = add nsw i32 %43, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i64, i64* %3, i64 %126
  %128 = getelementptr inbounds i32, i32* %41, i64 %119
  %129 = getelementptr inbounds i32, i32* %128, i64 2
  %130 = bitcast i32* %129 to <2 x i32>*
  %131 = load <2 x i32>, <2 x i32>* %130, align 4
  %132 = getelementptr inbounds i64, i64* %127, i64 2
  %133 = bitcast i64* %132 to <2 x i64>*
  %134 = load <2 x i64>, <2 x i64>* %133, align 8
  %135 = trunc <2 x i64> %134 to <2 x i32>
  %136 = mul <2 x i32> %131, %135
  %137 = add <2 x i32> %136, %121
  %138 = bitcast i32* %128 to <2 x i32>*
  %139 = load <2 x i32>, <2 x i32>* %138, align 4
  %140 = bitcast i64* %127 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8
  %142 = trunc <2 x i64> %141 to <2 x i32>
  %143 = mul <2 x i32> %139, %142
  %144 = add <2 x i32> %143, %120
  br label %145

145:                                              ; preds = %116, %123
  %146 = phi <2 x i32> [ %117, %116 ], [ %144, %123 ]
  %147 = phi <2 x i32> [ %118, %116 ], [ %137, %123 ]
  %148 = add <2 x i32> %147, %146
  %149 = shufflevector <2 x i32> %148, <2 x i32> undef, <2 x i32> <i32 1, i32 undef>
  %150 = add <2 x i32> %148, %149
  %151 = extractelement <2 x i32> %150, i32 0
  %152 = icmp eq i64 %57, %42
  br i1 %152, label %175, label %45

153:                                              ; preds = %196, %6
  call void @_ZN6tflite13DynamicBuffer13WriteToTensorEP12TfLiteTensorP14TfLiteIntArray(%"class.tflite::DynamicBuffer"* nonnull %8, %struct.TfLiteTensor* %5, %struct.TfLiteIntArray* null) #8
  %154 = load i32*, i32** %14, align 8
  %155 = icmp eq i32* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = ptrtoint i32* %154 to i64
  store i64 %157, i64* %22, align 8
  %158 = bitcast i32* %154 to i8*
  call void @_ZdlPv(i8* %158) #9
  br label %159

159:                                              ; preds = %156, %153
  %160 = load i8*, i8** %12, align 8
  %161 = icmp eq i8* %160, null
  br i1 %161, label %165, label %162

162:                                              ; preds = %159
  %163 = ptrtoint i8* %160 to i64
  %164 = bitcast i8** %13 to i64*
  store i64 %163, i64* %164, align 8
  call void @_ZdlPv(i8* nonnull %160) #9
  br label %165

165:                                              ; preds = %159, %162
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #8
  %166 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32* %167 to i64
  %171 = getelementptr inbounds %"struct.tflite::reference_ops::GatherNdHelperResult", %"struct.tflite::reference_ops::GatherNdHelperResult"* %7, i64 0, i32 3, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i32* %167 to i8*
  call void @_ZdlPv(i8* %173) #9
  br label %174

174:                                              ; preds = %165, %169
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #8
  ret void

175:                                              ; preds = %179, %145, %35
  %176 = phi i32 [ 0, %35 ], [ %151, %145 ], [ %191, %179 ]
  %177 = load i32, i32* %31, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %200, label %196

179:                                              ; preds = %45, %179
  %180 = phi i64 [ %192, %179 ], [ %46, %45 ]
  %181 = phi i32 [ %191, %179 ], [ %47, %45 ]
  %182 = trunc i64 %180 to i32
  %183 = add nsw i32 %43, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i64, i64* %3, i64 %184
  %186 = load i64, i64* %185, align 8
  %187 = getelementptr inbounds i32, i32* %41, i64 %180
  %188 = load i32, i32* %187, align 4
  %189 = trunc i64 %186 to i32
  %190 = mul i32 %188, %189
  %191 = add i32 %190, %181
  %192 = add nuw nsw i64 %180, 1
  %193 = icmp slt i64 %192, %42
  br i1 %193, label %179, label %175, !llvm.loop !143

194:                                              ; preds = %200
  %195 = load i32, i32* %25, align 8
  br label %196

196:                                              ; preds = %194, %175
  %197 = phi i32 [ %195, %194 ], [ %36, %175 ]
  %198 = add nuw nsw i32 %37, 1
  %199 = icmp slt i32 %198, %197
  br i1 %199, label %35, label %153

200:                                              ; preds = %175, %200
  %201 = phi i32 [ %206, %200 ], [ 0, %175 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #8
  %202 = add nsw i32 %201, %176
  %203 = call { i8*, i32 } @_ZN6tflite9GetStringEPK12TfLiteTensori(%struct.TfLiteTensor* %1, i32 %202) #8
  %204 = extractvalue { i8*, i32 } %203, 0
  store i8* %204, i8** %33, align 8
  %205 = extractvalue { i8*, i32 } %203, 1
  store i32 %205, i32* %34, align 8
  call void @_ZN6tflite13DynamicBuffer9AddStringERKNS_9StringRefE(%"class.tflite::DynamicBuffer"* nonnull %8, %"struct.tflite::StringRef"* nonnull dereferenceable(16) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #8
  %206 = add nuw nsw i32 %201, 1
  %207 = load i32, i32* %31, align 4
  %208 = icmp slt i32 %206, %207
  br i1 %208, label %200, label %194
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!7 = distinct !{!7, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!10 = distinct !{!10, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!13 = distinct !{!13, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !15}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = distinct !{!26, !15}
!27 = distinct !{!27, !15}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!30 = distinct !{!30, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!33 = distinct !{!33, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!36 = distinct !{!36, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!37 = distinct !{!37, !15}
!38 = distinct !{!38, !15}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!41 = distinct !{!41, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!44 = distinct !{!44, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!47 = distinct !{!47, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!48 = distinct !{!48, !15}
!49 = distinct !{!49, !15}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = distinct !{!59, !15}
!60 = distinct !{!60, !15}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!63 = distinct !{!63, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!66 = distinct !{!66, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!69 = distinct !{!69, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !3}
!72 = distinct !{!72, !15}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !75, !15}
!75 = !{!"llvm.loop.unroll.runtime.disable"}
!76 = distinct !{!76, !15}
!77 = distinct !{!77, !15}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!81 = !{!82}
!82 = distinct !{!82, !83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!83 = distinct !{!83, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!84 = !{!85}
!85 = distinct !{!85, !86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!86 = distinct !{!86, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!87 = distinct !{!87, !15}
!88 = distinct !{!88, !15}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!91 = distinct !{!91, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!94 = distinct !{!94, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!97 = distinct !{!97, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!98 = distinct !{!98, !15}
!99 = distinct !{!99, !15}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!102 = distinct !{!102, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!105 = distinct !{!105, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!108 = distinct !{!108, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!109 = distinct !{!109, !15}
!110 = distinct !{!110, !15}
!111 = !{!112}
!112 = distinct !{!112, !113, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!113 = distinct !{!113, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!116 = distinct !{!116, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!117 = !{!118}
!118 = distinct !{!118, !119, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!119 = distinct !{!119, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!120 = distinct !{!120, !15}
!121 = distinct !{!121, !15}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!124 = distinct !{!124, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!127 = distinct !{!127, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!130 = distinct !{!130, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!131 = distinct !{!131, !15}
!132 = distinct !{!132, !15}
!133 = !{!134}
!134 = distinct !{!134, !135, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!135 = distinct !{!135, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!136 = !{!137}
!137 = distinct !{!137, !138, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!138 = distinct !{!138, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!139 = !{!140}
!140 = distinct !{!140, !141, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!141 = distinct !{!141, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!142 = distinct !{!142, !15}
!143 = distinct !{!143, !15}
