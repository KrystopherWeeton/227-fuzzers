; ModuleID = '../../net/third_party/quiche/src/common/quiche_data_writer.cc'
source_filename = "../../net/third_party/quiche/src/common/quiche_data_writer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quiche::QuicheDataWriter" = type <{ i8*, i64, i64, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::string_view" = type { i8*, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }

@.str = private unnamed_addr constant [14 x i8] c" { capacity: \00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c", length: \00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c" }\00", align 1

@_ZN6quiche16QuicheDataWriterC1EmPc = hidden unnamed_addr alias void (%"class.quiche::QuicheDataWriter"*, i64, i8*), void (%"class.quiche::QuicheDataWriter"*, i64, i8*)* @_ZN6quiche16QuicheDataWriterC2EmPc
@_ZN6quiche16QuicheDataWriterC1EmPcNS_10EndiannessE = hidden unnamed_addr alias void (%"class.quiche::QuicheDataWriter"*, i64, i8*, i32), void (%"class.quiche::QuicheDataWriter"*, i64, i8*, i32)* @_ZN6quiche16QuicheDataWriterC2EmPcNS_10EndiannessE
@_ZN6quiche16QuicheDataWriterD1Ev = hidden unnamed_addr alias void (%"class.quiche::QuicheDataWriter"*), void (%"class.quiche::QuicheDataWriter"*)* @_ZN6quiche16QuicheDataWriterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6quiche16QuicheDataWriterC2EmPc(%"class.quiche::QuicheDataWriter"* nocapture, i64, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  store i64 %1, i64* %5, align 8
  %6 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  store i32 0, i32* %7, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6quiche16QuicheDataWriterC2EmPcNS_10EndiannessE(%"class.quiche::QuicheDataWriter"* nocapture, i64, i8*, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  store i8* %2, i8** %5, align 8
  %6 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  store i64 %1, i64* %6, align 8
  %7 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  store i32 %3, i32* %8, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6quiche16QuicheDataWriterD2Ev(%"class.quiche::QuicheDataWriter"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN6quiche16QuicheDataWriter4dataEv(%"class.quiche::QuicheDataWriter"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter10WriteUInt8Eh(%"class.quiche::QuicheDataWriter"* nocapture, i8 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %6, %4
  br i1 %7, label %8, label %16

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %4
  %12 = icmp eq i8* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  store i8 %1, i8* %11, align 1
  %14 = load i64, i64* %3, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %3, align 8
  br label %16

16:                                               ; preds = %2, %8, %13
  %17 = phi i1 [ true, %13 ], [ false, %8 ], [ false, %2 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter10WriteBytesEPKvm(%"class.quiche::QuicheDataWriter"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  %9 = sub i64 %7, %5
  %10 = icmp ult i64 %9, %2
  %11 = or i1 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %5
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %1, i64 %2, i1 false)
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, %2
  store i64 %19, i64* %4, align 8
  br label %20

20:                                               ; preds = %3, %12, %17
  %21 = phi i1 [ true, %17 ], [ false, %12 ], [ false, %3 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt16Et(%"class.quiche::QuicheDataWriter"* nocapture, i16 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = tail call i16 @llvm.bswap.i16(i16 %1) #9
  %7 = select i1 %5, i16 %6, i16 %1
  %8 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  %13 = sub i64 %11, %9
  %14 = icmp ult i64 %13, 2
  %15 = or i1 %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = bitcast i8* %19 to i16*
  store i16 %7, i16* %22, align 1
  %23 = load i64, i64* %8, align 8
  %24 = add i64 %23, 2
  store i64 %24, i64* %8, align 8
  br label %25

25:                                               ; preds = %2, %16, %21
  %26 = phi i1 [ true, %21 ], [ false, %16 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt32Ej(%"class.quiche::QuicheDataWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = tail call i32 @llvm.bswap.i32(i32 %1) #9
  %7 = select i1 %5, i32 %6, i32 %1
  %8 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  %13 = sub i64 %11, %9
  %14 = icmp ult i64 %13, 4
  %15 = or i1 %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = bitcast i8* %19 to i32*
  store i32 %7, i32* %22, align 1
  %23 = load i64, i64* %8, align 8
  %24 = add i64 %23, 4
  store i64 %24, i64* %8, align 8
  br label %25

25:                                               ; preds = %2, %16, %21
  %26 = phi i1 [ true, %21 ], [ false, %16 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter11WriteUInt64Em(%"class.quiche::QuicheDataWriter"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  %6 = tail call i64 @llvm.bswap.i64(i64 %1) #9
  %7 = select i1 %5, i64 %6, i64 %1
  %8 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, %9
  %13 = sub i64 %11, %9
  %14 = icmp ult i64 %13, 8
  %15 = or i1 %12, %14
  br i1 %15, label %25, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %18, i64 %9
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = bitcast i8* %19 to i64*
  store i64 %7, i64* %22, align 1
  %23 = load i64, i64* %8, align 8
  %24 = add i64 %23, 8
  store i64 %24, i64* %8, align 8
  br label %25

25:                                               ; preds = %2, %16, %21
  %26 = phi i1 [ true, %21 ], [ false, %16 ], [ false, %2 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter18WriteBytesToUInt64Emm(%"class.quiche::QuicheDataWriter"* nocapture, i64, i64) local_unnamed_addr #3 align 2 {
  %4 = alloca i64, align 8
  store i64 %2, i64* %4, align 8
  %5 = icmp ugt i64 %1, 8
  br i1 %5, label %50, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = bitcast i64* %4 to i8*
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  %17 = sub i64 %15, %13
  %18 = icmp ult i64 %17, %1
  %19 = or i1 %16, %18
  br i1 %19, label %50, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %13
  %24 = icmp eq i8* %23, null
  br i1 %24, label %50, label %25

25:                                               ; preds = %20
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* nonnull align 8 %11, i64 %1, i1 false) #9
  %26 = load i64, i64* %12, align 8
  %27 = add i64 %26, %1
  store i64 %27, i64* %12, align 8
  br label %50

28:                                               ; preds = %6
  %29 = tail call i64 @llvm.bswap.i64(i64 %2) #9
  store i64 %29, i64* %4, align 8
  %30 = getelementptr inbounds i64, i64* %4, i64 1
  %31 = bitcast i64* %30 to i8*
  %32 = sub nsw i64 0, %1
  %33 = getelementptr inbounds i8, i8* %31, i64 %32
  %34 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = icmp ult i64 %37, %35
  %39 = sub i64 %37, %35
  %40 = icmp ult i64 %39, %1
  %41 = or i1 %38, %40
  br i1 %41, label %50, label %42

42:                                               ; preds = %28
  %43 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds i8, i8* %44, i64 %35
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %42
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 %33, i64 %1, i1 false) #9
  %48 = load i64, i64* %34, align 8
  %49 = add i64 %48, %1
  store i64 %49, i64* %34, align 8
  br label %50

50:                                               ; preds = %47, %42, %28, %25, %20, %10, %3
  %51 = phi i1 [ false, %3 ], [ true, %25 ], [ false, %20 ], [ false, %10 ], [ true, %47 ], [ false, %42 ], [ false, %28 ]
  ret i1 %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter18WriteStringPiece16EN4absl11string_viewE(%"class.quiche::QuicheDataWriter"* nocapture, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = icmp ugt i64 %2, 65535
  br i1 %4, label %41, label %5

5:                                                ; preds = %3
  %6 = trunc i64 %2 to i16
  %7 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = tail call i16 @llvm.bswap.i16(i16 %6) #9
  %11 = select i1 %9, i16 %10, i16 %6
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp ult i64 %15, %13
  %17 = sub i64 %15, %13
  %18 = icmp ult i64 %17, 2
  %19 = or i1 %16, %18
  br i1 %19, label %41, label %20

20:                                               ; preds = %5
  %21 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds i8, i8* %22, i64 %13
  %24 = icmp eq i8* %23, null
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast i8* %23 to i16*
  store i16 %11, i16* %26, align 1
  %27 = load i64, i64* %12, align 8
  %28 = add i64 %27, 2
  store i64 %28, i64* %12, align 8
  %29 = load i64, i64* %14, align 8
  %30 = icmp ult i64 %29, %28
  %31 = sub i64 %29, %28
  %32 = icmp ult i64 %31, %2
  %33 = or i1 %30, %32
  br i1 %33, label %41, label %34

34:                                               ; preds = %25
  %35 = load i8*, i8** %21, align 8
  %36 = getelementptr inbounds i8, i8* %35, i64 %28
  %37 = icmp eq i8* %36, null
  br i1 %37, label %41, label %38

38:                                               ; preds = %34
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %36, i8* align 1 %1, i64 %2, i1 false) #9
  %39 = load i64, i64* %12, align 8
  %40 = add i64 %39, %2
  store i64 %40, i64* %12, align 8
  br label %41

41:                                               ; preds = %5, %20, %38, %34, %25, %3
  %42 = phi i1 [ false, %3 ], [ true, %38 ], [ false, %34 ], [ false, %25 ], [ false, %20 ], [ false, %5 ]
  ret i1 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter16WriteStringPieceEN4absl11string_viewE(%"class.quiche::QuicheDataWriter"* nocapture, i8*, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  %9 = sub i64 %7, %5
  %10 = icmp ult i64 %9, %2
  %11 = or i1 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %5
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 %1, i64 %2, i1 false) #9
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, %2
  store i64 %19, i64* %4, align 8
  br label %20

20:                                               ; preds = %3, %12, %17
  %21 = phi i1 [ true, %17 ], [ false, %12 ], [ false, %3 ]
  ret i1 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZN6quiche16QuicheDataWriter10BeginWriteEm(%"class.quiche::QuicheDataWriter"* nocapture readonly, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = sub i64 %6, %4
  %9 = icmp ult i64 %8, %1
  %10 = or i1 %7, %9
  br i1 %10, label %15, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  br label %15

15:                                               ; preds = %2, %11
  %16 = phi i8* [ %14, %11 ], [ null, %2 ]
  ret i8* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter17WriteRepeatedByteEhm(%"class.quiche::QuicheDataWriter"* nocapture, i8 zeroext, i64) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp ult i64 %7, %5
  %9 = sub i64 %7, %5
  %10 = icmp ult i64 %9, %2
  %11 = or i1 %8, %10
  br i1 %11, label %20, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds i8, i8* %14, i64 %5
  %16 = icmp eq i8* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %15, i8 %1, i64 %2, i1 false)
  %18 = load i64, i64* %4, align 8
  %19 = add i64 %18, %2
  store i64 %19, i64* %4, align 8
  br label %20

20:                                               ; preds = %3, %12, %17
  %21 = phi i1 [ true, %17 ], [ false, %12 ], [ false, %3 ]
  ret i1 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6quiche16QuicheDataWriter12WritePaddingEv(%"class.quiche::QuicheDataWriter"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %3
  br i1 %6, label %13, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds i8, i8* %9, i64 %3
  %11 = sub i64 %5, %3
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %10, i8 0, i64 %11, i1 false)
  %12 = load i64, i64* %4, align 8
  store i64 %12, i64* %2, align 8
  br label %13

13:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter17WritePaddingBytesEm(%"class.quiche::QuicheDataWriter"* nocapture, i64) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = sub i64 %6, %4
  %9 = icmp ult i64 %8, %1
  %10 = or i1 %7, %9
  br i1 %10, label %19, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %14, i8 0, i64 %1, i1 false) #9
  %17 = load i64, i64* %3, align 8
  %18 = add i64 %17, %1
  store i64 %18, i64* %3, align 8
  br label %19

19:                                               ; preds = %2, %11, %16
  %20 = phi i1 [ true, %16 ], [ false, %11 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter8WriteTagEj(%"class.quiche::QuicheDataWriter"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = sub i64 %6, %4
  %9 = icmp ult i64 %8, 4
  %10 = or i1 %7, %9
  br i1 %10, label %20, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = icmp eq i8* %14, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = bitcast i8* %14 to i32*
  store i32 %1, i32* %17, align 1
  %18 = load i64, i64* %3, align 8
  %19 = add i64 %18, 4
  store i64 %19, i64* %3, align 8
  br label %20

20:                                               ; preds = %2, %11, %16
  %21 = phi i1 [ true, %16 ], [ false, %11 ], [ false, %2 ]
  ret i1 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN6quiche16QuicheDataWriter4SeekEm(%"class.quiche::QuicheDataWriter"* nocapture, i64) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 2
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ult i64 %6, %4
  %8 = sub i64 %6, %4
  %9 = icmp ult i64 %8, %1
  %10 = or i1 %7, %9
  br i1 %10, label %18, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %0, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds i8, i8* %13, i64 %4
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %11
  %17 = add i64 %4, %1
  store i64 %17, i64* %3, align 8
  br label %18

18:                                               ; preds = %2, %11, %16
  %19 = phi i1 [ true, %16 ], [ false, %11 ], [ false, %2 ]
  ret i1 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6quiche16QuicheDataWriter11DebugStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.quiche::QuicheDataWriter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = alloca [5 x %"class.absl::string_view"], align 16
  %4 = alloca %"class.absl::AlphaNum", align 16
  %5 = alloca %"class.absl::AlphaNum", align 8
  %6 = bitcast %"class.absl::AlphaNum"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %1, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 1, i64 0
  %10 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %8, i8* %9) #9
  %11 = ptrtoint i8* %10 to i64
  %12 = ptrtoint i8* %9 to i64
  %13 = sub i64 %11, %12
  %14 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 0
  store i8* %9, i8** %14, align 16
  %15 = icmp sgt i64 %13, -1
  br i1 %15, label %17, label %16, !prof !2

16:                                               ; preds = %2
  call void @llvm.trap() #9
  unreachable

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %4, i64 0, i32 0, i32 1
  store i64 %13, i64* %18, align 8
  %19 = bitcast %"class.absl::AlphaNum"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %19) #9
  %20 = getelementptr inbounds %"class.quiche::QuicheDataWriter", %"class.quiche::QuicheDataWriter"* %1, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 1, i64 0
  %23 = call i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64 %21, i8* %22) #9
  %24 = ptrtoint i8* %23 to i64
  %25 = ptrtoint i8* %22 to i64
  %26 = sub i64 %24, %25
  %27 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 0
  store i8* %22, i8** %27, align 8
  %28 = icmp sgt i64 %26, -1
  br i1 %28, label %30, label %29, !prof !2

29:                                               ; preds = %17
  call void @llvm.trap() #9
  unreachable

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %5, i64 0, i32 0, i32 1
  store i64 %26, i64* %31, align 8
  %32 = bitcast [5 x %"class.absl::string_view"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #9, !noalias !3
  %33 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 0
  %34 = bitcast [5 x %"class.absl::string_view"]* %3 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([14 x i8]* @.str to i64), i64 13>, <2 x i64>* %34, align 16, !noalias !3
  %35 = bitcast %"class.absl::AlphaNum"* %4 to <2 x i64>*
  %36 = load <2 x i64>, <2 x i64>* %35, align 16, !noalias !3
  %37 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 1, i32 0
  %38 = bitcast i8** %37 to <2 x i64>*
  store <2 x i64> %36, <2 x i64>* %38, align 16, !noalias !3
  %39 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 2, i32 0
  %40 = bitcast i8** %39 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64 10>, <2 x i64>* %40, align 16, !noalias !3
  %41 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 0
  %42 = bitcast i8** %41 to i64*
  store i64 %25, i64* %42, align 16, !noalias !3
  %43 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 3, i32 1
  store i64 %26, i64* %43, align 8, !noalias !3
  %44 = getelementptr inbounds [5 x %"class.absl::string_view"], [5 x %"class.absl::string_view"]* %3, i64 0, i64 4, i32 0
  %45 = bitcast i8** %44 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint ([3 x i8]* @.str.2 to i64), i64 2>, <2 x i64>* %45, align 16, !noalias !3
  call void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret %0, %"class.absl::string_view"* nonnull %33, i64 5) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #9, !noalias !3
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %19) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #6

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #6

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare i8* @_ZN4absl16numbers_internal15FastIntToBufferEmPc(i64, i8*) local_unnamed_addr #8

declare void @_ZN4absl16strings_internal9CatPiecesESt16initializer_listINS_11string_viewEE(%"class.std::__1::basic_string"* sret, %"class.absl::string_view"*, i64) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_: argument 0"}
!5 = distinct !{!5, !"_ZN4absl6StrCatIJEEENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERKNS_8AlphaNumESA_SA_SA_SA_DpRKT_"}
