; ModuleID = '../../url/third_party/mozilla/url_parse.cc'
source_filename = "../../url/third_party/mozilla/url_parse.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }

$_ZN3url6Parsed16set_inner_parsedERKS0_ = comdat any

@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1

@_ZN3url6ParsedC1Ev = hidden unnamed_addr alias void (%"struct.url::Parsed"*), void (%"struct.url::Parsed"*)* @_ZN3url6ParsedC2Ev
@_ZN3url6ParsedC1ERKS0_ = hidden unnamed_addr alias void (%"struct.url::Parsed"*, %"struct.url::Parsed"*), void (%"struct.url::Parsed"*, %"struct.url::Parsed"*)* @_ZN3url6ParsedC2ERKS0_
@_ZN3url6ParsedD1Ev = hidden unnamed_addr alias void (%"struct.url::Parsed"*), void (%"struct.url::Parsed"*)* @_ZN3url6ParsedD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3url6ParsedC2Ev(%"struct.url::Parsed"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.url::Parsed"* %0 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %2, align 4
  %3 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 0
  %4 = bitcast i32* %3 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %4, align 4
  %5 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 0
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 8
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 9
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6ParsedC2ERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* nocapture readonly dereferenceable(80)) unnamed_addr #1 align 2 {
  %3 = bitcast %"struct.url::Parsed"* %1 to i64*
  %4 = bitcast %"struct.url::Parsed"* %0 to i64*
  %5 = load i64, i64* %3, align 8
  store i64 %5, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 1
  %8 = bitcast %"struct.url::Component"* %7 to i64*
  %9 = bitcast %"struct.url::Component"* %6 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 2
  %13 = bitcast %"struct.url::Component"* %12 to i64*
  %14 = bitcast %"struct.url::Component"* %11 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 3
  %18 = bitcast %"struct.url::Component"* %17 to i64*
  %19 = bitcast %"struct.url::Component"* %16 to i64*
  %20 = load i64, i64* %18, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4
  %22 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 4
  %23 = bitcast %"struct.url::Component"* %22 to i64*
  %24 = bitcast %"struct.url::Component"* %21 to i64*
  %25 = load i64, i64* %23, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5
  %27 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 5
  %28 = bitcast %"struct.url::Component"* %27 to i64*
  %29 = bitcast %"struct.url::Component"* %26 to i64*
  %30 = load i64, i64* %28, align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6
  %32 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 6
  %33 = bitcast %"struct.url::Component"* %32 to i64*
  %34 = bitcast %"struct.url::Component"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7
  %37 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 7
  %38 = bitcast %"struct.url::Component"* %37 to i64*
  %39 = bitcast %"struct.url::Component"* %36 to i64*
  %40 = load i64, i64* %38, align 8
  store i64 %40, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 8
  %42 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 8
  %43 = load i8, i8* %42, align 8, !range !2
  store i8 %43, i8* %41, align 8
  %44 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 9
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %44, align 8
  %45 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 9
  %46 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %45, align 8
  %47 = icmp eq %"struct.url::Parsed"* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %2
  tail call void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"* %0, %"struct.url::Parsed"* nonnull dereferenceable(80) %46)
  br label %49

49:                                               ; preds = %2, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"*, %"struct.url::Parsed"* dereferenceable(80)) local_unnamed_addr #1 comdat align 2 {
  br label %3

3:                                                ; preds = %64, %2
  %4 = phi %"struct.url::Parsed"* [ %0, %2 ], [ %7, %64 ]
  %5 = phi %"struct.url::Parsed"* [ %1, %2 ], [ %107, %64 ]
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %4, i64 0, i32 9
  %7 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %6, align 8
  %8 = icmp eq %"struct.url::Parsed"* %7, null
  br i1 %8, label %9, label %62

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %4, i64 0, i32 9
  %11 = tail call i8* @_Znwm(i64 80) #10
  %12 = bitcast %"struct.url::Parsed"* %5 to i64*
  %13 = bitcast i8* %11 to i64*
  %14 = load i64, i64* %12, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 8
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 1
  %17 = bitcast %"struct.url::Component"* %16 to i64*
  %18 = bitcast i8* %15 to i64*
  %19 = load i64, i64* %17, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 16
  %21 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 2
  %22 = bitcast %"struct.url::Component"* %21 to i64*
  %23 = bitcast i8* %20 to i64*
  %24 = load i64, i64* %22, align 8
  store i64 %24, i64* %23, align 8
  %25 = getelementptr inbounds i8, i8* %11, i64 24
  %26 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3
  %27 = bitcast %"struct.url::Component"* %26 to i64*
  %28 = bitcast i8* %25 to i64*
  %29 = load i64, i64* %27, align 8
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %11, i64 32
  %31 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 4
  %32 = bitcast %"struct.url::Component"* %31 to i64*
  %33 = bitcast i8* %30 to i64*
  %34 = load i64, i64* %32, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds i8, i8* %11, i64 40
  %36 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5
  %37 = bitcast %"struct.url::Component"* %36 to i64*
  %38 = bitcast i8* %35 to i64*
  %39 = load i64, i64* %37, align 8
  store i64 %39, i64* %38, align 8
  %40 = getelementptr inbounds i8, i8* %11, i64 48
  %41 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6
  %42 = bitcast %"struct.url::Component"* %41 to i64*
  %43 = bitcast i8* %40 to i64*
  %44 = load i64, i64* %42, align 8
  store i64 %44, i64* %43, align 8
  %45 = getelementptr inbounds i8, i8* %11, i64 56
  %46 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7
  %47 = bitcast %"struct.url::Component"* %46 to i64*
  %48 = bitcast i8* %45 to i64*
  %49 = load i64, i64* %47, align 8
  store i64 %49, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %11, i64 64
  %51 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 8
  %52 = load i8, i8* %51, align 8, !range !2
  store i8 %52, i8* %50, align 8
  %53 = getelementptr inbounds i8, i8* %11, i64 72
  %54 = bitcast i8* %53 to %"struct.url::Parsed"**
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %54, align 8
  %55 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 9
  %56 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %55, align 8
  %57 = icmp eq %"struct.url::Parsed"* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %9
  %59 = bitcast i8* %11 to %"struct.url::Parsed"*
  tail call void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"* nonnull %59, %"struct.url::Parsed"* nonnull dereferenceable(80) %56) #11
  br label %60

60:                                               ; preds = %9, %58
  %61 = bitcast %"struct.url::Parsed"** %10 to i8**
  store i8* %11, i8** %61, align 8
  br label %115

62:                                               ; preds = %3
  %63 = icmp eq %"struct.url::Parsed"* %7, %5
  br i1 %63, label %115, label %64

64:                                               ; preds = %62
  %65 = bitcast %"struct.url::Parsed"* %5 to i64*
  %66 = bitcast %"struct.url::Parsed"* %7 to i64*
  %67 = load i64, i64* %65, align 4
  store i64 %67, i64* %66, align 8
  %68 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 1
  %69 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 1
  %70 = bitcast %"struct.url::Component"* %68 to i64*
  %71 = bitcast %"struct.url::Component"* %69 to i64*
  %72 = load i64, i64* %70, align 4
  store i64 %72, i64* %71, align 8
  %73 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 2
  %74 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 2
  %75 = bitcast %"struct.url::Component"* %73 to i64*
  %76 = bitcast %"struct.url::Component"* %74 to i64*
  %77 = load i64, i64* %75, align 4
  store i64 %77, i64* %76, align 8
  %78 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3
  %79 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 3
  %80 = bitcast %"struct.url::Component"* %78 to i64*
  %81 = bitcast %"struct.url::Component"* %79 to i64*
  %82 = load i64, i64* %80, align 4
  store i64 %82, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 4
  %84 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 4
  %85 = bitcast %"struct.url::Component"* %83 to i64*
  %86 = bitcast %"struct.url::Component"* %84 to i64*
  %87 = load i64, i64* %85, align 4
  store i64 %87, i64* %86, align 8
  %88 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5
  %89 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 5
  %90 = bitcast %"struct.url::Component"* %88 to i64*
  %91 = bitcast %"struct.url::Component"* %89 to i64*
  %92 = load i64, i64* %90, align 4
  store i64 %92, i64* %91, align 8
  %93 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6
  %94 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 6
  %95 = bitcast %"struct.url::Component"* %93 to i64*
  %96 = bitcast %"struct.url::Component"* %94 to i64*
  %97 = load i64, i64* %95, align 4
  store i64 %97, i64* %96, align 8
  %98 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7
  %99 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 7
  %100 = bitcast %"struct.url::Component"* %98 to i64*
  %101 = bitcast %"struct.url::Component"* %99 to i64*
  %102 = load i64, i64* %100, align 4
  store i64 %102, i64* %101, align 8
  %103 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 8
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 8
  store i8 %104, i8* %105, align 8
  %106 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 9
  %107 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %106, align 8
  %108 = icmp eq %"struct.url::Parsed"* %107, null
  br i1 %108, label %109, label %3

109:                                              ; preds = %64
  %110 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %7, i64 0, i32 9
  %111 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %110, align 8
  %112 = icmp eq %"struct.url::Parsed"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %109
  tail call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %111) #11
  %114 = bitcast %"struct.url::Parsed"* %111 to i8*
  tail call void @_ZdlPv(i8* %114) #10
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %110, align 8
  br label %115

115:                                              ; preds = %62, %113, %109, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"struct.url::Parsed"* @_ZN3url6ParsedaSERKS0_(%"struct.url::Parsed"* returned, %"struct.url::Parsed"* readonly dereferenceable(80)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"struct.url::Parsed"* %0, %1
  br i1 %3, label %56, label %4

4:                                                ; preds = %2
  %5 = bitcast %"struct.url::Parsed"* %1 to i64*
  %6 = bitcast %"struct.url::Parsed"* %0 to i64*
  %7 = load i64, i64* %5, align 4
  store i64 %7, i64* %6, align 8
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1
  %10 = bitcast %"struct.url::Component"* %8 to i64*
  %11 = bitcast %"struct.url::Component"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  %13 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 2
  %14 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2
  %15 = bitcast %"struct.url::Component"* %13 to i64*
  %16 = bitcast %"struct.url::Component"* %14 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 3
  %19 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3
  %20 = bitcast %"struct.url::Component"* %18 to i64*
  %21 = bitcast %"struct.url::Component"* %19 to i64*
  %22 = load i64, i64* %20, align 4
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 4
  %24 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4
  %25 = bitcast %"struct.url::Component"* %23 to i64*
  %26 = bitcast %"struct.url::Component"* %24 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 5
  %29 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5
  %30 = bitcast %"struct.url::Component"* %28 to i64*
  %31 = bitcast %"struct.url::Component"* %29 to i64*
  %32 = load i64, i64* %30, align 4
  store i64 %32, i64* %31, align 8
  %33 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 6
  %34 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6
  %35 = bitcast %"struct.url::Component"* %33 to i64*
  %36 = bitcast %"struct.url::Component"* %34 to i64*
  %37 = load i64, i64* %35, align 4
  store i64 %37, i64* %36, align 8
  %38 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 7
  %39 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7
  %40 = bitcast %"struct.url::Component"* %38 to i64*
  %41 = bitcast %"struct.url::Component"* %39 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 8
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 8
  store i8 %44, i8* %45, align 8
  %46 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %1, i64 0, i32 9
  %47 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %46, align 8
  %48 = icmp eq %"struct.url::Parsed"* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %4
  tail call void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"* %0, %"struct.url::Parsed"* nonnull dereferenceable(80) %47)
  br label %56

50:                                               ; preds = %4
  %51 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 9
  %52 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %51, align 8
  %53 = icmp eq %"struct.url::Parsed"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  tail call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %52) #11
  %55 = bitcast %"struct.url::Parsed"* %52 to i8*
  tail call void @_ZdlPv(i8* %55) #10
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %51, align 8
  br label %56

56:                                               ; preds = %54, %50, %2, %49
  ret %"struct.url::Parsed"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 9
  %3 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %2, align 8
  %4 = icmp eq %"struct.url::Parsed"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %3) #11
  %6 = bitcast %"struct.url::Parsed"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void

7:                                                ; preds = %1
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3url6Parsed6LengthEv(%"struct.url::Parsed"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 0
  br label %70

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -1
  br i1 %10, label %16, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = add nuw i32 %9, 1
  %15 = add i32 %14, %13
  br label %16

16:                                               ; preds = %11, %7
  %17 = phi i32 [ %15, %11 ], [ 0, %7 ]
  %18 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %26, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = add nuw i32 %19, 1
  %25 = add i32 %24, %23
  br label %26

26:                                               ; preds = %21, %16
  %27 = phi i32 [ %25, %21 ], [ %17, %16 ]
  %28 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 1
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, -1
  br i1 %30, label %36, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = add nuw i32 %29, 1
  %35 = add i32 %34, %33
  br label %36

36:                                               ; preds = %31, %26
  %37 = phi i32 [ %35, %31 ], [ %27, %26 ]
  %38 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, -1
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = add nsw i32 %43, %39
  br label %45

45:                                               ; preds = %41, %36
  %46 = phi i32 [ %44, %41 ], [ %37, %36 ]
  %47 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, %48
  br label %54

54:                                               ; preds = %50, %45
  %55 = phi i32 [ %53, %50 ], [ %46, %45 ]
  %56 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %63, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 0
  %61 = load i32, i32* %60, align 4
  %62 = add nsw i32 %61, %57
  br label %63

63:                                               ; preds = %59, %54
  %64 = phi i32 [ %62, %59 ], [ %55, %54 ]
  %65 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %75, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 0
  br label %70

70:                                               ; preds = %5, %68
  %71 = phi i32* [ %69, %68 ], [ %6, %5 ]
  %72 = phi i32 [ %66, %68 ], [ %3, %5 ]
  %73 = load i32, i32* %71, align 4
  %74 = add nsw i32 %73, %72
  br label %75

75:                                               ; preds = %70, %63
  %76 = phi i32 [ %64, %63 ], [ %74, %70 ]
  ret i32 %76
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3url6Parsed21CountCharactersBeforeENS0_13ComponentTypeEb(%"struct.url::Parsed"* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 8
  br label %127

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, -1
  br i1 %11, label %17, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add nuw i32 %10, 1
  %16 = add i32 %15, %14
  br label %17

17:                                               ; preds = %8, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %8 ]
  %19 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %31, label %22

22:                                               ; preds = %17
  %23 = icmp slt i32 %1, 2
  %24 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 0
  br i1 %23, label %25, label %27

25:                                               ; preds = %22
  %26 = load i32, i32* %24, align 8
  br label %127

27:                                               ; preds = %22
  %28 = load i32, i32* %24, align 4
  %29 = add nuw i32 %20, 1
  %30 = add i32 %29, %28
  br label %31

31:                                               ; preds = %17, %27
  %32 = phi i32 [ %30, %27 ], [ %18, %17 ]
  %33 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %45, label %36

36:                                               ; preds = %31
  %37 = icmp slt i32 %1, 3
  %38 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 0
  br i1 %37, label %39, label %41

39:                                               ; preds = %36
  %40 = load i32, i32* %38, align 8
  br label %127

41:                                               ; preds = %36
  %42 = load i32, i32* %38, align 4
  %43 = add nuw i32 %34, 1
  %44 = add i32 %43, %42
  br label %45

45:                                               ; preds = %31, %41
  %46 = phi i32 [ %44, %41 ], [ %32, %31 ]
  %47 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, -1
  br i1 %49, label %58, label %50

50:                                               ; preds = %45
  %51 = icmp slt i32 %1, 4
  %52 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 0
  br i1 %51, label %53, label %55

53:                                               ; preds = %50
  %54 = load i32, i32* %52, align 8
  br label %127

55:                                               ; preds = %50
  %56 = load i32, i32* %52, align 4
  %57 = add nsw i32 %56, %48
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi i32 [ %57, %55 ], [ %46, %45 ]
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4
  %61 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %80, label %64

64:                                               ; preds = %58
  %65 = icmp slt i32 %1, 4
  br i1 %65, label %69, label %66

66:                                               ; preds = %64
  %67 = icmp eq i32 %1, 4
  %68 = and i1 %67, %2
  br i1 %68, label %69, label %73

69:                                               ; preds = %66, %64
  %70 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %60, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = add nsw i32 %71, -1
  br label %127

73:                                               ; preds = %66
  %74 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %60, i64 0, i32 0
  br i1 %67, label %75, label %77

75:                                               ; preds = %73
  %76 = load i32, i32* %74, align 8
  br label %127

77:                                               ; preds = %73
  %78 = load i32, i32* %74, align 4
  %79 = add nsw i32 %78, %62
  br label %80

80:                                               ; preds = %58, %77
  %81 = phi i32 [ %79, %77 ], [ %59, %58 ]
  %82 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %93, label %85

85:                                               ; preds = %80
  %86 = icmp slt i32 %1, 6
  %87 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 0
  br i1 %86, label %88, label %90

88:                                               ; preds = %85
  %89 = load i32, i32* %87, align 8
  br label %127

90:                                               ; preds = %85
  %91 = load i32, i32* %87, align 4
  %92 = add nsw i32 %91, %83
  br label %93

93:                                               ; preds = %80, %90
  %94 = phi i32 [ %92, %90 ], [ %81, %80 ]
  %95 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6
  %96 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, -1
  br i1 %98, label %115, label %99

99:                                               ; preds = %93
  %100 = icmp slt i32 %1, 6
  br i1 %100, label %104, label %101

101:                                              ; preds = %99
  %102 = icmp eq i32 %1, 6
  %103 = and i1 %102, %2
  br i1 %103, label %104, label %108

104:                                              ; preds = %101, %99
  %105 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %95, i64 0, i32 0
  %106 = load i32, i32* %105, align 8
  %107 = add nsw i32 %106, -1
  br label %127

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %95, i64 0, i32 0
  br i1 %102, label %110, label %112

110:                                              ; preds = %108
  %111 = load i32, i32* %109, align 8
  br label %127

112:                                              ; preds = %108
  %113 = load i32, i32* %109, align 4
  %114 = add nsw i32 %113, %97
  br label %115

115:                                              ; preds = %93, %112
  %116 = phi i32 [ %114, %112 ], [ %94, %93 ]
  %117 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %118, -1
  br i1 %119, label %127, label %120

120:                                              ; preds = %115
  %121 = icmp ne i32 %1, 7
  %122 = or i1 %121, %2
  %123 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = zext i1 %122 to i32
  %126 = sub i32 %124, %125
  ret i32 %126

127:                                              ; preds = %115, %25, %39, %53, %69, %75, %88, %104, %110, %5
  %128 = phi i32 [ %7, %5 ], [ %26, %25 ], [ %40, %39 ], [ %54, %53 ], [ %72, %69 ], [ %76, %75 ], [ %89, %88 ], [ %107, %104 ], [ %111, %110 ], [ %116, %115 ]
  ret i32 %128
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3url6Parsed10GetContentEv(%"struct.url::Parsed"* readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, -1
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = add nuw i32 %3, 1
  %9 = add i32 %8, %7
  br label %10

10:                                               ; preds = %5, %1
  %11 = phi i32 [ %9, %5 ], [ 0, %1 ]
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 0
  %17 = load i32, i32* %16, align 8
  br label %63

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 0
  %24 = load i32, i32* %23, align 8
  br label %63

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, -1
  br i1 %28, label %32, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 0
  %31 = load i32, i32* %30, align 8
  br label %63

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %40, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = add nsw i32 %38, -1
  br label %63

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, -1
  br i1 %43, label %47, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 0
  %46 = load i32, i32* %45, align 8
  br label %63

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %55, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = add nsw i32 %53, -1
  br label %63

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, -1
  br i1 %58, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = add i32 %61, -1
  br label %63

63:                                               ; preds = %15, %22, %29, %36, %44, %51, %55, %59
  %64 = phi i32 [ %62, %59 ], [ %17, %15 ], [ %24, %22 ], [ %31, %29 ], [ %39, %36 ], [ %46, %44 ], [ %54, %51 ], [ %11, %55 ]
  %65 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, -1
  br i1 %67, label %70, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 7, i32 0
  br label %127

70:                                               ; preds = %63
  br i1 %4, label %76, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = add nuw i32 %3, 1
  %75 = add i32 %74, %73
  br label %76

76:                                               ; preds = %71, %70
  %77 = phi i32 [ %75, %71 ], [ 0, %70 ]
  br i1 %14, label %83, label %78

78:                                               ; preds = %76
  %79 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 1, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = add nuw i32 %13, 1
  %82 = add i32 %81, %80
  br label %83

83:                                               ; preds = %78, %76
  %84 = phi i32 [ %82, %78 ], [ %77, %76 ]
  %85 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, -1
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 2, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add nuw i32 %86, 1
  %92 = add i32 %91, %90
  br label %93

93:                                               ; preds = %88, %83
  %94 = phi i32 [ %92, %88 ], [ %84, %83 ]
  %95 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, -1
  br i1 %97, label %102, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 3, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = add nsw i32 %100, %96
  br label %102

102:                                              ; preds = %98, %93
  %103 = phi i32 [ %101, %98 ], [ %94, %93 ]
  %104 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %105, -1
  br i1 %106, label %111, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 4, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = add nsw i32 %109, %105
  br label %111

111:                                              ; preds = %107, %102
  %112 = phi i32 [ %110, %107 ], [ %103, %102 ]
  %113 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 1
  %114 = load i32, i32* %113, align 4
  %115 = icmp eq i32 %114, -1
  br i1 %115, label %120, label %116

116:                                              ; preds = %111
  %117 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 5, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = add nsw i32 %118, %114
  br label %120

120:                                              ; preds = %116, %111
  %121 = phi i32 [ %119, %116 ], [ %112, %111 ]
  %122 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 1
  %123 = load i32, i32* %122, align 4
  %124 = icmp eq i32 %123, -1
  br i1 %124, label %132, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %0, i64 0, i32 6, i32 0
  br label %127

127:                                              ; preds = %125, %68
  %128 = phi i32* [ %69, %68 ], [ %126, %125 ]
  %129 = phi i32 [ %66, %68 ], [ %123, %125 ]
  %130 = load i32, i32* %128, align 4
  %131 = add nsw i32 %130, %129
  br label %132

132:                                              ; preds = %127, %120
  %133 = phi i32 [ %121, %120 ], [ %131, %127 ]
  %134 = sub nsw i32 %133, %64
  %135 = icmp eq i32 %134, 0
  %136 = select i1 %135, i32 -1, i32 %134
  %137 = select i1 %135, i32 0, i32 %64
  %138 = zext i32 %136 to i64
  %139 = shl nuw i64 %138, 32
  %140 = zext i32 %137 to i64
  %141 = or i64 %139, %140
  ret i64 %141
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url13ExtractSchemeEPKciPNS_9ComponentE(i8* nocapture readonly, i32, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %19

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %7

7:                                                ; preds = %13, %5
  %8 = phi i64 [ 0, %5 ], [ %14, %13 ]
  %9 = phi i32 [ 0, %5 ], [ %15, %13 ]
  %10 = getelementptr inbounds i8, i8* %0, i64 %8
  %11 = load i8, i8* %10, align 1
  %12 = icmp ult i8 %11, 33
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = add nuw nsw i64 %8, 1
  %15 = add nuw nsw i32 %9, 1
  %16 = icmp eq i64 %14, %6
  br i1 %16, label %19, label %7

17:                                               ; preds = %7
  %18 = trunc i64 %8 to i32
  br label %19

19:                                               ; preds = %13, %17, %3
  %20 = phi i32 [ 0, %3 ], [ %18, %17 ], [ %15, %13 ]
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %22, label %40

22:                                               ; preds = %19
  %23 = zext i32 %20 to i64
  %24 = zext i32 %1 to i64
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi i64 [ %23, %22 ], [ %31, %30 ]
  %27 = getelementptr inbounds i8, i8* %0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 58
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = add nuw nsw i64 %26, 1
  %32 = icmp eq i64 %31, %24
  br i1 %32, label %40, label %25

33:                                               ; preds = %25
  %34 = trunc i64 %26 to i32
  %35 = sub nsw i32 %34, %20
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = or i64 %37, %23
  %39 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %38, i64* %39, align 4
  br label %40

40:                                               ; preds = %30, %19, %33
  %41 = phi i1 [ true, %33 ], [ false, %19 ], [ false, %30 ]
  ret i1 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url13ExtractSchemeEPKDsiPNS_9ComponentE(i16* nocapture readonly, i32, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %19

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  br label %7

7:                                                ; preds = %13, %5
  %8 = phi i64 [ 0, %5 ], [ %14, %13 ]
  %9 = phi i32 [ 0, %5 ], [ %15, %13 ]
  %10 = getelementptr inbounds i16, i16* %0, i64 %8
  %11 = load i16, i16* %10, align 2
  %12 = icmp ult i16 %11, 33
  br i1 %12, label %13, label %17

13:                                               ; preds = %7
  %14 = add nuw nsw i64 %8, 1
  %15 = add nuw nsw i32 %9, 1
  %16 = icmp eq i64 %14, %6
  br i1 %16, label %19, label %7

17:                                               ; preds = %7
  %18 = trunc i64 %8 to i32
  br label %19

19:                                               ; preds = %13, %17, %3
  %20 = phi i32 [ 0, %3 ], [ %18, %17 ], [ %15, %13 ]
  %21 = icmp slt i32 %20, %1
  br i1 %21, label %22, label %40

22:                                               ; preds = %19
  %23 = zext i32 %20 to i64
  %24 = zext i32 %1 to i64
  br label %25

25:                                               ; preds = %30, %22
  %26 = phi i64 [ %23, %22 ], [ %31, %30 ]
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = load i16, i16* %27, align 2
  %29 = icmp eq i16 %28, 58
  br i1 %29, label %33, label %30

30:                                               ; preds = %25
  %31 = add nuw nsw i64 %26, 1
  %32 = icmp eq i64 %31, %24
  br i1 %32, label %40, label %25

33:                                               ; preds = %25
  %34 = trunc i64 %26 to i32
  %35 = sub nsw i32 %34, %20
  %36 = zext i32 %35 to i64
  %37 = shl nuw i64 %36, 32
  %38 = or i64 %37, %23
  %39 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %38, i64* %39, align 4
  br label %40

40:                                               ; preds = %30, %19, %33
  %41 = phi i1 [ true, %33 ], [ false, %19 ], [ false, %30 ]
  ret i1 %41
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3url21IsAuthorityTerminatorEDs(i16 zeroext) local_unnamed_addr #6 {
  %2 = icmp eq i16 %0, 92
  %3 = or i16 %0, 16
  %4 = icmp eq i16 %3, 63
  %5 = or i1 %2, %4
  %6 = icmp eq i16 %0, 35
  %7 = or i1 %6, %5
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url15ExtractFileNameEPKcRKNS_9ComponentEPS2_(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %9, align 4
  br label %45

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, %5
  %14 = sext i32 %13 to i64
  %15 = sext i32 %12 to i64
  br label %16

16:                                               ; preds = %35, %10
  %17 = phi i64 [ %14, %10 ], [ %20, %35 ]
  %18 = phi i32 [ %13, %10 ], [ %21, %35 ]
  %19 = phi i32 [ %13, %10 ], [ %36, %35 ]
  %20 = add nsw i64 %17, -1
  %21 = add nsw i32 %18, -1
  %22 = getelementptr inbounds i8, i8* %0, i64 %20
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 59
  %25 = trunc i64 %20 to i32
  br i1 %24, label %35, label %26

26:                                               ; preds = %16
  %27 = sext i8 %23 to i16
  switch i16 %27, label %35 [
    i16 92, label %28
    i16 47, label %28
  ]

28:                                               ; preds = %26, %26
  %29 = sub nsw i32 %19, %18
  %30 = zext i32 %29 to i64
  %31 = shl nuw i64 %30, 32
  %32 = zext i32 %18 to i64
  %33 = or i64 %31, %32
  %34 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %33, i64* %34, align 4
  br label %45

35:                                               ; preds = %26, %16
  %36 = phi i32 [ %19, %26 ], [ %25, %16 ]
  %37 = icmp sgt i64 %20, %15
  br i1 %37, label %16, label %38

38:                                               ; preds = %35
  %39 = sub nsw i32 %36, %12
  %40 = zext i32 %39 to i64
  %41 = shl nuw i64 %40, 32
  %42 = zext i32 %12 to i64
  %43 = or i64 %41, %42
  %44 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %43, i64* %44, align 4
  br label %45

45:                                               ; preds = %7, %28, %38
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url15ExtractFileNameEPKDsRKNS_9ComponentEPS2_(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %9, align 4
  br label %43

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = add i32 %12, %5
  %14 = sext i32 %13 to i64
  %15 = sext i32 %12 to i64
  br label %16

16:                                               ; preds = %33, %10
  %17 = phi i64 [ %14, %10 ], [ %20, %33 ]
  %18 = phi i32 [ %13, %10 ], [ %21, %33 ]
  %19 = phi i32 [ %13, %10 ], [ %34, %33 ]
  %20 = add nsw i64 %17, -1
  %21 = add nsw i32 %18, -1
  %22 = getelementptr inbounds i16, i16* %0, i64 %20
  %23 = load i16, i16* %22, align 2
  %24 = trunc i64 %20 to i32
  switch i16 %23, label %32 [
    i16 59, label %33
    i16 92, label %25
    i16 47, label %25
  ]

25:                                               ; preds = %16, %16
  %26 = sub nsw i32 %19, %18
  %27 = zext i32 %26 to i64
  %28 = shl nuw i64 %27, 32
  %29 = zext i32 %18 to i64
  %30 = or i64 %28, %29
  %31 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %30, i64* %31, align 4
  br label %43

32:                                               ; preds = %16
  br label %33

33:                                               ; preds = %32, %16
  %34 = phi i32 [ %24, %16 ], [ %19, %32 ]
  %35 = icmp sgt i64 %20, %15
  br i1 %35, label %16, label %36

36:                                               ; preds = %33
  %37 = sub nsw i32 %34, %12
  %38 = zext i32 %37 to i64
  %39 = shl nuw i64 %38, 32
  %40 = zext i32 %12 to i64
  %41 = or i64 %39, %40
  %42 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %41, i64* %42, align 4
  br label %43

43:                                               ; preds = %7, %25, %36
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url20ExtractQueryKeyValueEPKcPNS_9ComponentES3_S3_(i8* nocapture readonly, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %71

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %6
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 %10, i32* %12, align 4
  %13 = sext i32 %10 to i64
  %14 = sext i32 %11 to i64
  br label %15

15:                                               ; preds = %19, %8
  %16 = phi i64 [ %13, %8 ], [ %20, %19 ]
  %17 = getelementptr inbounds i8, i8* %0, i64 %16
  %18 = load i8, i8* %17, align 1
  switch i8 %18, label %19 [
    i8 61, label %22
    i8 38, label %22
  ]

19:                                               ; preds = %15
  %20 = add nsw i64 %16, 1
  %21 = icmp slt i64 %20, %14
  br i1 %21, label %15, label %31

22:                                               ; preds = %15, %15
  %23 = getelementptr inbounds i8, i8* %0, i64 %16
  %24 = trunc i64 %16 to i32
  %25 = sub nsw i32 %24, %10
  %26 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 %25, i32* %26, align 4
  %27 = load i8, i8* %23, align 1
  %28 = icmp eq i8 %27, 61
  %29 = zext i1 %28 to i32
  %30 = add nsw i32 %29, %24
  br label %35

31:                                               ; preds = %19
  %32 = trunc i64 %20 to i32
  %33 = sub nsw i32 %32, %10
  %34 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %31, %22
  %36 = phi i32 [ %32, %31 ], [ %30, %22 ]
  %37 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = icmp slt i32 %36, %11
  br i1 %38, label %39, label %59

39:                                               ; preds = %35
  %40 = sext i32 %36 to i64
  br label %41

41:                                               ; preds = %46, %39
  %42 = phi i64 [ %40, %39 ], [ %47, %46 ]
  %43 = getelementptr inbounds i8, i8* %0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 38
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = add nsw i64 %42, 1
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %11, %48
  br i1 %49, label %59, label %41

50:                                               ; preds = %41
  %51 = getelementptr inbounds i8, i8* %0, i64 %42
  %52 = trunc i64 %42 to i32
  %53 = sub nsw i32 %52, %36
  %54 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 %53, i32* %54, align 4
  %55 = load i8, i8* %51, align 1
  %56 = icmp eq i8 %55, 38
  %57 = zext i1 %56 to i32
  %58 = add nsw i32 %57, %52
  br label %63

59:                                               ; preds = %46, %35
  %60 = phi i32 [ %36, %35 ], [ %11, %46 ]
  %61 = sub nsw i32 %60, %36
  %62 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %59, %50
  %64 = phi i32 [ %60, %59 ], [ %58, %50 ]
  %65 = sub nsw i32 %11, %64
  %66 = zext i32 %65 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %64 to i64
  %69 = or i64 %67, %68
  %70 = bitcast %"struct.url::Component"* %1 to i64*
  store i64 %69, i64* %70, align 4
  br label %71

71:                                               ; preds = %4, %63
  %72 = phi i1 [ true, %63 ], [ false, %4 ]
  ret i1 %72
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url20ExtractQueryKeyValueEPKDsPNS_9ComponentES3_S3_(i16* nocapture readonly, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %71

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, %6
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 %10, i32* %12, align 4
  %13 = sext i32 %10 to i64
  %14 = sext i32 %11 to i64
  br label %15

15:                                               ; preds = %19, %8
  %16 = phi i64 [ %13, %8 ], [ %20, %19 ]
  %17 = getelementptr inbounds i16, i16* %0, i64 %16
  %18 = load i16, i16* %17, align 2
  switch i16 %18, label %19 [
    i16 61, label %22
    i16 38, label %22
  ]

19:                                               ; preds = %15
  %20 = add nsw i64 %16, 1
  %21 = icmp slt i64 %20, %14
  br i1 %21, label %15, label %31

22:                                               ; preds = %15, %15
  %23 = getelementptr inbounds i16, i16* %0, i64 %16
  %24 = trunc i64 %16 to i32
  %25 = sub nsw i32 %24, %10
  %26 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 %25, i32* %26, align 4
  %27 = load i16, i16* %23, align 2
  %28 = icmp eq i16 %27, 61
  %29 = zext i1 %28 to i32
  %30 = add nsw i32 %29, %24
  br label %35

31:                                               ; preds = %19
  %32 = trunc i64 %20 to i32
  %33 = sub nsw i32 %32, %10
  %34 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 %33, i32* %34, align 4
  br label %35

35:                                               ; preds = %31, %22
  %36 = phi i32 [ %32, %31 ], [ %30, %22 ]
  %37 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 %36, i32* %37, align 4
  %38 = icmp slt i32 %36, %11
  br i1 %38, label %39, label %59

39:                                               ; preds = %35
  %40 = sext i32 %36 to i64
  br label %41

41:                                               ; preds = %46, %39
  %42 = phi i64 [ %40, %39 ], [ %47, %46 ]
  %43 = getelementptr inbounds i16, i16* %0, i64 %42
  %44 = load i16, i16* %43, align 2
  %45 = icmp eq i16 %44, 38
  br i1 %45, label %50, label %46

46:                                               ; preds = %41
  %47 = add nsw i64 %42, 1
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %11, %48
  br i1 %49, label %59, label %41

50:                                               ; preds = %41
  %51 = getelementptr inbounds i16, i16* %0, i64 %42
  %52 = trunc i64 %42 to i32
  %53 = sub nsw i32 %52, %36
  %54 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 %53, i32* %54, align 4
  %55 = load i16, i16* %51, align 2
  %56 = icmp eq i16 %55, 38
  %57 = zext i1 %56 to i32
  %58 = add nsw i32 %57, %52
  br label %63

59:                                               ; preds = %46, %35
  %60 = phi i32 [ %36, %35 ], [ %11, %46 ]
  %61 = sub nsw i32 %60, %36
  %62 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 %61, i32* %62, align 4
  br label %63

63:                                               ; preds = %59, %50
  %64 = phi i32 [ %60, %59 ], [ %58, %50 ]
  %65 = sub nsw i32 %11, %64
  %66 = zext i32 %65 to i64
  %67 = shl nuw i64 %66, 32
  %68 = zext i32 %64 to i64
  %69 = or i64 %67, %68
  %70 = bitcast %"struct.url::Component"* %1 to i64*
  store i64 %69, i64* %70, align 4
  br label %71

71:                                               ; preds = %4, %63
  %72 = phi i1 [ true, %63 ], [ false, %4 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url14ParseAuthorityEPKcRKNS_9ComponentEPS2_S5_S5_S5_(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIcEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i8* %0, %"struct.url::Component"* dereferenceable(8) %1, %"struct.url::Component"* %2, %"struct.url::Component"* %3, %"struct.url::Component"* %4, %"struct.url::Component"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIcEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) unnamed_addr #1 {
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %18, align 4
  br label %221

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %8
  %23 = sext i32 %22 to i64
  %24 = sext i32 %21 to i64
  br label %25

25:                                               ; preds = %29, %19
  %26 = phi i64 [ %27, %29 ], [ %23, %19 ]
  %27 = add nsw i64 %26, -1
  %28 = icmp sgt i64 %27, %24
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, i8* %0, i64 %27
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 64
  br i1 %32, label %33, label %25

33:                                               ; preds = %29, %25
  %34 = trunc i64 %27 to i32
  %35 = trunc i64 %26 to i32
  %36 = shl i64 %27, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i8, i8* %0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 64
  br i1 %40, label %41, label %147

41:                                               ; preds = %33
  %42 = sub nsw i32 %34, %21
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %68

44:                                               ; preds = %41
  %45 = sext i32 %42 to i64
  br label %46

46:                                               ; preds = %52, %44
  %47 = phi i64 [ 0, %44 ], [ %53, %52 ]
  %48 = add nsw i64 %47, %24
  %49 = getelementptr inbounds i8, i8* %0, i64 %48
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 58
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = add nuw nsw i64 %47, 1
  %54 = icmp slt i64 %53, %45
  br i1 %54, label %46, label %68

55:                                               ; preds = %46
  %56 = trunc i64 %47 to i32
  %57 = bitcast %"struct.url::Component"* %2 to i64*
  %58 = shl i64 %47, 32
  %59 = zext i32 %21 to i64
  %60 = or i64 %58, %59
  store i64 %60, i64* %57, align 4
  %61 = add i32 %21, 1
  %62 = add i32 %61, %56
  %63 = sub i32 %34, %62
  %64 = zext i32 %63 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %62 to i64
  %67 = or i64 %65, %66
  br label %74

68:                                               ; preds = %52, %41
  %69 = bitcast %"struct.url::Component"* %2 to i64*
  %70 = zext i32 %42 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %21 to i64
  %73 = or i64 %71, %72
  store i64 %73, i64* %69, align 4
  br label %74

74:                                               ; preds = %55, %68
  %75 = phi i64 [ %67, %55 ], [ -4294967296, %68 ]
  %76 = bitcast %"struct.url::Component"* %3 to i64*
  store i64 %75, i64* %76, align 4
  %77 = load i32, i32* %20, align 4
  %78 = load i32, i32* %7, align 4
  %79 = add nsw i32 %78, %77
  %80 = sub nsw i32 %79, %35
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = icmp eq i32 %80, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %88, align 4
  br label %221

89:                                               ; preds = %74
  %90 = shl i64 %26, 32
  %91 = ashr exact i64 %90, 32
  %92 = getelementptr inbounds i8, i8* %0, i64 %91
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 91
  %95 = select i1 %94, i32 %79, i32 -1
  %96 = icmp sgt i32 %80, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = sext i32 %79 to i64
  br label %103

99:                                               ; preds = %113, %89
  %100 = phi i32 [ -1, %89 ], [ %114, %113 ]
  %101 = phi i32 [ %95, %89 ], [ %115, %113 ]
  %102 = icmp sgt i32 %100, %101
  br i1 %102, label %121, label %141

103:                                              ; preds = %118, %97
  %104 = phi i8 [ %93, %97 ], [ %120, %118 ]
  %105 = phi i64 [ %91, %97 ], [ %116, %118 ]
  %106 = phi i32 [ %95, %97 ], [ %115, %118 ]
  %107 = phi i32 [ -1, %97 ], [ %114, %118 ]
  %108 = sext i8 %104 to i32
  switch i32 %108, label %113 [
    i32 93, label %109
    i32 58, label %111
  ]

109:                                              ; preds = %103
  %110 = trunc i64 %105 to i32
  br label %113

111:                                              ; preds = %103
  %112 = trunc i64 %105 to i32
  br label %113

113:                                              ; preds = %111, %109, %103
  %114 = phi i32 [ %107, %103 ], [ %112, %111 ], [ %107, %109 ]
  %115 = phi i32 [ %106, %103 ], [ %106, %111 ], [ %110, %109 ]
  %116 = add nsw i64 %105, 1
  %117 = icmp slt i64 %116, %98
  br i1 %117, label %118, label %99

118:                                              ; preds = %113
  %119 = getelementptr inbounds i8, i8* %0, i64 %116
  %120 = load i8, i8* %119, align 1
  br label %103

121:                                              ; preds = %99
  %122 = sub nsw i32 %100, %35
  %123 = zext i32 %122 to i64
  %124 = shl nuw i64 %123, 32
  %125 = and i64 %26, 4294967295
  %126 = or i64 %124, %125
  %127 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %126, i64* %127, align 4
  %128 = icmp eq i32 %122, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  %131 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %131, align 4
  store i32 -1, i32* %130, align 4
  br label %132

132:                                              ; preds = %129, %121
  %133 = add nsw i32 %100, 1
  %134 = xor i32 %100, -1
  %135 = add i32 %79, %134
  %136 = zext i32 %135 to i64
  %137 = shl nuw i64 %136, 32
  %138 = zext i32 %133 to i64
  %139 = or i64 %137, %138
  %140 = bitcast %"struct.url::Component"* %5 to i64*
  store i64 %139, i64* %140, align 4
  br label %221

141:                                              ; preds = %99
  %142 = bitcast %"struct.url::Component"* %4 to i64*
  %143 = and i64 %26, 4294967295
  %144 = or i64 %82, %143
  store i64 %144, i64* %142, align 4
  %145 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %145, align 4
  %146 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %146, align 4
  br label %221

147:                                              ; preds = %33
  %148 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %149, align 4
  %150 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %151, align 4
  %152 = load i32, i32* %7, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %159

154:                                              ; preds = %147
  %155 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %157, align 4
  %158 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %158, align 4
  br label %221

159:                                              ; preds = %147
  %160 = load i32, i32* %20, align 4
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %0, i64 %161
  %163 = load i8, i8* %162, align 1
  %164 = icmp eq i8 %163, 91
  %165 = add nsw i32 %160, %152
  %166 = select i1 %164, i32 %165, i32 -1
  %167 = icmp sgt i32 %152, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %159
  %169 = sext i32 %165 to i64
  br label %174

170:                                              ; preds = %184, %159
  %171 = phi i32 [ -1, %159 ], [ %185, %184 ]
  %172 = phi i32 [ %166, %159 ], [ %186, %184 ]
  %173 = icmp sgt i32 %171, %172
  br i1 %173, label %192, label %215

174:                                              ; preds = %189, %168
  %175 = phi i8 [ %163, %168 ], [ %191, %189 ]
  %176 = phi i64 [ %161, %168 ], [ %187, %189 ]
  %177 = phi i32 [ %166, %168 ], [ %186, %189 ]
  %178 = phi i32 [ -1, %168 ], [ %185, %189 ]
  %179 = sext i8 %175 to i32
  switch i32 %179, label %184 [
    i32 93, label %180
    i32 58, label %182
  ]

180:                                              ; preds = %174
  %181 = trunc i64 %176 to i32
  br label %184

182:                                              ; preds = %174
  %183 = trunc i64 %176 to i32
  br label %184

184:                                              ; preds = %182, %180, %174
  %185 = phi i32 [ %178, %174 ], [ %183, %182 ], [ %178, %180 ]
  %186 = phi i32 [ %177, %174 ], [ %177, %182 ], [ %181, %180 ]
  %187 = add nsw i64 %176, 1
  %188 = icmp slt i64 %187, %169
  br i1 %188, label %189, label %170

189:                                              ; preds = %184
  %190 = getelementptr inbounds i8, i8* %0, i64 %187
  %191 = load i8, i8* %190, align 1
  br label %174

192:                                              ; preds = %170
  %193 = sub nsw i32 %171, %160
  %194 = zext i32 %193 to i64
  %195 = shl nuw i64 %194, 32
  %196 = zext i32 %160 to i64
  %197 = or i64 %195, %196
  %198 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %197, i64* %198, align 4
  %199 = icmp eq i32 %193, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %192
  %201 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  %202 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %202, align 4
  store i32 -1, i32* %201, align 4
  br label %203

203:                                              ; preds = %200, %192
  %204 = add nsw i32 %171, 1
  %205 = load i32, i32* %20, align 4
  %206 = load i32, i32* %7, align 4
  %207 = xor i32 %171, -1
  %208 = add i32 %205, %207
  %209 = add i32 %208, %206
  %210 = zext i32 %209 to i64
  %211 = shl nuw i64 %210, 32
  %212 = zext i32 %204 to i64
  %213 = or i64 %211, %212
  %214 = bitcast %"struct.url::Component"* %5 to i64*
  store i64 %213, i64* %214, align 4
  br label %221

215:                                              ; preds = %170
  %216 = bitcast %"struct.url::Component"* %1 to i64*
  %217 = bitcast %"struct.url::Component"* %4 to i64*
  %218 = load i64, i64* %216, align 4
  store i64 %218, i64* %217, align 4
  %219 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %219, align 4
  %220 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %220, align 4
  br label %221

221:                                              ; preds = %215, %203, %154, %141, %132, %84, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url14ParseAuthorityEPKDsRKNS_9ComponentEPS2_S5_S5_S5_(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIDsEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i16* %0, %"struct.url::Component"* dereferenceable(8) %1, %"struct.url::Component"* %2, %"struct.url::Component"* %3, %"struct.url::Component"* %4, %"struct.url::Component"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIDsEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) unnamed_addr #1 {
  %7 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %19

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %18, align 4
  br label %219

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, %8
  %23 = sext i32 %22 to i64
  %24 = sext i32 %21 to i64
  br label %25

25:                                               ; preds = %29, %19
  %26 = phi i64 [ %27, %29 ], [ %23, %19 ]
  %27 = add nsw i64 %26, -1
  %28 = icmp sgt i64 %27, %24
  br i1 %28, label %29, label %33

29:                                               ; preds = %25
  %30 = getelementptr inbounds i16, i16* %0, i64 %27
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 64
  br i1 %32, label %33, label %25

33:                                               ; preds = %29, %25
  %34 = trunc i64 %27 to i32
  %35 = trunc i64 %26 to i32
  %36 = shl i64 %27, 32
  %37 = ashr exact i64 %36, 32
  %38 = getelementptr inbounds i16, i16* %0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp eq i16 %39, 64
  br i1 %40, label %41, label %146

41:                                               ; preds = %33
  %42 = sub nsw i32 %34, %21
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %44, label %68

44:                                               ; preds = %41
  %45 = sext i32 %42 to i64
  br label %46

46:                                               ; preds = %52, %44
  %47 = phi i64 [ 0, %44 ], [ %53, %52 ]
  %48 = add nsw i64 %47, %24
  %49 = getelementptr inbounds i16, i16* %0, i64 %48
  %50 = load i16, i16* %49, align 2
  %51 = icmp eq i16 %50, 58
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = add nuw nsw i64 %47, 1
  %54 = icmp slt i64 %53, %45
  br i1 %54, label %46, label %68

55:                                               ; preds = %46
  %56 = trunc i64 %47 to i32
  %57 = bitcast %"struct.url::Component"* %2 to i64*
  %58 = shl i64 %47, 32
  %59 = zext i32 %21 to i64
  %60 = or i64 %58, %59
  store i64 %60, i64* %57, align 4
  %61 = add i32 %21, 1
  %62 = add i32 %61, %56
  %63 = sub i32 %34, %62
  %64 = zext i32 %63 to i64
  %65 = shl nuw i64 %64, 32
  %66 = zext i32 %62 to i64
  %67 = or i64 %65, %66
  br label %74

68:                                               ; preds = %52, %41
  %69 = bitcast %"struct.url::Component"* %2 to i64*
  %70 = zext i32 %42 to i64
  %71 = shl nuw i64 %70, 32
  %72 = zext i32 %21 to i64
  %73 = or i64 %71, %72
  store i64 %73, i64* %69, align 4
  br label %74

74:                                               ; preds = %55, %68
  %75 = phi i64 [ %67, %55 ], [ -4294967296, %68 ]
  %76 = bitcast %"struct.url::Component"* %3 to i64*
  store i64 %75, i64* %76, align 4
  %77 = load i32, i32* %20, align 4
  %78 = load i32, i32* %7, align 4
  %79 = add nsw i32 %78, %77
  %80 = sub nsw i32 %79, %35
  %81 = zext i32 %80 to i64
  %82 = shl nuw i64 %81, 32
  %83 = icmp eq i32 %80, 0
  br i1 %83, label %84, label %89

84:                                               ; preds = %74
  %85 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %86, align 4
  %87 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %87, align 4
  %88 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %88, align 4
  br label %219

89:                                               ; preds = %74
  %90 = shl i64 %26, 32
  %91 = ashr exact i64 %90, 32
  %92 = getelementptr inbounds i16, i16* %0, i64 %91
  %93 = load i16, i16* %92, align 2
  %94 = icmp eq i16 %93, 91
  %95 = select i1 %94, i32 %79, i32 -1
  %96 = icmp sgt i32 %80, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %89
  %98 = sext i32 %79 to i64
  br label %103

99:                                               ; preds = %112, %89
  %100 = phi i32 [ -1, %89 ], [ %113, %112 ]
  %101 = phi i32 [ %95, %89 ], [ %114, %112 ]
  %102 = icmp sgt i32 %100, %101
  br i1 %102, label %120, label %140

103:                                              ; preds = %117, %97
  %104 = phi i16 [ %93, %97 ], [ %119, %117 ]
  %105 = phi i64 [ %91, %97 ], [ %115, %117 ]
  %106 = phi i32 [ %95, %97 ], [ %114, %117 ]
  %107 = phi i32 [ -1, %97 ], [ %113, %117 ]
  switch i16 %104, label %112 [
    i16 93, label %108
    i16 58, label %110
  ]

108:                                              ; preds = %103
  %109 = trunc i64 %105 to i32
  br label %112

110:                                              ; preds = %103
  %111 = trunc i64 %105 to i32
  br label %112

112:                                              ; preds = %110, %108, %103
  %113 = phi i32 [ %107, %103 ], [ %111, %110 ], [ %107, %108 ]
  %114 = phi i32 [ %106, %103 ], [ %106, %110 ], [ %109, %108 ]
  %115 = add nsw i64 %105, 1
  %116 = icmp slt i64 %115, %98
  br i1 %116, label %117, label %99

117:                                              ; preds = %112
  %118 = getelementptr inbounds i16, i16* %0, i64 %115
  %119 = load i16, i16* %118, align 2
  br label %103

120:                                              ; preds = %99
  %121 = sub nsw i32 %100, %35
  %122 = zext i32 %121 to i64
  %123 = shl nuw i64 %122, 32
  %124 = and i64 %26, 4294967295
  %125 = or i64 %123, %124
  %126 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %125, i64* %126, align 4
  %127 = icmp eq i32 %121, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  %130 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %130, align 4
  store i32 -1, i32* %129, align 4
  br label %131

131:                                              ; preds = %128, %120
  %132 = add nsw i32 %100, 1
  %133 = xor i32 %100, -1
  %134 = add i32 %79, %133
  %135 = zext i32 %134 to i64
  %136 = shl nuw i64 %135, 32
  %137 = zext i32 %132 to i64
  %138 = or i64 %136, %137
  %139 = bitcast %"struct.url::Component"* %5 to i64*
  store i64 %138, i64* %139, align 4
  br label %219

140:                                              ; preds = %99
  %141 = bitcast %"struct.url::Component"* %4 to i64*
  %142 = and i64 %26, 4294967295
  %143 = or i64 %82, %142
  store i64 %143, i64* %141, align 4
  %144 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %145, align 4
  br label %219

146:                                              ; preds = %33
  %147 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %149, align 4
  %150 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %150, align 4
  %151 = load i32, i32* %7, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %154, align 4
  %155 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %157, align 4
  br label %219

158:                                              ; preds = %146
  %159 = load i32, i32* %20, align 4
  %160 = sext i32 %159 to i64
  %161 = getelementptr inbounds i16, i16* %0, i64 %160
  %162 = load i16, i16* %161, align 2
  %163 = icmp eq i16 %162, 91
  %164 = add nsw i32 %159, %151
  %165 = select i1 %163, i32 %164, i32 -1
  %166 = icmp sgt i32 %151, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %158
  %168 = sext i32 %164 to i64
  br label %173

169:                                              ; preds = %182, %158
  %170 = phi i32 [ -1, %158 ], [ %183, %182 ]
  %171 = phi i32 [ %165, %158 ], [ %184, %182 ]
  %172 = icmp sgt i32 %170, %171
  br i1 %172, label %190, label %213

173:                                              ; preds = %187, %167
  %174 = phi i16 [ %162, %167 ], [ %189, %187 ]
  %175 = phi i64 [ %160, %167 ], [ %185, %187 ]
  %176 = phi i32 [ %165, %167 ], [ %184, %187 ]
  %177 = phi i32 [ -1, %167 ], [ %183, %187 ]
  switch i16 %174, label %182 [
    i16 93, label %178
    i16 58, label %180
  ]

178:                                              ; preds = %173
  %179 = trunc i64 %175 to i32
  br label %182

180:                                              ; preds = %173
  %181 = trunc i64 %175 to i32
  br label %182

182:                                              ; preds = %180, %178, %173
  %183 = phi i32 [ %177, %173 ], [ %181, %180 ], [ %177, %178 ]
  %184 = phi i32 [ %176, %173 ], [ %176, %180 ], [ %179, %178 ]
  %185 = add nsw i64 %175, 1
  %186 = icmp slt i64 %185, %168
  br i1 %186, label %187, label %169

187:                                              ; preds = %182
  %188 = getelementptr inbounds i16, i16* %0, i64 %185
  %189 = load i16, i16* %188, align 2
  br label %173

190:                                              ; preds = %169
  %191 = sub nsw i32 %170, %159
  %192 = zext i32 %191 to i64
  %193 = shl nuw i64 %192, 32
  %194 = zext i32 %159 to i64
  %195 = or i64 %193, %194
  %196 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %195, i64* %196, align 4
  %197 = icmp eq i32 %191, 0
  br i1 %197, label %198, label %201

198:                                              ; preds = %190
  %199 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  %200 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %200, align 4
  store i32 -1, i32* %199, align 4
  br label %201

201:                                              ; preds = %198, %190
  %202 = add nsw i32 %170, 1
  %203 = load i32, i32* %20, align 4
  %204 = load i32, i32* %7, align 4
  %205 = xor i32 %170, -1
  %206 = add i32 %203, %205
  %207 = add i32 %206, %204
  %208 = zext i32 %207 to i64
  %209 = shl nuw i64 %208, 32
  %210 = zext i32 %202 to i64
  %211 = or i64 %209, %210
  %212 = bitcast %"struct.url::Component"* %5 to i64*
  store i64 %211, i64* %212, align 4
  br label %219

213:                                              ; preds = %169
  %214 = bitcast %"struct.url::Component"* %1 to i64*
  %215 = bitcast %"struct.url::Component"* %4 to i64*
  %216 = load i64, i64* %214, align 4
  store i64 %216, i64* %215, align 4
  %217 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 0
  store i32 0, i32* %217, align 4
  %218 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %5, i64 0, i32 1
  store i32 -1, i32* %218, align 4
  br label %219

219:                                              ; preds = %213, %201, %153, %140, %131, %84, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url9ParsePortEPKcRKNS_9ComponentE(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca [6 x i8], align 1
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %56

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %5
  %11 = sext i32 %9 to i64
  %12 = zext i32 %5 to i64
  br label %15

13:                                               ; preds = %15
  %14 = icmp eq i64 %21, %12
  br i1 %14, label %56, label %15

15:                                               ; preds = %13, %7
  %16 = phi i64 [ 0, %7 ], [ %21, %13 ]
  %17 = add nsw i64 %16, %11
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = icmp eq i8 %19, 48
  %21 = add nuw nsw i64 %16, 1
  br i1 %20, label %13, label %22

22:                                               ; preds = %15
  %23 = trunc i64 %17 to i32
  %24 = sub i32 %10, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %22
  %27 = icmp sgt i32 %24, 5
  br i1 %27, label %56, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %29) #11
  %30 = icmp sgt i32 %24, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 -86, i64 6, i1 false) #11
  br i1 %30, label %31, label %47

31:                                               ; preds = %28
  %32 = shl i64 %17, 32
  %33 = ashr exact i64 %32, 32
  %34 = zext i32 %24 to i64
  br label %35

35:                                               ; preds = %43, %31
  %36 = phi i64 [ 0, %31 ], [ %45, %43 ]
  %37 = add nsw i64 %36, %33
  %38 = getelementptr inbounds i8, i8* %0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i16
  %41 = add nsw i16 %40, -48
  %42 = icmp ult i16 %41, 10
  br i1 %42, label %43, label %54

43:                                               ; preds = %35
  %44 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 %36
  store i8 %39, i8* %44, align 1
  %45 = add nuw nsw i64 %36, 1
  %46 = icmp eq i64 %45, %34
  br i1 %46, label %47, label %35

47:                                               ; preds = %43, %28
  %48 = sext i32 %24 to i64
  %49 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 %48
  store i8 0, i8* %49, align 1
  %50 = call i64 @strtol(i8* nocapture nonnull %29, i8** null, i32 10) #11
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, 65535
  %53 = select i1 %52, i32 -2, i32 %51
  br label %54

54:                                               ; preds = %35, %47
  %55 = phi i32 [ %53, %47 ], [ -2, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %29) #11
  br label %56

56:                                               ; preds = %13, %2, %22, %26, %54
  %57 = phi i32 [ -1, %2 ], [ %55, %54 ], [ 0, %22 ], [ -2, %26 ], [ 0, %13 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3url9ParsePortEPKDsRKNS_9ComponentE(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 {
  %3 = alloca [6 x i8], align 1
  %4 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %56

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, %5
  %11 = sext i32 %9 to i64
  %12 = zext i32 %5 to i64
  br label %15

13:                                               ; preds = %15
  %14 = icmp eq i64 %21, %12
  br i1 %14, label %56, label %15

15:                                               ; preds = %13, %7
  %16 = phi i64 [ 0, %7 ], [ %21, %13 ]
  %17 = add nsw i64 %16, %11
  %18 = getelementptr inbounds i16, i16* %0, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = icmp eq i16 %19, 48
  %21 = add nuw nsw i64 %16, 1
  br i1 %20, label %13, label %22

22:                                               ; preds = %15
  %23 = trunc i64 %17 to i32
  %24 = sub i32 %10, %23
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %56, label %26

26:                                               ; preds = %22
  %27 = icmp sgt i32 %24, 5
  br i1 %27, label %56, label %28

28:                                               ; preds = %26
  %29 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %29) #11
  %30 = icmp sgt i32 %24, 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %29, i8 -86, i64 6, i1 false) #11
  br i1 %30, label %31, label %47

31:                                               ; preds = %28
  %32 = shl i64 %17, 32
  %33 = ashr exact i64 %32, 32
  %34 = zext i32 %24 to i64
  br label %35

35:                                               ; preds = %42, %31
  %36 = phi i64 [ 0, %31 ], [ %45, %42 ]
  %37 = add nsw i64 %36, %33
  %38 = getelementptr inbounds i16, i16* %0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = add i16 %39, -48
  %41 = icmp ult i16 %40, 10
  br i1 %41, label %42, label %54

42:                                               ; preds = %35
  %43 = trunc i16 %39 to i8
  %44 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 %36
  store i8 %43, i8* %44, align 1
  %45 = add nuw nsw i64 %36, 1
  %46 = icmp eq i64 %45, %34
  br i1 %46, label %47, label %35

47:                                               ; preds = %42, %28
  %48 = sext i32 %24 to i64
  %49 = getelementptr inbounds [6 x i8], [6 x i8]* %3, i64 0, i64 %48
  store i8 0, i8* %49, align 1
  %50 = call i64 @strtol(i8* nocapture nonnull %29, i8** null, i32 10) #11
  %51 = trunc i64 %50 to i32
  %52 = icmp sgt i32 %51, 65535
  %53 = select i1 %52, i32 -2, i32 %51
  br label %54

54:                                               ; preds = %35, %47
  %55 = phi i32 [ %53, %47 ], [ -2, %35 ]
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %29) #11
  br label %56

56:                                               ; preds = %13, %2, %22, %26, %54
  %57 = phi i32 [ -1, %2 ], [ %55, %54 ], [ 0, %22 ], [ -2, %26 ], [ 0, %13 ]
  ret i32 %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url16ParseStandardURLEPKciPNS_6ParsedE(i8* nocapture readonly, i32, %"struct.url::Parsed"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIcEEvPKT_iPNS_6ParsedE(i8* %0, i32 %1, %"struct.url::Parsed"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIcEEvPKT_iPNS_6ParsedE(i8* nocapture readonly, i32, %"struct.url::Parsed"* nocapture) unnamed_addr #1 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = load i8, i8* %0, align 1
  %7 = icmp ult i8 %6, 33
  br i1 %7, label %8, label %25

8:                                                ; preds = %5
  %9 = sext i32 %1 to i64
  %10 = add nsw i64 %9, -1
  br label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  br label %67

13:                                               ; preds = %17
  %14 = getelementptr inbounds i8, i8* %0, i64 %19
  %15 = load i8, i8* %14, align 1
  %16 = icmp ult i8 %15, 33
  br i1 %16, label %17, label %23

17:                                               ; preds = %8, %13
  %18 = phi i64 [ 0, %8 ], [ %19, %13 ]
  %19 = add nuw nsw i64 %18, 1
  %20 = icmp eq i64 %18, %10
  br i1 %20, label %21, label %13

21:                                               ; preds = %17
  %22 = trunc i64 %19 to i32
  br label %25

23:                                               ; preds = %13
  %24 = trunc i64 %19 to i32
  br label %25

25:                                               ; preds = %23, %21, %5
  %26 = phi i32 [ %22, %21 ], [ 0, %5 ], [ %24, %23 ]
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %28, label %48

28:                                               ; preds = %25
  %29 = sext i32 %1 to i64
  %30 = add nsw i64 %29, -1
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  %32 = load i8, i8* %31, align 1
  %33 = icmp ult i8 %32, 33
  br i1 %33, label %34, label %48

34:                                               ; preds = %28
  %35 = sext i32 %26 to i64
  br label %41

36:                                               ; preds = %41
  %37 = add nsw i64 %42, -1
  %38 = getelementptr inbounds i8, i8* %0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = icmp ult i8 %39, 33
  br i1 %40, label %41, label %46

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %30, %34 ], [ %37, %36 ]
  %43 = icmp sgt i64 %42, %35
  br i1 %43, label %36, label %44

44:                                               ; preds = %41
  %45 = trunc i64 %42 to i32
  br label %48

46:                                               ; preds = %36
  %47 = trunc i64 %42 to i32
  br label %48

48:                                               ; preds = %46, %28, %44, %25
  %49 = phi i32 [ %1, %25 ], [ %45, %44 ], [ %1, %28 ], [ %47, %46 ]
  %50 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  %51 = icmp sgt i32 %49, 0
  br i1 %51, label %52, label %67

52:                                               ; preds = %48
  %53 = zext i32 %49 to i64
  %54 = icmp ult i8 %6, 33
  br i1 %54, label %55, label %67

55:                                               ; preds = %52, %61
  %56 = phi i32 [ %59, %61 ], [ 0, %52 ]
  %57 = phi i64 [ %58, %61 ], [ 0, %52 ]
  %58 = add nuw nsw i64 %57, 1
  %59 = add nuw nsw i32 %56, 1
  %60 = icmp eq i64 %58, %53
  br i1 %60, label %67, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds i8, i8* %0, i64 %58
  %63 = load i8, i8* %62, align 1
  %64 = icmp ult i8 %63, 33
  br i1 %64, label %55, label %65

65:                                               ; preds = %61
  %66 = trunc i64 %58 to i32
  br label %67

67:                                               ; preds = %55, %52, %65, %11, %48
  %68 = phi %"struct.url::Component"* [ %50, %48 ], [ %12, %11 ], [ %50, %65 ], [ %50, %52 ], [ %50, %55 ]
  %69 = phi i32 [ %49, %48 ], [ %1, %11 ], [ %49, %65 ], [ %49, %52 ], [ %49, %55 ]
  %70 = phi i32 [ %26, %48 ], [ 0, %11 ], [ %26, %65 ], [ %26, %52 ], [ %26, %55 ]
  %71 = phi i32 [ 0, %48 ], [ 0, %11 ], [ %66, %65 ], [ 0, %52 ], [ %59, %55 ]
  %72 = icmp slt i32 %71, %69
  br i1 %72, label %73, label %95

73:                                               ; preds = %67
  %74 = zext i32 %71 to i64
  %75 = zext i32 %69 to i64
  br label %76

76:                                               ; preds = %81, %73
  %77 = phi i64 [ %74, %73 ], [ %82, %81 ]
  %78 = getelementptr inbounds i8, i8* %0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 58
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = add nuw nsw i64 %77, 1
  %83 = icmp eq i64 %82, %75
  br i1 %83, label %95, label %76

84:                                               ; preds = %76
  %85 = trunc i64 %77 to i32
  %86 = sub nsw i32 %85, %71
  %87 = zext i32 %86 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, %74
  %90 = bitcast %"struct.url::Component"* %68 to i64*
  store i64 %89, i64* %90, align 4
  %91 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %71, 1
  %94 = add i32 %93, %92
  br label %98

95:                                               ; preds = %81, %67
  %96 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %97, align 4
  br label %98

98:                                               ; preds = %95, %84
  %99 = phi i32 [ %94, %84 ], [ %70, %95 ]
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIcEEvPKT_iiPNS_6ParsedE(i8* %0, i32 %69, i32 %99, %"struct.url::Parsed"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url16ParseStandardURLEPKDsiPNS_6ParsedE(i16* nocapture readonly, i32, %"struct.url::Parsed"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIDsEEvPKT_iPNS_6ParsedE(i16* %0, i32 %1, %"struct.url::Parsed"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIDsEEvPKT_iPNS_6ParsedE(i16* nocapture readonly, i32, %"struct.url::Parsed"* nocapture) unnamed_addr #1 {
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %5, label %11

5:                                                ; preds = %3
  %6 = load i16, i16* %0, align 2
  %7 = icmp ult i16 %6, 33
  br i1 %7, label %8, label %25

8:                                                ; preds = %5
  %9 = sext i32 %1 to i64
  %10 = add nsw i64 %9, -1
  br label %17

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  br label %67

13:                                               ; preds = %17
  %14 = getelementptr inbounds i16, i16* %0, i64 %19
  %15 = load i16, i16* %14, align 2
  %16 = icmp ult i16 %15, 33
  br i1 %16, label %17, label %23

17:                                               ; preds = %8, %13
  %18 = phi i64 [ 0, %8 ], [ %19, %13 ]
  %19 = add nuw nsw i64 %18, 1
  %20 = icmp eq i64 %18, %10
  br i1 %20, label %21, label %13

21:                                               ; preds = %17
  %22 = trunc i64 %19 to i32
  br label %25

23:                                               ; preds = %13
  %24 = trunc i64 %19 to i32
  br label %25

25:                                               ; preds = %23, %21, %5
  %26 = phi i32 [ %22, %21 ], [ 0, %5 ], [ %24, %23 ]
  %27 = icmp slt i32 %26, %1
  br i1 %27, label %28, label %48

28:                                               ; preds = %25
  %29 = sext i32 %1 to i64
  %30 = add nsw i64 %29, -1
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %32, 33
  br i1 %33, label %34, label %48

34:                                               ; preds = %28
  %35 = sext i32 %26 to i64
  br label %41

36:                                               ; preds = %41
  %37 = add nsw i64 %42, -1
  %38 = getelementptr inbounds i16, i16* %0, i64 %37
  %39 = load i16, i16* %38, align 2
  %40 = icmp ult i16 %39, 33
  br i1 %40, label %41, label %46

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %30, %34 ], [ %37, %36 ]
  %43 = icmp sgt i64 %42, %35
  br i1 %43, label %36, label %44

44:                                               ; preds = %41
  %45 = trunc i64 %42 to i32
  br label %48

46:                                               ; preds = %36
  %47 = trunc i64 %42 to i32
  br label %48

48:                                               ; preds = %46, %28, %44, %25
  %49 = phi i32 [ %1, %25 ], [ %45, %44 ], [ %1, %28 ], [ %47, %46 ]
  %50 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0
  %51 = icmp sgt i32 %49, 0
  br i1 %51, label %52, label %67

52:                                               ; preds = %48
  %53 = zext i32 %49 to i64
  %54 = icmp ult i16 %6, 33
  br i1 %54, label %55, label %67

55:                                               ; preds = %52, %61
  %56 = phi i32 [ %59, %61 ], [ 0, %52 ]
  %57 = phi i64 [ %58, %61 ], [ 0, %52 ]
  %58 = add nuw nsw i64 %57, 1
  %59 = add nuw nsw i32 %56, 1
  %60 = icmp eq i64 %58, %53
  br i1 %60, label %67, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds i16, i16* %0, i64 %58
  %63 = load i16, i16* %62, align 2
  %64 = icmp ult i16 %63, 33
  br i1 %64, label %55, label %65

65:                                               ; preds = %61
  %66 = trunc i64 %58 to i32
  br label %67

67:                                               ; preds = %55, %52, %65, %11, %48
  %68 = phi %"struct.url::Component"* [ %50, %48 ], [ %12, %11 ], [ %50, %65 ], [ %50, %52 ], [ %50, %55 ]
  %69 = phi i32 [ %49, %48 ], [ %1, %11 ], [ %49, %65 ], [ %49, %52 ], [ %49, %55 ]
  %70 = phi i32 [ %26, %48 ], [ 0, %11 ], [ %26, %65 ], [ %26, %52 ], [ %26, %55 ]
  %71 = phi i32 [ 0, %48 ], [ 0, %11 ], [ %66, %65 ], [ 0, %52 ], [ %59, %55 ]
  %72 = icmp slt i32 %71, %69
  br i1 %72, label %73, label %95

73:                                               ; preds = %67
  %74 = zext i32 %71 to i64
  %75 = zext i32 %69 to i64
  br label %76

76:                                               ; preds = %81, %73
  %77 = phi i64 [ %74, %73 ], [ %82, %81 ]
  %78 = getelementptr inbounds i16, i16* %0, i64 %77
  %79 = load i16, i16* %78, align 2
  %80 = icmp eq i16 %79, 58
  br i1 %80, label %84, label %81

81:                                               ; preds = %76
  %82 = add nuw nsw i64 %77, 1
  %83 = icmp eq i64 %82, %75
  br i1 %83, label %95, label %76

84:                                               ; preds = %76
  %85 = trunc i64 %77 to i32
  %86 = sub nsw i32 %85, %71
  %87 = zext i32 %86 to i64
  %88 = shl nuw i64 %87, 32
  %89 = or i64 %88, %74
  %90 = bitcast %"struct.url::Component"* %68 to i64*
  store i64 %89, i64* %90, align 4
  %91 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = add i32 %71, 1
  %94 = add i32 %93, %92
  br label %98

95:                                               ; preds = %81, %67
  %96 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %97, align 4
  br label %98

98:                                               ; preds = %95, %84
  %99 = phi i32 [ %94, %84 ], [ %70, %95 ]
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIDsEEvPKT_iiPNS_6ParsedE(i16* %0, i32 %69, i32 %99, %"struct.url::Parsed"* %2)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url12ParsePathURLEPKcibPNS_6ParsedE(i8* nocapture readonly, i32, i1 zeroext, %"struct.url::Parsed"* nocapture) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 1, i32 0
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 3, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5, i32 1
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6, i32 1
  %15 = bitcast %"struct.url::Component"* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %16, i64 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %18, align 4
  %19 = icmp sgt i32 %1, 0
  br i1 %19, label %20, label %62

20:                                               ; preds = %4
  %21 = load i8, i8* %0, align 1
  %22 = icmp ult i8 %21, 33
  br i1 %22, label %23, label %38

23:                                               ; preds = %20
  %24 = sext i32 %1 to i64
  %25 = add nsw i64 %24, -1
  br label %30

26:                                               ; preds = %30
  %27 = getelementptr inbounds i8, i8* %0, i64 %32
  %28 = load i8, i8* %27, align 1
  %29 = icmp ult i8 %28, 33
  br i1 %29, label %30, label %36

30:                                               ; preds = %26, %23
  %31 = phi i64 [ 0, %23 ], [ %32, %26 ]
  %32 = add nuw nsw i64 %31, 1
  %33 = icmp eq i64 %31, %25
  br i1 %33, label %34, label %26

34:                                               ; preds = %30
  %35 = trunc i64 %32 to i32
  br label %38

36:                                               ; preds = %26
  %37 = trunc i64 %32 to i32
  br label %38

38:                                               ; preds = %36, %34, %20
  %39 = phi i32 [ %35, %34 ], [ 0, %20 ], [ %37, %36 ]
  %40 = icmp slt i32 %39, %1
  %41 = and i1 %40, %2
  br i1 %41, label %42, label %62

42:                                               ; preds = %38
  %43 = sext i32 %1 to i64
  %44 = add nsw i64 %43, -1
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = icmp ult i8 %46, 33
  br i1 %47, label %48, label %62

48:                                               ; preds = %42
  %49 = sext i32 %39 to i64
  br label %55

50:                                               ; preds = %55
  %51 = add nsw i64 %56, -1
  %52 = getelementptr inbounds i8, i8* %0, i64 %51
  %53 = load i8, i8* %52, align 1
  %54 = icmp ult i8 %53, 33
  br i1 %54, label %55, label %60

55:                                               ; preds = %50, %48
  %56 = phi i64 [ %44, %48 ], [ %51, %50 ]
  %57 = icmp sgt i64 %56, %49
  br i1 %57, label %50, label %58

58:                                               ; preds = %55
  %59 = trunc i64 %56 to i32
  br label %62

60:                                               ; preds = %50
  %61 = trunc i64 %56 to i32
  br label %62

62:                                               ; preds = %60, %58, %42, %38, %4
  %63 = phi i32 [ %39, %38 ], [ 0, %4 ], [ %39, %58 ], [ %39, %42 ], [ %39, %60 ]
  %64 = phi i32 [ %1, %38 ], [ %1, %4 ], [ %59, %58 ], [ %1, %42 ], [ %61, %60 ]
  %65 = icmp eq i32 %64, %63
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 1
  store i32 -1, i32* %68, align 4
  store i32 0, i32* %10, align 4
  store i32 -1, i32* %11, align 4
  br label %180

69:                                               ; preds = %62
  %70 = sext i32 %63 to i64
  %71 = getelementptr inbounds i8, i8* %0, i64 %70
  %72 = sub nsw i32 %64, %63
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  br label %76

76:                                               ; preds = %82, %74
  %77 = phi i64 [ 0, %74 ], [ %83, %82 ]
  %78 = phi i32 [ 0, %74 ], [ %84, %82 ]
  %79 = getelementptr inbounds i8, i8* %71, i64 %77
  %80 = load i8, i8* %79, align 1
  %81 = icmp ult i8 %80, 33
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = add nuw nsw i64 %77, 1
  %84 = add nuw nsw i32 %78, 1
  %85 = icmp eq i64 %83, %75
  br i1 %85, label %88, label %76

86:                                               ; preds = %76
  %87 = trunc i64 %77 to i32
  br label %88

88:                                               ; preds = %82, %86, %69
  %89 = phi i32 [ 0, %69 ], [ %87, %86 ], [ %84, %82 ]
  %90 = icmp slt i32 %89, %72
  br i1 %90, label %91, label %113

91:                                               ; preds = %88
  %92 = zext i32 %89 to i64
  %93 = zext i32 %72 to i64
  br label %94

94:                                               ; preds = %99, %91
  %95 = phi i64 [ %92, %91 ], [ %100, %99 ]
  %96 = getelementptr inbounds i8, i8* %71, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 58
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = add nuw nsw i64 %95, 1
  %101 = icmp eq i64 %100, %93
  br i1 %101, label %113, label %94

102:                                              ; preds = %94
  %103 = trunc i64 %95 to i32
  %104 = sub nsw i32 %103, %89
  %105 = zext i32 %104 to i64
  %106 = shl nuw i64 %105, 32
  %107 = or i64 %106, %92
  %108 = bitcast %"struct.url::Parsed"* %3 to i64*
  store i64 %107, i64* %108, align 4
  %109 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  %110 = add nsw i32 %89, %63
  store i32 %110, i32* %109, align 8
  %111 = add i32 %110, 1
  %112 = add i32 %111, %104
  br label %116

113:                                              ; preds = %99, %88
  %114 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 1
  store i32 -1, i32* %115, align 4
  br label %116

116:                                              ; preds = %113, %102
  %117 = phi i32 [ %112, %102 ], [ %63, %113 ]
  %118 = icmp eq i32 %64, %117
  br i1 %118, label %180, label %119

119:                                              ; preds = %116
  %120 = sub nsw i32 %64, %117
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = bitcast %"struct.url::Component"* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %123, align 4
  store i32 0, i32* %17, align 4
  store i32 -1, i32* %18, align 4
  br label %180

124:                                              ; preds = %119
  %125 = icmp sgt i32 %120, 0
  br i1 %125, label %126, label %154

126:                                              ; preds = %124
  %127 = sext i32 %117 to i64
  %128 = sext i32 %64 to i64
  br label %129

129:                                              ; preds = %139, %126
  %130 = phi i32 [ -1, %126 ], [ %140, %139 ]
  %131 = phi i64 [ %127, %126 ], [ %141, %139 ]
  %132 = getelementptr inbounds i8, i8* %0, i64 %131
  %133 = load i8, i8* %132, align 1
  %134 = sext i8 %133 to i32
  switch i32 %134, label %139 [
    i32 63, label %135
    i32 35, label %143
  ]

135:                                              ; preds = %129
  %136 = icmp slt i32 %130, 0
  %137 = trunc i64 %131 to i32
  %138 = select i1 %136, i32 %137, i32 %130
  br label %139

139:                                              ; preds = %135, %129
  %140 = phi i32 [ %130, %129 ], [ %138, %135 ]
  %141 = add nsw i64 %131, 1
  %142 = icmp slt i64 %141, %128
  br i1 %142, label %129, label %154

143:                                              ; preds = %129
  %144 = trunc i64 %131 to i32
  %145 = icmp sgt i32 %144, -1
  br i1 %145, label %146, label %154

146:                                              ; preds = %143
  %147 = add nuw nsw i32 %144, 1
  %148 = sub nsw i32 %64, %147
  %149 = zext i32 %148 to i64
  %150 = shl nuw i64 %149, 32
  %151 = zext i32 %147 to i64
  %152 = or i64 %150, %151
  %153 = bitcast %"struct.url::Component"* %16 to i64*
  store i64 %152, i64* %153, align 4
  br label %156

154:                                              ; preds = %139, %143, %124
  %155 = phi i32 [ %130, %143 ], [ -1, %124 ], [ %140, %139 ]
  store i32 0, i32* %17, align 4
  store i32 -1, i32* %18, align 4
  br label %156

156:                                              ; preds = %154, %146
  %157 = phi i32 [ %130, %146 ], [ %155, %154 ]
  %158 = phi i32 [ %144, %146 ], [ %64, %154 ]
  %159 = icmp sgt i32 %157, -1
  br i1 %159, label %160, label %168

160:                                              ; preds = %156
  %161 = add nuw nsw i32 %157, 1
  %162 = sub nsw i32 %158, %161
  %163 = zext i32 %162 to i64
  %164 = shl nuw i64 %163, 32
  %165 = zext i32 %161 to i64
  %166 = or i64 %164, %165
  %167 = bitcast %"struct.url::Component"* %12 to i64*
  store i64 %166, i64* %167, align 4
  br label %169

168:                                              ; preds = %156
  store i32 0, i32* %13, align 4
  store i32 -1, i32* %14, align 4
  br label %169

169:                                              ; preds = %168, %160
  %170 = phi i32 [ %157, %160 ], [ %158, %168 ]
  %171 = icmp eq i32 %170, %117
  br i1 %171, label %179, label %172

172:                                              ; preds = %169
  %173 = sub nsw i32 %170, %117
  %174 = zext i32 %173 to i64
  %175 = shl nuw i64 %174, 32
  %176 = zext i32 %117 to i64
  %177 = or i64 %175, %176
  %178 = bitcast %"struct.url::Component"* %9 to i64*
  store i64 %177, i64* %178, align 4
  br label %180

179:                                              ; preds = %169
  store i32 0, i32* %10, align 4
  store i32 -1, i32* %11, align 4
  br label %180

180:                                              ; preds = %66, %116, %122, %172, %179
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url12ParsePathURLEPKDsibPNS_6ParsedE(i16* nocapture readonly, i32, i1 zeroext, %"struct.url::Parsed"* nocapture) local_unnamed_addr #5 {
  %5 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 1, i32 0
  %6 = bitcast i32* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %6, align 4
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 3, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %9, i64 0, i32 0
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5, i32 1
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %12, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6, i32 1
  %15 = bitcast %"struct.url::Component"* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %15, align 4
  %16 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %16, i64 0, i32 0
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %18, align 4
  %19 = icmp sgt i32 %1, 0
  br i1 %19, label %20, label %62

20:                                               ; preds = %4
  %21 = load i16, i16* %0, align 2
  %22 = icmp ult i16 %21, 33
  br i1 %22, label %23, label %38

23:                                               ; preds = %20
  %24 = sext i32 %1 to i64
  %25 = add nsw i64 %24, -1
  br label %30

26:                                               ; preds = %30
  %27 = getelementptr inbounds i16, i16* %0, i64 %32
  %28 = load i16, i16* %27, align 2
  %29 = icmp ult i16 %28, 33
  br i1 %29, label %30, label %36

30:                                               ; preds = %26, %23
  %31 = phi i64 [ 0, %23 ], [ %32, %26 ]
  %32 = add nuw nsw i64 %31, 1
  %33 = icmp eq i64 %31, %25
  br i1 %33, label %34, label %26

34:                                               ; preds = %30
  %35 = trunc i64 %32 to i32
  br label %38

36:                                               ; preds = %26
  %37 = trunc i64 %32 to i32
  br label %38

38:                                               ; preds = %36, %34, %20
  %39 = phi i32 [ %35, %34 ], [ 0, %20 ], [ %37, %36 ]
  %40 = icmp slt i32 %39, %1
  %41 = and i1 %40, %2
  br i1 %41, label %42, label %62

42:                                               ; preds = %38
  %43 = sext i32 %1 to i64
  %44 = add nsw i64 %43, -1
  %45 = getelementptr inbounds i16, i16* %0, i64 %44
  %46 = load i16, i16* %45, align 2
  %47 = icmp ult i16 %46, 33
  br i1 %47, label %48, label %62

48:                                               ; preds = %42
  %49 = sext i32 %39 to i64
  br label %55

50:                                               ; preds = %55
  %51 = add nsw i64 %56, -1
  %52 = getelementptr inbounds i16, i16* %0, i64 %51
  %53 = load i16, i16* %52, align 2
  %54 = icmp ult i16 %53, 33
  br i1 %54, label %55, label %60

55:                                               ; preds = %50, %48
  %56 = phi i64 [ %44, %48 ], [ %51, %50 ]
  %57 = icmp sgt i64 %56, %49
  br i1 %57, label %50, label %58

58:                                               ; preds = %55
  %59 = trunc i64 %56 to i32
  br label %62

60:                                               ; preds = %50
  %61 = trunc i64 %56 to i32
  br label %62

62:                                               ; preds = %60, %58, %42, %38, %4
  %63 = phi i32 [ %39, %38 ], [ 0, %4 ], [ %39, %58 ], [ %39, %42 ], [ %39, %60 ]
  %64 = phi i32 [ %1, %38 ], [ %1, %4 ], [ %59, %58 ], [ %1, %42 ], [ %61, %60 ]
  %65 = icmp eq i32 %64, %63
  br i1 %65, label %66, label %69

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 1
  store i32 -1, i32* %68, align 4
  store i32 0, i32* %10, align 4
  store i32 -1, i32* %11, align 4
  br label %179

69:                                               ; preds = %62
  %70 = sext i32 %63 to i64
  %71 = getelementptr inbounds i16, i16* %0, i64 %70
  %72 = sub nsw i32 %64, %63
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %88

74:                                               ; preds = %69
  %75 = zext i32 %72 to i64
  br label %76

76:                                               ; preds = %82, %74
  %77 = phi i64 [ 0, %74 ], [ %83, %82 ]
  %78 = phi i32 [ 0, %74 ], [ %84, %82 ]
  %79 = getelementptr inbounds i16, i16* %71, i64 %77
  %80 = load i16, i16* %79, align 2
  %81 = icmp ult i16 %80, 33
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = add nuw nsw i64 %77, 1
  %84 = add nuw nsw i32 %78, 1
  %85 = icmp eq i64 %83, %75
  br i1 %85, label %88, label %76

86:                                               ; preds = %76
  %87 = trunc i64 %77 to i32
  br label %88

88:                                               ; preds = %82, %86, %69
  %89 = phi i32 [ 0, %69 ], [ %87, %86 ], [ %84, %82 ]
  %90 = icmp slt i32 %89, %72
  br i1 %90, label %91, label %113

91:                                               ; preds = %88
  %92 = zext i32 %89 to i64
  %93 = zext i32 %72 to i64
  br label %94

94:                                               ; preds = %99, %91
  %95 = phi i64 [ %92, %91 ], [ %100, %99 ]
  %96 = getelementptr inbounds i16, i16* %71, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = icmp eq i16 %97, 58
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = add nuw nsw i64 %95, 1
  %101 = icmp eq i64 %100, %93
  br i1 %101, label %113, label %94

102:                                              ; preds = %94
  %103 = trunc i64 %95 to i32
  %104 = sub nsw i32 %103, %89
  %105 = zext i32 %104 to i64
  %106 = shl nuw i64 %105, 32
  %107 = or i64 %106, %92
  %108 = bitcast %"struct.url::Parsed"* %3 to i64*
  store i64 %107, i64* %108, align 4
  %109 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  %110 = add nsw i32 %89, %63
  store i32 %110, i32* %109, align 8
  %111 = add i32 %110, 1
  %112 = add i32 %111, %104
  br label %116

113:                                              ; preds = %99, %88
  %114 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 0
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 0, i32 1
  store i32 -1, i32* %115, align 4
  br label %116

116:                                              ; preds = %113, %102
  %117 = phi i32 [ %112, %102 ], [ %63, %113 ]
  %118 = icmp eq i32 %64, %117
  br i1 %118, label %179, label %119

119:                                              ; preds = %116
  %120 = sub nsw i32 %64, %117
  %121 = icmp eq i32 %120, -1
  br i1 %121, label %122, label %124

122:                                              ; preds = %119
  %123 = bitcast %"struct.url::Component"* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %123, align 4
  store i32 0, i32* %17, align 4
  store i32 -1, i32* %18, align 4
  br label %179

124:                                              ; preds = %119
  %125 = icmp sgt i32 %120, 0
  br i1 %125, label %126, label %153

126:                                              ; preds = %124
  %127 = sext i32 %117 to i64
  %128 = sext i32 %64 to i64
  br label %129

129:                                              ; preds = %138, %126
  %130 = phi i32 [ -1, %126 ], [ %139, %138 ]
  %131 = phi i64 [ %127, %126 ], [ %140, %138 ]
  %132 = getelementptr inbounds i16, i16* %0, i64 %131
  %133 = load i16, i16* %132, align 2
  switch i16 %133, label %138 [
    i16 63, label %134
    i16 35, label %142
  ]

134:                                              ; preds = %129
  %135 = icmp slt i32 %130, 0
  %136 = trunc i64 %131 to i32
  %137 = select i1 %135, i32 %136, i32 %130
  br label %138

138:                                              ; preds = %134, %129
  %139 = phi i32 [ %130, %129 ], [ %137, %134 ]
  %140 = add nsw i64 %131, 1
  %141 = icmp slt i64 %140, %128
  br i1 %141, label %129, label %153

142:                                              ; preds = %129
  %143 = trunc i64 %131 to i32
  %144 = icmp sgt i32 %143, -1
  br i1 %144, label %145, label %153

145:                                              ; preds = %142
  %146 = add nuw nsw i32 %143, 1
  %147 = sub nsw i32 %64, %146
  %148 = zext i32 %147 to i64
  %149 = shl nuw i64 %148, 32
  %150 = zext i32 %146 to i64
  %151 = or i64 %149, %150
  %152 = bitcast %"struct.url::Component"* %16 to i64*
  store i64 %151, i64* %152, align 4
  br label %155

153:                                              ; preds = %138, %142, %124
  %154 = phi i32 [ %130, %142 ], [ -1, %124 ], [ %139, %138 ]
  store i32 0, i32* %17, align 4
  store i32 -1, i32* %18, align 4
  br label %155

155:                                              ; preds = %153, %145
  %156 = phi i32 [ %130, %145 ], [ %154, %153 ]
  %157 = phi i32 [ %143, %145 ], [ %64, %153 ]
  %158 = icmp sgt i32 %156, -1
  br i1 %158, label %159, label %167

159:                                              ; preds = %155
  %160 = add nuw nsw i32 %156, 1
  %161 = sub nsw i32 %157, %160
  %162 = zext i32 %161 to i64
  %163 = shl nuw i64 %162, 32
  %164 = zext i32 %160 to i64
  %165 = or i64 %163, %164
  %166 = bitcast %"struct.url::Component"* %12 to i64*
  store i64 %165, i64* %166, align 4
  br label %168

167:                                              ; preds = %155
  store i32 0, i32* %13, align 4
  store i32 -1, i32* %14, align 4
  br label %168

168:                                              ; preds = %167, %159
  %169 = phi i32 [ %156, %159 ], [ %157, %167 ]
  %170 = icmp eq i32 %169, %117
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = sub nsw i32 %169, %117
  %173 = zext i32 %172 to i64
  %174 = shl nuw i64 %173, 32
  %175 = zext i32 %117 to i64
  %176 = or i64 %174, %175
  %177 = bitcast %"struct.url::Component"* %9 to i64*
  store i64 %176, i64* %177, align 4
  br label %179

178:                                              ; preds = %168
  store i32 0, i32* %10, align 4
  store i32 -1, i32* %11, align 4
  br label %179

179:                                              ; preds = %66, %116, %122, %171, %178
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url18ParseFileSystemURLEPKciPNS_6ParsedE(i8*, i32, %"struct.url::Parsed"*) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca %"struct.url::Parsed", align 16
  %6 = bitcast i64* %4 to %"struct.url::Component"*
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  %13 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7, i32 1
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %16 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 9
  %18 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %17, align 8
  %19 = icmp eq %"struct.url::Parsed"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  tail call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %18) #11
  %21 = bitcast %"struct.url::Parsed"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %17, align 8
  br label %22

22:                                               ; preds = %20, %3
  %23 = icmp sgt i32 %1, 0
  br i1 %23, label %24, label %65

24:                                               ; preds = %22
  %25 = load i8, i8* %0, align 1
  %26 = icmp ult i8 %25, 33
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = sext i32 %1 to i64
  %29 = add nsw i64 %28, -1
  br label %34

30:                                               ; preds = %34
  %31 = getelementptr inbounds i8, i8* %0, i64 %36
  %32 = load i8, i8* %31, align 1
  %33 = icmp ult i8 %32, 33
  br i1 %33, label %34, label %40

34:                                               ; preds = %30, %27
  %35 = phi i64 [ 0, %27 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp eq i64 %35, %29
  br i1 %37, label %38, label %30

38:                                               ; preds = %34
  %39 = trunc i64 %36 to i32
  br label %42

40:                                               ; preds = %30
  %41 = trunc i64 %36 to i32
  br label %42

42:                                               ; preds = %40, %38, %24
  %43 = phi i32 [ %39, %38 ], [ 0, %24 ], [ %41, %40 ]
  %44 = icmp slt i32 %43, %1
  br i1 %44, label %45, label %65

45:                                               ; preds = %42
  %46 = sext i32 %1 to i64
  %47 = add nsw i64 %46, -1
  %48 = getelementptr inbounds i8, i8* %0, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp ult i8 %49, 33
  br i1 %50, label %51, label %65

51:                                               ; preds = %45
  %52 = sext i32 %43 to i64
  br label %58

53:                                               ; preds = %58
  %54 = add nsw i64 %59, -1
  %55 = getelementptr inbounds i8, i8* %0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = icmp ult i8 %56, 33
  br i1 %57, label %58, label %63

58:                                               ; preds = %53, %51
  %59 = phi i64 [ %47, %51 ], [ %54, %53 ]
  %60 = icmp sgt i64 %59, %52
  br i1 %60, label %53, label %61

61:                                               ; preds = %58
  %62 = trunc i64 %59 to i32
  br label %65

63:                                               ; preds = %53
  %64 = trunc i64 %59 to i32
  br label %65

65:                                               ; preds = %63, %61, %45, %42, %22
  %66 = phi i32 [ %43, %42 ], [ 0, %22 ], [ %43, %61 ], [ %43, %45 ], [ %43, %63 ]
  %67 = phi i32 [ %1, %42 ], [ %1, %22 ], [ %62, %61 ], [ %1, %45 ], [ %64, %63 ]
  %68 = icmp eq i32 %67, %66
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %71, align 4
  br label %246

72:                                               ; preds = %65
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i8, i8* %0, i64 %73
  %75 = sub nsw i32 %67, %66
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %72
  %78 = zext i32 %75 to i64
  br label %79

79:                                               ; preds = %85, %77
  %80 = phi i64 [ 0, %77 ], [ %86, %85 ]
  %81 = phi i32 [ 0, %77 ], [ %87, %85 ]
  %82 = getelementptr inbounds i8, i8* %74, i64 %80
  %83 = load i8, i8* %82, align 1
  %84 = icmp ult i8 %83, 33
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = add nuw nsw i64 %80, 1
  %87 = add nuw nsw i32 %81, 1
  %88 = icmp eq i64 %86, %78
  br i1 %88, label %91, label %79

89:                                               ; preds = %79
  %90 = trunc i64 %80 to i32
  br label %91

91:                                               ; preds = %85, %89, %72
  %92 = phi i32 [ 0, %72 ], [ %90, %89 ], [ %87, %85 ]
  %93 = icmp slt i32 %92, %75
  br i1 %93, label %94, label %154

94:                                               ; preds = %91
  %95 = zext i32 %92 to i64
  %96 = zext i32 %75 to i64
  br label %97

97:                                               ; preds = %102, %94
  %98 = phi i64 [ %95, %94 ], [ %103, %102 ]
  %99 = getelementptr inbounds i8, i8* %74, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 58
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = add nuw nsw i64 %98, 1
  %104 = icmp eq i64 %103, %96
  br i1 %104, label %154, label %97

105:                                              ; preds = %97
  %106 = trunc i64 %98 to i32
  %107 = sub nsw i32 %106, %92
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = or i64 %109, %95
  %111 = bitcast %"struct.url::Parsed"* %2 to i64*
  store i64 %110, i64* %111, align 4
  %112 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %113 = add nsw i32 %92, %66
  store i32 %113, i32* %112, align 8
  %114 = add i32 %66, %106
  %115 = add nsw i32 %67, -1
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %246, label %117

117:                                              ; preds = %105
  %118 = add nsw i32 %114, 1
  %119 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = bitcast i64* %4 to i32*
  %121 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 0, i32* %120, align 8
  store i32 -1, i32* %121, align 4
  %122 = sext i32 %118 to i64
  %123 = getelementptr inbounds i8, i8* %0, i64 %122
  %124 = sub nsw i32 %67, %118
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %140

126:                                              ; preds = %117
  %127 = zext i32 %124 to i64
  br label %128

128:                                              ; preds = %134, %126
  %129 = phi i64 [ 0, %126 ], [ %135, %134 ]
  %130 = phi i32 [ 0, %126 ], [ %136, %134 ]
  %131 = getelementptr inbounds i8, i8* %123, i64 %129
  %132 = load i8, i8* %131, align 1
  %133 = icmp ult i8 %132, 33
  br i1 %133, label %134, label %138

134:                                              ; preds = %128
  %135 = add nuw nsw i64 %129, 1
  %136 = add nuw nsw i32 %130, 1
  %137 = icmp eq i64 %135, %127
  br i1 %137, label %140, label %128

138:                                              ; preds = %128
  %139 = trunc i64 %129 to i32
  br label %140

140:                                              ; preds = %134, %138, %117
  %141 = phi i32 [ 0, %117 ], [ %139, %138 ], [ %136, %134 ]
  %142 = icmp slt i32 %141, %124
  br i1 %142, label %143, label %245

143:                                              ; preds = %140
  %144 = zext i32 %141 to i64
  %145 = zext i32 %124 to i64
  br label %146

146:                                              ; preds = %151, %143
  %147 = phi i64 [ %144, %143 ], [ %152, %151 ]
  %148 = getelementptr inbounds i8, i8* %123, i64 %147
  %149 = load i8, i8* %148, align 1
  %150 = icmp eq i8 %149, 58
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = add nuw nsw i64 %147, 1
  %153 = icmp eq i64 %152, %145
  br i1 %153, label %245, label %146

154:                                              ; preds = %102, %91
  %155 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %156, align 4
  br label %246

157:                                              ; preds = %146
  %158 = trunc i64 %147 to i32
  %159 = sub nsw i32 %158, %141
  %160 = zext i32 %159 to i64
  %161 = shl nuw i64 %160, 32
  %162 = or i64 %161, %144
  store i64 %162, i64* %4, align 8
  %163 = add nsw i32 %141, %118
  store i32 %163, i32* %120, align 8
  %164 = add i32 %118, %158
  %165 = icmp eq i32 %164, %115
  br i1 %165, label %245, label %166

166:                                              ; preds = %157
  %167 = bitcast %"struct.url::Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %167) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %167, i8 -86, i64 72, i1 false) #11
  %168 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 0, i32 1
  %170 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 1, i32 0
  %171 = bitcast %"struct.url::Parsed"* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %171, align 16
  %172 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 2, i32 0
  %173 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3, i32 0
  %174 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %174, align 16
  %175 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 4, i32 0
  %176 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 0
  %177 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 1
  %178 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %178, align 16
  %179 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 0
  %180 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 1
  %181 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7, i32 1
  %182 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %182, align 16
  %183 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 8
  store i8 0, i8* %183, align 16
  %184 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 9
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %184, align 8
  %185 = call zeroext i1 @_ZN3url22CompareSchemeComponentEPKcRKNS_9ComponentES1_(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #11
  br i1 %185, label %186, label %187

186:                                              ; preds = %166
  call void @_ZN3url12ParseFileURLEPKciPNS_6ParsedE(i8* %123, i32 %124, %"struct.url::Parsed"* nonnull %5) #11
  br label %192

187:                                              ; preds = %166
  %188 = call zeroext i1 @_ZN3url22CompareSchemeComponentEPKcRKNS_9ComponentES1_(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #11
  br i1 %188, label %244, label %189

189:                                              ; preds = %187
  %190 = call zeroext i1 @_ZN3url10IsStandardEPKcRKNS_9ComponentE(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6) #11
  br i1 %190, label %191, label %244

191:                                              ; preds = %189
  call fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIcEEvPKT_iPNS_6ParsedE(i8* %123, i32 %124, %"struct.url::Parsed"* nonnull %5) #11
  br label %192

192:                                              ; preds = %191, %186
  %193 = load i32, i32* %168, align 16
  %194 = add nsw i32 %193, %118
  store i32 %194, i32* %168, align 16
  %195 = load i32, i32* %170, align 8
  %196 = add nsw i32 %195, %118
  store i32 %196, i32* %170, align 8
  %197 = load i32, i32* %172, align 16
  %198 = add nsw i32 %197, %118
  store i32 %198, i32* %172, align 16
  %199 = load i32, i32* %173, align 8
  %200 = add nsw i32 %199, %118
  store i32 %200, i32* %173, align 8
  %201 = load i32, i32* %175, align 16
  %202 = add nsw i32 %201, %118
  store i32 %202, i32* %175, align 16
  %203 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6
  %204 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 16
  %206 = add nsw i32 %205, %118
  store i32 %206, i32* %204, align 16
  %207 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = add nsw i32 %208, %118
  store i32 %209, i32* %207, align 8
  %210 = load i32, i32* %176, align 8
  %211 = add nsw i32 %210, %118
  store i32 %211, i32* %176, align 8
  %212 = bitcast %"struct.url::Component"* %203 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 16
  store i32 0, i32* %204, align 16
  store i32 -1, i32* %180, align 4
  %214 = bitcast %"struct.url::Component"* %15 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %214, align 8
  store i32 0, i32* %207, align 8
  store i32 -1, i32* %181, align 4
  call void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"* %2, %"struct.url::Parsed"* nonnull dereferenceable(80) %5) #11
  %215 = load i32, i32* %169, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %244, label %217

217:                                              ; preds = %192
  %218 = load i32, i32* %177, align 4
  %219 = icmp ne i32 %218, -1
  %220 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %184, align 8
  %221 = icmp eq %"struct.url::Parsed"* %220, null
  %222 = and i1 %219, %221
  br i1 %222, label %223, label %244

223:                                              ; preds = %217
  %224 = load i32, i32* %176, align 8
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i8, i8* %0, i64 %225
  %227 = load i8, i8* %226, align 1
  %228 = sext i8 %227 to i16
  switch i16 %228, label %244 [
    i16 92, label %229
    i16 47, label %229
  ]

229:                                              ; preds = %223, %223
  %230 = sext i32 %67 to i64
  br label %231

231:                                              ; preds = %235, %229
  %232 = phi i64 [ %233, %235 ], [ %225, %229 ]
  %233 = add nsw i64 %232, 1
  %234 = icmp slt i64 %233, %230
  br i1 %234, label %235, label %238

235:                                              ; preds = %231
  %236 = getelementptr inbounds i8, i8* %0, i64 %233
  %237 = load i8, i8* %236, align 1
  switch i8 %237, label %231 [
    i8 92, label %238
    i8 47, label %238
  ]

238:                                              ; preds = %235, %235, %231
  %239 = trunc i64 %233 to i32
  store i32 %239, i32* %11, align 8
  %240 = sub nsw i32 %239, %224
  %241 = sub nsw i32 %218, %240
  store i32 %241, i32* %12, align 4
  %242 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %17, align 8
  %243 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %242, i64 0, i32 5, i32 1
  store i32 %240, i32* %243, align 4
  br label %244

244:                                              ; preds = %238, %223, %217, %192, %189, %187
  call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %167) #11
  br label %245

245:                                              ; preds = %151, %244, %157, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  br label %246

246:                                              ; preds = %69, %105, %154, %245
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url18ParseFileSystemURLEPKDsiPNS_6ParsedE(i16*, i32, %"struct.url::Parsed"*) local_unnamed_addr #1 {
  %4 = alloca i64, align 8
  %5 = alloca %"struct.url::Parsed", align 16
  %6 = bitcast i64* %4 to %"struct.url::Component"*
  %7 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %8 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %8, align 4
  %9 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  %10 = bitcast i32* %9 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %10, align 4
  %11 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  %12 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  %13 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7, i32 0
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 7, i32 1
  store i32 -1, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %16 = bitcast i32* %11 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %16, align 4
  %17 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 9
  %18 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %17, align 8
  %19 = icmp eq %"struct.url::Parsed"* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  tail call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %18) #11
  %21 = bitcast %"struct.url::Parsed"* %18 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %17, align 8
  br label %22

22:                                               ; preds = %20, %3
  %23 = icmp sgt i32 %1, 0
  br i1 %23, label %24, label %65

24:                                               ; preds = %22
  %25 = load i16, i16* %0, align 2
  %26 = icmp ult i16 %25, 33
  br i1 %26, label %27, label %42

27:                                               ; preds = %24
  %28 = sext i32 %1 to i64
  %29 = add nsw i64 %28, -1
  br label %34

30:                                               ; preds = %34
  %31 = getelementptr inbounds i16, i16* %0, i64 %36
  %32 = load i16, i16* %31, align 2
  %33 = icmp ult i16 %32, 33
  br i1 %33, label %34, label %40

34:                                               ; preds = %30, %27
  %35 = phi i64 [ 0, %27 ], [ %36, %30 ]
  %36 = add nuw nsw i64 %35, 1
  %37 = icmp eq i64 %35, %29
  br i1 %37, label %38, label %30

38:                                               ; preds = %34
  %39 = trunc i64 %36 to i32
  br label %42

40:                                               ; preds = %30
  %41 = trunc i64 %36 to i32
  br label %42

42:                                               ; preds = %40, %38, %24
  %43 = phi i32 [ %39, %38 ], [ 0, %24 ], [ %41, %40 ]
  %44 = icmp slt i32 %43, %1
  br i1 %44, label %45, label %65

45:                                               ; preds = %42
  %46 = sext i32 %1 to i64
  %47 = add nsw i64 %46, -1
  %48 = getelementptr inbounds i16, i16* %0, i64 %47
  %49 = load i16, i16* %48, align 2
  %50 = icmp ult i16 %49, 33
  br i1 %50, label %51, label %65

51:                                               ; preds = %45
  %52 = sext i32 %43 to i64
  br label %58

53:                                               ; preds = %58
  %54 = add nsw i64 %59, -1
  %55 = getelementptr inbounds i16, i16* %0, i64 %54
  %56 = load i16, i16* %55, align 2
  %57 = icmp ult i16 %56, 33
  br i1 %57, label %58, label %63

58:                                               ; preds = %53, %51
  %59 = phi i64 [ %47, %51 ], [ %54, %53 ]
  %60 = icmp sgt i64 %59, %52
  br i1 %60, label %53, label %61

61:                                               ; preds = %58
  %62 = trunc i64 %59 to i32
  br label %65

63:                                               ; preds = %53
  %64 = trunc i64 %59 to i32
  br label %65

65:                                               ; preds = %63, %61, %45, %42, %22
  %66 = phi i32 [ %43, %42 ], [ 0, %22 ], [ %43, %61 ], [ %43, %45 ], [ %43, %63 ]
  %67 = phi i32 [ %1, %42 ], [ %1, %22 ], [ %62, %61 ], [ %1, %45 ], [ %64, %63 ]
  %68 = icmp eq i32 %67, %66
  br i1 %68, label %69, label %72

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %71, align 4
  br label %245

72:                                               ; preds = %65
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i16, i16* %0, i64 %73
  %75 = sub nsw i32 %67, %66
  %76 = icmp sgt i32 %75, 0
  br i1 %76, label %77, label %91

77:                                               ; preds = %72
  %78 = zext i32 %75 to i64
  br label %79

79:                                               ; preds = %85, %77
  %80 = phi i64 [ 0, %77 ], [ %86, %85 ]
  %81 = phi i32 [ 0, %77 ], [ %87, %85 ]
  %82 = getelementptr inbounds i16, i16* %74, i64 %80
  %83 = load i16, i16* %82, align 2
  %84 = icmp ult i16 %83, 33
  br i1 %84, label %85, label %89

85:                                               ; preds = %79
  %86 = add nuw nsw i64 %80, 1
  %87 = add nuw nsw i32 %81, 1
  %88 = icmp eq i64 %86, %78
  br i1 %88, label %91, label %79

89:                                               ; preds = %79
  %90 = trunc i64 %80 to i32
  br label %91

91:                                               ; preds = %85, %89, %72
  %92 = phi i32 [ 0, %72 ], [ %90, %89 ], [ %87, %85 ]
  %93 = icmp slt i32 %92, %75
  br i1 %93, label %94, label %154

94:                                               ; preds = %91
  %95 = zext i32 %92 to i64
  %96 = zext i32 %75 to i64
  br label %97

97:                                               ; preds = %102, %94
  %98 = phi i64 [ %95, %94 ], [ %103, %102 ]
  %99 = getelementptr inbounds i16, i16* %74, i64 %98
  %100 = load i16, i16* %99, align 2
  %101 = icmp eq i16 %100, 58
  br i1 %101, label %105, label %102

102:                                              ; preds = %97
  %103 = add nuw nsw i64 %98, 1
  %104 = icmp eq i64 %103, %96
  br i1 %104, label %154, label %97

105:                                              ; preds = %97
  %106 = trunc i64 %98 to i32
  %107 = sub nsw i32 %106, %92
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = or i64 %109, %95
  %111 = bitcast %"struct.url::Parsed"* %2 to i64*
  store i64 %110, i64* %111, align 4
  %112 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %113 = add nsw i32 %92, %66
  store i32 %113, i32* %112, align 8
  %114 = add i32 %66, %106
  %115 = add nsw i32 %67, -1
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %245, label %117

117:                                              ; preds = %105
  %118 = add nsw i32 %114, 1
  %119 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #11
  %120 = bitcast i64* %4 to i32*
  %121 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 0, i32* %120, align 8
  store i32 -1, i32* %121, align 4
  %122 = sext i32 %118 to i64
  %123 = getelementptr inbounds i16, i16* %0, i64 %122
  %124 = sub nsw i32 %67, %118
  %125 = icmp sgt i32 %124, 0
  br i1 %125, label %126, label %140

126:                                              ; preds = %117
  %127 = zext i32 %124 to i64
  br label %128

128:                                              ; preds = %134, %126
  %129 = phi i64 [ 0, %126 ], [ %135, %134 ]
  %130 = phi i32 [ 0, %126 ], [ %136, %134 ]
  %131 = getelementptr inbounds i16, i16* %123, i64 %129
  %132 = load i16, i16* %131, align 2
  %133 = icmp ult i16 %132, 33
  br i1 %133, label %134, label %138

134:                                              ; preds = %128
  %135 = add nuw nsw i64 %129, 1
  %136 = add nuw nsw i32 %130, 1
  %137 = icmp eq i64 %135, %127
  br i1 %137, label %140, label %128

138:                                              ; preds = %128
  %139 = trunc i64 %129 to i32
  br label %140

140:                                              ; preds = %134, %138, %117
  %141 = phi i32 [ 0, %117 ], [ %139, %138 ], [ %136, %134 ]
  %142 = icmp slt i32 %141, %124
  br i1 %142, label %143, label %244

143:                                              ; preds = %140
  %144 = zext i32 %141 to i64
  %145 = zext i32 %124 to i64
  br label %146

146:                                              ; preds = %151, %143
  %147 = phi i64 [ %144, %143 ], [ %152, %151 ]
  %148 = getelementptr inbounds i16, i16* %123, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = icmp eq i16 %149, 58
  br i1 %150, label %157, label %151

151:                                              ; preds = %146
  %152 = add nuw nsw i64 %147, 1
  %153 = icmp eq i64 %152, %145
  br i1 %153, label %244, label %146

154:                                              ; preds = %102, %91
  %155 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %155, align 4
  %156 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %156, align 4
  br label %245

157:                                              ; preds = %146
  %158 = trunc i64 %147 to i32
  %159 = sub nsw i32 %158, %141
  %160 = zext i32 %159 to i64
  %161 = shl nuw i64 %160, 32
  %162 = or i64 %161, %144
  store i64 %162, i64* %4, align 8
  %163 = add nsw i32 %141, %118
  store i32 %163, i32* %120, align 8
  %164 = add i32 %118, %158
  %165 = icmp eq i32 %164, %115
  br i1 %165, label %244, label %166

166:                                              ; preds = %157
  %167 = bitcast %"struct.url::Parsed"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %167) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %167, i8 -86, i64 72, i1 false) #11
  %168 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 0, i32 1
  %170 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 1, i32 0
  %171 = bitcast %"struct.url::Parsed"* %5 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %171, align 16
  %172 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 2, i32 0
  %173 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 3, i32 0
  %174 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %174, align 16
  %175 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 4, i32 0
  %176 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 0
  %177 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 5, i32 1
  %178 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %178, align 16
  %179 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 0
  %180 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6, i32 1
  %181 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7, i32 1
  %182 = bitcast i32* %179 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %182, align 16
  %183 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 8
  store i8 0, i8* %183, align 16
  %184 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 9
  store %"struct.url::Parsed"* null, %"struct.url::Parsed"** %184, align 8
  %185 = call zeroext i1 @_ZN3url22CompareSchemeComponentEPKDsRKNS_9ComponentEPKc(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #11
  br i1 %185, label %186, label %187

186:                                              ; preds = %166
  call void @_ZN3url12ParseFileURLEPKDsiPNS_6ParsedE(i16* %123, i32 %124, %"struct.url::Parsed"* nonnull %5) #11
  br label %192

187:                                              ; preds = %166
  %188 = call zeroext i1 @_ZN3url22CompareSchemeComponentEPKDsRKNS_9ComponentEPKc(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #11
  br i1 %188, label %243, label %189

189:                                              ; preds = %187
  %190 = call zeroext i1 @_ZN3url10IsStandardEPKDsRKNS_9ComponentE(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6) #11
  br i1 %190, label %191, label %243

191:                                              ; preds = %189
  call fastcc void @_ZN3url12_GLOBAL__N_118DoParseStandardURLIDsEEvPKT_iPNS_6ParsedE(i16* %123, i32 %124, %"struct.url::Parsed"* nonnull %5) #11
  br label %192

192:                                              ; preds = %191, %186
  %193 = load i32, i32* %168, align 16
  %194 = add nsw i32 %193, %118
  store i32 %194, i32* %168, align 16
  %195 = load i32, i32* %170, align 8
  %196 = add nsw i32 %195, %118
  store i32 %196, i32* %170, align 8
  %197 = load i32, i32* %172, align 16
  %198 = add nsw i32 %197, %118
  store i32 %198, i32* %172, align 16
  %199 = load i32, i32* %173, align 8
  %200 = add nsw i32 %199, %118
  store i32 %200, i32* %173, align 8
  %201 = load i32, i32* %175, align 16
  %202 = add nsw i32 %201, %118
  store i32 %202, i32* %175, align 16
  %203 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 6
  %204 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %203, i64 0, i32 0
  %205 = load i32, i32* %204, align 16
  %206 = add nsw i32 %205, %118
  store i32 %206, i32* %204, align 16
  %207 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %5, i64 0, i32 7, i32 0
  %208 = load i32, i32* %207, align 8
  %209 = add nsw i32 %208, %118
  store i32 %209, i32* %207, align 8
  %210 = load i32, i32* %176, align 8
  %211 = add nsw i32 %210, %118
  store i32 %211, i32* %176, align 8
  %212 = bitcast %"struct.url::Component"* %203 to <2 x i64>*
  %213 = load <2 x i64>, <2 x i64>* %212, align 16
  store i32 0, i32* %204, align 16
  store i32 -1, i32* %180, align 4
  %214 = bitcast %"struct.url::Component"* %15 to <2 x i64>*
  store <2 x i64> %213, <2 x i64>* %214, align 8
  store i32 0, i32* %207, align 8
  store i32 -1, i32* %181, align 4
  call void @_ZN3url6Parsed16set_inner_parsedERKS0_(%"struct.url::Parsed"* %2, %"struct.url::Parsed"* nonnull dereferenceable(80) %5) #11
  %215 = load i32, i32* %169, align 4
  %216 = icmp eq i32 %215, -1
  br i1 %216, label %243, label %217

217:                                              ; preds = %192
  %218 = load i32, i32* %177, align 4
  %219 = icmp ne i32 %218, -1
  %220 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %184, align 8
  %221 = icmp eq %"struct.url::Parsed"* %220, null
  %222 = and i1 %219, %221
  br i1 %222, label %223, label %243

223:                                              ; preds = %217
  %224 = load i32, i32* %176, align 8
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds i16, i16* %0, i64 %225
  %227 = load i16, i16* %226, align 2
  switch i16 %227, label %243 [
    i16 92, label %228
    i16 47, label %228
  ]

228:                                              ; preds = %223, %223
  %229 = sext i32 %67 to i64
  br label %230

230:                                              ; preds = %234, %228
  %231 = phi i64 [ %232, %234 ], [ %225, %228 ]
  %232 = add nsw i64 %231, 1
  %233 = icmp slt i64 %232, %229
  br i1 %233, label %234, label %237

234:                                              ; preds = %230
  %235 = getelementptr inbounds i16, i16* %0, i64 %232
  %236 = load i16, i16* %235, align 2
  switch i16 %236, label %230 [
    i16 92, label %237
    i16 47, label %237
  ]

237:                                              ; preds = %234, %234, %230
  %238 = trunc i64 %232 to i32
  store i32 %238, i32* %11, align 8
  %239 = sub nsw i32 %238, %224
  %240 = sub nsw i32 %218, %239
  store i32 %240, i32* %12, align 4
  %241 = load %"struct.url::Parsed"*, %"struct.url::Parsed"** %17, align 8
  %242 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %241, i64 0, i32 5, i32 1
  store i32 %239, i32* %242, align 4
  br label %243

243:                                              ; preds = %237, %223, %217, %192, %189, %187
  call void @_ZN3url6ParsedD2Ev(%"struct.url::Parsed"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %167) #11
  br label %244

244:                                              ; preds = %151, %243, %157, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #11
  br label %245

245:                                              ; preds = %69, %105, %154, %244
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url14ParseMailtoURLEPKciPNS_6ParsedE(i8* nocapture readonly, i32, %"struct.url::Parsed"*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %5, align 4
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %9 = bitcast %"struct.url::Component"* %8 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %9, align 4
  %10 = icmp sgt i32 %1, 0
  br i1 %10, label %11, label %52

11:                                               ; preds = %3
  %12 = load i8, i8* %0, align 1
  %13 = icmp ult i8 %12, 33
  br i1 %13, label %14, label %29

14:                                               ; preds = %11
  %15 = sext i32 %1 to i64
  %16 = add nsw i64 %15, -1
  br label %21

17:                                               ; preds = %21
  %18 = getelementptr inbounds i8, i8* %0, i64 %23
  %19 = load i8, i8* %18, align 1
  %20 = icmp ult i8 %19, 33
  br i1 %20, label %21, label %27

21:                                               ; preds = %17, %14
  %22 = phi i64 [ 0, %14 ], [ %23, %17 ]
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp eq i64 %22, %16
  br i1 %24, label %25, label %17

25:                                               ; preds = %21
  %26 = trunc i64 %23 to i32
  br label %29

27:                                               ; preds = %17
  %28 = trunc i64 %23 to i32
  br label %29

29:                                               ; preds = %27, %25, %11
  %30 = phi i32 [ %26, %25 ], [ 0, %11 ], [ %28, %27 ]
  %31 = icmp slt i32 %30, %1
  br i1 %31, label %32, label %52

32:                                               ; preds = %29
  %33 = sext i32 %1 to i64
  %34 = add nsw i64 %33, -1
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp ult i8 %36, 33
  br i1 %37, label %38, label %52

38:                                               ; preds = %32
  %39 = sext i32 %30 to i64
  br label %45

40:                                               ; preds = %45
  %41 = add nsw i64 %46, -1
  %42 = getelementptr inbounds i8, i8* %0, i64 %41
  %43 = load i8, i8* %42, align 1
  %44 = icmp ult i8 %43, 33
  br i1 %44, label %45, label %50

45:                                               ; preds = %40, %38
  %46 = phi i64 [ %34, %38 ], [ %41, %40 ]
  %47 = icmp sgt i64 %46, %39
  br i1 %47, label %40, label %48

48:                                               ; preds = %45
  %49 = trunc i64 %46 to i32
  br label %52

50:                                               ; preds = %40
  %51 = trunc i64 %46 to i32
  br label %52

52:                                               ; preds = %50, %48, %32, %29, %3
  %53 = phi i32 [ %30, %29 ], [ 0, %3 ], [ %30, %48 ], [ %30, %32 ], [ %30, %50 ]
  %54 = phi i32 [ %1, %29 ], [ %1, %3 ], [ %49, %48 ], [ %1, %32 ], [ %51, %50 ]
  %55 = icmp eq i32 %54, %53
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %60, align 4
  br label %149

61:                                               ; preds = %52
  %62 = sext i32 %53 to i64
  %63 = getelementptr inbounds i8, i8* %0, i64 %62
  %64 = sub nsw i32 %54, %53
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %80

66:                                               ; preds = %61
  %67 = zext i32 %64 to i64
  br label %68

68:                                               ; preds = %74, %66
  %69 = phi i64 [ 0, %66 ], [ %75, %74 ]
  %70 = phi i32 [ 0, %66 ], [ %76, %74 ]
  %71 = getelementptr inbounds i8, i8* %63, i64 %69
  %72 = load i8, i8* %71, align 1
  %73 = icmp ult i8 %72, 33
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = add nuw nsw i64 %69, 1
  %76 = add nuw nsw i32 %70, 1
  %77 = icmp eq i64 %75, %67
  br i1 %77, label %80, label %68

78:                                               ; preds = %68
  %79 = trunc i64 %69 to i32
  br label %80

80:                                               ; preds = %74, %78, %61
  %81 = phi i32 [ 0, %61 ], [ %79, %78 ], [ %76, %74 ]
  %82 = icmp slt i32 %81, %64
  br i1 %82, label %83, label %110

83:                                               ; preds = %80
  %84 = zext i32 %81 to i64
  %85 = zext i32 %64 to i64
  br label %86

86:                                               ; preds = %91, %83
  %87 = phi i64 [ %84, %83 ], [ %92, %91 ]
  %88 = getelementptr inbounds i8, i8* %63, i64 %87
  %89 = load i8, i8* %88, align 1
  %90 = icmp eq i8 %89, 58
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = add nuw nsw i64 %87, 1
  %93 = icmp eq i64 %92, %85
  br i1 %93, label %110, label %86

94:                                               ; preds = %86
  %95 = trunc i64 %87 to i32
  %96 = sub nsw i32 %95, %81
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 %97, 32
  %99 = or i64 %98, %84
  %100 = bitcast %"struct.url::Parsed"* %2 to i64*
  store i64 %99, i64* %100, align 4
  %101 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %102 = add nsw i32 %81, %53
  store i32 %102, i32* %101, align 8
  %103 = add i32 %53, %95
  %104 = add nsw i32 %54, -1
  %105 = icmp eq i32 %103, %104
  %106 = add nsw i32 %103, 1
  %107 = select i1 %105, i32 -1, i32 %54
  %108 = select i1 %105, i32 -1, i32 %106
  %109 = sext i32 %108 to i64
  br label %113

110:                                              ; preds = %91, %80
  %111 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %112, align 4
  br label %113

113:                                              ; preds = %110, %94
  %114 = phi i64 [ %109, %94 ], [ %62, %110 ]
  %115 = phi i32 [ %107, %94 ], [ %54, %110 ]
  %116 = phi i32 [ %108, %94 ], [ %53, %110 ]
  %117 = sext i32 %115 to i64
  br label %118

118:                                              ; preds = %121, %113
  %119 = phi i64 [ %125, %121 ], [ %114, %113 ]
  %120 = icmp slt i64 %119, %117
  br i1 %120, label %121, label %135

121:                                              ; preds = %118
  %122 = getelementptr inbounds i8, i8* %0, i64 %119
  %123 = load i8, i8* %122, align 1
  %124 = icmp eq i8 %123, 63
  %125 = add nsw i64 %119, 1
  br i1 %124, label %126, label %118

126:                                              ; preds = %121
  %127 = trunc i64 %119 to i32
  %128 = trunc i64 %125 to i32
  %129 = sub nsw i32 %115, %128
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = and i64 %125, 4294967295
  %133 = or i64 %131, %132
  %134 = bitcast %"struct.url::Component"* %8 to i64*
  store i64 %133, i64* %134, align 8
  br label %135

135:                                              ; preds = %118, %126
  %136 = phi i32 [ %127, %126 ], [ %115, %118 ]
  %137 = icmp eq i32 %136, %116
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %140, align 4
  br label %149

141:                                              ; preds = %135
  %142 = sub nsw i32 %136, %116
  %143 = zext i32 %142 to i64
  %144 = shl nuw i64 %143, 32
  %145 = zext i32 %116 to i64
  %146 = or i64 %144, %145
  %147 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  %148 = bitcast %"struct.url::Component"* %147 to i64*
  store i64 %146, i64* %148, align 8
  br label %149

149:                                              ; preds = %56, %138, %141
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url14ParseMailtoURLEPKDsiPNS_6ParsedE(i16* nocapture readonly, i32, %"struct.url::Parsed"*) local_unnamed_addr #5 {
  %4 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 1, i32 0
  %5 = bitcast i32* %4 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %5, align 4
  %6 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 3, i32 0
  %7 = bitcast i32* %6 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 6
  %9 = bitcast %"struct.url::Component"* %8 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %9, align 4
  %10 = icmp sgt i32 %1, 0
  br i1 %10, label %11, label %52

11:                                               ; preds = %3
  %12 = load i16, i16* %0, align 2
  %13 = icmp ult i16 %12, 33
  br i1 %13, label %14, label %29

14:                                               ; preds = %11
  %15 = sext i32 %1 to i64
  %16 = add nsw i64 %15, -1
  br label %21

17:                                               ; preds = %21
  %18 = getelementptr inbounds i16, i16* %0, i64 %23
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 33
  br i1 %20, label %21, label %27

21:                                               ; preds = %17, %14
  %22 = phi i64 [ 0, %14 ], [ %23, %17 ]
  %23 = add nuw nsw i64 %22, 1
  %24 = icmp eq i64 %22, %16
  br i1 %24, label %25, label %17

25:                                               ; preds = %21
  %26 = trunc i64 %23 to i32
  br label %29

27:                                               ; preds = %17
  %28 = trunc i64 %23 to i32
  br label %29

29:                                               ; preds = %27, %25, %11
  %30 = phi i32 [ %26, %25 ], [ 0, %11 ], [ %28, %27 ]
  %31 = icmp slt i32 %30, %1
  br i1 %31, label %32, label %52

32:                                               ; preds = %29
  %33 = sext i32 %1 to i64
  %34 = add nsw i64 %33, -1
  %35 = getelementptr inbounds i16, i16* %0, i64 %34
  %36 = load i16, i16* %35, align 2
  %37 = icmp ult i16 %36, 33
  br i1 %37, label %38, label %52

38:                                               ; preds = %32
  %39 = sext i32 %30 to i64
  br label %45

40:                                               ; preds = %45
  %41 = add nsw i64 %46, -1
  %42 = getelementptr inbounds i16, i16* %0, i64 %41
  %43 = load i16, i16* %42, align 2
  %44 = icmp ult i16 %43, 33
  br i1 %44, label %45, label %50

45:                                               ; preds = %40, %38
  %46 = phi i64 [ %34, %38 ], [ %41, %40 ]
  %47 = icmp sgt i64 %46, %39
  br i1 %47, label %40, label %48

48:                                               ; preds = %45
  %49 = trunc i64 %46 to i32
  br label %52

50:                                               ; preds = %40
  %51 = trunc i64 %46 to i32
  br label %52

52:                                               ; preds = %50, %48, %32, %29, %3
  %53 = phi i32 [ %30, %29 ], [ 0, %3 ], [ %30, %48 ], [ %30, %32 ], [ %30, %50 ]
  %54 = phi i32 [ %1, %29 ], [ %1, %3 ], [ %49, %48 ], [ %1, %32 ], [ %51, %50 ]
  %55 = icmp eq i32 %54, %53
  br i1 %55, label %56, label %61

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %60, align 4
  br label %149

61:                                               ; preds = %52
  %62 = sext i32 %53 to i64
  %63 = getelementptr inbounds i16, i16* %0, i64 %62
  %64 = sub nsw i32 %54, %53
  %65 = icmp sgt i32 %64, 0
  br i1 %65, label %66, label %80

66:                                               ; preds = %61
  %67 = zext i32 %64 to i64
  br label %68

68:                                               ; preds = %74, %66
  %69 = phi i64 [ 0, %66 ], [ %75, %74 ]
  %70 = phi i32 [ 0, %66 ], [ %76, %74 ]
  %71 = getelementptr inbounds i16, i16* %63, i64 %69
  %72 = load i16, i16* %71, align 2
  %73 = icmp ult i16 %72, 33
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = add nuw nsw i64 %69, 1
  %76 = add nuw nsw i32 %70, 1
  %77 = icmp eq i64 %75, %67
  br i1 %77, label %80, label %68

78:                                               ; preds = %68
  %79 = trunc i64 %69 to i32
  br label %80

80:                                               ; preds = %74, %78, %61
  %81 = phi i32 [ 0, %61 ], [ %79, %78 ], [ %76, %74 ]
  %82 = icmp slt i32 %81, %64
  br i1 %82, label %83, label %110

83:                                               ; preds = %80
  %84 = zext i32 %81 to i64
  %85 = zext i32 %64 to i64
  br label %86

86:                                               ; preds = %91, %83
  %87 = phi i64 [ %84, %83 ], [ %92, %91 ]
  %88 = getelementptr inbounds i16, i16* %63, i64 %87
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 58
  br i1 %90, label %94, label %91

91:                                               ; preds = %86
  %92 = add nuw nsw i64 %87, 1
  %93 = icmp eq i64 %92, %85
  br i1 %93, label %110, label %86

94:                                               ; preds = %86
  %95 = trunc i64 %87 to i32
  %96 = sub nsw i32 %95, %81
  %97 = zext i32 %96 to i64
  %98 = shl nuw i64 %97, 32
  %99 = or i64 %98, %84
  %100 = bitcast %"struct.url::Parsed"* %2 to i64*
  store i64 %99, i64* %100, align 4
  %101 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  %102 = add nsw i32 %81, %53
  store i32 %102, i32* %101, align 8
  %103 = add i32 %53, %95
  %104 = add nsw i32 %54, -1
  %105 = icmp eq i32 %103, %104
  %106 = add nsw i32 %103, 1
  %107 = select i1 %105, i32 -1, i32 %54
  %108 = select i1 %105, i32 -1, i32 %106
  %109 = sext i32 %108 to i64
  br label %113

110:                                              ; preds = %91, %80
  %111 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 0
  store i32 0, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 0, i32 1
  store i32 -1, i32* %112, align 4
  br label %113

113:                                              ; preds = %110, %94
  %114 = phi i64 [ %109, %94 ], [ %62, %110 ]
  %115 = phi i32 [ %107, %94 ], [ %54, %110 ]
  %116 = phi i32 [ %108, %94 ], [ %53, %110 ]
  %117 = sext i32 %115 to i64
  br label %118

118:                                              ; preds = %121, %113
  %119 = phi i64 [ %125, %121 ], [ %114, %113 ]
  %120 = icmp slt i64 %119, %117
  br i1 %120, label %121, label %135

121:                                              ; preds = %118
  %122 = getelementptr inbounds i16, i16* %0, i64 %119
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 63
  %125 = add nsw i64 %119, 1
  br i1 %124, label %126, label %118

126:                                              ; preds = %121
  %127 = trunc i64 %119 to i32
  %128 = trunc i64 %125 to i32
  %129 = sub nsw i32 %115, %128
  %130 = zext i32 %129 to i64
  %131 = shl nuw i64 %130, 32
  %132 = and i64 %125, 4294967295
  %133 = or i64 %131, %132
  %134 = bitcast %"struct.url::Component"* %8 to i64*
  store i64 %133, i64* %134, align 8
  br label %135

135:                                              ; preds = %118, %126
  %136 = phi i32 [ %127, %126 ], [ %115, %118 ]
  %137 = icmp eq i32 %136, %116
  br i1 %137, label %138, label %141

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 0
  store i32 0, i32* %139, align 4
  %140 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5, i32 1
  store i32 -1, i32* %140, align 4
  br label %149

141:                                              ; preds = %135
  %142 = sub nsw i32 %136, %116
  %143 = zext i32 %142 to i64
  %144 = shl nuw i64 %143, 32
  %145 = zext i32 %116 to i64
  %146 = or i64 %144, %145
  %147 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %2, i64 0, i32 5
  %148 = bitcast %"struct.url::Component"* %147 to i64*
  store i64 %146, i64* %148, align 8
  br label %149

149:                                              ; preds = %56, %138, %141
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url17ParsePathInternalEPKcRKNS_9ComponentEPS2_S5_S5_(i8* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %6 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %15, align 4
  br label %82

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %7, 0
  %20 = add nsw i32 %18, %7
  br i1 %19, label %21, label %49

21:                                               ; preds = %16
  %22 = sext i32 %18 to i64
  %23 = sext i32 %20 to i64
  br label %24

24:                                               ; preds = %34, %21
  %25 = phi i32 [ -1, %21 ], [ %35, %34 ]
  %26 = phi i64 [ %22, %21 ], [ %36, %34 ]
  %27 = getelementptr inbounds i8, i8* %0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = sext i8 %28 to i32
  switch i32 %29, label %34 [
    i32 63, label %30
    i32 35, label %38
  ]

30:                                               ; preds = %24
  %31 = icmp slt i32 %25, 0
  %32 = trunc i64 %26 to i32
  %33 = select i1 %31, i32 %32, i32 %25
  br label %34

34:                                               ; preds = %30, %24
  %35 = phi i32 [ %25, %24 ], [ %33, %30 ]
  %36 = add nsw i64 %26, 1
  %37 = icmp slt i64 %36, %23
  br i1 %37, label %24, label %49

38:                                               ; preds = %24
  %39 = trunc i64 %26 to i32
  %40 = icmp sgt i32 %39, -1
  br i1 %40, label %41, label %49

41:                                               ; preds = %38
  %42 = add nuw nsw i32 %39, 1
  %43 = sub nsw i32 %20, %42
  %44 = zext i32 %43 to i64
  %45 = shl nuw i64 %44, 32
  %46 = zext i32 %42 to i64
  %47 = or i64 %45, %46
  %48 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %47, i64* %48, align 4
  br label %53

49:                                               ; preds = %34, %38, %16
  %50 = phi i32 [ %25, %38 ], [ -1, %16 ], [ %35, %34 ]
  %51 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %52, align 4
  br label %53

53:                                               ; preds = %49, %41
  %54 = phi i32 [ %25, %41 ], [ %50, %49 ]
  %55 = phi i32 [ %39, %41 ], [ %20, %49 ]
  %56 = icmp sgt i32 %54, -1
  br i1 %56, label %57, label %65

57:                                               ; preds = %53
  %58 = add nuw nsw i32 %54, 1
  %59 = sub nsw i32 %55, %58
  %60 = zext i32 %59 to i64
  %61 = shl nuw i64 %60, 32
  %62 = zext i32 %58 to i64
  %63 = or i64 %61, %62
  %64 = bitcast %"struct.url::Component"* %3 to i64*
  store i64 %63, i64* %64, align 4
  br label %68

65:                                               ; preds = %53
  %66 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %66, align 4
  %67 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %67, align 4
  br label %68

68:                                               ; preds = %65, %57
  %69 = phi i32 [ %54, %57 ], [ %55, %65 ]
  %70 = load i32, i32* %17, align 4
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %79, label %72

72:                                               ; preds = %68
  %73 = sub nsw i32 %69, %70
  %74 = zext i32 %73 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %70 to i64
  %77 = or i64 %75, %76
  %78 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %77, i64* %78, align 4
  br label %82

79:                                               ; preds = %68
  %80 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %80, align 4
  %81 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %81, align 4
  br label %82

82:                                               ; preds = %9, %72, %79
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3url17ParsePathInternalEPKDsRKNS_9ComponentEPS2_S5_S5_(i16* nocapture readonly, %"struct.url::Component"* nocapture readonly dereferenceable(8), %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture, %"struct.url::Component"* nocapture) local_unnamed_addr #5 {
  %6 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %11, align 4
  %12 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %14, align 4
  %15 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %15, align 4
  br label %81

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %7, 0
  %20 = add nsw i32 %18, %7
  br i1 %19, label %21, label %48

21:                                               ; preds = %16
  %22 = sext i32 %18 to i64
  %23 = sext i32 %20 to i64
  br label %24

24:                                               ; preds = %33, %21
  %25 = phi i32 [ -1, %21 ], [ %34, %33 ]
  %26 = phi i64 [ %22, %21 ], [ %35, %33 ]
  %27 = getelementptr inbounds i16, i16* %0, i64 %26
  %28 = load i16, i16* %27, align 2
  switch i16 %28, label %33 [
    i16 63, label %29
    i16 35, label %37
  ]

29:                                               ; preds = %24
  %30 = icmp slt i32 %25, 0
  %31 = trunc i64 %26 to i32
  %32 = select i1 %30, i32 %31, i32 %25
  br label %33

33:                                               ; preds = %29, %24
  %34 = phi i32 [ %25, %24 ], [ %32, %29 ]
  %35 = add nsw i64 %26, 1
  %36 = icmp slt i64 %35, %23
  br i1 %36, label %24, label %48

37:                                               ; preds = %24
  %38 = trunc i64 %26 to i32
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %40, label %48

40:                                               ; preds = %37
  %41 = add nuw nsw i32 %38, 1
  %42 = sub nsw i32 %20, %41
  %43 = zext i32 %42 to i64
  %44 = shl nuw i64 %43, 32
  %45 = zext i32 %41 to i64
  %46 = or i64 %44, %45
  %47 = bitcast %"struct.url::Component"* %4 to i64*
  store i64 %46, i64* %47, align 4
  br label %52

48:                                               ; preds = %33, %37, %16
  %49 = phi i32 [ %25, %37 ], [ -1, %16 ], [ %34, %33 ]
  %50 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 0
  store i32 0, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %4, i64 0, i32 1
  store i32 -1, i32* %51, align 4
  br label %52

52:                                               ; preds = %48, %40
  %53 = phi i32 [ %25, %40 ], [ %49, %48 ]
  %54 = phi i32 [ %38, %40 ], [ %20, %48 ]
  %55 = icmp sgt i32 %53, -1
  br i1 %55, label %56, label %64

56:                                               ; preds = %52
  %57 = add nuw nsw i32 %53, 1
  %58 = sub nsw i32 %54, %57
  %59 = zext i32 %58 to i64
  %60 = shl nuw i64 %59, 32
  %61 = zext i32 %57 to i64
  %62 = or i64 %60, %61
  %63 = bitcast %"struct.url::Component"* %3 to i64*
  store i64 %62, i64* %63, align 4
  br label %67

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 0
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %3, i64 0, i32 1
  store i32 -1, i32* %66, align 4
  br label %67

67:                                               ; preds = %64, %56
  %68 = phi i32 [ %53, %56 ], [ %54, %64 ]
  %69 = load i32, i32* %17, align 4
  %70 = icmp eq i32 %68, %69
  br i1 %70, label %78, label %71

71:                                               ; preds = %67
  %72 = sub nsw i32 %68, %69
  %73 = zext i32 %72 to i64
  %74 = shl nuw i64 %73, 32
  %75 = zext i32 %69 to i64
  %76 = or i64 %74, %75
  %77 = bitcast %"struct.url::Component"* %2 to i64*
  store i64 %76, i64* %77, align 4
  br label %81

78:                                               ; preds = %67
  %79 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 0
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %2, i64 0, i32 1
  store i32 -1, i32* %80, align 4
  br label %81

81:                                               ; preds = %9, %71, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url16ParseAfterSchemeEPKciiPNS_6ParsedE(i8* nocapture readonly, i32, i32, %"struct.url::Parsed"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIcEEvPKT_iiPNS_6ParsedE(i8* %0, i32 %1, i32 %2, %"struct.url::Parsed"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIcEEvPKT_iiPNS_6ParsedE(i8* nocapture readonly, i32, i32, %"struct.url::Parsed"* nocapture) unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.url::Component"*
  %7 = icmp sgt i32 %1, %2
  br i1 %7, label %8, label %26

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = sub i32 %1, %2
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %19, %8
  %13 = phi i64 [ 0, %8 ], [ %20, %19 ]
  %14 = phi i64 [ %9, %8 ], [ %22, %19 ]
  %15 = phi i32 [ 0, %8 ], [ %21, %19 ]
  %16 = getelementptr inbounds i8, i8* %0, i64 %14
  %17 = load i8, i8* %16, align 1
  %18 = sext i8 %17 to i16
  switch i16 %18, label %24 [
    i16 92, label %19
    i16 47, label %19
  ]

19:                                               ; preds = %12, %12
  %20 = add nuw nsw i64 %13, 1
  %21 = add nuw nsw i32 %15, 1
  %22 = add nsw i64 %14, 1
  %23 = icmp eq i64 %20, %11
  br i1 %23, label %26, label %12

24:                                               ; preds = %12
  %25 = trunc i64 %13 to i32
  br label %26

26:                                               ; preds = %19, %4, %24
  %27 = phi i32 [ 0, %4 ], [ %25, %24 ], [ %21, %19 ]
  %28 = add nsw i32 %27, %2
  %29 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = bitcast i64* %5 to i32*
  %31 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 0, i32* %30, align 8
  store i32 -1, i32* %31, align 4
  %32 = icmp slt i32 %28, %1
  br i1 %32, label %33, label %46

33:                                               ; preds = %26
  %34 = sext i32 %28 to i64
  br label %35

35:                                               ; preds = %40, %33
  %36 = phi i64 [ %34, %33 ], [ %41, %40 ]
  %37 = getelementptr inbounds i8, i8* %0, i64 %36
  %38 = load i8, i8* %37, align 1
  %39 = sext i8 %38 to i16
  switch i16 %39, label %40 [
    i16 92, label %44
    i16 63, label %44
    i16 47, label %44
    i16 35, label %44
  ]

40:                                               ; preds = %35
  %41 = add nsw i64 %36, 1
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %42, %1
  br i1 %43, label %46, label %35

44:                                               ; preds = %35, %35, %35, %35
  %45 = trunc i64 %36 to i32
  br label %46

46:                                               ; preds = %40, %26, %44
  %47 = phi i32 [ %1, %26 ], [ %45, %44 ], [ %1, %40 ]
  %48 = sub nsw i32 %47, %28
  %49 = zext i32 %48 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %28 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %5, align 8
  %53 = icmp eq i32 %47, %1
  %54 = sub nsw i32 %1, %47
  %55 = select i1 %53, i32 0, i32 %47
  %56 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 1
  %57 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 2
  %58 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 3
  %59 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 4
  call fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIcEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i8* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, %"struct.url::Component"* %56, %"struct.url::Component"* %57, %"struct.url::Component"* %58, %"struct.url::Component"* %59)
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5
  %61 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6
  %62 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7
  %63 = icmp eq i32 %54, -1
  %64 = or i1 %53, %63
  br i1 %64, label %65, label %69

65:                                               ; preds = %46
  %66 = bitcast %"struct.url::Component"* %60 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %66, align 4
  %67 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %62, i64 0, i32 0
  store i32 0, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %68, align 4
  br label %132

69:                                               ; preds = %46
  %70 = icmp sgt i32 %54, 0
  %71 = add nsw i32 %55, %54
  br i1 %70, label %72, label %100

72:                                               ; preds = %69
  %73 = sext i32 %55 to i64
  %74 = sext i32 %71 to i64
  br label %75

75:                                               ; preds = %85, %72
  %76 = phi i32 [ -1, %72 ], [ %86, %85 ]
  %77 = phi i64 [ %73, %72 ], [ %87, %85 ]
  %78 = getelementptr inbounds i8, i8* %0, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = sext i8 %79 to i32
  switch i32 %80, label %85 [
    i32 63, label %81
    i32 35, label %89
  ]

81:                                               ; preds = %75
  %82 = icmp slt i32 %76, 0
  %83 = trunc i64 %77 to i32
  %84 = select i1 %82, i32 %83, i32 %76
  br label %85

85:                                               ; preds = %81, %75
  %86 = phi i32 [ %76, %75 ], [ %84, %81 ]
  %87 = add nsw i64 %77, 1
  %88 = icmp slt i64 %87, %74
  br i1 %88, label %75, label %100

89:                                               ; preds = %75
  %90 = trunc i64 %77 to i32
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %92, label %100

92:                                               ; preds = %89
  %93 = add nuw nsw i32 %90, 1
  %94 = sub nsw i32 %71, %93
  %95 = zext i32 %94 to i64
  %96 = shl nuw i64 %95, 32
  %97 = zext i32 %93 to i64
  %98 = or i64 %96, %97
  %99 = bitcast %"struct.url::Component"* %62 to i64*
  store i64 %98, i64* %99, align 4
  br label %104

100:                                              ; preds = %85, %89, %69
  %101 = phi i32 [ %76, %89 ], [ -1, %69 ], [ %86, %85 ]
  %102 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %62, i64 0, i32 0
  store i32 0, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %103, align 4
  br label %104

104:                                              ; preds = %100, %92
  %105 = phi i32 [ %76, %92 ], [ %101, %100 ]
  %106 = phi i32 [ %90, %92 ], [ %71, %100 ]
  %107 = icmp sgt i32 %105, -1
  br i1 %107, label %108, label %116

108:                                              ; preds = %104
  %109 = add nuw nsw i32 %105, 1
  %110 = sub nsw i32 %106, %109
  %111 = zext i32 %110 to i64
  %112 = shl nuw i64 %111, 32
  %113 = zext i32 %109 to i64
  %114 = or i64 %112, %113
  %115 = bitcast %"struct.url::Component"* %61 to i64*
  store i64 %114, i64* %115, align 4
  br label %119

116:                                              ; preds = %104
  %117 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %61, i64 0, i32 0
  store i32 0, i32* %117, align 4
  %118 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6, i32 1
  store i32 -1, i32* %118, align 4
  br label %119

119:                                              ; preds = %116, %108
  %120 = phi i32 [ %105, %108 ], [ %106, %116 ]
  %121 = icmp eq i32 %120, %55
  br i1 %121, label %129, label %122

122:                                              ; preds = %119
  %123 = sub nsw i32 %120, %55
  %124 = zext i32 %123 to i64
  %125 = shl nuw i64 %124, 32
  %126 = zext i32 %55 to i64
  %127 = or i64 %125, %126
  %128 = bitcast %"struct.url::Component"* %60 to i64*
  store i64 %127, i64* %128, align 4
  br label %132

129:                                              ; preds = %119
  %130 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %60, i64 0, i32 0
  store i32 0, i32* %130, align 4
  %131 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5, i32 1
  store i32 -1, i32* %131, align 4
  br label %132

132:                                              ; preds = %65, %122, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url16ParseAfterSchemeEPKDsiiPNS_6ParsedE(i16* nocapture readonly, i32, i32, %"struct.url::Parsed"* nocapture) local_unnamed_addr #1 {
  tail call fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIDsEEvPKT_iiPNS_6ParsedE(i16* %0, i32 %1, i32 %2, %"struct.url::Parsed"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3url12_GLOBAL__N_118DoParseAfterSchemeIDsEEvPKT_iiPNS_6ParsedE(i16* nocapture readonly, i32, i32, %"struct.url::Parsed"* nocapture) unnamed_addr #1 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.url::Component"*
  %7 = icmp sgt i32 %1, %2
  br i1 %7, label %8, label %25

8:                                                ; preds = %4
  %9 = sext i32 %2 to i64
  %10 = sub i32 %1, %2
  %11 = zext i32 %10 to i64
  br label %12

12:                                               ; preds = %18, %8
  %13 = phi i64 [ 0, %8 ], [ %19, %18 ]
  %14 = phi i64 [ %9, %8 ], [ %21, %18 ]
  %15 = phi i32 [ 0, %8 ], [ %20, %18 ]
  %16 = getelementptr inbounds i16, i16* %0, i64 %14
  %17 = load i16, i16* %16, align 2
  switch i16 %17, label %23 [
    i16 92, label %18
    i16 47, label %18
  ]

18:                                               ; preds = %12, %12
  %19 = add nuw nsw i64 %13, 1
  %20 = add nuw nsw i32 %15, 1
  %21 = add nsw i64 %14, 1
  %22 = icmp eq i64 %19, %11
  br i1 %22, label %25, label %12

23:                                               ; preds = %12
  %24 = trunc i64 %13 to i32
  br label %25

25:                                               ; preds = %18, %4, %23
  %26 = phi i32 [ 0, %4 ], [ %24, %23 ], [ %20, %18 ]
  %27 = add nsw i32 %26, %2
  %28 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  %29 = bitcast i64* %5 to i32*
  %30 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %6, i64 0, i32 1
  store i32 0, i32* %29, align 8
  store i32 -1, i32* %30, align 4
  %31 = icmp slt i32 %27, %1
  br i1 %31, label %32, label %44

32:                                               ; preds = %25
  %33 = sext i32 %27 to i64
  br label %34

34:                                               ; preds = %38, %32
  %35 = phi i64 [ %33, %32 ], [ %39, %38 ]
  %36 = getelementptr inbounds i16, i16* %0, i64 %35
  %37 = load i16, i16* %36, align 2
  switch i16 %37, label %38 [
    i16 92, label %42
    i16 63, label %42
    i16 47, label %42
    i16 35, label %42
  ]

38:                                               ; preds = %34
  %39 = add nsw i64 %35, 1
  %40 = trunc i64 %39 to i32
  %41 = icmp eq i32 %40, %1
  br i1 %41, label %44, label %34

42:                                               ; preds = %34, %34, %34, %34
  %43 = trunc i64 %35 to i32
  br label %44

44:                                               ; preds = %38, %25, %42
  %45 = phi i32 [ %1, %25 ], [ %43, %42 ], [ %1, %38 ]
  %46 = sub nsw i32 %45, %27
  %47 = zext i32 %46 to i64
  %48 = shl nuw i64 %47, 32
  %49 = zext i32 %27 to i64
  %50 = or i64 %48, %49
  store i64 %50, i64* %5, align 8
  %51 = icmp eq i32 %45, %1
  %52 = sub nsw i32 %1, %45
  %53 = select i1 %51, i32 0, i32 %45
  %54 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 1
  %55 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 3
  %57 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 4
  call fastcc void @_ZN3url12_GLOBAL__N_116DoParseAuthorityIDsEEvPKT_RKNS_9ComponentEPS5_S8_S8_S8_(i16* %0, %"struct.url::Component"* nonnull dereferenceable(8) %6, %"struct.url::Component"* %54, %"struct.url::Component"* %55, %"struct.url::Component"* %56, %"struct.url::Component"* %57)
  %58 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5
  %59 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6
  %60 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7
  %61 = icmp eq i32 %52, -1
  %62 = or i1 %51, %61
  br i1 %62, label %63, label %67

63:                                               ; preds = %44
  %64 = bitcast %"struct.url::Component"* %58 to <4 x i32>*
  store <4 x i32> <i32 0, i32 -1, i32 0, i32 -1>, <4 x i32>* %64, align 4
  %65 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %60, i64 0, i32 0
  store i32 0, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %66, align 4
  br label %129

67:                                               ; preds = %44
  %68 = icmp sgt i32 %52, 0
  %69 = add nsw i32 %53, %52
  br i1 %68, label %70, label %97

70:                                               ; preds = %67
  %71 = sext i32 %53 to i64
  %72 = sext i32 %69 to i64
  br label %73

73:                                               ; preds = %82, %70
  %74 = phi i32 [ -1, %70 ], [ %83, %82 ]
  %75 = phi i64 [ %71, %70 ], [ %84, %82 ]
  %76 = getelementptr inbounds i16, i16* %0, i64 %75
  %77 = load i16, i16* %76, align 2
  switch i16 %77, label %82 [
    i16 63, label %78
    i16 35, label %86
  ]

78:                                               ; preds = %73
  %79 = icmp slt i32 %74, 0
  %80 = trunc i64 %75 to i32
  %81 = select i1 %79, i32 %80, i32 %74
  br label %82

82:                                               ; preds = %78, %73
  %83 = phi i32 [ %74, %73 ], [ %81, %78 ]
  %84 = add nsw i64 %75, 1
  %85 = icmp slt i64 %84, %72
  br i1 %85, label %73, label %97

86:                                               ; preds = %73
  %87 = trunc i64 %75 to i32
  %88 = icmp sgt i32 %87, -1
  br i1 %88, label %89, label %97

89:                                               ; preds = %86
  %90 = add nuw nsw i32 %87, 1
  %91 = sub nsw i32 %69, %90
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %90 to i64
  %95 = or i64 %93, %94
  %96 = bitcast %"struct.url::Component"* %60 to i64*
  store i64 %95, i64* %96, align 4
  br label %101

97:                                               ; preds = %82, %86, %67
  %98 = phi i32 [ %74, %86 ], [ -1, %67 ], [ %83, %82 ]
  %99 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %60, i64 0, i32 0
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 7, i32 1
  store i32 -1, i32* %100, align 4
  br label %101

101:                                              ; preds = %97, %89
  %102 = phi i32 [ %74, %89 ], [ %98, %97 ]
  %103 = phi i32 [ %87, %89 ], [ %69, %97 ]
  %104 = icmp sgt i32 %102, -1
  br i1 %104, label %105, label %113

105:                                              ; preds = %101
  %106 = add nuw nsw i32 %102, 1
  %107 = sub nsw i32 %103, %106
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = zext i32 %106 to i64
  %111 = or i64 %109, %110
  %112 = bitcast %"struct.url::Component"* %59 to i64*
  store i64 %111, i64* %112, align 4
  br label %116

113:                                              ; preds = %101
  %114 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %59, i64 0, i32 0
  store i32 0, i32* %114, align 4
  %115 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 6, i32 1
  store i32 -1, i32* %115, align 4
  br label %116

116:                                              ; preds = %113, %105
  %117 = phi i32 [ %102, %105 ], [ %103, %113 ]
  %118 = icmp eq i32 %117, %53
  br i1 %118, label %126, label %119

119:                                              ; preds = %116
  %120 = sub nsw i32 %117, %53
  %121 = zext i32 %120 to i64
  %122 = shl nuw i64 %121, 32
  %123 = zext i32 %53 to i64
  %124 = or i64 %122, %123
  %125 = bitcast %"struct.url::Component"* %58 to i64*
  store i64 %124, i64* %125, align 4
  br label %129

126:                                              ; preds = %116
  %127 = getelementptr inbounds %"struct.url::Component", %"struct.url::Component"* %58, i64 0, i32 0
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.url::Parsed", %"struct.url::Parsed"* %3, i64 0, i32 5, i32 1
  store i32 -1, i32* %128, align 4
  br label %129

129:                                              ; preds = %63, %119, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZN3url22CompareSchemeComponentEPKcRKNS_9ComponentES1_(i8*, %"struct.url::Component"* dereferenceable(8), i8*) local_unnamed_addr #9

declare void @_ZN3url12ParseFileURLEPKciPNS_6ParsedE(i8*, i32, %"struct.url::Parsed"*) local_unnamed_addr #9

declare zeroext i1 @_ZN3url10IsStandardEPKcRKNS_9ComponentE(i8*, %"struct.url::Component"* dereferenceable(8)) local_unnamed_addr #9

declare zeroext i1 @_ZN3url22CompareSchemeComponentEPKDsRKNS_9ComponentEPKc(i16*, %"struct.url::Component"* dereferenceable(8), i8*) local_unnamed_addr #9

declare void @_ZN3url12ParseFileURLEPKDsiPNS_6ParsedE(i16*, i32, %"struct.url::Parsed"*) local_unnamed_addr #9

declare zeroext i1 @_ZN3url10IsStandardEPKDsRKNS_9ComponentE(i16*, %"struct.url::Component"* dereferenceable(8)) local_unnamed_addr #9

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
