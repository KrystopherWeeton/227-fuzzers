; ModuleID = '../../chrome/browser/importer/in_process_importer_bridge.cc'
source_filename = "../../chrome/browser/importer/in_process_importer_bridge.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.InProcessImporterBridge = type { %class.ImporterBridge.base, %class.ProfileWriter*, %"class.base::WeakPtr" }
%class.ImporterBridge.base = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.2", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.2" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.ProfileWriter = type { i32 (...)**, %"class.base::RefCountedThreadSafe.1", %class.Profile* }
%"class.base::RefCountedThreadSafe.1" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.Profile = type opaque
%class.ImporterBridge = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.std::__1::vector" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%class.GURL = type { %"class.std::__1::basic_string.9", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.12 }
%union.anon.12 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.GURL* }
%"class.std::__1::vector.21" = type opaque
%"class.std::__1::vector.22" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %struct.ImporterURLRow*, %struct.ImporterURLRow*, %"class.std::__1::__compressed_pair.23" }
%struct.ImporterURLRow = type <{ %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %struct.ImporterURLRow* }
%"class.history::URLRow" = type <{ i32 (...)**, i64, %class.GURL, %"class.std::__1::basic_string", i32, i32, %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::vector.28" = type { %"class.std::__1::__vector_base.29" }
%"class.std::__1::__vector_base.29" = type { %"class.history::URLRow"*, %"class.history::URLRow"*, %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.history::URLRow"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"*, %"class.std::__1::__compressed_pair.37" }
%"struct.importer::SearchEngineInfo" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"struct.importer::SearchEngineInfo"* }
%struct.TemplateURLData = type { %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %class.GURL, %class.GURL, %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %class.GURL, %class.GURL, i8, %"class.std::__1::vector.47", i64, %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i8, i32, i32, %"class.std::__1::basic_string.9", %"class.std::__1::vector.47", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.9" }
%"class.std::__1::vector.47" = type { %"class.std::__1::__vector_base.48" }
%"class.std::__1::__vector_base.48" = type { %"class.std::__1::basic_string.9"*, %"class.std::__1::basic_string.9"*, %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::basic_string.9"* }
%"class.std::__1::vector.42" = type { %"class.std::__1::__vector_base.43" }
%"class.std::__1::__vector_base.43" = type { %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.TemplateURL* }
%class.TemplateURL = type { %struct.TemplateURLData, %"class.std::__1::vector.54", %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %class.TemplateURLRef, %"class.std::__1::unique_ptr.75", i32, i32 }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %class.TemplateURLRef*, %class.TemplateURLRef*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.TemplateURLRef* }
%class.TemplateURLRef = type <{ %class.TemplateURL*, i32, [4 x i8], i64, i8, i8, [6 x i8], %"class.std::__1::basic_string.9", i8, [7 x i8], %"class.std::__1::vector.56", i8, [7 x i8], %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", i32, [4 x i8], %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::vector.63", i8, [7 x i8] }>
%"class.std::__1::vector.56" = type { %"class.std::__1::__vector_base.57" }
%"class.std::__1::__vector_base.57" = type { %"struct.TemplateURLRef::Replacement"*, %"struct.TemplateURLRef::Replacement"*, %"class.std::__1::__compressed_pair.58" }
%"struct.TemplateURLRef::Replacement" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"struct.TemplateURLRef::Replacement"* }
%"class.std::__1::vector.63" = type { %"class.std::__1::__vector_base.64" }
%"class.std::__1::__vector_base.64" = type { %"struct.TemplateURLRef::PostParam"*, %"struct.TemplateURLRef::PostParam"*, %"class.std::__1::__compressed_pair.65" }
%"struct.TemplateURLRef::PostParam" = type { %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.TemplateURLRef::PostParam"* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.TemplateURL::AssociatedExtensionInfo"* }
%"struct.TemplateURL::AssociatedExtensionInfo" = type <{ %"class.std::__1::basic_string.9", %"class.base::Time", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::unique_ptr.44"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.13 }
%struct.anon.13 = type { i8 }
%"struct.importer::ImportedPasswordForm" = type <{ i32, [4 x i8], %"class.std::__1::basic_string.9", %class.GURL, %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"struct.password_manager::PasswordForm" = type { i32, %"class.std::__1::basic_string.9", %class.GURL, %class.GURL, %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %class.GURL, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.89", %"class.std::__1::vector.89", i8, %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.autofill::FieldRendererId", %"class.std::__1::basic_string", %"class.base::Time", %"class.base::Time", %"class.base::Time", i8, i32, i32, [4 x i8], %"struct.autofill::FormData", i32, %"class.std::__1::basic_string", %class.GURL, %"class.url::Origin", i8, i8, i8, i8, i32, i8, i8, i32, %"class.std::__1::vector.143" }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.91" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.std::__1::pair"* }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.96", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.108", %"class.std::__1::vector.115", i32, [4 x i8], %"class.std::__1::vector.122", %"class.std::__1::vector.136", i8, [7 x i8] }>
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.std::__1::pair.98"*, %"struct.std::__1::pair.98"*, %"class.std::__1::__compressed_pair.99" }
%"struct.std::__1::pair.98" = type opaque
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::pair.98"* }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.105" }
%"class.base::StrongAlias.105" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.106" }
%"class.util::IdType.106" = type { %"class.base::StrongAlias.107" }
%"class.base::StrongAlias.107" = type { i32 }
%"class.std::__1::vector.108" = type { %"class.std::__1::__vector_base.109" }
%"class.std::__1::__vector_base.109" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.110" }
%"class.absl::variant" = type opaque
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.absl::variant"* }
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { i32*, i32*, %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i32* }
%"class.std::__1::vector.122" = type { %"class.std::__1::__vector_base.123" }
%"class.std::__1::__vector_base.123" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.131" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.9", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.124", %"class.std::__1::vector.124", i32, %"class.gfx::RectF", %"class.std::__1::vector.124", %"class.std::__1::vector.124" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::vector.136" = type { %"class.std::__1::__vector_base.137" }
%"class.std::__1::__vector_base.137" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.autofill::FieldRendererId"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"class.autofill::GaiaIdHash"*, %"class.autofill::GaiaIdHash"*, %"class.std::__1::__compressed_pair.145" }
%"class.autofill::GaiaIdHash" = type { %"class.std::__1::basic_string.9" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.autofill::GaiaIdHash"* }
%"class.std::__1::vector.150" = type { %"class.std::__1::__vector_base.151" }
%"class.std::__1::__vector_base.151" = type { %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry*, %"class.std::__1::__compressed_pair.152" }
%struct.ImporterAutofillFormDataEntry = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, %"class.base::Time", %"class.base::Time" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %struct.ImporterAutofillFormDataEntry* }
%"class.std::__1::vector.157" = type { %"class.std::__1::__vector_base.158" }
%"class.std::__1::__vector_base.158" = type { %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"*, %"class.std::__1::__compressed_pair.159" }
%"class.autofill::AutofillEntry" = type { %"class.autofill::AutofillKey", %"class.base::Time", %"class.base::Time" }
%"class.autofill::AutofillKey" = type { i32 (...)**, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.autofill::AutofillEntry"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.9", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.ExternalProcessImporterHost = type { %"class.bookmarks::BaseBookmarkModelObserver", i8, %"class.aura::Window"*, %"class.importer::ImporterProgressObserver"*, %"class.std::__1::unique_ptr.164", %class.Profile*, i8, %"class.base::CallbackListSubscription", i8, i8, %class.scoped_refptr.172, %class.ExternalProcessImporterClient*, %"struct.importer::SourceProfile", i16, i8, %"class.base::WeakPtrFactory" }
%"class.bookmarks::BaseBookmarkModelObserver" = type { %"class.bookmarks::BookmarkModelObserver" }
%"class.bookmarks::BookmarkModelObserver" = type { i32 (...)** }
%"class.aura::Window" = type opaque
%"class.importer::ImporterProgressObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %class.FirefoxProfileLock* }
%class.FirefoxProfileLock = type opaque
%"class.base::CallbackListSubscription" = type { %"class.base::OnceCallback" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.170 }
%class.scoped_refptr.170 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.171", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.171" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.172 = type { %class.ProfileWriter* }
%class.ExternalProcessImporterClient = type opaque
%"struct.importer::SourceProfile" = type { %"class.std::__1::basic_string", i32, %"class.base::FilePath", %"class.base::FilePath", i16, %"class.std::__1::basic_string.9", %"class.std::__1::basic_string" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string.9" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.173 }
%class.scoped_refptr.173 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI11TemplateURLNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZNSt3__16vectorIN8autofill13AutofillEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

@_ZTV23InProcessImporterBridge = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.InProcessImporterBridge*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)* @_ZN23InProcessImporterBridge12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %class.GURL*)* @_ZN23InProcessImporterBridge11AddHomePageERK4GURL to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %"class.std::__1::vector.21"*)* @_ZN23InProcessImporterBridge11SetFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %"class.std::__1::vector.22"*, i32)* @_ZN23InProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %"class.std::__1::vector.35"*, i1)* @_ZN23InProcessImporterBridge11SetKeywordsERKNSt3__16vectorIN8importer16SearchEngineInfoENS0_9allocatorIS3_EEEEb to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %"struct.importer::ImportedPasswordForm"*)* @_ZN23InProcessImporterBridge15SetPasswordFormERKN8importer20ImportedPasswordFormE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, %"class.std::__1::vector.150"*)* @_ZN23InProcessImporterBridge19SetAutofillFormDataERKNSt3__16vectorI29ImporterAutofillFormDataEntryNS0_9allocatorIS2_EEEE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*)* @_ZN23InProcessImporterBridge13NotifyStartedEv to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, i32)* @_ZN23InProcessImporterBridge17NotifyItemStartedEN8importer10ImportItemE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*, i32)* @_ZN23InProcessImporterBridge15NotifyItemEndedEN8importer10ImportItemE to i8*), i8* bitcast (void (%class.InProcessImporterBridge*)* @_ZN23InProcessImporterBridge11NotifyEndedEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %class.InProcessImporterBridge*, i32)* @_ZN23InProcessImporterBridge18GetLocalizedStringEi to i8*), i8* bitcast (void (%class.InProcessImporterBridge*)* @_ZN23InProcessImporterBridgeD2Ev to i8*), i8* bitcast (void (%class.InProcessImporterBridge*)* @_ZN23InProcessImporterBridgeD0Ev to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1
@switch.table._ZN23InProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE = private unnamed_addr constant [4 x i32] [i32 1, i32 3, i32 4, i32 5], align 4

@_ZN23InProcessImporterBridgeC1EP13ProfileWriterN4base7WeakPtrI27ExternalProcessImporterHostEE = hidden unnamed_addr alias void (%class.InProcessImporterBridge*, %class.ProfileWriter*, %"class.base::WeakPtr"*), void (%class.InProcessImporterBridge*, %class.ProfileWriter*, %"class.base::WeakPtr"*)* @_ZN23InProcessImporterBridgeC2EP13ProfileWriterN4base7WeakPtrI27ExternalProcessImporterHostEE
@_ZN23InProcessImporterBridgeD1Ev = hidden unnamed_addr alias void (%class.InProcessImporterBridge*), void (%class.InProcessImporterBridge*)* @_ZN23InProcessImporterBridgeD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridgeC2EP13ProfileWriterN4base7WeakPtrI27ExternalProcessImporterHostEE(%class.InProcessImporterBridge*, %class.ProfileWriter*, %"class.base::WeakPtr"*) unnamed_addr #0 align 2 {
  %4 = bitcast %class.InProcessImporterBridge* %0 to %class.ImporterBridge*
  tail call void @_ZN14ImporterBridgeC2Ev(%class.ImporterBridge* %4) #9
  %5 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV23InProcessImporterBridge, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  store %class.ProfileWriter* %1, %class.ProfileWriter** %6, align 8
  %7 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"* %7, %"class.base::internal::WeakReference"* dereferenceable(8) %8) #9
  %9 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 1
  %10 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %2, i64 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %9, align 8
  ret void
}

declare void @_ZN14ImporterBridgeC2Ev(%class.ImporterBridge*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge12AddBookmarksERKNSt3__16vectorI21ImportedBookmarkEntryNS0_9allocatorIS2_EEEERKNS0_12basic_stringIDsNS0_11char_traitsIDsEENS3_IDsEEEE(%class.InProcessImporterBridge* nocapture readonly, %"class.std::__1::vector"*, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %5 = load %class.ProfileWriter*, %class.ProfileWriter** %4, align 8
  %6 = bitcast %class.ProfileWriter* %5 to void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)***
  %7 = load void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)**, void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)*** %6, align 8
  %8 = getelementptr inbounds void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)** %7, i64 5
  %9 = load void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector"*, %"class.std::__1::basic_string"*)** %8, align 8
  tail call void %9(%class.ProfileWriter* %5, %"class.std::__1::vector"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge11AddHomePageERK4GURL(%class.InProcessImporterBridge* nocapture readonly, %class.GURL* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %4 = load %class.ProfileWriter*, %class.ProfileWriter** %3, align 8
  %5 = bitcast %class.ProfileWriter* %4 to void (%class.ProfileWriter*, %class.GURL*)***
  %6 = load void (%class.ProfileWriter*, %class.GURL*)**, void (%class.ProfileWriter*, %class.GURL*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.ProfileWriter*, %class.GURL*)*, void (%class.ProfileWriter*, %class.GURL*)** %6, i64 4
  %8 = load void (%class.ProfileWriter*, %class.GURL*)*, void (%class.ProfileWriter*, %class.GURL*)** %7, align 8
  tail call void %8(%class.ProfileWriter* %4, %class.GURL* dereferenceable(120) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge11SetFaviconsERKNSt3__16vectorIN12favicon_base16FaviconUsageDataENS0_9allocatorIS3_EEEE(%class.InProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.21"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %4 = load %class.ProfileWriter*, %class.ProfileWriter** %3, align 8
  %5 = bitcast %class.ProfileWriter* %4 to void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)***
  %6 = load void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)**, void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)** %6, i64 6
  %8 = load void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector.21"*)** %7, align 8
  tail call void %8(%class.ProfileWriter* %4, %"class.std::__1::vector.21"* %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE(%class.InProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.22"* nocapture readonly dereferenceable(24), i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.history::URLRow", align 8
  %5 = alloca %"class.std::__1::vector.28", align 8
  %6 = bitcast %"class.std::__1::vector.28"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #9
  %7 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %5, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %5, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #9, !alias.scope !2
  %10 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 1
  %11 = bitcast %struct.ImporterURLRow** %10 to i64*
  %12 = load i64, i64* %11, align 8, !noalias !2
  %13 = bitcast %"class.std::__1::vector.22"* %1 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !2
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 168
  call void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.28"* nonnull %5, i64 %16) #9
  %17 = getelementptr inbounds %"class.std::__1::vector.22", %"class.std::__1::vector.22"* %1, i64 0, i32 0, i32 0
  %18 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %17, align 8, !noalias !2
  %19 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %10, align 8, !noalias !2
  %20 = icmp eq %struct.ImporterURLRow* %18, %19
  br i1 %20, label %95, label %21

21:                                               ; preds = %3
  %22 = bitcast %"class.history::URLRow"* %4 to i8*
  %23 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 3
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::basic_string"* %23 to i16*
  %29 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 4
  %30 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 5
  %31 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 6, i32 0, i32 0
  %32 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %4, i64 0, i32 7
  %33 = bitcast %"class.history::URLRow"** %8 to i64*
  br label %34

34:                                               ; preds = %91, %21
  %35 = phi %struct.ImporterURLRow* [ %18, %21 ], [ %92, %91 ]
  call void @llvm.lifetime.start.p0i8(i64 184, i8* nonnull %22) #9, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 184, i1 false) #9, !noalias !2
  %36 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 0
  call void @_ZN7history6URLRowC1ERK4GURL(%"class.history::URLRow"* nonnull %4, %class.GURL* dereferenceable(120) %36) #9
  %37 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %38, i64 0, i32 1, i32 1
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = load i8, i8* %25, align 1, !noalias !2
  %47 = icmp slt i8 %46, 0
  %48 = load i64, i64* %26, align 8, !noalias !2
  %49 = zext i8 %46 to i64
  %50 = select i1 %47, i64 %48, i64 %49
  %51 = icmp eq i64 %45, %50
  br i1 %51, label %52, label %73

52:                                               ; preds = %34
  %53 = icmp eq i64 %45, 0
  br i1 %53, label %75, label %54

54:                                               ; preds = %52
  %55 = load i16*, i16** %27, align 8, !noalias !2
  %56 = select i1 %47, i16* %55, i16* %28
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %37 to i16*
  %60 = select i1 %41, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %68, %54
  %62 = phi i64 [ %69, %68 ], [ %45, %54 ]
  %63 = phi i16* [ %71, %68 ], [ %56, %54 ]
  %64 = phi i16* [ %70, %68 ], [ %60, %54 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp eq i16 %66, %65
  br i1 %67, label %68, label %73

68:                                               ; preds = %61
  %69 = add i64 %62, -1
  %70 = getelementptr inbounds i16, i16* %64, i64 1
  %71 = getelementptr inbounds i16, i16* %63, i64 1
  %72 = icmp eq i64 %69, 0
  br i1 %72, label %75, label %61

73:                                               ; preds = %61, %34
  %74 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %23, %"class.std::__1::basic_string"* dereferenceable(24) %37) #9
  br label %75

75:                                               ; preds = %68, %73, %52
  %76 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 2
  %77 = load i32, i32* %76, align 8
  store i32 %77, i32* %29, align 8, !noalias !2
  %78 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 3
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %30, align 4, !noalias !2
  %80 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 4, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  store i64 %81, i64* %31, align 8, !noalias !2
  %82 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 0, i32 5
  %83 = load i8, i8* %82, align 8, !range !5
  store i8 %83, i8* %32, align 8, !noalias !2
  %84 = load %"class.history::URLRow"*, %"class.history::URLRow"** %8, align 8, !alias.scope !2
  %85 = load %"class.history::URLRow"*, %"class.history::URLRow"** %9, align 8, !alias.scope !2
  %86 = icmp eq %"class.history::URLRow"* %84, %85
  br i1 %86, label %90, label %87

87:                                               ; preds = %75
  call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %84, %"class.history::URLRow"* nonnull dereferenceable(184) %4) #9
  %88 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %84, i64 1
  %89 = ptrtoint %"class.history::URLRow"* %88 to i64
  store i64 %89, i64* %33, align 8, !alias.scope !2
  br label %91

90:                                               ; preds = %75
  call void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.28"* nonnull %5, %"class.history::URLRow"* nonnull dereferenceable(184) %4) #9
  br label %91

91:                                               ; preds = %90, %87
  call void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 184, i8* nonnull %22) #9, !noalias !2
  %92 = getelementptr inbounds %struct.ImporterURLRow, %struct.ImporterURLRow* %35, i64 1
  %93 = load %struct.ImporterURLRow*, %struct.ImporterURLRow** %10, align 8, !noalias !2
  %94 = icmp eq %struct.ImporterURLRow* %92, %93
  br i1 %94, label %95, label %34

95:                                               ; preds = %91, %3
  %96 = icmp ult i32 %2, 4
  br i1 %96, label %97, label %101

97:                                               ; preds = %95
  %98 = sext i32 %2 to i64
  %99 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN23InProcessImporterBridge15SetHistoryItemsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEEN8importer11VisitSourceE, i64 0, i64 %98
  %100 = load i32, i32* %99, align 4
  br label %101

101:                                              ; preds = %95, %97
  %102 = phi i32 [ %100, %97 ], [ 0, %95 ]
  %103 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %104 = load %class.ProfileWriter*, %class.ProfileWriter** %103, align 8
  %105 = bitcast %class.ProfileWriter* %104 to void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)***
  %106 = load void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)**, void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)*** %105, align 8
  %107 = getelementptr inbounds void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)*, void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)** %106, i64 3
  %108 = load void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)*, void (%class.ProfileWriter*, %"class.std::__1::vector.28"*, i32)** %107, align 8
  call void %108(%class.ProfileWriter* %104, %"class.std::__1::vector.28"* nonnull dereferenceable(24) %5, i32 %102) #9
  %109 = load %"class.history::URLRow"*, %"class.history::URLRow"** %7, align 8
  %110 = icmp eq %"class.history::URLRow"* %109, null
  br i1 %110, label %127, label %111

111:                                              ; preds = %101
  %112 = bitcast %"class.history::URLRow"* %109 to i8*
  %113 = load %"class.history::URLRow"*, %"class.history::URLRow"** %8, align 8
  %114 = icmp eq %"class.history::URLRow"* %113, %109
  br i1 %114, label %125, label %115

115:                                              ; preds = %111, %115
  %116 = phi %"class.history::URLRow"* [ %117, %115 ], [ %113, %111 ]
  %117 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %116, i64 -1
  %118 = bitcast %"class.history::URLRow"* %117 to void (%"class.history::URLRow"*)***
  %119 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %118, align 8
  %120 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %119, align 8
  call void %120(%"class.history::URLRow"* %117) #9
  %121 = icmp eq %"class.history::URLRow"* %117, %109
  br i1 %121, label %122, label %115

122:                                              ; preds = %115
  %123 = bitcast %"class.std::__1::vector.28"* %5 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %122, %111
  %126 = phi i8* [ %124, %122 ], [ %112, %111 ]
  store %"class.history::URLRow"* %109, %"class.history::URLRow"** %8, align 8
  call void @_ZdlPv(i8* %126) #10
  br label %127

127:                                              ; preds = %101, %125
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge11SetKeywordsERKNSt3__16vectorIN8importer16SearchEngineInfoENS0_9allocatorIS3_EEEEb(%class.InProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.35"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %struct.TemplateURLData, align 8
  %5 = alloca %"class.std::__1::basic_string.9", align 8
  %6 = alloca %"class.std::__1::vector.42", align 16
  %7 = alloca %"class.std::__1::unique_ptr.44", align 8
  %8 = alloca %"class.std::__1::vector.42", align 16
  %9 = bitcast %"class.std::__1::vector.42"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %6, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %6, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #9
  %13 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 0
  %14 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.35", %"class.std::__1::vector.35"* %1, i64 0, i32 0, i32 1
  %16 = load %"struct.importer::SearchEngineInfo"*, %"struct.importer::SearchEngineInfo"** %15, align 8
  %17 = icmp eq %"struct.importer::SearchEngineInfo"* %14, %16
  br i1 %17, label %33, label %18

18:                                               ; preds = %3
  %19 = bitcast %"class.std::__1::unique_ptr.44"* %7 to i8*
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %7, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %struct.TemplateURLData* %4 to i8*
  %22 = bitcast %"class.std::__1::basic_string.9"* %5 to i8*
  %23 = bitcast %"class.std::__1::basic_string.9"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.44"* %7 to i8**
  %27 = bitcast %"class.std::__1::unique_ptr.44"** %11 to i64*
  br label %91

28:                                               ; preds = %148
  %29 = bitcast %"class.std::__1::vector.42"* %6 to <2 x i64>*
  %30 = load <2 x i64>, <2 x i64>* %29, align 16
  %31 = bitcast %"class.std::__1::unique_ptr.44"** %12 to i64*
  %32 = load i64, i64* %31, align 16
  br label %33

33:                                               ; preds = %3, %28
  %34 = phi i64 [ %32, %28 ], [ 0, %3 ]
  %35 = phi <2 x i64> [ %30, %28 ], [ zeroinitializer, %3 ]
  %36 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %37 = load %class.ProfileWriter*, %class.ProfileWriter** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %8, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::vector.42"* %8 to <2 x i64>*
  store <2 x i64> %35, <2 x i64>* %39, align 16
  %40 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.44"** %40 to i64*
  store i64 %34, i64* %41, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %9, i8 0, i64 24, i1 false) #9
  %42 = bitcast %class.ProfileWriter* %37 to void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)***
  %43 = load void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)**, void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)*** %42, align 8
  %44 = getelementptr inbounds void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)*, void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)** %43, i64 7
  %45 = load void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)*, void (%class.ProfileWriter*, %"class.std::__1::vector.42"*, i1)** %44, align 8
  call void %45(%class.ProfileWriter* %37, %"class.std::__1::vector.42"* nonnull %8, i1 zeroext %2) #9
  %46 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %8, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %46, align 16
  %48 = icmp eq %"class.std::__1::unique_ptr.44"* %47, null
  br i1 %48, label %68, label %49

49:                                               ; preds = %33
  %50 = bitcast %"class.std::__1::unique_ptr.44"* %47 to i8*
  %51 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %38, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.44"* %51, %47
  br i1 %52, label %66, label %53

53:                                               ; preds = %49, %61
  %54 = phi %"class.std::__1::unique_ptr.44"* [ %55, %61 ], [ %51, %49 ]
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %54, i64 -1
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %class.TemplateURL*, %class.TemplateURL** %56, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %56, align 8
  %58 = icmp eq %class.TemplateURL* %57, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %53
  call void @_ZN11TemplateURLD1Ev(%class.TemplateURL* nonnull %57) #9
  %60 = bitcast %class.TemplateURL* %57 to i8*
  call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %53
  %62 = icmp eq %"class.std::__1::unique_ptr.44"* %55, %47
  br i1 %62, label %63, label %53

63:                                               ; preds = %61
  %64 = bitcast %"class.std::__1::vector.42"* %8 to i8**
  %65 = load i8*, i8** %64, align 16
  br label %66

66:                                               ; preds = %63, %49
  %67 = phi i8* [ %65, %63 ], [ %50, %49 ]
  store %"class.std::__1::unique_ptr.44"* %47, %"class.std::__1::unique_ptr.44"** %38, align 8
  call void @_ZdlPv(i8* %67) #10
  br label %68

68:                                               ; preds = %33, %66
  %69 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %10, align 16
  %70 = icmp eq %"class.std::__1::unique_ptr.44"* %69, null
  br i1 %70, label %90, label %71

71:                                               ; preds = %68
  %72 = bitcast %"class.std::__1::unique_ptr.44"* %69 to i8*
  %73 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %11, align 8
  %74 = icmp eq %"class.std::__1::unique_ptr.44"* %73, %69
  br i1 %74, label %88, label %75

75:                                               ; preds = %71, %83
  %76 = phi %"class.std::__1::unique_ptr.44"* [ %77, %83 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %76, i64 -1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %class.TemplateURL*, %class.TemplateURL** %78, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %78, align 8
  %80 = icmp eq %class.TemplateURL* %79, null
  br i1 %80, label %83, label %81

81:                                               ; preds = %75
  call void @_ZN11TemplateURLD1Ev(%class.TemplateURL* nonnull %79) #9
  %82 = bitcast %class.TemplateURL* %79 to i8*
  call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %81, %75
  %84 = icmp eq %"class.std::__1::unique_ptr.44"* %77, %69
  br i1 %84, label %85, label %75

85:                                               ; preds = %83
  %86 = bitcast %"class.std::__1::vector.42"* %6 to i8**
  %87 = load i8*, i8** %86, align 16
  br label %88

88:                                               ; preds = %85, %71
  %89 = phi i8* [ %87, %85 ], [ %72, %71 ]
  store %"class.std::__1::unique_ptr.44"* %69, %"class.std::__1::unique_ptr.44"** %11, align 8
  call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %68, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #9
  ret void

91:                                               ; preds = %18, %148
  %92 = phi %"struct.importer::SearchEngineInfo"* [ %14, %18 ], [ %149, %148 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #9
  store %class.TemplateURL* inttoptr (i64 -6148914691236517206 to %class.TemplateURL*), %class.TemplateURL** %20, align 8
  %93 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 0
  %94 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 1
  %95 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 2
  %96 = bitcast %"struct.importer::SearchEngineInfo"* %92 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %96, i64 0, i32 1, i32 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  %100 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %98 to i64
  %103 = select i1 %99, i64 %101, i64 %102
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %130, label %105

105:                                              ; preds = %91
  %106 = bitcast %"class.std::__1::basic_string"* %94 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %106, i64 0, i32 1, i32 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  %110 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = zext i8 %108 to i64
  %113 = select i1 %109, i64 %111, i64 %112
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %130, label %115

115:                                              ; preds = %105
  call void @llvm.lifetime.start.p0i8(i64 848, i8* nonnull %21) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 848, i1 false) #9
  call void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData* nonnull %4) #9
  call void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %94) #9
  %116 = bitcast %"class.std::__1::basic_string"* %95 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  %120 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %121 = load i64, i64* %120, align 8
  %122 = zext i8 %118 to i64
  %123 = select i1 %119, i64 %121, i64 %122
  %124 = icmp eq i64 %123, 0
  %125 = select i1 %124, %"class.std::__1::basic_string"* %94, %"class.std::__1::basic_string"* %95
  call void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData* nonnull %4, %"class.std::__1::basic_string"* dereferenceable(24) %125) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  call void @_ZN14TemplateURLRef18DisplayURLToURLRefERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.9"* nonnull sret %5, %"class.std::__1::basic_string"* dereferenceable(24) %93) #9
  call void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData* nonnull %4, %"class.std::__1::basic_string.9"* nonnull dereferenceable(24) %5) #9
  %126 = load i8, i8* %24, align 1
  %127 = icmp slt i8 %126, 0
  br i1 %127, label %128, label %131

128:                                              ; preds = %115
  %129 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %129) #10
  br label %131

130:                                              ; preds = %91, %105
  store %class.TemplateURL* null, %class.TemplateURL** %20, align 8
  br label %148

131:                                              ; preds = %128, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  %132 = call i8* @_Znwm(i64 2104) #10
  %133 = bitcast i8* %132 to %class.TemplateURL*
  call void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL* nonnull %133, %struct.TemplateURLData* nonnull dereferenceable(848) %4, i32 1) #9
  call void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 848, i8* nonnull %21) #9
  store i8* %132, i8** %26, align 8
  %134 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %11, align 8
  %135 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %12, align 16
  %136 = icmp ult %"class.std::__1::unique_ptr.44"* %134, %135
  br i1 %136, label %137, label %142

137:                                              ; preds = %131
  %138 = ptrtoint i8* %132 to i64
  store %class.TemplateURL* null, %class.TemplateURL** %20, align 8
  %139 = bitcast %"class.std::__1::unique_ptr.44"* %134 to i64*
  store i64 %138, i64* %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %134, i64 1
  %141 = ptrtoint %"class.std::__1::unique_ptr.44"* %140 to i64
  store i64 %141, i64* %27, align 8
  br label %143

142:                                              ; preds = %131
  call void @_ZNSt3__16vectorINS_10unique_ptrI11TemplateURLNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.42"* nonnull %6, %"class.std::__1::unique_ptr.44"* nonnull dereferenceable(8) %7) #9
  br label %143

143:                                              ; preds = %142, %137
  %144 = load %class.TemplateURL*, %class.TemplateURL** %20, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %20, align 8
  %145 = icmp eq %class.TemplateURL* %144, null
  br i1 %145, label %148, label %146

146:                                              ; preds = %143
  call void @_ZN11TemplateURLD1Ev(%class.TemplateURL* nonnull %144) #9
  %147 = bitcast %class.TemplateURL* %144 to i8*
  call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %130, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #9
  %149 = getelementptr inbounds %"struct.importer::SearchEngineInfo", %"struct.importer::SearchEngineInfo"* %92, i64 1
  %150 = icmp eq %"struct.importer::SearchEngineInfo"* %149, %16
  br i1 %150, label %28, label %91
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge15SetPasswordFormERKN8importer20ImportedPasswordFormE(%class.InProcessImporterBridge* nocapture readonly, %"struct.importer::ImportedPasswordForm"* dereferenceable(376)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.password_manager::PasswordForm", align 8
  %4 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %5 = load %class.ProfileWriter*, %class.ProfileWriter** %4, align 8
  %6 = bitcast %"struct.password_manager::PasswordForm"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1744, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 1744, i1 false) #9, !alias.scope !6
  call void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"* nonnull %3) #9
  %7 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 0
  %8 = load i32, i32* %7, align 8, !noalias !6
  %9 = icmp eq i32 %8, 1
  %10 = zext i1 %9 to i32
  %11 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 0
  store i32 %10, i32* %11, align 8, !alias.scope !6
  %12 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 1
  %14 = icmp eq %"class.std::__1::basic_string.9"* %13, %12
  br i1 %14, label %44, label %15

15:                                               ; preds = %2
  %16 = bitcast %"class.std::__1::basic_string.9"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1, !alias.scope !6
  %19 = icmp slt i8 %18, 0
  %20 = bitcast %"class.std::__1::basic_string.9"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !6
  %23 = icmp slt i8 %22, 0
  br i1 %19, label %34, label %24

24:                                               ; preds = %15
  br i1 %23, label %28, label %25

25:                                               ; preds = %24
  %26 = bitcast %"class.std::__1::basic_string.9"* %13 to i8*
  %27 = bitcast %"class.std::__1::basic_string.9"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #9
  br label %44

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8, !noalias !6
  %31 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8, !noalias !6
  %33 = call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.9"* %13, i8* %30, i64 %32) #9
  br label %44

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.std::__1::basic_string.9", %"class.std::__1::basic_string.9"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8, !noalias !6
  %37 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8, !noalias !6
  %39 = bitcast %"class.std::__1::basic_string.9"* %12 to i8*
  %40 = zext i8 %22 to i64
  %41 = select i1 %23, i8* %36, i8* %39
  %42 = select i1 %23, i64 %38, i64 %40
  %43 = call dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.9"* %13, i8* %41, i64 %42) #9
  br label %44

44:                                               ; preds = %2, %25, %28, %34
  %45 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 3
  %46 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 2
  %47 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %46, %class.GURL* dereferenceable(120) %45) #9
  %48 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 4
  %49 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 3
  %50 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL* %49, %class.GURL* dereferenceable(120) %48) #9
  %51 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 5
  %52 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 8
  %53 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"* dereferenceable(24) %51) #9
  %54 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 6
  %55 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 12
  %56 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"* dereferenceable(24) %54) #9
  %57 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 7
  %58 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 16
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %58, %"class.std::__1::basic_string"* dereferenceable(24) %57) #9
  %60 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 8
  %61 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 18
  %62 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"* %61, %"class.std::__1::basic_string"* dereferenceable(24) %60) #9
  %63 = getelementptr inbounds %"struct.importer::ImportedPasswordForm", %"struct.importer::ImportedPasswordForm"* %1, i64 0, i32 9
  %64 = load i8, i8* %63, align 8, !range !5, !noalias !6
  %65 = getelementptr inbounds %"struct.password_manager::PasswordForm", %"struct.password_manager::PasswordForm"* %3, i64 0, i32 28
  store i8 %64, i8* %65, align 8, !alias.scope !6
  %66 = bitcast %class.ProfileWriter* %5 to void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)***
  %67 = load void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)**, void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)*** %66, align 8
  %68 = getelementptr inbounds void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)*, void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)** %67, i64 2
  %69 = load void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)*, void (%class.ProfileWriter*, %"struct.password_manager::PasswordForm"*)** %68, align 8
  call void %69(%class.ProfileWriter* %5, %"struct.password_manager::PasswordForm"* nonnull dereferenceable(1744) %3) #9
  call void @_ZN16password_manager12PasswordFormD1Ev(%"struct.password_manager::PasswordForm"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 1744, i8* nonnull %6) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN16password_manager12PasswordFormD1Ev(%"struct.password_manager::PasswordForm"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge19SetAutofillFormDataERKNSt3__16vectorI29ImporterAutofillFormDataEntryNS0_9allocatorIS2_EEEE(%class.InProcessImporterBridge* nocapture readonly, %"class.std::__1::vector.150"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.157", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.autofill::AutofillEntry", align 8
  %7 = alloca %"class.autofill::AutofillKey", align 8
  %8 = bitcast %"class.std::__1::vector.157"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #9
  %12 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %1, i64 0, i32 0, i32 1
  %13 = bitcast %struct.ImporterAutofillFormDataEntry** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.150"* %1 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %14, %16
  br i1 %17, label %42, label %18

18:                                               ; preds = %2
  %19 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.std::__1::vector.150", %"class.std::__1::vector.150"* %1, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %24 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %27 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8**
  %31 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = bitcast %"class.std::__1::basic_string"* %5 to i16*
  %34 = bitcast %"class.autofill::AutofillEntry"* %6 to i8*
  %35 = bitcast %"class.autofill::AutofillKey"* %7 to i8*
  %36 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %6, i64 0, i32 0
  %37 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %6, i64 0, i32 1
  %38 = bitcast %"class.base::Time"* %37 to i8*
  %39 = bitcast %"class.autofill::AutofillEntry"** %10 to i64*
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  br label %65

42:                                               ; preds = %488, %2
  %43 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 1
  %44 = load %class.ProfileWriter*, %class.ProfileWriter** %43, align 8
  %45 = bitcast %class.ProfileWriter* %44 to void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)***
  %46 = load void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)**, void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)*** %45, align 8
  %47 = getelementptr inbounds void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)** %46, i64 8
  %48 = load void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)*, void (%class.ProfileWriter*, %"class.std::__1::vector.157"*)** %47, align 8
  call void %48(%class.ProfileWriter* %44, %"class.std::__1::vector.157"* nonnull dereferenceable(24) %3) #9
  %49 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %9, align 8
  %50 = icmp eq %"class.autofill::AutofillEntry"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %42
  %52 = bitcast %"class.autofill::AutofillEntry"* %49 to i8*
  %53 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %10, align 8
  %54 = icmp eq %"class.autofill::AutofillEntry"* %53, %49
  br i1 %54, label %62, label %55

55:                                               ; preds = %51, %55
  %56 = phi %"class.autofill::AutofillEntry"* [ %57, %55 ], [ %53, %51 ]
  %57 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %56, i64 -1
  call void @_ZN8autofill13AutofillEntryD1Ev(%"class.autofill::AutofillEntry"* %57) #9
  %58 = icmp eq %"class.autofill::AutofillEntry"* %57, %49
  br i1 %58, label %59, label %55

59:                                               ; preds = %55
  %60 = bitcast %"class.std::__1::vector.157"* %3 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i8* [ %61, %59 ], [ %52, %51 ]
  store %"class.autofill::AutofillEntry"* %49, %"class.autofill::AutofillEntry"** %10, align 8
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %42, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #9
  ret void

65:                                               ; preds = %18, %488
  %66 = phi i64 [ %16, %18 ], [ %491, %488 ]
  %67 = phi i64 [ 0, %18 ], [ %489, %488 ]
  %68 = inttoptr i64 %66 to %struct.ImporterAutofillFormDataEntry*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #9
  %69 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %68, i64 %67, i32 0
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false)
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i16*, i16** %75, align 8
  br label %79

77:                                               ; preds = %65
  %78 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  br label %79

79:                                               ; preds = %74, %77
  %80 = phi i16* [ %76, %74 ], [ %78, %77 ]
  %81 = load i16, i16* %80, align 2
  %82 = icmp eq i16 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %79
  store i8 0, i8* %25, align 1
  br label %256

84:                                               ; preds = %79, %84
  %85 = phi i64 [ %87, %84 ], [ 0, %79 ]
  %86 = phi i16* [ %88, %84 ], [ %80, %79 ]
  %87 = add i64 %85, 1
  %88 = getelementptr inbounds i16, i16* %86, i64 1
  %89 = load i16, i16* %88, align 2
  %90 = icmp eq i16 %89, 0
  br i1 %90, label %91, label %84

91:                                               ; preds = %84
  %92 = icmp ugt i64 %87, 9223372036854775791
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  %94 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %94) #11
  unreachable

95:                                               ; preds = %91
  %96 = icmp ult i64 %87, 11
  br i1 %96, label %107, label %97

97:                                               ; preds = %95
  %98 = add nuw nsw i64 %85, 9
  %99 = and i64 %98, -8
  %100 = icmp slt i64 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %97
  call void @abort() #11
  unreachable

102:                                              ; preds = %97
  %103 = shl i64 %99, 1
  %104 = call i8* @_Znwm(i64 %103) #10
  %105 = bitcast i8* %104 to i16*
  store i8* %104, i8** %23, align 8
  %106 = or i64 %99, -9223372036854775808
  store i64 %106, i64* %21, align 8
  store i64 %87, i64* %20, align 8
  br label %110

107:                                              ; preds = %95
  %108 = trunc i64 %87 to i8
  store i8 %108, i8* %25, align 1
  %109 = icmp eq i64 %87, 0
  br i1 %109, label %256, label %110

110:                                              ; preds = %107, %102
  %111 = phi i16* [ %105, %102 ], [ %26, %107 ]
  %112 = icmp ult i64 %87, 16
  br i1 %112, label %201, label %113

113:                                              ; preds = %110
  %114 = getelementptr i16, i16* %111, i64 %87
  %115 = getelementptr i16, i16* %80, i64 %87
  %116 = icmp ult i16* %111, %115
  %117 = icmp ult i16* %80, %114
  %118 = and i1 %116, %117
  br i1 %118, label %201, label %119

119:                                              ; preds = %113
  %120 = and i64 %87, -16
  %121 = sub i64 %87, %120
  %122 = getelementptr i16, i16* %80, i64 %120
  %123 = getelementptr i16, i16* %111, i64 %120
  %124 = add i64 %120, -16
  %125 = lshr exact i64 %124, 4
  %126 = add nuw nsw i64 %125, 1
  %127 = and i64 %126, 3
  %128 = icmp ult i64 %124, 48
  br i1 %128, label %180, label %129

129:                                              ; preds = %119
  %130 = sub nsw i64 %126, %127
  br label %131

131:                                              ; preds = %131, %129
  %132 = phi i64 [ 0, %129 ], [ %177, %131 ]
  %133 = phi i64 [ %130, %129 ], [ %178, %131 ]
  %134 = getelementptr i16, i16* %80, i64 %132
  %135 = getelementptr i16, i16* %111, i64 %132
  %136 = bitcast i16* %134 to <8 x i16>*
  %137 = load <8 x i16>, <8 x i16>* %136, align 2, !alias.scope !9
  %138 = getelementptr i16, i16* %134, i64 8
  %139 = bitcast i16* %138 to <8 x i16>*
  %140 = load <8 x i16>, <8 x i16>* %139, align 2, !alias.scope !9
  %141 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %137, <8 x i16>* %141, align 2, !alias.scope !12, !noalias !9
  %142 = getelementptr i16, i16* %135, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %140, <8 x i16>* %143, align 2, !alias.scope !12, !noalias !9
  %144 = or i64 %132, 16
  %145 = getelementptr i16, i16* %80, i64 %144
  %146 = getelementptr i16, i16* %111, i64 %144
  %147 = bitcast i16* %145 to <8 x i16>*
  %148 = load <8 x i16>, <8 x i16>* %147, align 2, !alias.scope !9
  %149 = getelementptr i16, i16* %145, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  %151 = load <8 x i16>, <8 x i16>* %150, align 2, !alias.scope !9
  %152 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %148, <8 x i16>* %152, align 2, !alias.scope !12, !noalias !9
  %153 = getelementptr i16, i16* %146, i64 8
  %154 = bitcast i16* %153 to <8 x i16>*
  store <8 x i16> %151, <8 x i16>* %154, align 2, !alias.scope !12, !noalias !9
  %155 = or i64 %132, 32
  %156 = getelementptr i16, i16* %80, i64 %155
  %157 = getelementptr i16, i16* %111, i64 %155
  %158 = bitcast i16* %156 to <8 x i16>*
  %159 = load <8 x i16>, <8 x i16>* %158, align 2, !alias.scope !9
  %160 = getelementptr i16, i16* %156, i64 8
  %161 = bitcast i16* %160 to <8 x i16>*
  %162 = load <8 x i16>, <8 x i16>* %161, align 2, !alias.scope !9
  %163 = bitcast i16* %157 to <8 x i16>*
  store <8 x i16> %159, <8 x i16>* %163, align 2, !alias.scope !12, !noalias !9
  %164 = getelementptr i16, i16* %157, i64 8
  %165 = bitcast i16* %164 to <8 x i16>*
  store <8 x i16> %162, <8 x i16>* %165, align 2, !alias.scope !12, !noalias !9
  %166 = or i64 %132, 48
  %167 = getelementptr i16, i16* %80, i64 %166
  %168 = getelementptr i16, i16* %111, i64 %166
  %169 = bitcast i16* %167 to <8 x i16>*
  %170 = load <8 x i16>, <8 x i16>* %169, align 2, !alias.scope !9
  %171 = getelementptr i16, i16* %167, i64 8
  %172 = bitcast i16* %171 to <8 x i16>*
  %173 = load <8 x i16>, <8 x i16>* %172, align 2, !alias.scope !9
  %174 = bitcast i16* %168 to <8 x i16>*
  store <8 x i16> %170, <8 x i16>* %174, align 2, !alias.scope !12, !noalias !9
  %175 = getelementptr i16, i16* %168, i64 8
  %176 = bitcast i16* %175 to <8 x i16>*
  store <8 x i16> %173, <8 x i16>* %176, align 2, !alias.scope !12, !noalias !9
  %177 = add i64 %132, 64
  %178 = add i64 %133, -4
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %180, label %131, !llvm.loop !14

180:                                              ; preds = %131, %119
  %181 = phi i64 [ 0, %119 ], [ %177, %131 ]
  %182 = icmp eq i64 %127, 0
  br i1 %182, label %199, label %183

183:                                              ; preds = %180, %183
  %184 = phi i64 [ %196, %183 ], [ %181, %180 ]
  %185 = phi i64 [ %197, %183 ], [ %127, %180 ]
  %186 = getelementptr i16, i16* %80, i64 %184
  %187 = getelementptr i16, i16* %111, i64 %184
  %188 = bitcast i16* %186 to <8 x i16>*
  %189 = load <8 x i16>, <8 x i16>* %188, align 2, !alias.scope !9
  %190 = getelementptr i16, i16* %186, i64 8
  %191 = bitcast i16* %190 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !9
  %193 = bitcast i16* %187 to <8 x i16>*
  store <8 x i16> %189, <8 x i16>* %193, align 2, !alias.scope !12, !noalias !9
  %194 = getelementptr i16, i16* %187, i64 8
  %195 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %195, align 2, !alias.scope !12, !noalias !9
  %196 = add i64 %184, 16
  %197 = add i64 %185, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %183, !llvm.loop !16

199:                                              ; preds = %183, %180
  %200 = icmp eq i64 %87, %120
  br i1 %200, label %254, label %201

201:                                              ; preds = %199, %113, %110
  %202 = phi i64 [ %87, %113 ], [ %87, %110 ], [ %121, %199 ]
  %203 = phi i16* [ %80, %113 ], [ %80, %110 ], [ %122, %199 ]
  %204 = phi i16* [ %111, %113 ], [ %111, %110 ], [ %123, %199 ]
  %205 = add i64 %202, -1
  %206 = and i64 %202, 7
  %207 = icmp eq i64 %206, 0
  br i1 %207, label %219, label %208

208:                                              ; preds = %201, %208
  %209 = phi i64 [ %214, %208 ], [ %202, %201 ]
  %210 = phi i16* [ %216, %208 ], [ %203, %201 ]
  %211 = phi i16* [ %215, %208 ], [ %204, %201 ]
  %212 = phi i64 [ %217, %208 ], [ %206, %201 ]
  %213 = load i16, i16* %210, align 2
  store i16 %213, i16* %211, align 2
  %214 = add i64 %209, -1
  %215 = getelementptr inbounds i16, i16* %211, i64 1
  %216 = getelementptr inbounds i16, i16* %210, i64 1
  %217 = add i64 %212, -1
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %219, label %208, !llvm.loop !18

219:                                              ; preds = %208, %201
  %220 = phi i64 [ %202, %201 ], [ %214, %208 ]
  %221 = phi i16* [ %203, %201 ], [ %216, %208 ]
  %222 = phi i16* [ %204, %201 ], [ %215, %208 ]
  %223 = icmp ult i64 %205, 7
  br i1 %223, label %254, label %224

224:                                              ; preds = %219, %224
  %225 = phi i64 [ %250, %224 ], [ %220, %219 ]
  %226 = phi i16* [ %252, %224 ], [ %221, %219 ]
  %227 = phi i16* [ %251, %224 ], [ %222, %219 ]
  %228 = load i16, i16* %226, align 2
  store i16 %228, i16* %227, align 2
  %229 = getelementptr inbounds i16, i16* %227, i64 1
  %230 = getelementptr inbounds i16, i16* %226, i64 1
  %231 = load i16, i16* %230, align 2
  store i16 %231, i16* %229, align 2
  %232 = getelementptr inbounds i16, i16* %227, i64 2
  %233 = getelementptr inbounds i16, i16* %226, i64 2
  %234 = load i16, i16* %233, align 2
  store i16 %234, i16* %232, align 2
  %235 = getelementptr inbounds i16, i16* %227, i64 3
  %236 = getelementptr inbounds i16, i16* %226, i64 3
  %237 = load i16, i16* %236, align 2
  store i16 %237, i16* %235, align 2
  %238 = getelementptr inbounds i16, i16* %227, i64 4
  %239 = getelementptr inbounds i16, i16* %226, i64 4
  %240 = load i16, i16* %239, align 2
  store i16 %240, i16* %238, align 2
  %241 = getelementptr inbounds i16, i16* %227, i64 5
  %242 = getelementptr inbounds i16, i16* %226, i64 5
  %243 = load i16, i16* %242, align 2
  store i16 %243, i16* %241, align 2
  %244 = getelementptr inbounds i16, i16* %227, i64 6
  %245 = getelementptr inbounds i16, i16* %226, i64 6
  %246 = load i16, i16* %245, align 2
  store i16 %246, i16* %244, align 2
  %247 = getelementptr inbounds i16, i16* %227, i64 7
  %248 = getelementptr inbounds i16, i16* %226, i64 7
  %249 = load i16, i16* %248, align 2
  store i16 %249, i16* %247, align 2
  %250 = add i64 %225, -8
  %251 = getelementptr inbounds i16, i16* %227, i64 8
  %252 = getelementptr inbounds i16, i16* %226, i64 8
  %253 = icmp eq i64 %250, 0
  br i1 %253, label %254, label %224, !llvm.loop !19

254:                                              ; preds = %219, %224, %199
  %255 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %22, align 8
  br label %256

256:                                              ; preds = %254, %83, %107
  %257 = phi %struct.ImporterAutofillFormDataEntry* [ %68, %107 ], [ %68, %83 ], [ %255, %254 ]
  %258 = phi i64 [ 0, %107 ], [ 0, %83 ], [ %87, %254 ]
  %259 = phi i16* [ %26, %107 ], [ %26, %83 ], [ %111, %254 ]
  %260 = getelementptr inbounds i16, i16* %259, i64 %258
  store i16 0, i16* %260, align 2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %261 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %257, i64 %67, i32 1
  %262 = bitcast %"class.std::__1::basic_string"* %261 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %263 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %262, i64 0, i32 1, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false)
  %264 = load i8, i8* %263, align 1
  %265 = icmp slt i8 %264, 0
  br i1 %265, label %266, label %269

266:                                              ; preds = %256
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %261, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %268 = load i16*, i16** %267, align 8
  br label %271

269:                                              ; preds = %256
  %270 = bitcast %"class.std::__1::basic_string"* %261 to i16*
  br label %271

271:                                              ; preds = %266, %269
  %272 = phi i16* [ %268, %266 ], [ %270, %269 ]
  %273 = load i16, i16* %272, align 2
  %274 = icmp eq i16 %273, 0
  br i1 %274, label %275, label %276

275:                                              ; preds = %271
  store i8 0, i8* %32, align 1
  br label %446

276:                                              ; preds = %271, %276
  %277 = phi i64 [ %279, %276 ], [ 0, %271 ]
  %278 = phi i16* [ %280, %276 ], [ %272, %271 ]
  %279 = add i64 %277, 1
  %280 = getelementptr inbounds i16, i16* %278, i64 1
  %281 = load i16, i16* %280, align 2
  %282 = icmp eq i16 %281, 0
  br i1 %282, label %283, label %276

283:                                              ; preds = %276
  %284 = icmp ugt i64 %279, 9223372036854775791
  br i1 %284, label %285, label %287

285:                                              ; preds = %283
  %286 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %286) #11
  unreachable

287:                                              ; preds = %283
  %288 = icmp ult i64 %279, 11
  br i1 %288, label %299, label %289

289:                                              ; preds = %287
  %290 = add nuw nsw i64 %277, 9
  %291 = and i64 %290, -8
  %292 = icmp slt i64 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %289
  call void @abort() #11
  unreachable

294:                                              ; preds = %289
  %295 = shl i64 %291, 1
  %296 = call i8* @_Znwm(i64 %295) #10
  %297 = bitcast i8* %296 to i16*
  store i8* %296, i8** %30, align 8
  %298 = or i64 %291, -9223372036854775808
  store i64 %298, i64* %29, align 8
  store i64 %279, i64* %28, align 8
  br label %302

299:                                              ; preds = %287
  %300 = trunc i64 %279 to i8
  store i8 %300, i8* %32, align 1
  %301 = icmp eq i64 %279, 0
  br i1 %301, label %446, label %302

302:                                              ; preds = %299, %294
  %303 = phi i16* [ %297, %294 ], [ %33, %299 ]
  %304 = icmp ult i64 %279, 16
  br i1 %304, label %393, label %305

305:                                              ; preds = %302
  %306 = getelementptr i16, i16* %303, i64 %279
  %307 = getelementptr i16, i16* %272, i64 %279
  %308 = icmp ult i16* %303, %307
  %309 = icmp ult i16* %272, %306
  %310 = and i1 %308, %309
  br i1 %310, label %393, label %311

311:                                              ; preds = %305
  %312 = and i64 %279, -16
  %313 = sub i64 %279, %312
  %314 = getelementptr i16, i16* %272, i64 %312
  %315 = getelementptr i16, i16* %303, i64 %312
  %316 = add i64 %312, -16
  %317 = lshr exact i64 %316, 4
  %318 = add nuw nsw i64 %317, 1
  %319 = and i64 %318, 3
  %320 = icmp ult i64 %316, 48
  br i1 %320, label %372, label %321

321:                                              ; preds = %311
  %322 = sub nsw i64 %318, %319
  br label %323

323:                                              ; preds = %323, %321
  %324 = phi i64 [ 0, %321 ], [ %369, %323 ]
  %325 = phi i64 [ %322, %321 ], [ %370, %323 ]
  %326 = getelementptr i16, i16* %272, i64 %324
  %327 = getelementptr i16, i16* %303, i64 %324
  %328 = bitcast i16* %326 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !20
  %330 = getelementptr i16, i16* %326, i64 8
  %331 = bitcast i16* %330 to <8 x i16>*
  %332 = load <8 x i16>, <8 x i16>* %331, align 2, !alias.scope !20
  %333 = bitcast i16* %327 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %333, align 2, !alias.scope !23, !noalias !20
  %334 = getelementptr i16, i16* %327, i64 8
  %335 = bitcast i16* %334 to <8 x i16>*
  store <8 x i16> %332, <8 x i16>* %335, align 2, !alias.scope !23, !noalias !20
  %336 = or i64 %324, 16
  %337 = getelementptr i16, i16* %272, i64 %336
  %338 = getelementptr i16, i16* %303, i64 %336
  %339 = bitcast i16* %337 to <8 x i16>*
  %340 = load <8 x i16>, <8 x i16>* %339, align 2, !alias.scope !20
  %341 = getelementptr i16, i16* %337, i64 8
  %342 = bitcast i16* %341 to <8 x i16>*
  %343 = load <8 x i16>, <8 x i16>* %342, align 2, !alias.scope !20
  %344 = bitcast i16* %338 to <8 x i16>*
  store <8 x i16> %340, <8 x i16>* %344, align 2, !alias.scope !23, !noalias !20
  %345 = getelementptr i16, i16* %338, i64 8
  %346 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %343, <8 x i16>* %346, align 2, !alias.scope !23, !noalias !20
  %347 = or i64 %324, 32
  %348 = getelementptr i16, i16* %272, i64 %347
  %349 = getelementptr i16, i16* %303, i64 %347
  %350 = bitcast i16* %348 to <8 x i16>*
  %351 = load <8 x i16>, <8 x i16>* %350, align 2, !alias.scope !20
  %352 = getelementptr i16, i16* %348, i64 8
  %353 = bitcast i16* %352 to <8 x i16>*
  %354 = load <8 x i16>, <8 x i16>* %353, align 2, !alias.scope !20
  %355 = bitcast i16* %349 to <8 x i16>*
  store <8 x i16> %351, <8 x i16>* %355, align 2, !alias.scope !23, !noalias !20
  %356 = getelementptr i16, i16* %349, i64 8
  %357 = bitcast i16* %356 to <8 x i16>*
  store <8 x i16> %354, <8 x i16>* %357, align 2, !alias.scope !23, !noalias !20
  %358 = or i64 %324, 48
  %359 = getelementptr i16, i16* %272, i64 %358
  %360 = getelementptr i16, i16* %303, i64 %358
  %361 = bitcast i16* %359 to <8 x i16>*
  %362 = load <8 x i16>, <8 x i16>* %361, align 2, !alias.scope !20
  %363 = getelementptr i16, i16* %359, i64 8
  %364 = bitcast i16* %363 to <8 x i16>*
  %365 = load <8 x i16>, <8 x i16>* %364, align 2, !alias.scope !20
  %366 = bitcast i16* %360 to <8 x i16>*
  store <8 x i16> %362, <8 x i16>* %366, align 2, !alias.scope !23, !noalias !20
  %367 = getelementptr i16, i16* %360, i64 8
  %368 = bitcast i16* %367 to <8 x i16>*
  store <8 x i16> %365, <8 x i16>* %368, align 2, !alias.scope !23, !noalias !20
  %369 = add i64 %324, 64
  %370 = add i64 %325, -4
  %371 = icmp eq i64 %370, 0
  br i1 %371, label %372, label %323, !llvm.loop !25

372:                                              ; preds = %323, %311
  %373 = phi i64 [ 0, %311 ], [ %369, %323 ]
  %374 = icmp eq i64 %319, 0
  br i1 %374, label %391, label %375

375:                                              ; preds = %372, %375
  %376 = phi i64 [ %388, %375 ], [ %373, %372 ]
  %377 = phi i64 [ %389, %375 ], [ %319, %372 ]
  %378 = getelementptr i16, i16* %272, i64 %376
  %379 = getelementptr i16, i16* %303, i64 %376
  %380 = bitcast i16* %378 to <8 x i16>*
  %381 = load <8 x i16>, <8 x i16>* %380, align 2, !alias.scope !20
  %382 = getelementptr i16, i16* %378, i64 8
  %383 = bitcast i16* %382 to <8 x i16>*
  %384 = load <8 x i16>, <8 x i16>* %383, align 2, !alias.scope !20
  %385 = bitcast i16* %379 to <8 x i16>*
  store <8 x i16> %381, <8 x i16>* %385, align 2, !alias.scope !23, !noalias !20
  %386 = getelementptr i16, i16* %379, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  store <8 x i16> %384, <8 x i16>* %387, align 2, !alias.scope !23, !noalias !20
  %388 = add i64 %376, 16
  %389 = add i64 %377, -1
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %391, label %375, !llvm.loop !26

391:                                              ; preds = %375, %372
  %392 = icmp eq i64 %279, %312
  br i1 %392, label %446, label %393

393:                                              ; preds = %391, %305, %302
  %394 = phi i64 [ %279, %305 ], [ %279, %302 ], [ %313, %391 ]
  %395 = phi i16* [ %272, %305 ], [ %272, %302 ], [ %314, %391 ]
  %396 = phi i16* [ %303, %305 ], [ %303, %302 ], [ %315, %391 ]
  %397 = add i64 %394, -1
  %398 = and i64 %394, 7
  %399 = icmp eq i64 %398, 0
  br i1 %399, label %411, label %400

400:                                              ; preds = %393, %400
  %401 = phi i64 [ %406, %400 ], [ %394, %393 ]
  %402 = phi i16* [ %408, %400 ], [ %395, %393 ]
  %403 = phi i16* [ %407, %400 ], [ %396, %393 ]
  %404 = phi i64 [ %409, %400 ], [ %398, %393 ]
  %405 = load i16, i16* %402, align 2
  store i16 %405, i16* %403, align 2
  %406 = add i64 %401, -1
  %407 = getelementptr inbounds i16, i16* %403, i64 1
  %408 = getelementptr inbounds i16, i16* %402, i64 1
  %409 = add i64 %404, -1
  %410 = icmp eq i64 %409, 0
  br i1 %410, label %411, label %400, !llvm.loop !27

411:                                              ; preds = %400, %393
  %412 = phi i64 [ %394, %393 ], [ %406, %400 ]
  %413 = phi i16* [ %395, %393 ], [ %408, %400 ]
  %414 = phi i16* [ %396, %393 ], [ %407, %400 ]
  %415 = icmp ult i64 %397, 7
  br i1 %415, label %446, label %416

416:                                              ; preds = %411, %416
  %417 = phi i64 [ %442, %416 ], [ %412, %411 ]
  %418 = phi i16* [ %444, %416 ], [ %413, %411 ]
  %419 = phi i16* [ %443, %416 ], [ %414, %411 ]
  %420 = load i16, i16* %418, align 2
  store i16 %420, i16* %419, align 2
  %421 = getelementptr inbounds i16, i16* %419, i64 1
  %422 = getelementptr inbounds i16, i16* %418, i64 1
  %423 = load i16, i16* %422, align 2
  store i16 %423, i16* %421, align 2
  %424 = getelementptr inbounds i16, i16* %419, i64 2
  %425 = getelementptr inbounds i16, i16* %418, i64 2
  %426 = load i16, i16* %425, align 2
  store i16 %426, i16* %424, align 2
  %427 = getelementptr inbounds i16, i16* %419, i64 3
  %428 = getelementptr inbounds i16, i16* %418, i64 3
  %429 = load i16, i16* %428, align 2
  store i16 %429, i16* %427, align 2
  %430 = getelementptr inbounds i16, i16* %419, i64 4
  %431 = getelementptr inbounds i16, i16* %418, i64 4
  %432 = load i16, i16* %431, align 2
  store i16 %432, i16* %430, align 2
  %433 = getelementptr inbounds i16, i16* %419, i64 5
  %434 = getelementptr inbounds i16, i16* %418, i64 5
  %435 = load i16, i16* %434, align 2
  store i16 %435, i16* %433, align 2
  %436 = getelementptr inbounds i16, i16* %419, i64 6
  %437 = getelementptr inbounds i16, i16* %418, i64 6
  %438 = load i16, i16* %437, align 2
  store i16 %438, i16* %436, align 2
  %439 = getelementptr inbounds i16, i16* %419, i64 7
  %440 = getelementptr inbounds i16, i16* %418, i64 7
  %441 = load i16, i16* %440, align 2
  store i16 %441, i16* %439, align 2
  %442 = add i64 %417, -8
  %443 = getelementptr inbounds i16, i16* %419, i64 8
  %444 = getelementptr inbounds i16, i16* %418, i64 8
  %445 = icmp eq i64 %442, 0
  br i1 %445, label %446, label %416, !llvm.loop !28

446:                                              ; preds = %411, %416, %391, %275, %299
  %447 = phi i64 [ 0, %299 ], [ 0, %275 ], [ %279, %391 ], [ %279, %416 ], [ %279, %411 ]
  %448 = phi i16* [ %33, %299 ], [ %33, %275 ], [ %303, %391 ], [ %303, %416 ], [ %303, %411 ]
  %449 = getelementptr inbounds i16, i16* %448, i64 %447
  store i16 0, i16* %449, align 2
  %450 = load i8, i8* %25, align 1
  %451 = icmp slt i8 %450, 0
  %452 = load i64, i64* %20, align 8
  %453 = zext i8 %450 to i64
  %454 = select i1 %451, i64 %452, i64 %453
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %478, label %456

456:                                              ; preds = %446
  %457 = load i8, i8* %32, align 1
  %458 = icmp slt i8 %457, 0
  %459 = load i64, i64* %28, align 8
  %460 = zext i8 %457 to i64
  %461 = select i1 %458, i64 %459, i64 %460
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %478, label %463

463:                                              ; preds = %456
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %34) #9
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %35) #9
  call void @_ZN8autofill11AutofillKeyC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_(%"class.autofill::AutofillKey"* nonnull %7, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #9
  %464 = load %struct.ImporterAutofillFormDataEntry*, %struct.ImporterAutofillFormDataEntry** %22, align 8
  %465 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %464, i64 %67, i32 3
  %466 = getelementptr inbounds %struct.ImporterAutofillFormDataEntry, %struct.ImporterAutofillFormDataEntry* %464, i64 %67, i32 4
  call void @_ZN8autofill13AutofillEntryC1ERKNS_11AutofillKeyERKN4base4TimeES7_(%"class.autofill::AutofillEntry"* nonnull %6, %"class.autofill::AutofillKey"* nonnull dereferenceable(56) %7, %"class.base::Time"* dereferenceable(8) %465, %"class.base::Time"* dereferenceable(8) %466) #9
  %467 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %10, align 8
  %468 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %11, align 8
  %469 = icmp ult %"class.autofill::AutofillEntry"* %467, %468
  br i1 %469, label %470, label %476

470:                                              ; preds = %463
  %471 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %467, i64 0, i32 0
  call void @_ZN8autofill11AutofillKeyC1ERKS0_(%"class.autofill::AutofillKey"* %471, %"class.autofill::AutofillKey"* nonnull dereferenceable(56) %36) #9
  %472 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %467, i64 0, i32 1
  %473 = bitcast %"class.base::Time"* %472 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %473, i8* align 8 %38, i64 16, i1 false) #9
  %474 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %467, i64 1
  %475 = ptrtoint %"class.autofill::AutofillEntry"* %474 to i64
  store i64 %475, i64* %39, align 8
  br label %477

476:                                              ; preds = %463
  call void @_ZNSt3__16vectorIN8autofill13AutofillEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.157"* nonnull %3, %"class.autofill::AutofillEntry"* nonnull dereferenceable(72) %6) #9
  br label %477

477:                                              ; preds = %470, %476
  call void @_ZN8autofill13AutofillEntryD1Ev(%"class.autofill::AutofillEntry"* nonnull %6) #9
  call void @_ZN8autofill11AutofillKeyD1Ev(%"class.autofill::AutofillKey"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %35) #9
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %34) #9
  br label %478

478:                                              ; preds = %446, %456, %477
  %479 = load i8, i8* %32, align 1
  %480 = icmp slt i8 %479, 0
  br i1 %480, label %481, label %483

481:                                              ; preds = %478
  %482 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %482) #10
  br label %483

483:                                              ; preds = %478, %481
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  %484 = load i8, i8* %25, align 1
  %485 = icmp slt i8 %484, 0
  br i1 %485, label %486, label %488

486:                                              ; preds = %483
  %487 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %487) #10
  br label %488

488:                                              ; preds = %483, %486
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #9
  %489 = add nuw i64 %67, 1
  %490 = load i64, i64* %13, align 8
  %491 = load i64, i64* %15, align 8
  %492 = sub i64 %490, %491
  %493 = sdiv exact i64 %492, 72
  %494 = icmp ult i64 %489, %493
  br i1 %494, label %65, label %42
}

declare void @_ZN8autofill11AutofillKeyC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEES9_(%"class.autofill::AutofillKey"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

declare void @_ZN8autofill13AutofillEntryC1ERKNS_11AutofillKeyERKN4base4TimeES7_(%"class.autofill::AutofillEntry"*, %"class.autofill::AutofillKey"* dereferenceable(56), %"class.base::Time"* dereferenceable(8), %"class.base::Time"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8autofill13AutofillEntryD1Ev(%"class.autofill::AutofillEntry"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8autofill11AutofillKeyD1Ev(%"class.autofill::AutofillKey"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge13NotifyStartedEv(%class.InProcessImporterBridge*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  br label %8

8:                                                ; preds = %5, %1
  %9 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast i64* %11 to %class.ExternalProcessImporterHost**
  %13 = load %class.ExternalProcessImporterHost*, %class.ExternalProcessImporterHost** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi %class.ExternalProcessImporterHost* [ %13, %10 ], [ null, %8 ]
  call void @_ZN27ExternalProcessImporterHost19NotifyImportStartedEv(%class.ExternalProcessImporterHost* %15) #9
  ret void
}

declare void @_ZN27ExternalProcessImporterHost19NotifyImportStartedEv(%class.ExternalProcessImporterHost*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge17NotifyItemStartedEN8importer10ImportItemE(%class.InProcessImporterBridge*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #9
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %9

9:                                                ; preds = %6, %2
  %10 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #9
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i64* %12 to %class.ExternalProcessImporterHost**
  %14 = load %class.ExternalProcessImporterHost*, %class.ExternalProcessImporterHost** %13, align 8
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi %class.ExternalProcessImporterHost* [ %14, %11 ], [ null, %9 ]
  call void @_ZN27ExternalProcessImporterHost23NotifyImportItemStartedEN8importer10ImportItemE(%class.ExternalProcessImporterHost* %16, i32 %1) #9
  ret void
}

declare void @_ZN27ExternalProcessImporterHost23NotifyImportItemStartedEN8importer10ImportItemE(%class.ExternalProcessImporterHost*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge15NotifyItemEndedEN8importer10ImportItemE(%class.InProcessImporterBridge*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %5 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #9
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %8 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #9
  br label %9

9:                                                ; preds = %6, %2
  %10 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %4) #9
  br i1 %10, label %11, label %15

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 1
  %13 = bitcast i64* %12 to %class.ExternalProcessImporterHost**
  %14 = load %class.ExternalProcessImporterHost*, %class.ExternalProcessImporterHost** %13, align 8
  br label %15

15:                                               ; preds = %9, %11
  %16 = phi %class.ExternalProcessImporterHost* [ %14, %11 ], [ null, %9 ]
  call void @_ZN27ExternalProcessImporterHost21NotifyImportItemEndedEN8importer10ImportItemE(%class.ExternalProcessImporterHost* %16, i32 %1) #9
  ret void
}

declare void @_ZN27ExternalProcessImporterHost21NotifyImportItemEndedEN8importer10ImportItemE(%class.ExternalProcessImporterHost*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge11NotifyEndedEv(%class.InProcessImporterBridge*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i32 255, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #9
  %7 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  br label %8

8:                                                ; preds = %5, %1
  %9 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %3) #9
  br i1 %9, label %10, label %14

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0, i32 1
  %12 = bitcast i64* %11 to %class.ExternalProcessImporterHost**
  %13 = load %class.ExternalProcessImporterHost*, %class.ExternalProcessImporterHost** %12, align 8
  br label %14

14:                                               ; preds = %8, %10
  %15 = phi %class.ExternalProcessImporterHost* [ %13, %10 ], [ null, %8 ]
  call void @_ZN27ExternalProcessImporterHost17NotifyImportEndedEv(%class.ExternalProcessImporterHost* %15) #9
  ret void
}

declare void @_ZN27ExternalProcessImporterHost17NotifyImportEndedEv(%class.ExternalProcessImporterHost*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridge18GetLocalizedStringEi(%"class.std::__1::basic_string"* noalias sret, %class.InProcessImporterBridge* nocapture readnone, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret %0, i32 %2) #9
  ret void
}

declare void @_ZN9l10n_util14GetStringUTF16Ei(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridgeD2Ev(%class.InProcessImporterBridge*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV23InProcessImporterBridge, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #9
  %4 = bitcast %class.InProcessImporterBridge* %0 to %class.ImporterBridge*
  tail call void @_ZN14ImporterBridgeD2Ev(%class.ImporterBridge* %4) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN14ImporterBridgeD2Ev(%class.ImporterBridge*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN23InProcessImporterBridgeD0Ev(%class.InProcessImporterBridge*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV23InProcessImporterBridge, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.InProcessImporterBridge, %class.InProcessImporterBridge* %0, i64 0, i32 2, i32 0
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %3) #9
  %4 = bitcast %class.InProcessImporterBridge* %0 to %class.ImporterBridge*
  tail call void @_ZN14ImporterBridgeD2Ev(%class.ImporterBridge* %4) #9
  %5 = bitcast %class.InProcessImporterBridge* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

declare void @_ZN4base8internal13WeakReferenceC1ERKS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.28"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.history::URLRow"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.history::URLRow"*
  br i1 %10, label %12, label %58

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.history::URLRow"** %13 to i64*
  %15 = icmp ugt i64 %1, 100254043878856258
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = sdiv exact i64 %19, 184
  %21 = mul i64 %1, 184
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.history::URLRow"*
  %24 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %23, i64 %20
  %25 = ptrtoint %"class.history::URLRow"* %24 to i64
  %26 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %23, i64 %1
  %27 = ptrtoint %"class.history::URLRow"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.history::URLRow"*
  %29 = icmp eq %"class.history::URLRow"* %28, %11
  br i1 %29, label %41, label %30

30:                                               ; preds = %17, %30
  %31 = phi %"class.history::URLRow"* [ %33, %30 ], [ %24, %17 ]
  %32 = phi %"class.history::URLRow"* [ %34, %30 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %31, i64 -1
  %34 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %32, i64 -1
  tail call void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"* %33, %"class.history::URLRow"* dereferenceable(184) %34) #9
  %35 = icmp eq %"class.history::URLRow"* %34, %11
  br i1 %35, label %36, label %30

36:                                               ; preds = %30
  %37 = ptrtoint %"class.history::URLRow"* %33 to i64
  %38 = load i64, i64* %6, align 8
  %39 = load %"class.history::URLRow"*, %"class.history::URLRow"** %13, align 8
  %40 = inttoptr i64 %38 to %"class.history::URLRow"*
  br label %41

41:                                               ; preds = %17, %36
  %42 = phi %"class.history::URLRow"* [ %40, %36 ], [ %28, %17 ]
  %43 = phi %"class.history::URLRow"* [ %39, %36 ], [ %11, %17 ]
  %44 = phi i64 [ %37, %36 ], [ %25, %17 ]
  %45 = phi i64 [ %38, %36 ], [ %18, %17 ]
  store i64 %44, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %46 = icmp eq %"class.history::URLRow"* %43, %42
  br i1 %46, label %54, label %47

47:                                               ; preds = %41, %47
  %48 = phi %"class.history::URLRow"* [ %49, %47 ], [ %43, %41 ]
  %49 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %48, i64 -1
  %50 = bitcast %"class.history::URLRow"* %49 to void (%"class.history::URLRow"*)***
  %51 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %50, align 8
  %52 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %51, align 8
  tail call void %52(%"class.history::URLRow"* %49) #9
  %53 = icmp eq %"class.history::URLRow"* %49, %42
  br i1 %53, label %54, label %47

54:                                               ; preds = %47, %41
  %55 = icmp eq i64 %45, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %45 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %56, %54, %2
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN7history6URLRowC1ERK4GURL(%"class.history::URLRow"*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN7history6URLRowD1Ev(%"class.history::URLRow"*) unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEaSERKS5_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %4 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %4, label %510, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %341, label %14

14:                                               ; preds = %5
  br i1 %13, label %17, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %16, i64 24, i1 false)
  br label %510

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  %20 = bitcast i16* %19 to i8*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %22, 11
  br i1 %23, label %24, label %175

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %26 = trunc i64 %22 to i8
  store i8 %26, i8* %7, align 1
  %27 = icmp eq i64 %22, 0
  br i1 %27, label %173, label %28

28:                                               ; preds = %24
  %29 = icmp ult i64 %22, 16
  br i1 %29, label %120, label %30

30:                                               ; preds = %28
  %31 = shl i64 %22, 1
  %32 = getelementptr i8, i8* %3, i64 %31
  %33 = getelementptr i16, i16* %19, i64 %22
  %34 = bitcast i16* %33 to %"class.std::__1::basic_string"*
  %35 = icmp ugt %"class.std::__1::basic_string"* %34, %0
  %36 = icmp ugt i8* %32, %20
  %37 = and i1 %35, %36
  br i1 %37, label %120, label %38

38:                                               ; preds = %30
  %39 = and i64 %22, -16
  %40 = sub i64 %22, %39
  %41 = getelementptr i16, i16* %19, i64 %39
  %42 = getelementptr i16, i16* %25, i64 %39
  %43 = add i64 %39, -16
  %44 = lshr exact i64 %43, 4
  %45 = add nuw nsw i64 %44, 1
  %46 = and i64 %45, 3
  %47 = icmp ult i64 %43, 48
  br i1 %47, label %99, label %48

48:                                               ; preds = %38
  %49 = sub nsw i64 %45, %46
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %96, %50 ]
  %52 = phi i64 [ %49, %48 ], [ %97, %50 ]
  %53 = getelementptr i16, i16* %19, i64 %51
  %54 = getelementptr i16, i16* %25, i64 %51
  %55 = bitcast i16* %53 to <8 x i16>*
  %56 = load <8 x i16>, <8 x i16>* %55, align 2, !alias.scope !29
  %57 = getelementptr i16, i16* %53, i64 8
  %58 = bitcast i16* %57 to <8 x i16>*
  %59 = load <8 x i16>, <8 x i16>* %58, align 2, !alias.scope !29
  %60 = bitcast i16* %54 to <8 x i16>*
  store <8 x i16> %56, <8 x i16>* %60, align 2, !alias.scope !32, !noalias !29
  %61 = getelementptr i16, i16* %54, i64 8
  %62 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %59, <8 x i16>* %62, align 2, !alias.scope !32, !noalias !29
  %63 = or i64 %51, 16
  %64 = getelementptr i16, i16* %19, i64 %63
  %65 = getelementptr i16, i16* %25, i64 %63
  %66 = bitcast i16* %64 to <8 x i16>*
  %67 = load <8 x i16>, <8 x i16>* %66, align 2, !alias.scope !29
  %68 = getelementptr i16, i16* %64, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  %70 = load <8 x i16>, <8 x i16>* %69, align 2, !alias.scope !29
  %71 = bitcast i16* %65 to <8 x i16>*
  store <8 x i16> %67, <8 x i16>* %71, align 2, !alias.scope !32, !noalias !29
  %72 = getelementptr i16, i16* %65, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %70, <8 x i16>* %73, align 2, !alias.scope !32, !noalias !29
  %74 = or i64 %51, 32
  %75 = getelementptr i16, i16* %19, i64 %74
  %76 = getelementptr i16, i16* %25, i64 %74
  %77 = bitcast i16* %75 to <8 x i16>*
  %78 = load <8 x i16>, <8 x i16>* %77, align 2, !alias.scope !29
  %79 = getelementptr i16, i16* %75, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  %81 = load <8 x i16>, <8 x i16>* %80, align 2, !alias.scope !29
  %82 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %78, <8 x i16>* %82, align 2, !alias.scope !32, !noalias !29
  %83 = getelementptr i16, i16* %76, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %81, <8 x i16>* %84, align 2, !alias.scope !32, !noalias !29
  %85 = or i64 %51, 48
  %86 = getelementptr i16, i16* %19, i64 %85
  %87 = getelementptr i16, i16* %25, i64 %85
  %88 = bitcast i16* %86 to <8 x i16>*
  %89 = load <8 x i16>, <8 x i16>* %88, align 2, !alias.scope !29
  %90 = getelementptr i16, i16* %86, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !29
  %93 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %89, <8 x i16>* %93, align 2, !alias.scope !32, !noalias !29
  %94 = getelementptr i16, i16* %87, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %95, align 2, !alias.scope !32, !noalias !29
  %96 = add i64 %51, 64
  %97 = add i64 %52, -4
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %50, !llvm.loop !34

99:                                               ; preds = %50, %38
  %100 = phi i64 [ 0, %38 ], [ %96, %50 ]
  %101 = icmp eq i64 %46, 0
  br i1 %101, label %118, label %102

102:                                              ; preds = %99, %102
  %103 = phi i64 [ %115, %102 ], [ %100, %99 ]
  %104 = phi i64 [ %116, %102 ], [ %46, %99 ]
  %105 = getelementptr i16, i16* %19, i64 %103
  %106 = getelementptr i16, i16* %25, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !29
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !29
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !32, !noalias !29
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !32, !noalias !29
  %115 = add i64 %103, 16
  %116 = add i64 %104, -1
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %102, !llvm.loop !35

118:                                              ; preds = %102, %99
  %119 = icmp eq i64 %22, %39
  br i1 %119, label %173, label %120

120:                                              ; preds = %118, %30, %28
  %121 = phi i64 [ %22, %30 ], [ %22, %28 ], [ %40, %118 ]
  %122 = phi i16* [ %19, %30 ], [ %19, %28 ], [ %41, %118 ]
  %123 = phi i16* [ %25, %30 ], [ %25, %28 ], [ %42, %118 ]
  %124 = add i64 %121, -1
  %125 = and i64 %121, 7
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %138, label %127

127:                                              ; preds = %120, %127
  %128 = phi i64 [ %133, %127 ], [ %121, %120 ]
  %129 = phi i16* [ %135, %127 ], [ %122, %120 ]
  %130 = phi i16* [ %134, %127 ], [ %123, %120 ]
  %131 = phi i64 [ %136, %127 ], [ %125, %120 ]
  %132 = load i16, i16* %129, align 2
  store i16 %132, i16* %130, align 2
  %133 = add i64 %128, -1
  %134 = getelementptr inbounds i16, i16* %130, i64 1
  %135 = getelementptr inbounds i16, i16* %129, i64 1
  %136 = add i64 %131, -1
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %127, !llvm.loop !36

138:                                              ; preds = %127, %120
  %139 = phi i64 [ %121, %120 ], [ %133, %127 ]
  %140 = phi i16* [ %122, %120 ], [ %135, %127 ]
  %141 = phi i16* [ %123, %120 ], [ %134, %127 ]
  %142 = icmp ult i64 %124, 7
  br i1 %142, label %173, label %143

143:                                              ; preds = %138, %143
  %144 = phi i64 [ %169, %143 ], [ %139, %138 ]
  %145 = phi i16* [ %171, %143 ], [ %140, %138 ]
  %146 = phi i16* [ %170, %143 ], [ %141, %138 ]
  %147 = load i16, i16* %145, align 2
  store i16 %147, i16* %146, align 2
  %148 = getelementptr inbounds i16, i16* %146, i64 1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = load i16, i16* %149, align 2
  store i16 %150, i16* %148, align 2
  %151 = getelementptr inbounds i16, i16* %146, i64 2
  %152 = getelementptr inbounds i16, i16* %145, i64 2
  %153 = load i16, i16* %152, align 2
  store i16 %153, i16* %151, align 2
  %154 = getelementptr inbounds i16, i16* %146, i64 3
  %155 = getelementptr inbounds i16, i16* %145, i64 3
  %156 = load i16, i16* %155, align 2
  store i16 %156, i16* %154, align 2
  %157 = getelementptr inbounds i16, i16* %146, i64 4
  %158 = getelementptr inbounds i16, i16* %145, i64 4
  %159 = load i16, i16* %158, align 2
  store i16 %159, i16* %157, align 2
  %160 = getelementptr inbounds i16, i16* %146, i64 5
  %161 = getelementptr inbounds i16, i16* %145, i64 5
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %146, i64 6
  %164 = getelementptr inbounds i16, i16* %145, i64 6
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %146, i64 7
  %167 = getelementptr inbounds i16, i16* %145, i64 7
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %144, -8
  %170 = getelementptr inbounds i16, i16* %146, i64 8
  %171 = getelementptr inbounds i16, i16* %145, i64 8
  %172 = icmp eq i64 %169, 0
  br i1 %172, label %173, label %143, !llvm.loop !37

173:                                              ; preds = %138, %143, %118, %24
  %174 = getelementptr inbounds i16, i16* %25, i64 %22
  store i16 0, i16* %174, align 2
  br label %510

175:                                              ; preds = %17
  %176 = add i64 %22, -10
  %177 = icmp ugt i64 %176, 9223372036854775780
  br i1 %177, label %178, label %180

178:                                              ; preds = %175
  %179 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %179) #11
  unreachable

180:                                              ; preds = %175
  %181 = icmp ugt i64 %22, 20
  %182 = select i1 %181, i64 %22, i64 20
  %183 = add nuw nsw i64 %182, 8
  %184 = and i64 %183, -8
  %185 = icmp slt i64 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %180
  tail call void @abort() #11
  unreachable

187:                                              ; preds = %180
  %188 = shl i64 %184, 1
  %189 = tail call i8* @_Znwm(i64 %188) #10
  %190 = bitcast i8* %189 to i16*
  %191 = icmp ult i64 %22, 16
  br i1 %191, label %282, label %192

192:                                              ; preds = %187
  %193 = shl i64 %22, 1
  %194 = getelementptr i8, i8* %189, i64 %193
  %195 = getelementptr i16, i16* %19, i64 %22
  %196 = bitcast i16* %195 to i8*
  %197 = icmp ult i8* %189, %196
  %198 = icmp ugt i8* %194, %20
  %199 = and i1 %197, %198
  br i1 %199, label %282, label %200

200:                                              ; preds = %192
  %201 = and i64 %22, -16
  %202 = sub i64 %22, %201
  %203 = getelementptr i16, i16* %19, i64 %201
  %204 = getelementptr i16, i16* %190, i64 %201
  %205 = add i64 %201, -16
  %206 = lshr exact i64 %205, 4
  %207 = add nuw nsw i64 %206, 1
  %208 = and i64 %207, 3
  %209 = icmp ult i64 %205, 48
  br i1 %209, label %261, label %210

210:                                              ; preds = %200
  %211 = sub nsw i64 %207, %208
  br label %212

212:                                              ; preds = %212, %210
  %213 = phi i64 [ 0, %210 ], [ %258, %212 ]
  %214 = phi i64 [ %211, %210 ], [ %259, %212 ]
  %215 = getelementptr i16, i16* %19, i64 %213
  %216 = getelementptr i16, i16* %190, i64 %213
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !38
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !38
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !41, !noalias !38
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !41, !noalias !38
  %225 = or i64 %213, 16
  %226 = getelementptr i16, i16* %19, i64 %225
  %227 = getelementptr i16, i16* %190, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !38
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !38
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !41, !noalias !38
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !41, !noalias !38
  %236 = or i64 %213, 32
  %237 = getelementptr i16, i16* %19, i64 %236
  %238 = getelementptr i16, i16* %190, i64 %236
  %239 = bitcast i16* %237 to <8 x i16>*
  %240 = load <8 x i16>, <8 x i16>* %239, align 2, !alias.scope !38
  %241 = getelementptr i16, i16* %237, i64 8
  %242 = bitcast i16* %241 to <8 x i16>*
  %243 = load <8 x i16>, <8 x i16>* %242, align 2, !alias.scope !38
  %244 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %240, <8 x i16>* %244, align 2, !alias.scope !41, !noalias !38
  %245 = getelementptr i16, i16* %238, i64 8
  %246 = bitcast i16* %245 to <8 x i16>*
  store <8 x i16> %243, <8 x i16>* %246, align 2, !alias.scope !41, !noalias !38
  %247 = or i64 %213, 48
  %248 = getelementptr i16, i16* %19, i64 %247
  %249 = getelementptr i16, i16* %190, i64 %247
  %250 = bitcast i16* %248 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !38
  %252 = getelementptr i16, i16* %248, i64 8
  %253 = bitcast i16* %252 to <8 x i16>*
  %254 = load <8 x i16>, <8 x i16>* %253, align 2, !alias.scope !38
  %255 = bitcast i16* %249 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %255, align 2, !alias.scope !41, !noalias !38
  %256 = getelementptr i16, i16* %249, i64 8
  %257 = bitcast i16* %256 to <8 x i16>*
  store <8 x i16> %254, <8 x i16>* %257, align 2, !alias.scope !41, !noalias !38
  %258 = add i64 %213, 64
  %259 = add i64 %214, -4
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %212, !llvm.loop !43

261:                                              ; preds = %212, %200
  %262 = phi i64 [ 0, %200 ], [ %258, %212 ]
  %263 = icmp eq i64 %208, 0
  br i1 %263, label %280, label %264

264:                                              ; preds = %261, %264
  %265 = phi i64 [ %277, %264 ], [ %262, %261 ]
  %266 = phi i64 [ %278, %264 ], [ %208, %261 ]
  %267 = getelementptr i16, i16* %19, i64 %265
  %268 = getelementptr i16, i16* %190, i64 %265
  %269 = bitcast i16* %267 to <8 x i16>*
  %270 = load <8 x i16>, <8 x i16>* %269, align 2, !alias.scope !38
  %271 = getelementptr i16, i16* %267, i64 8
  %272 = bitcast i16* %271 to <8 x i16>*
  %273 = load <8 x i16>, <8 x i16>* %272, align 2, !alias.scope !38
  %274 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %270, <8 x i16>* %274, align 2, !alias.scope !41, !noalias !38
  %275 = getelementptr i16, i16* %268, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  store <8 x i16> %273, <8 x i16>* %276, align 2, !alias.scope !41, !noalias !38
  %277 = add i64 %265, 16
  %278 = add i64 %266, -1
  %279 = icmp eq i64 %278, 0
  br i1 %279, label %280, label %264, !llvm.loop !44

280:                                              ; preds = %264, %261
  %281 = icmp eq i64 %22, %201
  br i1 %281, label %335, label %282

282:                                              ; preds = %280, %192, %187
  %283 = phi i64 [ %22, %192 ], [ %22, %187 ], [ %202, %280 ]
  %284 = phi i16* [ %19, %192 ], [ %19, %187 ], [ %203, %280 ]
  %285 = phi i16* [ %190, %192 ], [ %190, %187 ], [ %204, %280 ]
  %286 = add i64 %283, -1
  %287 = and i64 %283, 7
  %288 = icmp eq i64 %287, 0
  br i1 %288, label %300, label %289

289:                                              ; preds = %282, %289
  %290 = phi i64 [ %295, %289 ], [ %283, %282 ]
  %291 = phi i16* [ %297, %289 ], [ %284, %282 ]
  %292 = phi i16* [ %296, %289 ], [ %285, %282 ]
  %293 = phi i64 [ %298, %289 ], [ %287, %282 ]
  %294 = load i16, i16* %291, align 2
  store i16 %294, i16* %292, align 2
  %295 = add i64 %290, -1
  %296 = getelementptr inbounds i16, i16* %292, i64 1
  %297 = getelementptr inbounds i16, i16* %291, i64 1
  %298 = add i64 %293, -1
  %299 = icmp eq i64 %298, 0
  br i1 %299, label %300, label %289, !llvm.loop !45

300:                                              ; preds = %289, %282
  %301 = phi i64 [ %283, %282 ], [ %295, %289 ]
  %302 = phi i16* [ %284, %282 ], [ %297, %289 ]
  %303 = phi i16* [ %285, %282 ], [ %296, %289 ]
  %304 = icmp ult i64 %286, 7
  br i1 %304, label %335, label %305

305:                                              ; preds = %300, %305
  %306 = phi i64 [ %331, %305 ], [ %301, %300 ]
  %307 = phi i16* [ %333, %305 ], [ %302, %300 ]
  %308 = phi i16* [ %332, %305 ], [ %303, %300 ]
  %309 = load i16, i16* %307, align 2
  store i16 %309, i16* %308, align 2
  %310 = getelementptr inbounds i16, i16* %308, i64 1
  %311 = getelementptr inbounds i16, i16* %307, i64 1
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = getelementptr inbounds i16, i16* %308, i64 2
  %314 = getelementptr inbounds i16, i16* %307, i64 2
  %315 = load i16, i16* %314, align 2
  store i16 %315, i16* %313, align 2
  %316 = getelementptr inbounds i16, i16* %308, i64 3
  %317 = getelementptr inbounds i16, i16* %307, i64 3
  %318 = load i16, i16* %317, align 2
  store i16 %318, i16* %316, align 2
  %319 = getelementptr inbounds i16, i16* %308, i64 4
  %320 = getelementptr inbounds i16, i16* %307, i64 4
  %321 = load i16, i16* %320, align 2
  store i16 %321, i16* %319, align 2
  %322 = getelementptr inbounds i16, i16* %308, i64 5
  %323 = getelementptr inbounds i16, i16* %307, i64 5
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %308, i64 6
  %326 = getelementptr inbounds i16, i16* %307, i64 6
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %308, i64 7
  %329 = getelementptr inbounds i16, i16* %307, i64 7
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = add i64 %306, -8
  %332 = getelementptr inbounds i16, i16* %308, i64 8
  %333 = getelementptr inbounds i16, i16* %307, i64 8
  %334 = icmp eq i64 %331, 0
  br i1 %334, label %335, label %305, !llvm.loop !46

335:                                              ; preds = %300, %305, %280
  %336 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %189, i8** %336, align 8
  %337 = or i64 %184, -9223372036854775808
  %338 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %337, i64* %338, align 8
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %22, i64* %339, align 8
  %340 = getelementptr inbounds i16, i16* %190, i64 %22
  store i16 0, i16* %340, align 2
  br label %510

341:                                              ; preds = %5
  %342 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %343 = load i16*, i16** %342, align 8
  %344 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %345 = load i64, i64* %344, align 8
  %346 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %347 = zext i8 %12 to i64
  %348 = select i1 %13, i16* %343, i16* %346
  %349 = select i1 %13, i64 %345, i64 %347
  %350 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %351 = load i64, i64* %350, align 8
  %352 = and i64 %351, 9223372036854775807
  %353 = icmp ugt i64 %352, %349
  br i1 %353, label %354, label %504

354:                                              ; preds = %341
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %356 = load i16*, i16** %355, align 8
  %357 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %349, i64* %357, align 8
  %358 = icmp eq i64 %349, 0
  br i1 %358, label %502, label %359

359:                                              ; preds = %354
  %360 = icmp ult i64 %349, 16
  br i1 %360, label %449, label %361

361:                                              ; preds = %359
  %362 = getelementptr i16, i16* %356, i64 %349
  %363 = getelementptr i16, i16* %348, i64 %349
  %364 = icmp ult i16* %356, %363
  %365 = icmp ult i16* %348, %362
  %366 = and i1 %364, %365
  br i1 %366, label %449, label %367

367:                                              ; preds = %361
  %368 = and i64 %349, -16
  %369 = sub i64 %349, %368
  %370 = getelementptr i16, i16* %348, i64 %368
  %371 = getelementptr i16, i16* %356, i64 %368
  %372 = add i64 %368, -16
  %373 = lshr exact i64 %372, 4
  %374 = add nuw nsw i64 %373, 1
  %375 = and i64 %374, 3
  %376 = icmp ult i64 %372, 48
  br i1 %376, label %428, label %377

377:                                              ; preds = %367
  %378 = sub nsw i64 %374, %375
  br label %379

379:                                              ; preds = %379, %377
  %380 = phi i64 [ 0, %377 ], [ %425, %379 ]
  %381 = phi i64 [ %378, %377 ], [ %426, %379 ]
  %382 = getelementptr i16, i16* %348, i64 %380
  %383 = getelementptr i16, i16* %356, i64 %380
  %384 = bitcast i16* %382 to <8 x i16>*
  %385 = load <8 x i16>, <8 x i16>* %384, align 2, !alias.scope !47
  %386 = getelementptr i16, i16* %382, i64 8
  %387 = bitcast i16* %386 to <8 x i16>*
  %388 = load <8 x i16>, <8 x i16>* %387, align 2, !alias.scope !47
  %389 = bitcast i16* %383 to <8 x i16>*
  store <8 x i16> %385, <8 x i16>* %389, align 2, !alias.scope !50, !noalias !47
  %390 = getelementptr i16, i16* %383, i64 8
  %391 = bitcast i16* %390 to <8 x i16>*
  store <8 x i16> %388, <8 x i16>* %391, align 2, !alias.scope !50, !noalias !47
  %392 = or i64 %380, 16
  %393 = getelementptr i16, i16* %348, i64 %392
  %394 = getelementptr i16, i16* %356, i64 %392
  %395 = bitcast i16* %393 to <8 x i16>*
  %396 = load <8 x i16>, <8 x i16>* %395, align 2, !alias.scope !47
  %397 = getelementptr i16, i16* %393, i64 8
  %398 = bitcast i16* %397 to <8 x i16>*
  %399 = load <8 x i16>, <8 x i16>* %398, align 2, !alias.scope !47
  %400 = bitcast i16* %394 to <8 x i16>*
  store <8 x i16> %396, <8 x i16>* %400, align 2, !alias.scope !50, !noalias !47
  %401 = getelementptr i16, i16* %394, i64 8
  %402 = bitcast i16* %401 to <8 x i16>*
  store <8 x i16> %399, <8 x i16>* %402, align 2, !alias.scope !50, !noalias !47
  %403 = or i64 %380, 32
  %404 = getelementptr i16, i16* %348, i64 %403
  %405 = getelementptr i16, i16* %356, i64 %403
  %406 = bitcast i16* %404 to <8 x i16>*
  %407 = load <8 x i16>, <8 x i16>* %406, align 2, !alias.scope !47
  %408 = getelementptr i16, i16* %404, i64 8
  %409 = bitcast i16* %408 to <8 x i16>*
  %410 = load <8 x i16>, <8 x i16>* %409, align 2, !alias.scope !47
  %411 = bitcast i16* %405 to <8 x i16>*
  store <8 x i16> %407, <8 x i16>* %411, align 2, !alias.scope !50, !noalias !47
  %412 = getelementptr i16, i16* %405, i64 8
  %413 = bitcast i16* %412 to <8 x i16>*
  store <8 x i16> %410, <8 x i16>* %413, align 2, !alias.scope !50, !noalias !47
  %414 = or i64 %380, 48
  %415 = getelementptr i16, i16* %348, i64 %414
  %416 = getelementptr i16, i16* %356, i64 %414
  %417 = bitcast i16* %415 to <8 x i16>*
  %418 = load <8 x i16>, <8 x i16>* %417, align 2, !alias.scope !47
  %419 = getelementptr i16, i16* %415, i64 8
  %420 = bitcast i16* %419 to <8 x i16>*
  %421 = load <8 x i16>, <8 x i16>* %420, align 2, !alias.scope !47
  %422 = bitcast i16* %416 to <8 x i16>*
  store <8 x i16> %418, <8 x i16>* %422, align 2, !alias.scope !50, !noalias !47
  %423 = getelementptr i16, i16* %416, i64 8
  %424 = bitcast i16* %423 to <8 x i16>*
  store <8 x i16> %421, <8 x i16>* %424, align 2, !alias.scope !50, !noalias !47
  %425 = add i64 %380, 64
  %426 = add i64 %381, -4
  %427 = icmp eq i64 %426, 0
  br i1 %427, label %428, label %379, !llvm.loop !52

428:                                              ; preds = %379, %367
  %429 = phi i64 [ 0, %367 ], [ %425, %379 ]
  %430 = icmp eq i64 %375, 0
  br i1 %430, label %447, label %431

431:                                              ; preds = %428, %431
  %432 = phi i64 [ %444, %431 ], [ %429, %428 ]
  %433 = phi i64 [ %445, %431 ], [ %375, %428 ]
  %434 = getelementptr i16, i16* %348, i64 %432
  %435 = getelementptr i16, i16* %356, i64 %432
  %436 = bitcast i16* %434 to <8 x i16>*
  %437 = load <8 x i16>, <8 x i16>* %436, align 2, !alias.scope !47
  %438 = getelementptr i16, i16* %434, i64 8
  %439 = bitcast i16* %438 to <8 x i16>*
  %440 = load <8 x i16>, <8 x i16>* %439, align 2, !alias.scope !47
  %441 = bitcast i16* %435 to <8 x i16>*
  store <8 x i16> %437, <8 x i16>* %441, align 2, !alias.scope !50, !noalias !47
  %442 = getelementptr i16, i16* %435, i64 8
  %443 = bitcast i16* %442 to <8 x i16>*
  store <8 x i16> %440, <8 x i16>* %443, align 2, !alias.scope !50, !noalias !47
  %444 = add i64 %432, 16
  %445 = add i64 %433, -1
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %447, label %431, !llvm.loop !53

447:                                              ; preds = %431, %428
  %448 = icmp eq i64 %349, %368
  br i1 %448, label %502, label %449

449:                                              ; preds = %447, %361, %359
  %450 = phi i64 [ %349, %361 ], [ %349, %359 ], [ %369, %447 ]
  %451 = phi i16* [ %348, %361 ], [ %348, %359 ], [ %370, %447 ]
  %452 = phi i16* [ %356, %361 ], [ %356, %359 ], [ %371, %447 ]
  %453 = add i64 %450, -1
  %454 = and i64 %450, 7
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %467, label %456

456:                                              ; preds = %449, %456
  %457 = phi i64 [ %462, %456 ], [ %450, %449 ]
  %458 = phi i16* [ %464, %456 ], [ %451, %449 ]
  %459 = phi i16* [ %463, %456 ], [ %452, %449 ]
  %460 = phi i64 [ %465, %456 ], [ %454, %449 ]
  %461 = load i16, i16* %458, align 2
  store i16 %461, i16* %459, align 2
  %462 = add i64 %457, -1
  %463 = getelementptr inbounds i16, i16* %459, i64 1
  %464 = getelementptr inbounds i16, i16* %458, i64 1
  %465 = add i64 %460, -1
  %466 = icmp eq i64 %465, 0
  br i1 %466, label %467, label %456, !llvm.loop !54

467:                                              ; preds = %456, %449
  %468 = phi i64 [ %450, %449 ], [ %462, %456 ]
  %469 = phi i16* [ %451, %449 ], [ %464, %456 ]
  %470 = phi i16* [ %452, %449 ], [ %463, %456 ]
  %471 = icmp ult i64 %453, 7
  br i1 %471, label %502, label %472

472:                                              ; preds = %467, %472
  %473 = phi i64 [ %498, %472 ], [ %468, %467 ]
  %474 = phi i16* [ %500, %472 ], [ %469, %467 ]
  %475 = phi i16* [ %499, %472 ], [ %470, %467 ]
  %476 = load i16, i16* %474, align 2
  store i16 %476, i16* %475, align 2
  %477 = getelementptr inbounds i16, i16* %475, i64 1
  %478 = getelementptr inbounds i16, i16* %474, i64 1
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %475, i64 2
  %481 = getelementptr inbounds i16, i16* %474, i64 2
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %475, i64 3
  %484 = getelementptr inbounds i16, i16* %474, i64 3
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %475, i64 4
  %487 = getelementptr inbounds i16, i16* %474, i64 4
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = getelementptr inbounds i16, i16* %475, i64 5
  %490 = getelementptr inbounds i16, i16* %474, i64 5
  %491 = load i16, i16* %490, align 2
  store i16 %491, i16* %489, align 2
  %492 = getelementptr inbounds i16, i16* %475, i64 6
  %493 = getelementptr inbounds i16, i16* %474, i64 6
  %494 = load i16, i16* %493, align 2
  store i16 %494, i16* %492, align 2
  %495 = getelementptr inbounds i16, i16* %475, i64 7
  %496 = getelementptr inbounds i16, i16* %474, i64 7
  %497 = load i16, i16* %496, align 2
  store i16 %497, i16* %495, align 2
  %498 = add i64 %473, -8
  %499 = getelementptr inbounds i16, i16* %475, i64 8
  %500 = getelementptr inbounds i16, i16* %474, i64 8
  %501 = icmp eq i64 %498, 0
  br i1 %501, label %502, label %472, !llvm.loop !55

502:                                              ; preds = %467, %472, %447, %354
  %503 = getelementptr inbounds i16, i16* %356, i64 %349
  store i16 0, i16* %503, align 2
  br label %510

504:                                              ; preds = %341
  %505 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = add nsw i64 %352, -1
  %508 = add i64 %349, 1
  %509 = sub i64 %508, %352
  tail call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %0, i64 %507, i64 %509, i64 %506, i64 0, i64 %506, i64 %349, i16* %348) #9
  br label %510

510:                                              ; preds = %504, %502, %335, %173, %15, %2
  ret %"class.std::__1::basic_string"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #11
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #11
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #10
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !56
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !56
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !59, !noalias !56
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !59, !noalias !56
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !56
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !56
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !59, !noalias !56
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !59, !noalias !56
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !56
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !56
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !59, !noalias !56
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !59, !noalias !56
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !56
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !56
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !59, !noalias !56
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !59, !noalias !56
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !61

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !56
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !56
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !59, !noalias !56
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !59, !noalias !56
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !62

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !63

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !64

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !65

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !66

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !67

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !69
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !69
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !72, !noalias !69
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !72, !noalias !69
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !69
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !69
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !72, !noalias !69
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !72, !noalias !69
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !69
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !69
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !72, !noalias !69
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !72, !noalias !69
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !69
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !69
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !72, !noalias !69
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !72, !noalias !69
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !74

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !69
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !69
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !72, !noalias !69
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !72, !noalias !69
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !75

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !76

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !77

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #10
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN7history6URLRowENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.28"*, %"class.history::URLRow"* dereferenceable(184)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.history::URLRow"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.28"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 184
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 100254043878856258
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.28"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.history::URLRow"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 184
  %20 = icmp ult i64 %19, 50127021939428129
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 100254043878856258, %14 ]
  %28 = mul i64 %27, 184
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.history::URLRow"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.history::URLRow"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %33, i64 %9
  %35 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %33, i64 %32
  %36 = ptrtoint %"class.history::URLRow"* %35 to i64
  tail call void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"* %34, %"class.history::URLRow"* dereferenceable(184) %1) #9
  %37 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %34, i64 1
  %38 = ptrtoint %"class.history::URLRow"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.28", %"class.std::__1::vector.28"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.history::URLRow"*, %"class.history::URLRow"** %39, align 8
  %41 = load %"class.history::URLRow"*, %"class.history::URLRow"** %3, align 8
  %42 = icmp eq %"class.history::URLRow"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.history::URLRow"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.history::URLRow"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.history::URLRow"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %46, i64 -1
  %49 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %47, i64 -1
  tail call void @_ZN7history6URLRowC1EOS0_(%"class.history::URLRow"* %48, %"class.history::URLRow"* dereferenceable(184) %49) #9
  %50 = icmp eq %"class.history::URLRow"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.history::URLRow"*, %"class.history::URLRow"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.history::URLRow"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.history::URLRow"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.history::URLRow"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.history::URLRow"*
  %60 = icmp eq %"class.history::URLRow"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.history::URLRow"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.history::URLRow", %"class.history::URLRow"* %62, i64 -1
  %64 = bitcast %"class.history::URLRow"* %63 to void (%"class.history::URLRow"*)***
  %65 = load void (%"class.history::URLRow"*)**, void (%"class.history::URLRow"*)*** %64, align 8
  %66 = load void (%"class.history::URLRow"*)*, void (%"class.history::URLRow"*)** %65, align 8
  tail call void %66(%"class.history::URLRow"* %63) #9
  %67 = icmp eq %"class.history::URLRow"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #10
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN7history6URLRowC1ERKS0_(%"class.history::URLRow"*, %"class.history::URLRow"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

declare void @_ZN15TemplateURLDataC1Ev(%struct.TemplateURLData*) unnamed_addr #1

declare void @_ZN15TemplateURLData10SetKeywordERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN15TemplateURLData12SetShortNameERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN15TemplateURLData6SetURLERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%struct.TemplateURLData*, %"class.std::__1::basic_string.9"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN14TemplateURLRef18DisplayURLToURLRefERKNSt3__112basic_stringIDsNS0_11char_traitsIDsEENS0_9allocatorIDsEEEE(%"class.std::__1::basic_string.9"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN15TemplateURLDataD1Ev(%struct.TemplateURLData*) unnamed_addr #3

declare void @_ZN11TemplateURLC1ERK15TemplateURLDataNS_4TypeE(%class.TemplateURL*, %struct.TemplateURLData* dereferenceable(848), i32) unnamed_addr #1

declare void @_ZN16password_manager12PasswordFormC1Ev(%"struct.password_manager::PasswordForm"*) unnamed_addr #1

declare dereferenceable(120) %class.GURL* @_ZN4GURLaSERKS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string.9"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string.9"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string.9"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN11TemplateURLD1Ev(%class.TemplateURL*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI11TemplateURLNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.42"*, %"class.std::__1::unique_ptr.44"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.44"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.42"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.42"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.44"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.44"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.44"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.44"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.44"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.44"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.44"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.42", %"class.std::__1::vector.42"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.44"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.44"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.TemplateURL** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.44"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.44"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.44"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.44"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !78

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.44"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.44"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.44"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.44"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.44"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.44"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.44"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.44"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.44"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.44"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.44"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.44"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.44"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.44"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.44"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.44"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.44"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.44"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.44"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.44"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.44"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.44"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.44"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.44"*, %"class.std::__1::unique_ptr.44"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.44"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.44"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.44"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.44"*
  %138 = icmp eq %"class.std::__1::unique_ptr.44"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.44"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.44"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.TemplateURL*, %class.TemplateURL** %142, align 8
  store %class.TemplateURL* null, %class.TemplateURL** %142, align 8
  %144 = icmp eq %class.TemplateURL* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN11TemplateURLD1Ev(%class.TemplateURL* nonnull %143) #9
  %146 = bitcast %class.TemplateURL* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #10
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.44"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8autofill13AutofillEntryENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.157"*, %"class.autofill::AutofillEntry"* dereferenceable(72)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.autofill::AutofillEntry"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.157"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.157"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.autofill::AutofillEntry"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"class.autofill::AutofillEntry"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.autofill::AutofillEntry"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %33, i64 %9
  %35 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %33, i64 %32
  %36 = ptrtoint %"class.autofill::AutofillEntry"* %35 to i64
  %37 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %1, i64 0, i32 0
  tail call void @_ZN8autofill11AutofillKeyC1ERKS0_(%"class.autofill::AutofillKey"* %37, %"class.autofill::AutofillKey"* dereferenceable(56) %38) #9
  %39 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %33, i64 %9, i32 1
  %40 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %1, i64 0, i32 1
  %41 = bitcast %"class.base::Time"* %39 to i8*
  %42 = bitcast %"class.base::Time"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #9
  %43 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %34, i64 1
  %44 = ptrtoint %"class.autofill::AutofillEntry"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.157", %"class.std::__1::vector.157"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %45, align 8
  %47 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %3, align 8
  %48 = icmp eq %"class.autofill::AutofillEntry"* %47, %46
  br i1 %48, label %49, label %51

49:                                               ; preds = %31
  %50 = ptrtoint %"class.autofill::AutofillEntry"* %46 to i64
  br label %66

51:                                               ; preds = %31, %51
  %52 = phi %"class.autofill::AutofillEntry"* [ %61, %51 ], [ %34, %31 ]
  %53 = phi %"class.autofill::AutofillEntry"* [ %54, %51 ], [ %47, %31 ]
  %54 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %53, i64 -1
  %55 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %52, i64 -1, i32 0
  %56 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %54, i64 0, i32 0
  tail call void @_ZN8autofill11AutofillKeyC1ERKS0_(%"class.autofill::AutofillKey"* %55, %"class.autofill::AutofillKey"* dereferenceable(56) %56) #9
  %57 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %52, i64 -1, i32 1
  %58 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %53, i64 -1, i32 1
  %59 = bitcast %"class.base::Time"* %57 to i8*
  %60 = bitcast %"class.base::Time"* %58 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 16, i1 false) #9
  %61 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %52, i64 -1
  %62 = icmp eq %"class.autofill::AutofillEntry"* %54, %46
  br i1 %62, label %63, label %51

63:                                               ; preds = %51
  %64 = load i64, i64* %6, align 8
  %65 = load %"class.autofill::AutofillEntry"*, %"class.autofill::AutofillEntry"** %3, align 8
  br label %66

66:                                               ; preds = %49, %63
  %67 = phi %"class.autofill::AutofillEntry"* [ %46, %49 ], [ %65, %63 ]
  %68 = phi %"class.autofill::AutofillEntry"* [ %34, %49 ], [ %61, %63 ]
  %69 = phi i64 [ %50, %49 ], [ %64, %63 ]
  %70 = ptrtoint %"class.autofill::AutofillEntry"* %68 to i64
  store i64 %70, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %71 = inttoptr i64 %69 to %"class.autofill::AutofillEntry"*
  %72 = icmp eq %"class.autofill::AutofillEntry"* %67, %71
  br i1 %72, label %77, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"class.autofill::AutofillEntry"* [ %75, %73 ], [ %67, %66 ]
  %75 = getelementptr inbounds %"class.autofill::AutofillEntry", %"class.autofill::AutofillEntry"* %74, i64 -1
  tail call void @_ZN8autofill13AutofillEntryD1Ev(%"class.autofill::AutofillEntry"* %75) #9
  %76 = icmp eq %"class.autofill::AutofillEntry"* %75, %71
  br i1 %76, label %77, label %73

77:                                               ; preds = %73, %66
  %78 = icmp eq i64 %69, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %69 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

declare void @_ZN8autofill11AutofillKeyC1ERKS0_(%"class.autofill::AutofillKey"*, %"class.autofill::AutofillKey"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN12_GLOBAL__N_138ConvertImporterURLRowsToHistoryURLRowsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEE: argument 0"}
!4 = distinct !{!4, !"_ZN12_GLOBAL__N_138ConvertImporterURLRowsToHistoryURLRowsERKNSt3__16vectorI14ImporterURLRowNS0_9allocatorIS2_EEEE"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN12_GLOBAL__N_127ConvertImportedPasswordFormERKN8importer20ImportedPasswordFormE: argument 0"}
!8 = distinct !{!8, !"_ZN12_GLOBAL__N_127ConvertImportedPasswordFormERKN8importer20ImportedPasswordFormE"}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !15}
!15 = !{!"llvm.loop.isvectorized", i32 1}
!16 = distinct !{!16, !17}
!17 = !{!"llvm.loop.unroll.disable"}
!18 = distinct !{!18, !17}
!19 = distinct !{!19, !15}
!20 = !{!21}
!21 = distinct !{!21, !22}
!22 = distinct !{!22, !"LVerDomain"}
!23 = !{!24}
!24 = distinct !{!24, !22}
!25 = distinct !{!25, !15}
!26 = distinct !{!26, !17}
!27 = distinct !{!27, !17}
!28 = distinct !{!28, !15}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !15}
!35 = distinct !{!35, !17}
!36 = distinct !{!36, !17}
!37 = distinct !{!37, !15}
!38 = !{!39}
!39 = distinct !{!39, !40}
!40 = distinct !{!40, !"LVerDomain"}
!41 = !{!42}
!42 = distinct !{!42, !40}
!43 = distinct !{!43, !15}
!44 = distinct !{!44, !17}
!45 = distinct !{!45, !17}
!46 = distinct !{!46, !15}
!47 = !{!48}
!48 = distinct !{!48, !49}
!49 = distinct !{!49, !"LVerDomain"}
!50 = !{!51}
!51 = distinct !{!51, !49}
!52 = distinct !{!52, !15}
!53 = distinct !{!53, !17}
!54 = distinct !{!54, !17}
!55 = distinct !{!55, !15}
!56 = !{!57}
!57 = distinct !{!57, !58}
!58 = distinct !{!58, !"LVerDomain"}
!59 = !{!60}
!60 = distinct !{!60, !58}
!61 = distinct !{!61, !15}
!62 = distinct !{!62, !17}
!63 = distinct !{!63, !17}
!64 = distinct !{!64, !15}
!65 = distinct !{!65, !15}
!66 = distinct !{!66, !17}
!67 = distinct !{!67, !68, !15}
!68 = !{!"llvm.loop.unroll.runtime.disable"}
!69 = !{!70}
!70 = distinct !{!70, !71}
!71 = distinct !{!71, !"LVerDomain"}
!72 = !{!73}
!73 = distinct !{!73, !71}
!74 = distinct !{!74, !15}
!75 = distinct !{!75, !17}
!76 = distinct !{!76, !17}
!77 = distinct !{!77, !15}
!78 = distinct !{!78, !17}
