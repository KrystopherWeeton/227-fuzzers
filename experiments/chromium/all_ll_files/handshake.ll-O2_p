; ModuleID = '../../third_party/boringssl/src/ssl/handshake.cc'
source_filename = "../../third_party/boringssl/src/ssl/handshake.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.bssl::SSL_HANDSHAKE" = type <{ %struct.ssl_st*, %"struct.bssl::SSL_CONFIG"*, i32, i32, i32, i16, i16, i64, [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], [48 x i8], %union.anon.105, i16, [2 x i8], %"class.std::__1::unique_ptr.60", [2 x %"class.std::__1::unique_ptr.106"], %"class.bssl::SSLTranscript", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array.39", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::internal::StackAllocated.112", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.95", %struct.ssl_cipher_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.113", i32, i16, i16, i16, i8, [32 x i8], i8, [6 x i8], [6 x i8] }>
%"struct.bssl::SSL_CONFIG" = type <{ %struct.ssl_st*, i16, i16, [4 x i8], %struct.X509_VERIFY_PARAM_st*, %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.15", i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.ssl_st*, i8*)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.bssl::Array", %"class.bssl::GrowableArray", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.48", i8, i16, [5 x i8] }>
%struct.X509_VERIFY_PARAM_st = type { i8*, i64, i64, i64, i32, i32, i32, %struct.stack_st_ASN1_OBJECT*, %struct.X509_VERIFY_PARAM_ID_st* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.X509_VERIFY_PARAM_ID_st = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.bssl::SSLCipherPreferenceList"* }
%"struct.bssl::SSLCipherPreferenceList" = type { %"class.std::__1::unique_ptr.8", i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.stack_st_SSL_CIPHER* }
%struct.stack_st_SSL_CIPHER = type opaque
%"class.std::__1::unique_ptr.15" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.bssl::CERT"* }
%"struct.bssl::CERT" = type { %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.23", %struct.stack_st_X509*, %struct.x509_st*, %struct.x509_st*, %struct.ssl_private_key_method_st*, %"struct.bssl::SSL_X509_METHOD"*, %"class.bssl::Array.39", i32 (%struct.ssl_st*, i8*)*, i8*, %struct.x509_store_st*, %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", i8, [32 x i8], %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.18", %struct.ssl_private_key_method_st* }
%struct.stack_st_X509 = type opaque
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon.28 }
%union.anon.28 = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type opaque
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%"struct.bssl::SSL_X509_METHOD" = type { i1 (%struct.stack_st_CRYPTO_BUFFER*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*, %"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, void (%"struct.bssl::CERT"*)*, i1 (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %struct.ssl_session_st*)*, void (%struct.ssl_session_st*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, void (%"struct.bssl::SSL_CONFIG"*)*, i1 (%"struct.bssl::SSL_HANDSHAKE"*)*, i1 (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)*, void (%struct.ssl_ctx_st*)* }
%struct.stack_st_CRYPTO_BUFFER = type opaque
%struct.ssl_session_st = type { i32, i16, i16, i16, i32, [48 x i8], i32, [32 x i8], i8, [32 x i8], %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.23", %"struct.bssl::SSL_X509_METHOD"*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509*, i64, i32, i32, i64, %struct.ssl_cipher_st*, %struct.crypto_ex_data_st, %struct.ssl_session_st*, %struct.ssl_session_st*, %"class.bssl::Array", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34", [32 x i8], [64 x i8], i8, i32, i32, i32, %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, %"class.bssl::Array" }
%struct.ssl_ctx_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_X509_METHOD"*, %union.crypto_mutex_st, i16, i16, [4 x i8], %struct.ssl_quic_method_st*, %"class.std::__1::unique_ptr.5", %struct.x509_store_st*, %struct.lhash_st_SSL_SESSION*, i64, %struct.ssl_session_st*, %struct.ssl_session_st*, i32, i32, i32, i32, i32 (%struct.ssl_st*, %struct.ssl_session_st*)*, void (%struct.ssl_ctx_st*, %struct.ssl_session_st*)*, %struct.ssl_session_st* (%struct.ssl_st*, i8*, i32, i32*)*, i32, [4 x i8], i32 (%struct.x509_store_ctx_st*, i8*)*, i8*, i32 (%struct.ssl_st*, i8*)*, i32 (i8*, i32, i32, i8*)*, i8*, i32 (%struct.ssl_st*, %struct.x509_st**, %struct.evp_pkey_st**)*, void (%struct.ssl_st*, %struct.evp_pkey_st**)*, %struct.crypto_ex_data_st, void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.23", %struct.stack_st_X509_NAME*, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.15", void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], i32 (i32, %struct.x509_store_ctx_st*)*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.ssl_early_callback_ctx*)*, i32 (%struct.ssl_early_callback_ctx*)*, i8, i8, i16, [4 x i8], i32 (%struct.ssl_st*, i32*, i8*)*, i8*, %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.88", i32 (%struct.ssl_st*, i8*, i8*, %struct.evp_cipher_ctx_st*, %struct.hmac_ctx_st*, i32)*, %"class.std::__1::unique_ptr.29", i32 (%struct.ssl_st*, i8*, i8*, i32, i8*, i32)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*, i8**, i32*, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, i32 (%struct.ssl_st*, i8**, i8*, i8*, i32, i8*)*, i8*, %"class.bssl::Array", %"class.std::__1::unique_ptr.48", %"class.bssl::GrowableArray.93", %"class.bssl::Array.39", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.95", void (%struct.ssl_st*, i8*)*, void (%struct.ssl_st*, %struct.timeval*)*, %struct.crypto_buffer_pool_st*, %struct.ssl_ticket_aead_method_st*, i32 (%struct.ssl_st*, i8*)*, i8*, %"class.bssl::Array.39", i16, [6 x i8] }>
%"struct.bssl::SSL_PROTOCOL_METHOD" = type { i8, i1 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, %"class.bssl::Span"*, i64*, i8*, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i8*, i32)*, i32 (%struct.ssl_st*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)*, void (%struct.ssl_st*)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)*, i1 (%struct.ssl_st*, i32, %"class.bssl::SSLAEADContext"*, i8*, i64)* }
%"struct.bssl::SSLMessage" = type { i8, i8, %struct.cbs_st, %struct.cbs_st }
%struct.cbs_st = type { i8*, i64 }
%"class.bssl::Span" = type { i8*, i64 }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.bssl::SSLAEADContext" = type <{ %struct.ssl_cipher_st*, %"class.bssl::internal::StackAllocated", [12 x i8], i8, i8, i16, i8, i8, [6 x i8] }>
%"class.bssl::internal::StackAllocated" = type { %struct.evp_aead_ctx_st }
%struct.evp_aead_ctx_st = type { %struct.evp_aead_st*, %union.evp_aead_ctx_st_state, i8 }
%struct.evp_aead_st = type opaque
%union.evp_aead_ctx_st_state = type { i64, [576 x i8] }
%struct.ssl_quic_method_st = type { i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, %struct.ssl_cipher_st*, i8*, i64)*, i32 (%struct.ssl_st*, i32, i8*, i64)*, i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i32, i8)* }
%struct.lhash_st_SSL_SESSION = type opaque
%struct.x509_store_ctx_st = type { %struct.x509_store_st*, %struct.x509_st*, %struct.stack_st_X509*, %struct.stack_st_X509_CRL*, %struct.X509_VERIFY_PARAM_st*, i8*, {}*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, {}*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, {}*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, {}*, i32, i32, %struct.stack_st_X509*, %struct.X509_POLICY_TREE_st*, i32, i32, i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_crl_st*, i32, i32, %struct.x509_store_ctx_st*, %struct.crypto_ex_data_st }
%struct.stack_st_X509_CRL = type opaque
%struct.X509_POLICY_TREE_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type opaque
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.ssl_early_callback_ctx = type { %struct.ssl_st*, i8*, i64, i16, i8*, i64, i8*, i64, i8*, i64, i8*, i64, i8*, i64 }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"struct.bssl::TicketKey"* }
%"struct.bssl::TicketKey" = type { [16 x i8], [16 x i8], [16 x i8], i64 }
%struct.evp_cipher_ctx_st = type { %struct.evp_cipher_st*, i8*, i8*, i32, i32, i32, [16 x i8], [16 x i8], [32 x i8], i32, i32, i32, [32 x i8] }
%struct.evp_cipher_st = type { i32, i32, i32, i32, i32, i32, i8*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i32)*, i32 (%struct.evp_cipher_ctx_st*, i8*, i8*, i64)*, void (%struct.evp_cipher_ctx_st*)*, i32 (%struct.evp_cipher_ctx_st*, i32, i32, i8*)* }
%struct.hmac_ctx_st = type { %struct.env_md_st*, %struct.env_md_ctx_st, %struct.env_md_ctx_st, %struct.env_md_ctx_st }
%struct.env_md_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%"class.bssl::GrowableArray.93" = type { i64, %"class.bssl::Array.94" }
%"class.bssl::Array.94" = type { %"struct.bssl::CertCompressionAlg"*, i64 }
%"struct.bssl::CertCompressionAlg" = type <{ i32 (%struct.ssl_st*, %struct.cbb_st*, i8*, i64)*, i32 (%struct.ssl_st*, %struct.crypto_buffer_st**, i64, i8*, i64)*, i16, [6 x i8] }>
%struct.timeval = type { i64, i64 }
%struct.crypto_buffer_pool_st = type opaque
%struct.ssl_ticket_aead_method_st = type { i64 (%struct.ssl_st*)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)* }
%struct.x509_store_st = type { i32, %struct.stack_st_X509_OBJECT*, %union.crypto_mutex_st, %struct.stack_st_X509*, %struct.stack_st_X509_LOOKUP*, %struct.X509_VERIFY_PARAM_st*, i32 (%struct.x509_store_ctx_st*)*, i32 (i32, %struct.x509_store_ctx_st*)*, i32 (%struct.x509_st**, %struct.x509_store_ctx_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.x509_st*, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st**, %struct.x509_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*)*, i32 (%struct.x509_store_ctx_st*, %struct.X509_crl_st*, %struct.x509_st*)*, %struct.stack_st_X509* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, %struct.stack_st_X509_CRL* (%struct.x509_store_ctx_st*, %struct.X509_name_st*)*, i32 (%struct.x509_store_ctx_st*)*, i32 }
%struct.stack_st_X509_OBJECT = type opaque
%struct.stack_st_X509_LOOKUP = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %struct.crypto_buffer_st* }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.bssl::DC"* }
%"struct.bssl::DC" = type { %"class.std::__1::unique_ptr.34", i16, %"class.std::__1::unique_ptr.18" }
%struct.ssl_private_key_method_st = type { i32 (%struct.ssl_st*, i8*, i64*, i64, i16, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64, i8*, i64)*, i32 (%struct.ssl_st*, i8*, i64*, i64)* }
%"class.bssl::GrowableArray" = type { i64, %"class.bssl::Array.47" }
%"class.bssl::Array.47" = type { %"struct.bssl::ALPSConfig"*, i64 }
%"struct.bssl::ALPSConfig" = type { %"class.bssl::Array", %"class.bssl::Array" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %struct.stack_st_SRTP_PROTECTION_PROFILE* }
%struct.stack_st_SRTP_PROTECTION_PROFILE = type opaque
%union.anon.105 = type { i32 }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %struct.err_save_state_st* }
%struct.err_save_state_st = type opaque
%"class.std::__1::unique_ptr.106" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.bssl::SSLKeyShare"* }
%"class.bssl::SSLKeyShare" = type { i32 (...)** }
%"class.bssl::SSLTranscript" = type { %"class.std::__1::unique_ptr.65", %"class.bssl::internal::StackAllocated.111" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %struct.buf_mem_st* }
%"class.bssl::internal::StackAllocated.111" = type { %struct.env_md_ctx_st }
%"class.bssl::Array.39" = type { i16*, i64 }
%"class.bssl::internal::StackAllocated.112" = type { %struct.evp_hpke_ctx_st }
%struct.evp_hpke_ctx_st = type { %struct.evp_hpke_aead_st*, %struct.evp_hpke_kdf_st*, %struct.evp_aead_ctx_st, [24 x i8], [64 x i8], i64, i32 }
%struct.evp_hpke_aead_st = type opaque
%struct.evp_hpke_kdf_st = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { i8* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %struct.stack_st_CRYPTO_BUFFER* }
%struct.stack_st_X509_NAME = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %struct.evp_pkey_st* }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %struct.ssl_session_st* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %struct.ssl_ech_server_config_list_st* }
%struct.ssl_ech_server_config_list_st = type <{ %"class.bssl::GrowableArray.98", i32, [4 x i8] }>
%"class.bssl::GrowableArray.98" = type { i64, %"class.bssl::Array.99" }
%"class.bssl::Array.99" = type { %"class.std::__1::unique_ptr.100"*, i64 }
%"class.std::__1::unique_ptr.100" = type opaque
%struct.ssl_cipher_st = type { i8*, i8*, i32, i32, i32, i32, i32, i32 }
%"class.bssl::Array" = type { i8*, i64 }
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.bssl::SSL_HANDSHAKE_HINTS"* }
%"struct.bssl::SSL_HANDSHAKE_HINTS" = type <{ %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", i16, [6 x i8], %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", %"class.bssl::Array", i8, [7 x i8] }>
%struct.ssl_st = type <{ %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"class.std::__1::unique_ptr.2", i16, i16, [4 x i8], %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.55", i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, %"struct.bssl::SSL3_STATE"*, %"struct.bssl::DTLS1_STATE"*, void (i32, i32, i32, i8*, i64, %struct.ssl_st*, i8*)*, i8*, i32, [4 x i8], %"class.std::__1::unique_ptr.75", void (%struct.ssl_st*, i32, i32)*, %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.85", %struct.crypto_ex_data_st, i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr.29", %struct.ssl_quic_method_st*, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.bssl::SSL_CONFIG"* }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %struct.bio_st* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%"struct.bssl::SSL3_STATE" = type <{ [8 x i8], [8 x i8], [32 x i8], [32 x i8], %"class.bssl::SSLBuffer", %"class.bssl::SSLBuffer", %"class.bssl::Span", i32, i32, i32, i32, i8*, i32, i32, %"class.std::__1::unique_ptr.60", i32, i32, i32, i32, i16, i8, i8, i8, i16, i8, %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.65", i32, i32, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.70", [48 x i8], [48 x i8], [48 x i8], i8, i8, i8, [12 x i8], i8, i8, [12 x i8], [2 x i8], i8, %"class.std::__1::unique_ptr.75", %"class.bssl::Array", %"class.bssl::Array", %"class.std::__1::unique_ptr.29", [64 x i8], %"class.bssl::Array", %struct.srtp_protection_profile_st* }>
%"class.bssl::SSLBuffer" = type <{ i8*, i16, i16, i16, [5 x i8], i8, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.bssl::SSLAEADContext"* }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.bssl::SSL_HANDSHAKE"* }
%struct.srtp_protection_profile_st = type { i8*, i64 }
%"struct.bssl::DTLS1_STATE" = type <{ i8, [256 x i8], [7 x i8], i64, i16, i16, [4 x i8], %"struct.bssl::DTLS1_BITMAP", i16, i16, [8 x i8], [4 x i8], %"class.std::__1::unique_ptr", [7 x %"class.std::__1::unique_ptr.80"], [7 x %"struct.bssl::DTLS_OUTGOING_MESSAGE"], i8, i8, [2 x i8], i32, i32, i32, %"struct.bssl::OPENSSL_timeval", i32, [4 x i8] }>
%"struct.bssl::DTLS1_BITMAP" = type { i64, i64 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"struct.bssl::hm_fragment"* }
%"struct.bssl::hm_fragment" = type { i8, i16, i32, i8*, i8* }
%"struct.bssl::DTLS_OUTGOING_MESSAGE" = type <{ i8*, i32, i16, i8, i8 }>
%"struct.bssl::OPENSSL_timeval" = type { i64, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %struct.ssl_ctx_st* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%"struct.bssl::SSL_EXTENSION_TYPE" = type { i16, i8*, %struct.cbs_st* }
%"class.bssl::internal::StackAllocated.120" = type { %struct.cbb_st }

$_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_ = comdat any

@.str = private unnamed_addr constant [49 x i8] c"../../third_party/boringssl/src/ssl/handshake.cc\00", align 1
@.str.1 = private unnamed_addr constant [28 x i8] c"got type %d, wanted type %d\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"CLIENT_RANDOM\00", align 1
@.str.3 = private unnamed_addr constant [47 x i8] c"../../third_party/boringssl/src/ssl/internal.h\00", align 1

@_ZN4bssl13SSL_HANDSHAKEC1EP6ssl_st = hidden unnamed_addr alias void (%"struct.bssl::SSL_HANDSHAKE"*, %struct.ssl_st*), void (%"struct.bssl::SSL_HANDSHAKE"*, %struct.ssl_st*)* @_ZN4bssl13SSL_HANDSHAKEC2EP6ssl_st
@_ZN4bssl13SSL_HANDSHAKED1Ev = hidden unnamed_addr alias void (%"struct.bssl::SSL_HANDSHAKE"*), void (%"struct.bssl::SSL_HANDSHAKE"*)* @_ZN4bssl13SSL_HANDSHAKED2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl13SSL_HANDSHAKEC2EP6ssl_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.ssl_st*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  store %struct.ssl_st* %1, %struct.ssl_st** %3, align 8
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 2
  store i32 1, i32* %4, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 18
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %8 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %8, i8 0, i64 362, i1 false)
  %9 = bitcast %"class.std::__1::unique_ptr.60"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false)
  tail call void @_ZN4bssl13SSLTranscriptC1Ev(%"class.bssl::SSLTranscript"* %7) #8
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 21
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 32, i32 0
  %12 = bitcast %"class.bssl::Array"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 144, i1 false)
  tail call void @EVP_HPKE_CTX_zero(%struct.evp_hpke_ctx_st* %11) #8
  %13 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 33
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %15 = bitcast %"class.bssl::Array"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 128, i1 false)
  %16 = load i32, i32* %14, align 8
  %17 = and i32 %16, -134217728
  store i32 %17, i32* %14, align 8
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 47
  %19 = bitcast i16* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 46, i1 false)
  ret void
}

declare void @_ZN4bssl13SSLTranscriptC1Ev(%"class.bssl::SSLTranscript"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl13SSL_HANDSHAKED2Ev(%"struct.bssl::SSL_HANDSHAKE"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %3 = load %struct.ssl_st*, %struct.ssl_st** %2, align 8
  %4 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %3, i64 0, i32 16, i32 0, i32 0, i32 0
  %5 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %4, align 8
  %6 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %5, i64 0, i32 1
  %7 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %7, i64 0, i32 10
  %9 = load void (%"struct.bssl::SSL_HANDSHAKE"*)*, void (%"struct.bssl::SSL_HANDSHAKE"*)** %8, align 8
  tail call void %9(%"struct.bssl::SSL_HANDSHAKE"* %0) #8
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 45, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_HANDSHAKE_HINTS"*, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %10, align 8
  store %"struct.bssl::SSL_HANDSHAKE_HINTS"* null, %"struct.bssl::SSL_HANDSHAKE_HINTS"** %10, align 8
  %12 = icmp eq %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, null
  br i1 %12, label %41, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 10
  %15 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %14, i64 0, i32 0
  %16 = load i8*, i8** %15, align 8
  tail call void @OPENSSL_free(i8* %16) #8
  %17 = bitcast %"class.bssl::Array"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 9
  %19 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %18, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @OPENSSL_free(i8* %20) #8
  %21 = bitcast %"class.bssl::Array"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #8
  %22 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 8
  %23 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %22, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @OPENSSL_free(i8* %24) #8
  %25 = bitcast %"class.bssl::Array"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #8
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 7
  %27 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %26, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @OPENSSL_free(i8* %28) #8
  %29 = bitcast %"class.bssl::Array"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #8
  %30 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 4
  %31 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %30, i64 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @OPENSSL_free(i8* %32) #8
  %33 = bitcast %"class.bssl::Array"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #8
  %34 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 3
  %35 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %34, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @OPENSSL_free(i8* %36) #8
  %37 = bitcast %"class.bssl::Array"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #8
  %38 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE_HINTS", %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11, i64 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  tail call void @OPENSSL_free(i8* %39) #8
  %40 = bitcast %"struct.bssl::SSL_HANDSHAKE_HINTS"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #8
  tail call void @OPENSSL_free(i8* nonnull %40) #8
  br label %41

41:                                               ; preds = %1, %13
  %42 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 44
  %43 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %42, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @OPENSSL_free(i8* %44) #8
  %45 = bitcast %"class.bssl::Array"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #8
  %46 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 42, i32 0, i32 0, i32 0
  %47 = load %struct.ssl_ech_server_config_list_st*, %struct.ssl_ech_server_config_list_st** %46, align 8
  store %struct.ssl_ech_server_config_list_st* null, %struct.ssl_ech_server_config_list_st** %46, align 8
  %48 = icmp eq %struct.ssl_ech_server_config_list_st* %47, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %41
  tail call void @SSL_ECH_SERVER_CONFIG_LIST_free(%struct.ssl_ech_server_config_list_st* nonnull %47) #8
  br label %50

50:                                               ; preds = %41, %49
  %51 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 41, i32 0, i32 0, i32 0
  %52 = load %struct.ssl_session_st*, %struct.ssl_session_st** %51, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %51, align 8
  %53 = icmp eq %struct.ssl_session_st* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %52) #8
  br label %55

55:                                               ; preds = %50, %54
  %56 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %57 = load %struct.ssl_session_st*, %struct.ssl_session_st** %56, align 8
  store %struct.ssl_session_st* null, %struct.ssl_session_st** %56, align 8
  %58 = icmp eq %struct.ssl_session_st* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %55
  tail call void @SSL_SESSION_free(%struct.ssl_session_st* nonnull %57) #8
  br label %60

60:                                               ; preds = %55, %59
  %61 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 39, i32 0, i32 0, i32 0
  %62 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %61, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %61, align 8
  %63 = icmp eq %struct.evp_pkey_st* %62, null
  br i1 %63, label %65, label %64

64:                                               ; preds = %60
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %62) #8
  br label %65

65:                                               ; preds = %60, %64
  %66 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 38, i32 0, i32 0, i32 0
  %67 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %66, align 8
  store %struct.evp_pkey_st* null, %struct.evp_pkey_st** %66, align 8
  %68 = icmp eq %struct.evp_pkey_st* %67, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %65
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %67) #8
  br label %70

70:                                               ; preds = %65, %69
  %71 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 37
  %72 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %71, i64 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @OPENSSL_free(i8* %73) #8
  %74 = bitcast %"class.bssl::Array"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #8
  %75 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 35, i32 0, i32 0, i32 0
  %76 = load %struct.stack_st_CRYPTO_BUFFER*, %struct.stack_st_CRYPTO_BUFFER** %75, align 8
  store %struct.stack_st_CRYPTO_BUFFER* null, %struct.stack_st_CRYPTO_BUFFER** %75, align 8
  %77 = icmp eq %struct.stack_st_CRYPTO_BUFFER* %76, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %70
  %79 = bitcast %struct.stack_st_CRYPTO_BUFFER* %76 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %79, void (void (i8*)*, i8*)* nonnull @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_, void (i8*)* null) #8
  br label %80

80:                                               ; preds = %70, %78
  %81 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 34, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  store i8* null, i8** %81, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %80
  tail call void @OPENSSL_free(i8* nonnull %82) #8
  br label %85

85:                                               ; preds = %80, %84
  %86 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 33
  %87 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %86, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @OPENSSL_free(i8* %88) #8
  %89 = bitcast %"class.bssl::Array"* %86 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #8
  %90 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 32, i32 0
  tail call void @EVP_HPKE_CTX_cleanup(%struct.evp_hpke_ctx_st* %90) #8
  %91 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 29
  %92 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %91, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @OPENSSL_free(i8* %93) #8
  %94 = bitcast %"class.bssl::Array"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #8
  %95 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 28
  %96 = bitcast %"class.bssl::Array.39"* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @OPENSSL_free(i8* %97) #8
  %98 = bitcast %"class.bssl::Array.39"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #8
  %99 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 27
  %100 = bitcast %"class.bssl::Array.39"* %99 to i8**
  %101 = load i8*, i8** %100, align 8
  tail call void @OPENSSL_free(i8* %101) #8
  %102 = bitcast %"class.bssl::Array.39"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #8
  %103 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 26
  %104 = bitcast %"class.bssl::Array.39"* %103 to i8**
  %105 = load i8*, i8** %104, align 8
  tail call void @OPENSSL_free(i8* %105) #8
  %106 = bitcast %"class.bssl::Array.39"* %103 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %106, i8 0, i64 16, i1 false) #8
  %107 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 25
  %108 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %107, i64 0, i32 0
  %109 = load i8*, i8** %108, align 8
  tail call void @OPENSSL_free(i8* %109) #8
  %110 = bitcast %"class.bssl::Array"* %107 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #8
  %111 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 24
  %112 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %111, i64 0, i32 0
  %113 = load i8*, i8** %112, align 8
  tail call void @OPENSSL_free(i8* %113) #8
  %114 = bitcast %"class.bssl::Array"* %111 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %114, i8 0, i64 16, i1 false) #8
  %115 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 23
  %116 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %115, i64 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @OPENSSL_free(i8* %117) #8
  %118 = bitcast %"class.bssl::Array"* %115 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 16, i1 false) #8
  %119 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 22
  %120 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %119, i64 0, i32 0
  %121 = load i8*, i8** %120, align 8
  tail call void @OPENSSL_free(i8* %121) #8
  %122 = bitcast %"class.bssl::Array"* %119 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %122, i8 0, i64 16, i1 false) #8
  %123 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 21
  %124 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %123, i64 0, i32 0
  %125 = load i8*, i8** %124, align 8
  tail call void @OPENSSL_free(i8* %125) #8
  %126 = bitcast %"class.bssl::Array"* %123 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #8
  %127 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  tail call void @_ZN4bssl13SSLTranscriptD1Ev(%"class.bssl::SSLTranscript"* %127) #8
  %128 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 1, i32 0, i32 0, i32 0
  %129 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %128, align 8
  store %"class.bssl::SSLKeyShare"* null, %"class.bssl::SSLKeyShare"** %128, align 8
  %130 = icmp eq %"class.bssl::SSLKeyShare"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %85
  %132 = bitcast %"class.bssl::SSLKeyShare"* %129 to void (%"class.bssl::SSLKeyShare"*)***
  %133 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %132, align 8
  %134 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %133, align 8
  tail call void %134(%"class.bssl::SSLKeyShare"* nonnull %129) #8
  %135 = bitcast %"class.bssl::SSLKeyShare"* %129 to i8*
  tail call void @OPENSSL_free(i8* nonnull %135) #8
  br label %136

136:                                              ; preds = %85, %131
  %137 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 19, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.bssl::SSLKeyShare"*, %"class.bssl::SSLKeyShare"** %137, align 8
  store %"class.bssl::SSLKeyShare"* null, %"class.bssl::SSLKeyShare"** %137, align 8
  %139 = icmp eq %"class.bssl::SSLKeyShare"* %138, null
  br i1 %139, label %147, label %142

140:                                              ; preds = %147
  tail call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %149) #8
  br label %141

141:                                              ; preds = %147, %140
  ret void

142:                                              ; preds = %136
  %143 = bitcast %"class.bssl::SSLKeyShare"* %138 to void (%"class.bssl::SSLKeyShare"*)***
  %144 = load void (%"class.bssl::SSLKeyShare"*)**, void (%"class.bssl::SSLKeyShare"*)*** %143, align 8
  %145 = load void (%"class.bssl::SSLKeyShare"*)*, void (%"class.bssl::SSLKeyShare"*)** %144, align 8
  tail call void %145(%"class.bssl::SSLKeyShare"* nonnull %138) #8
  %146 = bitcast %"class.bssl::SSLKeyShare"* %138 to i8*
  tail call void @OPENSSL_free(i8* nonnull %146) #8
  br label %147

147:                                              ; preds = %142, %136
  %148 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %149 = load %struct.err_save_state_st*, %struct.err_save_state_st** %148, align 8
  store %struct.err_save_state_st* null, %struct.err_save_state_st** %148, align 8
  %150 = icmp eq %struct.err_save_state_st* %149, null
  br i1 %150, label %141, label %140
}

; Function Attrs: nounwind
declare void @_ZN4bssl13SSLTranscriptD1Ev(%"class.bssl::SSLTranscript"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4bssl13SSL_HANDSHAKE13ResizeSecretsEm(%"struct.bssl::SSL_HANDSHAKE"* nocapture, i64) local_unnamed_addr #0 align 2 {
  %3 = icmp ugt i64 %1, 48
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void @abort() #9
  unreachable

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 7
  store i64 %1, i64* %6, align 8
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl13SSL_HANDSHAKE14GetClientHelloEPNS_10SSLMessageEP22ssl_early_callback_ctx(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, %"struct.bssl::SSLMessage"*, %struct.ssl_early_callback_ctx*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 23
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 23, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 0
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  store i8 1, i8* %10, align 1
  %11 = bitcast %"class.bssl::Array"* %4 to <2 x i64>*
  %12 = load <2 x i64>, <2 x i64>* %11, align 8
  %13 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3, i32 0
  %14 = bitcast i8** %13 to <2 x i64>*
  store <2 x i64> %12, <2 x i64>* %14, align 8
  %15 = load i64, i64* %5, align 8
  %16 = icmp ult i64 %15, 4
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  tail call void @abort() #9
  unreachable

18:                                               ; preds = %8
  %19 = getelementptr inbounds %"class.bssl::Array", %"class.bssl::Array"* %4, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 4
  %22 = add i64 %15, -4
  %23 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2, i32 0
  store i8* %21, i8** %23, align 8
  %24 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2, i32 1
  store i64 %22, i64* %24, align 8
  br label %39

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %27 = load %struct.ssl_st*, %struct.ssl_st** %26, align 8
  %28 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %27, i64 0, i32 0
  %29 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %28, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %29, i64 0, i32 3
  %31 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %30, align 8
  %32 = tail call zeroext i1 %31(%struct.ssl_st* %27, %"struct.bssl::SSLMessage"* %1) #8
  br i1 %32, label %33, label %38

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 2, i32 1
  %37 = load i64, i64* %36, align 8
  br label %39

38:                                               ; preds = %25
  tail call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 180) #8
  br label %47

39:                                               ; preds = %33, %18
  %40 = phi i64 [ %37, %33 ], [ %22, %18 ]
  %41 = phi i8* [ %35, %33 ], [ %21, %18 ]
  %42 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %43 = load %struct.ssl_st*, %struct.ssl_st** %42, align 8
  %44 = tail call zeroext i1 @_ZN4bssl21ssl_client_hello_initEPK6ssl_stP22ssl_early_callback_ctxNS_4SpanIKhEE(%struct.ssl_st* %43, %struct.ssl_early_callback_ctx* %2, i8* %41, i64 %40) #8
  br i1 %44, label %47, label %45

45:                                               ; preds = %39
  tail call void @ERR_put_error(i32 16, i32 0, i32 131, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 185) #8
  %46 = load %struct.ssl_st*, %struct.ssl_st** %42, align 8
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %46, i32 2, i32 50) #8
  br label %47

47:                                               ; preds = %39, %45, %38
  %48 = phi i1 [ false, %45 ], [ false, %38 ], [ true, %39 ]
  ret i1 %48
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN4bssl21ssl_client_hello_initEPK6ssl_stP22ssl_early_callback_ctxNS_4SpanIKhEE(%struct.ssl_st*, %struct.ssl_early_callback_ctx*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.bssl::SSL_HANDSHAKE"* @_ZN4bssl17ssl_handshake_newEP6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i8* @OPENSSL_malloc(i64 1504) #8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %1
  tail call void @ERR_put_error(i32 16, i32 0, i32 65, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.3, i64 0, i64 0), i32 196) #8
  br label %33

5:                                                ; preds = %1
  %6 = ptrtoint %struct.ssl_st* %0 to i64
  %7 = bitcast i8* %2 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 16
  %9 = bitcast i8* %8 to i32*
  store i32 1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %2, i64 20
  %11 = getelementptr inbounds i8, i8* %2, i64 384
  %12 = getelementptr inbounds i8, i8* %2, i64 408
  %13 = bitcast i8* %12 to %"class.bssl::SSLTranscript"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %10, i8 0, i64 362, i1 false) #8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #8
  tail call void @_ZN4bssl13SSLTranscriptC1Ev(%"class.bssl::SSLTranscript"* %13) #8
  %14 = getelementptr inbounds i8, i8* %2, i64 448
  %15 = getelementptr inbounds i8, i8* %2, i64 600
  %16 = bitcast i8* %15 to %struct.evp_hpke_ctx_st*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 144, i1 false) #8
  tail call void @EVP_HPKE_CTX_zero(%struct.evp_hpke_ctx_st* %16) #8
  %17 = getelementptr inbounds i8, i8* %2, i64 1320
  %18 = getelementptr inbounds i8, i8* %2, i64 1448
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 128, i1 false) #8
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, -134217728
  store i32 %21, i32* %19, align 8
  %22 = getelementptr inbounds i8, i8* %2, i64 1452
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 46, i1 false) #8
  %23 = tail call zeroext i1 @_ZN4bssl13SSLTranscript4InitEv(%"class.bssl::SSLTranscript"* %13) #8
  br i1 %23, label %24, label %31

24:                                               ; preds = %5
  %25 = ptrtoint i8* %2 to i64
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %26, align 8
  %28 = getelementptr inbounds i8, i8* %2, i64 8
  %29 = bitcast i8* %28 to %"struct.bssl::SSL_CONFIG"**
  store %"struct.bssl::SSL_CONFIG"* %27, %"struct.bssl::SSL_CONFIG"** %29, align 8
  %30 = icmp eq %"struct.bssl::SSL_CONFIG"* %27, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %5, %24
  %32 = bitcast i8* %2 to %"struct.bssl::SSL_HANDSHAKE"*
  tail call void @_ZN4bssl13SSL_HANDSHAKED2Ev(%"struct.bssl::SSL_HANDSHAKE"* nonnull %32) #8
  tail call void @OPENSSL_free(i8* nonnull %2) #8
  br label %33

33:                                               ; preds = %24, %4, %31
  %34 = phi i64 [ 0, %31 ], [ 0, %4 ], [ %25, %24 ]
  %35 = inttoptr i64 %34 to %"struct.bssl::SSL_HANDSHAKE"*
  ret %"struct.bssl::SSL_HANDSHAKE"* %35
}

declare zeroext i1 @_ZN4bssl13SSLTranscript4InitEv(%"class.bssl::SSLTranscript"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl22ssl_check_message_typeEP6ssl_stRKNS_10SSLMessageEi(%struct.ssl_st*, %"struct.bssl::SSLMessage"* nocapture readonly dereferenceable(40), i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = zext i8 %5 to i32
  %7 = icmp eq i32 %6, %2
  br i1 %7, label %11, label %8

8:                                                ; preds = %3
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %0, i32 2, i32 10) #8
  tail call void @ERR_put_error(i32 16, i32 0, i32 223, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 208) #8
  %9 = load i8, i8* %4, align 1
  %10 = zext i8 %9 to i32
  tail call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %10, i32 %2) #8
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i1 [ false, %8 ], [ true, %3 ]
  ret i1 %12
}

declare void @ERR_add_error_dataf(i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl19ssl_add_message_cbbEP6ssl_stP6cbb_st(%struct.ssl_st*, %struct.cbb_st*) local_unnamed_addr #0 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"class.bssl::Array"*
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = bitcast <2 x i64>* %3 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false) #8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 0
  %9 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %9, i64 0, i32 12
  %11 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)** %10, align 8
  %12 = call zeroext i1 %11(%struct.ssl_st* %0, %struct.cbb_st* %1, %"class.bssl::Array"* nonnull %4) #8
  br i1 %12, label %13, label %23

13:                                               ; preds = %2
  %14 = bitcast <2 x i64>* %5 to %"class.bssl::Array"*
  %15 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %16 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %15, i64 0, i32 13
  %17 = load i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)** %16, align 8
  %18 = bitcast <2 x i64>* %5 to i8*
  call void @OPENSSL_free(i8* null) #8
  %19 = load <2 x i64>, <2 x i64>* %3, align 16
  store <2 x i64> %19, <2 x i64>* %5, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 0, i64 16, i1 false) #8
  %20 = call zeroext i1 %17(%struct.ssl_st* %0, %"class.bssl::Array"* nonnull %14) #8
  %21 = bitcast <2 x i64>* %5 to i8**
  %22 = load i8*, i8** %21, align 16
  call void @OPENSSL_free(i8* %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 16, i1 false) #8
  br i1 %20, label %24, label %23

23:                                               ; preds = %13, %2
  br label %24

24:                                               ; preds = %13, %23
  %25 = phi i1 [ false, %23 ], [ true, %13 ]
  %26 = load i8*, i8** %7, align 16
  call void @OPENSSL_free(i8* %26) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4bssl29ssl_max_handshake_message_lenEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #0 {
  %2 = tail call i32 @SSL_in_init(%struct.ssl_st* %0) #8
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %22, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %6 = load i8, i8* %5, align 4
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %11 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %11, i64 0, i32 22
  %13 = load i8, i8* %12, align 8
  %14 = and i8 %13, 1
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %31, label %16

16:                                               ; preds = %9, %4
  %17 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 21
  %18 = load i32, i32* %17, align 8
  %19 = icmp ugt i32 %18, 16384
  %20 = select i1 %19, i32 %18, i32 16384
  %21 = zext i32 %20 to i64
  ret i64 %21

22:                                               ; preds = %1
  %23 = tail call zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st* %0) #8
  %24 = icmp ult i16 %23, 772
  br i1 %24, label %31, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %0, i64 0, i32 26
  %27 = load i8, i8* %26, align 4
  %28 = and i8 %27, 1
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i64 16384, i64 1
  br label %31

31:                                               ; preds = %25, %22, %9
  %32 = phi i64 [ 16384, %9 ], [ 0, %22 ], [ %30, %25 ]
  ret i64 %32
}

declare i32 @SSL_in_init(%struct.ssl_st*) local_unnamed_addr #1

declare zeroext i16 @_ZN4bssl20ssl_protocol_versionEPK6ssl_st(%struct.ssl_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl16ssl_hash_messageEPNS_13SSL_HANDSHAKEERKNS_10SSLMessageE(%"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSLMessage"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %8 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %1, i64 0, i32 3, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %7, i8* %9, i64 %11) #8
  br label %13

13:                                               ; preds = %2, %6
  %14 = phi i1 [ %12, %6 ], [ true, %2 ]
  ret i1 %14
}

declare zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl20ssl_parse_extensionsEPK6cbs_stPhNS_4SpanIKNS_18SSL_EXTENSION_TYPEEEEb(%struct.cbs_st* nocapture readonly, i8* nocapture, %"struct.bssl::SSL_EXTENSION_TYPE"*, i64, i1 zeroext) local_unnamed_addr #0 {
  %6 = alloca %struct.cbs_st, align 8
  %7 = alloca i16, align 2
  %8 = alloca %struct.cbs_st, align 8
  %9 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %2, i64 %3
  %10 = icmp eq i64 %3, 0
  br i1 %10, label %11, label %20

11:                                               ; preds = %20, %5
  %12 = bitcast %struct.cbs_st* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #8
  %13 = bitcast %struct.cbs_st* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 16, i1 false)
  %14 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %67, label %16

16:                                               ; preds = %11
  %17 = bitcast i16* %7 to i8*
  %18 = bitcast %struct.cbs_st* %8 to i8*
  %19 = bitcast %struct.cbs_st* %8 to i8*
  br label %28

20:                                               ; preds = %5, %20
  %21 = phi %"struct.bssl::SSL_EXTENSION_TYPE"* [ %26, %20 ], [ %2, %5 ]
  %22 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %21, i64 0, i32 1
  %23 = load i8*, i8** %22, align 8
  store i8 0, i8* %23, align 1
  %24 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %21, i64 0, i32 2
  %25 = load %struct.cbs_st*, %struct.cbs_st** %24, align 8
  tail call void @CBS_init(%struct.cbs_st* %25, i8* null, i64 0) #8
  %26 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %21, i64 1
  %27 = icmp eq %"struct.bssl::SSL_EXTENSION_TYPE"* %26, %9
  br i1 %27, label %11, label %20

28:                                               ; preds = %16, %64
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %17) #8
  store i16 -21846, i16* %7, align 2
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %29 = call i32 @CBS_get_u16(%struct.cbs_st* nonnull %6, i16* nonnull %7) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %28
  %32 = call i32 @CBS_get_u16_length_prefixed(%struct.cbs_st* nonnull %6, %struct.cbs_st* nonnull %8) #8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  br i1 %10, label %50, label %35

35:                                               ; preds = %34
  %36 = load i16, i16* %7, align 2
  br label %38

37:                                               ; preds = %31, %28
  call void @ERR_put_error(i32 16, i32 0, i32 190, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 280) #8
  br label %62

38:                                               ; preds = %38, %35
  %39 = phi %"struct.bssl::SSL_EXTENSION_TYPE"* [ %2, %35 ], [ %45, %38 ]
  %40 = phi %"struct.bssl::SSL_EXTENSION_TYPE"* [ null, %35 ], [ %44, %38 ]
  %41 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %39, i64 0, i32 0
  %42 = load i16, i16* %41, align 8
  %43 = icmp eq i16 %36, %42
  %44 = select i1 %43, %"struct.bssl::SSL_EXTENSION_TYPE"* %39, %"struct.bssl::SSL_EXTENSION_TYPE"* %40
  %45 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %39, i64 1
  %46 = icmp eq %"struct.bssl::SSL_EXTENSION_TYPE"* %45, %9
  %47 = or i1 %43, %46
  br i1 %47, label %48, label %38

48:                                               ; preds = %38
  %49 = icmp eq %"struct.bssl::SSL_EXTENSION_TYPE"* %44, null
  br i1 %49, label %50, label %52

50:                                               ; preds = %34, %48
  br i1 %4, label %64, label %51

51:                                               ; preds = %50
  call void @ERR_put_error(i32 16, i32 0, i32 222, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 297) #8
  br label %62

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %44, i64 0, i32 1
  %54 = load i8*, i8** %53, align 8
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %52
  call void @ERR_put_error(i32 16, i32 0, i32 257, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 304) #8
  br label %62

58:                                               ; preds = %52
  store i8 1, i8* %54, align 1
  %59 = getelementptr inbounds %"struct.bssl::SSL_EXTENSION_TYPE", %"struct.bssl::SSL_EXTENSION_TYPE"* %44, i64 0, i32 2
  %60 = bitcast %struct.cbs_st** %59 to i8**
  %61 = load i8*, i8** %60, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %18, i64 16, i1 false)
  br label %64

62:                                               ; preds = %37, %51, %57
  %63 = phi i8 [ 50, %37 ], [ 110, %51 ], [ 47, %57 ]
  store i8 %63, i8* %1, align 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #8
  br label %67

64:                                               ; preds = %58, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %17) #8
  %65 = call i64 @CBS_len(%struct.cbs_st* nonnull %6) #8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %28

67:                                               ; preds = %64, %11, %62
  %68 = phi i1 [ false, %62 ], [ true, %11 ], [ true, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #8
  ret i1 %68
}

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #1

declare i32 @CBS_get_u16(%struct.cbs_st*, i16*) local_unnamed_addr #1

declare i32 @CBS_get_u16_length_prefixed(%struct.cbs_st*, %struct.cbs_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl20ssl_verify_peer_certEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %4 = load %struct.ssl_st*, %struct.ssl_st** %3, align 8
  %5 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 8
  %6 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %6, i64 0, i32 47, i32 0, i32 0, i32 0
  %8 = load %struct.ssl_session_st*, %struct.ssl_session_st** %7, align 8
  %9 = icmp eq %struct.ssl_session_st* %8, null
  br i1 %9, label %96, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  %12 = bitcast %struct.stack_st_CRYPTO_BUFFER** %11 to %struct.stack_st**
  %13 = load %struct.stack_st*, %struct.stack_st** %12, align 8
  %14 = tail call i64 @sk_num(%struct.stack_st* %13) #8
  %15 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %16 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %17 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %16, i64 0, i32 11, i32 0, i32 0, i32 0
  %18 = bitcast %struct.stack_st_CRYPTO_BUFFER** %17 to %struct.stack_st**
  %19 = load %struct.stack_st*, %struct.stack_st** %18, align 8
  %20 = tail call i64 @sk_num(%struct.stack_st* %19) #8
  %21 = icmp eq i64 %14, %20
  br i1 %21, label %22, label %29

22:                                               ; preds = %10
  %23 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %24 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %23, i64 0, i32 11, i32 0, i32 0, i32 0
  %25 = bitcast %struct.stack_st_CRYPTO_BUFFER** %24 to %struct.stack_st**
  %26 = load %struct.stack_st*, %struct.stack_st** %25, align 8
  %27 = tail call i64 @sk_num(%struct.stack_st* %26) #8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %61, label %30

29:                                               ; preds = %10
  tail call void @ERR_put_error(i32 16, i32 0, i32 273, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 327) #8
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %4, i32 2, i32 47) #8
  br label %163

30:                                               ; preds = %22, %52
  %31 = phi i64 [ %53, %52 ], [ 0, %22 ]
  %32 = load %struct.stack_st*, %struct.stack_st** %12, align 8
  %33 = tail call i8* @sk_value(%struct.stack_st* %32, i64 %31) #8
  %34 = bitcast i8* %33 to %struct.crypto_buffer_st*
  %35 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %36 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %35, i64 0, i32 11, i32 0, i32 0, i32 0
  %37 = bitcast %struct.stack_st_CRYPTO_BUFFER** %36 to %struct.stack_st**
  %38 = load %struct.stack_st*, %struct.stack_st** %37, align 8
  %39 = tail call i8* @sk_value(%struct.stack_st* %38, i64 %31) #8
  %40 = bitcast i8* %39 to %struct.crypto_buffer_st*
  %41 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %34) #8
  %42 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %40) #8
  %43 = icmp eq i64 %41, %42
  br i1 %43, label %44, label %60

44:                                               ; preds = %30
  %45 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %34) #8
  %46 = tail call i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st* %40) #8
  %47 = tail call i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st* %34) #8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = tail call i32 @bcmp(i8* %45, i8* %46, i64 %47)
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %44, %49
  %53 = add nuw i64 %31, 1
  %54 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %55 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %54, i64 0, i32 11, i32 0, i32 0, i32 0
  %56 = bitcast %struct.stack_st_CRYPTO_BUFFER** %55 to %struct.stack_st**
  %57 = load %struct.stack_st*, %struct.stack_st** %56, align 8
  %58 = tail call i64 @sk_num(%struct.stack_st* %57) #8
  %59 = icmp ult i64 %53, %58
  br i1 %59, label %30, label %61

60:                                               ; preds = %49, %30
  tail call void @ERR_put_error(i32 16, i32 0, i32 273, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 342) #8
  tail call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %4, i32 2, i32 47) #8
  br label %163

61:                                               ; preds = %52, %22
  %62 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %8, i64 0, i32 26, i32 0, i32 0, i32 0
  %63 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %62, align 8
  %64 = icmp eq %struct.crypto_buffer_st* %63, null
  br i1 %64, label %67, label %65

65:                                               ; preds = %61
  %66 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %63) #8
  br label %67

67:                                               ; preds = %61, %65
  %68 = ptrtoint %struct.crypto_buffer_st* %63 to i64
  %69 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %70 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %69, i64 0, i32 26
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %70, i64 0, i32 0, i32 0, i32 0
  %72 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %71, align 8
  %73 = bitcast %"class.std::__1::unique_ptr.34"* %70 to i64*
  store i64 %68, i64* %73, align 8
  %74 = icmp eq %struct.crypto_buffer_st* %72, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %67
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %72) #8
  br label %76

76:                                               ; preds = %75, %67
  %77 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %8, i64 0, i32 25, i32 0, i32 0, i32 0
  %78 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %77, align 8
  %79 = icmp eq %struct.crypto_buffer_st* %78, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %76
  %81 = tail call i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st* nonnull %78) #8
  br label %82

82:                                               ; preds = %76, %80
  %83 = ptrtoint %struct.crypto_buffer_st* %78 to i64
  %84 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %85 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %84, i64 0, i32 25
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.34"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %struct.crypto_buffer_st*, %struct.crypto_buffer_st** %86, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.34"* %85 to i64*
  store i64 %83, i64* %88, align 8
  %89 = icmp eq %struct.crypto_buffer_st* %87, null
  br i1 %89, label %91, label %90

90:                                               ; preds = %82
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* nonnull %87) #8
  br label %91

91:                                               ; preds = %90, %82
  %92 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %8, i64 0, i32 16
  %93 = load i64, i64* %92, align 8
  %94 = load %struct.ssl_session_st*, %struct.ssl_session_st** %15, align 8
  %95 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %94, i64 0, i32 16
  store i64 %93, i64* %95, align 8
  br label %163

96:                                               ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #8
  store i8 46, i8* %2, align 1
  %97 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %98 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %97, align 8
  %99 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %98, i64 0, i32 8
  %100 = load i32 (%struct.ssl_st*, i8*)*, i32 (%struct.ssl_st*, i8*)** %99, align 8
  %101 = icmp eq i32 (%struct.ssl_st*, i8*)* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = call i32 %100(%struct.ssl_st* %4, i8* nonnull %2) #8
  switch i32 %103, label %131 [
    i32 0, label %104
    i32 1, label %108
  ]

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %106 = load %struct.ssl_session_st*, %struct.ssl_session_st** %105, align 8
  %107 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %106, i64 0, i32 16
  store i64 0, i64* %107, align 8
  br label %136

108:                                              ; preds = %102
  %109 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %97, align 8
  %110 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %109, i64 0, i32 22
  %111 = load i8, i8* %110, align 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %108
  call void @ERR_clear_error() #8
  br label %114

114:                                              ; preds = %113, %108
  %115 = phi i32 [ 0, %113 ], [ 1, %108 ]
  %116 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %117 = load %struct.ssl_session_st*, %struct.ssl_session_st** %116, align 8
  %118 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %117, i64 0, i32 16
  store i64 50, i64* %118, align 8
  br label %131

119:                                              ; preds = %96
  %120 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %121 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %120, align 8
  %122 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %121, i64 0, i32 1
  %123 = load %"struct.bssl::SSL_X509_METHOD"*, %"struct.bssl::SSL_X509_METHOD"** %122, align 8
  %124 = getelementptr inbounds %"struct.bssl::SSL_X509_METHOD", %"struct.bssl::SSL_X509_METHOD"* %123, i64 0, i32 9
  %125 = load i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)*, i1 (%struct.ssl_session_st*, %"struct.bssl::SSL_HANDSHAKE"*, i8*)** %124, align 8
  %126 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %127 = load %struct.ssl_session_st*, %struct.ssl_session_st** %126, align 8
  %128 = call zeroext i1 %125(%struct.ssl_session_st* %127, %"struct.bssl::SSL_HANDSHAKE"* %0, i8* nonnull %2) #8
  %129 = xor i1 %128, true
  %130 = zext i1 %129 to i32
  br label %131

131:                                              ; preds = %114, %102, %119
  %132 = phi i32 [ %103, %102 ], [ %115, %114 ], [ %130, %119 ]
  switch i32 %132, label %161 [
    i32 1, label %133
    i32 0, label %136
  ]

133:                                              ; preds = %131
  call void @ERR_put_error(i32 16, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 386) #8
  %134 = load i8, i8* %2, align 1
  %135 = zext i8 %134 to i32
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %4, i32 2, i32 %135) #8
  br label %161

136:                                              ; preds = %104, %131
  %137 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 26
  %138 = load i8, i8* %137, align 4
  %139 = and i8 %138, 1
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %141, label %161

141:                                              ; preds = %136
  %142 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %97, align 8
  %143 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %142, i64 0, i32 23
  %144 = load i16, i16* %143, align 1
  %145 = and i16 %144, 4
  %146 = icmp eq i16 %145, 0
  br i1 %146, label %161, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %4, i64 0, i32 16, i32 0, i32 0, i32 0
  %149 = load %struct.ssl_ctx_st*, %struct.ssl_ctx_st** %148, align 8
  %150 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %149, i64 0, i32 74
  %151 = load i32 (%struct.ssl_st*, i8*)*, i32 (%struct.ssl_st*, i8*)** %150, align 8
  %152 = icmp eq i32 (%struct.ssl_st*, i8*)* %151, null
  br i1 %152, label %161, label %153

153:                                              ; preds = %147
  %154 = getelementptr inbounds %struct.ssl_ctx_st, %struct.ssl_ctx_st* %149, i64 0, i32 75
  %155 = load i8*, i8** %154, align 8
  %156 = call i32 %151(%struct.ssl_st* %4, i8* %155) #8
  %157 = icmp slt i32 %156, 1
  br i1 %157, label %158, label %161

158:                                              ; preds = %153
  call void @ERR_put_error(i32 16, i32 0, i32 289, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 398) #8
  %159 = icmp eq i32 %156, 0
  %160 = select i1 %159, i32 113, i32 80
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %4, i32 2, i32 %160) #8
  br label %161

161:                                              ; preds = %133, %153, %158, %131, %147, %141, %136
  %162 = phi i32 [ 0, %136 ], [ 0, %147 ], [ 0, %141 ], [ 1, %133 ], [ %132, %131 ], [ 1, %158 ], [ 0, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #8
  br label %163

163:                                              ; preds = %60, %161, %91, %29
  %164 = phi i32 [ 1, %29 ], [ 0, %91 ], [ 1, %60 ], [ %162, %161 ]
  ret i32 %164
}

declare i64 @CRYPTO_BUFFER_len(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare i8* @CRYPTO_BUFFER_data(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @ERR_clear_error() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl22ssl_reverify_peer_certEPNS_13SSL_HANDSHAKEEb(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly, i1 zeroext) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %5 = load %struct.ssl_st*, %struct.ssl_st** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 46, i8* %3, align 1
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 1
  %7 = load %"struct.bssl::SSL_CONFIG"*, %"struct.bssl::SSL_CONFIG"** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_CONFIG", %"struct.bssl::SSL_CONFIG"* %7, i64 0, i32 8
  %9 = load i32 (%struct.ssl_st*, i8*)*, i32 (%struct.ssl_st*, i8*)** %8, align 8
  %10 = icmp eq i32 (%struct.ssl_st*, i8*)* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = call i32 %9(%struct.ssl_st* %5, i8* nonnull %3) #8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %18

14:                                               ; preds = %2, %11
  call void @ERR_put_error(i32 16, i32 0, i32 125, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 429) #8
  br i1 %1, label %15, label %18

15:                                               ; preds = %14
  %16 = load i8, i8* %3, align 1
  %17 = zext i8 %16 to i32
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %5, i32 2, i32 %17) #8
  br label %18

18:                                               ; preds = %14, %15, %11
  %19 = phi i32 [ 1, %14 ], [ 1, %15 ], [ %12, %11 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  ret i32 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN4bssl20ssl_get_grease_valueEPNS_13SSL_HANDSHAKEENS_18ssl_grease_index_tE(%"struct.bssl::SSL_HANDSHAKE"*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 46
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 2097152
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %12

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 53, i64 0
  %9 = tail call i32 @RAND_bytes(i8* %8, i64 6) #8
  %10 = load i32, i32* %3, align 8
  %11 = or i32 %10, 2097152
  store i32 %11, i32* %3, align 8
  br label %12

12:                                               ; preds = %2, %7
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 53, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = and i8 %15, -16
  %17 = or i8 %16, 10
  %18 = zext i8 %17 to i32
  %19 = shl nuw nsw i32 %18, 8
  %20 = or i32 %19, %18
  %21 = trunc i32 %20 to i16
  ret i16 %21
}

declare i32 @RAND_bytes(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl16ssl_get_finishedEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca %"struct.bssl::SSLMessage", align 8
  %3 = alloca [64 x i8], align 16
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %6 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %7 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 40, i1 false)
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 0
  %9 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %9, i64 0, i32 3
  %11 = load i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)*, i1 (%struct.ssl_st*, %"struct.bssl::SSLMessage"*)** %10, align 8
  %12 = call zeroext i1 %11(%struct.ssl_st* %6, %"struct.bssl::SSLMessage"* nonnull %2) #8
  br i1 %12, label %13, label %92

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 20
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %6, i32 2, i32 10) #8
  call void @ERR_put_error(i32 16, i32 0, i32 223, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 208) #8
  %18 = load i8, i8* %14, align 1
  %19 = zext i8 %18 to i32
  call void (i8*, ...) @ERR_add_error_dataf(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.1, i64 0, i64 0), i32 %19, i32 20) #8
  br label %92

20:                                               ; preds = %13
  %21 = getelementptr inbounds [64 x i8], [64 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 64, i1 false)
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #8
  store i64 -6148914691236517206, i64* %4, align 8
  %23 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %24 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %25 = load %struct.ssl_session_st*, %struct.ssl_session_st** %24, align 8
  %26 = icmp eq %struct.ssl_session_st* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %20
  %28 = load %struct.ssl_st*, %struct.ssl_st** %5, align 8
  %29 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %28, i64 0, i32 14, i32 0, i32 0, i32 0
  %30 = load %struct.ssl_session_st*, %struct.ssl_session_st** %29, align 8
  br label %31

31:                                               ; preds = %20, %27
  %32 = phi %struct.ssl_session_st* [ %30, %27 ], [ %25, %20 ]
  %33 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 26
  %34 = load i8, i8* %33, align 4
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  %37 = call zeroext i1 @_ZN4bssl13SSLTranscript14GetFinishedMACEPhPmPK14ssl_session_stb(%"class.bssl::SSLTranscript"* %23, i8* nonnull %21, i64* nonnull %4, %struct.ssl_session_st* %32, i1 zeroext %36) #8
  br i1 %37, label %38, label %90

38:                                               ; preds = %31
  %39 = load i8, i8* %7, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 3, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 3, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = call zeroext i1 @_ZN4bssl13SSLTranscript6UpdateENS_4SpanIKhEE(%"class.bssl::SSLTranscript"* %23, i8* %43, i64 %45) #8
  br i1 %46, label %47, label %90

47:                                               ; preds = %38, %41
  %48 = getelementptr inbounds %"struct.bssl::SSLMessage", %"struct.bssl::SSLMessage"* %2, i64 0, i32 2
  %49 = load i64, i64* %4, align 8
  %50 = call i32 @CBS_mem_equal(%struct.cbs_st* %48, i8* nonnull %21, i64 %49) #8
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %47
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %6, i32 2, i32 51) #8
  call void @ERR_put_error(i32 16, i32 0, i32 142, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 482) #8
  br label %90

53:                                               ; preds = %47
  %54 = load i64, i64* %4, align 8
  %55 = icmp ugt i64 %54, 12
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 489) #8
  br label %90

57:                                               ; preds = %53
  %58 = load i8, i8* %33, align 4
  %59 = and i8 %58, 1
  %60 = icmp eq i8 %59, 0
  %61 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %6, i64 0, i32 8
  %62 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %61, align 8
  %63 = icmp eq i64 %54, 0
  br i1 %60, label %72, label %64

64:                                               ; preds = %57
  br i1 %63, label %68, label %65

65:                                               ; preds = %64
  %66 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %62, i64 0, i32 41, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %66, i8* nonnull align 16 %21, i64 %54, i1 false) #8
  %67 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %61, align 8
  br label %68

68:                                               ; preds = %64, %65
  %69 = phi %"struct.bssl::SSL3_STATE"* [ %62, %64 ], [ %67, %65 ]
  %70 = trunc i64 %54 to i8
  %71 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %69, i64 0, i32 42
  store i8 %70, i8* %71, align 1
  br label %80

72:                                               ; preds = %57
  br i1 %63, label %76, label %73

73:                                               ; preds = %72
  %74 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %62, i64 0, i32 44, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* nonnull align 16 %21, i64 %54, i1 false) #8
  %75 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %61, align 8
  br label %76

76:                                               ; preds = %72, %73
  %77 = phi %"struct.bssl::SSL3_STATE"* [ %62, %72 ], [ %75, %73 ]
  %78 = trunc i64 %54 to i8
  %79 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %77, i64 0, i32 43
  store i8 %78, i8* %79, align 8
  br label %80

80:                                               ; preds = %76, %68
  %81 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %82 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %81, i64 0, i32 5
  %83 = load i1 (%struct.ssl_st*)*, i1 (%struct.ssl_st*)** %82, align 8
  %84 = call zeroext i1 %83(%struct.ssl_st* %6) #8
  br i1 %84, label %85, label %86

85:                                               ; preds = %80
  call void @_ZN4bssl14ssl_send_alertEP6ssl_stii(%struct.ssl_st* %6, i32 2, i32 10) #8
  call void @ERR_put_error(i32 16, i32 0, i32 255, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 504) #8
  br label %90

86:                                               ; preds = %80
  %87 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %8, align 8
  %88 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %87, i64 0, i32 4
  %89 = load void (%struct.ssl_st*)*, void (%struct.ssl_st*)** %88, align 8
  call void %89(%struct.ssl_st* %6) #8
  br label %90

90:                                               ; preds = %52, %56, %85, %86, %31, %41
  %91 = phi i32 [ 0, %41 ], [ 0, %31 ], [ 0, %56 ], [ 0, %85 ], [ 1, %86 ], [ 0, %52 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %21) #8
  br label %92

92:                                               ; preds = %17, %1, %90
  %93 = phi i32 [ %91, %90 ], [ 3, %1 ], [ 0, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #8
  ret i32 %93
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZN4bssl13SSLTranscript14GetFinishedMACEPhPmPK14ssl_session_stb(%"class.bssl::SSLTranscript"*, i8*, i64*, %struct.ssl_session_st*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.ssl_session_st* @_ZN4bssl21ssl_handshake_sessionEPKNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"* nocapture readonly) local_unnamed_addr #5 {
  %2 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %3 = load %struct.ssl_session_st*, %struct.ssl_session_st** %2, align 8
  %4 = icmp eq %struct.ssl_session_st* %3, null
  br i1 %4, label %5, label %10

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 14, i32 0, i32 0, i32 0
  %9 = load %struct.ssl_session_st*, %struct.ssl_session_st** %8, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = phi %struct.ssl_session_st* [ %9, %5 ], [ %3, %1 ]
  ret %struct.ssl_session_st* %11
}

declare i32 @CBS_mem_equal(%struct.cbs_st*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl17ssl_send_finishedEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.bssl::Array"*
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.bssl::Array"*
  %6 = alloca [64 x i8], align 16
  %7 = alloca i64, align 8
  %8 = alloca %"class.bssl::internal::StackAllocated.120", align 8
  %9 = alloca %struct.cbb_st, align 8
  %10 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %11 = load %struct.ssl_st*, %struct.ssl_st** %10, align 8
  %12 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 40, i32 0, i32 0, i32 0
  %13 = load %struct.ssl_session_st*, %struct.ssl_session_st** %12, align 8
  %14 = icmp eq %struct.ssl_session_st* %13, null
  br i1 %14, label %15, label %18

15:                                               ; preds = %1
  %16 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %11, i64 0, i32 14, i32 0, i32 0, i32 0
  %17 = load %struct.ssl_session_st*, %struct.ssl_session_st** %16, align 8
  br label %18

18:                                               ; preds = %1, %15
  %19 = phi %struct.ssl_session_st* [ %17, %15 ], [ %13, %1 ]
  %20 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %20, i8 -86, i64 64, i1 false)
  %21 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  store i64 -6148914691236517206, i64* %7, align 8
  %22 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 20
  %23 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %11, i64 0, i32 26
  %24 = load i8, i8* %23, align 4
  %25 = and i8 %24, 1
  %26 = icmp ne i8 %25, 0
  %27 = call zeroext i1 @_ZN4bssl13SSLTranscript14GetFinishedMACEPhPmPK14ssl_session_stb(%"class.bssl::SSLTranscript"* %22, i8* nonnull %20, i64* nonnull %7, %struct.ssl_session_st* %19, i1 zeroext %26) #8
  br i1 %27, label %28, label %97

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %19, i64 0, i32 5, i64 0
  %30 = getelementptr inbounds %struct.ssl_session_st, %struct.ssl_session_st* %19, i64 0, i32 4
  %31 = load i32, i32* %30, align 4
  %32 = sext i32 %31 to i64
  %33 = call zeroext i1 @_ZN4bssl14ssl_log_secretEPK6ssl_stPKcNS_4SpanIKhEE(%struct.ssl_st* %11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* %29, i64 %32) #8
  br i1 %33, label %34, label %97

34:                                               ; preds = %28
  %35 = load i64, i64* %7, align 8
  %36 = icmp ugt i64 %35, 12
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 532) #8
  br label %97

38:                                               ; preds = %34
  %39 = load i8, i8* %23, align 4
  %40 = and i8 %39, 1
  %41 = icmp eq i8 %40, 0
  %42 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %11, i64 0, i32 8
  %43 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %42, align 8
  %44 = icmp eq i64 %35, 0
  br i1 %41, label %53, label %45

45:                                               ; preds = %38
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %43, i64 0, i32 44, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* nonnull align 16 %20, i64 %35, i1 false) #8
  %48 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %42, align 8
  br label %49

49:                                               ; preds = %45, %46
  %50 = phi %"struct.bssl::SSL3_STATE"* [ %43, %45 ], [ %48, %46 ]
  %51 = trunc i64 %35 to i8
  %52 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %50, i64 0, i32 43
  store i8 %51, i8* %52, align 8
  br label %61

53:                                               ; preds = %38
  br i1 %44, label %57, label %54

54:                                               ; preds = %53
  %55 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %43, i64 0, i32 41, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %55, i8* nonnull align 16 %20, i64 %35, i1 false) #8
  %56 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %42, align 8
  br label %57

57:                                               ; preds = %53, %54
  %58 = phi %"struct.bssl::SSL3_STATE"* [ %43, %53 ], [ %56, %54 ]
  %59 = trunc i64 %35 to i8
  %60 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %58, i64 0, i32 42
  store i8 %59, i8* %60, align 1
  br label %61

61:                                               ; preds = %57, %49
  %62 = bitcast %"class.bssl::internal::StackAllocated.120"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 32, i1 false)
  %63 = getelementptr inbounds %"class.bssl::internal::StackAllocated.120", %"class.bssl::internal::StackAllocated.120"* %8, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %63) #8
  %64 = bitcast %struct.cbb_st* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %64) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 32, i1 false)
  %65 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %11, i64 0, i32 0
  %66 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %65, align 8
  %67 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %66, i64 0, i32 11
  %68 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %67, align 8
  %69 = call zeroext i1 %68(%struct.ssl_st* %11, %struct.cbb_st* nonnull %63, %struct.cbb_st* nonnull %9, i8 zeroext 20) #8
  br i1 %69, label %70, label %94

70:                                               ; preds = %61
  %71 = load i64, i64* %7, align 8
  %72 = call i32 @CBB_add_bytes(%struct.cbb_st* nonnull %9, i8* nonnull %20, i64 %71) #8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %94, label %74

74:                                               ; preds = %70
  %75 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75)
  %76 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  %77 = bitcast <2 x i64>* %2 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 0, i64 16, i1 false) #8
  %78 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %65, align 8
  %79 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %78, i64 0, i32 12
  %80 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)** %79, align 8
  %81 = call zeroext i1 %80(%struct.ssl_st* %11, %struct.cbb_st* nonnull %63, %"class.bssl::Array"* nonnull %3) #8
  br i1 %81, label %82, label %92

82:                                               ; preds = %74
  %83 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %65, align 8
  %84 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %83, i64 0, i32 13
  %85 = load i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)** %84, align 8
  call void @OPENSSL_free(i8* null) #8
  %86 = load <2 x i64>, <2 x i64>* %2, align 16
  store <2 x i64> %86, <2 x i64>* %4, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 0, i64 16, i1 false) #8
  %87 = call zeroext i1 %85(%struct.ssl_st* %11, %"class.bssl::Array"* nonnull %5) #8
  %88 = bitcast <2 x i64>* %4 to i8**
  %89 = load i8*, i8** %88, align 16
  call void @OPENSSL_free(i8* %89) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %75, i8 0, i64 16, i1 false) #8
  br i1 %87, label %90, label %92

90:                                               ; preds = %82
  %91 = load i8*, i8** %77, align 16
  call void @OPENSSL_free(i8* %91) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75)
  br label %95

92:                                               ; preds = %74, %82
  %93 = load i8*, i8** %77, align 16
  call void @OPENSSL_free(i8* %93) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75)
  br label %94

94:                                               ; preds = %92, %70, %61
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 549) #8
  br label %95

95:                                               ; preds = %90, %94
  %96 = phi i1 [ false, %94 ], [ true, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %64) #8
  call void @CBB_cleanup(%struct.cbb_st* nonnull %63) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #8
  br label %97

97:                                               ; preds = %28, %18, %95, %37
  %98 = phi i1 [ false, %37 ], [ %96, %95 ], [ false, %18 ], [ false, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %20) #8
  ret i1 %98
}

declare zeroext i1 @_ZN4bssl14ssl_log_secretEPK6ssl_stPKcNS_4SpanIKhEE(%struct.ssl_st*, i8*, i8*, i64) local_unnamed_addr #1

declare i32 @CBB_add_bytes(%struct.cbb_st*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4bssl21ssl_output_cert_chainEPNS_13SSL_HANDSHAKEE(%"struct.bssl::SSL_HANDSHAKE"*) local_unnamed_addr #0 {
  %2 = alloca <2 x i64>, align 16
  %3 = bitcast <2 x i64>* %2 to %"class.bssl::Array"*
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %"class.bssl::Array"*
  %6 = alloca %"class.bssl::internal::StackAllocated.120", align 8
  %7 = alloca %struct.cbb_st, align 8
  %8 = bitcast %"class.bssl::internal::StackAllocated.120"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = getelementptr inbounds %"class.bssl::internal::StackAllocated.120", %"class.bssl::internal::StackAllocated.120"* %6, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %9) #8
  %10 = bitcast %struct.cbb_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  %11 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %12 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %12, i64 0, i32 0
  %14 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %13, align 8
  %15 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %14, i64 0, i32 11
  %16 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %struct.cbb_st*, i8)** %15, align 8
  %17 = call zeroext i1 %16(%struct.ssl_st* %12, %struct.cbb_st* nonnull %9, %struct.cbb_st* nonnull %7, i8 zeroext 11) #8
  br i1 %17, label %18, label %42

18:                                               ; preds = %1
  %19 = call zeroext i1 @_ZN4bssl18ssl_add_cert_chainEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"* %0, %struct.cbb_st* nonnull %7) #8
  br i1 %19, label %20, label %42

20:                                               ; preds = %18
  %21 = load %struct.ssl_st*, %struct.ssl_st** %11, align 8
  %22 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22)
  %23 = bitcast <2 x i64>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #8
  %24 = bitcast <2 x i64>* %2 to i8**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 16, i1 false) #8
  %25 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %21, i64 0, i32 0
  %26 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %25, align 8
  %27 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %26, i64 0, i32 12
  %28 = load i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %struct.cbb_st*, %"class.bssl::Array"*)** %27, align 8
  %29 = call zeroext i1 %28(%struct.ssl_st* %21, %struct.cbb_st* nonnull %9, %"class.bssl::Array"* nonnull %3) #8
  br i1 %29, label %30, label %40

30:                                               ; preds = %20
  %31 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %25, align 8
  %32 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %31, i64 0, i32 13
  %33 = load i1 (%struct.ssl_st*, %"class.bssl::Array"*)*, i1 (%struct.ssl_st*, %"class.bssl::Array"*)** %32, align 8
  call void @OPENSSL_free(i8* null) #8
  %34 = load <2 x i64>, <2 x i64>* %2, align 16
  store <2 x i64> %34, <2 x i64>* %4, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %23, i8 0, i64 16, i1 false) #8
  %35 = call zeroext i1 %33(%struct.ssl_st* %21, %"class.bssl::Array"* nonnull %5) #8
  %36 = bitcast <2 x i64>* %4 to i8**
  %37 = load i8*, i8** %36, align 16
  call void @OPENSSL_free(i8* %37) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %22, i8 0, i64 16, i1 false) #8
  br i1 %35, label %38, label %40

38:                                               ; preds = %30
  %39 = load i8*, i8** %24, align 16
  call void @OPENSSL_free(i8* %39) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  br label %43

40:                                               ; preds = %20, %30
  %41 = load i8*, i8** %24, align 16
  call void @OPENSSL_free(i8* %41) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22)
  br label %42

42:                                               ; preds = %40, %18, %1
  call void @ERR_put_error(i32 16, i32 0, i32 68, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 563) #8
  br label %43

43:                                               ; preds = %38, %42
  %44 = phi i1 [ false, %42 ], [ true, %38 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #8
  call void @CBB_cleanup(%struct.cbb_st* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #8
  ret i1 %44
}

declare zeroext i1 @_ZN4bssl18ssl_add_cert_chainEPNS_13SSL_HANDSHAKEEP6cbb_st(%"struct.bssl::SSL_HANDSHAKE"*, %struct.cbb_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN4bssl17ssl_run_handshakeEPNS_13SSL_HANDSHAKEEPb(%"struct.bssl::SSL_HANDSHAKE"*, i8* nocapture) local_unnamed_addr #0 {
  %3 = alloca i8, align 1
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 0
  %7 = load %struct.ssl_st*, %struct.ssl_st** %6, align 8
  %8 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 24
  %10 = bitcast i64* %4 to i8*
  %11 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 8
  %12 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 0
  %13 = getelementptr inbounds %struct.ssl_st, %struct.ssl_st* %7, i64 0, i32 7
  br label %14

14:                                               ; preds = %71, %2
  %15 = load i32, i32* %8, align 8
  switch i32 %15, label %122 [
    i32 0, label %16
    i32 4, label %19
    i32 2, label %25
    i32 3, label %25
    i32 16, label %25
    i32 15, label %72
    i32 5, label %82
    i32 6, label %85
    i32 7, label %88
    i32 8, label %97
    i32 9, label %100
    i32 10, label %103
    i32 11, label %106
    i32 12, label %109
    i32 17, label %112
    i32 14, label %115
    i32 13, label %118
    i32 18, label %119
  ]

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %18 = load %struct.err_save_state_st*, %struct.err_save_state_st** %17, align 8
  call void @ERR_restore_state(%struct.err_save_state_st* %18) #8
  br label %132

19:                                               ; preds = %14
  %20 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %12, align 8
  %21 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %20, i64 0, i32 15
  %22 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %21, align 8
  %23 = call i32 %22(%struct.ssl_st* %7) #8
  %24 = icmp slt i32 %23, 1
  br i1 %24, label %132, label %122

25:                                               ; preds = %14, %14, %14
  %26 = load %struct.ssl_quic_method_st*, %struct.ssl_quic_method_st** %9, align 8
  %27 = icmp eq %struct.ssl_quic_method_st* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %30 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %29, i64 0, i32 16
  store i32 2, i32* %30, align 4
  store i32 1, i32* %8, align 8
  br label %132

31:                                               ; preds = %25
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 50, i8* %3, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #8
  store i64 0, i64* %4, align 8
  %32 = icmp eq i32 %15, 16
  %33 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %34 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 4, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 4, i32 1
  %37 = load i16, i16* %36, align 8
  %38 = zext i16 %37 to i64
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  %40 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %33, i64 0, i32 4, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = zext i16 %41 to i64
  br i1 %32, label %43, label %45

43:                                               ; preds = %31
  %44 = call i32 @_ZN4bssl27ssl_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st* %7, i64* nonnull %4, i8* nonnull %3, i8* %39, i64 %42) #8
  br label %47

45:                                               ; preds = %31
  %46 = call i32 @_ZN4bssl18ssl_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st* %7, i64* nonnull %4, i8* nonnull %3, i8* %39, i64 %42) #8
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %44, %43 ], [ %46, %45 ]
  %49 = icmp eq i32 %48, 4
  br i1 %49, label %50, label %58

50:                                               ; preds = %47
  %51 = load i32, i32* %8, align 8
  %52 = icmp eq i32 %51, 2
  br i1 %52, label %53, label %58

53:                                               ; preds = %50
  %54 = call i32 @ERR_peek_error() #8
  %55 = and i32 %54, -16773121
  %56 = icmp eq i32 %55, 268436496
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  call void @ERR_put_error(i32 16, i32 0, i32 154, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str, i64 0, i64 0), i32 633) #8
  br label %58

58:                                               ; preds = %53, %57, %50, %47
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 -86, i8* %5, align 1
  %59 = load i64, i64* %4, align 8
  %60 = load i8, i8* %3, align 1
  %61 = call i32 @_ZN4bssl22ssl_handle_open_recordEP6ssl_stPbNS_17ssl_open_record_tEmh(%struct.ssl_st* %7, i8* nonnull %5, i32 %48, i64 %59, i8 zeroext %60) #8
  %62 = icmp slt i32 %61, 1
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  br label %132

64:                                               ; preds = %58
  %65 = load i8, i8* %5, align 1, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %64
  %68 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %69 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %68, i64 0, i32 4
  call void @_ZN4bssl9SSLBuffer15DiscardConsumedEv(%"class.bssl::SSLBuffer"* %69) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  br label %122

70:                                               ; preds = %64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  br label %71

71:                                               ; preds = %70, %122
  br label %14

72:                                               ; preds = %14
  %73 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %74 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %73, i64 0, i32 34, i32 0, i32 0, i32 0
  %75 = load %"struct.bssl::SSL_HANDSHAKE"*, %"struct.bssl::SSL_HANDSHAKE"** %74, align 8
  %76 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %75, i64 0, i32 46
  %77 = load i32, i32* %76, align 8
  %78 = trunc i32 %77 to i16
  %79 = icmp slt i16 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %72
  store i8 1, i8* %1, align 1
  br label %132

81:                                               ; preds = %72
  store i32 1, i32* %8, align 8
  br label %122

82:                                               ; preds = %14
  %83 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %84 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %83, i64 0, i32 16
  store i32 12, i32* %84, align 4
  store i32 1, i32* %8, align 8
  br label %132

85:                                               ; preds = %14
  %86 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %87 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %86, i64 0, i32 16
  store i32 17, i32* %87, align 4
  store i32 1, i32* %8, align 8
  br label %132

88:                                               ; preds = %14
  %89 = load %"struct.bssl::SSL_PROTOCOL_METHOD"*, %"struct.bssl::SSL_PROTOCOL_METHOD"** %12, align 8
  %90 = getelementptr inbounds %"struct.bssl::SSL_PROTOCOL_METHOD", %"struct.bssl::SSL_PROTOCOL_METHOD"* %89, i64 0, i32 15
  %91 = load i32 (%struct.ssl_st*)*, i32 (%struct.ssl_st*)** %90, align 8
  %92 = call i32 %91(%struct.ssl_st* %7) #8
  %93 = icmp slt i32 %92, 1
  br i1 %93, label %132, label %94

94:                                               ; preds = %88
  %95 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %96 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %95, i64 0, i32 16
  store i32 18, i32* %96, align 4
  store i32 7, i32* %8, align 8
  br label %132

97:                                               ; preds = %14
  %98 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %99 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %98, i64 0, i32 16
  store i32 4, i32* %99, align 4
  store i32 1, i32* %8, align 8
  br label %132

100:                                              ; preds = %14
  %101 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %102 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %101, i64 0, i32 16
  store i32 9, i32* %102, align 4
  store i32 1, i32* %8, align 8
  br label %132

103:                                              ; preds = %14
  %104 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %105 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %104, i64 0, i32 16
  store i32 13, i32* %105, align 4
  store i32 1, i32* %8, align 8
  br label %132

106:                                              ; preds = %14
  %107 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %108 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %107, i64 0, i32 16
  store i32 11, i32* %108, align 4
  store i32 1, i32* %8, align 8
  br label %132

109:                                              ; preds = %14
  %110 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %111 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %110, i64 0, i32 16
  store i32 14, i32* %111, align 4
  store i32 1, i32* %8, align 8
  br label %132

112:                                              ; preds = %14
  %113 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %114 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %113, i64 0, i32 16
  store i32 16, i32* %114, align 4
  store i32 1, i32* %8, align 8
  br label %132

115:                                              ; preds = %14
  %116 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %117 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %116, i64 0, i32 16
  store i32 15, i32* %117, align 4
  br label %132

118:                                              ; preds = %14
  store i8 1, i8* %1, align 1
  store i32 1, i32* %8, align 8
  br label %132

119:                                              ; preds = %14
  %120 = load %"struct.bssl::SSL3_STATE"*, %"struct.bssl::SSL3_STATE"** %11, align 8
  %121 = getelementptr inbounds %"struct.bssl::SSL3_STATE", %"struct.bssl::SSL3_STATE"* %120, i64 0, i32 16
  store i32 20, i32* %121, align 4
  br label %132

122:                                              ; preds = %14, %19, %67, %81
  %123 = load i32 (%"struct.bssl::SSL_HANDSHAKE"*)*, i32 (%"struct.bssl::SSL_HANDSHAKE"*)** %13, align 8
  %124 = call i32 %123(%"struct.bssl::SSL_HANDSHAKE"* %0) #8
  store i32 %124, i32* %8, align 8
  switch i32 %124, label %71 [
    i32 0, label %125
    i32 1, label %131
  ]

125:                                              ; preds = %122
  %126 = call %struct.err_save_state_st* @ERR_save_state() #8
  %127 = getelementptr inbounds %"struct.bssl::SSL_HANDSHAKE", %"struct.bssl::SSL_HANDSHAKE"* %0, i64 0, i32 18, i32 0, i32 0, i32 0
  %128 = load %struct.err_save_state_st*, %struct.err_save_state_st** %127, align 8
  store %struct.err_save_state_st* %126, %struct.err_save_state_st** %127, align 8
  %129 = icmp eq %struct.err_save_state_st* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %125
  call void @ERR_SAVE_STATE_free(%struct.err_save_state_st* nonnull %128) #8
  br label %132

131:                                              ; preds = %122
  store i8 0, i8* %1, align 1
  br label %132

132:                                              ; preds = %19, %130, %125, %63, %94, %88, %131, %119, %118, %115, %112, %109, %106, %103, %100, %97, %85, %82, %80, %28, %16
  %133 = phi i32 [ 1, %131 ], [ -1, %119 ], [ 1, %118 ], [ -1, %115 ], [ -1, %112 ], [ -1, %109 ], [ -1, %106 ], [ -1, %103 ], [ -1, %100 ], [ -1, %97 ], [ -1, %85 ], [ -1, %82 ], [ 1, %80 ], [ -1, %28 ], [ -1, %16 ], [ -1, %94 ], [ %92, %88 ], [ %61, %63 ], [ -1, %125 ], [ -1, %130 ], [ %23, %19 ]
  ret i32 %133
}

declare void @ERR_restore_state(%struct.err_save_state_st*) local_unnamed_addr #1

declare i32 @_ZN4bssl27ssl_open_change_cipher_specEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #1

declare i32 @_ZN4bssl18ssl_open_handshakeEP6ssl_stPmPhNS_4SpanIhEE(%struct.ssl_st*, i64*, i8*, i8*, i64) local_unnamed_addr #1

declare i32 @ERR_peek_error() local_unnamed_addr #1

declare i32 @_ZN4bssl22ssl_handle_open_recordEP6ssl_stPbNS_17ssl_open_record_tEmh(%struct.ssl_st*, i8*, i32, i64, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4bssl9SSLBuffer15DiscardConsumedEv(%"class.bssl::SSLBuffer"*) local_unnamed_addr #1

declare %struct.err_save_state_st* @ERR_save_state() local_unnamed_addr #1

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #1

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #1

declare i32 @CRYPTO_BUFFER_up_ref(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #1

declare void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st*) local_unnamed_addr #1

declare void @SSL_ECH_SERVER_CONFIG_LIST_free(%struct.ssl_ech_server_config_list_st*) local_unnamed_addr #1

declare void @SSL_SESSION_free(%struct.ssl_session_st*) local_unnamed_addr #1

declare void @OPENSSL_free(i8*) local_unnamed_addr #1

declare void @EVP_HPKE_CTX_zero(%struct.evp_hpke_ctx_st*) local_unnamed_addr #1

declare void @EVP_HPKE_CTX_cleanup(%struct.evp_hpke_ctx_st*) local_unnamed_addr #1

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN4bssl8internal11DeleterImplI22stack_st_CRYPTO_BUFFERvE4FreeEPS2_ENUlPFvPvES5_E_8__invokeES7_S5_(void (i8*)*, i8*) #6 comdat align 2 {
  %3 = bitcast i8* %1 to %struct.crypto_buffer_st*
  tail call void @CRYPTO_BUFFER_free(%struct.crypto_buffer_st* %3) #8
  ret void
}

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #1

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #1

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #1

declare void @ERR_SAVE_STATE_free(%struct.err_save_state_st*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
