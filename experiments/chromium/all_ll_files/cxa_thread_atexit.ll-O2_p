; ModuleID = '../../buildtools/third_party/libc++abi/trunk/src/cxa_thread_atexit.cpp'
source_filename = "../../buildtools/third_party/libc++abi/trunk/src/cxa_thread_atexit.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.__cxxabiv1::(anonymous namespace)::DtorsManager" = type { i8 }
%"struct.__cxxabiv1::(anonymous namespace)::DtorList" = type { void (i8*)*, i8*, %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* }

$__clang_call_terminate = comdat any

@_ZZ19__cxa_thread_atexitE7manager = internal global %"struct.__cxxabiv1::(anonymous namespace)::DtorsManager" zeroinitializer, align 1
@_ZGVZ19__cxa_thread_atexitE7manager = internal global i64 0, align 8
@__dso_handle = external hidden global i8
@_ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE = internal thread_local unnamed_addr global i1 false, align 1
@_ZN10__cxxabiv112_GLOBAL__N_19dtors_keyE = internal global i32 0, align 4
@_ZN10__cxxabiv112_GLOBAL__N_15dtorsE = internal thread_local unnamed_addr global %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* null, align 8
@.str = private unnamed_addr constant [59 x i8] c"std::__libcpp_tls_create() failed in __cxa_thread_atexit()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @__cxa_thread_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  br i1 icmp ne (i32 (void (i8*)*, i8*, i8*)* @__cxa_thread_atexit_impl, i32 (void (i8*)*, i8*, i8*)* null), label %4, label %9

4:                                                ; preds = %3
  %5 = invoke i32 @__cxa_thread_atexit_impl(void (i8*)* %0, i8* %1, i8* %2)
          to label %44 unwind label %6

6:                                                ; preds = %4
  %7 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer
  %8 = extractvalue { i8*, i32 } %7, 0
  br label %31

9:                                                ; preds = %3
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZ19__cxa_thread_atexitE7manager to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %22, !prof !2

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZ19__cxa_thread_atexitE7manager) #8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @pthread_key_create(i32* nonnull @_ZN10__cxxabiv112_GLOBAL__N_19dtors_keyE, void (i8*)* nonnull @_ZN10__cxxabiv112_GLOBAL__N_19run_dtorsEPv) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %15
  invoke void (i8*, ...) @abort_message(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0)) #9
          to label %19 unwind label %28

19:                                               ; preds = %18
  unreachable

20:                                               ; preds = %15
  %21 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"struct.__cxxabiv1::(anonymous namespace)::DtorsManager"*)* @_ZN10__cxxabiv112_GLOBAL__N_112DtorsManagerD2Ev to void (i8*)*), i8* getelementptr inbounds (%"struct.__cxxabiv1::(anonymous namespace)::DtorsManager", %"struct.__cxxabiv1::(anonymous namespace)::DtorsManager"* @_ZZ19__cxa_thread_atexitE7manager, i64 0, i32 0), i8* nonnull @__dso_handle) #8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZ19__cxa_thread_atexitE7manager) #8
  br label %22

22:                                               ; preds = %12, %20, %9
  %23 = load i1, i1* @_ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE, align 1
  br i1 %23, label %34, label %24

24:                                               ; preds = %22
  %25 = load i32, i32* @_ZN10__cxxabiv112_GLOBAL__N_19dtors_keyE, align 4, !tbaa !3
  %26 = tail call i32 @pthread_setspecific(i32 %25, i8* bitcast (i32* @_ZN10__cxxabiv112_GLOBAL__N_19dtors_keyE to i8*)) #8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %44

28:                                               ; preds = %18
  %29 = landingpad { i8*, i32 }
          filter [0 x i8*] zeroinitializer
  %30 = extractvalue { i8*, i32 } %29, 0
  tail call void @__cxa_guard_abort(i64* nonnull @_ZGVZ19__cxa_thread_atexitE7manager) #8
  br label %31

31:                                               ; preds = %28, %6
  %32 = phi i8* [ %8, %6 ], [ %30, %28 ]
  tail call void @__cxa_call_unexpected(i8* %32) #10
  unreachable

33:                                               ; preds = %24
  store i1 true, i1* @_ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE, align 1
  br label %34

34:                                               ; preds = %33, %22
  %35 = tail call noalias i8* @malloc(i64 24) #8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %44, label %37

37:                                               ; preds = %34
  %38 = bitcast i8* %35 to void (i8*)**
  store void (i8*)* %0, void (i8*)** %38, align 8, !tbaa !7
  %39 = getelementptr inbounds i8, i8* %35, i64 8
  %40 = bitcast i8* %39 to i8**
  store i8* %1, i8** %40, align 8, !tbaa !10
  %41 = load i64, i64* bitcast (%"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE to i64*), align 8, !tbaa !11
  %42 = getelementptr inbounds i8, i8* %35, i64 16
  %43 = bitcast i8* %42 to i64*
  store i64 %41, i64* %43, align 8, !tbaa !12
  store i8* %35, i8** bitcast (%"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE to i8**), align 8, !tbaa !11
  br label %44

44:                                               ; preds = %37, %34, %24, %4
  %45 = phi i32 [ %5, %4 ], [ -1, %24 ], [ 0, %37 ], [ -1, %34 ]
  ret i32 %45
}

declare extern_weak i32 @__cxa_thread_atexit_impl(void (i8*)*, i8*, i8*) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN10__cxxabiv112_GLOBAL__N_112DtorsManagerD2Ev(%"struct.__cxxabiv1::(anonymous namespace)::DtorsManager"* nocapture readnone) unnamed_addr #0 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load %"struct.__cxxabiv1::(anonymous namespace)::DtorList"*, %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE, align 8, !tbaa !11
  %3 = icmp eq %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %2, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %1, %13
  %5 = phi %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* [ %15, %13 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 2
  %7 = bitcast %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !12
  store i64 %8, i64* bitcast (%"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE to i64*), align 8, !tbaa !11
  %9 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 0
  %10 = load void (i8*)*, void (i8*)** %9, align 8, !tbaa !7
  %11 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8, !tbaa !10
  invoke void %10(i8* %12)
          to label %13 unwind label %18

13:                                               ; preds = %4
  %14 = bitcast %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5 to i8*
  tail call void @free(i8* %14) #8
  %15 = load %"struct.__cxxabiv1::(anonymous namespace)::DtorList"*, %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE, align 8, !tbaa !11
  %16 = icmp eq %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %15, null
  br i1 %16, label %17, label %4

17:                                               ; preds = %13, %1
  store i1 false, i1* @_ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE, align 1
  ret void

18:                                               ; preds = %4
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  tail call void @__clang_call_terminate(i8* %20) #10
  unreachable
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare void @__cxa_call_unexpected(i8*) local_unnamed_addr

; Function Attrs: ssp uwtable
define internal void @_ZN10__cxxabiv112_GLOBAL__N_19run_dtorsEPv(i8* nocapture readnone) #4 {
  %2 = load %"struct.__cxxabiv1::(anonymous namespace)::DtorList"*, %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE, align 8, !tbaa !11
  %3 = icmp eq %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1, %4
  %5 = phi %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* [ %14, %4 ], [ %2, %1 ]
  %6 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 2
  %7 = bitcast %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** %6 to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !12
  store i64 %8, i64* bitcast (%"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE to i64*), align 8, !tbaa !11
  %9 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 0
  %10 = load void (i8*)*, void (i8*)** %9, align 8, !tbaa !7
  %11 = getelementptr inbounds %"struct.__cxxabiv1::(anonymous namespace)::DtorList", %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8, !tbaa !10
  tail call void %10(i8* %12)
  %13 = bitcast %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %5 to i8*
  tail call void @free(i8* %13) #8
  %14 = load %"struct.__cxxabiv1::(anonymous namespace)::DtorList"*, %"struct.__cxxabiv1::(anonymous namespace)::DtorList"** @_ZN10__cxxabiv112_GLOBAL__N_15dtorsE, align 8, !tbaa !11
  %15 = icmp eq %"struct.__cxxabiv1::(anonymous namespace)::DtorList"* %14, null
  br i1 %15, label %16, label %4

16:                                               ; preds = %4, %1
  store i1 false, i1* @_ZN10__cxxabiv112_GLOBAL__N_111dtors_aliveE, align 1
  ret void
}

; Function Attrs: noreturn
declare void @abort_message(i8*, ...) local_unnamed_addr #5

; Function Attrs: nounwind
declare i32 @pthread_key_create(i32*, void (i8*)*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #6

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) local_unnamed_addr #7 comdat {
  %2 = tail call i8* @__cxa_begin_catch(i8* %0) #8
  tail call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: nounwind
declare i32 @pthread_setspecific(i32, i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nounwind }
attributes #9 = { noreturn }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4, !4, i64 0}
!4 = !{!"int", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C++ TBAA"}
!7 = !{!8, !9, i64 0}
!8 = !{!"_ZTSN10__cxxabiv112_GLOBAL__N_18DtorListE", !9, i64 0, !9, i64 8, !9, i64 16}
!9 = !{!"any pointer", !5, i64 0}
!10 = !{!8, !9, i64 8}
!11 = !{!9, !9, i64 0}
!12 = !{!8, !9, i64 16}
