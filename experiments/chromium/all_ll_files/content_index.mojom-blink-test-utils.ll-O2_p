; ModuleID = 'gen/third_party/blink/public/mojom/content_index/content_index.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/content_index/content_index.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter" = type { %"class.blink::mojom::blink::ContentIndexService"* }
%"class.blink::mojom::blink::ContentIndexService" = type { i32 (...)** }
%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting" = type { %"class.blink::mojom::blink::ContentIndexService" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.1 }
%class.scoped_refptr.1 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.base::OnceCallback.8" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::mojom::blink::ContentDescription"* }
%"class.blink::mojom::blink::ContentDescription" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.WTF::Vector.19", %"class.WTF::String" }
%"class.WTF::Vector.19" = type { %"class.WTF::VectorBuffer.20" }
%"class.WTF::VectorBuffer.20" = type { %"class.WTF::VectorBufferBase.21" }
%"class.WTF::VectorBufferBase.21" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::ContentIconDefinition", i32, [4 x i8] }>
%"class.blink::mojom::blink::ContentIconDefinition" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %class.SkBitmap*, i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.15 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.9, i32, i32 }
%class.sk_sp.9 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.15 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::OnceCallback.27" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.28" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::Vector.29" = type { %"class.WTF::VectorBuffer.30" }
%"class.WTF::VectorBuffer.30" = type { %"class.WTF::VectorBufferBase.31" }
%"class.WTF::VectorBufferBase.31" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.44, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.37", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.39" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.44 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.45" }>
%"class.base::RefCountedThreadSafe.45" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.46 }
%class.scoped_refptr.46 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.47", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.10" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink5mojom5blink19ContentIndexServiceD2Ev = comdat any

$_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTestingD0Ev = comdat any

$_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEEaSERKS4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm = comdat any

@.str = private unnamed_addr constant [13 x i8] c"GetIconSizes\00", align 1
@.str.1 = private unnamed_addr constant [89 x i8] c"gen/third_party/blink/public/mojom/content_index/content_index.mojom-blink-test-utils.cc\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"CheckOfflineCapability\00", align 1
@.str.3 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"Delete\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"GetDescriptions\00", align 1
@_ZTVN5blink5mojom5blink40ContentIndexServiceInterceptorForTestingE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexService"*)* @_ZN5blink5mojom5blink19ContentIndexServiceD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i32, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting12GetIconSizesENS0_15ContentCategoryEN4base12OnceCallbackIFvRKN3WTF6VectorIN3gfx4SizeELj0ENS6_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting22CheckOfflineCapabilityElRKNS_4KURLEN4base12OnceCallbackIFvbEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting3AddElN4mojo9StructPtrINS1_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENS7_18PartitionAllocatorEEERKNS_4KURLEN4base12OnceCallbackIFvNS0_17ContentIndexErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting6DeleteElRKN3WTF6StringEN4base12OnceCallbackIFvNS0_17ContentIndexErrorEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.base::OnceCallback.28"*)* @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting15GetDescriptionsElN4base12OnceCallbackIFvNS0_17ContentIndexErrorEN3WTF6VectorIN4mojo9StructPtrINS1_18ContentDescriptionEEELj0ENS6_18PartitionAllocatorEEEEEE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv = private unnamed_addr constant [57 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::Size]\00", align 1

@_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterC1EPNS1_19ContentIndexServiceE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"*, %"class.blink::mojom::blink::ContentIndexService"*), void (%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"*, %"class.blink::mojom::blink::ContentIndexService"*)* @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterC2EPNS1_19ContentIndexServiceE
@_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"*), void (%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"*)* @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting12GetIconSizesENS0_15ContentCategoryEN4base12OnceCallbackIFvRKN3WTF6VectorIN3gfx4SizeELj0ENS6_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ContentIndexService"* %8(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %9 to void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)***
  %15 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)** %15, i64 2
  %17 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ContentIndexService"* %9, i32 %1, %"class.base::OnceCallback"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting22CheckOfflineCapabilityElRKNS_4KURLEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.blink::KURL"* dereferenceable(112), %"class.base::OnceCallback.8"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.8", align 8
  %6 = bitcast %"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ContentIndexService"* %9(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.8"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.8"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %10 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)***
  %16 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ContentIndexService"* %10, i64 %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.base::OnceCallback.8"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting3AddElN4mojo9StructPtrINS1_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENS7_18PartitionAllocatorEEERKNS_4KURLEN4base12OnceCallbackIFvNS0_17ContentIndexErrorEEEE(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.mojo::StructPtr"* nocapture, %"class.WTF::Vector"* dereferenceable(16), %"class.blink::KURL"* dereferenceable(112), %"class.base::OnceCallback.27"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo::StructPtr", align 8
  %8 = alloca %"class.base::OnceCallback.27", align 8
  %9 = bitcast %"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)***
  %10 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %10, i64 7
  %12 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %11, align 8
  %13 = tail call %"class.blink::mojom::blink::ContentIndexService"* %12(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0) #10
  %14 = bitcast %"class.mojo::StructPtr"* %7 to i64*
  %15 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %17 = load i64, i64* %16, align 8
  store i64 %17, i64* %14, align 8
  store i64 0, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %5, i64 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.base::OnceCallback.27"* %5 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.base::OnceCallback.27"* %8 to i64*
  store i64 %20, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %18, align 8
  %22 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %13 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)***
  %23 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)** %23, i64 4
  %25 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)** %24, align 8
  call void %25(%"class.blink::mojom::blink::ContentIndexService"* %13, i64 %1, %"class.mojo::StructPtr"* nonnull %7, %"class.WTF::Vector"* dereferenceable(16) %3, %"class.blink::KURL"* dereferenceable(112) %4, %"class.base::OnceCallback.27"* nonnull %8) #10
  %26 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #10
  %27 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %15, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %15, align 8
  %28 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %27) #10
  %30 = bitcast %"class.blink::mojom::blink::ContentDescription"* %27 to i8*
  call void @_ZdlPv(i8* %30) #11
  br label %31

31:                                               ; preds = %6, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting6DeleteElRKN3WTF6StringEN4base12OnceCallbackIFvNS0_17ContentIndexErrorEEEE(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.27"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback.27", align 8
  %6 = bitcast %"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %7, i64 7
  %9 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::ContentIndexService"* %9(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.27"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.27"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %10 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)***
  %16 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)** %16, i64 5
  %18 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::ContentIndexService"* %10, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback.27"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTesting15GetDescriptionsElN4base12OnceCallbackIFvNS0_17ContentIndexErrorEN3WTF6VectorIN4mojo9StructPtrINS1_18ContentDescriptionEEELj0ENS6_18PartitionAllocatorEEEEEE(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*, i64, %"class.base::OnceCallback.28"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback.28", align 8
  %5 = bitcast %"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0 to %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)***
  %6 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)**, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %6, i64 7
  %8 = load %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)*, %"class.blink::mojom::blink::ContentIndexService"* (%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*)** %7, align 8
  %9 = tail call %"class.blink::mojom::blink::ContentIndexService"* %8(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"* %0) #10
  %10 = getelementptr inbounds %"class.base::OnceCallback.28", %"class.base::OnceCallback.28"* %2, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.base::OnceCallback.28"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.base::OnceCallback.28"* %4 to i64*
  store i64 %12, i64* %13, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %14 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %9 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)***
  %15 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)** %15, i64 6
  %17 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)** %16, align 8
  call void %17(%"class.blink::mojom::blink::ContentIndexService"* %9, i64 %1, %"class.base::OnceCallback.28"* nonnull %4) #10
  %18 = getelementptr inbounds %"class.base::OnceCallback.28", %"class.base::OnceCallback.28"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %18) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterC2EPNS1_19ContentIndexServiceE(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture, %"class.blink::mojom::blink::ContentIndexService"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::ContentIndexService"* %1, %"class.blink::mojom::blink::ContentIndexService"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiterD2Ev(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS0_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS4_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture readonly, i32, %"class.WTF::Vector.29"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::RunLoop", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = ptrtoint %"class.WTF::Vector.29"* %2 to i64
  %8 = bitcast %"class.base::RunLoop"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %4, i32 0) #10
  %9 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  %10 = load %"class.blink::mojom::blink::ContentIndexService"*, %"class.blink::mojom::blink::ContentIndexService"** %9, align 8
  %11 = ptrtoint %"class.base::RunLoop"* %4 to i64
  %12 = call i8* @_Znwm(i64 56) #11, !noalias !2
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.29"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS4_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS8_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESE_EEEFvRKSD_EE7RunOnceEPNS0_13BindStateBaseESK_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS3_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %14 = getelementptr inbounds i8, i8* %12, i64 40
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8, !noalias !2
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %7, i64* %17, align 8, !noalias !2
  %18 = bitcast %"class.base::OnceCallback"* %5 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !2
  %19 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %10 to void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)***
  %20 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)** %20, i64 2
  %22 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i32, %"class.base::OnceCallback"*)** %21, align 8
  call void %22(%"class.blink::mojom::blink::ContentIndexService"* %10, i32 %1, %"class.base::OnceCallback"* nonnull %5) #10
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #10
  %24 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 69) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %4, %"class.base::Location"* nonnull dereferenceable(32) %6) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #5

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS_4KURLEPb(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture readonly, i64, %"class.blink::KURL"* dereferenceable(112), i8*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.8", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i8* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::ContentIndexService"*, %"class.blink::mojom::blink::ContentIndexService"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !7
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS3_4KURLEPbE3$_1JPNS_7RunLoopESA_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS2_4KURLEPbE3$_1JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !7
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !7
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !7
  %19 = bitcast %"class.base::OnceCallback.8"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !7
  %20 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %11 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)***
  %21 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)** %21, i64 3
  %23 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.blink::KURL"*, %"class.base::OnceCallback.8"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::ContentIndexService"* %11, i64 %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.base::OnceCallback.8"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback.8", %"class.base::OnceCallback.8"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 84) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS1_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENS7_18PartitionAllocatorEEERKNS_4KURLEPNS0_17ContentIndexErrorE(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture readonly, i64, %"class.mojo::StructPtr"* nocapture, %"class.WTF::Vector"* dereferenceable(16), %"class.blink::KURL"* dereferenceable(112), i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::RunLoop", align 8
  %8 = alloca %"class.mojo::StructPtr", align 8
  %9 = alloca %"class.base::OnceCallback.27", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = ptrtoint i32* %5 to i64
  %12 = bitcast %"class.base::RunLoop"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %7, i32 0) #10
  %13 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  %14 = load %"class.blink::mojom::blink::ContentIndexService"*, %"class.blink::mojom::blink::ContentIndexService"** %13, align 8
  %15 = bitcast %"class.mojo::StructPtr"* %8 to i64*
  %16 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store i64 %18, i64* %15, align 8
  store i64 0, i64* %17, align 8
  %19 = ptrtoint %"class.base::RunLoop"* %7 to i64
  %20 = call i8* @_Znwm(i64 56) #11, !noalias !12
  %21 = bitcast i8* %20 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %21, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS5_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEERKNS3_4KURLEPNS4_17ContentIndexErrorEE3$_2JPNS_7RunLoopESM_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseESL_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS4_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSA_18PartitionAllocatorEEERKNS2_4KURLEPNS3_17ContentIndexErrorEE3$_2JPNS_7RunLoopESL_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !12
  %22 = getelementptr inbounds i8, i8* %20, i64 40
  %23 = bitcast i8* %22 to i64*
  store i64 %19, i64* %23, align 8, !noalias !12
  %24 = getelementptr inbounds i8, i8* %20, i64 48
  %25 = bitcast i8* %24 to i64*
  store i64 %11, i64* %25, align 8, !noalias !12
  %26 = bitcast %"class.base::OnceCallback.27"* %9 to i8**
  store i8* %20, i8** %26, align 8, !alias.scope !12
  %27 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %14 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)***
  %28 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)** %28, i64 4
  %30 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.mojo::StructPtr"*, %"class.WTF::Vector"*, %"class.blink::KURL"*, %"class.base::OnceCallback.27"*)** %29, align 8
  call void %30(%"class.blink::mojom::blink::ContentIndexService"* %14, i64 %1, %"class.mojo::StructPtr"* nonnull %8, %"class.WTF::Vector"* dereferenceable(16) %3, %"class.blink::KURL"* dereferenceable(112) %4, %"class.base::OnceCallback.27"* nonnull %9) #10
  %31 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %9, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %31) #10
  %32 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %16, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %16, align 8
  %33 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %6
  call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %32) #10
  %35 = bitcast %"class.blink::mojom::blink::ContentDescription"* %32 to i8*
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %6, %34
  %37 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 99) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %7, %"class.base::Location"* nonnull dereferenceable(32) %10) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS0_17ContentIndexErrorE(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture readonly, i64, %"class.WTF::String"* dereferenceable(8), i32*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.27", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %3 to i64
  %9 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %10 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  %11 = load %"class.blink::mojom::blink::ContentIndexService"*, %"class.blink::mojom::blink::ContentIndexService"** %10, align 8
  %12 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %13 = call i8* @_Znwm(i64 56) #11, !noalias !17
  %14 = bitcast i8* %13 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %14, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS4_17ContentIndexErrorEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS3_17ContentIndexErrorEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !17
  %15 = getelementptr inbounds i8, i8* %13, i64 40
  %16 = bitcast i8* %15 to i64*
  store i64 %12, i64* %16, align 8, !noalias !17
  %17 = getelementptr inbounds i8, i8* %13, i64 48
  %18 = bitcast i8* %17 to i64*
  store i64 %8, i64* %18, align 8, !noalias !17
  %19 = bitcast %"class.base::OnceCallback.27"* %6 to i8**
  store i8* %13, i8** %19, align 8, !alias.scope !17
  %20 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %11 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)***
  %21 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)** %21, i64 5
  %23 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.WTF::String"*, %"class.base::OnceCallback.27"*)** %22, align 8
  call void %23(%"class.blink::mojom::blink::ContentIndexService"* %11, i64 %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.base::OnceCallback.27"* nonnull %6) #10
  %24 = getelementptr inbounds %"class.base::OnceCallback.27", %"class.base::OnceCallback.27"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %24) #10
  %25 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 114) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS0_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS1_18ContentDescriptionEEELj0ENS5_18PartitionAllocatorEEE(%"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* nocapture readonly, i64, i32*, %"class.WTF::Vector.54"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RunLoop", align 8
  %6 = alloca %"class.base::OnceCallback.28", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = ptrtoint i32* %2 to i64
  %9 = ptrtoint %"class.WTF::Vector.54"* %3 to i64
  %10 = bitcast %"class.base::RunLoop"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %10) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %5, i32 0) #10
  %11 = getelementptr inbounds %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter", %"class.blink::mojom::blink::ContentIndexServiceAsyncWaiter"* %0, i64 0, i32 0
  %12 = load %"class.blink::mojom::blink::ContentIndexService"*, %"class.blink::mojom::blink::ContentIndexService"** %11, align 8
  %13 = ptrtoint %"class.base::RunLoop"* %5 to i64
  %14 = call i8* @_Znwm(i64 64) #11, !noalias !22
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.WTF::Vector.54"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS4_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS5_18ContentDescriptionEEELj0ENS9_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopES8_SH_EEEFvS7_SG_EE7RunOnceEPNS0_13BindStateBaseES7_OSG_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS3_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS4_18ContentDescriptionEEELj0ENS8_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopES7_SG_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !22
  %16 = getelementptr inbounds i8, i8* %14, i64 40
  %17 = bitcast i8* %16 to i64*
  store i64 %13, i64* %17, align 8, !noalias !22
  %18 = getelementptr inbounds i8, i8* %14, i64 48
  %19 = bitcast i8* %18 to i64*
  store i64 %8, i64* %19, align 8, !noalias !22
  %20 = getelementptr inbounds i8, i8* %14, i64 56
  %21 = bitcast i8* %20 to i64*
  store i64 %9, i64* %21, align 8, !noalias !22
  %22 = bitcast %"class.base::OnceCallback.28"* %6 to i8**
  store i8* %14, i8** %22, align 8, !alias.scope !22
  %23 = bitcast %"class.blink::mojom::blink::ContentIndexService"* %12 to void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)***
  %24 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)**, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)** %24, i64 6
  %26 = load void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)*, void (%"class.blink::mojom::blink::ContentIndexService"*, i64, %"class.base::OnceCallback.28"*)** %25, align 8
  call void %26(%"class.blink::mojom::blink::ContentIndexService"* %12, i64 %1, %"class.base::OnceCallback.28"* nonnull %6) #10
  %27 = getelementptr inbounds %"class.base::OnceCallback.28", %"class.base::OnceCallback.28"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #10
  %28 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.1, i64 0, i64 0), i32 133) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %5, %"class.base::Location"* nonnull dereferenceable(32) %7) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %28) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %10) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink19ContentIndexServiceD2Ev(%"class.blink::mojom::blink::ContentIndexService"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink40ContentIndexServiceInterceptorForTestingD0Ev(%"class.blink::mojom::blink::ContentIndexServiceInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS4_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS8_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESE_EEEFvRKSD_EE7RunOnceEPNS0_13BindStateBaseESK_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.29"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to %"class.WTF::Vector.29"**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load %"class.WTF::Vector.29"*, %"class.WTF::Vector.29"** %6, align 8
  %9 = tail call dereferenceable(16) %"class.WTF::Vector.29"* @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.29"* %8, %"class.WTF::Vector.29"* dereferenceable(16) %1) #10
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.29"* @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEEaSERKS4_(%"class.WTF::Vector.29"*, %"class.WTF::Vector.29"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.29"* %1, %0
  br i1 %3, label %90, label %4, !prof !27

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.29"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #10
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !28

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.gfx::Size"*, %"class.gfx::Size"** %31, align 8
  %33 = icmp eq %"class.gfx::Size"* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %34) #10
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #10
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 3
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 3
  %44 = ptrtoint i8* %36 to i64
  %45 = load %"class.gfx::Size"*, %"class.gfx::Size"** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne %"class.gfx::Size"* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast %"class.gfx::Size"* %45 to i8*
  br i1 %48, label %50, label %56, !prof !28

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #10
  %54 = bitcast %"class.WTF::Vector.29"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #10
  %58 = bitcast %"class.WTF::Vector.29"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.29"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.29", %"class.WTF::Vector.29"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.29"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #10
  %70 = load %"class.gfx::Size"*, %"class.gfx::Size"** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %70, i64 %72
  %74 = load %"class.gfx::Size"*, %"class.gfx::Size"** %66, align 8
  %75 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %74, i64 %72
  %76 = icmp ne %"class.gfx::Size"* %75, null
  %77 = icmp ne %"class.gfx::Size"* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !28

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %70, i64 %81
  %83 = bitcast %"class.gfx::Size"* %75 to i8*
  %84 = bitcast %"class.gfx::Size"* %73 to i8*
  %85 = ptrtoint %"class.gfx::Size"* %82 to i64
  %86 = ptrtoint %"class.gfx::Size"* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #10
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.29"* %0
}

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #5

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #1

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #5

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #5

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS3_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS7_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopESD_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS3_4KURLEPbE3$_1JPNS_7RunLoopESA_EEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"* nocapture readonly, i1 zeroext) #0 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i8**
  %8 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %9 = load i8*, i8** %7, align 8
  store i8 %3, i8* %9, align 1
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %8) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS2_4KURLEPbE3$_1JPNS_7RunLoopES9_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS5_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEERKNS3_4KURLEPNS4_17ContentIndexErrorEE3$_2JPNS_7RunLoopESM_EEEFvSL_EE7RunOnceEPNS0_13BindStateBaseESL_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS4_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSA_18PartitionAllocatorEEERKNS2_4KURLEPNS3_17ContentIndexErrorEE3$_2JPNS_7RunLoopESL_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS4_17ContentIndexErrorEE3$_3JPNS_7RunLoopESC_EEEFvSB_EE7RunOnceEPNS0_13BindStateBaseESB_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %4 = bitcast void ()** %3 to %"class.base::RunLoop"**
  %5 = getelementptr inbounds void ()*, void ()** %3, i64 1
  %6 = bitcast void ()** %5 to i32**
  %7 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %4, align 8
  %8 = load i32*, i32** %6, align 8
  store i32 %1, i32* %8, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS3_17ContentIndexErrorEE3$_3JPNS_7RunLoopESB_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS4_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS5_18ContentDescriptionEEELj0ENS9_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopES8_SH_EEEFvS7_SG_EE7RunOnceEPNS0_13BindStateBaseES7_OSG_"(%"class.base::internal::BindStateBase"* nocapture readonly, i32, %"class.WTF::Vector.54"* nocapture dereferenceable(16)) #0 align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::RunLoop"**
  %6 = getelementptr inbounds void ()*, void ()** %4, i64 1
  %7 = bitcast void ()** %6 to i32**
  %8 = getelementptr inbounds void ()*, void ()** %4, i64 2
  %9 = bitcast void ()** %8 to %"class.WTF::Vector.54"**
  %10 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %5, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = load %"class.WTF::Vector.54"*, %"class.WTF::Vector.54"** %9, align 8
  %13 = bitcast %"class.WTF::Vector.54"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  store i32 0, i32* %15, align 4
  %17 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %2, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  store i32 0, i32* %17, align 4
  store i32 %1, i32* %11, align 4
  %19 = bitcast %"class.WTF::Vector.54"* %12 to i64*
  %20 = load i64, i64* %19, align 8
  store atomic i64 %14, i64* %19 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %12, i64 0, i32 0, i32 0, i32 1
  store i32 %16, i32* %21, align 4
  %22 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %12, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  store i32 %18, i32* %22, align 4
  tail call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %10) #10
  %24 = inttoptr i64 %20 to %"class.mojo::StructPtr"*
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %43, label %26, !prof !28

26:                                               ; preds = %3
  %27 = icmp eq i32 %23, 0
  br i1 %27, label %41, label %28, !prof !27

28:                                               ; preds = %26
  %29 = zext i32 %23 to i64
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %24, i64 %29
  br label %31

31:                                               ; preds = %38, %28
  %32 = phi %"class.mojo::StructPtr"* [ %39, %38 ], [ %24, %28 ]
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %33, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %33, align 8
  %35 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %34, null
  br i1 %35, label %38, label %36

36:                                               ; preds = %31
  tail call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %34) #10
  %37 = bitcast %"class.blink::mojom::blink::ContentDescription"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #11
  br label %38

38:                                               ; preds = %36, %31
  %39 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %32, i64 1
  %40 = icmp eq %"class.mojo::StructPtr"* %39, %30
  br i1 %40, label %41, label %31

41:                                               ; preds = %38, %26
  %42 = inttoptr i64 %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %42) #10
  br label %43

43:                                               ; preds = %3, %41
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS3_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS4_18ContentDescriptionEEELj0ENS8_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopES7_SG_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS4_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS8_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS4_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS8_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSE_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS2_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter12GetIconSizesENS2_15ContentCategoryEPN3WTF6VectorIN3gfx4SizeELj0ENS6_18PartitionAllocatorEEEE3$_0JPNS_7RunLoopERSC_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSK_DpOSL_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS3_4KURLEPbE3$_1JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS3_4KURLEPbE3$_1JPNS_7RunLoopERSA_EEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS1_4KURLEPbE3$_1JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_: argument 0"}
!11 = distinct !{!11, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter22CheckOfflineCapabilityElRKNS1_4KURLEPbE3$_1JPNS_7RunLoopERS8_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSG_DpOSH_"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS5_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEERKNS3_4KURLEPNS4_17ContentIndexErrorEE3$_2JPNS_7RunLoopERSM_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS5_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEERKNS3_4KURLEPNS4_17ContentIndexErrorEE3$_2JPNS_7RunLoopERSM_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS3_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENS9_18PartitionAllocatorEEERKNS1_4KURLEPNS2_17ContentIndexErrorEE3$_2JPNS_7RunLoopERSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter3AddElN4mojo9StructPtrINS3_18ContentDescriptionEEERKN3WTF6VectorI8SkBitmapLj0ENS9_18PartitionAllocatorEEERKNS1_4KURLEPNS2_17ContentIndexErrorEE3$_2JPNS_7RunLoopERSK_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS4_17ContentIndexErrorEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_: argument 0"}
!19 = distinct !{!19, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS4_17ContentIndexErrorEE3$_3JPNS_7RunLoopERSC_EEEDcOT0_DpOT1_"}
!20 = distinct !{!20, !21, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS2_17ContentIndexErrorEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter6DeleteElRKN3WTF6StringEPNS2_17ContentIndexErrorEE3$_3JPNS_7RunLoopERSA_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSI_DpOSJ_"}
!22 = !{!23, !25}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS4_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS5_18ContentDescriptionEEELj0ENS9_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopERS8_RSH_EEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS4_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS5_18ContentDescriptionEEELj0ENS9_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopERS8_RSH_EEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS2_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS3_18ContentDescriptionEEELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopERS6_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink5mojom5blink30ContentIndexServiceAsyncWaiter15GetDescriptionsElPNS2_17ContentIndexErrorEPN3WTF6VectorIN4mojo9StructPtrINS3_18ContentDescriptionEEELj0ENS7_18PartitionAllocatorEEEE3$_4JPNS_7RunLoopERS6_RSF_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSO_DpOSP_"}
!27 = !{!"branch_weights", i32 1, i32 2000}
!28 = !{!"branch_weights", i32 2000, i32 1}
