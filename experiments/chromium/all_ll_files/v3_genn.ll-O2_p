; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_genn.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_genn.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.otherName_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.ASN1_VALUE_st = type opaque
%struct.EDIPartyName_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.GENERAL_NAME_st = type { i32, %union.anon.0 }
%union.anon.0 = type { i8* }
%struct.stack_st_GENERAL_NAME = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }

@OTHERNAME_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 0, i64 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }, %struct.ASN1_TEMPLATE_st { i64 144, i64 0, i64 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_ANY_it }], align 16
@.str = private unnamed_addr constant [10 x i8] c"OTHERNAME\00", align 1
@OTHERNAME_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @OTHERNAME_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i32 0, i32 0) }, align 8
@EDIPARTYNAME_seq_tt = internal constant [2 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 145, i64 0, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.6, i32 0, i32 0), %struct.ASN1_ITEM_st* @DIRECTORYSTRING_it }, %struct.ASN1_TEMPLATE_st { i64 144, i64 1, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0), %struct.ASN1_ITEM_st* @DIRECTORYSTRING_it }], align 16
@.str.1 = private unnamed_addr constant [13 x i8] c"EDIPARTYNAME\00", align 1
@EDIPARTYNAME_it = hidden constant %struct.ASN1_ITEM_st { i8 1, i64 16, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([2 x %struct.ASN1_TEMPLATE_st], [2 x %struct.ASN1_TEMPLATE_st]* @EDIPARTYNAME_seq_tt, i32 0, i32 0), i64 2, i8* null, i64 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i32 0, i32 0) }, align 8
@GENERAL_NAME_ch_tt = internal constant [9 x %struct.ASN1_TEMPLATE_st] [%struct.ASN1_TEMPLATE_st { i64 136, i64 0, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i32 0, i32 0), %struct.ASN1_ITEM_st* @OTHERNAME_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 1, i64 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.9, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_IA5STRING_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 2, i64 8, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_IA5STRING_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 3, i64 8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.11, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_SEQUENCE_it }, %struct.ASN1_TEMPLATE_st { i64 144, i64 4, i64 8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.12, i32 0, i32 0), %struct.ASN1_ITEM_st* @X509_NAME_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 5, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i32 0, i32 0), %struct.ASN1_ITEM_st* @EDIPARTYNAME_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 6, i64 8, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_IA5STRING_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 7, i64 8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OCTET_STRING_it }, %struct.ASN1_TEMPLATE_st { i64 136, i64 8, i64 8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), %struct.ASN1_ITEM_st* @ASN1_OBJECT_it }], align 16
@.str.2 = private unnamed_addr constant [13 x i8] c"GENERAL_NAME\00", align 1
@GENERAL_NAME_it = hidden constant %struct.ASN1_ITEM_st { i8 2, i64 0, %struct.ASN1_TEMPLATE_st* getelementptr inbounds ([9 x %struct.ASN1_TEMPLATE_st], [9 x %struct.ASN1_TEMPLATE_st]* @GENERAL_NAME_ch_tt, i32 0, i32 0), i64 9, i8* null, i64 16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i32 0, i32 0) }, align 8
@GENERAL_NAMES_item_tt = internal constant %struct.ASN1_TEMPLATE_st { i64 4, i64 0, i64 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i32 0, i32 0), %struct.ASN1_ITEM_st* @GENERAL_NAME_it }, align 8
@.str.3 = private unnamed_addr constant [14 x i8] c"GENERAL_NAMES\00", align 1
@GENERAL_NAMES_it = hidden constant %struct.ASN1_ITEM_st { i8 0, i64 -1, %struct.ASN1_TEMPLATE_st* @GENERAL_NAMES_item_tt, i64 0, i8* null, i64 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i32 0, i32 0) }, align 8
@.str.4 = private unnamed_addr constant [8 x i8] c"type_id\00", align 1
@ASN1_OBJECT_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.5 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@ASN1_ANY_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.6 = private unnamed_addr constant [13 x i8] c"nameAssigner\00", align 1
@DIRECTORYSTRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"partyName\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"d.otherName\00", align 1
@.str.9 = private unnamed_addr constant [13 x i8] c"d.rfc822Name\00", align 1
@ASN1_IA5STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.10 = private unnamed_addr constant [10 x i8] c"d.dNSName\00", align 1
@.str.11 = private unnamed_addr constant [14 x i8] c"d.x400Address\00", align 1
@ASN1_SEQUENCE_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.12 = private unnamed_addr constant [16 x i8] c"d.directoryName\00", align 1
@X509_NAME_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.13 = private unnamed_addr constant [15 x i8] c"d.ediPartyName\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"d.uniformResourceIdentifier\00", align 1
@.str.15 = private unnamed_addr constant [12 x i8] c"d.iPAddress\00", align 1
@ASN1_OCTET_STRING_it = external constant %struct.ASN1_ITEM_st, align 8
@.str.16 = private unnamed_addr constant [15 x i8] c"d.registeredID\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"GeneralNames\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.otherName_st* @d2i_OTHERNAME(%struct.otherName_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.otherName_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @OTHERNAME_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.otherName_st*
  ret %struct.otherName_st* %6
}

declare %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_OTHERNAME(%struct.otherName_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.otherName_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @OTHERNAME_it) #4
  ret i32 %4
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.otherName_st* @OTHERNAME_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @OTHERNAME_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.otherName_st*
  ret %struct.otherName_st* %2
}

declare %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @OTHERNAME_free(%struct.otherName_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.otherName_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @OTHERNAME_it) #4
  ret void
}

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.EDIPartyName_st* @d2i_EDIPARTYNAME(%struct.EDIPartyName_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.EDIPartyName_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @EDIPARTYNAME_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.EDIPartyName_st*
  ret %struct.EDIPartyName_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_EDIPARTYNAME(%struct.EDIPartyName_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.EDIPartyName_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @EDIPARTYNAME_it) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.EDIPartyName_st* @EDIPARTYNAME_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @EDIPARTYNAME_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.EDIPartyName_st*
  ret %struct.EDIPartyName_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @EDIPARTYNAME_free(%struct.EDIPartyName_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.EDIPartyName_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @EDIPARTYNAME_it) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @d2i_GENERAL_NAME(%struct.GENERAL_NAME_st**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.GENERAL_NAME_st** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAME_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.GENERAL_NAME_st*
  ret %struct.GENERAL_NAME_st* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_GENERAL_NAME(%struct.GENERAL_NAME_st*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.GENERAL_NAME_st* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAME_it) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @GENERAL_NAME_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @GENERAL_NAME_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.GENERAL_NAME_st*
  ret %struct.GENERAL_NAME_st* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GENERAL_NAME_free(%struct.GENERAL_NAME_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.GENERAL_NAME_st* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAME_it) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_GENERAL_NAME* @d2i_GENERAL_NAMES(%struct.stack_st_GENERAL_NAME**, i8**, i64) local_unnamed_addr #0 {
  %4 = bitcast %struct.stack_st_GENERAL_NAME** %0 to %struct.ASN1_VALUE_st**
  %5 = tail call %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st** %4, i8** %1, i64 %2, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAMES_it) #4
  %6 = bitcast %struct.ASN1_VALUE_st* %5 to %struct.stack_st_GENERAL_NAME*
  ret %struct.stack_st_GENERAL_NAME* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @i2d_GENERAL_NAMES(%struct.stack_st_GENERAL_NAME*, i8**) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_GENERAL_NAME* %0 to %struct.ASN1_VALUE_st*
  %4 = tail call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %3, i8** %1, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAMES_it) #4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_GENERAL_NAME* @GENERAL_NAMES_new() local_unnamed_addr #0 {
  %1 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @GENERAL_NAMES_it) #4
  %2 = bitcast %struct.ASN1_VALUE_st* %1 to %struct.stack_st_GENERAL_NAME*
  ret %struct.stack_st_GENERAL_NAME* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME*) local_unnamed_addr #0 {
  %2 = bitcast %struct.stack_st_GENERAL_NAME* %0 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %2, %struct.ASN1_ITEM_st* nonnull @GENERAL_NAMES_it) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @GENERAL_NAME_dup(%struct.GENERAL_NAME_st*) local_unnamed_addr #0 {
  %2 = bitcast %struct.GENERAL_NAME_st* %0 to i8*
  %3 = tail call i8* @ASN1_item_dup(%struct.ASN1_ITEM_st* nonnull @GENERAL_NAME_it, i8* %2) #4
  %4 = bitcast i8* %3 to %struct.GENERAL_NAME_st*
  ret %struct.GENERAL_NAME_st* %4
}

declare i8* @ASN1_item_dup(%struct.ASN1_ITEM_st*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GENERAL_NAME_cmp(%struct.GENERAL_NAME_st* readonly, %struct.GENERAL_NAME_st* readonly) local_unnamed_addr #0 {
  %3 = icmp ne %struct.GENERAL_NAME_st* %0, null
  %4 = icmp ne %struct.GENERAL_NAME_st* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %100

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %100

12:                                               ; preds = %6
  switch i32 %8, label %100 [
    i32 3, label %13
    i32 5, label %21
    i32 0, label %45
    i32 1, label %68
    i32 2, label %68
    i32 6, label %68
    i32 4, label %76
    i32 7, label %84
    i32 8, label %92
  ]

13:                                               ; preds = %12
  %14 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %15 = bitcast %union.anon.0* %14 to %struct.asn1_type_st**
  %16 = load %struct.asn1_type_st*, %struct.asn1_type_st** %15, align 8
  %17 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %18 = bitcast %union.anon.0* %17 to %struct.asn1_type_st**
  %19 = load %struct.asn1_type_st*, %struct.asn1_type_st** %18, align 8
  %20 = tail call i32 @ASN1_TYPE_cmp(%struct.asn1_type_st* %16, %struct.asn1_type_st* %19) #4
  br label %100

21:                                               ; preds = %12
  %22 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %23 = bitcast %union.anon.0* %22 to %struct.EDIPartyName_st**
  %24 = load %struct.EDIPartyName_st*, %struct.EDIPartyName_st** %23, align 8
  %25 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %26 = bitcast %union.anon.0* %25 to %struct.EDIPartyName_st**
  %27 = load %struct.EDIPartyName_st*, %struct.EDIPartyName_st** %26, align 8
  %28 = getelementptr inbounds %struct.EDIPartyName_st, %struct.EDIPartyName_st* %24, i64 0, i32 0
  %29 = load %struct.asn1_string_st*, %struct.asn1_string_st** %28, align 8
  %30 = icmp eq %struct.asn1_string_st* %29, null
  %31 = getelementptr inbounds %struct.EDIPartyName_st, %struct.EDIPartyName_st* %27, i64 0, i32 0
  %32 = load %struct.asn1_string_st*, %struct.asn1_string_st** %31, align 8
  %33 = icmp eq %struct.asn1_string_st* %32, null
  br i1 %30, label %34, label %35

34:                                               ; preds = %21
  br i1 %33, label %39, label %100

35:                                               ; preds = %21
  br i1 %33, label %100, label %36

36:                                               ; preds = %35
  %37 = tail call i32 @ASN1_STRING_cmp(%struct.asn1_string_st* nonnull %29, %struct.asn1_string_st* nonnull %32) #4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %100

39:                                               ; preds = %36, %34
  %40 = getelementptr inbounds %struct.EDIPartyName_st, %struct.EDIPartyName_st* %24, i64 0, i32 1
  %41 = load %struct.asn1_string_st*, %struct.asn1_string_st** %40, align 8
  %42 = getelementptr inbounds %struct.EDIPartyName_st, %struct.EDIPartyName_st* %27, i64 0, i32 1
  %43 = load %struct.asn1_string_st*, %struct.asn1_string_st** %42, align 8
  %44 = tail call i32 @ASN1_STRING_cmp(%struct.asn1_string_st* %41, %struct.asn1_string_st* %43) #4
  br label %100

45:                                               ; preds = %12
  %46 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %47 = bitcast %union.anon.0* %46 to %struct.otherName_st**
  %48 = load %struct.otherName_st*, %struct.otherName_st** %47, align 8
  %49 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %50 = bitcast %union.anon.0* %49 to %struct.otherName_st**
  %51 = load %struct.otherName_st*, %struct.otherName_st** %50, align 8
  %52 = icmp ne %struct.otherName_st* %48, null
  %53 = icmp ne %struct.otherName_st* %51, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %100

55:                                               ; preds = %45
  %56 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %48, i64 0, i32 0
  %57 = load %struct.asn1_object_st*, %struct.asn1_object_st** %56, align 8
  %58 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %51, i64 0, i32 0
  %59 = load %struct.asn1_object_st*, %struct.asn1_object_st** %58, align 8
  %60 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %57, %struct.asn1_object_st* %59) #4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %100

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %48, i64 0, i32 1
  %64 = load %struct.asn1_type_st*, %struct.asn1_type_st** %63, align 8
  %65 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %51, i64 0, i32 1
  %66 = load %struct.asn1_type_st*, %struct.asn1_type_st** %65, align 8
  %67 = tail call i32 @ASN1_TYPE_cmp(%struct.asn1_type_st* %64, %struct.asn1_type_st* %66) #4
  br label %100

68:                                               ; preds = %12, %12, %12
  %69 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %70 = bitcast %union.anon.0* %69 to %struct.asn1_string_st**
  %71 = load %struct.asn1_string_st*, %struct.asn1_string_st** %70, align 8
  %72 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %73 = bitcast %union.anon.0* %72 to %struct.asn1_string_st**
  %74 = load %struct.asn1_string_st*, %struct.asn1_string_st** %73, align 8
  %75 = tail call i32 @ASN1_STRING_cmp(%struct.asn1_string_st* %71, %struct.asn1_string_st* %74) #4
  br label %100

76:                                               ; preds = %12
  %77 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %78 = bitcast %union.anon.0* %77 to %struct.X509_name_st**
  %79 = load %struct.X509_name_st*, %struct.X509_name_st** %78, align 8
  %80 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %81 = bitcast %union.anon.0* %80 to %struct.X509_name_st**
  %82 = load %struct.X509_name_st*, %struct.X509_name_st** %81, align 8
  %83 = tail call i32 @X509_NAME_cmp(%struct.X509_name_st* %79, %struct.X509_name_st* %82) #4
  br label %100

84:                                               ; preds = %12
  %85 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %86 = bitcast %union.anon.0* %85 to %struct.asn1_string_st**
  %87 = load %struct.asn1_string_st*, %struct.asn1_string_st** %86, align 8
  %88 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %89 = bitcast %union.anon.0* %88 to %struct.asn1_string_st**
  %90 = load %struct.asn1_string_st*, %struct.asn1_string_st** %89, align 8
  %91 = tail call i32 @ASN1_OCTET_STRING_cmp(%struct.asn1_string_st* %87, %struct.asn1_string_st* %90) #4
  br label %100

92:                                               ; preds = %12
  %93 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %94 = bitcast %union.anon.0* %93 to %struct.asn1_object_st**
  %95 = load %struct.asn1_object_st*, %struct.asn1_object_st** %94, align 8
  %96 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %97 = bitcast %union.anon.0* %96 to %struct.asn1_object_st**
  %98 = load %struct.asn1_object_st*, %struct.asn1_object_st** %97, align 8
  %99 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %95, %struct.asn1_object_st* %98) #4
  br label %100

100:                                              ; preds = %62, %55, %45, %39, %36, %35, %34, %12, %2, %6, %92, %84, %76, %68, %13
  %101 = phi i32 [ %99, %92 ], [ %91, %84 ], [ %83, %76 ], [ %75, %68 ], [ %20, %13 ], [ -1, %6 ], [ -1, %2 ], [ -1, %12 ], [ %44, %39 ], [ -1, %34 ], [ -1, %36 ], [ -1, %35 ], [ %67, %62 ], [ -1, %45 ], [ %60, %55 ]
  ret i32 %101
}

declare i32 @ASN1_TYPE_cmp(%struct.asn1_type_st*, %struct.asn1_type_st*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @OTHERNAME_cmp(%struct.otherName_st* readonly, %struct.otherName_st* readonly) local_unnamed_addr #0 {
  %3 = icmp ne %struct.otherName_st* %0, null
  %4 = icmp ne %struct.otherName_st* %1, null
  %5 = and i1 %3, %4
  br i1 %5, label %6, label %19

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %0, i64 0, i32 0
  %8 = load %struct.asn1_object_st*, %struct.asn1_object_st** %7, align 8
  %9 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %1, i64 0, i32 0
  %10 = load %struct.asn1_object_st*, %struct.asn1_object_st** %9, align 8
  %11 = tail call i32 @OBJ_cmp(%struct.asn1_object_st* %8, %struct.asn1_object_st* %10) #4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %19

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %0, i64 0, i32 1
  %15 = load %struct.asn1_type_st*, %struct.asn1_type_st** %14, align 8
  %16 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %1, i64 0, i32 1
  %17 = load %struct.asn1_type_st*, %struct.asn1_type_st** %16, align 8
  %18 = tail call i32 @ASN1_TYPE_cmp(%struct.asn1_type_st* %15, %struct.asn1_type_st* %17) #4
  br label %19

19:                                               ; preds = %6, %2, %13
  %20 = phi i32 [ %18, %13 ], [ -1, %2 ], [ %11, %6 ]
  ret i32 %20
}

declare i32 @ASN1_STRING_cmp(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @X509_NAME_cmp(%struct.X509_name_st*, %struct.X509_name_st*) local_unnamed_addr #1

declare i32 @ASN1_OCTET_STRING_cmp(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #1

declare i32 @OBJ_cmp(%struct.asn1_object_st*, %struct.asn1_object_st*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @GENERAL_NAME_set0_value(%struct.GENERAL_NAME_st* nocapture, i32, i8*) local_unnamed_addr #2 {
  %4 = icmp ult i32 %1, 9
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1, i32 0
  store i8* %2, i8** %6, align 8
  br label %7

7:                                                ; preds = %3, %5
  %8 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @GENERAL_NAME_get0_value(%struct.GENERAL_NAME_st* nocapture readonly, i32*) local_unnamed_addr #3 {
  %3 = icmp eq i32* %1, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  store i32 %6, i32* %1, align 4
  br label %7

7:                                                ; preds = %2, %4
  %8 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp ult i32 %9, 9
  br i1 %10, label %11, label %14

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8
  br label %14

14:                                               ; preds = %7, %11
  %15 = phi i8* [ null, %7 ], [ %13, %11 ]
  ret i8* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GENERAL_NAME_set0_othername(%struct.GENERAL_NAME_st* nocapture, %struct.asn1_object_st*, %struct.asn1_type_st*) local_unnamed_addr #0 {
  %4 = tail call %struct.ASN1_VALUE_st* @ASN1_item_new(%struct.ASN1_ITEM_st* nonnull @OTHERNAME_it) #4
  %5 = icmp eq %struct.ASN1_VALUE_st* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  %7 = bitcast %struct.ASN1_VALUE_st* %4 to %struct.otherName_st*
  %8 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %7, i64 0, i32 1
  %9 = load %struct.asn1_type_st*, %struct.asn1_type_st** %8, align 8
  tail call void @ASN1_TYPE_free(%struct.asn1_type_st* %9) #4
  %10 = bitcast %struct.ASN1_VALUE_st* %4 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %1, %struct.asn1_object_st** %10, align 8
  store %struct.asn1_type_st* %2, %struct.asn1_type_st** %8, align 8
  %11 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8** %11 to %struct.ASN1_VALUE_st**
  store %struct.ASN1_VALUE_st* %4, %struct.ASN1_VALUE_st** %12, align 8
  %13 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  store i32 0, i32* %13, align 8
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi i32 [ 1, %6 ], [ 0, %3 ]
  ret i32 %15
}

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @GENERAL_NAME_get0_otherName(%struct.GENERAL_NAME_st* nocapture readonly, %struct.asn1_object_st**, %struct.asn1_type_st**) local_unnamed_addr #3 {
  %4 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %25

7:                                                ; preds = %3
  %8 = icmp eq %struct.asn1_object_st** %1, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %11 = bitcast %union.anon.0* %10 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %struct.asn1_object_st** %1 to i64*
  store i64 %13, i64* %14, align 8
  br label %15

15:                                               ; preds = %7, %9
  %16 = icmp eq %struct.asn1_type_st** %2, null
  br i1 %16, label %25, label %17

17:                                               ; preds = %15
  %18 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %0, i64 0, i32 1
  %19 = bitcast %union.anon.0* %18 to %struct.otherName_st**
  %20 = load %struct.otherName_st*, %struct.otherName_st** %19, align 8
  %21 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %20, i64 0, i32 1
  %22 = bitcast %struct.asn1_type_st** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %struct.asn1_type_st** %2 to i64*
  store i64 %23, i64* %24, align 8
  br label %25

25:                                               ; preds = %17, %15, %3
  %26 = phi i32 [ 0, %3 ], [ 1, %15 ], [ 1, %17 ]
  ret i32 %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
