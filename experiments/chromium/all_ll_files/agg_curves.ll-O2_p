; ModuleID = '../../third_party/pdfium/third_party/agg23/agg_curves.cpp'
source_filename = "../../third_party/pdfium/third_party/agg23/agg_curves.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.pdfium::agg::curve4_div" = type { float, float, i32, [4 x i8], %"class.pdfium::agg::pod_deque" }
%"class.pdfium::agg::pod_deque" = type <{ i32, i32, i32, [4 x i8], %"struct.pdfium::agg::point_type"**, i32, [4 x i8] }>
%"struct.pdfium::agg::point_type" = type { float, float, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg10curve4_div4initEffffffff(%"class.pdfium::agg::curve4_div"*, float, float, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 0
  store float 2.500000e-01, float* %11, align 8
  %12 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 1
  store float 4.000000e+00, float* %12, align 4
  tail call void @_ZN6pdfium3agg10curve4_div6bezierEffffffff(%"class.pdfium::agg::curve4_div"* %0, float %1, float %2, float %3, float %4, float %5, float %6, float %7, float %8)
  %13 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 2
  store i32 0, i32* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg10curve4_div6bezierEffffffff(%"class.pdfium::agg::curve4_div"*, float, float, float, float, float, float, float, float) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = lshr i32 %11, 6
  %13 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp ult i32 %12, %14
  br i1 %15, label %16, label %18

16:                                               ; preds = %9
  %17 = zext i32 %12 to i64
  br label %55

18:                                               ; preds = %9
  %19 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %20, %12
  br i1 %21, label %45, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, %20
  %26 = zext i32 %25 to i64
  %27 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %26, i64 8) #4
  %28 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %29 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %28, align 8
  %30 = icmp eq %"struct.pdfium::agg::point_type"** %29, null
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"struct.pdfium::agg::point_type"*** %28 to i8**
  br label %40

33:                                               ; preds = %22
  %34 = bitcast %"struct.pdfium::agg::point_type"** %29 to i8*
  %35 = load i32, i32* %13, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %34, i64 %37, i1 false) #4
  %38 = bitcast %"struct.pdfium::agg::point_type"*** %28 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7FX_FreePv(i8* %39) #4
  br label %40

40:                                               ; preds = %33, %31
  %41 = phi i8** [ %32, %31 ], [ %38, %33 ]
  store i8* %27, i8** %41, align 8
  %42 = load i32, i32* %23, align 8
  %43 = load i32, i32* %19, align 8
  %44 = add i32 %43, %42
  store i32 %44, i32* %19, align 8
  br label %45

45:                                               ; preds = %40, %18
  %46 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %47 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %48 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %47, align 8
  %49 = zext i32 %12 to i64
  %50 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %48, i64 %49
  %51 = bitcast %"struct.pdfium::agg::point_type"** %50 to i8**
  store i8* %46, i8** %51, align 8
  %52 = load i32, i32* %13, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %13, align 4
  %54 = load i32, i32* %10, align 8
  br label %55

55:                                               ; preds = %16, %45
  %56 = phi i64 [ %17, %16 ], [ %49, %45 ]
  %57 = phi i32 [ %11, %16 ], [ %54, %45 ]
  %58 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %59 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %58, align 8
  %60 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %59, i64 %56
  %61 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %60, align 8
  %62 = and i32 %57, 63
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %61, i64 %63, i32 0
  store float %1, float* %64, align 4
  %65 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %61, i64 %63, i32 1
  store float %2, float* %65, align 4
  %66 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %61, i64 %63, i32 2
  store i32 0, i32* %66, align 4
  %67 = load i32, i32* %10, align 8
  %68 = add i32 %67, 1
  store i32 %68, i32* %10, align 8
  tail call void @_ZN6pdfium3agg10curve4_div16recursive_bezierEffffffffj(%"class.pdfium::agg::curve4_div"* %0, float %1, float %2, float %3, float %4, float %5, float %6, float %7, float %8, i32 0)
  %69 = load i32, i32* %10, align 8
  %70 = lshr i32 %69, 6
  %71 = load i32, i32* %13, align 4
  %72 = icmp ult i32 %70, %71
  br i1 %72, label %73, label %75

73:                                               ; preds = %55
  %74 = zext i32 %70 to i64
  br label %110

75:                                               ; preds = %55
  %76 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = icmp ugt i32 %77, %70
  br i1 %78, label %101, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, %77
  %83 = zext i32 %82 to i64
  %84 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %83, i64 8) #4
  %85 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %58, align 8
  %86 = icmp eq %"struct.pdfium::agg::point_type"** %85, null
  br i1 %86, label %87, label %89

87:                                               ; preds = %79
  %88 = bitcast %"struct.pdfium::agg::point_type"*** %58 to i8**
  br label %96

89:                                               ; preds = %79
  %90 = bitcast %"struct.pdfium::agg::point_type"** %85 to i8*
  %91 = load i32, i32* %13, align 4
  %92 = zext i32 %91 to i64
  %93 = shl nuw nsw i64 %92, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %90, i64 %93, i1 false) #4
  %94 = bitcast %"struct.pdfium::agg::point_type"*** %58 to i8**
  %95 = load i8*, i8** %94, align 8
  tail call void @_Z7FX_FreePv(i8* %95) #4
  br label %96

96:                                               ; preds = %89, %87
  %97 = phi i8** [ %88, %87 ], [ %94, %89 ]
  store i8* %84, i8** %97, align 8
  %98 = load i32, i32* %80, align 8
  %99 = load i32, i32* %76, align 8
  %100 = add i32 %99, %98
  store i32 %100, i32* %76, align 8
  br label %101

101:                                              ; preds = %96, %75
  %102 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %103 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %58, align 8
  %104 = zext i32 %70 to i64
  %105 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %103, i64 %104
  %106 = bitcast %"struct.pdfium::agg::point_type"** %105 to i8**
  store i8* %102, i8** %106, align 8
  %107 = load i32, i32* %13, align 4
  %108 = add i32 %107, 1
  store i32 %108, i32* %13, align 4
  %109 = load i32, i32* %10, align 8
  br label %110

110:                                              ; preds = %73, %101
  %111 = phi i64 [ %74, %73 ], [ %104, %101 ]
  %112 = phi i32 [ %69, %73 ], [ %109, %101 ]
  %113 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %58, align 8
  %114 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %113, i64 %111
  %115 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %114, align 8
  %116 = and i32 %112, 63
  %117 = zext i32 %116 to i64
  %118 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %115, i64 %117, i32 0
  store float %7, float* %118, align 4
  %119 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %115, i64 %117, i32 1
  store float %8, float* %119, align 4
  %120 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %115, i64 %117, i32 2
  store i32 0, i32* %120, align 4
  %121 = load i32, i32* %10, align 8
  %122 = add i32 %121, 1
  store i32 %122, i32* %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6pdfium3agg10curve4_div16recursive_bezierEffffffffj(%"class.pdfium::agg::curve4_div"*, float, float, float, float, float, float, float, float, i32) local_unnamed_addr #0 align 2 {
  %11 = icmp ugt i32 %9, 16
  br i1 %11, label %373, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 0
  %14 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 1
  %15 = insertelement <2 x float> undef, float %1, i32 0
  %16 = insertelement <2 x float> %15, float %2, i32 1
  %17 = insertelement <2 x float> undef, float %3, i32 0
  %18 = insertelement <2 x float> %17, float %4, i32 1
  %19 = insertelement <2 x float> undef, float %5, i32 0
  %20 = insertelement <2 x float> %19, float %6, i32 1
  %21 = insertelement <2 x float> undef, float %7, i32 0
  %22 = insertelement <2 x float> %21, float %8, i32 1
  br label %23

23:                                               ; preds = %12, %362
  %24 = phi i32 [ %9, %12 ], [ %363, %362 ]
  %25 = phi <2 x float> [ %16, %12 ], [ %39, %362 ]
  %26 = phi <2 x float> [ %18, %12 ], [ %37, %362 ]
  %27 = phi <2 x float> [ %20, %12 ], [ %33, %362 ]
  %28 = fadd <2 x float> %25, %26
  %29 = fmul <2 x float> %28, <float 5.000000e-01, float 5.000000e-01>
  %30 = fadd <2 x float> %26, %27
  %31 = fmul <2 x float> %30, <float 5.000000e-01, float 5.000000e-01>
  %32 = fadd <2 x float> %27, %22
  %33 = fmul <2 x float> %32, <float 5.000000e-01, float 5.000000e-01>
  %34 = fadd <2 x float> %29, %31
  %35 = fmul <2 x float> %34, <float 5.000000e-01, float 5.000000e-01>
  %36 = fadd <2 x float> %31, %33
  %37 = fmul <2 x float> %36, <float 5.000000e-01, float 5.000000e-01>
  %38 = fadd <2 x float> %35, %37
  %39 = fmul <2 x float> %38, <float 5.000000e-01, float 5.000000e-01>
  %40 = fsub <2 x float> %22, %25
  %41 = fsub <2 x float> %26, %22
  %42 = shufflevector <2 x float> %40, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %43 = fmul <2 x float> %42, %41
  %44 = extractelement <2 x float> %43, i32 0
  %45 = extractelement <2 x float> %43, i32 1
  %46 = fsub float %44, %45
  %47 = tail call float @llvm.fabs.f32(float %46) #4
  %48 = fsub <2 x float> %27, %22
  %49 = shufflevector <2 x float> %40, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %50 = fmul <2 x float> %49, %48
  %51 = extractelement <2 x float> %50, i32 0
  %52 = extractelement <2 x float> %50, i32 1
  %53 = fsub float %51, %52
  %54 = tail call float @llvm.fabs.f32(float %53) #4
  %55 = fcmp ogt float %47, 0x39B4484C00000000
  %56 = zext i1 %55 to i32
  %57 = shl nuw nsw i32 %56, 1
  %58 = fcmp ogt float %54, 0x39B4484C00000000
  %59 = zext i1 %58 to i32
  %60 = or i32 %57, %59
  switch i32 %60, label %361 [
    i32 0, label %61
    i32 1, label %147
    i32 2, label %218
    i32 3, label %289
  ]

61:                                               ; preds = %23
  %62 = fadd <2 x float> %25, %27
  %63 = fsub <2 x float> %62, %26
  %64 = fsub <2 x float> %63, %26
  %65 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %64)
  %66 = extractelement <2 x float> %65, i32 0
  %67 = extractelement <2 x float> %65, i32 1
  %68 = fadd float %66, %67
  %69 = extractelement <2 x float> %26, i32 0
  %70 = fadd float %69, %7
  %71 = extractelement <2 x float> %27, i32 0
  %72 = fsub float %70, %71
  %73 = fsub float %72, %71
  %74 = tail call float @llvm.fabs.f32(float %73) #4
  %75 = fadd float %74, %68
  %76 = extractelement <2 x float> %26, i32 1
  %77 = fadd float %76, %8
  %78 = extractelement <2 x float> %27, i32 1
  %79 = fsub float %77, %78
  %80 = fsub float %79, %78
  %81 = tail call float @llvm.fabs.f32(float %80) #4
  %82 = fadd float %81, %75
  %83 = load float, float* %14, align 4
  %84 = fcmp ugt float %82, %83
  br i1 %84, label %362, label %85

85:                                               ; preds = %61
  %86 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  %87 = load i32, i32* %86, align 8
  %88 = lshr i32 %87, 6
  %89 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 1
  %90 = load i32, i32* %89, align 4
  %91 = icmp ult i32 %88, %90
  br i1 %91, label %92, label %94

92:                                               ; preds = %85
  %93 = zext i32 %88 to i64
  br label %131

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %96 = load i32, i32* %95, align 8
  %97 = icmp ugt i32 %96, %88
  br i1 %97, label %121, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %100 = load i32, i32* %99, align 8
  %101 = add i32 %100, %96
  %102 = zext i32 %101 to i64
  %103 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %102, i64 8) #4
  %104 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %105 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %104, align 8
  %106 = icmp eq %"struct.pdfium::agg::point_type"** %105, null
  br i1 %106, label %107, label %109

107:                                              ; preds = %98
  %108 = bitcast %"struct.pdfium::agg::point_type"*** %104 to i8**
  br label %116

109:                                              ; preds = %98
  %110 = bitcast %"struct.pdfium::agg::point_type"** %105 to i8*
  %111 = load i32, i32* %89, align 4
  %112 = zext i32 %111 to i64
  %113 = shl nuw nsw i64 %112, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* nonnull align 8 %110, i64 %113, i1 false) #4
  %114 = bitcast %"struct.pdfium::agg::point_type"*** %104 to i8**
  %115 = load i8*, i8** %114, align 8
  tail call void @_Z7FX_FreePv(i8* %115) #4
  br label %116

116:                                              ; preds = %109, %107
  %117 = phi i8** [ %108, %107 ], [ %114, %109 ]
  store i8* %103, i8** %117, align 8
  %118 = load i32, i32* %99, align 8
  %119 = load i32, i32* %95, align 8
  %120 = add i32 %119, %118
  store i32 %120, i32* %95, align 8
  br label %121

121:                                              ; preds = %116, %94
  %122 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %123 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %124 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %123, align 8
  %125 = zext i32 %88 to i64
  %126 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %124, i64 %125
  %127 = bitcast %"struct.pdfium::agg::point_type"** %126 to i8**
  store i8* %122, i8** %127, align 8
  %128 = load i32, i32* %89, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %89, align 4
  %130 = load i32, i32* %86, align 8
  br label %131

131:                                              ; preds = %92, %121
  %132 = phi i64 [ %93, %92 ], [ %125, %121 ]
  %133 = phi i32 [ %87, %92 ], [ %130, %121 ]
  %134 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %135 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %134, align 8
  %136 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %135, i64 %132
  %137 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %136, align 8
  %138 = and i32 %133, 63
  %139 = zext i32 %138 to i64
  %140 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %137, i64 %139, i32 0
  %141 = extractelement <2 x float> %39, i32 0
  store float %141, float* %140, align 4
  %142 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %137, i64 %139, i32 1
  %143 = extractelement <2 x float> %39, i32 1
  store float %143, float* %142, align 4
  %144 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %137, i64 %139, i32 2
  store i32 128, i32* %144, align 4
  %145 = load i32, i32* %86, align 8
  %146 = add i32 %145, 1
  store i32 %146, i32* %86, align 8
  br label %373

147:                                              ; preds = %23
  %148 = fmul float %53, %53
  %149 = load float, float* %13, align 8
  %150 = fmul <2 x float> %40, %40
  %151 = extractelement <2 x float> %150, i32 0
  %152 = extractelement <2 x float> %150, i32 1
  %153 = fadd float %151, %152
  %154 = fmul float %153, %149
  %155 = fcmp ugt float %148, %154
  br i1 %155, label %362, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  %158 = load i32, i32* %157, align 8
  %159 = lshr i32 %158, 6
  %160 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 1
  %161 = load i32, i32* %160, align 4
  %162 = icmp ult i32 %159, %161
  br i1 %162, label %163, label %165

163:                                              ; preds = %156
  %164 = zext i32 %159 to i64
  br label %202

165:                                              ; preds = %156
  %166 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %167 = load i32, i32* %166, align 8
  %168 = icmp ugt i32 %167, %159
  br i1 %168, label %192, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %167
  %173 = zext i32 %172 to i64
  %174 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %173, i64 8) #4
  %175 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %176 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %175, align 8
  %177 = icmp eq %"struct.pdfium::agg::point_type"** %176, null
  br i1 %177, label %178, label %180

178:                                              ; preds = %169
  %179 = bitcast %"struct.pdfium::agg::point_type"*** %175 to i8**
  br label %187

180:                                              ; preds = %169
  %181 = bitcast %"struct.pdfium::agg::point_type"** %176 to i8*
  %182 = load i32, i32* %160, align 4
  %183 = zext i32 %182 to i64
  %184 = shl nuw nsw i64 %183, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %181, i64 %184, i1 false) #4
  %185 = bitcast %"struct.pdfium::agg::point_type"*** %175 to i8**
  %186 = load i8*, i8** %185, align 8
  tail call void @_Z7FX_FreePv(i8* %186) #4
  br label %187

187:                                              ; preds = %180, %178
  %188 = phi i8** [ %179, %178 ], [ %185, %180 ]
  store i8* %174, i8** %188, align 8
  %189 = load i32, i32* %170, align 8
  %190 = load i32, i32* %166, align 8
  %191 = add i32 %190, %189
  store i32 %191, i32* %166, align 8
  br label %192

192:                                              ; preds = %187, %165
  %193 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %194 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %195 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %194, align 8
  %196 = zext i32 %159 to i64
  %197 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %195, i64 %196
  %198 = bitcast %"struct.pdfium::agg::point_type"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = load i32, i32* %160, align 4
  %200 = add i32 %199, 1
  store i32 %200, i32* %160, align 4
  %201 = load i32, i32* %157, align 8
  br label %202

202:                                              ; preds = %163, %192
  %203 = phi i64 [ %164, %163 ], [ %196, %192 ]
  %204 = phi i32 [ %158, %163 ], [ %201, %192 ]
  %205 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %206 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %205, align 8
  %207 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %206, i64 %203
  %208 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %207, align 8
  %209 = and i32 %204, 63
  %210 = zext i32 %209 to i64
  %211 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %208, i64 %210, i32 0
  %212 = extractelement <2 x float> %31, i32 0
  store float %212, float* %211, align 4
  %213 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %208, i64 %210, i32 1
  %214 = extractelement <2 x float> %31, i32 1
  store float %214, float* %213, align 4
  %215 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %208, i64 %210, i32 2
  store i32 128, i32* %215, align 4
  %216 = load i32, i32* %157, align 8
  %217 = add i32 %216, 1
  store i32 %217, i32* %157, align 8
  br label %373

218:                                              ; preds = %23
  %219 = fmul float %46, %46
  %220 = load float, float* %13, align 8
  %221 = fmul <2 x float> %40, %40
  %222 = extractelement <2 x float> %221, i32 0
  %223 = extractelement <2 x float> %221, i32 1
  %224 = fadd float %222, %223
  %225 = fmul float %224, %220
  %226 = fcmp ugt float %219, %225
  br i1 %226, label %362, label %227

227:                                              ; preds = %218
  %228 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = lshr i32 %229, 6
  %231 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = icmp ult i32 %230, %232
  br i1 %233, label %234, label %236

234:                                              ; preds = %227
  %235 = zext i32 %230 to i64
  br label %273

236:                                              ; preds = %227
  %237 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %238 = load i32, i32* %237, align 8
  %239 = icmp ugt i32 %238, %230
  br i1 %239, label %263, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %242 = load i32, i32* %241, align 8
  %243 = add i32 %242, %238
  %244 = zext i32 %243 to i64
  %245 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %244, i64 8) #4
  %246 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %247 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %246, align 8
  %248 = icmp eq %"struct.pdfium::agg::point_type"** %247, null
  br i1 %248, label %249, label %251

249:                                              ; preds = %240
  %250 = bitcast %"struct.pdfium::agg::point_type"*** %246 to i8**
  br label %258

251:                                              ; preds = %240
  %252 = bitcast %"struct.pdfium::agg::point_type"** %247 to i8*
  %253 = load i32, i32* %231, align 4
  %254 = zext i32 %253 to i64
  %255 = shl nuw nsw i64 %254, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %245, i8* nonnull align 8 %252, i64 %255, i1 false) #4
  %256 = bitcast %"struct.pdfium::agg::point_type"*** %246 to i8**
  %257 = load i8*, i8** %256, align 8
  tail call void @_Z7FX_FreePv(i8* %257) #4
  br label %258

258:                                              ; preds = %251, %249
  %259 = phi i8** [ %250, %249 ], [ %256, %251 ]
  store i8* %245, i8** %259, align 8
  %260 = load i32, i32* %241, align 8
  %261 = load i32, i32* %237, align 8
  %262 = add i32 %261, %260
  store i32 %262, i32* %237, align 8
  br label %263

263:                                              ; preds = %258, %236
  %264 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %265 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %266 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %265, align 8
  %267 = zext i32 %230 to i64
  %268 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %266, i64 %267
  %269 = bitcast %"struct.pdfium::agg::point_type"** %268 to i8**
  store i8* %264, i8** %269, align 8
  %270 = load i32, i32* %231, align 4
  %271 = add i32 %270, 1
  store i32 %271, i32* %231, align 4
  %272 = load i32, i32* %228, align 8
  br label %273

273:                                              ; preds = %234, %263
  %274 = phi i64 [ %235, %234 ], [ %267, %263 ]
  %275 = phi i32 [ %229, %234 ], [ %272, %263 ]
  %276 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %277 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %276, align 8
  %278 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %277, i64 %274
  %279 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %278, align 8
  %280 = and i32 %275, 63
  %281 = zext i32 %280 to i64
  %282 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %279, i64 %281, i32 0
  %283 = extractelement <2 x float> %31, i32 0
  store float %283, float* %282, align 4
  %284 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %279, i64 %281, i32 1
  %285 = extractelement <2 x float> %31, i32 1
  store float %285, float* %284, align 4
  %286 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %279, i64 %281, i32 2
  store i32 128, i32* %286, align 4
  %287 = load i32, i32* %228, align 8
  %288 = add i32 %287, 1
  store i32 %288, i32* %228, align 8
  br label %373

289:                                              ; preds = %23
  %290 = fadd float %47, %54
  %291 = fmul float %290, %290
  %292 = load float, float* %13, align 8
  %293 = fmul <2 x float> %40, %40
  %294 = extractelement <2 x float> %293, i32 0
  %295 = extractelement <2 x float> %293, i32 1
  %296 = fadd float %294, %295
  %297 = fmul float %296, %292
  %298 = fcmp ugt float %291, %297
  br i1 %298, label %362, label %299

299:                                              ; preds = %289
  %300 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 0
  %301 = load i32, i32* %300, align 8
  %302 = lshr i32 %301, 6
  %303 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 1
  %304 = load i32, i32* %303, align 4
  %305 = icmp ult i32 %302, %304
  br i1 %305, label %306, label %308

306:                                              ; preds = %299
  %307 = zext i32 %302 to i64
  br label %345

308:                                              ; preds = %299
  %309 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 2
  %310 = load i32, i32* %309, align 8
  %311 = icmp ugt i32 %310, %302
  br i1 %311, label %335, label %312

312:                                              ; preds = %308
  %313 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 5
  %314 = load i32, i32* %313, align 8
  %315 = add i32 %314, %310
  %316 = zext i32 %315 to i64
  %317 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 %316, i64 8) #4
  %318 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %319 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %318, align 8
  %320 = icmp eq %"struct.pdfium::agg::point_type"** %319, null
  br i1 %320, label %321, label %323

321:                                              ; preds = %312
  %322 = bitcast %"struct.pdfium::agg::point_type"*** %318 to i8**
  br label %330

323:                                              ; preds = %312
  %324 = bitcast %"struct.pdfium::agg::point_type"** %319 to i8*
  %325 = load i32, i32* %303, align 4
  %326 = zext i32 %325 to i64
  %327 = shl nuw nsw i64 %326, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %317, i8* nonnull align 8 %324, i64 %327, i1 false) #4
  %328 = bitcast %"struct.pdfium::agg::point_type"*** %318 to i8**
  %329 = load i8*, i8** %328, align 8
  tail call void @_Z7FX_FreePv(i8* %329) #4
  br label %330

330:                                              ; preds = %323, %321
  %331 = phi i8** [ %322, %321 ], [ %328, %323 ]
  store i8* %317, i8** %331, align 8
  %332 = load i32, i32* %313, align 8
  %333 = load i32, i32* %309, align 8
  %334 = add i32 %333, %332
  store i32 %334, i32* %309, align 8
  br label %335

335:                                              ; preds = %330, %308
  %336 = tail call i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64 64, i64 12) #4
  %337 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %338 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %337, align 8
  %339 = zext i32 %302 to i64
  %340 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %338, i64 %339
  %341 = bitcast %"struct.pdfium::agg::point_type"** %340 to i8**
  store i8* %336, i8** %341, align 8
  %342 = load i32, i32* %303, align 4
  %343 = add i32 %342, 1
  store i32 %343, i32* %303, align 4
  %344 = load i32, i32* %300, align 8
  br label %345

345:                                              ; preds = %306, %335
  %346 = phi i64 [ %307, %306 ], [ %339, %335 ]
  %347 = phi i32 [ %301, %306 ], [ %344, %335 ]
  %348 = getelementptr inbounds %"class.pdfium::agg::curve4_div", %"class.pdfium::agg::curve4_div"* %0, i64 0, i32 4, i32 4
  %349 = load %"struct.pdfium::agg::point_type"**, %"struct.pdfium::agg::point_type"*** %348, align 8
  %350 = getelementptr inbounds %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %349, i64 %346
  %351 = load %"struct.pdfium::agg::point_type"*, %"struct.pdfium::agg::point_type"** %350, align 8
  %352 = and i32 %347, 63
  %353 = zext i32 %352 to i64
  %354 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %351, i64 %353, i32 0
  %355 = extractelement <2 x float> %31, i32 0
  store float %355, float* %354, align 4
  %356 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %351, i64 %353, i32 1
  %357 = extractelement <2 x float> %31, i32 1
  store float %357, float* %356, align 4
  %358 = getelementptr inbounds %"struct.pdfium::agg::point_type", %"struct.pdfium::agg::point_type"* %351, i64 %353, i32 2
  store i32 128, i32* %358, align 4
  %359 = load i32, i32* %300, align 8
  %360 = add i32 %359, 1
  store i32 %360, i32* %300, align 8
  br label %373

361:                                              ; preds = %23
  unreachable

362:                                              ; preds = %61, %147, %218, %289
  %363 = add nuw nsw i32 %24, 1
  %364 = extractelement <2 x float> %25, i32 0
  %365 = extractelement <2 x float> %25, i32 1
  %366 = extractelement <2 x float> %39, i32 0
  %367 = extractelement <2 x float> %39, i32 1
  %368 = extractelement <2 x float> %35, i32 0
  %369 = extractelement <2 x float> %35, i32 1
  %370 = extractelement <2 x float> %29, i32 0
  %371 = extractelement <2 x float> %29, i32 1
  tail call void @_ZN6pdfium3agg10curve4_div16recursive_bezierEffffffffj(%"class.pdfium::agg::curve4_div"* %0, float %364, float %365, float %370, float %371, float %368, float %369, float %366, float %367, i32 %363)
  %372 = icmp ugt i32 %24, 15
  br i1 %372, label %373, label %23

373:                                              ; preds = %362, %10, %131, %202, %273, %345
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare i8* @_ZN6pdfium8internal11CallocOrDieEmm(i64, i64) local_unnamed_addr #3

declare void @_Z7FX_FreePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
