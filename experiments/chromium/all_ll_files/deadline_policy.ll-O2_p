; ModuleID = '../../cc/layers/deadline_policy.cc'
source_filename = "../../cc/layers/deadline_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.cc::DeadlinePolicy" = type { i32, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }

@_ZN2cc14DeadlinePolicyC1ENS0_4TypeEN4absl8optionalIjEE = hidden unnamed_addr alias void (%"class.cc::DeadlinePolicy"*, i32, i64), void (%"class.cc::DeadlinePolicy"*, i32, i64)* @_ZN2cc14DeadlinePolicyC2ENS0_4TypeEN4absl8optionalIjEE
@_ZN2cc14DeadlinePolicyC1ERKS0_ = hidden unnamed_addr alias void (%"class.cc::DeadlinePolicy"*, %"class.cc::DeadlinePolicy"*), void (%"class.cc::DeadlinePolicy"*, %"class.cc::DeadlinePolicy"*)* @_ZN2cc14DeadlinePolicyC2ERKS0_

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14DeadlinePolicy19UseExistingDeadlineEv(%"class.cc::DeadlinePolicy"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 1
  %4 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 0, i64* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14DeadlinePolicy18UseDefaultDeadlineEv(%"class.cc::DeadlinePolicy"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 4
  %3 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 1
  %4 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 0, i64* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14DeadlinePolicy20UseSpecifiedDeadlineEj(%"class.cc::DeadlinePolicy"* noalias nocapture sret, i32) local_unnamed_addr #0 align 2 {
  %3 = zext i32 %1 to i64
  %4 = shl nuw i64 %3, 32
  %5 = or i64 %4, 1
  %6 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 0
  store i32 2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 1
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  store i64 %5, i64* %8, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14DeadlinePolicy19UseInfiniteDeadlineEv(%"class.cc::DeadlinePolicy"* noalias nocapture sret) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 0
  store i32 3, i32* %2, align 4
  %3 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 1
  %4 = bitcast %"class.absl::optional"* %3 to i64*
  store i64 -4294967295, i64* %4, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc14DeadlinePolicyC2ENS0_4TypeEN4absl8optionalIjEE(%"class.cc::DeadlinePolicy"* nocapture, i32, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 4
  %5 = getelementptr inbounds %"class.cc::DeadlinePolicy", %"class.cc::DeadlinePolicy"* %0, i64 0, i32 1
  %6 = bitcast %"class.absl::optional"* %5 to i64*
  store i64 %2, i64* %6, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc14DeadlinePolicyC2ERKS0_(%"class.cc::DeadlinePolicy"* nocapture, %"class.cc::DeadlinePolicy"* nocapture readonly dereferenceable(12)) unnamed_addr #3 align 2 {
  %3 = bitcast %"class.cc::DeadlinePolicy"* %0 to i8*
  %4 = bitcast %"class.cc::DeadlinePolicy"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 %4, i64 12, i1 false)
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
