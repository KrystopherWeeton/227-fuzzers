; ModuleID = '../../ui/views/style/typography_provider.cc'
source_filename = "../../ui/views/style/typography_provider.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.ui::ResourceBundle::FontDetails" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.views::TypographyProvider" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ui::ResourceBundle" = type { %"class.ui::ResourceBundle::Delegate"*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.4", %"class.std::__1::vector", i32, %"class.std::__1::map", %"class.gfx::Image", %"class.std::__1::map.23", %"class.base::FilePath", %"class.std::__1::unordered_map", i8, i8, %"class.std::__1::basic_string" }
%"class.ui::ResourceBundle::Delegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::Lock"* }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.ui::ResourceHandle"* }
%"class.ui::ResourceHandle" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.4"*, %"class.std::__1::unique_ptr.4"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::unique_ptr.4"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.15", %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { i64 }
%"class.gfx::Image" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageStorage"* }
%"class.gfx::internal::ImageStorage" = type opaque
%"class.std::__1::map.23" = type { %"class.std::__1::__tree.24" }
%"class.std::__1::__tree.24" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.25", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.34", %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.47", %"class.std::__1::__compressed_pair.49", [4 x i8] }>
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36", %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { float }
%"class.gfx::FontList" = type { %class.scoped_refptr.52 }
%class.scoped_refptr.52 = type { %"class.gfx::FontListImpl"* }
%"class.gfx::FontListImpl" = type opaque
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.100", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.108", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.127", %"class.absl::optional.133", i8, [7 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.144", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.170", i8, i8, [3 x i8], %"class.std::__1::vector.175", %"class.std::__1::unique_ptr.182", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.188", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", %"class.base::ObserverList.207", i32, [4 x i8] }>
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr.53", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.59", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.61" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.66", %"class.std::__1::vector.73", %"class.ui::EventHandler"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.68" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type opaque
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map.80" }
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.91" }
%"class.std::__1::map.91" = type { %"class.std::__1::__tree.92" }
%"class.std::__1::__tree.92" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.93", %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.views::View"** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.107 }
%union.anon.107 = type { %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.std::__1::vector.100"* }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.117", %"struct.std::__1::atomic.117", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.115, %class.SkTDArray.116, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.115 = type { i8*, i32, i32 }
%class.SkTDArray.116 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.122 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.117" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.122 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.123", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.123" = type { %"struct.std::__1::__atomic_base.124" }
%"struct.std::__1::__atomic_base.124" = type { %"struct.std::__1::__cxx_atomic_impl.125" }
%"struct.std::__1::__cxx_atomic_impl.125" = type { %"struct.std::__1::__cxx_atomic_base_impl.126" }
%"struct.std::__1::__cxx_atomic_base_impl.126" = type { i8 }
%"struct.std::__1::atomic.117" = type { %"struct.std::__1::__atomic_base.118" }
%"struct.std::__1::__atomic_base.118" = type { %"struct.std::__1::__atomic_base.119" }
%"struct.std::__1::__atomic_base.119" = type { %"struct.std::__1::__cxx_atomic_impl.120" }
%"struct.std::__1::__cxx_atomic_impl.120" = type { %"struct.std::__1::__cxx_atomic_base_impl.121" }
%"struct.std::__1::__cxx_atomic_base_impl.121" = type { i8 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.133" = type { %"class.absl::optional_internal::optional_data.134" }
%"class.absl::optional_internal::optional_data.134" = type { %"class.absl::optional_internal::optional_data_base.135" }
%"class.absl::optional_internal::optional_data_base.135" = type { %"class.absl::optional_internal::optional_data_dtor_base.136" }
%"class.absl::optional_internal::optional_data_dtor_base.136" = type { i8, %union.anon.137 }
%union.anon.137 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.150, float, [4 x i8] }>
%class.sk_sp.150 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.151", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { i8* }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.155", %"class.base::ObserverList.166", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.155" = type { %"class.std::__1::__tree.156" }
%"class.std::__1::__tree.156" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.157", %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"class.base::ObserverList.166" = type <{ %"class.std::__1::vector.59", %"class.base::LinkedList.167", i64, i32, [4 x i8] }>
%"class.base::LinkedList.167" = type { %"class.base::LinkNode.168" }
%"class.base::LinkNode.168" = type { %"class.base::internal::LinkNodeBase" }
%"class.absl::optional.170" = type { %"class.absl::optional_internal::optional_data.171" }
%"class.absl::optional_internal::optional_data.171" = type { %"class.absl::optional_internal::optional_data_base.172" }
%"class.absl::optional_internal::optional_data_base.172" = type { %"class.absl::optional_internal::optional_data_dtor_base.173" }
%"class.absl::optional_internal::optional_data_dtor_base.173" = type { i8, %union.anon.174 }
%union.anon.174 = type { i8 }
%"class.std::__1::vector.175" = type { %"class.std::__1::__vector_base.176" }
%"class.std::__1::__vector_base.176" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.std::__1::vector.191"* }
%"class.std::__1::vector.191" = type opaque
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.views::ViewTargeterDelegate" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.207" = type <{ %"class.std::__1::vector.59", %"class.base::LinkedList.208", i64, i32, [4 x i8] }>
%"class.base::LinkedList.208" = type { %"class.base::LinkNode.209" }
%"class.base::LinkNode.209" = type { %"class.base::internal::LinkNodeBase" }

$_ZN5views18TypographyProviderD2Ev = comdat any

$_ZN5views18TypographyProviderD0Ev = comdat any

@_ZTVN5views18TypographyProviderE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::TypographyProvider"*)* @_ZN5views18TypographyProviderD2Ev to i8*), i8* bitcast (void (%"class.views::TypographyProvider"*)* @_ZN5views18TypographyProviderD0Ev to i8*), i8* bitcast (void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)* @_ZNK5views18TypographyProvider14GetFontDetailsEii to i8*), i8* bitcast (i32 (%"class.views::TypographyProvider"*, %"class.views::View"*, i32, i32)* @_ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii to i8*), i8* bitcast (i32 (%"class.views::TypographyProvider"*, i32, i32)* @_ZNK5views18TypographyProvider13GetLineHeightEii to i8*)] }, align 8
@switch.table._ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii = private unnamed_addr constant [8 x i32] [i32 16, i32 53, i32 53, i32 53, i32 53, i32 96, i32 27, i32 27], align 4
@switch.table._ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii.1 = private unnamed_addr constant [4 x i32] [i32 31, i32 26, i32 28, i32 37], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5views18TypographyProvider14GetFontDetailsEii(%"struct.ui::ResourceBundle::FontDetails"* noalias sret, %"class.views::TypographyProvider"* nocapture readnone, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %0, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 32, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #4
  call void @_ZN2ui14ResourceBundle11FontDetailsC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiN3gfx4Font6WeightE(%"struct.ui::ResourceBundle::FontDetails"* %0, %"class.std::__1::basic_string"* nonnull %5, i32 0, i32 400) #4
  %10 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %16) #5
  br label %17

17:                                               ; preds = %4, %14
  switch i32 %2, label %22 [
    i32 1, label %18
    i32 2, label %20
    i32 8, label %21
  ]

18:                                               ; preds = %17
  store i32 0, i32* %6, align 8
  %19 = call i32 @_ZN5views18TypographyProvider17MediumWeightForUIEv()
  store i32 %19, i32* %7, align 4
  br label %23

20:                                               ; preds = %17
  store i32 3, i32* %6, align 8
  br label %23

21:                                               ; preds = %17
  store i32 2, i32* %6, align 8
  br label %23

22:                                               ; preds = %17
  store i32 0, i32* %6, align 8
  br label %23

23:                                               ; preds = %22, %21, %20, %18
  switch i32 %3, label %35 [
    i32 4104, label %24
    i32 4101, label %25
  ]

24:                                               ; preds = %23
  store i32 700, i32* %7, align 4
  br label %35

25:                                               ; preds = %23
  %26 = icmp eq i32 %2, 0
  br i1 %26, label %27, label %35

27:                                               ; preds = %25
  %28 = call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %29 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle21GetFontListForDetailsERKNS0_11FontDetailsE(%"class.ui::ResourceBundle"* %28, %"struct.ui::ResourceBundle::FontDetails"* dereferenceable(32) %0) #4
  %30 = call i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"* %29) #4
  switch i32 %30, label %32 [
    i32 700, label %33
    i32 800, label %31
    i32 900, label %31
  ]

31:                                               ; preds = %27, %27
  br label %33

32:                                               ; preds = %27
  br label %33

33:                                               ; preds = %27, %31, %32
  %34 = phi i32 [ 700, %32 ], [ 900, %31 ], [ 800, %27 ]
  store i32 %34, i32* %7, align 4
  br label %35

35:                                               ; preds = %24, %23, %33, %25
  ret void
}

declare void @_ZN2ui14ResourceBundle11FontDetailsC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiN3gfx4Font6WeightE(%"struct.ui::ResourceBundle::FontDetails"*, %"class.std::__1::basic_string"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5views18TypographyProvider17MediumWeightForUIEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.ui::ResourceBundle::FontDetails", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %4 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #4
  %5 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #4
  call void @_ZN2ui14ResourceBundle11FontDetailsC1ENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEiN3gfx4Font6WeightE(%"struct.ui::ResourceBundle::FontDetails"* nonnull %1, %"class.std::__1::basic_string"* nonnull %2, i32 0, i32 400) #4
  %6 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle21GetFontListForDetailsERKNS0_11FontDetailsE(%"class.ui::ResourceBundle"* %3, %"struct.ui::ResourceBundle::FontDetails"* nonnull dereferenceable(32) %1) #4
  %7 = call i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"* %6) #4
  %8 = icmp slt i32 %7, 500
  %9 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %0
  %14 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %15) #5
  br label %16

16:                                               ; preds = %0, %13
  %17 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #5
  br label %24

24:                                               ; preds = %16, %21
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #4
  %25 = select i1 %8, i32 500, i32 400
  ret i32 %25
}

declare dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() local_unnamed_addr #1

declare dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle21GetFontListForDetailsERKNS0_11FontDetailsE(%"class.ui::ResourceBundle"*, %"struct.ui::ResourceBundle::FontDetails"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZNK3gfx8FontList13GetFontWeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.gfx::FontList"* @_ZNK5views18TypographyProvider7GetFontEii(%"class.views::TypographyProvider"*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::ResourceBundle::FontDetails", align 8
  %5 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %6 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = bitcast %"class.views::TypographyProvider"* %0 to void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)***
  %8 = load void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)**, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)** %8, i64 2
  %10 = load void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)** %9, align 8
  call void %10(%"struct.ui::ResourceBundle::FontDetails"* nonnull sret %4, %"class.views::TypographyProvider"* %0, i32 %1, i32 %2) #4
  %11 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle21GetFontListForDetailsERKNS0_11FontDetailsE(%"class.ui::ResourceBundle"* %5, %"struct.ui::ResourceBundle::FontDetails"* nonnull dereferenceable(32) %4) #4
  %12 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #5
  br label %19

19:                                               ; preds = %3, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  ret %"class.gfx::FontList"* %11
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii(%"class.views::TypographyProvider"* nocapture readnone, %"class.views::View"* dereferenceable(664), i32, i32) unnamed_addr #0 align 2 {
  %5 = tail call %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"* %1) #4
  switch i32 %3, label %13 [
    i32 4101, label %40
    i32 4102, label %6
    i32 4103, label %9
    i32 4098, label %10
  ]

6:                                                ; preds = %4
  %7 = add i32 %2, -1
  %8 = icmp ult i32 %7, 8
  br i1 %8, label %32, label %40

9:                                                ; preds = %4
  br label %40

10:                                               ; preds = %4
  %11 = icmp eq i32 %2, 6
  %12 = select i1 %11, i32 95, i32 54
  br label %40

13:                                               ; preds = %4
  %14 = icmp eq i32 %2, 1
  br i1 %14, label %40, label %15

15:                                               ; preds = %13
  %16 = icmp eq i32 %2, 3
  %17 = icmp eq i32 %3, 4097
  %18 = and i1 %16, %17
  br i1 %18, label %40, label %19

19:                                               ; preds = %15
  %20 = icmp eq i32 %2, 4
  %21 = or i32 %3, 1
  %22 = icmp eq i32 %21, 4097
  %23 = and i1 %20, %22
  br i1 %23, label %40, label %24

24:                                               ; preds = %19
  %25 = icmp eq i32 %2, 6
  br i1 %25, label %40, label %26

26:                                               ; preds = %24
  %27 = add i32 %2, -7
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %40

29:                                               ; preds = %26
  %30 = add i32 %3, -4097
  %31 = icmp ult i32 %30, 4
  br i1 %31, label %36, label %40

32:                                               ; preds = %6
  %33 = sext i32 %7 to i64
  %34 = getelementptr inbounds [8 x i32], [8 x i32]* @switch.table._ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii, i64 0, i64 %33
  %35 = load i32, i32* %34, align 4
  br label %40

36:                                               ; preds = %29
  %37 = sext i32 %30 to i64
  %38 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZNK5views18TypographyProvider8GetColorERKNS_4ViewEii.1, i64 0, i64 %37
  %39 = load i32, i32* %38, align 4
  br label %40

40:                                               ; preds = %29, %36, %6, %32, %4, %9, %10, %13, %15, %19, %24, %26
  %41 = phi i32 [ 58, %9 ], [ %12, %10 ], [ 20, %4 ], [ 15, %13 ], [ 54, %15 ], [ 2, %19 ], [ 93, %24 ], [ 52, %26 ], [ %35, %32 ], [ 53, %6 ], [ %39, %36 ], [ 26, %29 ]
  %42 = tail call i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"* %5, i32 %41, i32 0) #4
  ret i32 %42
}

declare %"class.ui::NativeTheme"* @_ZNK5views4View14GetNativeThemeEv(%"class.views::View"*) local_unnamed_addr #1

declare i32 @_ZNK2ui11NativeTheme14GetSystemColorENS0_7ColorIdENS0_11ColorSchemeE(%"class.ui::NativeTheme"*, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5views18TypographyProvider13GetLineHeightEii(%"class.views::TypographyProvider"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"struct.ui::ResourceBundle::FontDetails", align 8
  %5 = tail call dereferenceable(216) %"class.ui::ResourceBundle"* @_ZN2ui14ResourceBundle17GetSharedInstanceEv() #4
  %6 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #4
  %7 = bitcast %"class.views::TypographyProvider"* %0 to void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)***
  %8 = load void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)**, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*** %7, align 8
  %9 = getelementptr inbounds void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)** %8, i64 2
  %10 = load void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)*, void (%"struct.ui::ResourceBundle::FontDetails"*, %"class.views::TypographyProvider"*, i32, i32)** %9, align 8
  call void %10(%"struct.ui::ResourceBundle::FontDetails"* nonnull sret %4, %"class.views::TypographyProvider"* %0, i32 %1, i32 %2) #4
  %11 = call dereferenceable(8) %"class.gfx::FontList"* @_ZN2ui14ResourceBundle21GetFontListForDetailsERKNS0_11FontDetailsE(%"class.ui::ResourceBundle"* %5, %"struct.ui::ResourceBundle::FontDetails"* nonnull dereferenceable(32) %4) #4
  %12 = bitcast %"struct.ui::ResourceBundle::FontDetails"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"struct.ui::ResourceBundle::FontDetails", %"struct.ui::ResourceBundle::FontDetails"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #5
  br label %19

19:                                               ; preds = %3, %16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #4
  %20 = call i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"* %11) #4
  ret i32 %20
}

declare i32 @_ZNK3gfx8FontList9GetHeightEv(%"class.gfx::FontList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views18TypographyProviderD2Ev(%"class.views::TypographyProvider"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views18TypographyProviderD0Ev(%"class.views::TypographyProvider"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.views::TypographyProvider"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
