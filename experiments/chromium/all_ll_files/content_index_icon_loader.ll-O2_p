; ModuleID = '../../third_party/blink/renderer/modules/content_index/content_index_icon_loader.cc'
source_filename = "../../third_party/blink/renderer/modules/content_index/content_index_icon_loader.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.133", i32, [4 x i8], %"class.std::__1::unique_ptr.271", %"class.std::__1::unique_ptr.271", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.281", %"class.std::__1::unique_ptr.287", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.299", %"class.std::__1::unique_ptr.305", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.312", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.142", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.198", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.205", %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.219", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.251", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.169" = type { %"struct.std::__1::__atomic_base.170" }
%"struct.std::__1::__atomic_base.170" = type { %"struct.std::__1::__atomic_base.171" }
%"struct.std::__1::__atomic_base.171" = type { %"struct.std::__1::__cxx_atomic_impl.172" }
%"struct.std::__1::__cxx_atomic_impl.172" = type { %"struct.std::__1::__cxx_atomic_base_impl.173" }
%"struct.std::__1::__cxx_atomic_base_impl.173" = type { i64 }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::Worklist.180"* }
%"class.blink::Worklist.180" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::Worklist.187"* }
%"class.blink::Worklist.187" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::Worklist.194"* }
%"class.blink::Worklist.194" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.198" = type { %"class.std::__1::__compressed_pair.199" }
%"class.std::__1::__compressed_pair.199" = type { %"struct.std::__1::__compressed_pair_elem.200" }
%"struct.std::__1::__compressed_pair_elem.200" = type { %"class.blink::Worklist.201"* }
%"class.blink::Worklist.201" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.blink::Worklist.208"* }
%"class.blink::Worklist.208" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::Worklist.215"* }
%"class.blink::Worklist.215" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::Worklist.222"* }
%"class.blink::Worklist.222" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.169" }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.229", %"class.std::__1::__compressed_pair.238", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231", %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { i64 }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { float }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.254", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.263" }
%"class.WTF::Vector.263" = type { %"class.WTF::VectorBuffer.264" }
%"class.WTF::VectorBuffer.264" = type { %"class.WTF::VectorBufferBase.265" }
%"class.WTF::VectorBufferBase.265" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.271" = type { %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.281" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.180"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.187"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.194"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.201"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.208"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.316", i64 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.318" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.299" = type { %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.305" = type { %"class.std::__1::__compressed_pair.306" }
%"class.std::__1::__compressed_pair.306" = type { %"struct.std::__1::__compressed_pair_elem.307" }
%"struct.std::__1::__compressed_pair_elem.307" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.312" = type { %"struct.std::__1::__atomic_base.313" }
%"struct.std::__1::__atomic_base.313" = type { %"struct.std::__1::__cxx_atomic_impl.314" }
%"struct.std::__1::__cxx_atomic_impl.314" = type { %"struct.std::__1::__cxx_atomic_base_impl.315" }
%"struct.std::__1::__cxx_atomic_base_impl.315" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::ContentIndexIconLoader" = type { i8 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.27", i32, i8, [3 x i8], %"class.blink::HeapVector", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.33", %"class.blink::Member.35", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.44", %"class.blink::Member.50", %"class.blink::Member.52", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.6" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.6" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.7" }
%"class.blink::HeapHashMap.7" = type { %"class.WTF::HashMap.10" }
%"class.WTF::HashMap.10" = type { %"class.WTF::HashTable.11" }
%"class.WTF::HashTable.11" = type <{ %"struct.WTF::KeyValuePair.13"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.13" = type { i8*, %"class.blink::Member.330" }
%"class.blink::Member.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.332" }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.18", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.24", i32, i32 }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.16 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.24" = type { %"class.WTF::HashTable.25" }
%"class.WTF::HashTable.25" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.31"*, i32, i32 }
%"class.blink::Member.31" = type opaque
%"class.blink::Member.33" = type { %"class.blink::MemberBase.34" }
%"class.blink::MemberBase.34" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.37", i32, i32 }
%"class.blink::HeapHashMap.37" = type { %"class.WTF::HashMap.40" }
%"class.WTF::HashMap.40" = type { %"class.WTF::HashTable.41" }
%"class.WTF::HashTable.41" = type <{ %"struct.WTF::KeyValuePair.43"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.43" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::mojom::blink::ContentDescription"* }
%"class.blink::mojom::blink::ContentDescription" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"class.WTF::Vector.62", %"class.WTF::String" }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type <{ %"class.blink::mojom::blink::ContentIconDefinition", i32, [4 x i8] }>
%"class.blink::mojom::blink::ContentIconDefinition" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.70 }
%class.scoped_refptr.70 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.71" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__atomic_base.73" }
%"struct.std::__1::__atomic_base.73" = type { %"struct.std::__1::__cxx_atomic_impl.74" }
%"struct.std::__1::__cxx_atomic_impl.74" = type { %"struct.std::__1::__cxx_atomic_base_impl.75" }
%"struct.std::__1::__cxx_atomic_base_impl.75" = type { i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.80" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.78 }
%union.anon.78 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.GURL* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"*, %"class.std::__1::__compressed_pair.109" }
%"struct.blink::Manifest::ImageResource" = type { %class.GURL, %"class.std::__1::basic_string.86", %"class.std::__1::vector.95", %"class.std::__1::vector.102" }
%"class.std::__1::basic_string.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.89 }
%union.anon.89 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.95" = type { %"class.std::__1::__vector_base.96" }
%"class.std::__1::__vector_base.96" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.gfx::Size"* }
%"class.std::__1::vector.102" = type { %"class.std::__1::__vector_base.103" }
%"class.std::__1::__vector_base.103" = type { i32*, i32*, %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i32* }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.blink::Manifest::ImageResource"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.323" }
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.blink::KURL"* }
%"class.blink::WebString" = type { %class.scoped_refptr.14 }
%"class.blink::WebVector.334" = type { %"class.std::__1::vector.95" }
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.16, %class.scoped_refptr.16, %class.scoped_refptr.16, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.350, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.368", %"class.absl::optional.373", %"class.absl::optional.388", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.398", %"class.absl::optional.388", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.388", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.398", %"class.absl::optional.403", i8, %class.scoped_refptr.408 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.345" }
%"class.WTF::HashMap.345" = type { %"class.WTF::HashTable.346" }
%"class.WTF::HashTable.346" = type <{ %"struct.WTF::KeyValuePair.349"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.349" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.350 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.351", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector.352", %class.scoped_refptr.366, i8, %"class.url::Origin" }
%"class.base::RefCounted.351" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector.352" = type { %"class.std::__1::vector.353" }
%"class.std::__1::vector.353" = type { %"class.std::__1::__vector_base.354" }
%"class.std::__1::__vector_base.354" = type { %"class.std::__1::unique_ptr.355"*, %"class.std::__1::unique_ptr.355"*, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::unique_ptr.355"* }
%class.scoped_refptr.366 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.367", [4 x i8] }>
%"class.base::RefCountedThreadSafe.367" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.368" = type { %"class.absl::optional_internal::optional_data.369" }
%"class.absl::optional_internal::optional_data.369" = type { %"class.absl::optional_internal::optional_data_base.370" }
%"class.absl::optional_internal::optional_data_base.370" = type { %"class.absl::optional_internal::optional_data_dtor_base.371" }
%"class.absl::optional_internal::optional_data_dtor_base.371" = type { i8, %union.anon.372 }
%union.anon.372 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.373" = type { %"class.absl::optional_internal::optional_data.374" }
%"class.absl::optional_internal::optional_data.374" = type { %"class.absl::optional_internal::optional_data_base.375" }
%"class.absl::optional_internal::optional_data_base.375" = type { %"class.absl::optional_internal::optional_data_dtor_base.376" }
%"class.absl::optional_internal::optional_data_dtor_base.376" = type { i8, %union.anon.377 }
%union.anon.377 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.378", %"class.WTF::Vector.383", %"class.WTF::String" }
%"class.WTF::Vector.378" = type { %"class.WTF::VectorBuffer.379" }
%"class.WTF::VectorBuffer.379" = type { %"class.WTF::VectorBufferBase.380" }
%"class.WTF::VectorBufferBase.380" = type { %class.scoped_refptr.16*, i32, i32 }
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"class.WTF::String"*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.393", %"class.absl::optional.393" }
%"class.absl::optional.393" = type { %"class.absl::optional_internal::optional_data.394" }
%"class.absl::optional_internal::optional_data.394" = type { %"class.absl::optional_internal::optional_data_base.395" }
%"class.absl::optional_internal::optional_data_base.395" = type { %"class.absl::optional_internal::optional_data_dtor_base.396" }
%"class.absl::optional_internal::optional_data_dtor_base.396" = type { i8, %union.anon.397 }
%union.anon.397 = type { %"class.base::TimeDelta" }
%"class.absl::optional.388" = type { %"class.absl::optional_internal::optional_data.389" }
%"class.absl::optional_internal::optional_data.389" = type { %"class.absl::optional_internal::optional_data_base.390" }
%"class.absl::optional_internal::optional_data_base.390" = type { %"class.absl::optional_internal::optional_data_dtor_base.391" }
%"class.absl::optional_internal::optional_data_dtor_base.391" = type { i8, %union.anon.392 }
%union.anon.392 = type { %"class.WTF::String" }
%"class.absl::optional.398" = type { %"class.absl::optional_internal::optional_data.399" }
%"class.absl::optional_internal::optional_data.399" = type { %"class.absl::optional_internal::optional_data_base.400" }
%"class.absl::optional_internal::optional_data_base.400" = type { %"class.absl::optional_internal::optional_data_dtor_base.401" }
%"class.absl::optional_internal::optional_data_dtor_base.401" = type { i8, %union.anon.402 }
%union.anon.402 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.403" = type { %"class.absl::optional_internal::optional_data.404" }
%"class.absl::optional_internal::optional_data.404" = type { %"class.absl::optional_internal::optional_data_base.405" }
%"class.absl::optional_internal::optional_data_base.405" = type { %"class.absl::optional_internal::optional_data_dtor_base.406" }
%"class.absl::optional_internal::optional_data_dtor_base.406" = type { i8, %union.anon.407 }
%union.anon.407 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.408 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.409", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.409" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.410" }
%"class.std::__1::vector.410" = type { %"class.std::__1::__vector_base.411" }
%"class.std::__1::__vector_base.411" = type { i32*, i32*, %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.417, %"class.mojo::PendingRemote.418" }
%class.scoped_refptr.417 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.418" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.absl::optional.437" = type { %"class.absl::optional_internal::optional_data.438" }
%"class.absl::optional_internal::optional_data.438" = type { %"class.absl::optional_internal::optional_data_base.439" }
%"class.absl::optional_internal::optional_data_base.439" = type { %"class.absl::optional_internal::optional_data_dtor_base.440" }
%"class.absl::optional_internal::optional_data_dtor_base.440" = type { i8, %union.anon.441 }
%union.anon.441 = type { %"class.gfx::Size" }
%"class.base::OnceCallback.329" = type { %"class.base::internal::CallbackBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.WTF::Vector.117"* }
%"class.WTF::Vector.117" = type { %"class.WTF::VectorBuffer.118" }
%"class.WTF::VectorBuffer.118" = type { %"class.WTF::VectorBufferBase.119" }
%"class.WTF::VectorBufferBase.119" = type { %class.SkBitmap*, i32, i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.126 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.120, i32, i32 }
%class.sk_sp.120 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.71" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.121" }
%"struct.std::__1::atomic.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__atomic_base.123" }
%"struct.std::__1::__atomic_base.123" = type { %"struct.std::__1::__cxx_atomic_impl.124" }
%"struct.std::__1::__cxx_atomic_impl.124" = type { %"struct.std::__1::__cxx_atomic_base_impl.125" }
%"struct.std::__1::__cxx_atomic_base_impl.125" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.126 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.132" = type { %"class.base::internal::CallbackBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ContentIndexIconLoader"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.90 }
%struct.anon.90 = type { %"struct.std::__1::__padding.91", i8 }
%"struct.std::__1::__padding.91" = type { [1 x i8] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.598", %"class.std::__1::__tuple_leaf.599", %"class.std::__1::__tuple_leaf.600" }
%"class.std::__1::__tuple_leaf" = type { %"class.blink::Persistent" }
%"class.std::__1::__tuple_leaf.598" = type { %"class.mojo::StructPtr" }
%"class.std::__1::__tuple_leaf.599" = type { %"class.std::__1::unique_ptr.114" }
%"class.std::__1::__tuple_leaf.600" = type { %"class.base::OnceCallback" }
%"class.blink::ThreadedIconLoader" = type <{ %"class.blink::ThreadableLoaderClient", %"class.blink::Member.421", %class.scoped_refptr.423, %"class.absl::optional.437", [4 x i8], %class.SkBitmap, %"class.base::OnceCallback.329", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.blink::ThreadableLoaderClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::ThreadableLoader"* }
%"class.blink::ThreadableLoader" = type <{ %"class.blink::RawResourceClient.base", [7 x i8], %"class.blink::Member.546", %"class.blink::Member", %"class.blink::Member.548", %"struct.blink::ResourceLoaderOptions", i32, [4 x i8], %"class.base::TimeDelta", %"class.blink::HeapTaskRunnerTimer", %"class.base::TimeTicks", %"class.blink::RawResourceClientStateChecker", [4 x i8] }>
%"class.blink::RawResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.444", i8 }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.448", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.468", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.514", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.536", %"class.blink::ResourceResponse", %class.scoped_refptr.423, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.448" = type { %"class.absl::optional_internal::optional_data.449" }
%"class.absl::optional_internal::optional_data.449" = type { %"class.absl::optional_internal::optional_data_base.450" }
%"class.absl::optional_internal::optional_data_base.450" = type { %"class.absl::optional_internal::optional_data_dtor_base.451" }
%"class.absl::optional_internal::optional_data_dtor_base.451" = type { i8, %union.anon.452 }
%union.anon.452 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.453", i8, %"class.absl::optional.458", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.453" = type { %"class.absl::optional_internal::optional_data.454" }
%"class.absl::optional_internal::optional_data.454" = type { %"class.absl::optional_internal::optional_data_base.455" }
%"class.absl::optional_internal::optional_data_base.455" = type { %"class.absl::optional_internal::optional_data_dtor_base.456" }
%"class.absl::optional_internal::optional_data_dtor_base.456" = type { i8, [7 x i8], %union.anon.457 }
%union.anon.457 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.458" = type { %"class.absl::optional_internal::optional_data.459" }
%"class.absl::optional_internal::optional_data.459" = type { %"class.absl::optional_internal::optional_data_base.460" }
%"class.absl::optional_internal::optional_data_base.460" = type { %"class.absl::optional_internal::optional_data_dtor_base.461" }
%"class.absl::optional_internal::optional_data_dtor_base.461" = type { i8, %union.anon.462 }
%union.anon.462 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.463", %"class.WTF::Vector.383" }
%"class.WTF::Vector.463" = type { %"class.WTF::VectorBuffer.464" }
%"class.WTF::VectorBuffer.464" = type { %"class.WTF::VectorBufferBase.465" }
%"class.WTF::VectorBufferBase.465" = type { i32*, i32, i32 }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.508" }
%"class.WTF::HashMap.508" = type { %"class.WTF::HashTable.509" }
%"class.WTF::HashTable.509" = type <{ %"struct.WTF::KeyValuePair.511"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.511" = type <{ %"class.blink::WeakMember.512", i32, [4 x i8] }>
%"class.blink::WeakMember.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.444", i8, [7 x i8] }>
%"class.blink::HeapHashSet.514" = type { %"class.WTF::HashSet.517" }
%"class.WTF::HashSet.517" = type { %"class.WTF::HashTable.518" }
%"class.WTF::HashTable.518" = type <{ %"class.blink::WeakMember.520"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.520" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.471" }
%"class.base::time_internal::TimeBase.471" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.472", %class.scoped_refptr.487, %class.scoped_refptr.488, %"struct.blink::CacheControlHeader", %"class.absl::optional.393", %"class.absl::optional.489", %"class.absl::optional.489", %"class.absl::optional.489", i64, %"class.blink::KURL", %"class.WTF::Vector.494", %"class.WTF::String", %"class.WTF::Vector.383", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.398", %"class.WTF::Vector.383", %"class.blink::KURL", %"class.absl::optional.499" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.472" = type { %"class.absl::optional_internal::optional_data.473" }
%"class.absl::optional_internal::optional_data.473" = type { %"class.absl::optional_internal::optional_data_base.474" }
%"class.absl::optional_internal::optional_data_base.474" = type { %"class.absl::optional_internal::optional_data_dtor_base.475" }
%"class.absl::optional_internal::optional_data_dtor_base.475" = type { i8, %union.anon.476 }
%union.anon.476 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.383", %"class.WTF::String", i64, i64, %"class.WTF::Vector.477", %"class.WTF::Vector.482" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.487 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.488 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.489" = type { %"class.absl::optional_internal::optional_data.490" }
%"class.absl::optional_internal::optional_data.490" = type { %"class.absl::optional_internal::optional_data_base.491" }
%"class.absl::optional_internal::optional_data_base.491" = type { %"class.absl::optional_internal::optional_data_dtor_base.492" }
%"class.absl::optional_internal::optional_data_dtor_base.492" = type { i8, %union.anon.493 }
%union.anon.493 = type { %"class.base::Time" }
%"class.WTF::Vector.494" = type { %"class.WTF::VectorBuffer.495" }
%"class.WTF::VectorBuffer.495" = type { %"class.WTF::VectorBufferBase.496" }
%"class.WTF::VectorBufferBase.496" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.499" = type { %"class.absl::optional_internal::optional_data.500" }
%"class.absl::optional_internal::optional_data.500" = type { %"class.absl::optional_internal::optional_data_base.501" }
%"class.absl::optional_internal::optional_data_base.501" = type { %"class.absl::optional_internal::optional_data_dtor_base.502" }
%"class.absl::optional_internal::optional_data_dtor_base.502" = type { i8, %union.anon.503 }
%union.anon.503 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.538", %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.538" = type { %"struct.std::__1::__compressed_pair_elem.539" }
%"struct.std::__1::__compressed_pair_elem.539" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::ThreadableLoaderClient"* }
%"class.blink::Member.548" = type { %"class.blink::MemberBase.549" }
%"class.blink::MemberBase.549" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.521", i8, i8, %class.scoped_refptr.526, %class.scoped_refptr.531, %class.scoped_refptr.533 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.521" = type { %"class.WTF::HashTable.522" }
%"class.WTF::HashTable.522" = type <{ %"struct.std::__1::pair.525"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.525" = type opaque
%class.scoped_refptr.526 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.527", i32, i32, %"class.blink::Persistent.529" }
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.529" = type { %"class.blink::PersistentBase.530" }
%"class.blink::PersistentBase.530" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type opaque
%class.scoped_refptr.531 = type { %"class.base::RefCountedData.532"* }
%"class.base::RefCountedData.532" = type opaque
%class.scoped_refptr.533 = type { %"class.base::RefCountedData.534"* }
%"class.base::RefCountedData.534" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.554", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.550, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.550 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.551" }>
%"class.base::RefCountedThreadSafe.551" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.552 }
%class.scoped_refptr.552 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.553", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.553" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.121" }
%"class.blink::WeakMember.554" = type { %"class.blink::MemberBase.422" }
%"class.blink::RawResourceClientStateChecker" = type { i32 }
%class.scoped_refptr.423 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.424", i64, %"class.WTF::Vector.426", %"class.WTF::Vector.431" }
%"class.WTF::RefCounted.424" = type { %"class.base::RefCounted.425" }
%"class.base::RefCounted.425" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.426" = type { %"class.WTF::VectorBuffer.427" }
%"class.WTF::VectorBuffer.427" = type { %"class.WTF::VectorBufferBase.428" }
%"class.WTF::VectorBufferBase.428" = type { i8*, i32, i32 }
%"class.WTF::Vector.431" = type { %"class.WTF::VectorBuffer.432" }
%"class.WTF::VectorBuffer.432" = type { %"class.WTF::VectorBufferBase.433" }
%"class.WTF::VectorBufferBase.433" = type { %"class.std::__1::unique_ptr.434"*, i32, i32 }
%"class.std::__1::unique_ptr.434" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZNSt3__16vectorIN5blink8Manifest13ImageResourceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv = comdat any

$_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22ContentIndexIconLoaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_22ContentIndexIconLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSD_18PartitionAllocatorEEENSB_14default_deleteISH_EEEENS_12OnceCallbackIFvSA_SH_EEEEJNS3_10PersistentIS4_EESA_SK_SN_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS2_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSC_18PartitionAllocatorEEENSA_14default_deleteISG_EEEENS_12OnceCallbackIFvS9_SG_EEEEJNS2_10PersistentIS3_EES9_SJ_SM_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEED2Ev = comdat any

$_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEEC2IJLm0ELm1ELm2ELm3EEJS6_SC_SL_SP_EJEJEJS6_SC_SL_SP_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENST_IJDpT2_EEEDpOT3_ = comdat any

$_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_ = comdat any

$_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink18ThreadedIconLoaderE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [97 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<SkBitmap, 0, WTF::PartitionAllocator>]\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = SkBitmap]\00", align 1

@_ZN5blink22ContentIndexIconLoaderC1Ev = hidden unnamed_addr alias void (%"class.blink::ContentIndexIconLoader"*), void (%"class.blink::ContentIndexIconLoader"*)* @_ZN5blink22ContentIndexIconLoaderC2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink22ContentIndexIconLoaderC2Ev(%"class.blink::ContentIndexIconLoader"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ContentIndexIconLoader5StartEPNS_16ExecutionContextEN4mojo9StructPtrINS_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENS9_18PartitionAllocatorEEEN4base12OnceCallbackIFvS8_NSA_I8SkBitmapLj0ESD_EEEEE(%"class.blink::ContentIndexIconLoader"*, %"class.blink::ExecutionContext"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.54"* nocapture readonly dereferenceable(16), %"class.base::OnceCallback"*) local_unnamed_addr #1 align 2 {
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"struct.blink::Manifest::ImageResource", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.std::__1::basic_string.86", align 8
  %12 = alloca %"class.blink::WebString", align 8
  %13 = alloca %"class.blink::WebVector.334", align 8
  %14 = alloca %"class.blink::WebString", align 8
  %15 = alloca %"class.blink::ResourceRequest", align 8
  %16 = alloca %"class.absl::optional.437", align 4
  %17 = alloca %"class.base::OnceCallback.329", align 8
  %18 = alloca %"class.blink::WebVector", align 8
  %19 = alloca %"class.std::__1::unique_ptr.114", align 8
  %20 = alloca %"class.base::RepeatingCallback", align 8
  %21 = alloca %"class.base::OnceCallback.132", align 8
  %22 = alloca %"class.blink::Persistent", align 8
  %23 = alloca %"class.blink::KURL", align 8
  %24 = alloca %"class.blink::WebVector", align 8
  %25 = alloca %"class.blink::KURL", align 8
  %26 = alloca %"class.base::OnceCallback.329", align 8
  %27 = bitcast %"class.blink::WebVector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #11
  %28 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %18, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %18, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %18, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %31 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %31, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #11, !alias.scope !2
  %33 = getelementptr inbounds %"class.blink::mojom::blink::ContentDescription", %"class.blink::mojom::blink::ContentDescription"* %32, i64 0, i32 4, i32 0, i32 0, i32 0
  %34 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %33, align 8, !noalias !2
  %35 = getelementptr inbounds %"class.blink::mojom::blink::ContentDescription", %"class.blink::mojom::blink::ContentDescription"* %32, i64 0, i32 4, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4, !noalias !2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %285, label %40

40:                                               ; preds = %5
  %41 = bitcast %"struct.blink::Manifest::ImageResource"* %8 to i8*
  %42 = bitcast %class.GURL* %9 to i8*
  %43 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  %44 = bitcast %"class.blink::ExecutionContext"* %1 to void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)***
  %45 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string.86"* %11 to i8*
  %47 = bitcast %"class.blink::WebString"* %12 to i8*
  %48 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 1
  %49 = bitcast %"class.std::__1::basic_string.86"* %48 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %49, i64 0, i32 1, i32 1
  %51 = bitcast %"class.std::__1::basic_string.86"* %48 to i8**
  %52 = bitcast %"class.std::__1::basic_string.86"* %48 to i8*
  %53 = bitcast %"class.std::__1::basic_string.86"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  %55 = bitcast %"class.std::__1::basic_string.86"* %11 to i16*
  %56 = bitcast %"class.blink::WebVector.334"* %13 to i8*
  %57 = bitcast %"class.blink::WebString"* %14 to i8*
  %58 = getelementptr inbounds %"class.blink::WebVector.334", %"class.blink::WebVector.334"* %13, i64 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.blink::WebVector.334", %"class.blink::WebVector.334"* %13, i64 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 2
  %61 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 2, i32 0, i32 1
  %62 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %63 = bitcast %"class.gfx::Size"** %61 to i64*
  %64 = bitcast %"class.std::__1::vector.95"* %60 to i64*
  %65 = bitcast %"class.gfx::Size"** %62 to i64*
  %66 = getelementptr inbounds %"class.std::__1::vector.95", %"class.std::__1::vector.95"* %60, i64 0, i32 0, i32 0
  %67 = bitcast %"class.gfx::Size"** %59 to i64*
  %68 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 3
  %69 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 3, i32 0, i32 1
  %70 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %8, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast i32** %69 to i64*
  %72 = bitcast %"class.std::__1::vector.102"* %68 to i64*
  %73 = bitcast i32** %70 to i64*
  %74 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %18, i64 0, i32 0
  %75 = bitcast %"struct.blink::Manifest::ImageResource"** %29 to i64*
  br label %76

76:                                               ; preds = %282, %40
  %77 = phi %"class.mojo::InlinedStructPtr"* [ %34, %40 ], [ %283, %282 ]
  call void @llvm.lifetime.start.p0i8(i64 192, i8* nonnull %41) #11, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 192, i1 false) #11, !noalias !2
  call void @_ZN5blink8Manifest13ImageResourceC1Ev(%"struct.blink::Manifest::ImageResource"* nonnull %8) #11
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %42) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %43) #11, !noalias !2
  %78 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %77, i64 0, i32 0, i32 0
  %79 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)**, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*** %44, align 8, !noalias !2
  %80 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %79, i64 20
  %81 = load void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)*, void (%"class.blink::KURL"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*)** %80, align 8
  call void %81(%"class.blink::KURL"* nonnull sret %10, %"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %78) #11
  call void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* nonnull sret %9, %"class.blink::KURL"* nonnull %10) #11
  %82 = call dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL* nonnull %45, %class.GURL* nonnull dereferenceable(120) %9) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %43) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %42) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #11, !noalias !2
  %83 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %77, i64 0, i32 0, i32 2
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %12, %"class.WTF::String"* dereferenceable(8) %83) #11
  %84 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* nonnull %12) #11, !noalias !5
  %85 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* nonnull %12) #11, !noalias !5
  %86 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* nonnull %12) #11, !noalias !5
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.86"* nonnull sret %11, i64 %84, i8* %85, i16* %86) #11
  %87 = load i8, i8* %50, align 1, !noalias !2
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %76
  %90 = load i8*, i8** %51, align 8, !noalias !2
  call void @_ZdlPv(i8* %90) #12
  br label %91

91:                                               ; preds = %89, %76
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %46, i64 24, i1 false) #11, !noalias !2
  store i8 0, i8* %54, align 1, !noalias !2
  store i16 0, i16* %55, align 8, !noalias !2
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #11, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %56) #11, !noalias !2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11, !noalias !2
  %92 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %77, i64 0, i32 0, i32 1
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %14, %"class.WTF::String"* dereferenceable(8) %92) #11
  call void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector.334"* nonnull sret %13, %"class.blink::WebString"* nonnull dereferenceable(8) %14) #11
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11, !noalias !2
  %93 = load %"class.gfx::Size"*, %"class.gfx::Size"** %58, align 8, !noalias !2
  %94 = load %"class.gfx::Size"*, %"class.gfx::Size"** %59, align 8, !noalias !2
  %95 = icmp eq %"class.gfx::Size"* %93, %94
  br i1 %95, label %98, label %110

96:                                               ; preds = %168
  %97 = load %"class.gfx::Size"*, %"class.gfx::Size"** %58, align 8, !noalias !2
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi %"class.gfx::Size"* [ %97, %96 ], [ %93, %91 ]
  %100 = icmp eq %"class.gfx::Size"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = ptrtoint %"class.gfx::Size"* %99 to i64
  store i64 %102, i64* %67, align 8, !noalias !2
  %103 = bitcast %"class.gfx::Size"* %99 to i8*
  call void @_ZdlPv(i8* %103) #12
  br label %104

104:                                              ; preds = %101, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %56) #11, !noalias !2
  %105 = load %"class.gfx::Size"*, %"class.gfx::Size"** %66, align 8, !noalias !2
  %106 = load %"class.gfx::Size"*, %"class.gfx::Size"** %61, align 8, !noalias !2
  %107 = icmp eq %"class.gfx::Size"* %105, %106
  %108 = ptrtoint %"class.gfx::Size"* %106 to i64
  %109 = ptrtoint %"class.gfx::Size"* %105 to i64
  br i1 %107, label %171, label %223

110:                                              ; preds = %91, %168
  %111 = phi %"class.gfx::Size"* [ %169, %168 ], [ %93, %91 ]
  %112 = load %"class.gfx::Size"*, %"class.gfx::Size"** %61, align 8, !noalias !2
  %113 = load %"class.gfx::Size"*, %"class.gfx::Size"** %62, align 8, !noalias !2
  %114 = icmp ult %"class.gfx::Size"* %112, %113
  %115 = ptrtoint %"class.gfx::Size"* %113 to i64
  br i1 %114, label %116, label %122

116:                                              ; preds = %110
  %117 = bitcast %"class.gfx::Size"* %111 to i64*
  %118 = bitcast %"class.gfx::Size"* %112 to i64*
  %119 = load i64, i64* %117, align 4
  store i64 %119, i64* %118, align 4
  %120 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %112, i64 1
  %121 = ptrtoint %"class.gfx::Size"* %120 to i64
  store i64 %121, i64* %63, align 8, !noalias !2
  br label %168

122:                                              ; preds = %110
  %123 = ptrtoint %"class.gfx::Size"* %112 to i64
  %124 = load i64, i64* %64, align 8, !noalias !2
  %125 = sub i64 %123, %124
  %126 = ashr exact i64 %125, 3
  %127 = add nsw i64 %126, 1
  %128 = icmp ugt i64 %127, 2305843009213693951
  br i1 %128, label %129, label %131

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::vector.95"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %130) #13
  unreachable

131:                                              ; preds = %122
  %132 = sub i64 %115, %124
  %133 = ashr exact i64 %132, 3
  %134 = icmp ult i64 %133, 1152921504606846975
  br i1 %134, label %135, label %143

135:                                              ; preds = %131
  %136 = ashr exact i64 %132, 2
  %137 = icmp ult i64 %136, %127
  %138 = select i1 %137, i64 %127, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 2305843009213693951
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  call void @abort() #13
  unreachable

143:                                              ; preds = %140, %131
  %144 = phi i64 [ %138, %140 ], [ 2305843009213693951, %131 ]
  %145 = shl i64 %144, 3
  %146 = call i8* @_Znwm(i64 %145) #12
  %147 = bitcast i8* %146 to %"class.gfx::Size"*
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi i8* [ %146, %143 ], [ null, %135 ]
  %151 = phi %"class.gfx::Size"* [ %147, %143 ], [ null, %135 ]
  %152 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %151, i64 %126
  %153 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %151, i64 %149
  %154 = ptrtoint %"class.gfx::Size"* %153 to i64
  %155 = bitcast %"class.gfx::Size"* %111 to i64*
  %156 = bitcast %"class.gfx::Size"* %152 to i64*
  %157 = load i64, i64* %155, align 4
  store i64 %157, i64* %156, align 4, !noalias !2
  %158 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %152, i64 1
  %159 = ptrtoint %"class.gfx::Size"* %158 to i64
  %160 = ptrtoint %"class.gfx::Size"* %151 to i64
  %161 = icmp sgt i64 %125, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %148
  %163 = inttoptr i64 %124 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %163, i64 %125, i1 false) #11
  br label %164

164:                                              ; preds = %162, %148
  store i64 %160, i64* %64, align 8, !noalias !2
  store i64 %159, i64* %63, align 8, !noalias !2
  store i64 %154, i64* %65, align 8, !noalias !2
  %165 = icmp eq i64 %124, 0
  br i1 %165, label %168, label %166

166:                                              ; preds = %164
  %167 = inttoptr i64 %124 to i8*
  call void @_ZdlPv(i8* %167) #12
  br label %168

168:                                              ; preds = %166, %164, %116
  %169 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %111, i64 1
  %170 = icmp eq %"class.gfx::Size"* %169, %94
  br i1 %170, label %96, label %110

171:                                              ; preds = %104
  %172 = load %"class.gfx::Size"*, %"class.gfx::Size"** %62, align 8, !noalias !2
  %173 = icmp ult %"class.gfx::Size"* %105, %172
  %174 = ptrtoint %"class.gfx::Size"* %172 to i64
  br i1 %173, label %175, label %180

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %105, i64 0, i32 0
  store i32 0, i32* %176, align 4
  %177 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %105, i64 0, i32 1
  store i32 0, i32* %177, align 4
  %178 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %105, i64 1
  %179 = ptrtoint %"class.gfx::Size"* %178 to i64
  store i64 %179, i64* %63, align 8, !noalias !2
  br label %223

180:                                              ; preds = %171
  %181 = sub i64 %108, %109
  %182 = ashr exact i64 %181, 3
  %183 = add nsw i64 %182, 1
  %184 = icmp ugt i64 %183, 2305843009213693951
  br i1 %184, label %185, label %187

185:                                              ; preds = %180
  %186 = bitcast %"class.std::__1::vector.95"* %60 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %186) #13
  unreachable

187:                                              ; preds = %180
  %188 = sub i64 %174, %109
  %189 = ashr exact i64 %188, 3
  %190 = icmp ult i64 %189, 1152921504606846975
  br i1 %190, label %191, label %199

191:                                              ; preds = %187
  %192 = ashr exact i64 %188, 2
  %193 = icmp ult i64 %192, %183
  %194 = select i1 %193, i64 %183, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 2305843009213693951
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  call void @abort() #13
  unreachable

199:                                              ; preds = %196, %187
  %200 = phi i64 [ %194, %196 ], [ 2305843009213693951, %187 ]
  %201 = shl i64 %200, 3
  %202 = call i8* @_Znwm(i64 %201) #12
  %203 = bitcast i8* %202 to %"class.gfx::Size"*
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi i8* [ %202, %199 ], [ null, %191 ]
  %207 = phi %"class.gfx::Size"* [ %203, %199 ], [ null, %191 ]
  %208 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %207, i64 %182
  %209 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %207, i64 %205
  %210 = ptrtoint %"class.gfx::Size"* %209 to i64
  %211 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %208, i64 0, i32 0
  store i32 0, i32* %211, align 4, !noalias !2
  %212 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %207, i64 %182, i32 1
  store i32 0, i32* %212, align 4, !noalias !2
  %213 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %208, i64 1
  %214 = ptrtoint %"class.gfx::Size"* %213 to i64
  %215 = ptrtoint %"class.gfx::Size"* %207 to i64
  %216 = icmp sgt i64 %181, 0
  br i1 %216, label %217, label %219

217:                                              ; preds = %204
  %218 = bitcast %"class.gfx::Size"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %206, i8* align 4 %218, i64 %181, i1 false) #11
  br label %219

219:                                              ; preds = %217, %204
  store i64 %215, i64* %64, align 8, !noalias !2
  store i64 %214, i64* %63, align 8, !noalias !2
  store i64 %210, i64* %65, align 8, !noalias !2
  %220 = icmp eq %"class.gfx::Size"* %105, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %219
  %222 = bitcast %"class.gfx::Size"* %105 to i8*
  call void @_ZdlPv(i8* %222) #12
  br label %223

223:                                              ; preds = %221, %219, %175, %104
  %224 = load i32*, i32** %69, align 8, !noalias !2
  %225 = load i32*, i32** %70, align 8, !noalias !2
  %226 = icmp ult i32* %224, %225
  %227 = ptrtoint i32* %225 to i64
  br i1 %226, label %228, label %231

228:                                              ; preds = %223
  store i32 0, i32* %224, align 4
  %229 = getelementptr inbounds i32, i32* %224, i64 1
  %230 = ptrtoint i32* %229 to i64
  store i64 %230, i64* %71, align 8, !noalias !2
  br label %274

231:                                              ; preds = %223
  %232 = ptrtoint i32* %224 to i64
  %233 = load i64, i64* %72, align 8, !noalias !2
  %234 = sub i64 %232, %233
  %235 = ashr exact i64 %234, 2
  %236 = add nsw i64 %235, 1
  %237 = icmp ugt i64 %236, 4611686018427387903
  br i1 %237, label %238, label %240

238:                                              ; preds = %231
  %239 = bitcast %"class.std::__1::vector.102"* %68 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %239) #13
  unreachable

240:                                              ; preds = %231
  %241 = sub i64 %227, %233
  %242 = ashr exact i64 %241, 2
  %243 = icmp ult i64 %242, 2305843009213693951
  br i1 %243, label %244, label %252

244:                                              ; preds = %240
  %245 = ashr exact i64 %241, 1
  %246 = icmp ult i64 %245, %236
  %247 = select i1 %246, i64 %236, i64 %245
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %257, label %249

249:                                              ; preds = %244
  %250 = icmp ugt i64 %247, 4611686018427387903
  br i1 %250, label %251, label %252

251:                                              ; preds = %249
  call void @abort() #13
  unreachable

252:                                              ; preds = %249, %240
  %253 = phi i64 [ %247, %249 ], [ 4611686018427387903, %240 ]
  %254 = shl i64 %253, 2
  %255 = call i8* @_Znwm(i64 %254) #12
  %256 = bitcast i8* %255 to i32*
  br label %257

257:                                              ; preds = %252, %244
  %258 = phi i64 [ %253, %252 ], [ 0, %244 ]
  %259 = phi i8* [ %255, %252 ], [ null, %244 ]
  %260 = phi i32* [ %256, %252 ], [ null, %244 ]
  %261 = getelementptr inbounds i32, i32* %260, i64 %235
  %262 = getelementptr inbounds i32, i32* %260, i64 %258
  %263 = ptrtoint i32* %262 to i64
  store i32 0, i32* %261, align 4, !noalias !2
  %264 = getelementptr inbounds i32, i32* %261, i64 1
  %265 = ptrtoint i32* %264 to i64
  %266 = ptrtoint i32* %260 to i64
  %267 = icmp sgt i64 %234, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %257
  %269 = inttoptr i64 %233 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %259, i8* align 4 %269, i64 %234, i1 false) #11
  br label %270

270:                                              ; preds = %268, %257
  store i64 %266, i64* %72, align 8, !noalias !2
  store i64 %265, i64* %71, align 8, !noalias !2
  store i64 %263, i64* %73, align 8, !noalias !2
  %271 = icmp eq i64 %233, 0
  br i1 %271, label %274, label %272

272:                                              ; preds = %270
  %273 = inttoptr i64 %233 to i8*
  call void @_ZdlPv(i8* %273) #12
  br label %274

274:                                              ; preds = %272, %270, %228
  %275 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %29, align 8, !alias.scope !2
  %276 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %30, align 8, !alias.scope !2
  %277 = icmp ult %"struct.blink::Manifest::ImageResource"* %275, %276
  br i1 %277, label %278, label %281

278:                                              ; preds = %274
  call void @_ZN5blink8Manifest13ImageResourceC1ERKS1_(%"struct.blink::Manifest::ImageResource"* %275, %"struct.blink::Manifest::ImageResource"* nonnull dereferenceable(192) %8) #11
  %279 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %275, i64 1
  %280 = ptrtoint %"struct.blink::Manifest::ImageResource"* %279 to i64
  store i64 %280, i64* %75, align 8, !alias.scope !2
  br label %282

281:                                              ; preds = %274
  call void @_ZNSt3__16vectorIN5blink8Manifest13ImageResourceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %74, %"struct.blink::Manifest::ImageResource"* nonnull dereferenceable(192) %8) #11
  br label %282

282:                                              ; preds = %281, %278
  call void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 192, i8* nonnull %41) #11, !noalias !2
  %283 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %77, i64 1
  %284 = icmp eq %"class.mojo::InlinedStructPtr"* %283, %38
  br i1 %284, label %285, label %76

285:                                              ; preds = %282, %5
  %286 = bitcast %"class.std::__1::unique_ptr.114"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %286) #11
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114"* %19, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::Vector.117"* inttoptr (i64 -6148914691236517206 to %"class.WTF::Vector.117"*), %"class.WTF::Vector.117"** %287, align 8
  %288 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #11
  %289 = bitcast i8* %288 to %"class.WTF::Vector.117"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %288, i8 0, i64 16, i1 false) #11
  %290 = bitcast %"class.std::__1::unique_ptr.114"* %19 to i8**
  store i8* %288, i8** %290, align 8
  %291 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %3, i64 0, i32 0, i32 0, i32 2
  %292 = load i32, i32* %291, align 4
  %293 = getelementptr inbounds i8, i8* %288, i64 8
  %294 = bitcast i8* %293 to i32*
  %295 = icmp eq i32 %292, 0
  br i1 %295, label %309, label %296, !prof !8

296:                                              ; preds = %285
  %297 = bitcast i8* %288 to %class.SkBitmap**
  %298 = load %class.SkBitmap*, %class.SkBitmap** %297, align 8
  %299 = icmp eq %class.SkBitmap* %298, null
  br i1 %299, label %300, label %308

300:                                              ; preds = %296
  %301 = zext i32 %292 to i64
  %302 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %301) #11
  %303 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %302, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #11
  %304 = ptrtoint i8* %303 to i64
  %305 = bitcast i8* %288 to i64*
  store atomic i64 %304, i64* %305 monotonic, align 8
  %306 = udiv i64 %302, 56
  %307 = trunc i64 %306 to i32
  store i32 %307, i32* %294, align 8
  br label %309

308:                                              ; preds = %296
  call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"* %289, i32 %292) #11
  br label %309

309:                                              ; preds = %285, %300, %308
  %310 = bitcast %"class.std::__1::unique_ptr.114"* %19 to i64*
  %311 = load i64, i64* %310, align 8
  %312 = bitcast %"class.base::RepeatingCallback"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %312) #11
  %313 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* inttoptr (i64 -6148914691236517206 to %"class.base::internal::BindStateBase"*), %"class.base::internal::BindStateBase"** %313, align 8
  %314 = load i32, i32* %291, align 4
  %315 = bitcast %"class.blink::Persistent"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %315) #11
  %316 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %22, i64 0, i32 0
  %317 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %22, i64 0, i32 0, i32 0
  store %"class.blink::ContentIndexIconLoader"* %0, %"class.blink::ContentIndexIconLoader"** %317, align 8, !alias.scope !9
  %318 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %22, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %318, align 8, !alias.scope !9
  %319 = ptrtoint %"class.blink::ContentIndexIconLoader"* %0 to i64
  switch i64 %319, label %320 [
    i64 0, label %346
    i64 -1, label %346
  ]

320:                                              ; preds = %309
  %321 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !9
  %322 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %321, i64 0, i32 1
  %323 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %322) #11, !noalias !9
  %324 = icmp eq i8* %323, null
  br i1 %324, label %325, label %327, !prof !8

325:                                              ; preds = %320
  %326 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %322, i8* %326) #11
  br label %327

327:                                              ; preds = %325, %320
  %328 = phi i8* [ %326, %325 ], [ %323, %320 ]
  %329 = bitcast i8* %328 to %"class.blink::ThreadState"**
  %330 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %329, align 8, !noalias !9
  %331 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %330, i64 0, i32 3, i32 0, i32 0, i32 0
  %332 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %331, align 8, !noalias !9
  %333 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %332, i64 0, i32 0, i32 0
  %334 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %333, align 8, !noalias !9
  %335 = icmp eq %"class.blink::PersistentNode"* %334, null
  br i1 %335, label %336, label %339, !prof !8

336:                                              ; preds = %327
  %337 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %332, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %337) #11
  %338 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %333, align 8
  br label %339

339:                                              ; preds = %336, %327
  %340 = phi %"class.blink::PersistentNode"* [ %338, %336 ], [ %334, %327 ]
  %341 = bitcast %"class.blink::PersistentNode"* %340 to i64*
  %342 = load i64, i64* %341, align 8, !noalias !9
  %343 = bitcast %"class.blink::PersistentRegion"* %332 to i64*
  store i64 %342, i64* %343, align 8, !noalias !9
  %344 = bitcast %"class.blink::PersistentNode"* %340 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %316, %"class.blink::PersistentBase"** %344, align 8, !noalias !9
  %345 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %340, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22ContentIndexIconLoaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %345, align 8
  store %"class.blink::PersistentNode"* %340, %"class.blink::PersistentNode"** %318, align 8, !alias.scope !9
  br label %346

346:                                              ; preds = %309, %309, %339
  %347 = call i8* @_Znwm(i64 88) #12, !noalias !12
  %348 = bitcast i8* %347 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %348, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSD_18PartitionAllocatorEEENSB_14default_deleteISH_EEEENS_12OnceCallbackIFvSA_SH_EEEEJNS3_10PersistentIS4_EESA_SK_SN_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS2_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSC_18PartitionAllocatorEEENSA_14default_deleteISG_EEEENS_12OnceCallbackIFvS9_SG_EEEEJNS2_10PersistentIS3_EES9_SJ_SM_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !12
  %349 = getelementptr inbounds i8, i8* %347, i64 32
  %350 = bitcast i8* %349 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)* @_ZN5blink22ContentIndexIconLoader11DidGetIconsEN4mojo9StructPtrINS_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENS9_18PartitionAllocatorEEENS7_14default_deleteISD_EEEEN4base12OnceCallbackIFvS6_SD_EEE to i64), i64 0>, <2 x i64>* %350, align 8, !noalias !12
  %351 = getelementptr inbounds i8, i8* %347, i64 48
  %352 = bitcast i8* %351 to %"struct.std::__1::__tuple_impl"*
  call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEEC2IJLm0ELm1ELm2ELm3EEJS6_SC_SL_SP_EJEJEJS6_SC_SL_SP_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENST_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"* %352, %"class.blink::Persistent"* nonnull dereferenceable(16) %22, %"class.mojo::StructPtr"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.114"* nonnull dereferenceable(8) %19, %"class.base::OnceCallback"* dereferenceable(8) %4) #11, !noalias !12
  %353 = bitcast %"class.base::OnceCallback.132"* %21 to i8**
  store i8* %347, i8** %353, align 8, !alias.scope !12
  call void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* nonnull sret %20, i32 %314, %"class.base::OnceCallback.132"* nonnull %21) #11
  %354 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %21, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %354) #11
  %355 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %318, align 8
  %356 = icmp eq %"class.blink::PersistentNode"* %355, null
  br i1 %356, label %376, label %357

357:                                              ; preds = %346
  %358 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %359 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %358, i64 0, i32 1
  %360 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %359) #11
  %361 = icmp eq i8* %360, null
  br i1 %361, label %362, label %364, !prof !8

362:                                              ; preds = %357
  %363 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %359, i8* %363) #11
  br label %364

364:                                              ; preds = %362, %357
  %365 = phi i8* [ %363, %362 ], [ %360, %357 ]
  %366 = bitcast i8* %365 to %"class.blink::ThreadState"**
  %367 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %366, align 8
  %368 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %367, i64 0, i32 3, i32 0, i32 0, i32 0
  %369 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %368, align 8
  %370 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %318, align 8
  %371 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %369, i64 0, i32 0, i32 0
  %372 = bitcast %"class.blink::PersistentRegion"* %369 to i64*
  %373 = load i64, i64* %372, align 8
  %374 = bitcast %"class.blink::PersistentNode"* %370 to i64*
  store i64 %373, i64* %374, align 8
  %375 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %370, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %375, align 8
  store %"class.blink::PersistentNode"* %370, %"class.blink::PersistentNode"** %371, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %318, align 8
  br label %376

376:                                              ; preds = %346, %364
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %315) #11
  %377 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %3, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.gfx::Size"*, %"class.gfx::Size"** %377, align 8
  %379 = load i32, i32* %291, align 4
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %378, i64 %380
  %382 = icmp eq i32 %379, 0
  br i1 %382, label %421, label %383

383:                                              ; preds = %376
  %384 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %23, i64 0, i32 0
  %385 = bitcast %"class.blink::WebVector"* %24 to i8*
  %386 = bitcast %"struct.blink::Manifest::ImageResource"** %29 to i64*
  %387 = bitcast %"class.blink::WebVector"* %18 to i64*
  %388 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %24, i64 0, i32 0, i32 0, i32 1
  %389 = bitcast %"struct.blink::Manifest::ImageResource"** %388 to i8**
  %390 = bitcast %"class.blink::WebVector"* %24 to i8**
  %391 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %24, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %392 = bitcast %"struct.blink::Manifest::ImageResource"** %388 to i64*
  %393 = bitcast %class.GURL* %6 to i8*
  %394 = bitcast %"class.std::__1::vector"* %7 to i8*
  %395 = bitcast %"class.blink::WebVector"* %24 to i64*
  %396 = bitcast %"class.std::__1::vector"* %7 to i64*
  %397 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %398 = bitcast %"struct.blink::Manifest::ImageResource"** %397 to i64*
  %399 = bitcast %"struct.blink::Manifest::ImageResource"** %391 to i64*
  %400 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %401 = bitcast %"struct.blink::Manifest::ImageResource"** %400 to i64*
  %402 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %403 = bitcast %"class.std::__1::vector"* %7 to i8**
  %404 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %24, i64 0, i32 0, i32 0, i32 0
  %405 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %25, i64 0, i32 0
  %406 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0
  %407 = bitcast %"class.base::OnceCallback.329"* %26 to i8**
  %408 = bitcast %"class.base::OnceCallback.329"* %17 to i8*
  %409 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 0, i32 0
  %410 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0
  %411 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 15
  %412 = getelementptr inbounds %"class.blink::ResourceRequest", %"class.blink::ResourceRequest"* %15, i64 0, i32 0, i32 16
  %413 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %414 = getelementptr inbounds %"class.absl::optional.437", %"class.absl::optional.437"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %415 = bitcast %"class.gfx::Size"* %414 to i64*
  %416 = getelementptr inbounds %"class.base::OnceCallback.329", %"class.base::OnceCallback.329"* %26, i64 0, i32 0, i32 0, i32 0
  %417 = bitcast %"class.base::OnceCallback.329"* %26 to i64*
  %418 = bitcast %"class.base::OnceCallback.329"* %17 to i64*
  %419 = getelementptr inbounds %"class.base::OnceCallback.329", %"class.base::OnceCallback.329"* %17, i64 0, i32 0
  %420 = getelementptr inbounds %"class.base::OnceCallback.329", %"class.base::OnceCallback.329"* %26, i64 0, i32 0
  br label %465

421:                                              ; preds = %545, %376
  %422 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %20, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %422) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %312) #11
  %423 = load %"class.WTF::Vector.117"*, %"class.WTF::Vector.117"** %287, align 8
  store %"class.WTF::Vector.117"* null, %"class.WTF::Vector.117"** %287, align 8
  %424 = icmp eq %"class.WTF::Vector.117"* %423, null
  br i1 %424, label %448, label %425

425:                                              ; preds = %421
  %426 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %423, i64 0, i32 0, i32 0, i32 0
  %427 = load %class.SkBitmap*, %class.SkBitmap** %426, align 8
  %428 = icmp eq %class.SkBitmap* %427, null
  br i1 %428, label %446, label %429, !prof !19

429:                                              ; preds = %425
  %430 = bitcast %class.SkBitmap* %427 to i8*
  %431 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %423, i64 0, i32 0, i32 0, i32 2
  %432 = load i32, i32* %431, align 4
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %444, label %434, !prof !8

434:                                              ; preds = %429
  %435 = zext i32 %432 to i64
  %436 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %427, i64 %435
  br label %437

437:                                              ; preds = %437, %434
  %438 = phi %class.SkBitmap* [ %439, %437 ], [ %427, %434 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %438) #11
  %439 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %438, i64 1
  %440 = icmp eq %class.SkBitmap* %439, %436
  br i1 %440, label %441, label %437

441:                                              ; preds = %437
  store i32 0, i32* %431, align 4
  %442 = bitcast %"class.WTF::Vector.117"* %423 to i8**
  %443 = load i8*, i8** %442, align 8
  br label %444

444:                                              ; preds = %441, %429
  %445 = phi i8* [ %443, %441 ], [ %430, %429 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %445) #11
  store %class.SkBitmap* null, %class.SkBitmap** %426, align 8
  br label %446

446:                                              ; preds = %444, %425
  %447 = bitcast %"class.WTF::Vector.117"* %423 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %447) #11
  br label %448

448:                                              ; preds = %421, %446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %286) #11
  %449 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %28, align 8
  %450 = icmp eq %"struct.blink::Manifest::ImageResource"* %449, null
  br i1 %450, label %464, label %451

451:                                              ; preds = %448
  %452 = bitcast %"struct.blink::Manifest::ImageResource"* %449 to i8*
  %453 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %29, align 8
  %454 = icmp eq %"struct.blink::Manifest::ImageResource"* %453, %449
  br i1 %454, label %462, label %455

455:                                              ; preds = %451, %455
  %456 = phi %"struct.blink::Manifest::ImageResource"* [ %457, %455 ], [ %453, %451 ]
  %457 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %456, i64 -1
  call void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"* %457) #11
  %458 = icmp eq %"struct.blink::Manifest::ImageResource"* %457, %449
  br i1 %458, label %459, label %455

459:                                              ; preds = %455
  %460 = bitcast %"class.blink::WebVector"* %18 to i8**
  %461 = load i8*, i8** %460, align 8
  br label %462

462:                                              ; preds = %459, %451
  %463 = phi i8* [ %461, %459 ], [ %452, %451 ]
  store %"struct.blink::Manifest::ImageResource"* %449, %"struct.blink::Manifest::ImageResource"** %29, align 8
  call void @_ZdlPv(i8* %463) #12
  br label %464

464:                                              ; preds = %448, %462
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #11
  ret void

465:                                              ; preds = %383, %545
  %466 = phi %"class.gfx::Size"* [ %378, %383 ], [ %566, %545 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %384) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %384, i8 -86, i64 112, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %385, i8 0, i64 24, i1 false) #11
  %467 = load i64, i64* %386, align 8
  %468 = load i64, i64* %387, align 8
  %469 = sub i64 %467, %468
  %470 = sdiv exact i64 %469, 192
  %471 = icmp eq i64 %469, 0
  %472 = inttoptr i64 %468 to %"struct.blink::Manifest::ImageResource"*
  %473 = inttoptr i64 %467 to %"struct.blink::Manifest::ImageResource"*
  br i1 %471, label %499, label %474

474:                                              ; preds = %465
  %475 = icmp ugt i64 %470, 96076792050570581
  br i1 %475, label %476, label %478

476:                                              ; preds = %474
  %477 = bitcast %"class.blink::WebVector"* %24 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %477) #13
  unreachable

478:                                              ; preds = %474
  %479 = call i8* @_Znwm(i64 %469) #12
  %480 = bitcast i8* %479 to %"struct.blink::Manifest::ImageResource"*
  store i8* %479, i8** %389, align 8
  store i8* %479, i8** %390, align 8
  %481 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %480, i64 %470
  store %"struct.blink::Manifest::ImageResource"* %481, %"struct.blink::Manifest::ImageResource"** %391, align 8
  %482 = ptrtoint i8* %479 to i64
  %483 = icmp eq %"struct.blink::Manifest::ImageResource"* %472, %473
  %484 = ptrtoint %"struct.blink::Manifest::ImageResource"* %481 to i64
  br i1 %483, label %495, label %485

485:                                              ; preds = %478, %485
  %486 = phi %"struct.blink::Manifest::ImageResource"* [ %489, %485 ], [ %480, %478 ]
  %487 = phi %"struct.blink::Manifest::ImageResource"* [ %488, %485 ], [ %472, %478 ]
  call void @_ZN5blink8Manifest13ImageResourceC1ERKS1_(%"struct.blink::Manifest::ImageResource"* %486, %"struct.blink::Manifest::ImageResource"* dereferenceable(192) %487) #11
  %488 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %487, i64 1
  %489 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %486, i64 1
  %490 = icmp eq %"struct.blink::Manifest::ImageResource"* %488, %473
  br i1 %490, label %491, label %485

491:                                              ; preds = %485
  %492 = ptrtoint %"struct.blink::Manifest::ImageResource"* %489 to i64
  %493 = load i64, i64* %395, align 8, !noalias !20
  %494 = load i64, i64* %399, align 8, !noalias !20
  br label %495

495:                                              ; preds = %491, %478
  %496 = phi i64 [ %484, %478 ], [ %494, %491 ]
  %497 = phi i64 [ %482, %478 ], [ %493, %491 ]
  %498 = phi i64 [ %482, %478 ], [ %492, %491 ]
  store i64 %498, i64* %392, align 8
  br label %499

499:                                              ; preds = %465, %495
  %500 = phi i64 [ 0, %465 ], [ %496, %495 ]
  %501 = phi i64 [ 0, %465 ], [ %498, %495 ]
  %502 = phi i64 [ 0, %465 ], [ %497, %495 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %393) #11, !noalias !25
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %394) #11, !noalias !25
  store i64 %502, i64* %396, align 8, !alias.scope !26, !noalias !25
  store i64 %501, i64* %398, align 8, !alias.scope !26, !noalias !25
  store i64 %500, i64* %401, align 8, !alias.scope !26, !noalias !25
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %385, i8 0, i64 24, i1 false) #11, !noalias !20
  %503 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %466, i64 0, i32 1
  %504 = load i32, i32* %503, align 4, !noalias !25
  %505 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %466, i64 0, i32 0
  %506 = load i32, i32* %505, align 4, !noalias !25
  %507 = sitofp i32 %506 to float
  %508 = sitofp i32 %504 to float
  %509 = fdiv float %507, %508
  call void @_ZN5blink20ManifestIconSelector20FindBestMatchingIconERKNSt3__16vectorINS_8Manifest13ImageResourceENS1_9allocatorIS4_EEEEiifNS_5mojom29ManifestImageResource_PurposeE(%class.GURL* nonnull sret %6, %"class.std::__1::vector"* nonnull dereferenceable(24) %7, i32 %504, i32 0, float %509, i32 0) #11, !noalias !25
  call void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"* nonnull %23, %class.GURL* nonnull dereferenceable(120) %6) #11
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #11
  %510 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %402, align 8, !noalias !25
  %511 = icmp eq %"struct.blink::Manifest::ImageResource"* %510, null
  br i1 %511, label %524, label %512

512:                                              ; preds = %499
  %513 = bitcast %"struct.blink::Manifest::ImageResource"* %510 to i8*
  %514 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %397, align 8, !noalias !25
  %515 = icmp eq %"struct.blink::Manifest::ImageResource"* %514, %510
  br i1 %515, label %522, label %516

516:                                              ; preds = %512, %516
  %517 = phi %"struct.blink::Manifest::ImageResource"* [ %518, %516 ], [ %514, %512 ]
  %518 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %517, i64 -1
  call void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"* %518) #11
  %519 = icmp eq %"struct.blink::Manifest::ImageResource"* %518, %510
  br i1 %519, label %520, label %516

520:                                              ; preds = %516
  %521 = load i8*, i8** %403, align 8, !noalias !25
  br label %522

522:                                              ; preds = %520, %512
  %523 = phi i8* [ %521, %520 ], [ %513, %512 ]
  store %"struct.blink::Manifest::ImageResource"* %510, %"struct.blink::Manifest::ImageResource"** %397, align 8, !noalias !25
  call void @_ZdlPv(i8* %523) #12
  br label %524

524:                                              ; preds = %499, %522
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %394) #11, !noalias !25
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %393) #11, !noalias !25
  %525 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %404, align 8
  %526 = icmp eq %"struct.blink::Manifest::ImageResource"* %525, null
  br i1 %526, label %539, label %527

527:                                              ; preds = %524
  %528 = bitcast %"struct.blink::Manifest::ImageResource"* %525 to i8*
  %529 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %388, align 8
  %530 = icmp eq %"struct.blink::Manifest::ImageResource"* %529, %525
  br i1 %530, label %537, label %531

531:                                              ; preds = %527, %531
  %532 = phi %"struct.blink::Manifest::ImageResource"* [ %533, %531 ], [ %529, %527 ]
  %533 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %532, i64 -1
  call void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"* %533) #11
  %534 = icmp eq %"struct.blink::Manifest::ImageResource"* %533, %525
  br i1 %534, label %535, label %531

535:                                              ; preds = %531
  %536 = load i8*, i8** %390, align 8
  br label %537

537:                                              ; preds = %535, %527
  %538 = phi i8* [ %536, %535 ], [ %528, %527 ]
  store %"struct.blink::Manifest::ImageResource"* %525, %"struct.blink::Manifest::ImageResource"** %388, align 8
  call void @_ZdlPv(i8* %538) #12
  br label %539

539:                                              ; preds = %524, %537
  %540 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %23) #11
  br i1 %540, label %541, label %545

541:                                              ; preds = %539
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %405) #11
  %542 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %28, align 8
  %543 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %542, i64 0, i32 0
  call void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"* nonnull %25, %class.GURL* dereferenceable(120) %543) #11
  %544 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %23, %"class.blink::KURL"* nonnull dereferenceable(112) %25) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %405) #11
  br label %545

545:                                              ; preds = %541, %539
  %546 = call i8* @_Znwm(i64 56) #12, !noalias !27
  %547 = bitcast i8* %546 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %547, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %class.SkBitmap*, double)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink22ContentIndexIconLoader5StartEPNS3_16ExecutionContextEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSD_18PartitionAllocatorEEENS_12OnceCallbackIFvSC_NSE_I8SkBitmapLj0ESH_EEEEEE3$_0JNS_17RepeatingCallbackIFvvEEENSD_17UnretainedWrapperISN_EEEEEFvSM_dEE7RunOnceEPNS0_13BindStateBaseEOSM_d" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink22ContentIndexIconLoader5StartEPNS2_16ExecutionContextEN4mojo9StructPtrINS2_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSC_18PartitionAllocatorEEENS_12OnceCallbackIFvSB_NSD_I8SkBitmapLj0ESG_EEEEEE3$_0JNS_17RepeatingCallbackIFvvEEENSC_17UnretainedWrapperISM_EEEE7DestroyEPKNS0_13BindStateBaseE") #11, !noalias !27
  %548 = getelementptr inbounds i8, i8* %546, i64 40
  %549 = bitcast i8* %548 to %"class.base::internal::CallbackBaseCopyable"*
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* %549, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %406) #11, !noalias !27
  %550 = getelementptr inbounds i8, i8* %546, i64 48
  %551 = bitcast i8* %550 to i64*
  store i64 %311, i64* %551, align 8, !noalias !27
  store i8* %546, i8** %407, align 8, !alias.scope !27
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %408)
  call void @llvm.lifetime.start.p0i8(i64 1032, i8* nonnull %409) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %409, i8 -86, i64 1032, i1 false) #11
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %15, %"class.blink::KURL"* nonnull dereferenceable(112) %23) #11
  store i32 14, i32* %411, align 8
  store i32 8, i32* %412, align 4
  call void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"* nonnull %410, i32 2, i32 0) #11
  call void @_ZN5blink19ResourceRequestHead18SetTimeoutIntervalEN4base9TimeDeltaE(%"class.blink::ResourceRequestHead"* nonnull %410, i64 30000000) #11
  %552 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm(i64 120) #11
  %553 = bitcast i8* %552 to %"class.blink::ThreadedIconLoader"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %552, i8 0, i64 120, i1 false) #11
  %554 = bitcast i8* %552 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18ThreadedIconLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %554, align 8
  %555 = getelementptr inbounds i8, i8* %552, i64 8
  %556 = getelementptr inbounds i8, i8* %552, i64 40
  %557 = bitcast i8* %556 to %class.SkBitmap*
  call void @llvm.memset.p0i8.i64(i8* align 8 %555, i8 0, i64 17, i1 false) #11
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %557) #11
  %558 = getelementptr inbounds i8, i8* %552, i64 96
  call void @llvm.memset.p0i8.i64(i8* align 8 %558, i8 0, i64 17, i1 false) #11
  %559 = getelementptr inbounds i8, i8* %552, i64 -4
  %560 = bitcast i8* %559 to i16*
  %561 = load atomic i16, i16* %560 monotonic, align 2
  %562 = or i16 %561, 1
  store atomic i16 %562, i16* %560 release, align 2
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %413) #11
  store i8 1, i8* %413, align 4
  %563 = bitcast %"class.gfx::Size"* %466 to i64*
  %564 = load i64, i64* %563, align 4
  store i64 %564, i64* %415, align 4
  %565 = load i64, i64* %417, align 8
  store i64 %565, i64* %418, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %416, align 8
  call void @_ZN5blink18ThreadedIconLoader5StartEPNS_16ExecutionContextERKNS_19ResourceRequestHeadERKN4absl8optionalIN3gfx4SizeEEEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::ThreadedIconLoader"* %553, %"class.blink::ExecutionContext"* %1, %"class.blink::ResourceRequestHead"* nonnull dereferenceable(1016) %410, %"class.absl::optional.437"* nonnull dereferenceable(12) %16, %"class.base::OnceCallback.329"* nonnull %17) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %419) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %413) #11
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 1032, i8* nonnull %409) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %408)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %420) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %384) #11
  %566 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %466, i64 1
  %567 = icmp eq %"class.gfx::Size"* %566, %381
  br i1 %567, label %421, label %465
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN4base14BarrierClosureEiNS_12OnceCallbackIFvvEEE(%"class.base::RepeatingCallback"* sret, i32, %"class.base::OnceCallback.132"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22ContentIndexIconLoader11DidGetIconsEN4mojo9StructPtrINS_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENS9_18PartitionAllocatorEEENS7_14default_deleteISD_EEEEN4base12OnceCallbackIFvS6_SD_EEE(%"class.blink::ContentIndexIconLoader"* nocapture readnone, %"class.mojo::StructPtr"* nocapture, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"* nocapture) #1 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.mojo::StructPtr", align 8
  %7 = alloca %"class.WTF::Vector.117", align 8
  %8 = bitcast %"class.mojo::StructPtr"* %6 to i64*
  %9 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.mojo::StructPtr"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %8, align 8
  store i64 0, i64* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %7, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %7, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.117"* %2 to i64*
  %15 = bitcast %"class.WTF::Vector.117"* %7 to i64*
  store i64 0, i64* %15, align 8
  %16 = load i64, i64* %14, align 8
  %17 = bitcast %"class.WTF::Vector.117"* %7 to i64*
  store atomic i64 0, i64* %14 monotonic, align 8
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %2, i64 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 4
  store i32 %19, i32* %12, align 8
  store i32 0, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %2, i64 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %13, align 4
  store i32 0, i32* %20, align 4
  %22 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  %28 = inttoptr i64 %25 to %"class.base::internal::BindStateBase"*
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %30 = bitcast void ()** %29 to void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*)**
  %31 = load void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*)*, void (%"class.base::internal::BindStateBase"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*)** %30, align 8
  call void %31(%"class.base::internal::BindStateBase"* %28, %"class.mojo::StructPtr"* nonnull dereferenceable(8) %6, %"class.WTF::Vector.117"* nonnull dereferenceable(16) %7) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  %32 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %7, i64 0, i32 0, i32 0, i32 0
  %33 = load %class.SkBitmap*, %class.SkBitmap** %32, align 8
  %34 = icmp eq %class.SkBitmap* %33, null
  br i1 %34, label %51, label %35, !prof !19

35:                                               ; preds = %4
  %36 = bitcast %class.SkBitmap* %33 to i8*
  %37 = load i32, i32* %13, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %49, label %39, !prof !8

39:                                               ; preds = %35
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %33, i64 %40
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi %class.SkBitmap* [ %44, %42 ], [ %33, %39 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %43) #11
  %44 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %43, i64 1
  %45 = icmp eq %class.SkBitmap* %44, %41
  br i1 %45, label %46, label %42

46:                                               ; preds = %42
  store i32 0, i32* %13, align 4
  %47 = bitcast %"class.WTF::Vector.117"* %7 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %35
  %50 = phi i8* [ %48, %46 ], [ %36, %35 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  store %class.SkBitmap* null, %class.SkBitmap** %32, align 8
  br label %51

51:                                               ; preds = %4, %49
  %52 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %9, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %9, align 8
  %53 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %52) #11
  %55 = bitcast %"class.blink::mojom::blink::ContentDescription"* %52 to i8*
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %51, %54
  %57 = icmp eq %"class.WTF::Vector.117"* %2, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %2, i64 0, i32 0, i32 0, i32 0
  %60 = load %class.SkBitmap*, %class.SkBitmap** %59, align 8
  %61 = icmp eq %class.SkBitmap* %60, null
  br i1 %61, label %78, label %62, !prof !19

62:                                               ; preds = %58
  %63 = bitcast %class.SkBitmap* %60 to i8*
  %64 = load i32, i32* %20, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %76, label %66, !prof !8

66:                                               ; preds = %62
  %67 = zext i32 %64 to i64
  %68 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %60, i64 %67
  br label %69

69:                                               ; preds = %69, %66
  %70 = phi %class.SkBitmap* [ %71, %69 ], [ %60, %66 ]
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %70) #11
  %71 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %70, i64 1
  %72 = icmp eq %class.SkBitmap* %71, %68
  br i1 %72, label %73, label %69

73:                                               ; preds = %69
  store i32 0, i32* %20, align 4
  %74 = bitcast %"class.WTF::Vector.117"* %2 to i8**
  %75 = load i8*, i8** %74, align 8
  br label %76

76:                                               ; preds = %73, %62
  %77 = phi i8* [ %75, %73 ], [ %63, %62 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %77) #11
  store %class.SkBitmap* null, %class.SkBitmap** %59, align 8
  br label %78

78:                                               ; preds = %76, %58
  %79 = bitcast %"class.WTF::Vector.117"* %2 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %79) #11
  br label %80

80:                                               ; preds = %56, %78
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #3

declare void @_ZN5blink4KURLC1ERK4GURL(%"class.blink::KURL"*, %class.GURL* dereferenceable(120)) unnamed_addr #3

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

declare void @_ZN5blink8Manifest13ImageResourceC1Ev(%"struct.blink::Manifest::ImageResource"*) unnamed_addr #3

declare void @_ZNK5blink4KURLcv4GURLEv(%class.GURL* sret, %"class.blink::KURL"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(120) %class.GURL* @_ZN4GURLaSEOS_(%class.GURL*, %class.GURL* dereferenceable(120)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #4

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector.334"* sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"*) unnamed_addr #4

declare void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string.86"* sret, i64, i8*, i16*) local_unnamed_addr #3

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #3

declare i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"*) local_unnamed_addr #3

declare i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN5blink8Manifest13ImageResourceENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.blink::Manifest::ImageResource"* dereferenceable(192)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.blink::Manifest::ImageResource"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 192
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 96076792050570581
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.blink::Manifest::ImageResource"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 192
  %20 = icmp ult i64 %19, 48038396025285290
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 96076792050570581, %14 ]
  %28 = mul i64 %27, 192
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.blink::Manifest::ImageResource"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.blink::Manifest::ImageResource"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %33, i64 %32
  %36 = ptrtoint %"struct.blink::Manifest::ImageResource"* %35 to i64
  tail call void @_ZN5blink8Manifest13ImageResourceC1ERKS1_(%"struct.blink::Manifest::ImageResource"* %34, %"struct.blink::Manifest::ImageResource"* dereferenceable(192) %1) #11
  %37 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %34, i64 1
  %38 = ptrtoint %"struct.blink::Manifest::ImageResource"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %39, align 8
  %41 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %3, align 8
  %42 = icmp eq %"struct.blink::Manifest::ImageResource"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.blink::Manifest::ImageResource"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.blink::Manifest::ImageResource"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.blink::Manifest::ImageResource"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %47, i64 -1
  tail call void @_ZN5blink8Manifest13ImageResourceC1ERKS1_(%"struct.blink::Manifest::ImageResource"* %48, %"struct.blink::Manifest::ImageResource"* dereferenceable(192) %49) #11
  %50 = icmp eq %"struct.blink::Manifest::ImageResource"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.blink::Manifest::ImageResource"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.blink::Manifest::ImageResource"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.blink::Manifest::ImageResource"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.blink::Manifest::ImageResource"*
  %60 = icmp eq %"struct.blink::Manifest::ImageResource"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.blink::Manifest::ImageResource"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.blink::Manifest::ImageResource", %"struct.blink::Manifest::ImageResource"* %62, i64 -1
  tail call void @_ZN5blink8Manifest13ImageResourceD1Ev(%"struct.blink::Manifest::ImageResource"* %63) #11
  %64 = icmp eq %"struct.blink::Manifest::ImageResource"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #12
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN5blink8Manifest13ImageResourceC1ERKS1_(%"struct.blink::Manifest::ImageResource"*, %"struct.blink::Manifest::ImageResource"* dereferenceable(192)) unnamed_addr #3

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare void @_ZN5blink20ManifestIconSelector20FindBestMatchingIconERKNSt3__16vectorINS_8Manifest13ImageResourceENS1_9allocatorIS4_EEEEiifNS_5mojom29ManifestImageResource_PurposeE(%class.GURL* sret, %"class.std::__1::vector"* dereferenceable(24), i32, i32, float, i32) local_unnamed_addr #3

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #3

declare void @_ZN5blink19ResourceRequestHead11SetPriorityENS_13WebURLRequest8PriorityEi(%"class.blink::ResourceRequestHead"*, i32, i32) local_unnamed_addr #3

declare void @_ZN5blink19ResourceRequestHead18SetTimeoutIntervalEN4base9TimeDeltaE(%"class.blink::ResourceRequestHead"*, i64) local_unnamed_addr #3

declare void @_ZN5blink18ThreadedIconLoader5StartEPNS_16ExecutionContextERKNS_19ResourceRequestHeadERKN4absl8optionalIN3gfx4SizeEEEN4base12OnceCallbackIFv8SkBitmapdEEE(%"class.blink::ThreadedIconLoader"*, %"class.blink::ExecutionContext"*, %"class.blink::ResourceRequestHead"* dereferenceable(1016), %"class.absl::optional.437"* dereferenceable(12), %"class.base::OnceCallback.329"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18ThreadedIconLoaderEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !8

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18ThreadedIconLoaderEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !8

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18ThreadedIconLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ThreadedIconLoader"*
  tail call void @_ZNK5blink18ThreadedIconLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadedIconLoader"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18ThreadedIconLoaderEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18ThreadedIconLoaderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds i8, i8* %0, i64 96
  %4 = bitcast i8* %3 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #11
  %5 = getelementptr inbounds i8, i8* %0, i64 40
  %6 = bitcast i8* %5 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %6) #11
  %7 = getelementptr inbounds i8, i8* %0, i64 16
  %8 = bitcast i8* %7 to %"class.WTF::SharedBuffer"**
  %9 = load %"class.WTF::SharedBuffer"*, %"class.WTF::SharedBuffer"** %8, align 8
  %10 = icmp eq %"class.WTF::SharedBuffer"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %12) #11
  %13 = getelementptr inbounds %"class.WTF::SharedBuffer", %"class.WTF::SharedBuffer"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %11
  tail call void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"* nonnull %9) #11
  %17 = bitcast %"class.WTF::SharedBuffer"* %9 to i8*
  tail call void @free(i8* %17) #11
  br label %18

18:                                               ; preds = %1, %11, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18ThreadedIconLoaderEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #3

declare void @_ZNK5blink18ThreadedIconLoader5TraceEPNS_7VisitorE(%"class.blink::ThreadedIconLoader"*, %"class.blink::Visitor"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3WTF12SharedBufferD1Ev(%"class.WTF::SharedBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"*) unnamed_addr #4

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"*, i32) local_unnamed_addr #1 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %class.SkBitmap*, %class.SkBitmap** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %class.SkBitmap* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %class.SkBitmap* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %16, %class.SkBitmap* dereferenceable(56) %15) #11
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %15) #11
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %16, i64 1
  %18 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %15, i64 1
  %19 = icmp eq %class.SkBitmap* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %class.SkBitmap* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #11
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %23) #11
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #11
  %26 = udiv i64 %24, 56
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %class.SkBitmap*, %class.SkBitmap** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %class.SkBitmap* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %class.SkBitmap*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %class.SkBitmap* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %class.SkBitmap* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %41, %class.SkBitmap* dereferenceable(56) %40) #11
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %40) #11
  %42 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %41, i64 1
  %43 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %40, i64 1
  %44 = icmp eq %class.SkBitmap* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.117"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 38310473
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 38310473) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 56
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

declare void @_ZN8SkBitmapC1EOS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22ContentIndexIconLoaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::ContentIndexIconLoader"**
  %5 = load %"class.blink::ContentIndexIconLoader"*, %"class.blink::ContentIndexIconLoader"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::ContentIndexIconLoader"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ContentIndexIconLoader", %"class.blink::ContentIndexIconLoader"* %5, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22ContentIndexIconLoaderEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22ContentIndexIconLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSD_18PartitionAllocatorEEENSB_14default_deleteISH_EEEENS_12OnceCallbackIFvSA_SH_EEEEJNS3_10PersistentIS4_EESA_SK_SN_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = alloca %"class.mojo::StructPtr", align 8
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 4
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.mojo::StructPtr"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  %15 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.blink::ContentIndexIconLoader"**
  %16 = load %"class.blink::ContentIndexIconLoader"*, %"class.blink::ContentIndexIconLoader"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ContentIndexIconLoader", %"class.blink::ContentIndexIconLoader"* %16, i64 %12, i32 0
  %18 = bitcast i8* %17 to %"class.blink::ContentIndexIconLoader"*
  %19 = and i64 %9, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %28, label %21

21:                                               ; preds = %1
  %22 = bitcast i8* %17 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = add i64 %9, -1
  %25 = getelementptr i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)**
  %27 = load void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)*, void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)** %26, align 8
  br label %30

28:                                               ; preds = %1
  %29 = inttoptr i64 %9 to void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)*
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi void (%"class.blink::ContentIndexIconLoader"*, %"class.mojo::StructPtr"*, %"class.WTF::Vector.117"*, %"class.base::OnceCallback"*)* [ %27, %21 ], [ %29, %28 ]
  %32 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %33 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64*
  %35 = load i64, i64* %34, align 8
  store i64 %35, i64* %32, align 8
  store i64 0, i64* %34, align 8
  %36 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 3
  %37 = bitcast void (%"class.base::internal::BindStateBase"*)** %36 to %"class.WTF::Vector.117"**
  %38 = load %"class.WTF::Vector.117"*, %"class.WTF::Vector.117"** %37, align 8
  store %"class.WTF::Vector.117"* null, %"class.WTF::Vector.117"** %37, align 8
  %39 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.base::internal::BindStateBase"**
  %40 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %41, i64* %42, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %39, align 8
  call void %31(%"class.blink::ContentIndexIconLoader"* %18, %"class.mojo::StructPtr"* nonnull %2, %"class.WTF::Vector.117"* %38, %"class.base::OnceCallback"* nonnull %3) #11
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #11
  %44 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %33, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %33, align 8
  %45 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %44, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %30
  call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %44) #11
  %47 = bitcast %"class.blink::mojom::blink::ContentDescription"* %44 to i8*
  call void @_ZdlPv(i8* %47) #12
  br label %48

48:                                               ; preds = %30, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS2_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSC_18PartitionAllocatorEEENSA_14default_deleteISG_EEEENS_12OnceCallbackIFvS9_SG_EEEEJNS2_10PersistentIS3_EES9_SJ_SM_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::__tuple_impl"*
  tail call void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEED2Ev(%"struct.std::__1::__tuple_impl"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEED2Ev(%"struct.std::__1::__tuple_impl"*) unnamed_addr #9 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 3, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #11
  %3 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::Vector.117"*, %"class.WTF::Vector.117"** %3, align 8
  store %"class.WTF::Vector.117"* null, %"class.WTF::Vector.117"** %3, align 8
  %5 = icmp eq %"class.WTF::Vector.117"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %class.SkBitmap*, %class.SkBitmap** %7, align 8
  %9 = icmp eq %class.SkBitmap* %8, null
  br i1 %9, label %27, label %10, !prof !19

10:                                               ; preds = %6
  %11 = bitcast %class.SkBitmap* %8 to i8*
  %12 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %4, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %25, label %15, !prof !8

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %8, i64 %16
  br label %18

18:                                               ; preds = %18, %15
  %19 = phi %class.SkBitmap* [ %20, %18 ], [ %8, %15 ]
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %19) #11
  %20 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %19, i64 1
  %21 = icmp eq %class.SkBitmap* %20, %17
  br i1 %21, label %22, label %18

22:                                               ; preds = %18
  store i32 0, i32* %12, align 4
  %23 = bitcast %"class.WTF::Vector.117"* %4 to i8**
  %24 = load i8*, i8** %23, align 8
  br label %25

25:                                               ; preds = %22, %10
  %26 = phi i8* [ %24, %22 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %26) #11
  store %class.SkBitmap* null, %class.SkBitmap** %7, align 8
  br label %27

27:                                               ; preds = %25, %6
  %28 = bitcast %"class.WTF::Vector.117"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %28) #11
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::mojom::blink::ContentDescription"*, %"class.blink::mojom::blink::ContentDescription"** %30, align 8
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %30, align 8
  %32 = icmp eq %"class.blink::mojom::blink::ContentDescription"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  tail call void @_ZN5blink5mojom5blink18ContentDescriptionD1Ev(%"class.blink::mojom::blink::ContentDescription"* nonnull %31) #11
  %34 = bitcast %"class.blink::mojom::blink::ContentDescription"* %31 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %37 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %38 = icmp eq %"class.blink::PersistentNode"* %37, null
  br i1 %38, label %58, label %39

39:                                               ; preds = %35
  %40 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %41 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %40, i64 0, i32 1
  %42 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %41) #11
  %43 = icmp eq i8* %42, null
  br i1 %43, label %44, label %46, !prof !8

44:                                               ; preds = %39
  %45 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %41, i8* %45) #11
  br label %46

46:                                               ; preds = %44, %39
  %47 = phi i8* [ %45, %44 ], [ %42, %39 ]
  %48 = bitcast i8* %47 to %"class.blink::ThreadState"**
  %49 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %49, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %50, align 8
  %52 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %36, align 8
  %53 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %51, i64 0, i32 0, i32 0
  %54 = bitcast %"class.blink::PersistentRegion"* %51 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.blink::PersistentNode"* %52 to i64*
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %52, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %57, align 8
  store %"class.blink::PersistentNode"* %52, %"class.blink::PersistentNode"** %53, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %36, align 8
  br label %58

58:                                               ; preds = %35, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__tuple_implINS_15__tuple_indicesIJLm0ELm1ELm2ELm3EEEEJN5blink10PersistentINS3_22ContentIndexIconLoaderEEEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENS_10unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSE_18PartitionAllocatorEEENS_14default_deleteISI_EEEEN4base12OnceCallbackIFvSC_SI_EEEEEC2IJLm0ELm1ELm2ELm3EEJS6_SC_SL_SP_EJEJEJS6_SC_SL_SP_EEENS1_IJXspT_EEEENS_13__tuple_typesIJDpT0_EEENS1_IJXspT1_EEEENST_IJDpT2_EEEDpOT3_(%"struct.std::__1::__tuple_impl"*, %"class.blink::Persistent"* dereferenceable(16), %"class.mojo::StructPtr"* dereferenceable(8), %"class.std::__1::unique_ptr.114"* dereferenceable(8), %"class.base::OnceCallback"* dereferenceable(8)) unnamed_addr #1 comdat align 2 {
  %6 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.blink::Persistent"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"struct.std::__1::__tuple_impl"* %0 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %10, align 8
  switch i64 %8, label %11 [
    i64 0, label %37
    i64 -1, label %37
  ]

11:                                               ; preds = %5
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #11
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !8

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #11
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  %26 = icmp eq %"class.blink::PersistentNode"* %25, null
  br i1 %26, label %27, label %30, !prof !8

27:                                               ; preds = %18
  %28 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %28) #11
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %24, align 8
  br label %30

30:                                               ; preds = %27, %18
  %31 = phi %"class.blink::PersistentNode"* [ %29, %27 ], [ %25, %18 ]
  %32 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  store i64 %33, i64* %34, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %6, %"class.blink::PersistentBase"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_22ContentIndexIconLoaderELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %10, align 8
  br label %37

37:                                               ; preds = %5, %5, %30
  %38 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::__tuple_leaf.598"* %38 to i64*
  %40 = getelementptr inbounds %"class.std::__1::__tuple_leaf.598", %"class.std::__1::__tuple_leaf.598"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ContentDescription"* null, %"class.blink::mojom::blink::ContentDescription"** %40, align 8
  %41 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %42 = load i64, i64* %41, align 8
  store i64 %42, i64* %39, align 8
  store i64 0, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 2
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.114", %"class.std::__1::unique_ptr.114"* %3, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.114"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  store %"class.WTF::Vector.117"* null, %"class.WTF::Vector.117"** %44, align 8
  %47 = bitcast %"class.std::__1::__tuple_leaf.599"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__tuple_impl", %"struct.std::__1::__tuple_impl"* %0, i64 0, i32 3
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::__tuple_leaf.600"* %48 to i64*
  store i64 %51, i64* %52, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink22ContentIndexIconLoader5StartEPNS3_16ExecutionContextEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSD_18PartitionAllocatorEEENS_12OnceCallbackIFvSC_NSE_I8SkBitmapLj0ESH_EEEEEE3$_0JNS_17RepeatingCallbackIFvvEEENSD_17UnretainedWrapperISN_EEEEEFvSM_dEE7RunOnceEPNS0_13BindStateBaseEOSM_d"(%"class.base::internal::BindStateBase"* nocapture, %class.SkBitmap* dereferenceable(56), double) #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.132", align 8
  %5 = alloca %"class.base::OnceCallback.132", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %class.SkBitmap, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = getelementptr inbounds void ()*, void ()** %8, i64 1
  %10 = bitcast void ()** %9 to %"class.WTF::Vector.117"**
  %11 = load %"class.WTF::Vector.117"*, %"class.WTF::Vector.117"** %10, align 8
  %12 = bitcast %"class.base::OnceCallback.132"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #11
  %13 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = bitcast %class.SkBitmap* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #11
  %15 = bitcast void ()** %8 to %"class.base::internal::BindStateBase"**
  %16 = bitcast void ()** %8 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %5, i64 0, i32 0
  %20 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"* nonnull %19, %"class.base::internal::CallbackBaseCopyable"* nonnull dereferenceable(8) %20) #11
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* nonnull %7, %class.SkBitmap* dereferenceable(56) %1) #11
  %21 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %11, i64 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %11, i64 0, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %33, label %26, !prof !8

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %11, i64 0, i32 0, i32 0, i32 0
  %28 = load %class.SkBitmap*, %class.SkBitmap** %27, align 8
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %28, i64 %29
  call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %30, %class.SkBitmap* nonnull dereferenceable(56) %7) #11
  %31 = load i32, i32* %21, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %21, align 4
  br label %34

33:                                               ; preds = %3
  call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.117"* %11, %class.SkBitmap* nonnull dereferenceable(56) %7) #11
  br label %34

34:                                               ; preds = %26, %33
  %35 = bitcast %"class.base::OnceCallback.132"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %5, i64 0, i32 0, i32 0, i32 0
  %37 = bitcast %"class.base::OnceCallback.132"* %5 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::OnceCallback.132"* %4 to i64*
  store i64 %38, i64* %39, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %36, align 8
  %40 = getelementptr inbounds %"class.base::OnceCallback.132", %"class.base::OnceCallback.132"* %4, i64 0, i32 0
  %41 = inttoptr i64 %38 to %"class.base::internal::BindStateBase"*
  %42 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %41, i64 0, i32 1
  %43 = bitcast void ()** %42 to void (%"class.base::internal::BindStateBase"*)**
  %44 = load void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %43, align 8
  call void %44(%"class.base::internal::BindStateBase"* %41) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %7) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #11
  %45 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #11
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS1_EEvOT_(%"class.WTF::Vector.117"*, %class.SkBitmap* dereferenceable(56)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %class.SkBitmap*, %class.SkBitmap** %6, align 8
  %8 = icmp ugt %class.SkBitmap* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %7, i64 %10
  %12 = icmp ugt %class.SkBitmap* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !19

24:                                               ; preds = %13
  %25 = icmp eq %class.SkBitmap* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 56
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %class.SkBitmap*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"* %0, i32 %22) #11
  %36 = load %class.SkBitmap*, %class.SkBitmap** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %class.SkBitmap* %1 to i64
  %39 = ptrtoint %class.SkBitmap* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 56
  %42 = getelementptr inbounds %"class.WTF::Vector.117", %"class.WTF::Vector.117"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !19

52:                                               ; preds = %37
  %53 = icmp eq %class.SkBitmap* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeI8SkBitmapEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameI8SkBitmapEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.117"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 56
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %class.SkBitmap*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.117"* %0, i32 %50) #11
  %64 = load %class.SkBitmap*, %class.SkBitmap** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %class.SkBitmap* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %class.SkBitmap* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %class.SkBitmap* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %69, i64 %72
  tail call void @_ZN8SkBitmapC1EOS_(%class.SkBitmap* %73, %class.SkBitmap* dereferenceable(56) %70) #11
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseC2EONS0_20CallbackBaseCopyableE(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink22ContentIndexIconLoader5StartEPNS2_16ExecutionContextEN4mojo9StructPtrINS2_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSC_18PartitionAllocatorEEENS_12OnceCallbackIFvSB_NSD_I8SkBitmapLj0ESG_EEEEEE3$_0JNS_17RepeatingCallbackIFvvEEENSC_17UnretainedWrapperISM_EEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #1 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink12_GLOBAL__N_115ToImageResourceEPNS_16ExecutionContextERKN3WTF6VectorIN4mojo16InlinedStructPtrINS_5mojom5blink21ContentIconDefinitionEEELj0ENS3_18PartitionAllocatorEEE: argument 0"}
!4 = distinct !{!4, !"_ZN5blink12_GLOBAL__N_115ToImageResourceEPNS_16ExecutionContextERKN3WTF6VectorIN4mojo16InlinedStructPtrINS_5mojom5blink21ContentIconDefinitionEEELj0ENS3_18PartitionAllocatorEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!7 = distinct !{!7, !"_ZNK5blink9WebString5Utf16Ev"}
!8 = !{!"branch_weights", i32 1, i32 2000}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN5blink22WrapPersistentInternalINS_22ContentIndexIconLoaderEEENS_10PersistentIT_EEPS3_: argument 0"}
!11 = distinct !{!11, !"_ZN5blink22WrapPersistentInternalINS_22ContentIndexIconLoaderEEENS_10PersistentIT_EEPS3_"}
!12 = !{!13, !15, !17}
!13 = distinct !{!13, !14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSD_18PartitionAllocatorEEENSB_14default_deleteISH_EEEENS2_IFvSA_SH_EEEEJNS3_10PersistentIS4_EESA_SK_SM_EEEDcOT0_DpOT1_: argument 0"}
!14 = distinct !{!14, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSD_18PartitionAllocatorEEENSB_14default_deleteISH_EEEENS2_IFvSA_SH_EEEEJNS3_10PersistentIS4_EESA_SK_SM_EEEDcOT0_DpOT1_"}
!15 = distinct !{!15, !16, !"_ZN4base8BindOnceIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEENS9_14default_deleteISF_EEEENS_12OnceCallbackIFvS8_SF_EEEEJNS1_10PersistentIS2_EES8_SI_SL_EEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8BindOnceIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrIN3WTF6VectorI8SkBitmapLj0ENSB_18PartitionAllocatorEEENS9_14default_deleteISF_EEEENS_12OnceCallbackIFvS8_SF_EEEEJNS1_10PersistentIS2_EES8_SI_SL_EEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSS_DpOST_"}
!17 = distinct !{!17, !18, !"_ZN3WTF4BindIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrINS_6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEENS9_14default_deleteISE_EEEEN4base12OnceCallbackIFvS8_SE_EEEEJNS1_10PersistentIS2_EES8_SH_SL_EFvvEEENSJ_IT1_EEOT_DpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF4BindIMN5blink22ContentIndexIconLoaderEFvN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEENSt3__110unique_ptrINS_6VectorI8SkBitmapLj0ENS_18PartitionAllocatorEEENS9_14default_deleteISE_EEEEN4base12OnceCallbackIFvS8_SE_EEEEJNS1_10PersistentIS2_EES8_SH_SL_EFvvEEENSJ_IT1_EEOT_DpOT0_"}
!19 = !{!"branch_weights", i32 2000, i32 1}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN5blink9WebVectorINS_8Manifest13ImageResourceEE13ReleaseVectorEv: argument 0"}
!22 = distinct !{!22, !"_ZN5blink9WebVectorINS_8Manifest13ImageResourceEE13ReleaseVectorEv"}
!23 = distinct !{!23, !24, !"_ZN5blink12_GLOBAL__N_112FindBestIconENS_9WebVectorINS_8Manifest13ImageResourceEEERKN3gfx4SizeE: argument 0"}
!24 = distinct !{!24, !"_ZN5blink12_GLOBAL__N_112FindBestIconENS_9WebVectorINS_8Manifest13ImageResourceEEERKN3gfx4SizeE"}
!25 = !{!23}
!26 = !{!21}
!27 = !{!28, !30, !32}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink22ContentIndexIconLoader5StartEPNS3_16ExecutionContextEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSD_18PartitionAllocatorEEENS2_IFvSC_NSE_I8SkBitmapLj0ESH_EEEEEE3$_0JRNS_17RepeatingCallbackIFvvEEENSD_17UnretainedWrapperISM_EEEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink22ContentIndexIconLoader5StartEPNS3_16ExecutionContextEN4mojo9StructPtrINS3_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSD_18PartitionAllocatorEEENS2_IFvSC_NSE_I8SkBitmapLj0ESH_EEEEEE3$_0JRNS_17RepeatingCallbackIFvvEEENSD_17UnretainedWrapperISM_EEEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIZN5blink22ContentIndexIconLoader5StartEPNS1_16ExecutionContextEN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSB_18PartitionAllocatorEEENS_12OnceCallbackIFvSA_NSC_I8SkBitmapLj0ESF_EEEEEE3$_0JRNS_17RepeatingCallbackIFvvEEENSB_17UnretainedWrapperISL_EEEEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIZN5blink22ContentIndexIconLoader5StartEPNS1_16ExecutionContextEN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEERKN3WTF6VectorIN3gfx4SizeELj0ENSB_18PartitionAllocatorEEENS_12OnceCallbackIFvSA_NSC_I8SkBitmapLj0ESF_EEEEEE3$_0JRNS_17RepeatingCallbackIFvvEEENSB_17UnretainedWrapperISL_EEEEENSJ_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSX_DpOSY_"}
!32 = distinct !{!32, !33, !"_ZN3WTF4BindIZN5blink22ContentIndexIconLoader5StartEPNS1_16ExecutionContextEN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEERKNS_6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEEEN4base12OnceCallbackIFvSA_NSB_I8SkBitmapLj0ESE_EEEEEE3$_0JRNSI_17RepeatingCallbackIFvvEEENS_17UnretainedWrapperISL_EEEFvSK_dEEENSJ_IT1_EEOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF4BindIZN5blink22ContentIndexIconLoader5StartEPNS1_16ExecutionContextEN4mojo9StructPtrINS1_5mojom5blink18ContentDescriptionEEERKNS_6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEEEN4base12OnceCallbackIFvSA_NSB_I8SkBitmapLj0ESE_EEEEEE3$_0JRNSI_17RepeatingCallbackIFvvEEENS_17UnretainedWrapperISL_EEEFvSK_dEEENSJ_IT1_EEOT_DpOT0_"}
