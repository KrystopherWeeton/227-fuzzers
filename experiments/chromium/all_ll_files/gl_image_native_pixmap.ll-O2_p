; ModuleID = '../../ui/gl/gl_image_native_pixmap.cc'
source_filename = "../../ui/gl/gl_image_native_pixmap.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.gl::EGLApi" = type { i32 (...)** }
%"class.base::ThreadLocalPointer" = type { %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::GLImageNativePixmap" = type <{ %"class.gl::GLImageEGL.base", [3 x i8], i32, %class.scoped_refptr, i8, i8, [6 x i8] }>
%"class.gl::GLImageEGL.base" = type <{ %"class.gl::GLImage", i8*, %"class.gfx::Size", %"class.base::ThreadChecker" }>
%"class.gl::GLImage" = type { i32 (...)**, %"class.base::RefCounted", %"class.gfx::ColorSpace" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::ThreadChecker" = type { i8 }
%class.scoped_refptr = type { %"class.gfx::NativePixmap"* }
%"class.gfx::NativePixmap" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gl::GLImageEGL" = type <{ %"class.gl::GLImage", i8*, %"class.gfx::Size", %"class.base::ThreadChecker", [7 x i8] }>
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i32* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.7", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.42", %"class.gl::RealGLApi"*, %class.scoped_refptr.48, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.64", i8, [7 x i8] }>
%"class.base::RefCounted.7" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.9", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.27", %"class.std::__1::unique_ptr.33", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.27" = type { %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type opaque
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type opaque
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type opaque
%class.scoped_refptr.48 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.49", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.49" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.50", %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i64 }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"struct.gl::GLVersionInfo"* }
%"class.gl::GLSurface" = type { i32 (...)**, %"class.base::RefCounted.70", %"class.base::SupportsWeakPtr.71" }
%"class.base::RefCounted.70" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr.71" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.72", i64 }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.74" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.std::__1::vector.79" = type { %"class.std::__1::__vector_base.80" }
%"class.std::__1::__vector_base.80" = type { i8*, i8*, %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { i8* }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"*, %"class.std::__1::__compressed_pair.94" }
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.gfx::GpuFence"* }
%"class.base::trace_event::ProcessMemoryDump" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZN2gl10GLImageEGL15ReleaseTexImageEj = comdat any

$_ZN2gl19GLImageNativePixmap13SetColorSpaceERKN3gfx10ColorSpaceE = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__16vectorIN3gfx17NativePixmapPlaneENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRiS7_iN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN3gfx8GpuFenceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZTVN2gl19GLImageNativePixmapE = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (i64 (%"class.gl::GLImageEGL"*)* @_ZN2gl10GLImageEGL7GetSizeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmap17GetInternalFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZN2gl7GLImage13GetDataFormatEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmap11GetDataTypeEv to i8*), i8* bitcast (i32 (%"class.gl::GLImageEGL"*)* @_ZN2gl10GLImageEGL16ShouldBindOrCopyEv to i8*), i8* bitcast (i1 (%"class.gl::GLImageEGL"*, i32)* @_ZN2gl10GLImageEGL12BindTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*, i32, i32)* @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj to i8*), i8* bitcast (void (%"class.gl::GLImageEGL"*, i32)* @_ZN2gl10GLImageEGL15ReleaseTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageNativePixmap"*, i32)* @_ZN2gl19GLImageNativePixmap12CopyTexImageEj to i8*), i8* bitcast (i1 (%"class.gl::GLImageNativePixmap"*, i32, %"class.gfx::Point"*, %"class.gfx::Rect"*)* @_ZN2gl19GLImageNativePixmap15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE to i8*), i8* bitcast (i1 (%"class.gl::GLImageNativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, i64)* @_ZN2gl19GLImageNativePixmap20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gl::GLImageNativePixmap"*, %"class.gfx::ColorSpace"*)* @_ZN2gl19GLImageNativePixmap13SetColorSpaceERKN3gfx10ColorSpaceE to i8*), i8* bitcast (void (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmap5FlushEv to i8*), i8* bitcast (void (%"class.gl::GLImageNativePixmap"*, %"class.base::trace_event::ProcessMemoryDump"*, i64, %"class.std::__1::basic_string"*)* @_ZN2gl19GLImageNativePixmap12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage12EmulatingRGBEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage21IsInUseByWindowServerEv to i8*), i8* bitcast (void (%"class.gl::GLImage"*)* @_ZN2gl7GLImage26DisableInUseByWindowServerEv to i8*), i8* bitcast (i32 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage7GetTypeEv to i8*), i8* bitcast (i1 (%"class.gl::GLImage"*)* @_ZNK2gl7GLImage15HasMutableStateEv to i8*), i8* bitcast (%"class.gfx::NativePixmap"* (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmap15GetNativePixmapEv to i8*), i8* bitcast (void (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmapD2Ev to i8*), i8* bitcast (void (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmapD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [29 x i8] c"EGL_EXT_image_flush_external\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"EGL_MESA_image_dma_buf_export\00", align 1
@.str.2 = private unnamed_addr constant [38 x i8] c"../../ui/gl/gl_image_native_pixmap.cc\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"Unsupported format: \00", align 1
@_ZZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEEE18kLinuxDrmModifiers = internal unnamed_addr constant [3 x i32] [i32 13379, i32 13381, i32 13383], align 4
@.str.4 = private unnamed_addr constant [39 x i8] c"EGL_EXT_image_dma_buf_import_modifiers\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"No gl context bound to the current thread\00", align 1
@.str.6 = private unnamed_addr constant [30 x i8] c"GLImageEGL is not initialized\00", align 1
@.str.7 = private unnamed_addr constant [49 x i8] c"Error no extension EGL_MESA_image_dma_buf_export\00", align 1
@_ZN2gl21g_current_egl_contextE = external local_unnamed_addr global %"class.gl::EGLApi"*, align 8
@.str.8 = private unnamed_addr constant [26 x i8] c"Error querying EGLImage: \00", align 1
@.str.9 = private unnamed_addr constant [27 x i8] c"Invalid number of planes: \00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Invalid driver format: \00", align 1
@.str.11 = private unnamed_addr constant [24 x i8] c" for requested format: \00", align 1
@.str.12 = private unnamed_addr constant [27 x i8] c"Error exporting EGLImage: \00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"Invalid dmabuf\00", align 1
@_ZN2gl24g_current_gl_context_tlsE = external local_unnamed_addr global %"class.base::ThreadLocalPointer"*, align 8
@_ZZN2gl19GLImageNativePixmap5FlushEvE7attribs = internal constant [1 x i64] [i64 12344], align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.15 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1
@switch.table._ZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE = private unnamed_addr constant [15 x i32] [i32 538982482, i32 540422482, i32 943215175, i32 909199186, i32 0, i32 875709016, i32 875708993, i32 875713112, i32 808669761, i32 808665665, i32 875713089, i32 0, i32 842094169, i32 842094158, i32 808530000], align 4

@_ZN2gl19GLImageNativePixmapC1ERKN3gfx4SizeENS1_12BufferFormatE = hidden unnamed_addr alias void (%"class.gl::GLImageNativePixmap"*, %"class.gfx::Size"*, i32), void (%"class.gl::GLImageNativePixmap"*, %"class.gfx::Size"*, i32)* @_ZN2gl19GLImageNativePixmapC2ERKN3gfx4SizeENS1_12BufferFormatE
@_ZN2gl19GLImageNativePixmapD1Ev = hidden unnamed_addr alias void (%"class.gl::GLImageNativePixmap"*), void (%"class.gl::GLImageNativePixmap"*)* @_ZN2gl19GLImageNativePixmapD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmapC2ERKN3gfx4SizeENS1_12BufferFormatE(%"class.gl::GLImageNativePixmap"*, %"class.gfx::Size"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.gl::GLImageNativePixmap"* %0 to %"class.gl::GLImageEGL"*
  tail call void @_ZN2gl10GLImageEGLC2ERKN3gfx4SizeE(%"class.gl::GLImageEGL"* %4, %"class.gfx::Size"* dereferenceable(8) %1) #12
  %5 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3, i32 0
  store %"class.gfx::NativePixmap"* null, %"class.gfx::NativePixmap"** %7, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 4
  %9 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #12
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %8, align 8
  %11 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 5
  %12 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #12
  %13 = zext i1 %12 to i8
  store i8 %13, i8* %11, align 1
  ret void
}

declare void @_ZN2gl10GLImageEGLC2ERKN3gfx4SizeE(%"class.gl::GLImageEGL"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmapD2Ev(%"class.gl::GLImageNativePixmap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %3, align 8
  %5 = icmp eq %"class.gfx::NativePixmap"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.gfx::NativePixmap"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.gfx::NativePixmap"*)***
  %15 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %15, i64 13
  %17 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %16, align 8
  tail call void %17(%"class.gfx::NativePixmap"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.gl::GLImageNativePixmap"* %0 to %"class.gl::GLImageEGL"*
  tail call void @_ZN2gl10GLImageEGLD2Ev(%"class.gl::GLImageEGL"* %19) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl10GLImageEGLD2Ev(%"class.gl::GLImageEGL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmapD0Ev(%"class.gl::GLImageNativePixmap"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTVN2gl19GLImageNativePixmapE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3, i32 0
  %4 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %3, align 8
  %5 = icmp eq %"class.gfx::NativePixmap"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %4, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.gfx::NativePixmap"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.gfx::NativePixmap"*)***
  %15 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %15, i64 13
  %17 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %16, align 8
  tail call void %17(%"class.gfx::NativePixmap"* nonnull %13) #12
  br label %18

18:                                               ; preds = %1, %6, %11
  %19 = bitcast %"class.gl::GLImageNativePixmap"* %0 to %"class.gl::GLImageEGL"*
  tail call void @_ZN2gl10GLImageEGLD2Ev(%"class.gl::GLImageEGL"* %19) #12
  %20 = bitcast %"class.gl::GLImageNativePixmap"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #13
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE(%"class.gl::GLImageNativePixmap"*, %"class.gfx::NativePixmap"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %7 [
    i32 4, label %21
    i32 11, label %21
    i32 14, label %21
  ]

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %6) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %11, label %12, label %1019

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 140, i32 2) #12
  %14 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 20) #12
  %17 = load i32, i32* %5, align 4
  %18 = call i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32 %17) #12
  %19 = call i64 @strlen(i8* %18) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* %18, i64 %19) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #12
  br label %1019

21:                                               ; preds = %2, %2, %2, %7
  %22 = bitcast %"class.gfx::NativePixmap"* %1 to i1 (%"class.gfx::NativePixmap"*)***
  %23 = load i1 (%"class.gfx::NativePixmap"*)**, i1 (%"class.gfx::NativePixmap"*)*** %22, align 8
  %24 = load i1 (%"class.gfx::NativePixmap"*)*, i1 (%"class.gfx::NativePixmap"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.gfx::NativePixmap"* %1) #12
  br i1 %25, label %26, label %995

26:                                               ; preds = %21
  %27 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i32** %29 to i64*
  %32 = bitcast %"class.std::__1::vector"* %4 to i64*
  %33 = bitcast i32** %30 to i64*
  %34 = tail call i8* @_Znwm(i64 4) #13
  %35 = bitcast i8* %34 to i32*
  %36 = getelementptr inbounds i8, i8* %34, i64 4
  %37 = ptrtoint i8* %36 to i64
  store i32 12375, i32* %35, align 4
  %38 = ptrtoint i8* %34 to i64
  store i64 %38, i64* %32, align 8
  store i64 %37, i64* %31, align 8
  store i64 %37, i64* %33, align 8
  %39 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 2, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = bitcast %"class.gl::GLImageNativePixmap"* %0 to %"class.gl::GLImageEGL"*
  %42 = bitcast i32** %29 to i64*
  %43 = bitcast %"class.std::__1::vector"* %4 to i64*
  %44 = bitcast i32** %30 to i64*
  %45 = tail call i8* @_Znwm(i64 8) #13
  %46 = getelementptr inbounds i8, i8* %45, i64 4
  %47 = bitcast i8* %46 to i32*
  %48 = getelementptr inbounds i8, i8* %45, i64 8
  %49 = ptrtoint i8* %48 to i64
  store i32 %40, i32* %47, align 4
  %50 = getelementptr inbounds i8, i8* %45, i64 8
  %51 = ptrtoint i8* %50 to i64
  %52 = ptrtoint i8* %45 to i64
  %53 = bitcast i8* %34 to i32*
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %53, align 4
  store i32 %55, i32* %54, align 4
  store i64 %52, i64* %43, align 8
  store i64 %51, i64* %42, align 8
  store i64 %49, i64* %44, align 8
  tail call void @_ZdlPv(i8* nonnull %34) #13
  %56 = ptrtoint i8* %50 to i64
  %57 = bitcast i32** %29 to i64*
  %58 = bitcast %"class.std::__1::vector"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %56, %59
  %61 = ashr exact i64 %60, 2
  %62 = add nsw i64 %61, 1
  %63 = icmp ugt i64 %62, 4611686018427387903
  br i1 %63, label %64, label %66

64:                                               ; preds = %26
  %65 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %65) #14
  unreachable

66:                                               ; preds = %26
  %67 = bitcast i32** %30 to i64*
  %68 = sub i64 %49, %59
  %69 = ashr exact i64 %68, 2
  %70 = icmp ult i64 %69, 2305843009213693951
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = ashr exact i64 %68, 1
  %73 = icmp ult i64 %72, %62
  %74 = select i1 %73, i64 %62, i64 %72
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %71
  %77 = icmp ugt i64 %74, 4611686018427387903
  br i1 %77, label %78, label %79

78:                                               ; preds = %76
  tail call void @abort() #14
  unreachable

79:                                               ; preds = %76, %66
  %80 = phi i64 [ %74, %76 ], [ 4611686018427387903, %66 ]
  %81 = shl i64 %80, 2
  %82 = tail call i8* @_Znwm(i64 %81) #13
  %83 = bitcast i8* %82 to i32*
  br label %84

84:                                               ; preds = %79, %71
  %85 = phi i64 [ %80, %79 ], [ 0, %71 ]
  %86 = phi i32* [ %83, %79 ], [ null, %71 ]
  %87 = getelementptr inbounds i32, i32* %86, i64 %61
  %88 = getelementptr inbounds i32, i32* %86, i64 %85
  %89 = ptrtoint i32* %88 to i64
  store i32 12374, i32* %87, align 4
  %90 = getelementptr inbounds i32, i32* %87, i64 1
  %91 = ptrtoint i32* %90 to i64
  %92 = sub i64 %51, %59
  %93 = ashr exact i64 %92, 2
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds i32, i32* %87, i64 %94
  %96 = ptrtoint i32* %95 to i64
  %97 = icmp sgt i64 %92, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %84
  %99 = bitcast i32* %95 to i8*
  %100 = inttoptr i64 %59 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %100, i64 %92, i1 false) #12
  br label %101

101:                                              ; preds = %98, %84
  store i64 %96, i64* %58, align 8
  store i64 %91, i64* %57, align 8
  store i64 %89, i64* %67, align 8
  %102 = icmp eq i64 %59, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = inttoptr i64 %59 to i8*
  tail call void @_ZdlPv(i8* %104) #13
  br label %105

105:                                              ; preds = %101, %103
  %106 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 2, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = icmp ult i32* %90, %88
  br i1 %108, label %109, label %115

109:                                              ; preds = %105
  store i32 %107, i32* %90, align 4
  %110 = getelementptr inbounds i32, i32* %90, i64 1
  %111 = ptrtoint i32* %110 to i64
  %112 = bitcast i32** %29 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load i32*, i32** %30, align 8
  %114 = ptrtoint i32* %113 to i64
  br label %165

115:                                              ; preds = %105
  %116 = ptrtoint i32* %90 to i64
  %117 = bitcast i32** %29 to i64*
  %118 = bitcast %"class.std::__1::vector"* %4 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %116, %119
  %121 = ashr exact i64 %120, 2
  %122 = add nsw i64 %121, 1
  %123 = icmp ugt i64 %122, 4611686018427387903
  br i1 %123, label %124, label %126

124:                                              ; preds = %115
  %125 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %125) #14
  unreachable

126:                                              ; preds = %115
  %127 = bitcast i32** %30 to i64*
  %128 = sub i64 %89, %119
  %129 = ashr exact i64 %128, 2
  %130 = icmp ult i64 %129, 2305843009213693951
  br i1 %130, label %131, label %139

131:                                              ; preds = %126
  %132 = ashr exact i64 %128, 1
  %133 = icmp ult i64 %132, %122
  %134 = select i1 %133, i64 %122, i64 %132
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %144, label %136

136:                                              ; preds = %131
  %137 = icmp ugt i64 %134, 4611686018427387903
  br i1 %137, label %138, label %139

138:                                              ; preds = %136
  tail call void @abort() #14
  unreachable

139:                                              ; preds = %136, %126
  %140 = phi i64 [ %134, %136 ], [ 4611686018427387903, %126 ]
  %141 = shl i64 %140, 2
  %142 = tail call i8* @_Znwm(i64 %141) #13
  %143 = bitcast i8* %142 to i32*
  br label %144

144:                                              ; preds = %139, %131
  %145 = phi i64 [ %140, %139 ], [ 0, %131 ]
  %146 = phi i32* [ %143, %139 ], [ null, %131 ]
  %147 = getelementptr inbounds i32, i32* %146, i64 %121
  %148 = getelementptr inbounds i32, i32* %146, i64 %145
  %149 = ptrtoint i32* %148 to i64
  store i32 %107, i32* %147, align 4
  %150 = getelementptr inbounds i32, i32* %147, i64 1
  %151 = ptrtoint i32* %150 to i64
  %152 = sub i64 %91, %119
  %153 = ashr exact i64 %152, 2
  %154 = sub nsw i64 0, %153
  %155 = getelementptr inbounds i32, i32* %147, i64 %154
  %156 = ptrtoint i32* %155 to i64
  %157 = icmp sgt i64 %152, 0
  br i1 %157, label %158, label %161

158:                                              ; preds = %144
  %159 = bitcast i32* %155 to i8*
  %160 = inttoptr i64 %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %159, i8* align 4 %160, i64 %152, i1 false) #12
  br label %161

161:                                              ; preds = %158, %144
  store i64 %156, i64* %118, align 8
  store i64 %151, i64* %117, align 8
  store i64 %149, i64* %127, align 8
  %162 = icmp eq i64 %119, 0
  br i1 %162, label %165, label %163

163:                                              ; preds = %161
  %164 = inttoptr i64 %119 to i8*
  tail call void @_ZdlPv(i8* %164) #13
  br label %165

165:                                              ; preds = %109, %161, %163
  %166 = phi i64 [ %114, %109 ], [ %149, %161 ], [ %149, %163 ]
  %167 = phi i64 [ %111, %109 ], [ %151, %161 ], [ %151, %163 ]
  %168 = phi i32* [ %113, %109 ], [ %148, %161 ], [ %148, %163 ]
  %169 = phi i32* [ %110, %109 ], [ %150, %161 ], [ %150, %163 ]
  %170 = icmp ult i32* %169, %168
  br i1 %170, label %171, label %175

171:                                              ; preds = %165
  store i32 12913, i32* %169, align 4
  %172 = getelementptr inbounds i32, i32* %169, i64 1
  %173 = ptrtoint i32* %172 to i64
  %174 = bitcast i32** %29 to i64*
  store i64 %173, i64* %174, align 8
  br label %225

175:                                              ; preds = %165
  %176 = ptrtoint i32* %169 to i64
  %177 = bitcast i32** %29 to i64*
  %178 = bitcast %"class.std::__1::vector"* %4 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 %176, %179
  %181 = ashr exact i64 %180, 2
  %182 = add nsw i64 %181, 1
  %183 = icmp ugt i64 %182, 4611686018427387903
  br i1 %183, label %184, label %186

184:                                              ; preds = %175
  %185 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %185) #14
  unreachable

186:                                              ; preds = %175
  %187 = bitcast i32** %30 to i64*
  %188 = sub i64 %166, %179
  %189 = ashr exact i64 %188, 2
  %190 = icmp ult i64 %189, 2305843009213693951
  br i1 %190, label %191, label %199

191:                                              ; preds = %186
  %192 = ashr exact i64 %188, 1
  %193 = icmp ult i64 %192, %182
  %194 = select i1 %193, i64 %182, i64 %192
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %204, label %196

196:                                              ; preds = %191
  %197 = icmp ugt i64 %194, 4611686018427387903
  br i1 %197, label %198, label %199

198:                                              ; preds = %196
  tail call void @abort() #14
  unreachable

199:                                              ; preds = %196, %186
  %200 = phi i64 [ %194, %196 ], [ 4611686018427387903, %186 ]
  %201 = shl i64 %200, 2
  %202 = tail call i8* @_Znwm(i64 %201) #13
  %203 = bitcast i8* %202 to i32*
  br label %204

204:                                              ; preds = %199, %191
  %205 = phi i64 [ %200, %199 ], [ 0, %191 ]
  %206 = phi i32* [ %203, %199 ], [ null, %191 ]
  %207 = getelementptr inbounds i32, i32* %206, i64 %181
  %208 = getelementptr inbounds i32, i32* %206, i64 %205
  %209 = ptrtoint i32* %208 to i64
  store i32 12913, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %207, i64 1
  %211 = ptrtoint i32* %210 to i64
  %212 = sub i64 %167, %179
  %213 = ashr exact i64 %212, 2
  %214 = sub nsw i64 0, %213
  %215 = getelementptr inbounds i32, i32* %207, i64 %214
  %216 = ptrtoint i32* %215 to i64
  %217 = icmp sgt i64 %212, 0
  br i1 %217, label %218, label %221

218:                                              ; preds = %204
  %219 = bitcast i32* %215 to i8*
  %220 = inttoptr i64 %179 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %219, i8* align 4 %220, i64 %212, i1 false) #12
  br label %221

221:                                              ; preds = %218, %204
  store i64 %216, i64* %178, align 8
  store i64 %211, i64* %177, align 8
  store i64 %209, i64* %187, align 8
  %222 = icmp eq i64 %179, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %221
  %224 = inttoptr i64 %179 to i8*
  tail call void @_ZdlPv(i8* %224) #13
  br label %225

225:                                              ; preds = %171, %221, %223
  %226 = phi i64 [ %173, %171 ], [ %211, %221 ], [ %211, %223 ]
  %227 = phi i32* [ %172, %171 ], [ %210, %221 ], [ %210, %223 ]
  %228 = load i32, i32* %5, align 4
  %229 = icmp ult i32 %228, 15
  br i1 %229, label %230, label %234

230:                                              ; preds = %225
  %231 = sext i32 %228 to i64
  %232 = getelementptr inbounds [15 x i32], [15 x i32]* @switch.table._ZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEE, i64 0, i64 %231
  %233 = load i32, i32* %232, align 4
  br label %234

234:                                              ; preds = %225, %230
  %235 = phi i32 [ %233, %230 ], [ 0, %225 ]
  %236 = load i32*, i32** %30, align 8
  %237 = icmp ult i32* %227, %236
  %238 = ptrtoint i32* %236 to i64
  br i1 %237, label %239, label %243

239:                                              ; preds = %234
  store i32 %235, i32* %227, align 4
  %240 = getelementptr inbounds i32, i32* %227, i64 1
  %241 = ptrtoint i32* %240 to i64
  %242 = bitcast i32** %29 to i64*
  store i64 %241, i64* %242, align 8
  br label %293

243:                                              ; preds = %234
  %244 = ptrtoint i32* %227 to i64
  %245 = bitcast i32** %29 to i64*
  %246 = bitcast %"class.std::__1::vector"* %4 to i64*
  %247 = load i64, i64* %246, align 8
  %248 = sub i64 %244, %247
  %249 = ashr exact i64 %248, 2
  %250 = add nsw i64 %249, 1
  %251 = icmp ugt i64 %250, 4611686018427387903
  br i1 %251, label %252, label %254

252:                                              ; preds = %243
  %253 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %253) #14
  unreachable

254:                                              ; preds = %243
  %255 = bitcast i32** %30 to i64*
  %256 = sub i64 %238, %247
  %257 = ashr exact i64 %256, 2
  %258 = icmp ult i64 %257, 2305843009213693951
  br i1 %258, label %259, label %267

259:                                              ; preds = %254
  %260 = ashr exact i64 %256, 1
  %261 = icmp ult i64 %260, %250
  %262 = select i1 %261, i64 %250, i64 %260
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %272, label %264

264:                                              ; preds = %259
  %265 = icmp ugt i64 %262, 4611686018427387903
  br i1 %265, label %266, label %267

266:                                              ; preds = %264
  tail call void @abort() #14
  unreachable

267:                                              ; preds = %264, %254
  %268 = phi i64 [ %262, %264 ], [ 4611686018427387903, %254 ]
  %269 = shl i64 %268, 2
  %270 = tail call i8* @_Znwm(i64 %269) #13
  %271 = bitcast i8* %270 to i32*
  br label %272

272:                                              ; preds = %267, %259
  %273 = phi i64 [ %268, %267 ], [ 0, %259 ]
  %274 = phi i32* [ %271, %267 ], [ null, %259 ]
  %275 = getelementptr inbounds i32, i32* %274, i64 %249
  %276 = getelementptr inbounds i32, i32* %274, i64 %273
  %277 = ptrtoint i32* %276 to i64
  store i32 %235, i32* %275, align 4
  %278 = getelementptr inbounds i32, i32* %275, i64 1
  %279 = ptrtoint i32* %278 to i64
  %280 = sub i64 %226, %247
  %281 = ashr exact i64 %280, 2
  %282 = sub nsw i64 0, %281
  %283 = getelementptr inbounds i32, i32* %275, i64 %282
  %284 = ptrtoint i32* %283 to i64
  %285 = icmp sgt i64 %280, 0
  br i1 %285, label %286, label %289

286:                                              ; preds = %272
  %287 = bitcast i32* %283 to i8*
  %288 = inttoptr i64 %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %287, i8* align 4 %288, i64 %280, i1 false) #12
  br label %289

289:                                              ; preds = %286, %272
  store i64 %284, i64* %246, align 8
  store i64 %279, i64* %245, align 8
  store i64 %277, i64* %255, align 8
  %290 = icmp eq i64 %247, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %289
  %292 = inttoptr i64 %247 to i8*
  tail call void @_ZdlPv(i8* %292) #13
  br label %293

293:                                              ; preds = %239, %289, %291
  %294 = phi i32* [ %240, %239 ], [ %278, %289 ], [ %278, %291 ]
  %295 = phi i64 [ %241, %239 ], [ %279, %289 ], [ %279, %291 ]
  %296 = tail call zeroext i1 @_ZN2gl12GLSurfaceEGL15HasEGLExtensionEPKc(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.4, i64 0, i64 0)) #12
  %297 = bitcast %"class.gfx::NativePixmap"* %1 to i64 (%"class.gfx::NativePixmap"*)***
  %298 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %297, align 8
  %299 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %298, i64 5
  %300 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %299, align 8
  %301 = tail call i64 %300(%"class.gfx::NativePixmap"* %1) #12
  %302 = icmp eq i64 %301, 0
  br i1 %302, label %309, label %303

303:                                              ; preds = %293
  %304 = bitcast i32** %29 to i64*
  %305 = bitcast %"class.std::__1::vector"* %4 to i64*
  %306 = bitcast i32** %30 to i64*
  %307 = bitcast %"class.gfx::NativePixmap"* %1 to i32 (%"class.gfx::NativePixmap"*, i64)***
  %308 = bitcast %"class.gfx::NativePixmap"* %1 to i64 (%"class.gfx::NativePixmap"*, i64)***
  br label %379

309:                                              ; preds = %986, %293
  %310 = phi i64 [ %295, %293 ], [ %988, %986 ]
  %311 = phi i32* [ %294, %293 ], [ %987, %986 ]
  %312 = load i32*, i32** %30, align 8
  %313 = icmp ult i32* %311, %312
  %314 = ptrtoint i32* %312 to i64
  br i1 %313, label %315, label %320

315:                                              ; preds = %309
  store i32 12344, i32* %311, align 4
  %316 = getelementptr inbounds i32, i32* %311, i64 1
  %317 = ptrtoint i32* %316 to i64
  %318 = bitcast i32** %29 to i64*
  store i64 %317, i64* %318, align 8
  %319 = load i32*, i32** %28, align 8
  br label %370

320:                                              ; preds = %309
  %321 = ptrtoint i32* %311 to i64
  %322 = bitcast i32** %29 to i64*
  %323 = bitcast %"class.std::__1::vector"* %4 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %321, %324
  %326 = ashr exact i64 %325, 2
  %327 = add nsw i64 %326, 1
  %328 = icmp ugt i64 %327, 4611686018427387903
  br i1 %328, label %329, label %331

329:                                              ; preds = %320
  %330 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %330) #14
  unreachable

331:                                              ; preds = %320
  %332 = bitcast i32** %30 to i64*
  %333 = sub i64 %314, %324
  %334 = ashr exact i64 %333, 2
  %335 = icmp ult i64 %334, 2305843009213693951
  br i1 %335, label %336, label %344

336:                                              ; preds = %331
  %337 = ashr exact i64 %333, 1
  %338 = icmp ult i64 %337, %327
  %339 = select i1 %338, i64 %327, i64 %337
  %340 = icmp eq i64 %339, 0
  br i1 %340, label %349, label %341

341:                                              ; preds = %336
  %342 = icmp ugt i64 %339, 4611686018427387903
  br i1 %342, label %343, label %344

343:                                              ; preds = %341
  tail call void @abort() #14
  unreachable

344:                                              ; preds = %341, %331
  %345 = phi i64 [ %339, %341 ], [ 4611686018427387903, %331 ]
  %346 = shl i64 %345, 2
  %347 = tail call i8* @_Znwm(i64 %346) #13
  %348 = bitcast i8* %347 to i32*
  br label %349

349:                                              ; preds = %344, %336
  %350 = phi i64 [ %345, %344 ], [ 0, %336 ]
  %351 = phi i32* [ %348, %344 ], [ null, %336 ]
  %352 = getelementptr inbounds i32, i32* %351, i64 %326
  %353 = getelementptr inbounds i32, i32* %351, i64 %350
  %354 = ptrtoint i32* %353 to i64
  store i32 12344, i32* %352, align 4
  %355 = getelementptr inbounds i32, i32* %352, i64 1
  %356 = ptrtoint i32* %355 to i64
  %357 = sub i64 %310, %324
  %358 = ashr exact i64 %357, 2
  %359 = sub nsw i64 0, %358
  %360 = getelementptr inbounds i32, i32* %352, i64 %359
  %361 = ptrtoint i32* %360 to i64
  %362 = icmp sgt i64 %357, 0
  br i1 %362, label %363, label %366

363:                                              ; preds = %349
  %364 = bitcast i32* %360 to i8*
  %365 = inttoptr i64 %324 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %364, i8* align 4 %365, i64 %357, i1 false) #12
  br label %366

366:                                              ; preds = %363, %349
  store i64 %361, i64* %323, align 8
  store i64 %356, i64* %322, align 8
  store i64 %354, i64* %332, align 8
  %367 = icmp eq i64 %324, 0
  br i1 %367, label %370, label %368

368:                                              ; preds = %366
  %369 = inttoptr i64 %324 to i8*
  tail call void @_ZdlPv(i8* %369) #13
  br label %370

370:                                              ; preds = %315, %366, %368
  %371 = phi i32* [ %319, %315 ], [ %360, %366 ], [ %360, %368 ]
  %372 = tail call zeroext i1 @_ZN2gl10GLImageEGL10InitializeEPvjS1_PKi(%"class.gl::GLImageEGL"* %41, i8* null, i32 12912, i8* null, i32* %371) #12
  %373 = icmp eq i32* %371, null
  br i1 %373, label %378, label %374

374:                                              ; preds = %370
  %375 = ptrtoint i32* %371 to i64
  %376 = bitcast i32** %29 to i64*
  store i64 %375, i64* %376, align 8
  %377 = bitcast i32* %371 to i8*
  tail call void @_ZdlPv(i8* %377) #13
  br label %378

378:                                              ; preds = %370, %374
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #12
  br i1 %372, label %995, label %1019

379:                                              ; preds = %303, %986
  %380 = phi i64 [ %295, %303 ], [ %988, %986 ]
  %381 = phi i32* [ %294, %303 ], [ %987, %986 ]
  %382 = phi i64 [ 0, %303 ], [ %989, %986 ]
  %383 = trunc i64 %382 to i32
  %384 = mul i32 %383, 3
  %385 = add i32 %384, 12914
  %386 = load i32*, i32** %30, align 8
  %387 = icmp ult i32* %381, %386
  %388 = ptrtoint i32* %386 to i64
  br i1 %387, label %389, label %394

389:                                              ; preds = %379
  store i32 %385, i32* %381, align 4
  %390 = getelementptr inbounds i32, i32* %381, i64 1
  %391 = ptrtoint i32* %390 to i64
  store i64 %391, i64* %304, align 8
  %392 = load i32*, i32** %30, align 8
  %393 = ptrtoint i32* %392 to i64
  br label %441

394:                                              ; preds = %379
  %395 = ptrtoint i32* %381 to i64
  %396 = load i64, i64* %305, align 8
  %397 = sub i64 %395, %396
  %398 = ashr exact i64 %397, 2
  %399 = add nsw i64 %398, 1
  %400 = icmp ugt i64 %399, 4611686018427387903
  br i1 %400, label %401, label %403

401:                                              ; preds = %394
  %402 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %402) #14
  unreachable

403:                                              ; preds = %394
  %404 = sub i64 %388, %396
  %405 = ashr exact i64 %404, 2
  %406 = icmp ult i64 %405, 2305843009213693951
  br i1 %406, label %407, label %415

407:                                              ; preds = %403
  %408 = ashr exact i64 %404, 1
  %409 = icmp ult i64 %408, %399
  %410 = select i1 %409, i64 %399, i64 %408
  %411 = icmp eq i64 %410, 0
  br i1 %411, label %420, label %412

412:                                              ; preds = %407
  %413 = icmp ugt i64 %410, 4611686018427387903
  br i1 %413, label %414, label %415

414:                                              ; preds = %412
  tail call void @abort() #14
  unreachable

415:                                              ; preds = %412, %403
  %416 = phi i64 [ %410, %412 ], [ 4611686018427387903, %403 ]
  %417 = shl i64 %416, 2
  %418 = tail call i8* @_Znwm(i64 %417) #13
  %419 = bitcast i8* %418 to i32*
  br label %420

420:                                              ; preds = %415, %407
  %421 = phi i64 [ %416, %415 ], [ 0, %407 ]
  %422 = phi i32* [ %419, %415 ], [ null, %407 ]
  %423 = getelementptr inbounds i32, i32* %422, i64 %398
  %424 = getelementptr inbounds i32, i32* %422, i64 %421
  %425 = ptrtoint i32* %424 to i64
  store i32 %385, i32* %423, align 4
  %426 = getelementptr inbounds i32, i32* %423, i64 1
  %427 = ptrtoint i32* %426 to i64
  %428 = sub i64 %380, %396
  %429 = ashr exact i64 %428, 2
  %430 = sub nsw i64 0, %429
  %431 = getelementptr inbounds i32, i32* %423, i64 %430
  %432 = ptrtoint i32* %431 to i64
  %433 = icmp sgt i64 %428, 0
  br i1 %433, label %434, label %437

434:                                              ; preds = %420
  %435 = bitcast i32* %431 to i8*
  %436 = inttoptr i64 %396 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %435, i8* align 4 %436, i64 %428, i1 false) #12
  br label %437

437:                                              ; preds = %434, %420
  store i64 %432, i64* %305, align 8
  store i64 %427, i64* %304, align 8
  store i64 %425, i64* %306, align 8
  %438 = icmp eq i64 %396, 0
  br i1 %438, label %441, label %439

439:                                              ; preds = %437
  %440 = inttoptr i64 %396 to i8*
  tail call void @_ZdlPv(i8* %440) #13
  br label %441

441:                                              ; preds = %389, %437, %439
  %442 = phi i64 [ %393, %389 ], [ %425, %437 ], [ %425, %439 ]
  %443 = phi i64 [ %391, %389 ], [ %427, %437 ], [ %427, %439 ]
  %444 = phi i32* [ %392, %389 ], [ %424, %437 ], [ %424, %439 ]
  %445 = phi i32* [ %390, %389 ], [ %426, %437 ], [ %426, %439 ]
  %446 = load i32 (%"class.gfx::NativePixmap"*, i64)**, i32 (%"class.gfx::NativePixmap"*, i64)*** %307, align 8
  %447 = getelementptr inbounds i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %446, i64 1
  %448 = load i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %447, align 8
  %449 = tail call i32 %448(%"class.gfx::NativePixmap"* %1, i64 %382) #12
  %450 = icmp ult i32* %445, %444
  br i1 %450, label %451, label %456

451:                                              ; preds = %441
  store i32 %449, i32* %445, align 4
  %452 = getelementptr inbounds i32, i32* %445, i64 1
  %453 = ptrtoint i32* %452 to i64
  store i64 %453, i64* %304, align 8
  %454 = load i32*, i32** %30, align 8
  %455 = ptrtoint i32* %454 to i64
  br label %503

456:                                              ; preds = %441
  %457 = ptrtoint i32* %445 to i64
  %458 = load i64, i64* %305, align 8
  %459 = sub i64 %457, %458
  %460 = ashr exact i64 %459, 2
  %461 = add nsw i64 %460, 1
  %462 = icmp ugt i64 %461, 4611686018427387903
  br i1 %462, label %463, label %465

463:                                              ; preds = %456
  %464 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %464) #14
  unreachable

465:                                              ; preds = %456
  %466 = sub i64 %442, %458
  %467 = ashr exact i64 %466, 2
  %468 = icmp ult i64 %467, 2305843009213693951
  br i1 %468, label %469, label %477

469:                                              ; preds = %465
  %470 = ashr exact i64 %466, 1
  %471 = icmp ult i64 %470, %461
  %472 = select i1 %471, i64 %461, i64 %470
  %473 = icmp eq i64 %472, 0
  br i1 %473, label %482, label %474

474:                                              ; preds = %469
  %475 = icmp ugt i64 %472, 4611686018427387903
  br i1 %475, label %476, label %477

476:                                              ; preds = %474
  tail call void @abort() #14
  unreachable

477:                                              ; preds = %474, %465
  %478 = phi i64 [ %472, %474 ], [ 4611686018427387903, %465 ]
  %479 = shl i64 %478, 2
  %480 = tail call i8* @_Znwm(i64 %479) #13
  %481 = bitcast i8* %480 to i32*
  br label %482

482:                                              ; preds = %477, %469
  %483 = phi i64 [ %478, %477 ], [ 0, %469 ]
  %484 = phi i32* [ %481, %477 ], [ null, %469 ]
  %485 = getelementptr inbounds i32, i32* %484, i64 %460
  %486 = getelementptr inbounds i32, i32* %484, i64 %483
  %487 = ptrtoint i32* %486 to i64
  store i32 %449, i32* %485, align 4
  %488 = getelementptr inbounds i32, i32* %485, i64 1
  %489 = ptrtoint i32* %488 to i64
  %490 = sub i64 %443, %458
  %491 = ashr exact i64 %490, 2
  %492 = sub nsw i64 0, %491
  %493 = getelementptr inbounds i32, i32* %485, i64 %492
  %494 = ptrtoint i32* %493 to i64
  %495 = icmp sgt i64 %490, 0
  br i1 %495, label %496, label %499

496:                                              ; preds = %482
  %497 = bitcast i32* %493 to i8*
  %498 = inttoptr i64 %458 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %497, i8* align 4 %498, i64 %490, i1 false) #12
  br label %499

499:                                              ; preds = %496, %482
  store i64 %494, i64* %305, align 8
  store i64 %489, i64* %304, align 8
  store i64 %487, i64* %306, align 8
  %500 = icmp eq i64 %458, 0
  br i1 %500, label %503, label %501

501:                                              ; preds = %499
  %502 = inttoptr i64 %458 to i8*
  tail call void @_ZdlPv(i8* %502) #13
  br label %503

503:                                              ; preds = %451, %499, %501
  %504 = phi i64 [ %455, %451 ], [ %487, %499 ], [ %487, %501 ]
  %505 = phi i64 [ %453, %451 ], [ %489, %499 ], [ %489, %501 ]
  %506 = phi i32* [ %454, %451 ], [ %486, %499 ], [ %486, %501 ]
  %507 = phi i32* [ %452, %451 ], [ %488, %499 ], [ %488, %501 ]
  %508 = add i32 %384, 12915
  %509 = icmp ult i32* %507, %506
  br i1 %509, label %510, label %515

510:                                              ; preds = %503
  store i32 %508, i32* %507, align 4
  %511 = getelementptr inbounds i32, i32* %507, i64 1
  %512 = ptrtoint i32* %511 to i64
  store i64 %512, i64* %304, align 8
  %513 = load i32*, i32** %30, align 8
  %514 = ptrtoint i32* %513 to i64
  br label %562

515:                                              ; preds = %503
  %516 = ptrtoint i32* %507 to i64
  %517 = load i64, i64* %305, align 8
  %518 = sub i64 %516, %517
  %519 = ashr exact i64 %518, 2
  %520 = add nsw i64 %519, 1
  %521 = icmp ugt i64 %520, 4611686018427387903
  br i1 %521, label %522, label %524

522:                                              ; preds = %515
  %523 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %523) #14
  unreachable

524:                                              ; preds = %515
  %525 = sub i64 %504, %517
  %526 = ashr exact i64 %525, 2
  %527 = icmp ult i64 %526, 2305843009213693951
  br i1 %527, label %528, label %536

528:                                              ; preds = %524
  %529 = ashr exact i64 %525, 1
  %530 = icmp ult i64 %529, %520
  %531 = select i1 %530, i64 %520, i64 %529
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %541, label %533

533:                                              ; preds = %528
  %534 = icmp ugt i64 %531, 4611686018427387903
  br i1 %534, label %535, label %536

535:                                              ; preds = %533
  tail call void @abort() #14
  unreachable

536:                                              ; preds = %533, %524
  %537 = phi i64 [ %531, %533 ], [ 4611686018427387903, %524 ]
  %538 = shl i64 %537, 2
  %539 = tail call i8* @_Znwm(i64 %538) #13
  %540 = bitcast i8* %539 to i32*
  br label %541

541:                                              ; preds = %536, %528
  %542 = phi i64 [ %537, %536 ], [ 0, %528 ]
  %543 = phi i32* [ %540, %536 ], [ null, %528 ]
  %544 = getelementptr inbounds i32, i32* %543, i64 %519
  %545 = getelementptr inbounds i32, i32* %543, i64 %542
  %546 = ptrtoint i32* %545 to i64
  store i32 %508, i32* %544, align 4
  %547 = getelementptr inbounds i32, i32* %544, i64 1
  %548 = ptrtoint i32* %547 to i64
  %549 = sub i64 %505, %517
  %550 = ashr exact i64 %549, 2
  %551 = sub nsw i64 0, %550
  %552 = getelementptr inbounds i32, i32* %544, i64 %551
  %553 = ptrtoint i32* %552 to i64
  %554 = icmp sgt i64 %549, 0
  br i1 %554, label %555, label %558

555:                                              ; preds = %541
  %556 = bitcast i32* %552 to i8*
  %557 = inttoptr i64 %517 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %556, i8* align 4 %557, i64 %549, i1 false) #12
  br label %558

558:                                              ; preds = %555, %541
  store i64 %553, i64* %305, align 8
  store i64 %548, i64* %304, align 8
  store i64 %546, i64* %306, align 8
  %559 = icmp eq i64 %517, 0
  br i1 %559, label %562, label %560

560:                                              ; preds = %558
  %561 = inttoptr i64 %517 to i8*
  tail call void @_ZdlPv(i8* %561) #13
  br label %562

562:                                              ; preds = %510, %558, %560
  %563 = phi i64 [ %514, %510 ], [ %546, %558 ], [ %546, %560 ]
  %564 = phi i64 [ %512, %510 ], [ %548, %558 ], [ %548, %560 ]
  %565 = phi i32* [ %513, %510 ], [ %545, %558 ], [ %545, %560 ]
  %566 = phi i32* [ %511, %510 ], [ %547, %558 ], [ %547, %560 ]
  %567 = load i64 (%"class.gfx::NativePixmap"*, i64)**, i64 (%"class.gfx::NativePixmap"*, i64)*** %308, align 8
  %568 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*, i64)*, i64 (%"class.gfx::NativePixmap"*, i64)** %567, i64 3
  %569 = load i64 (%"class.gfx::NativePixmap"*, i64)*, i64 (%"class.gfx::NativePixmap"*, i64)** %568, align 8
  %570 = tail call i64 %569(%"class.gfx::NativePixmap"* %1, i64 %382) #12
  %571 = trunc i64 %570 to i32
  %572 = icmp ult i32* %566, %565
  br i1 %572, label %573, label %578

573:                                              ; preds = %562
  store i32 %571, i32* %566, align 4
  %574 = getelementptr inbounds i32, i32* %566, i64 1
  %575 = ptrtoint i32* %574 to i64
  store i64 %575, i64* %304, align 8
  %576 = load i32*, i32** %30, align 8
  %577 = ptrtoint i32* %576 to i64
  br label %625

578:                                              ; preds = %562
  %579 = ptrtoint i32* %566 to i64
  %580 = load i64, i64* %305, align 8
  %581 = sub i64 %579, %580
  %582 = ashr exact i64 %581, 2
  %583 = add nsw i64 %582, 1
  %584 = icmp ugt i64 %583, 4611686018427387903
  br i1 %584, label %585, label %587

585:                                              ; preds = %578
  %586 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %586) #14
  unreachable

587:                                              ; preds = %578
  %588 = sub i64 %563, %580
  %589 = ashr exact i64 %588, 2
  %590 = icmp ult i64 %589, 2305843009213693951
  br i1 %590, label %591, label %599

591:                                              ; preds = %587
  %592 = ashr exact i64 %588, 1
  %593 = icmp ult i64 %592, %583
  %594 = select i1 %593, i64 %583, i64 %592
  %595 = icmp eq i64 %594, 0
  br i1 %595, label %604, label %596

596:                                              ; preds = %591
  %597 = icmp ugt i64 %594, 4611686018427387903
  br i1 %597, label %598, label %599

598:                                              ; preds = %596
  tail call void @abort() #14
  unreachable

599:                                              ; preds = %596, %587
  %600 = phi i64 [ %594, %596 ], [ 4611686018427387903, %587 ]
  %601 = shl i64 %600, 2
  %602 = tail call i8* @_Znwm(i64 %601) #13
  %603 = bitcast i8* %602 to i32*
  br label %604

604:                                              ; preds = %599, %591
  %605 = phi i64 [ %600, %599 ], [ 0, %591 ]
  %606 = phi i32* [ %603, %599 ], [ null, %591 ]
  %607 = getelementptr inbounds i32, i32* %606, i64 %582
  %608 = getelementptr inbounds i32, i32* %606, i64 %605
  %609 = ptrtoint i32* %608 to i64
  store i32 %571, i32* %607, align 4
  %610 = getelementptr inbounds i32, i32* %607, i64 1
  %611 = ptrtoint i32* %610 to i64
  %612 = sub i64 %564, %580
  %613 = ashr exact i64 %612, 2
  %614 = sub nsw i64 0, %613
  %615 = getelementptr inbounds i32, i32* %607, i64 %614
  %616 = ptrtoint i32* %615 to i64
  %617 = icmp sgt i64 %612, 0
  br i1 %617, label %618, label %621

618:                                              ; preds = %604
  %619 = bitcast i32* %615 to i8*
  %620 = inttoptr i64 %580 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %619, i8* align 4 %620, i64 %612, i1 false) #12
  br label %621

621:                                              ; preds = %618, %604
  store i64 %616, i64* %305, align 8
  store i64 %611, i64* %304, align 8
  store i64 %609, i64* %306, align 8
  %622 = icmp eq i64 %580, 0
  br i1 %622, label %625, label %623

623:                                              ; preds = %621
  %624 = inttoptr i64 %580 to i8*
  tail call void @_ZdlPv(i8* %624) #13
  br label %625

625:                                              ; preds = %573, %621, %623
  %626 = phi i64 [ %577, %573 ], [ %609, %621 ], [ %609, %623 ]
  %627 = phi i64 [ %575, %573 ], [ %611, %621 ], [ %611, %623 ]
  %628 = phi i32* [ %576, %573 ], [ %608, %621 ], [ %608, %623 ]
  %629 = phi i32* [ %574, %573 ], [ %610, %621 ], [ %610, %623 ]
  %630 = add i32 %384, 12916
  %631 = icmp ult i32* %629, %628
  br i1 %631, label %632, label %637

632:                                              ; preds = %625
  store i32 %630, i32* %629, align 4
  %633 = getelementptr inbounds i32, i32* %629, i64 1
  %634 = ptrtoint i32* %633 to i64
  store i64 %634, i64* %304, align 8
  %635 = load i32*, i32** %30, align 8
  %636 = ptrtoint i32* %635 to i64
  br label %684

637:                                              ; preds = %625
  %638 = ptrtoint i32* %629 to i64
  %639 = load i64, i64* %305, align 8
  %640 = sub i64 %638, %639
  %641 = ashr exact i64 %640, 2
  %642 = add nsw i64 %641, 1
  %643 = icmp ugt i64 %642, 4611686018427387903
  br i1 %643, label %644, label %646

644:                                              ; preds = %637
  %645 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %645) #14
  unreachable

646:                                              ; preds = %637
  %647 = sub i64 %626, %639
  %648 = ashr exact i64 %647, 2
  %649 = icmp ult i64 %648, 2305843009213693951
  br i1 %649, label %650, label %658

650:                                              ; preds = %646
  %651 = ashr exact i64 %647, 1
  %652 = icmp ult i64 %651, %642
  %653 = select i1 %652, i64 %642, i64 %651
  %654 = icmp eq i64 %653, 0
  br i1 %654, label %663, label %655

655:                                              ; preds = %650
  %656 = icmp ugt i64 %653, 4611686018427387903
  br i1 %656, label %657, label %658

657:                                              ; preds = %655
  tail call void @abort() #14
  unreachable

658:                                              ; preds = %655, %646
  %659 = phi i64 [ %653, %655 ], [ 4611686018427387903, %646 ]
  %660 = shl i64 %659, 2
  %661 = tail call i8* @_Znwm(i64 %660) #13
  %662 = bitcast i8* %661 to i32*
  br label %663

663:                                              ; preds = %658, %650
  %664 = phi i64 [ %659, %658 ], [ 0, %650 ]
  %665 = phi i32* [ %662, %658 ], [ null, %650 ]
  %666 = getelementptr inbounds i32, i32* %665, i64 %641
  %667 = getelementptr inbounds i32, i32* %665, i64 %664
  %668 = ptrtoint i32* %667 to i64
  store i32 %630, i32* %666, align 4
  %669 = getelementptr inbounds i32, i32* %666, i64 1
  %670 = ptrtoint i32* %669 to i64
  %671 = sub i64 %627, %639
  %672 = ashr exact i64 %671, 2
  %673 = sub nsw i64 0, %672
  %674 = getelementptr inbounds i32, i32* %666, i64 %673
  %675 = ptrtoint i32* %674 to i64
  %676 = icmp sgt i64 %671, 0
  br i1 %676, label %677, label %680

677:                                              ; preds = %663
  %678 = bitcast i32* %674 to i8*
  %679 = inttoptr i64 %639 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %678, i8* align 4 %679, i64 %671, i1 false) #12
  br label %680

680:                                              ; preds = %677, %663
  store i64 %675, i64* %305, align 8
  store i64 %670, i64* %304, align 8
  store i64 %668, i64* %306, align 8
  %681 = icmp eq i64 %639, 0
  br i1 %681, label %684, label %682

682:                                              ; preds = %680
  %683 = inttoptr i64 %639 to i8*
  tail call void @_ZdlPv(i8* %683) #13
  br label %684

684:                                              ; preds = %632, %680, %682
  %685 = phi i64 [ %636, %632 ], [ %668, %680 ], [ %668, %682 ]
  %686 = phi i64 [ %634, %632 ], [ %670, %680 ], [ %670, %682 ]
  %687 = phi i32* [ %635, %632 ], [ %667, %680 ], [ %667, %682 ]
  %688 = phi i32* [ %633, %632 ], [ %669, %680 ], [ %669, %682 ]
  %689 = load i32 (%"class.gfx::NativePixmap"*, i64)**, i32 (%"class.gfx::NativePixmap"*, i64)*** %307, align 8
  %690 = getelementptr inbounds i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %689, i64 2
  %691 = load i32 (%"class.gfx::NativePixmap"*, i64)*, i32 (%"class.gfx::NativePixmap"*, i64)** %690, align 8
  %692 = tail call i32 %691(%"class.gfx::NativePixmap"* %1, i64 %382) #12
  %693 = icmp ult i32* %688, %687
  br i1 %693, label %694, label %697

694:                                              ; preds = %684
  store i32 %692, i32* %688, align 4
  %695 = getelementptr inbounds i32, i32* %688, i64 1
  %696 = ptrtoint i32* %695 to i64
  store i64 %696, i64* %304, align 8
  br label %744

697:                                              ; preds = %684
  %698 = ptrtoint i32* %688 to i64
  %699 = load i64, i64* %305, align 8
  %700 = sub i64 %698, %699
  %701 = ashr exact i64 %700, 2
  %702 = add nsw i64 %701, 1
  %703 = icmp ugt i64 %702, 4611686018427387903
  br i1 %703, label %704, label %706

704:                                              ; preds = %697
  %705 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %705) #14
  unreachable

706:                                              ; preds = %697
  %707 = sub i64 %685, %699
  %708 = ashr exact i64 %707, 2
  %709 = icmp ult i64 %708, 2305843009213693951
  br i1 %709, label %710, label %718

710:                                              ; preds = %706
  %711 = ashr exact i64 %707, 1
  %712 = icmp ult i64 %711, %702
  %713 = select i1 %712, i64 %702, i64 %711
  %714 = icmp eq i64 %713, 0
  br i1 %714, label %723, label %715

715:                                              ; preds = %710
  %716 = icmp ugt i64 %713, 4611686018427387903
  br i1 %716, label %717, label %718

717:                                              ; preds = %715
  tail call void @abort() #14
  unreachable

718:                                              ; preds = %715, %706
  %719 = phi i64 [ %713, %715 ], [ 4611686018427387903, %706 ]
  %720 = shl i64 %719, 2
  %721 = tail call i8* @_Znwm(i64 %720) #13
  %722 = bitcast i8* %721 to i32*
  br label %723

723:                                              ; preds = %718, %710
  %724 = phi i64 [ %719, %718 ], [ 0, %710 ]
  %725 = phi i32* [ %722, %718 ], [ null, %710 ]
  %726 = getelementptr inbounds i32, i32* %725, i64 %701
  %727 = getelementptr inbounds i32, i32* %725, i64 %724
  %728 = ptrtoint i32* %727 to i64
  store i32 %692, i32* %726, align 4
  %729 = getelementptr inbounds i32, i32* %726, i64 1
  %730 = ptrtoint i32* %729 to i64
  %731 = sub i64 %686, %699
  %732 = ashr exact i64 %731, 2
  %733 = sub nsw i64 0, %732
  %734 = getelementptr inbounds i32, i32* %726, i64 %733
  %735 = ptrtoint i32* %734 to i64
  %736 = icmp sgt i64 %731, 0
  br i1 %736, label %737, label %740

737:                                              ; preds = %723
  %738 = bitcast i32* %734 to i8*
  %739 = inttoptr i64 %699 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %738, i8* align 4 %739, i64 %731, i1 false) #12
  br label %740

740:                                              ; preds = %737, %723
  store i64 %735, i64* %305, align 8
  store i64 %730, i64* %304, align 8
  store i64 %728, i64* %306, align 8
  %741 = icmp eq i64 %699, 0
  br i1 %741, label %744, label %742

742:                                              ; preds = %740
  %743 = inttoptr i64 %699 to i8*
  tail call void @_ZdlPv(i8* %743) #13
  br label %744

744:                                              ; preds = %694, %740, %742
  %745 = phi i32* [ %695, %694 ], [ %729, %740 ], [ %729, %742 ]
  %746 = phi i64 [ %696, %694 ], [ %730, %740 ], [ %730, %742 ]
  %747 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %297, align 8
  %748 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %747, i64 7
  %749 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %748, align 8
  %750 = tail call i64 %749(%"class.gfx::NativePixmap"* %1) #12
  %751 = icmp ne i64 %750, 72057594037927935
  %752 = and i1 %296, %751
  br i1 %752, label %753, label %986

753:                                              ; preds = %744
  %754 = getelementptr inbounds [3 x i32], [3 x i32]* @_ZZN2gl19GLImageNativePixmap10InitializeE13scoped_refptrIN3gfx12NativePixmapEEE18kLinuxDrmModifiers, i64 0, i64 %382
  %755 = load i32*, i32** %30, align 8
  %756 = icmp eq i32* %745, %755
  br i1 %756, label %763, label %757

757:                                              ; preds = %753
  %758 = load i32, i32* %754, align 4
  store i32 %758, i32* %745, align 4
  %759 = getelementptr inbounds i32, i32* %745, i64 1
  %760 = ptrtoint i32* %759 to i64
  store i64 %760, i64* %304, align 8
  %761 = load i32*, i32** %30, align 8
  %762 = ptrtoint i32* %761 to i64
  br label %809

763:                                              ; preds = %753
  %764 = ptrtoint i32* %755 to i64
  %765 = load i64, i64* %305, align 8
  %766 = sub i64 %764, %765
  %767 = ashr exact i64 %766, 2
  %768 = add nsw i64 %767, 1
  %769 = icmp ugt i64 %768, 4611686018427387903
  br i1 %769, label %770, label %772

770:                                              ; preds = %763
  %771 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %771) #14
  unreachable

772:                                              ; preds = %763
  %773 = icmp ult i64 %767, 2305843009213693951
  br i1 %773, label %774, label %782

774:                                              ; preds = %772
  %775 = ashr exact i64 %766, 1
  %776 = icmp ult i64 %775, %768
  %777 = select i1 %776, i64 %768, i64 %775
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %787, label %779

779:                                              ; preds = %774
  %780 = icmp ugt i64 %777, 4611686018427387903
  br i1 %780, label %781, label %782

781:                                              ; preds = %779
  tail call void @abort() #14
  unreachable

782:                                              ; preds = %779, %772
  %783 = phi i64 [ %777, %779 ], [ 4611686018427387903, %772 ]
  %784 = shl i64 %783, 2
  %785 = tail call i8* @_Znwm(i64 %784) #13
  %786 = bitcast i8* %785 to i32*
  br label %787

787:                                              ; preds = %782, %774
  %788 = phi i64 [ %783, %782 ], [ 0, %774 ]
  %789 = phi i32* [ %786, %782 ], [ null, %774 ]
  %790 = getelementptr inbounds i32, i32* %789, i64 %767
  %791 = getelementptr inbounds i32, i32* %789, i64 %788
  %792 = ptrtoint i32* %791 to i64
  %793 = load i32, i32* %754, align 4
  store i32 %793, i32* %790, align 4
  %794 = getelementptr inbounds i32, i32* %790, i64 1
  %795 = ptrtoint i32* %794 to i64
  %796 = sub i64 %746, %765
  %797 = ashr exact i64 %796, 2
  %798 = sub nsw i64 0, %797
  %799 = getelementptr inbounds i32, i32* %790, i64 %798
  %800 = ptrtoint i32* %799 to i64
  %801 = icmp sgt i64 %796, 0
  br i1 %801, label %802, label %805

802:                                              ; preds = %787
  %803 = bitcast i32* %799 to i8*
  %804 = inttoptr i64 %765 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %803, i8* align 4 %804, i64 %796, i1 false) #12
  br label %805

805:                                              ; preds = %802, %787
  store i64 %800, i64* %305, align 8
  store i64 %795, i64* %304, align 8
  store i64 %792, i64* %306, align 8
  %806 = icmp eq i64 %765, 0
  br i1 %806, label %809, label %807

807:                                              ; preds = %805
  %808 = inttoptr i64 %765 to i8*
  tail call void @_ZdlPv(i8* %808) #13
  br label %809

809:                                              ; preds = %757, %805, %807
  %810 = phi i64 [ %762, %757 ], [ %792, %805 ], [ %792, %807 ]
  %811 = phi i32 [ %758, %757 ], [ %793, %805 ], [ %793, %807 ]
  %812 = phi i64 [ %760, %757 ], [ %795, %805 ], [ %795, %807 ]
  %813 = phi i32* [ %761, %757 ], [ %791, %805 ], [ %791, %807 ]
  %814 = phi i32* [ %759, %757 ], [ %794, %805 ], [ %794, %807 ]
  %815 = trunc i64 %750 to i32
  %816 = icmp ult i32* %814, %813
  br i1 %816, label %817, label %822

817:                                              ; preds = %809
  store i32 %815, i32* %814, align 4
  %818 = getelementptr inbounds i32, i32* %814, i64 1
  %819 = ptrtoint i32* %818 to i64
  store i64 %819, i64* %304, align 8
  %820 = load i32*, i32** %30, align 8
  %821 = ptrtoint i32* %820 to i64
  br label %869

822:                                              ; preds = %809
  %823 = ptrtoint i32* %814 to i64
  %824 = load i64, i64* %305, align 8
  %825 = sub i64 %823, %824
  %826 = ashr exact i64 %825, 2
  %827 = add nsw i64 %826, 1
  %828 = icmp ugt i64 %827, 4611686018427387903
  br i1 %828, label %829, label %831

829:                                              ; preds = %822
  %830 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %830) #14
  unreachable

831:                                              ; preds = %822
  %832 = sub i64 %810, %824
  %833 = ashr exact i64 %832, 2
  %834 = icmp ult i64 %833, 2305843009213693951
  br i1 %834, label %835, label %843

835:                                              ; preds = %831
  %836 = ashr exact i64 %832, 1
  %837 = icmp ult i64 %836, %827
  %838 = select i1 %837, i64 %827, i64 %836
  %839 = icmp eq i64 %838, 0
  br i1 %839, label %848, label %840

840:                                              ; preds = %835
  %841 = icmp ugt i64 %838, 4611686018427387903
  br i1 %841, label %842, label %843

842:                                              ; preds = %840
  tail call void @abort() #14
  unreachable

843:                                              ; preds = %840, %831
  %844 = phi i64 [ %838, %840 ], [ 4611686018427387903, %831 ]
  %845 = shl i64 %844, 2
  %846 = tail call i8* @_Znwm(i64 %845) #13
  %847 = bitcast i8* %846 to i32*
  br label %848

848:                                              ; preds = %843, %835
  %849 = phi i64 [ %844, %843 ], [ 0, %835 ]
  %850 = phi i32* [ %847, %843 ], [ null, %835 ]
  %851 = getelementptr inbounds i32, i32* %850, i64 %826
  %852 = getelementptr inbounds i32, i32* %850, i64 %849
  %853 = ptrtoint i32* %852 to i64
  store i32 %815, i32* %851, align 4
  %854 = getelementptr inbounds i32, i32* %851, i64 1
  %855 = ptrtoint i32* %854 to i64
  %856 = sub i64 %812, %824
  %857 = ashr exact i64 %856, 2
  %858 = sub nsw i64 0, %857
  %859 = getelementptr inbounds i32, i32* %851, i64 %858
  %860 = ptrtoint i32* %859 to i64
  %861 = icmp sgt i64 %856, 0
  br i1 %861, label %862, label %865

862:                                              ; preds = %848
  %863 = bitcast i32* %859 to i8*
  %864 = inttoptr i64 %824 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %863, i8* align 4 %864, i64 %856, i1 false) #12
  br label %865

865:                                              ; preds = %862, %848
  store i64 %860, i64* %305, align 8
  store i64 %855, i64* %304, align 8
  store i64 %853, i64* %306, align 8
  %866 = icmp eq i64 %824, 0
  br i1 %866, label %869, label %867

867:                                              ; preds = %865
  %868 = inttoptr i64 %824 to i8*
  tail call void @_ZdlPv(i8* %868) #13
  br label %869

869:                                              ; preds = %817, %865, %867
  %870 = phi i64 [ %821, %817 ], [ %853, %865 ], [ %853, %867 ]
  %871 = phi i64 [ %819, %817 ], [ %855, %865 ], [ %855, %867 ]
  %872 = phi i32* [ %820, %817 ], [ %852, %865 ], [ %852, %867 ]
  %873 = phi i32* [ %818, %817 ], [ %854, %865 ], [ %854, %867 ]
  %874 = add nsw i32 %811, 1
  %875 = icmp ult i32* %873, %872
  br i1 %875, label %876, label %881

876:                                              ; preds = %869
  store i32 %874, i32* %873, align 4
  %877 = getelementptr inbounds i32, i32* %873, i64 1
  %878 = ptrtoint i32* %877 to i64
  store i64 %878, i64* %304, align 8
  %879 = load i32*, i32** %30, align 8
  %880 = ptrtoint i32* %879 to i64
  br label %928

881:                                              ; preds = %869
  %882 = ptrtoint i32* %873 to i64
  %883 = load i64, i64* %305, align 8
  %884 = sub i64 %882, %883
  %885 = ashr exact i64 %884, 2
  %886 = add nsw i64 %885, 1
  %887 = icmp ugt i64 %886, 4611686018427387903
  br i1 %887, label %888, label %890

888:                                              ; preds = %881
  %889 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %889) #14
  unreachable

890:                                              ; preds = %881
  %891 = sub i64 %870, %883
  %892 = ashr exact i64 %891, 2
  %893 = icmp ult i64 %892, 2305843009213693951
  br i1 %893, label %894, label %902

894:                                              ; preds = %890
  %895 = ashr exact i64 %891, 1
  %896 = icmp ult i64 %895, %886
  %897 = select i1 %896, i64 %886, i64 %895
  %898 = icmp eq i64 %897, 0
  br i1 %898, label %907, label %899

899:                                              ; preds = %894
  %900 = icmp ugt i64 %897, 4611686018427387903
  br i1 %900, label %901, label %902

901:                                              ; preds = %899
  tail call void @abort() #14
  unreachable

902:                                              ; preds = %899, %890
  %903 = phi i64 [ %897, %899 ], [ 4611686018427387903, %890 ]
  %904 = shl i64 %903, 2
  %905 = tail call i8* @_Znwm(i64 %904) #13
  %906 = bitcast i8* %905 to i32*
  br label %907

907:                                              ; preds = %902, %894
  %908 = phi i64 [ %903, %902 ], [ 0, %894 ]
  %909 = phi i32* [ %906, %902 ], [ null, %894 ]
  %910 = getelementptr inbounds i32, i32* %909, i64 %885
  %911 = getelementptr inbounds i32, i32* %909, i64 %908
  %912 = ptrtoint i32* %911 to i64
  store i32 %874, i32* %910, align 4
  %913 = getelementptr inbounds i32, i32* %910, i64 1
  %914 = ptrtoint i32* %913 to i64
  %915 = sub i64 %871, %883
  %916 = ashr exact i64 %915, 2
  %917 = sub nsw i64 0, %916
  %918 = getelementptr inbounds i32, i32* %910, i64 %917
  %919 = ptrtoint i32* %918 to i64
  %920 = icmp sgt i64 %915, 0
  br i1 %920, label %921, label %924

921:                                              ; preds = %907
  %922 = bitcast i32* %918 to i8*
  %923 = inttoptr i64 %883 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %922, i8* align 4 %923, i64 %915, i1 false) #12
  br label %924

924:                                              ; preds = %921, %907
  store i64 %919, i64* %305, align 8
  store i64 %914, i64* %304, align 8
  store i64 %912, i64* %306, align 8
  %925 = icmp eq i64 %883, 0
  br i1 %925, label %928, label %926

926:                                              ; preds = %924
  %927 = inttoptr i64 %883 to i8*
  tail call void @_ZdlPv(i8* %927) #13
  br label %928

928:                                              ; preds = %876, %924, %926
  %929 = phi i64 [ %880, %876 ], [ %912, %924 ], [ %912, %926 ]
  %930 = phi i64 [ %878, %876 ], [ %914, %924 ], [ %914, %926 ]
  %931 = phi i32* [ %879, %876 ], [ %911, %924 ], [ %911, %926 ]
  %932 = phi i32* [ %877, %876 ], [ %913, %924 ], [ %913, %926 ]
  %933 = lshr i64 %750, 32
  %934 = trunc i64 %933 to i32
  %935 = icmp ult i32* %932, %931
  br i1 %935, label %936, label %939

936:                                              ; preds = %928
  store i32 %934, i32* %932, align 4
  %937 = getelementptr inbounds i32, i32* %932, i64 1
  %938 = ptrtoint i32* %937 to i64
  store i64 %938, i64* %304, align 8
  br label %986

939:                                              ; preds = %928
  %940 = ptrtoint i32* %932 to i64
  %941 = load i64, i64* %305, align 8
  %942 = sub i64 %940, %941
  %943 = ashr exact i64 %942, 2
  %944 = add nsw i64 %943, 1
  %945 = icmp ugt i64 %944, 4611686018427387903
  br i1 %945, label %946, label %948

946:                                              ; preds = %939
  %947 = bitcast %"class.std::__1::vector"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %947) #14
  unreachable

948:                                              ; preds = %939
  %949 = sub i64 %929, %941
  %950 = ashr exact i64 %949, 2
  %951 = icmp ult i64 %950, 2305843009213693951
  br i1 %951, label %952, label %960

952:                                              ; preds = %948
  %953 = ashr exact i64 %949, 1
  %954 = icmp ult i64 %953, %944
  %955 = select i1 %954, i64 %944, i64 %953
  %956 = icmp eq i64 %955, 0
  br i1 %956, label %965, label %957

957:                                              ; preds = %952
  %958 = icmp ugt i64 %955, 4611686018427387903
  br i1 %958, label %959, label %960

959:                                              ; preds = %957
  tail call void @abort() #14
  unreachable

960:                                              ; preds = %957, %948
  %961 = phi i64 [ %955, %957 ], [ 4611686018427387903, %948 ]
  %962 = shl i64 %961, 2
  %963 = tail call i8* @_Znwm(i64 %962) #13
  %964 = bitcast i8* %963 to i32*
  br label %965

965:                                              ; preds = %960, %952
  %966 = phi i64 [ %961, %960 ], [ 0, %952 ]
  %967 = phi i32* [ %964, %960 ], [ null, %952 ]
  %968 = getelementptr inbounds i32, i32* %967, i64 %943
  %969 = getelementptr inbounds i32, i32* %967, i64 %966
  %970 = ptrtoint i32* %969 to i64
  store i32 %934, i32* %968, align 4
  %971 = getelementptr inbounds i32, i32* %968, i64 1
  %972 = ptrtoint i32* %971 to i64
  %973 = sub i64 %930, %941
  %974 = ashr exact i64 %973, 2
  %975 = sub nsw i64 0, %974
  %976 = getelementptr inbounds i32, i32* %968, i64 %975
  %977 = ptrtoint i32* %976 to i64
  %978 = icmp sgt i64 %973, 0
  br i1 %978, label %979, label %982

979:                                              ; preds = %965
  %980 = bitcast i32* %976 to i8*
  %981 = inttoptr i64 %941 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %980, i8* align 4 %981, i64 %973, i1 false) #12
  br label %982

982:                                              ; preds = %979, %965
  store i64 %977, i64* %305, align 8
  store i64 %972, i64* %304, align 8
  store i64 %970, i64* %306, align 8
  %983 = icmp eq i64 %941, 0
  br i1 %983, label %986, label %984

984:                                              ; preds = %982
  %985 = inttoptr i64 %941 to i8*
  tail call void @_ZdlPv(i8* %985) #13
  br label %986

986:                                              ; preds = %984, %982, %936, %744
  %987 = phi i32* [ %971, %984 ], [ %971, %982 ], [ %937, %936 ], [ %745, %744 ]
  %988 = phi i64 [ %972, %984 ], [ %972, %982 ], [ %938, %936 ], [ %746, %744 ]
  %989 = add nuw i64 %382, 1
  %990 = load i64 (%"class.gfx::NativePixmap"*)**, i64 (%"class.gfx::NativePixmap"*)*** %297, align 8
  %991 = getelementptr inbounds i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %990, i64 5
  %992 = load i64 (%"class.gfx::NativePixmap"*)*, i64 (%"class.gfx::NativePixmap"*)** %991, align 8
  %993 = tail call i64 %992(%"class.gfx::NativePixmap"* %1) #12
  %994 = icmp ult i64 %989, %993
  br i1 %994, label %379, label %309

995:                                              ; preds = %378, %21
  %996 = icmp eq %"class.gfx::NativePixmap"* %1, null
  br i1 %996, label %1000, label %997

997:                                              ; preds = %995
  %998 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %999 = atomicrmw add i32* %998, i32 1 monotonic
  br label %1000

1000:                                             ; preds = %995, %997
  %1001 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3
  %1002 = ptrtoint %"class.gfx::NativePixmap"* %1 to i64
  %1003 = bitcast %class.scoped_refptr* %1001 to i64*
  %1004 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %1001, i64 0, i32 0
  %1005 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %1004, align 8
  store i64 %1002, i64* %1003, align 8
  %1006 = icmp eq %"class.gfx::NativePixmap"* %1005, null
  br i1 %1006, label %1019, label %1007

1007:                                             ; preds = %1000
  %1008 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %1005, i64 0, i32 1
  %1009 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1008, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1010 = atomicrmw sub i32* %1009, i32 1 acq_rel
  %1011 = icmp eq i32 %1010, 1
  br i1 %1011, label %1012, label %1019

1012:                                             ; preds = %1007
  %1013 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1008, i64 -2
  %1014 = bitcast %"class.base::RefCountedThreadSafe"* %1013 to %"class.gfx::NativePixmap"*
  %1015 = bitcast %"class.base::RefCountedThreadSafe"* %1013 to void (%"class.gfx::NativePixmap"*)***
  %1016 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %1015, align 8
  %1017 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %1016, i64 13
  %1018 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %1017, align 8
  tail call void %1018(%"class.gfx::NativePixmap"* nonnull %1014) #12
  br label %1019

1019:                                             ; preds = %1012, %1007, %1000, %12, %10, %378
  %1020 = phi i1 [ false, %378 ], [ false, %10 ], [ false, %12 ], [ true, %1000 ], [ true, %1007 ], [ true, %1012 ]
  %1021 = icmp eq %"class.gfx::NativePixmap"* %1, null
  br i1 %1021, label %1034, label %1022

1022:                                             ; preds = %1019
  %1023 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %1, i64 0, i32 1
  %1024 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1023, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1025 = atomicrmw sub i32* %1024, i32 1 acq_rel
  %1026 = icmp eq i32 %1025, 1
  br i1 %1026, label %1027, label %1034

1027:                                             ; preds = %1022
  %1028 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %1023, i64 -2
  %1029 = bitcast %"class.base::RefCountedThreadSafe"* %1028 to %"class.gfx::NativePixmap"*
  %1030 = bitcast %"class.base::RefCountedThreadSafe"* %1028 to void (%"class.gfx::NativePixmap"*)***
  %1031 = load void (%"class.gfx::NativePixmap"*)**, void (%"class.gfx::NativePixmap"*)*** %1030, align 8
  %1032 = getelementptr inbounds void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %1031, i64 13
  %1033 = load void (%"class.gfx::NativePixmap"*)*, void (%"class.gfx::NativePixmap"*)** %1032, align 8
  call void %1033(%"class.gfx::NativePixmap"* nonnull %1029) #12
  br label %1034

1034:                                             ; preds = %1019, %1022, %1027
  ret i1 %1020
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

declare i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN2gl10GLImageEGL10InitializeEPvjS1_PKi(%"class.gl::GLImageEGL"*, i8*, i32, i8*, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageNativePixmap21InitializeFromTextureEj(%"class.gl::GLImageNativePixmap"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::LogMessage", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %7 [
    i32 4, label %21
    i32 11, label %21
    i32 14, label %21
  ]

7:                                                ; preds = %2
  %8 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %6) #12
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %21

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %11, label %12, label %47

12:                                               ; preds = %10
  %13 = bitcast %"class.logging::LogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %13) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 196, i32 2) #12
  %14 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %3, i64 0, i32 2
  %15 = bitcast %"class.std::__1::basic_ostringstream"* %14 to %"class.std::__1::basic_ostream"*
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i64 20) #12
  %17 = load i32, i32* %5, align 4
  %18 = call i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32 %17) #12
  %19 = call i64 @strlen(i8* %18) #12
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* %18, i64 %19) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %13) #12
  br label %47

21:                                               ; preds = %2, %2, %2, %7
  %22 = tail call %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() #12
  %23 = icmp eq %"class.gl::GLContext"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.gl::GLContext"* %22 to i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)***
  %26 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)**, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*** %25, align 8
  %27 = getelementptr inbounds i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %26, i64 2
  %28 = load i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)*, i1 (%"class.gl::GLContext"*, %"class.gl::GLSurface"*)** %27, align 8
  %29 = tail call zeroext i1 %28(%"class.gl::GLContext"* nonnull %22, %"class.gl::GLSurface"* null) #12
  br i1 %29, label %37, label %30

30:                                               ; preds = %21, %24
  %31 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %31, label %32, label %47

32:                                               ; preds = %30
  %33 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %33) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 201, i32 2) #12
  %34 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %35 = bitcast %"class.std::__1::basic_ostringstream"* %34 to %"class.std::__1::basic_ostream"*
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i64 41) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %33) #12
  br label %47

37:                                               ; preds = %24
  %38 = bitcast %"class.gl::GLContext"* %22 to i8* (%"class.gl::GLContext"*)***
  %39 = load i8* (%"class.gl::GLContext"*)**, i8* (%"class.gl::GLContext"*)*** %38, align 8
  %40 = getelementptr inbounds i8* (%"class.gl::GLContext"*)*, i8* (%"class.gl::GLContext"*)** %39, i64 3
  %41 = load i8* (%"class.gl::GLContext"*)*, i8* (%"class.gl::GLContext"*)** %40, align 8
  %42 = tail call i8* %41(%"class.gl::GLContext"* nonnull %22) #12
  %43 = bitcast %"class.gl::GLImageNativePixmap"* %0 to %"class.gl::GLImageEGL"*
  %44 = zext i32 %1 to i64
  %45 = inttoptr i64 %44 to i8*
  %46 = tail call zeroext i1 @_ZN2gl10GLImageEGL10InitializeEPvjS1_PKi(%"class.gl::GLImageEGL"* %43, i8* %42, i32 12465, i8* %45, i32* null) #12
  br label %47

47:                                               ; preds = %32, %30, %12, %10, %37
  %48 = phi i1 [ %46, %37 ], [ false, %10 ], [ false, %12 ], [ false, %30 ], [ false, %32 ]
  ret i1 %48
}

declare %"class.gl::GLContext"* @_ZN2gl9GLContext10GetCurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmap12ExportHandleEv(%"struct.gfx::NativePixmapHandle"* noalias sret, %"class.gl::GLImageNativePixmap"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::ScopedGeneric", align 8
  %4 = alloca %"class.logging::LogMessage", align 8
  %5 = alloca %"class.logging::LogMessage", align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca %"class.logging::LogMessage", align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.logging::LogMessage", align 8
  %14 = alloca %"struct.gfx::NativePixmapHandle", align 8
  %15 = alloca %"class.base::ScopedGeneric", align 8
  %16 = alloca %"class.logging::LogMessage", align 8
  %17 = alloca i32, align 4
  %18 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %1, i64 0, i32 0, i32 1
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %29

21:                                               ; preds = %2
  %22 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %22, label %23, label %28

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %24) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 220, i32 2) #12
  %25 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %4, i64 0, i32 2
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.6, i64 0, i64 0), i64 29) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %24) #12
  br label %28

28:                                               ; preds = %21, %23
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %272

29:                                               ; preds = %2
  %30 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %1, i64 0, i32 5
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %41

33:                                               ; preds = %29
  %34 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %34, label %35, label %40

35:                                               ; preds = %33
  %36 = bitcast %"class.logging::LogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %36) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %5, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 225, i32 2) #12
  %37 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %5, i64 0, i32 2
  %38 = bitcast %"class.std::__1::basic_ostringstream"* %37 to %"class.std::__1::basic_ostream"*
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %38, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.7, i64 0, i64 0), i64 48) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %36) #12
  br label %40

40:                                               ; preds = %33, %35
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %272

41:                                               ; preds = %29
  %42 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42) #12
  store i32 0, i32* %6, align 4
  %43 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #12
  store i32 0, i32* %7, align 4
  %44 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #12
  store i64 0, i64* %8, align 8
  %45 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %46 = tail call i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() #12
  %47 = load i8*, i8** %18, align 8
  %48 = bitcast %"class.gl::EGLApi"* %45 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)***
  %49 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)*** %48, align 8
  %50 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)** %49, i64 25
  %51 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i64*)** %50, align 8
  %52 = call i32 %51(%"class.gl::EGLApi"* %45, i8* %46, i8* %47, i32* nonnull %6, i32* nonnull %7, i64* nonnull %8) #12
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %41
  %55 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %55, label %56, label %64

56:                                               ; preds = %54
  %57 = bitcast %"class.logging::LogMessage"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %57) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %9, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 236, i32 2) #12
  %58 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %9, i64 0, i32 2
  %59 = bitcast %"class.std::__1::basic_ostringstream"* %58 to %"class.std::__1::basic_ostream"*
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %59, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i64 25) #12
  %61 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %62 = call i64 @strlen(i8* %61) #12
  %63 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %60, i8* %61, i64 %62) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %57) #12
  br label %64

64:                                               ; preds = %54, %56
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %271

65:                                               ; preds = %41
  %66 = load i32, i32* %7, align 4
  %67 = add i32 %66, -1
  %68 = icmp ugt i32 %67, 3
  br i1 %68, label %69, label %79

69:                                               ; preds = %65
  %70 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %70, label %71, label %78

71:                                               ; preds = %69
  %72 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %72) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 241, i32 2) #12
  %73 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %74 = bitcast %"class.std::__1::basic_ostringstream"* %73 to %"class.std::__1::basic_ostream"*
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %74, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9, i64 0, i64 0), i64 26) #12
  %76 = load i32, i32* %7, align 4
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %75, i32 %76) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %72) #12
  br label %78

78:                                               ; preds = %69, %71
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %271

79:                                               ; preds = %65
  %80 = load i32, i32* %6, align 4
  switch i32 %80, label %92 [
    i32 538982482, label %93
    i32 943215175, label %81
    i32 875708993, label %82
    i32 875709016, label %83
    i32 875713089, label %84
    i32 875713112, label %85
    i32 808665665, label %86
    i32 808669761, label %87
    i32 909199186, label %88
    i32 842094158, label %89
    i32 842094169, label %90
    i32 808530000, label %91
  ]

81:                                               ; preds = %79
  br label %93

82:                                               ; preds = %79
  br label %93

83:                                               ; preds = %79
  br label %93

84:                                               ; preds = %79
  br label %93

85:                                               ; preds = %79
  br label %93

86:                                               ; preds = %79
  br label %93

87:                                               ; preds = %79
  br label %93

88:                                               ; preds = %79
  br label %93

89:                                               ; preds = %79
  br label %93

90:                                               ; preds = %79
  br label %93

91:                                               ; preds = %79
  br label %93

92:                                               ; preds = %79
  br label %93

93:                                               ; preds = %79, %81, %82, %83, %84, %85, %86, %87, %88, %89, %90, %91, %92
  %94 = phi i32 [ 10, %92 ], [ 14, %91 ], [ 12, %90 ], [ 13, %89 ], [ 3, %88 ], [ 8, %87 ], [ 9, %86 ], [ 7, %85 ], [ 10, %84 ], [ 5, %83 ], [ 6, %82 ], [ 2, %81 ], [ 0, %79 ]
  %95 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %1, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %125, label %98

98:                                               ; preds = %93
  %99 = bitcast %"class.gl::GLImageNativePixmap"* %1 to i32 (%"class.gl::GLImageNativePixmap"*)***
  %100 = load i32 (%"class.gl::GLImageNativePixmap"*)**, i32 (%"class.gl::GLImageNativePixmap"*)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.gl::GLImageNativePixmap"*)*, i32 (%"class.gl::GLImageNativePixmap"*)** %100, i64 1
  %102 = load i32 (%"class.gl::GLImageNativePixmap"*)*, i32 (%"class.gl::GLImageNativePixmap"*)** %101, align 8
  %103 = call i32 %102(%"class.gl::GLImageNativePixmap"* %1) #12
  %104 = icmp eq i32 %103, 6407
  %105 = icmp ne i32 %94, 6
  %106 = and i1 %105, %104
  br i1 %106, label %109, label %107

107:                                              ; preds = %98
  %108 = load i32, i32* %7, align 4
  br label %125

109:                                              ; preds = %98
  %110 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %110, label %111, label %124

111:                                              ; preds = %109
  %112 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 252, i32 2) #12
  %113 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %114 = bitcast %"class.std::__1::basic_ostringstream"* %113 to %"class.std::__1::basic_ostream"*
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i64 23) #12
  %116 = call i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32 %94) #12
  %117 = call i64 @strlen(i8* %116) #12
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* %116, i64 %117) #12
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %118, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i64 23) #12
  %120 = load i32, i32* %95, align 4
  %121 = call i8* @_ZN3gfx20BufferFormatToStringENS_12BufferFormatE(i32 %120) #12
  %122 = call i64 @strlen(i8* %121) #12
  %123 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %119, i8* %121, i64 %122) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #12
  br label %124

124:                                              ; preds = %109, %111
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %271

125:                                              ; preds = %107, %93
  %126 = phi i32 [ %108, %107 ], [ %66, %93 ]
  %127 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %127) #12
  %128 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %129 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %130 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %131 = sext i32 %126 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %127, i8 0, i64 24, i1 false) #12
  %132 = icmp eq i32 %126, 0
  br i1 %132, label %172, label %133

133:                                              ; preds = %125
  %134 = icmp slt i32 %126, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %136) #14
  unreachable

137:                                              ; preds = %133
  %138 = shl nsw i64 %131, 2
  %139 = call i8* @_Znwm(i64 %138) #13
  %140 = bitcast i8* %139 to i32*
  %141 = bitcast %"class.std::__1::vector"* %12 to i8**
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds i32, i32* %140, i64 %131
  store i32* %142, i32** %130, align 8
  %143 = bitcast i32** %129 to i64*
  %144 = ptrtoint i8* %139 to i64
  %145 = add nsw i64 %131, -1
  %146 = getelementptr i32, i32* %140, i64 %145
  %147 = ptrtoint i32* %146 to i64
  %148 = sub i64 4, %144
  %149 = add i64 %148, %147
  %150 = and i64 %149, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %139, i8 0, i64 %150, i1 false) #12
  %151 = ptrtoint i32* %142 to i64
  store i64 %151, i64* %143, align 8
  %152 = shl nsw i64 %131, 2
  %153 = call i8* @_Znwm(i64 %152) #13
  %154 = bitcast i8* %153 to i32*
  %155 = ptrtoint i8* %153 to i64
  %156 = add nsw i64 %131, -1
  %157 = getelementptr i32, i32* %154, i64 %156
  %158 = ptrtoint i32* %157 to i64
  %159 = sub i64 4, %155
  %160 = add i64 %159, %158
  %161 = and i64 %160, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %153, i8 0, i64 %161, i1 false) #12
  %162 = shl nsw i64 %131, 2
  %163 = call i8* @_Znwm(i64 %162) #13
  %164 = bitcast i8* %163 to i32*
  %165 = ptrtoint i8* %163 to i64
  %166 = add nsw i64 %131, -1
  %167 = getelementptr i32, i32* %164, i64 %166
  %168 = ptrtoint i32* %167 to i64
  %169 = sub i64 4, %165
  %170 = add i64 %169, %168
  %171 = and i64 %170, -4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %163, i8 0, i64 %171, i1 false) #12
  br label %172

172:                                              ; preds = %125, %137
  %173 = phi i32* [ %154, %137 ], [ null, %125 ]
  %174 = phi i8* [ %153, %137 ], [ null, %125 ]
  %175 = phi i8* [ %163, %137 ], [ null, %125 ]
  %176 = phi i32* [ %164, %137 ], [ null, %125 ]
  %177 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %178 = call i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() #12
  %179 = load i8*, i8** %18, align 8
  %180 = load i32*, i32** %128, align 8
  %181 = bitcast %"class.gl::EGLApi"* %177 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)***
  %182 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)*** %181, align 8
  %183 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)** %182, i64 24
  %184 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i32*, i32*, i32*)** %183, align 8
  %185 = call i32 %184(%"class.gl::EGLApi"* %177, i8* %178, i8* %179, i32* %180, i32* %173, i32* %176) #12
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %198

187:                                              ; preds = %172
  %188 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %188, label %189, label %197

189:                                              ; preds = %187
  %190 = bitcast %"class.logging::LogMessage"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %190) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %13, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 273, i32 2) #12
  %191 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %13, i64 0, i32 2
  %192 = bitcast %"class.std::__1::basic_ostringstream"* %191 to %"class.std::__1::basic_ostream"*
  %193 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %192, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12, i64 0, i64 0), i64 26) #12
  %194 = call i8* @_ZN2ui21GetLastEGLErrorStringEv() #12
  %195 = call i64 @strlen(i8* %194) #12
  %196 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %193, i8* %194, i64 %195) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %190) #12
  br label %197

197:                                              ; preds = %187, %189
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  br label %257

198:                                              ; preds = %172
  %199 = bitcast %"struct.gfx::NativePixmapHandle"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %199) #12
  %200 = getelementptr inbounds %"struct.gfx::NativePixmapHandle", %"struct.gfx::NativePixmapHandle"* %14, i64 0, i32 0
  %201 = getelementptr inbounds %"struct.gfx::NativePixmapHandle", %"struct.gfx::NativePixmapHandle"* %14, i64 0, i32 0, i32 0, i32 1
  %202 = getelementptr inbounds %"struct.gfx::NativePixmapHandle", %"struct.gfx::NativePixmapHandle"* %14, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.gfx::NativePixmapHandle", %"struct.gfx::NativePixmapHandle"* %14, i64 0, i32 1
  %204 = bitcast %"struct.gfx::NativePixmapHandle"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 32, i1 false)
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* nonnull %14) #12
  %205 = load i64, i64* %8, align 8
  store i64 %205, i64* %203, align 8
  %206 = load i32, i32* %7, align 4
  %207 = icmp sgt i32 %206, 0
  br i1 %207, label %208, label %255

208:                                              ; preds = %198
  %209 = bitcast %"class.base::ScopedGeneric"* %15 to i8*
  %210 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 0
  %211 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 1, i32 0
  %212 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 2
  %213 = bitcast i32* %17 to i8*
  %214 = bitcast %"class.base::ScopedGeneric"* %3 to i8*
  %215 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 0
  %216 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 1, i32 0
  %217 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %3, i64 0, i32 2
  %218 = bitcast %"struct.gfx::NativePixmapPlane"** %201 to i64*
  %219 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %15, i64 0, i32 1
  %220 = bitcast %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %219 to i64*
  br label %221

221:                                              ; preds = %208, %250
  %222 = phi i64 [ 0, %208 ], [ %251, %250 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %209) #12
  store i64 -6148914691236517206, i64* %220, align 8
  %223 = load i32*, i32** %128, align 8
  %224 = getelementptr inbounds i32, i32* %223, i64 %222
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %210, align 8
  %225 = load i32, i32* %224, align 4
  store i32 %225, i32* %211, align 8
  store i8 0, i8* %212, align 4
  %226 = icmp eq i32 %225, -1
  br i1 %226, label %230, label %227

227:                                              ; preds = %221
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15, i32 %225) #12
  %228 = load i32, i32* %211, align 8
  %229 = icmp eq i32 %228, -1
  br i1 %229, label %230, label %238

230:                                              ; preds = %227, %221
  %231 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #12
  br i1 %231, label %232, label %237

232:                                              ; preds = %230
  %233 = bitcast %"class.logging::LogMessage"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %233) #12
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2, i64 0, i64 0), i32 284, i32 2) #12
  %234 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %16, i64 0, i32 2
  %235 = bitcast %"class.std::__1::basic_ostringstream"* %234 to %"class.std::__1::basic_ostream"*
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %235, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i64 14) #12
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %233) #12
  br label %237

237:                                              ; preds = %230, %232
  call void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"* %0) #12
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #12
  br label %256

238:                                              ; preds = %227
  %239 = getelementptr inbounds i32, i32* %173, i64 %222
  %240 = getelementptr inbounds i32, i32* %176, i64 %222
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %213) #12
  store i32 0, i32* %17, align 4
  %241 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %201, align 8
  %242 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %202, align 8
  %243 = icmp ult %"struct.gfx::NativePixmapPlane"* %241, %242
  br i1 %243, label %244, label %249

244:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %214) #12
  %245 = load i32, i32* %239, align 4
  %246 = load i32, i32* %240, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %215, align 8
  store i32 -1, i32* %211, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15, i32 %228) #12
  store i32 %228, i32* %216, align 8
  store i8 0, i8* %217, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %3, i32 %228) #12
  call void @_ZN3gfx17NativePixmapPlaneC1EiimN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"struct.gfx::NativePixmapPlane"* %241, i32 %245, i32 %246, i64 0, %"class.base::ScopedGeneric"* nonnull %3) #12
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %214) #12
  %247 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %241, i64 1
  %248 = ptrtoint %"struct.gfx::NativePixmapPlane"* %247 to i64
  store i64 %248, i64* %218, align 8
  br label %250

249:                                              ; preds = %238
  call void @_ZNSt3__16vectorIN3gfx17NativePixmapPlaneENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRiS7_iN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEEEvDpOT_(%"class.std::__1::vector.72"* nonnull %200, i32* dereferenceable(4) %239, i32* dereferenceable(4) %240, i32* nonnull dereferenceable(4) %17, %"class.base::ScopedGeneric"* nonnull dereferenceable(16) %15) #12
  br label %250

250:                                              ; preds = %244, %249
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %213) #12
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %209) #12
  %251 = add nuw nsw i64 %222, 1
  %252 = load i32, i32* %7, align 4
  %253 = sext i32 %252 to i64
  %254 = icmp slt i64 %251, %253
  br i1 %254, label %221, label %255

255:                                              ; preds = %250, %198
  call void @_ZN3gfx18NativePixmapHandleC1EOS0_(%"struct.gfx::NativePixmapHandle"* %0, %"struct.gfx::NativePixmapHandle"* nonnull dereferenceable(32) %14) #12
  br label %256

256:                                              ; preds = %237, %255
  call void @_ZN3gfx18NativePixmapHandleD1Ev(%"struct.gfx::NativePixmapHandle"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %199) #12
  br label %257

257:                                              ; preds = %256, %197
  %258 = icmp eq i32* %176, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %257
  call void @_ZdlPv(i8* %175) #13
  br label %260

260:                                              ; preds = %257, %259
  %261 = icmp eq i32* %173, null
  br i1 %261, label %263, label %262

262:                                              ; preds = %260
  call void @_ZdlPv(i8* %174) #13
  br label %263

263:                                              ; preds = %260, %262
  %264 = load i32*, i32** %128, align 8
  %265 = icmp eq i32* %264, null
  br i1 %265, label %270, label %266

266:                                              ; preds = %263
  %267 = ptrtoint i32* %264 to i64
  %268 = bitcast i32** %129 to i64*
  store i64 %267, i64* %268, align 8
  %269 = bitcast i32* %264 to i8*
  call void @_ZdlPv(i8* %269) #13
  br label %270

270:                                              ; preds = %263, %266
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %127) #12
  br label %271

271:                                              ; preds = %124, %270, %78, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42) #12
  br label %272

272:                                              ; preds = %271, %40, %28
  ret void
}

declare void @_ZN3gfx18NativePixmapHandleC1Ev(%"struct.gfx::NativePixmapHandle"*) unnamed_addr #1

declare i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() local_unnamed_addr #1

declare i8* @_ZN2ui21GetLastEGLErrorStringEv() local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)) #12
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #12
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i64 0, i64 0), i64 44) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #12
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #12
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

declare void @_ZN3gfx18NativePixmapHandleC1EOS0_(%"struct.gfx::NativePixmapHandle"*, %"struct.gfx::NativePixmapHandle"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx18NativePixmapHandleD1Ev(%"struct.gfx::NativePixmapHandle"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl19GLImageNativePixmap17GetInternalFormatEv(%"class.gl::GLImageNativePixmap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 4, label %6
    i32 11, label %6
    i32 14, label %6
  ]

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32 %3) #12
  br label %6

6:                                                ; preds = %1, %1, %1, %4
  %7 = phi i32 [ %5, %4 ], [ 30973, %1 ], [ 30973, %1 ], [ 30973, %1 ]
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2gl19GLImageNativePixmap11GetDataTypeEv(%"class.gl::GLImageNativePixmap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = tail call i32 @_ZN2gl24BufferFormatToGLDataTypeEN3gfx12BufferFormatE(i32 %3) #12
  ret i32 %4
}

declare i32 @_ZN2gl24BufferFormatToGLDataTypeEN3gfx12BufferFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageNativePixmap12CopyTexImageEj(%"class.gl::GLImageNativePixmap"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.79", align 8
  %4 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %7, label %51

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::vector.79"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #12
  %9 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %3, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.79", %"class.std::__1::vector.79"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 2, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 2, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, %13
  %17 = shl nsw i32 %16, 2
  %18 = sext i32 %17 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #12
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %33, label %20

20:                                               ; preds = %7
  %21 = icmp slt i32 %16, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector.79"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %23) #14
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %18) #13
  store i8* %25, i8** %9, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 %18
  store i8* %26, i8** %11, align 8
  %27 = bitcast i8** %10 to i64*
  %28 = ptrtoint i8* %25 to i64
  %29 = sub i64 %18, %28
  %30 = getelementptr i8, i8* %25, i64 %29
  %31 = ptrtoint i8* %30 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %25, i8 0, i64 %31, i1 false) #12
  %32 = ptrtoint i8* %26 to i64
  store i64 %32, i64* %27, align 8
  br label %33

33:                                               ; preds = %7, %24
  %34 = phi i8* [ null, %7 ], [ %25, %24 ]
  %35 = load %"class.base::ThreadLocalPointer"*, %"class.base::ThreadLocalPointer"** @_ZN2gl24g_current_gl_context_tlsE, align 8
  %36 = getelementptr inbounds %"class.base::ThreadLocalPointer", %"class.base::ThreadLocalPointer"* %35, i64 0, i32 0
  %37 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %36) #12
  %38 = bitcast i8* %37 to %"class.gl::GLApi"**
  %39 = load %"class.gl::GLApi"*, %"class.gl::GLApi"** %38, align 8
  %40 = load i32, i32* %12, align 4
  %41 = load i32, i32* %14, align 4
  %42 = bitcast %"class.gl::GLApi"* %39 to void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)***
  %43 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)**, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %43, i64 420
  %45 = load void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (%"class.gl::GLApi"*, i32, i32, i32, i32, i32, i32, i32, i32, i8*)** %44, align 8
  tail call void %45(%"class.gl::GLApi"* %39, i32 %1, i32 0, i32 6408, i32 %40, i32 %41, i32 0, i32 6408, i32 5121, i8* %34) #12
  %46 = icmp eq i8* %34, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %33
  %48 = ptrtoint i8* %34 to i64
  %49 = bitcast i8** %10 to i64*
  store i64 %48, i64* %49, align 8
  tail call void @_ZdlPv(i8* nonnull %34) #13
  br label %50

50:                                               ; preds = %33, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #12
  br label %51

51:                                               ; preds = %2, %50
  %52 = phi i1 [ true, %50 ], [ false, %2 ]
  ret i1 %52
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageNativePixmap15CopyTexSubImageEjRKN3gfx5PointERKNS1_4RectE(%"class.gl::GLImageNativePixmap"* nocapture readnone, i32, %"class.gfx::Point"* nocapture readnone dereferenceable(8), %"class.gfx::Rect"* nocapture readnone dereferenceable(16)) unnamed_addr #5 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl19GLImageNativePixmap20ScheduleOverlayPlaneEjiN3gfx16OverlayTransformERKNS1_4RectERKNS1_5RectFEbNSt3__110unique_ptrINS1_8GpuFenceENS9_14default_deleteISB_EEEE(%"class.gl::GLImageNativePixmap"* nocapture readonly, i32, i32, i32, %"class.gfx::Rect"* dereferenceable(16), %"class.gfx::RectF"* dereferenceable(16), i1 zeroext, i64) unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::vector.92", align 16
  %10 = alloca %"class.std::__1::vector.92", align 16
  %11 = alloca %"class.std::__1::vector.92", align 8
  %12 = inttoptr i64 %7 to %"class.gfx::GpuFence"*
  %13 = bitcast %"class.std::__1::vector.92"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %9, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 24, i1 false) #12
  %16 = icmp eq i64 %7, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @_ZNSt3__16vectorIN3gfx8GpuFenceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.92"* nonnull %9, %"class.gfx::GpuFence"* nonnull dereferenceable(16) %12) #12
  %19 = bitcast %"class.std::__1::vector.92"* %9 to <2 x i64>*
  %20 = load <2 x i64>, <2 x i64>* %19, align 16
  %21 = bitcast %"class.gfx::GpuFence"** %18 to i64*
  %22 = load i64, i64* %21, align 16
  br label %23

23:                                               ; preds = %8, %17
  %24 = phi i64 [ %22, %17 ], [ 0, %8 ]
  %25 = phi <2 x i64> [ %20, %17 ], [ zeroinitializer, %8 ]
  %26 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3, i32 0
  %27 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %10, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::vector.92"* %10 to <2 x i64>*
  store <2 x i64> %25, <2 x i64>* %29, align 16
  %30 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %10, i64 0, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast %"class.gfx::GpuFence"** %30 to i64*
  store i64 %24, i64* %31, align 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 0, i64 24, i1 false) #12
  %32 = bitcast %"class.std::__1::vector.92"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 24, i1 false) #12
  %33 = bitcast %"class.gfx::NativePixmap"* %27 to i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)***
  %34 = load i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)**, i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)*, i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)** %34, i64 10
  %36 = load i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)*, i1 (%"class.gfx::NativePixmap"*, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::RectF"*, i1, %"class.std::__1::vector.92"*, %"class.std::__1::vector.92"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.gfx::NativePixmap"* %27, i32 %1, i32 %2, i32 %3, %"class.gfx::Rect"* dereferenceable(16) %4, %"class.gfx::RectF"* dereferenceable(16) %5, i1 zeroext %6, %"class.std::__1::vector.92"* nonnull %10, %"class.std::__1::vector.92"* nonnull %11) #12
  %38 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %11, i64 0, i32 0, i32 0
  %39 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %38, align 8
  %40 = icmp eq %"class.gfx::GpuFence"* %39, null
  br i1 %40, label %55, label %41

41:                                               ; preds = %23
  %42 = bitcast %"class.gfx::GpuFence"* %39 to i8*
  %43 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %11, i64 0, i32 0, i32 1
  %44 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %43, align 8
  %45 = icmp eq %"class.gfx::GpuFence"* %44, %39
  br i1 %45, label %53, label %46

46:                                               ; preds = %41, %46
  %47 = phi %"class.gfx::GpuFence"* [ %48, %46 ], [ %44, %41 ]
  %48 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %47, i64 -1
  call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* %48) #12
  %49 = icmp eq %"class.gfx::GpuFence"* %48, %39
  br i1 %49, label %50, label %46

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::vector.92"* %11 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %41
  %54 = phi i8* [ %52, %50 ], [ %42, %41 ]
  store %"class.gfx::GpuFence"* %39, %"class.gfx::GpuFence"** %43, align 8
  call void @_ZdlPv(i8* %54) #13
  br label %55

55:                                               ; preds = %23, %53
  %56 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %10, i64 0, i32 0, i32 0
  %57 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %56, align 16
  %58 = icmp eq %"class.gfx::GpuFence"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.gfx::GpuFence"* %57 to i8*
  %61 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %28, align 8
  %62 = icmp eq %"class.gfx::GpuFence"* %61, %57
  br i1 %62, label %70, label %63

63:                                               ; preds = %59, %63
  %64 = phi %"class.gfx::GpuFence"* [ %65, %63 ], [ %61, %59 ]
  %65 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %64, i64 -1
  call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* %65) #12
  %66 = icmp eq %"class.gfx::GpuFence"* %65, %57
  br i1 %66, label %67, label %63

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::vector.92"* %10 to i8**
  %69 = load i8*, i8** %68, align 16
  br label %70

70:                                               ; preds = %67, %59
  %71 = phi i8* [ %69, %67 ], [ %60, %59 ]
  store %"class.gfx::GpuFence"* %57, %"class.gfx::GpuFence"** %28, align 8
  call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %55, %70
  %73 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %14, align 16
  %74 = icmp eq %"class.gfx::GpuFence"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = bitcast %"class.gfx::GpuFence"* %73 to i8*
  %77 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %15, align 8
  %78 = icmp eq %"class.gfx::GpuFence"* %77, %73
  br i1 %78, label %86, label %79

79:                                               ; preds = %75, %79
  %80 = phi %"class.gfx::GpuFence"* [ %81, %79 ], [ %77, %75 ]
  %81 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %80, i64 -1
  call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* %81) #12
  %82 = icmp eq %"class.gfx::GpuFence"* %81, %73
  br i1 %82, label %83, label %79

83:                                               ; preds = %79
  %84 = bitcast %"class.std::__1::vector.92"* %9 to i8**
  %85 = load i8*, i8** %84, align 16
  br label %86

86:                                               ; preds = %83, %75
  %87 = phi i8* [ %85, %83 ], [ %76, %75 ]
  store %"class.gfx::GpuFence"* %73, %"class.gfx::GpuFence"** %15, align 8
  call void @_ZdlPv(i8* %87) #13
  br label %88

88:                                               ; preds = %72, %86
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #12
  br i1 %16, label %91, label %89

89:                                               ; preds = %88
  call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %12) #12
  %90 = inttoptr i64 %7 to i8*
  call void @_ZdlPv(i8* %90) #13
  br label %91

91:                                               ; preds = %88, %89
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmap5FlushEv(%"class.gl::GLImageNativePixmap"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = tail call i8* @_ZN2gl12GLSurfaceEGL18GetHardwareDisplayEv() #12
  %7 = load %"class.gl::EGLApi"*, %"class.gl::EGLApi"** @_ZN2gl21g_current_egl_contextE, align 8
  %8 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 0, i32 1
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.gl::EGLApi"* %7 to i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)***
  %11 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)**, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)** %11, i64 45
  %13 = load i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)*, i32 (%"class.gl::EGLApi"*, i8*, i8*, i64*)** %12, align 8
  %14 = tail call i32 %13(%"class.gl::EGLApi"* %7, i8* %6, i8* %9, i64* getelementptr inbounds ([1 x i64], [1 x i64]* @_ZZN2gl19GLImageNativePixmap5FlushEvE7attribs, i64 0, i64 0)) #12
  br label %15

15:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN2gl19GLImageNativePixmap12OnMemoryDumpEPN4base11trace_event17ProcessMemoryDumpEmRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.gl::GLImageNativePixmap"* nocapture, %"class.base::trace_event::ProcessMemoryDump"* nocapture, i64, %"class.std::__1::basic_string"* nocapture dereferenceable(24)) unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %"class.gfx::NativePixmap"* @_ZN2gl19GLImageNativePixmap15GetNativePixmapEv(%"class.gl::GLImageNativePixmap"* nocapture readonly) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::GLImageNativePixmap", %"class.gl::GLImageNativePixmap"* %0, i64 0, i32 3, i32 0
  %3 = load %"class.gfx::NativePixmap"*, %"class.gfx::NativePixmap"** %2, align 8
  %4 = icmp eq %"class.gfx::NativePixmap"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gfx::NativePixmap", %"class.gfx::NativePixmap"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw add i32* %6, i32 1 monotonic
  br label %8

8:                                                ; preds = %1, %5
  ret %"class.gfx::NativePixmap"* %3
}

declare i64 @_ZN2gl10GLImageEGL7GetSizeEv(%"class.gl::GLImageEGL"*) unnamed_addr #1

declare i32 @_ZN2gl7GLImage13GetDataFormatEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZN2gl10GLImageEGL16ShouldBindOrCopyEv(%"class.gl::GLImageEGL"*) unnamed_addr #1

declare zeroext i1 @_ZN2gl10GLImageEGL12BindTexImageEj(%"class.gl::GLImageEGL"*, i32) unnamed_addr #1

declare zeroext i1 @_ZN2gl7GLImage30BindTexImageWithInternalformatEjj(%"class.gl::GLImage"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl10GLImageEGL15ReleaseTexImageEj(%"class.gl::GLImageEGL"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl19GLImageNativePixmap13SetColorSpaceERKN3gfx10ColorSpaceE(%"class.gl::GLImageNativePixmap"*, %"class.gfx::ColorSpace"* dereferenceable(68)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK2gl7GLImage12EmulatingRGBEv(%"class.gl::GLImage"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage21IsInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare void @_ZN2gl7GLImage26DisableInUseByWindowServerEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZNK2gl7GLImage7GetTypeEv(%"class.gl::GLImage"*) unnamed_addr #1

declare zeroext i1 @_ZNK2gl7GLImage15HasMutableStateEv(%"class.gl::GLImage"*) unnamed_addr #1

declare i32 @_ZN2gl30BufferFormatToGLInternalFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #12
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #1

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx17NativePixmapPlaneENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRiS7_iN4base13ScopedGenericIiNS8_8internal19ScopedFDCloseTraitsEEEEEEvDpOT_(%"class.std::__1::vector.72"*, i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.base::ScopedGeneric"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %6 = alloca %"class.base::ScopedGeneric", align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 1
  %8 = bitcast %"struct.gfx::NativePixmapPlane"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.72"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 40
  %14 = add nsw i64 %13, 1
  %15 = icmp ugt i64 %14, 461168601842738790
  br i1 %15, label %16, label %18

16:                                               ; preds = %5
  %17 = bitcast %"class.std::__1::vector.72"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %17) #14
  unreachable

18:                                               ; preds = %5
  %19 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"struct.gfx::NativePixmapPlane"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %21, %11
  %23 = sdiv exact i64 %22, 40
  %24 = icmp ult i64 %23, 230584300921369395
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = shl nsw i64 %23, 1
  %27 = icmp ult i64 %26, %14
  %28 = select i1 %27, i64 %14, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %18, %25
  %31 = phi i64 [ %28, %25 ], [ 461168601842738790, %18 ]
  %32 = mul i64 %31, 40
  %33 = tail call i8* @_Znwm(i64 %32) #13
  %34 = bitcast i8* %33 to %"struct.gfx::NativePixmapPlane"*
  br label %35

35:                                               ; preds = %25, %30
  %36 = phi i64 [ %31, %30 ], [ 0, %25 ]
  %37 = phi %"struct.gfx::NativePixmapPlane"* [ %34, %30 ], [ null, %25 ]
  %38 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %37, i64 %13
  %39 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %37, i64 %36
  %40 = ptrtoint %"struct.gfx::NativePixmapPlane"* %39 to i64
  %41 = bitcast %"class.base::ScopedGeneric"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #12
  %42 = load i32, i32* %1, align 4
  %43 = load i32, i32* %2, align 4
  %44 = load i32, i32* %3, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 1
  %48 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %4, i64 0, i32 1, i32 0
  %49 = load i32, i32* %48, align 8
  store i32 -1, i32* %48, align 8
  %50 = icmp eq i32 %49, -1
  br i1 %50, label %51, label %54

51:                                               ; preds = %35
  %52 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %47, i64 0, i32 0
  store i32 -1, i32* %52, align 8
  %53 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  store i8 0, i8* %53, align 4
  br label %57

54:                                               ; preds = %35
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %4, i32 %49) #12
  %55 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %47, i64 0, i32 0
  store i32 %49, i32* %55, align 8
  %56 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %6, i64 0, i32 2
  store i8 0, i8* %56, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %6, i32 %49) #12
  br label %57

57:                                               ; preds = %51, %54
  call void @_ZN3gfx17NativePixmapPlaneC1EiimN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"struct.gfx::NativePixmapPlane"* %38, i32 %42, i32 %43, i64 %45, %"class.base::ScopedGeneric"* nonnull %6) #12
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #12
  %58 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %38, i64 1
  %59 = ptrtoint %"struct.gfx::NativePixmapPlane"* %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.72", %"class.std::__1::vector.72"* %0, i64 0, i32 0, i32 0
  %61 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %60, align 8
  %62 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %7, align 8
  %63 = icmp eq %"struct.gfx::NativePixmapPlane"* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %"struct.gfx::NativePixmapPlane"* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %"struct.gfx::NativePixmapPlane"* [ %69, %66 ], [ %38, %57 ]
  %68 = phi %"struct.gfx::NativePixmapPlane"* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %67, i64 -1
  %70 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %68, i64 -1
  call void @_ZN3gfx17NativePixmapPlaneC1EOS0_(%"struct.gfx::NativePixmapPlane"* %69, %"struct.gfx::NativePixmapPlane"* dereferenceable(40) %70) #12
  %71 = icmp eq %"struct.gfx::NativePixmapPlane"* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %10, align 8
  %74 = load %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"** %7, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"struct.gfx::NativePixmapPlane"* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %"struct.gfx::NativePixmapPlane"* [ %38, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %"struct.gfx::NativePixmapPlane"* %77 to i64
  store i64 %79, i64* %10, align 8
  store i64 %59, i64* %8, align 8
  store i64 %40, i64* %20, align 8
  %80 = inttoptr i64 %78 to %"struct.gfx::NativePixmapPlane"*
  %81 = icmp eq %"struct.gfx::NativePixmapPlane"* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"struct.gfx::NativePixmapPlane"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"struct.gfx::NativePixmapPlane", %"struct.gfx::NativePixmapPlane"* %83, i64 -1
  call void @_ZN3gfx17NativePixmapPlaneD1Ev(%"struct.gfx::NativePixmapPlane"* %84) #12
  %85 = icmp eq %"struct.gfx::NativePixmapPlane"* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %86, %88
  ret void
}

declare void @_ZN3gfx17NativePixmapPlaneC1EiimN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEE(%"struct.gfx::NativePixmapPlane"*, i32, i32, i64, %"class.base::ScopedGeneric"*) unnamed_addr #1

declare void @_ZN3gfx17NativePixmapPlaneC1EOS0_(%"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx17NativePixmapPlaneD1Ev(%"struct.gfx::NativePixmapPlane"*) unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3gfx8GpuFenceENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.92"*, %"class.gfx::GpuFence"* dereferenceable(16)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.gfx::GpuFence"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.92"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.92"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #14
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.gfx::GpuFence"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #14
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #13
  %33 = bitcast i8* %32 to %"class.gfx::GpuFence"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.gfx::GpuFence"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %36, i64 %9
  %38 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %36, i64 %35
  %39 = ptrtoint %"class.gfx::GpuFence"* %38 to i64
  tail call void @_ZN3gfx8GpuFenceC1EOS0_(%"class.gfx::GpuFence"* %37, %"class.gfx::GpuFence"* dereferenceable(16) %1) #12
  %40 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %37, i64 1
  %41 = ptrtoint %"class.gfx::GpuFence"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.92", %"class.std::__1::vector.92"* %0, i64 0, i32 0, i32 0
  %43 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %42, align 8
  %44 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %3, align 8
  %45 = icmp eq %"class.gfx::GpuFence"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"class.gfx::GpuFence"* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %"class.gfx::GpuFence"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"class.gfx::GpuFence"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %49, i64 -1
  %52 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %50, i64 -1
  tail call void @_ZN3gfx8GpuFenceC1EOS0_(%"class.gfx::GpuFence"* %51, %"class.gfx::GpuFence"* dereferenceable(16) %52) #12
  %53 = icmp eq %"class.gfx::GpuFence"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %"class.gfx::GpuFence"*, %"class.gfx::GpuFence"** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %"class.gfx::GpuFence"* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %"class.gfx::GpuFence"* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %"class.gfx::GpuFence"* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %"class.gfx::GpuFence"*
  %63 = icmp eq %"class.gfx::GpuFence"* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %"class.gfx::GpuFence"* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %"class.gfx::GpuFence", %"class.gfx::GpuFence"* %65, i64 -1
  tail call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* %66) #12
  %67 = icmp eq %"class.gfx::GpuFence"* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #13
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN3gfx8GpuFenceC1EOS0_(%"class.gfx::GpuFence"*, %"class.gfx::GpuFence"* dereferenceable(16)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
