; ModuleID = '../../device/fido/public_key.cc'
source_filename = "../../device/fido/public_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.device::PublicKey" = type { i32, %"class.std::__1::vector", %"class.absl::optional" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }

@_ZN6device9PublicKeyC1EiN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIhNS7_9allocatorIhEEEEEE = hidden unnamed_addr alias void (%"struct.device::PublicKey"*, i32, i64, i8*, %"class.absl::optional"*), void (%"struct.device::PublicKey"*, i32, i64, i8*, %"class.absl::optional"*)* @_ZN6device9PublicKeyC2EiN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIhNS7_9allocatorIhEEEEEE
@_ZN6device9PublicKeyD1Ev = hidden unnamed_addr alias void (%"struct.device::PublicKey"*), void (%"struct.device::PublicKey"*)* @_ZN6device9PublicKeyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device9PublicKeyC2EiN4base4spanIKhLm18446744073709551615EEEN4absl8optionalINSt3__16vectorIhNS7_9allocatorIhEEEEEE(%"struct.device::PublicKey"*, i32, i64, i8*, %"class.absl::optional"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 1
  tail call void @_ZN6device18fido_parsing_utils11MaterializeEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* sret %7, i64 %2, i8* %3) #4
  %8 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false) #4
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %5
  %13 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %14 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = bitcast %"class.std::__1::vector"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #4
  %16 = bitcast %"class.std::__1::vector"* %13 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector"* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast i8** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %23 = bitcast i8** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %25 = bitcast i8** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %28 = bitcast i8** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #4
  store i8 1, i8* %8, align 8
  br label %30

30:                                               ; preds = %5, %12
  ret void
}

declare void @_ZN6device18fido_parsing_utils11MaterializeEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* sret, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6device9PublicKeyD2Ev(%"struct.device::PublicKey"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %13, label %9

9:                                                ; preds = %5
  %10 = ptrtoint i8* %7 to i64
  %11 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  store i64 %10, i64* %12, align 8
  tail call void @_ZdlPv(i8* nonnull %7) #5
  br label %13

13:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %14

14:                                               ; preds = %1, %13
  %15 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %14
  %19 = ptrtoint i8* %16 to i64
  %20 = getelementptr inbounds %"struct.device::PublicKey", %"struct.device::PublicKey"* %0, i64 0, i32 1, i32 0, i32 1
  %21 = bitcast i8** %20 to i64*
  store i64 %19, i64* %21, align 8
  tail call void @_ZdlPv(i8* nonnull %16) #5
  br label %22

22:                                               ; preds = %14, %18
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
