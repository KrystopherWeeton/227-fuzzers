; ModuleID = '../../net/filter/gzip_source_stream.cc'
source_filename = "../../net/filter/gzip_source_stream.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::GzipSourceStream" = type { %"class.net::FilterSourceStream.base", %"class.std::__1::unique_ptr.5", %"class.std::__1::basic_string", %"class.net::GZipHeader", i64, i32, i32 }
%"class.net::FilterSourceStream.base" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.2, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8 }>
%"class.net::SourceStream.base" = type <{ i32 (...)**, i32 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::SourceStream"* }
%"class.net::SourceStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%class.scoped_refptr.2 = type { %"class.net::DrainableIOBuffer"* }
%"class.net::DrainableIOBuffer" = type { %"class.net::IOBuffer", %class.scoped_refptr, i32, i32 }
%"class.net::IOBuffer" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", i8* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr = type { %"class.net::IOBuffer"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.3 }
%class.scoped_refptr.3 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.4", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.4" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %struct.z_stream_s* }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::GZipHeader" = type { i32, i8, i16 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::FilterSourceStream" = type <{ %"class.net::SourceStream.base", [4 x i8], %"class.std::__1::unique_ptr", i32, [4 x i8], %class.scoped_refptr, %class.scoped_refptr.2, %class.scoped_refptr, i32, [4 x i8], %"class.base::OnceCallback", i8, [7 x i8] }>
%"class.net::WrappedIOBuffer" = type { %"class.net::IOBuffer" }

@_ZTVN3net16GzipSourceStreamE = hidden unnamed_addr constant { [10 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::GzipSourceStream"*)* @_ZN3net16GzipSourceStreamD2Ev to i8*), i8* bitcast (void (%"class.net::GzipSourceStream"*)* @_ZN3net16GzipSourceStreamD0Ev to i8*), i8* bitcast (i32 (%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream11DescriptionEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv to i8*), i8* bitcast (i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)* @_ZN3net16GzipSourceStream10FilterDataEPNS_8IOBufferEiS2_iPib to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::GzipSourceStream"*)* @_ZNK3net16GzipSourceStream15GetTypeAsStringEv to i8*), i8* bitcast (i1 (%"class.net::FilterSourceStream"*)* @_ZNK3net18FilterSourceStream12NeedMoreDataEv to i8*)] }, align 8
@.str = private unnamed_addr constant [7 x i8] c"1.2.11\00", align 1
@_ZN3net12_GLOBAL__N_18kDeflateE = internal unnamed_addr constant [8 x i8] c"DEFLATE\00", align 1

@_ZN3net16GzipSourceStreamD1Ev = hidden unnamed_addr alias void (%"class.net::GzipSourceStream"*), void (%"class.net::GzipSourceStream"*)* @_ZN3net16GzipSourceStreamD2Ev
@_ZN3net16GzipSourceStreamC1ENSt3__110unique_ptrINS_12SourceStreamENS1_14default_deleteIS3_EEEENS3_10SourceTypeE = hidden unnamed_addr alias void (%"class.net::GzipSourceStream"*, %"class.net::SourceStream"*, i32), void (%"class.net::GzipSourceStream"*, %"class.net::SourceStream"*, i32)* @_ZN3net16GzipSourceStreamC2ENSt3__110unique_ptrINS_12SourceStreamENS1_14default_deleteIS3_EEEENS3_10SourceTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16GzipSourceStreamD2Ev(%"class.net::GzipSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net16GzipSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct.z_stream_s*, %struct.z_stream_s** %3, align 8
  %5 = icmp eq %struct.z_stream_s* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* nonnull %4) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 3
  tail call void @_ZN3net10GZipHeaderD1Ev(%"class.net::GZipHeader"* %9) #6
  %10 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %8, %15
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %3, align 8
  store %struct.z_stream_s* null, %struct.z_stream_s** %3, align 8
  %20 = icmp eq %struct.z_stream_s* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = bitcast %struct.z_stream_s* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %18, %21
  %24 = bitcast %"class.net::GzipSourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"* %24) #6
  ret void
}

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10GZipHeaderD1Ev(%"class.net::GZipHeader"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16GzipSourceStreamD0Ev(%"class.net::GzipSourceStream"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net16GzipSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %struct.z_stream_s*, %struct.z_stream_s** %3, align 8
  %5 = icmp eq %struct.z_stream_s* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* nonnull %4) #6
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 3
  tail call void @_ZN3net10GZipHeaderD1Ev(%"class.net::GZipHeader"* %9) #6
  %10 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 2
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #7
  br label %18

18:                                               ; preds = %15, %8
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %3, align 8
  store %struct.z_stream_s* null, %struct.z_stream_s** %3, align 8
  %20 = icmp eq %struct.z_stream_s* %19, null
  br i1 %20, label %23, label %21

21:                                               ; preds = %18
  %22 = bitcast %struct.z_stream_s* %19 to i8*
  tail call void @_ZdlPv(i8* %22) #7
  br label %23

23:                                               ; preds = %18, %21
  %24 = bitcast %"class.net::GzipSourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamD2Ev(%"class.net::FilterSourceStream"* %24) #6
  %25 = bitcast %"class.net::GzipSourceStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.net::GzipSourceStream"* @_ZN3net16GzipSourceStream6CreateENSt3__110unique_ptrINS_12SourceStreamENS1_14default_deleteIS3_EEEENS3_10SourceTypeE(%"class.net::SourceStream"*, i32) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 136) #7
  %4 = bitcast i8* %3 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"* nonnull %4, i32 %1, %"class.net::SourceStream"* %0) #6
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net16GzipSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 80
  %7 = getelementptr inbounds i8, i8* %3, i64 112
  %8 = bitcast i8* %7 to %"class.net::GZipHeader"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false) #6
  tail call void @_ZN3net10GZipHeaderC1Ev(%"class.net::GZipHeader"* %8) #6
  %9 = getelementptr inbounds i8, i8* %3, i64 120
  %10 = bitcast i8* %9 to i64*
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds i8, i8* %3, i64 128
  %12 = bitcast i8* %11 to i32*
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds i8, i8* %3, i64 132
  %14 = bitcast i8* %13 to i32*
  store i32 4, i32* %14, align 4
  %15 = ptrtoint i8* %3 to i64
  %16 = tail call i8* @_Znwm(i64 112) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 0, i64 112, i1 false) #6
  %17 = ptrtoint i8* %16 to i64
  %18 = bitcast i8* %6 to %struct.z_stream_s**
  %19 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %20 = bitcast i8* %6 to i64*
  store i64 %17, i64* %20, align 8
  %21 = icmp eq %struct.z_stream_s* %19, null
  %22 = bitcast i8* %16 to %struct.z_stream_s*
  br i1 %21, label %27, label %23

23:                                               ; preds = %2
  %24 = bitcast %struct.z_stream_s* %19 to i8*
  tail call void @_ZdlPv(i8* %24) #7
  %25 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  %26 = icmp eq %struct.z_stream_s* %25, null
  br i1 %26, label %42, label %27

27:                                               ; preds = %23, %2
  %28 = phi %struct.z_stream_s* [ %25, %23 ], [ %22, %2 ]
  %29 = bitcast %struct.z_stream_s* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 112, i1 false) #6
  %30 = getelementptr inbounds i8, i8* %3, i64 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 2
  %34 = load %struct.z_stream_s*, %struct.z_stream_s** %18, align 8
  br i1 %33, label %35, label %37

35:                                               ; preds = %27
  %36 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %34, i32 -15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #6
  br label %39

37:                                               ; preds = %27
  %38 = tail call i32 @Cr_z_inflateInit_(%struct.z_stream_s* %34, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #6
  br label %39

39:                                               ; preds = %35, %37
  %40 = phi i32 [ %36, %35 ], [ %38, %37 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %48, label %42

42:                                               ; preds = %39, %23
  %43 = bitcast i8* %3 to %"class.net::GzipSourceStream"*
  %44 = bitcast i8* %3 to void (%"class.net::GzipSourceStream"*)***
  %45 = load void (%"class.net::GzipSourceStream"*)**, void (%"class.net::GzipSourceStream"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.net::GzipSourceStream"*)*, void (%"class.net::GzipSourceStream"*)** %45, i64 1
  %47 = load void (%"class.net::GzipSourceStream"*)*, void (%"class.net::GzipSourceStream"*)** %46, align 8
  tail call void %47(%"class.net::GzipSourceStream"* nonnull %43) #6
  br label %48

48:                                               ; preds = %39, %42
  %49 = phi i64 [ 0, %42 ], [ %15, %39 ]
  %50 = inttoptr i64 %49 to %"class.net::GzipSourceStream"*
  ret %"class.net::GzipSourceStream"* %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16GzipSourceStream4InitEv(%"class.net::GzipSourceStream"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 112) #7
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %2, i8 0, i64 112, i1 false) #6
  %3 = ptrtoint i8* %2 to i64
  %4 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %struct.z_stream_s*, %struct.z_stream_s** %5, align 8
  %7 = bitcast %"class.std::__1::unique_ptr.5"* %4 to i64*
  store i64 %3, i64* %7, align 8
  %8 = icmp eq %struct.z_stream_s* %6, null
  %9 = bitcast i8* %2 to %struct.z_stream_s*
  br i1 %8, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %struct.z_stream_s* %6 to i8*
  tail call void @_ZdlPv(i8* %11) #7
  %12 = load %struct.z_stream_s*, %struct.z_stream_s** %5, align 8
  %13 = icmp eq %struct.z_stream_s* %12, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %10, %1
  %15 = phi %struct.z_stream_s* [ %12, %10 ], [ %9, %1 ]
  %16 = bitcast %struct.z_stream_s* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 112, i1 false)
  %17 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 2
  %20 = load %struct.z_stream_s*, %struct.z_stream_s** %5, align 8
  br i1 %19, label %21, label %23

21:                                               ; preds = %14
  %22 = tail call i32 @Cr_z_inflateInit2_(%struct.z_stream_s* %20, i32 -15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #6
  br label %25

23:                                               ; preds = %14
  %24 = tail call i32 @Cr_z_inflateInit_(%struct.z_stream_s* %20, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i32 112) #6
  br label %25

25:                                               ; preds = %23, %21
  %26 = phi i32 [ %22, %21 ], [ %24, %23 ]
  %27 = icmp eq i32 %26, 0
  br label %28

28:                                               ; preds = %10, %25
  %29 = phi i1 [ %27, %25 ], [ false, %10 ]
  ret i1 %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net16GzipSourceStreamC2ENSt3__110unique_ptrINS_12SourceStreamENS1_14default_deleteIS3_EEEENS3_10SourceTypeE(%"class.net::GzipSourceStream"*, %"class.net::SourceStream"*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.net::GzipSourceStream"* %0 to %"class.net::FilterSourceStream"*
  tail call void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"* %4, i32 %2, %"class.net::SourceStream"* %1) #6
  %5 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN3net16GzipSourceStreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr.5"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 32, i1 false)
  tail call void @_ZN3net10GZipHeaderC1Ev(%"class.net::GZipHeader"* %7) #6
  %9 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 4
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 5
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 6
  store i32 4, i32* %11, align 4
  ret void
}

declare void @_ZN3net18FilterSourceStreamC2ENS_12SourceStream10SourceTypeENSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.net::FilterSourceStream"*, i32, %"class.net::SourceStream"*) unnamed_addr #1

declare void @_ZN3net10GZipHeaderC1Ev(%"class.net::GZipHeader"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare i32 @Cr_z_inflateInit2_(%struct.z_stream_s*, i32, i8*, i32) local_unnamed_addr #1

declare i32 @Cr_z_inflateInit_(%struct.z_stream_s*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net16GzipSourceStream15GetTypeAsStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::GzipSourceStream"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %16 [
    i32 2, label %5
    i32 1, label %11
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  store i8 4, i8* %7, align 1
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1346984519, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %10, align 4
  br label %20

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  store i8 7, i8* %13, align 1
  %14 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @_ZN3net12_GLOBAL__N_18kDeflateE, i64 0, i64 0), i64 7, i1 false) #6
  %15 = getelementptr inbounds i8, i8* %14, i64 7
  store i8 0, i8* %15, align 1
  br label %20

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  store i8 0, i8* %18, align 1
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %19, align 8
  br label %20

20:                                               ; preds = %16, %11, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net16GzipSourceStream10FilterDataEPNS_8IOBufferEiS2_iPib(%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"* nocapture readonly, i32, i32* nocapture, i1 zeroext) unnamed_addr #0 align 2 {
  %8 = alloca i16, align 2
  %9 = alloca i32, align 4
  %10 = alloca i8*, align 8
  %11 = alloca i32, align 4
  store i32 0, i32* %5, align 4
  %12 = icmp sgt i32 %4, 0
  %13 = icmp sgt i32 %2, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %236

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %3, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 5
  %19 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 4
  %20 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.net::IOBuffer", %"class.net::IOBuffer"* %1, i64 0, i32 2
  %22 = bitcast i8** %21 to i64*
  %23 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 6
  %28 = bitcast i32* %11 to i8*
  %29 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.net::GzipSourceStream"* %0 to i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)***
  %32 = bitcast i16* %8 to i8*
  %33 = bitcast i32* %9 to i8*
  %34 = bitcast %struct.z_stream_s** %20 to i16***
  %35 = bitcast i8** %10 to i8*
  %36 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 3
  %37 = bitcast i8** %10 to i64*
  %38 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 0, i32 0, i32 1
  br label %39

39:                                               ; preds = %15, %229
  %40 = phi i32 [ %4, %15 ], [ %232, %229 ]
  %41 = phi i32 [ 0, %15 ], [ %231, %229 ]
  %42 = phi i8* [ %17, %15 ], [ %230, %229 ]
  %43 = load i32, i32* %18, align 8
  switch i32 %43, label %229 [
    i32 0, label %44
    i32 1, label %49
    i32 2, label %67
    i32 3, label %136
    i32 4, label %192
    i32 5, label %218
    i32 6, label %236
  ]

44:                                               ; preds = %39
  %45 = load i32, i32* %38, align 8
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  store i32 2, i32* %18, align 8
  br label %229

48:                                               ; preds = %44
  store i32 1, i32* %18, align 8
  br label %229

49:                                               ; preds = %39
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %10, align 8
  %50 = call i32 @_ZN3net10GZipHeader8ReadMoreEPKciPS2_(%"class.net::GZipHeader"* %36, i8* %42, i32 %40, i8** nonnull %10) #6
  switch i32 %50, label %63 [
    i32 0, label %51
    i32 1, label %54
    i32 2, label %66
  ]

51:                                               ; preds = %49
  %52 = sext i32 %40 to i64
  %53 = getelementptr inbounds i8, i8* %42, i64 %52
  br label %63

54:                                               ; preds = %49
  store i64 8, i64* %19, align 8
  %55 = load i64, i64* %37, align 8
  %56 = ptrtoint i8* %42 to i64
  %57 = sub i64 %55, %56
  %58 = trunc i64 %57 to i32
  %59 = shl i64 %57, 32
  %60 = ashr exact i64 %59, 32
  %61 = getelementptr inbounds i8, i8* %42, i64 %60
  %62 = sub nsw i32 %40, %58
  store i32 4, i32* %18, align 8
  br label %63

63:                                               ; preds = %51, %54, %49
  %64 = phi i8* [ %42, %49 ], [ %61, %54 ], [ %53, %51 ]
  %65 = phi i32 [ %40, %49 ], [ %62, %54 ], [ 0, %51 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  br label %229

66:                                               ; preds = %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  br label %240

67:                                               ; preds = %39
  %68 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %69 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %68, i64 0, i32 0
  store i8* %42, i8** %69, align 8
  %70 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %71 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %70, i64 0, i32 1
  store i32 %40, i32* %71, align 8
  %72 = load i64, i64* %22, align 8
  %73 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %74 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %73, i64 0, i32 3
  %75 = bitcast i8** %74 to i64*
  store i64 %72, i64* %75, align 8
  %76 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %77 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %76, i64 0, i32 4
  store i32 %2, i32* %77, align 8
  %78 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %79 = call i32 @Cr_z_inflate(%struct.z_stream_s* %78, i32 0) #6
  %80 = icmp ugt i32 %79, 1
  br i1 %80, label %81, label %96

81:                                               ; preds = %67
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %32) #6
  store i16 376, i16* %8, align 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #6
  store i32 -1431655766, i32* %9, align 4
  %82 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %83 = call i32 @Cr_z_inflateReset(%struct.z_stream_s* %82) #6
  %84 = load i16**, i16*** %34, align 8
  store i16* %8, i16** %84, align 8
  %85 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %86 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %85, i64 0, i32 1
  store i32 2, i32* %86, align 8
  %87 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %88 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %87, i64 0, i32 3
  %89 = bitcast i8** %88 to i32**
  store i32* %9, i32** %89, align 8
  %90 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %91 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %90, i64 0, i32 4
  store i32 4, i32* %91, align 8
  %92 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %93 = call i32 @Cr_z_inflate(%struct.z_stream_s* %92, i32 0) #6
  %94 = icmp eq i32 %93, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %32) #6
  br i1 %94, label %95, label %240

95:                                               ; preds = %81
  store i32 3, i32* %18, align 8
  br label %229

96:                                               ; preds = %67
  %97 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %98 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %97, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = sub i32 %40, %99
  %101 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %97, i64 0, i32 4
  %102 = load i32, i32* %101, align 8
  %103 = sub i32 %2, %102
  %104 = icmp sgt i32 %103, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %96
  %106 = load i8, i8* %25, align 1
  br label %121

107:                                              ; preds = %96
  %108 = sext i32 %100 to i64
  %109 = load i8, i8* %25, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = load i64, i64* %26, align 8
  br label %115

113:                                              ; preds = %107
  %114 = zext i8 %109 to i64
  br label %115

115:                                              ; preds = %111, %113
  %116 = phi i64 [ %112, %111 ], [ %114, %113 ]
  %117 = add i64 %116, %108
  %118 = icmp ugt i64 %117, 999
  %119 = icmp eq i32 %79, 1
  %120 = or i1 %119, %118
  br i1 %120, label %121, label %131

121:                                              ; preds = %105, %115
  %122 = phi i8 [ %106, %105 ], [ %109, %115 ]
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %121
  %125 = load i8*, i8** %30, align 8
  store i8 0, i8* %125, align 1
  store i64 0, i64* %26, align 8
  br label %127

126:                                              ; preds = %121
  store i8 0, i8* %29, align 1
  store i8 0, i8* %25, align 1
  br label %127

127:                                              ; preds = %124, %126
  %128 = icmp eq i32 %79, 1
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  store i32 5, i32* %18, align 8
  br label %133

130:                                              ; preds = %127
  store i32 4, i32* %18, align 8
  br label %133

131:                                              ; preds = %115
  %132 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %23, i8* %42, i64 %108) #6
  br label %133

133:                                              ; preds = %129, %130, %131
  %134 = sext i32 %100 to i64
  %135 = getelementptr inbounds i8, i8* %42, i64 %134
  br label %229

136:                                              ; preds = %39
  %137 = load i8, i8* %25, align 1
  %138 = icmp slt i8 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %136
  %140 = load i64, i64* %26, align 8
  br label %143

141:                                              ; preds = %136
  %142 = zext i8 %137 to i64
  br label %143

143:                                              ; preds = %139, %141
  %144 = phi i64 [ %140, %139 ], [ %142, %141 ]
  %145 = icmp eq i64 %144, 0
  %146 = load i32, i32* %27, align 4
  store i32 %146, i32* %18, align 8
  br i1 %145, label %229, label %147

147:                                              ; preds = %143
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28) #6
  store i32 -1431655766, i32* %11, align 4
  br i1 %138, label %148, label %150

148:                                              ; preds = %147
  %149 = load i8*, i8** %30, align 8
  br label %150

150:                                              ; preds = %147, %148
  %151 = phi i8* [ %149, %148 ], [ %29, %147 ]
  %152 = call i8* @_Znwm(i64 24) #7
  %153 = bitcast i8* %152 to %"class.net::WrappedIOBuffer"*
  call void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"* nonnull %153, i8* %151) #6
  %154 = getelementptr inbounds i8, i8* %152, i64 8
  %155 = bitcast i8* %154 to i32*
  %156 = atomicrmw add i32* %155, i32 1 monotonic
  %157 = bitcast i8* %152 to %"class.net::IOBuffer"*
  %158 = load i8, i8* %25, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %162

160:                                              ; preds = %150
  %161 = load i64, i64* %26, align 8
  br label %164

162:                                              ; preds = %150
  %163 = zext i8 %158 to i64
  br label %164

164:                                              ; preds = %160, %162
  %165 = phi i64 [ %161, %160 ], [ %163, %162 ]
  %166 = trunc i64 %165 to i32
  %167 = load i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)**, i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*** %31, align 8
  %168 = getelementptr inbounds i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %167, i64 5
  %169 = load i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)*, i32 (%"class.net::GzipSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.net::IOBuffer"*, i32, i32*, i1)** %168, align 8
  %170 = call i32 %169(%"class.net::GzipSourceStream"* %0, %"class.net::IOBuffer"* %1, i32 %2, %"class.net::IOBuffer"* nonnull %157, i32 %166, i32* nonnull %11, i1 zeroext %6) #6
  %171 = load i32, i32* %11, align 4
  %172 = icmp eq i32 %171, -1
  br i1 %172, label %173, label %179

173:                                              ; preds = %164
  %174 = load i8, i8* %25, align 1
  %175 = icmp slt i8 %174, 0
  br i1 %175, label %176, label %178

176:                                              ; preds = %173
  %177 = load i8*, i8** %30, align 8
  store i8 0, i8* %177, align 1
  store i64 0, i64* %26, align 8
  br label %181

178:                                              ; preds = %173
  store i8 0, i8* %29, align 1
  store i8 0, i8* %25, align 1
  br label %181

179:                                              ; preds = %164
  %180 = sext i32 %171 to i64
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"* %23, i64 0, i64 %180) #6
  br label %181

181:                                              ; preds = %179, %178, %176
  %182 = load i32, i32* %18, align 8
  store i32 %182, i32* %27, align 4
  store i32 3, i32* %18, align 8
  %183 = icmp eq i32 %170, 0
  %184 = atomicrmw sub i32* %155, i32 1 acq_rel
  %185 = icmp eq i32 %184, 1
  br i1 %185, label %186, label %191

186:                                              ; preds = %181
  %187 = bitcast i8* %152 to void (%"class.net::IOBuffer"*)***
  %188 = load void (%"class.net::IOBuffer"*)**, void (%"class.net::IOBuffer"*)*** %187, align 8
  %189 = getelementptr inbounds void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %188, i64 1
  %190 = load void (%"class.net::IOBuffer"*)*, void (%"class.net::IOBuffer"*)** %189, align 8
  call void %190(%"class.net::IOBuffer"* nonnull %157) #6
  br label %191

191:                                              ; preds = %181, %186
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28) #6
  br i1 %183, label %229, label %240

192:                                              ; preds = %39
  %193 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %194 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %193, i64 0, i32 0
  store i8* %42, i8** %194, align 8
  %195 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %196 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %195, i64 0, i32 1
  store i32 %40, i32* %196, align 8
  %197 = load i64, i64* %22, align 8
  %198 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %199 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %198, i64 0, i32 3
  %200 = bitcast i8** %199 to i64*
  store i64 %197, i64* %200, align 8
  %201 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %202 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %201, i64 0, i32 4
  store i32 %2, i32* %202, align 8
  %203 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %204 = call i32 @Cr_z_inflate(%struct.z_stream_s* %203, i32 0) #6
  %205 = icmp ugt i32 %204, 1
  br i1 %205, label %240, label %206

206:                                              ; preds = %192
  %207 = load %struct.z_stream_s*, %struct.z_stream_s** %20, align 8
  %208 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %207, i64 0, i32 1
  %209 = load i32, i32* %208, align 8
  %210 = sub i32 %40, %209
  %211 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %207, i64 0, i32 4
  %212 = load i32, i32* %211, align 8
  %213 = sub i32 %2, %212
  %214 = sext i32 %210 to i64
  %215 = getelementptr inbounds i8, i8* %42, i64 %214
  %216 = icmp eq i32 %204, 1
  br i1 %216, label %217, label %229

217:                                              ; preds = %206
  store i32 5, i32* %18, align 8
  br label %229

218:                                              ; preds = %39
  %219 = sext i32 %40 to i64
  %220 = load i64, i64* %19, align 8
  %221 = icmp ugt i64 %220, %219
  %222 = select i1 %221, i64 %219, i64 %220
  %223 = sub i64 %220, %222
  store i64 %223, i64* %19, align 8
  %224 = trunc i64 %222 to i32
  %225 = sub i32 %40, %224
  %226 = getelementptr inbounds i8, i8* %42, i64 %222
  %227 = icmp eq i64 %223, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %218
  store i32 6, i32* %18, align 8
  br label %229

229:                                              ; preds = %206, %217, %133, %95, %47, %48, %39, %191, %143, %228, %218, %63
  %230 = phi i8* [ %42, %39 ], [ %226, %228 ], [ %226, %218 ], [ %42, %143 ], [ %42, %191 ], [ %42, %47 ], [ %42, %48 ], [ %64, %63 ], [ %135, %133 ], [ %42, %95 ], [ %215, %217 ], [ %215, %206 ]
  %231 = phi i32 [ %41, %39 ], [ %41, %228 ], [ %41, %218 ], [ %41, %143 ], [ %41, %191 ], [ %41, %47 ], [ %41, %48 ], [ %41, %63 ], [ %103, %133 ], [ %41, %95 ], [ %213, %217 ], [ %213, %206 ]
  %232 = phi i32 [ %40, %39 ], [ %225, %228 ], [ %225, %218 ], [ %40, %143 ], [ %40, %191 ], [ %40, %47 ], [ %40, %48 ], [ %65, %63 ], [ %99, %133 ], [ %40, %95 ], [ %209, %217 ], [ %209, %206 ]
  %233 = icmp sgt i32 %232, 0
  %234 = icmp slt i32 %231, %2
  %235 = and i1 %234, %233
  br i1 %235, label %39, label %236

236:                                              ; preds = %39, %229, %7
  %237 = phi i32 [ 0, %7 ], [ %41, %39 ], [ %231, %229 ]
  %238 = phi i32 [ %4, %7 ], [ 0, %39 ], [ %232, %229 ]
  %239 = sub nsw i32 %4, %238
  store i32 %239, i32* %5, align 4
  br label %240

240:                                              ; preds = %192, %81, %191, %66, %236
  %241 = phi i32 [ %237, %236 ], [ -330, %66 ], [ %170, %191 ], [ -330, %81 ], [ -330, %192 ]
  ret i32 %241
}

declare i32 @_ZN3net10GZipHeader8ReadMoreEPKciPS2_(%"class.net::GZipHeader"*, i8*, i32, i8**) local_unnamed_addr #1

declare i32 @Cr_z_inflate(%struct.z_stream_s*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net16GzipSourceStream16InsertZlibHeaderEv(%"class.net::GzipSourceStream"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca i16, align 2
  %3 = alloca i32, align 4
  %4 = bitcast i16* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %4) #6
  store i16 376, i16* %2, align 2
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #6
  %6 = getelementptr inbounds %"class.net::GzipSourceStream", %"class.net::GzipSourceStream"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %3, align 4
  %7 = load %struct.z_stream_s*, %struct.z_stream_s** %6, align 8
  %8 = tail call i32 @Cr_z_inflateReset(%struct.z_stream_s* %7) #6
  %9 = bitcast %struct.z_stream_s** %6 to i16***
  %10 = load i16**, i16*** %9, align 8
  store i16* %2, i16** %10, align 8
  %11 = load %struct.z_stream_s*, %struct.z_stream_s** %6, align 8
  %12 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %11, i64 0, i32 1
  store i32 2, i32* %12, align 8
  %13 = load %struct.z_stream_s*, %struct.z_stream_s** %6, align 8
  %14 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %13, i64 0, i32 3
  %15 = bitcast i8** %14 to i32**
  store i32* %3, i32** %15, align 8
  %16 = load %struct.z_stream_s*, %struct.z_stream_s** %6, align 8
  %17 = getelementptr inbounds %struct.z_stream_s, %struct.z_stream_s* %16, i64 0, i32 4
  store i32 4, i32* %17, align 8
  %18 = load %struct.z_stream_s*, %struct.z_stream_s** %6, align 8
  %19 = call i32 @Cr_z_inflate(%struct.z_stream_s* %18, i32 0) #6
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %4) #6
  ret i1 %20
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare i32 @Cr_z_inflateReset(%struct.z_stream_s*) local_unnamed_addr #1

declare i32 @_ZN3net18FilterSourceStream4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::FilterSourceStream"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #1

declare void @_ZNK3net18FilterSourceStream11DescriptionEv(%"class.std::__1::basic_string"* sret, %"class.net::FilterSourceStream"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net18FilterSourceStream16MayHaveMoreBytesEv(%"class.net::FilterSourceStream"*) unnamed_addr #1

declare zeroext i1 @_ZNK3net18FilterSourceStream12NeedMoreDataEv(%"class.net::FilterSourceStream"*) unnamed_addr #1

declare void @_ZN3net15WrappedIOBufferC1EPKc(%"class.net::WrappedIOBuffer"*, i8*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE26__erase_external_with_moveEmm(%"class.std::__1::basic_string"*, i64, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
