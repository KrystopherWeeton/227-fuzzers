; ModuleID = '../../courgette/rel32_finder.cc'
source_filename = "../../courgette/rel32_finder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.courgette::Rel32Finder" = type { i32 (...)**, i32, i32, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }

$_ZN9courgette11Rel32FinderD2Ev = comdat any

$_ZN9courgette11Rel32FinderD0Ev = comdat any

$_ZTVN9courgette11Rel32FinderE = comdat any

@_ZTVN9courgette11Rel32FinderE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD2Ev to i8*), i8* bitcast (void (%"class.courgette::Rel32Finder"*)* @_ZN9courgette11Rel32FinderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9courgette11Rel32FinderC2Ejj(%"class.courgette::Rel32Finder"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 1
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 2
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN9courgette11Rel32Finder18SwapRel32LocationsEPNSt3__16vectorIjNS1_9allocatorIjEEEE(%"class.courgette::Rel32Finder"* nocapture, %"class.std::__1::vector"* nocapture) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3
  %4 = bitcast %"class.std::__1::vector"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  store i64 %7, i64* %4, align 8
  store i64 %5, i64* %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast i32** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i32** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %15 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast i32** %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i32** %15 to i64*
  %19 = load i64, i64* %18, align 8
  store i64 %19, i64* %16, align 8
  store i64 %17, i64* %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD2Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN9courgette11Rel32FinderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.courgette::Rel32Finder", %"class.courgette::Rel32Finder"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9courgette11Rel32FinderD0Ev(%"class.courgette::Rel32Finder"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #7
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }
attributes #7 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
