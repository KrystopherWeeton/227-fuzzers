; ModuleID = '../../services/network/public/cpp/cross_origin_resource_policy.cc'
source_filename = "../../services/network/public/cpp/cross_origin_resource_policy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.35", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.41", %"class.std::__1::vector.48", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.83", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.88", %"class.absl::optional.187", %"class.absl::optional.198", %"class.std::__1::vector.48", %class.GURL, i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe", %"class.std::__1::vector", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.16" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.22" }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.25", %"class.std::__1::vector.25", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"*, %"class.std::__1::__compressed_pair.27" }
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.mojo::InlinedStructPtr"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.35" = type { %"class.std::__1::__vector_base.36" }
%"class.std::__1::__vector_base.36" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, [7 x i8], %union.anon.45 }
%union.anon.45 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.46, %class.scoped_refptr.46, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.66", %"class.std::__1::basic_string", %"class.std::__1::vector.74", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.46 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.47", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.55", %"class.std::__1::vector.59" }
%"class.base::RefCountedThreadSafe.47" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.48", %"class.std::__1::vector.48", %"class.std::__1::vector.48", %"class.std::__1::vector.48" }
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.std::__1::unique_ptr.55"*, %"class.std::__1::unique_ptr.55"*, %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.std::__1::unique_ptr.55"* }
%"class.std::__1::vector.66" = type { %"class.std::__1::__vector_base.67" }
%"class.std::__1::__vector_base.67" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.69" }
%"class.net::HashValue" = type { i32, %union.anon.68 }
%union.anon.68 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.74" = type { %"class.std::__1::__vector_base.75" }
%"class.std::__1::__vector_base.75" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.78" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.76, i32, [4 x i8] }>
%class.scoped_refptr.76 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.77", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.77" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.83" = type { %"class.absl::optional_internal::optional_data.84" }
%"class.absl::optional_internal::optional_data.84" = type { %"class.absl::optional_internal::optional_data_base.85" }
%"class.absl::optional_internal::optional_data_base.85" = type { %"class.absl::optional_internal::optional_data_dtor_base.86" }
%"class.absl::optional_internal::optional_data_dtor_base.86" = type { i8, %union.anon.87 }
%union.anon.87 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.10" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase.21" }
%"class.base::time_internal::TimeBase.21" = type { i64 }
%"class.mojo::StructPtr.88" = type { %"class.std::__1::unique_ptr.89" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.92", %"class.mojo::StructPtr.139", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.151", %"class.base::TimeDelta", %"class.absl::optional.151", i32, [4 x i8], %"class.std::__1::vector.163", %"class.mojo::StructPtr.177", i8, [7 x i8] }>
%"class.std::__1::vector.92" = type { %"class.std::__1::__vector_base.93" }
%"class.std::__1::__vector_base.93" = type { %"class.mojo::StructPtr.94"*, %"class.mojo::StructPtr.94"*, %"class.std::__1::__compressed_pair.134" }
%"class.mojo::StructPtr.94" = type { %"class.std::__1::unique_ptr.95" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.98", %"class.base::flat_map", %"class.base::flat_map.112", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.122", i8, %"class.std::__1::vector.48", i32, %"class.mojo::StructPtr.124", %"class.std::__1::vector.48" }
%"class.mojo::StructPtr.98" = type { %"class.std::__1::unique_ptr.99" }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.105" }
%"class.std::__1::vector.105" = type { %"class.std::__1::__vector_base.106" }
%"class.std::__1::__vector_base.106" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.107" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"struct.std::__1::pair"* }
%"class.base::flat_map.112" = type { %"class.base::internal::flat_tree.113" }
%"class.base::internal::flat_tree.113" = type { %"class.std::__1::vector.114" }
%"class.std::__1::vector.114" = type { %"class.std::__1::__vector_base.115" }
%"class.std::__1::__vector_base.115" = type { %"struct.std::__1::pair.116"*, %"struct.std::__1::pair.116"*, %"class.std::__1::__compressed_pair.117" }
%"struct.std::__1::pair.116" = type opaque
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::pair.116"* }
%"class.mojo::InlinedStructPtr.122" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.124" = type { %"class.std::__1::unique_ptr.125" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.48", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.mojo::StructPtr.94"* }
%"class.mojo::StructPtr.139" = type { %"class.std::__1::unique_ptr.140" }
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.146", i32, %"class.absl::optional.146" }
%"class.absl::optional.146" = type { %"class.absl::optional_internal::optional_data.147" }
%"class.absl::optional_internal::optional_data.147" = type { %"class.absl::optional_internal::optional_data_base.148" }
%"class.absl::optional_internal::optional_data_base.148" = type { %"class.absl::optional_internal::optional_data_dtor_base.149" }
%"class.absl::optional_internal::optional_data_dtor_base.149" = type { i8, %union.anon.150 }
%union.anon.150 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.146", i32, %"class.absl::optional.146" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.151" = type { %"class.absl::optional_internal::optional_data.152" }
%"class.absl::optional_internal::optional_data.152" = type { %"class.absl::optional_internal::optional_data_base.153" }
%"class.absl::optional_internal::optional_data_base.153" = type { %"class.absl::optional_internal::optional_data_dtor_base.154" }
%"class.absl::optional_internal::optional_data_dtor_base.154" = type { i8, %union.anon.155 }
%union.anon.155 = type { %"class.std::__1::vector.156" }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { i32*, i32*, %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { i32* }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"class.mojo::StructPtr.165"*, %"class.mojo::StructPtr.165"*, %"class.std::__1::__compressed_pair.172" }
%"class.mojo::StructPtr.165" = type { %"class.std::__1::unique_ptr.166" }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.146" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.mojo::StructPtr.165"* }
%"class.mojo::StructPtr.177" = type { %"class.std::__1::unique_ptr.178" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.48"* }
%"class.absl::optional.187" = type { %"class.absl::optional_internal::optional_data.188" }
%"class.absl::optional_internal::optional_data.188" = type { %"class.absl::optional_internal::optional_data_base.189" }
%"class.absl::optional_internal::optional_data_base.189" = type { %"class.absl::optional_internal::optional_data_dtor_base.190" }
%"class.absl::optional_internal::optional_data_dtor_base.190" = type { i8, %union.anon.191 }
%union.anon.191 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.192" }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.48", %"class.absl::optional.146", %"class.std::__1::vector.48", %"class.std::__1::vector.48" }
%"class.absl::optional.198" = type { %"class.absl::optional_internal::optional_data.199" }
%"class.absl::optional_internal::optional_data.199" = type { %"class.absl::optional_internal::optional_data_base.200" }
%"class.absl::optional_internal::optional_data_base.200" = type { %"class.absl::optional_internal::optional_data_dtor_base.201" }
%"class.absl::optional_internal::optional_data_dtor_base.201" = type { i8, %union.anon.202 }
%union.anon.202 = type { %"class.base::UnguessableToken" }
%"class.std::__1::vector.48" = type { %"class.std::__1::__vector_base.49" }
%"class.std::__1::__vector_base.49" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::basic_string"* }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin" }
%"class.network::mojom::CrossOriginEmbedderPolicyReporter" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.208", [4 x i8] }>
%"struct.std::__1::atomic.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__atomic_base.210" }
%"struct.std::__1::__atomic_base.210" = type { %"struct.std::__1::__cxx_atomic_impl.211" }
%"struct.std::__1::__cxx_atomic_impl.211" = type { %"struct.std::__1::__cxx_atomic_base_impl.212" }
%"struct.std::__1::__cxx_atomic_base_impl.212" = type { i32 }

@_ZN7network25CrossOriginResourcePolicy11kHeaderNameE = hidden constant [29 x i8] c"Cross-Origin-Resource-Policy\00", align 16
@.str.2 = private unnamed_addr constant [58 x i8] c"NetworkService.CrossOriginResourcePolicy.ReportOnlyResult\00", align 1
@.str.4 = private unnamed_addr constant [48 x i8] c"NetworkService.CrossOriginResourcePolicy.Result\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"same-origin\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"same-site\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"cross-origin\00", align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE.8 = private unnamed_addr constant [5 x i32] [i32 0, i32 0, i32 1, i32 2, i32 3], align 4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7network25CrossOriginResourcePolicy9IsBlockedERK4GURLS3_RKN4absl8optionalIN3url6OriginEEERKNS_5mojom15URLResponseHeadENSB_11RequestModeES8_NSB_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSB_33CrossOriginEmbedderPolicyReporterE(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.absl::optional.5"* dereferenceable(88), %"class.network::mojom::URLResponseHead"* nocapture readonly dereferenceable(1320), i32, %"class.absl::optional.5"*, i32, %"struct.network::CrossOriginEmbedderPolicy"* nocapture readonly dereferenceable(80), %"class.network::mojom::CrossOriginEmbedderPolicyReporter"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.absl::optional.5", align 8
  %11 = icmp eq i32 %4, 1
  br i1 %11, label %12, label %30

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %3, i64 0, i32 2, i32 0
  %14 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %13, align 8
  %15 = tail call fastcc i32 @_ZN7network12_GLOBAL__N_132ParseHeaderByHttpResponseHeadersEPKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"* %14)
  %16 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 88, i1 false) #7
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %22, %"class.url::Origin"* dereferenceable(80) %21) #7
  store i8 1, i8* %16, align 8
  br label %23

23:                                               ; preds = %12, %20
  %24 = call fastcc i64 @_ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE(i32 %15, %class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.5"* dereferenceable(88) %2, i32 1, %"class.absl::optional.5"* nonnull %10, i32 %6, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %7, %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %8)
  %25 = lshr i64 %24, 8
  %26 = load i8, i8* %16, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %29) #7
  store i8 0, i8* %16, align 8
  br label %30

30:                                               ; preds = %28, %23, %9
  %31 = phi i64 [ 0, %9 ], [ %25, %23 ], [ %25, %28 ]
  %32 = phi i64 [ 0, %9 ], [ %24, %23 ], [ %24, %28 ]
  %33 = shl nuw i64 %31, 8
  %34 = and i64 %32, 255
  %35 = or i64 %34, %33
  ret i64 %35
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN7network12_GLOBAL__N_132ParseHeaderByHttpResponseHeadersEPKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"*) unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.absl::optional.146", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #7
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #7
  %7 = icmp eq %"class.net::HttpResponseHeaders"* %0, null
  br i1 %7, label %77, label %8

8:                                                ; preds = %1
  %9 = call zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* nonnull %0, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @_ZN7network25CrossOriginResourcePolicy11kHeaderNameE, i64 0, i64 0), i64 28, %"class.std::__1::basic_string"* nonnull %2) #7
  br i1 %9, label %10, label %77

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* nonnull align 8 %4, i64 24, i1 false) #7
  br label %24

19:                                               ; preds = %10
  %20 = load i8*, i8** %5, align 8
  %21 = load i64, i64* %6, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %12, i8* %20, i64 %21) #7
  %22 = load i8, i8* %11, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %77, label %24

24:                                               ; preds = %17, %19
  %25 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %32, 11
  br i1 %33, label %34, label %40

34:                                               ; preds = %24
  %35 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %12, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #7
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %64, label %37

37:                                               ; preds = %34
  %38 = load i8, i8* %11, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %77, label %40

40:                                               ; preds = %24, %37
  %41 = load i8, i8* %26, align 1
  %42 = icmp slt i8 %41, 0
  %43 = load i64, i64* %29, align 8
  %44 = zext i8 %41 to i64
  %45 = select i1 %42, i64 %43, i64 %44
  %46 = icmp eq i64 %45, 9
  br i1 %46, label %47, label %53

47:                                               ; preds = %40
  %48 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %12, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %11, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %77, label %53

53:                                               ; preds = %40, %50
  %54 = load i8, i8* %26, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i64, i64* %29, align 8
  %57 = zext i8 %54 to i64
  %58 = select i1 %55, i64 %56, i64 %57
  %59 = icmp eq i64 %58, 12
  br i1 %59, label %60, label %64

60:                                               ; preds = %53
  %61 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %12, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i64 12) #7
  %62 = icmp eq i32 %61, 0
  %63 = select i1 %62, i32 3, i32 4
  br label %64

64:                                               ; preds = %34, %47, %53, %60
  %65 = phi i32 [ 4, %53 ], [ 2, %47 ], [ 1, %34 ], [ %63, %60 ]
  %66 = load i8, i8* %11, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %77, label %68

68:                                               ; preds = %64
  %69 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #8
  br label %76

76:                                               ; preds = %73, %68
  store i8 0, i8* %11, align 8
  br label %77

77:                                               ; preds = %50, %19, %37, %76, %64, %1, %8
  %78 = phi i32 [ 0, %8 ], [ 0, %1 ], [ %65, %64 ], [ %65, %76 ], [ 4, %37 ], [ 4, %50 ], [ 0, %19 ]
  %79 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %77
  %84 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %84) #8
  br label %85

85:                                               ; preds = %77, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #7
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE(i32, %class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.absl::optional.5"* dereferenceable(88), i32, %"class.absl::optional.5"*, i32, %"struct.network::CrossOriginEmbedderPolicy"* nocapture readonly dereferenceable(80), %"class.network::mojom::CrossOriginEmbedderPolicyReporter"*) unnamed_addr #0 {
  %10 = alloca %"class.absl::optional.5", align 8
  %11 = alloca %"class.absl::optional.5", align 8
  %12 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %7, i64 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 2
  %15 = icmp ne %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %8, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %66

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 88, i1 false) #7
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %24, %"class.url::Origin"* dereferenceable(80) %23) #7
  store i8 1, i8* %18, align 8
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %17, %22
  %27 = phi i32 [ 2, %17 ], [ %25, %22 ]
  %28 = call fastcc i64 @_ZN7network12_GLOBAL__N_117IsBlockedInternalENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLRKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_30CrossOriginEmbedderPolicyValueE(i32 %0, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.5"* dereferenceable(88) %3, i32 %4, %"class.absl::optional.5"* nonnull %10, i32 %27)
  %29 = trunc i64 %28 to i8
  %30 = load i8, i8* %18, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %33) #7
  store i8 0, i8* %18, align 8
  br label %34

34:                                               ; preds = %26, %32
  %35 = load atomic i64, i64* @_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %36 = inttoptr i64 %35 to %"class.base::HistogramBase"*
  %37 = icmp eq i64 %35, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %34
  %39 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #7
  %40 = ptrtoint %"class.base::HistogramBase"* %39 to i64
  store atomic i64 %40, i64* @_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %41

41:                                               ; preds = %34, %38
  %42 = phi %"class.base::HistogramBase"* [ %36, %34 ], [ %39, %38 ]
  %43 = icmp eq i8 %29, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %41
  %45 = ashr i64 %28, 32
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE.8, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  %48 = bitcast %"class.base::HistogramBase"* %42 to void (%"class.base::HistogramBase"*, i32)***
  %49 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %49, i64 6
  %51 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %50, align 8
  call void %51(%"class.base::HistogramBase"* %42, i32 %47) #7
  %52 = and i64 %28, -4294967296
  %53 = icmp eq i64 %52, 12884901888
  %54 = icmp eq i32 %4, 4
  %55 = or i1 %54, %53
  br i1 %55, label %56, label %72

56:                                               ; preds = %44
  %57 = bitcast %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %8 to void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)***
  %58 = load void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)**, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)** %58, i64 2
  %60 = load void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)** %59, align 8
  call void %60(%"class.network::mojom::CrossOriginEmbedderPolicyReporter"* nonnull %8, %class.GURL* dereferenceable(120) %2, i32 %6, i1 zeroext true) #7
  br label %66

61:                                               ; preds = %41
  %62 = bitcast %"class.base::HistogramBase"* %42 to void (%"class.base::HistogramBase"*, i32)***
  %63 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %63, i64 6
  %65 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %64, align 8
  call void %65(%"class.base::HistogramBase"* %42, i32 0) #7
  br label %66

66:                                               ; preds = %61, %56, %9
  %67 = icmp eq i32 %4, 4
  br i1 %67, label %68, label %72

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %7, i64 0, i32 0
  %70 = load i32, i32* %69, align 8
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %124, label %72

72:                                               ; preds = %44, %68, %66
  %73 = phi i1 [ true, %68 ], [ false, %66 ], [ false, %44 ]
  %74 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %74, i8 0, i64 88, i1 false) #7
  %76 = load i8, i8* %75, align 8, !range !2
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %80, %"class.url::Origin"* dereferenceable(80) %79) #7
  store i8 1, i8* %74, align 8
  br label %81

81:                                               ; preds = %72, %78
  %82 = getelementptr inbounds %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginEmbedderPolicy"* %7, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = call fastcc i64 @_ZN7network12_GLOBAL__N_117IsBlockedInternalENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLRKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_30CrossOriginEmbedderPolicyValueE(i32 %0, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.5"* dereferenceable(88) %3, i32 %4, %"class.absl::optional.5"* nonnull %11, i32 %83)
  %85 = trunc i64 %84 to i8
  %86 = load i8, i8* %74, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %81
  %89 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %89) #7
  store i8 0, i8* %74, align 8
  br label %90

90:                                               ; preds = %81, %88
  %91 = load atomic i64, i64* @_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %92 = inttoptr i64 %91 to %"class.base::HistogramBase"*
  %93 = icmp eq i64 %91, 0
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.4, i64 0, i64 0), i32 1, i32 4, i32 5, i32 1) #7
  %96 = ptrtoint %"class.base::HistogramBase"* %95 to i64
  store atomic i64 %96, i64* @_ZZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %97

97:                                               ; preds = %90, %94
  %98 = phi %"class.base::HistogramBase"* [ %92, %90 ], [ %95, %94 ]
  %99 = icmp eq i8 %85, 0
  br i1 %99, label %104, label %100

100:                                              ; preds = %97
  %101 = ashr i64 %84, 32
  %102 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE.8, i64 0, i64 %101
  %103 = load i32, i32* %102, align 4
  br label %104

104:                                              ; preds = %100, %97
  %105 = phi i32 [ 0, %97 ], [ %103, %100 ]
  %106 = bitcast %"class.base::HistogramBase"* %98 to void (%"class.base::HistogramBase"*, i32)***
  %107 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %107, i64 6
  %109 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %108, align 8
  call void %109(%"class.base::HistogramBase"* %98, i32 %105) #7
  %110 = xor i1 %99, true
  %111 = and i1 %15, %110
  %112 = and i64 %84, -4294967296
  %113 = icmp eq i64 %112, 12884901888
  %114 = or i1 %73, %113
  %115 = and i1 %111, %114
  br i1 %115, label %116, label %121

116:                                              ; preds = %104
  %117 = bitcast %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %8 to void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)***
  %118 = load void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)**, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)** %118, i64 2
  %120 = load void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)*, void (%"class.network::mojom::CrossOriginEmbedderPolicyReporter"*, %class.GURL*, i32, i1)** %119, align 8
  call void %120(%"class.network::mojom::CrossOriginEmbedderPolicyReporter"* nonnull %8, %class.GURL* dereferenceable(120) %2, i32 %6, i1 zeroext false) #7
  br label %121

121:                                              ; preds = %104, %116
  %122 = and i64 %84, -256
  %123 = and i64 %84, 255
  br label %124

124:                                              ; preds = %68, %121
  %125 = phi i64 [ %123, %121 ], [ 0, %68 ]
  %126 = phi i64 [ %122, %121 ], [ 0, %68 ]
  %127 = or i64 %126, %125
  ret i64 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7network25CrossOriginResourcePolicy22IsBlockedByHeaderValueERK4GURLS3_RKN4absl8optionalIN3url6OriginEEENS5_INSt3__112basic_stringIcNSB_11char_traitsIcEENSB_9allocatorIcEEEEEENS_5mojom11RequestModeES8_NSJ_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSJ_33CrossOriginEmbedderPolicyReporterE(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.absl::optional.5"* dereferenceable(88), %"class.absl::optional.146"* nocapture readonly, i32, %"class.absl::optional.5"*, i32, %"struct.network::CrossOriginEmbedderPolicy"* nocapture readonly dereferenceable(80), %"class.network::mojom::CrossOriginEmbedderPolicyReporter"*) local_unnamed_addr #0 align 2 {
  %10 = alloca %"class.absl::optional.146", align 8
  %11 = alloca %"class.absl::optional.5", align 8
  %12 = icmp eq i32 %4, 1
  br i1 %12, label %13, label %107

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 32, i1 false) #7
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %77, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %21 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %18
  %26 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %27 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 8 %27, i64 24, i1 false) #7
  br label %33

28:                                               ; preds = %18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %30, i64 %32) #7
  br label %33

33:                                               ; preds = %28, %25
  store i8 1, i8* %14, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = icmp slt i8 %36, 0
  %43 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = zext i8 %36 to i64
  %45 = select i1 %42, i64 %38, i64 %44
  %46 = icmp eq i64 %45, 11
  br i1 %46, label %47, label %53

47:                                               ; preds = %33
  %48 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %39, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i64 11) #7
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %77, label %50

50:                                               ; preds = %47
  %51 = load i8, i8* %14, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %91, label %53

53:                                               ; preds = %33, %50
  %54 = load i8, i8* %41, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i64, i64* %43, align 8
  %57 = zext i8 %54 to i64
  %58 = select i1 %55, i64 %56, i64 %57
  %59 = icmp eq i64 %58, 9
  br i1 %59, label %60, label %66

60:                                               ; preds = %53
  %61 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %39, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i64 9) #7
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %60
  %64 = load i8, i8* %14, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %91, label %66

66:                                               ; preds = %53, %63
  %67 = load i8, i8* %41, align 1
  %68 = icmp slt i8 %67, 0
  %69 = load i64, i64* %43, align 8
  %70 = zext i8 %67 to i64
  %71 = select i1 %68, i64 %69, i64 %70
  %72 = icmp eq i64 %71, 12
  br i1 %72, label %73, label %77

73:                                               ; preds = %66
  %74 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %39, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i64 0, i64 0), i64 12) #7
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 3, i32 4
  br label %77

77:                                               ; preds = %13, %47, %60, %66, %73
  %78 = phi i32 [ 0, %13 ], [ 4, %66 ], [ 2, %60 ], [ 1, %47 ], [ %76, %73 ]
  %79 = load i8, i8* %14, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %91, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.absl::optional.146", %"class.absl::optional.146"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #8
  br label %90

90:                                               ; preds = %87, %81
  store i8 0, i8* %14, align 8
  br label %91

91:                                               ; preds = %63, %50, %77, %90
  %92 = phi i32 [ %78, %77 ], [ %78, %90 ], [ 4, %50 ], [ 4, %63 ]
  %93 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 88, i1 false) #7
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %99 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %99, %"class.url::Origin"* dereferenceable(80) %98) #7
  store i8 1, i8* %93, align 8
  br label %100

100:                                              ; preds = %91, %97
  %101 = call fastcc i64 @_ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE(i32 %92, %class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.5"* dereferenceable(88) %2, i32 1, %"class.absl::optional.5"* nonnull %11, i32 %6, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %7, %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %8)
  %102 = lshr i64 %101, 8
  %103 = load i8, i8* %93, align 8, !range !2
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %106) #7
  store i8 0, i8* %93, align 8
  br label %107

107:                                              ; preds = %105, %100, %9
  %108 = phi i64 [ 0, %9 ], [ %102, %100 ], [ %102, %105 ]
  %109 = phi i64 [ 0, %9 ], [ %101, %100 ], [ %101, %105 ]
  %110 = shl nuw i64 %108, 8
  %111 = and i64 %109, 255
  %112 = or i64 %111, %110
  ret i64 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN7network25CrossOriginResourcePolicy19IsNavigationBlockedERK4GURLS3_RKN4absl8optionalIN3url6OriginEEERKNS_5mojom15URLResponseHeadES8_NSB_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSB_33CrossOriginEmbedderPolicyReporterE(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120), %"class.absl::optional.5"* dereferenceable(88), %"class.network::mojom::URLResponseHead"* nocapture readonly dereferenceable(1320), %"class.absl::optional.5"*, i32, %"struct.network::CrossOriginEmbedderPolicy"* nocapture readonly dereferenceable(80), %"class.network::mojom::CrossOriginEmbedderPolicyReporter"*) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.absl::optional.5", align 8
  %10 = getelementptr inbounds %"class.network::mojom::URLResponseHead", %"class.network::mojom::URLResponseHead"* %3, i64 0, i32 2, i32 0
  %11 = load %"class.net::HttpResponseHeaders"*, %"class.net::HttpResponseHeaders"** %10, align 8
  %12 = tail call fastcc i32 @_ZN7network12_GLOBAL__N_132ParseHeaderByHttpResponseHeadersEPKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"* %11)
  %13 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 88, i1 false) #7
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"* %19, %"class.url::Origin"* dereferenceable(80) %18) #7
  store i8 1, i8* %13, align 8
  br label %20

20:                                               ; preds = %8, %17
  %21 = call fastcc i64 @_ZN7network12_GLOBAL__N_130IsBlockedInternalWithReportingENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLS5_RKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_18RequestDestinationERKNS_25CrossOriginEmbedderPolicyEPNSD_33CrossOriginEmbedderPolicyReporterE(i32 %12, %class.GURL* dereferenceable(120) %0, %class.GURL* dereferenceable(120) %1, %"class.absl::optional.5"* dereferenceable(88) %2, i32 4, %"class.absl::optional.5"* nonnull %9, i32 %5, %"struct.network::CrossOriginEmbedderPolicy"* dereferenceable(80) %6, %"class.network::mojom::CrossOriginEmbedderPolicyReporter"* %7)
  %22 = load i8, i8* %13, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* %25) #7
  store i8 0, i8* %13, align 8
  br label %26

26:                                               ; preds = %20, %24
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7network25CrossOriginResourcePolicy21ParseHeaderForTestingEPKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc i32 @_ZN7network12_GLOBAL__N_132ParseHeaderByHttpResponseHeadersEPKN3net19HttpResponseHeadersE(%"class.net::HttpResponseHeaders"* %0)
  ret i32 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN7network25CrossOriginResourcePolicy29ShouldAllowSameSiteForTestingERKN3url6OriginES4_(%"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = tail call fastcc zeroext i1 @_ZN7network12_GLOBAL__N_119ShouldAllowSameSiteERKN3url6OriginES4_(%"class.url::Origin"* dereferenceable(80) %0, %"class.url::Origin"* dereferenceable(80) %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN7network12_GLOBAL__N_119ShouldAllowSameSiteERKN3url6OriginES4_(%"class.url::Origin"* dereferenceable(80), %"class.url::Origin"* dereferenceable(80)) unnamed_addr #0 {
  %3 = alloca %class.GURL, align 8
  %4 = alloca %class.GURL, align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %class.GURL* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %7) #7
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %3, %"class.url::Origin"* %0) #7
  %8 = call zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL* nonnull %3) #7
  br i1 %8, label %9, label %10

9:                                                ; preds = %2
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #7
  br label %122

10:                                               ; preds = %2
  %11 = bitcast %class.GURL* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #7
  call void @_ZNK3url6Origin6GetURLEv(%class.GURL* nonnull sret %4, %"class.url::Origin"* %1) #7
  %12 = call zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL* nonnull %4) #7
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #7
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %7) #7
  br i1 %12, label %122, label %13

13:                                               ; preds = %10
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #7
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERKN3url6OriginENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.url::Origin"* dereferenceable(80) %0, i32 1) #7
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #7
  call void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERKN3url6OriginENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.url::Origin"* dereferenceable(80) %1, i32 1) #7
  %16 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp eq i64 %23, %31
  br i1 %32, label %33, label %63

33:                                               ; preds = %13
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %19, i8* %35, i8* %14
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = select i1 %27, i8* %38, i8* %15
  %40 = icmp eq i64 %23, 0
  br i1 %19, label %47, label %41

41:                                               ; preds = %33
  br i1 %40, label %63, label %42

42:                                               ; preds = %41
  %43 = ptrtoint i8* %35 to i64
  %44 = trunc i64 %43 to i8
  %45 = load i8, i8* %39, align 1
  %46 = icmp eq i8 %45, %44
  br i1 %46, label %51, label %63

47:                                               ; preds = %33
  br i1 %40, label %63, label %48

48:                                               ; preds = %47
  %49 = call i32 @bcmp(i8* %36, i8* %39, i64 %23) #7
  %50 = icmp ne i32 %49, 0
  br label %63

51:                                               ; preds = %42, %58
  %52 = phi i64 [ %55, %58 ], [ %22, %42 ]
  %53 = phi i8* [ %56, %58 ], [ %14, %42 ]
  %54 = phi i8* [ %59, %58 ], [ %39, %42 ]
  %55 = add i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %63, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %51, label %63

63:                                               ; preds = %51, %58, %42, %13, %41, %47, %48
  %64 = phi i1 [ true, %13 ], [ %50, %48 ], [ false, %47 ], [ false, %41 ], [ true, %42 ], [ false, %51 ], [ true, %58 ]
  br i1 %27, label %65, label %69

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #8
  %68 = load i8, i8* %17, align 1
  br label %69

69:                                               ; preds = %63, %65
  %70 = phi i8 [ %18, %63 ], [ %68, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #7
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %74) #8
  br label %75

75:                                               ; preds = %69, %72
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #7
  br i1 %64, label %122, label %76

76:                                               ; preds = %75
  %77 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0
  br label %84

82:                                               ; preds = %76
  %83 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #7
  br label %84

84:                                               ; preds = %80, %82
  %85 = phi %"class.std::__1::basic_string"* [ %81, %80 ], [ %83, %82 ]
  %86 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #7
  %87 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp eq i64 %86, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %84
  %97 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %85, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %86) #7
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %122, label %99

99:                                               ; preds = %84, %96
  %100 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %107

105:                                              ; preds = %99
  %106 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #7
  br label %107

107:                                              ; preds = %103, %105
  %108 = phi %"class.std::__1::basic_string"* [ %104, %103 ], [ %106, %105 ]
  %109 = call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #7
  %110 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = zext i8 %112 to i64
  %117 = select i1 %113, i64 %115, i64 %116
  %118 = icmp eq i64 %109, %117
  br i1 %118, label %119, label %122

119:                                              ; preds = %107
  %120 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %108, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i64 %109) #7
  %121 = icmp ne i32 %120, 0
  br label %122

122:                                              ; preds = %119, %107, %9, %96, %75, %10
  %123 = phi i1 [ false, %10 ], [ false, %75 ], [ true, %96 ], [ false, %9 ], [ %121, %119 ], [ true, %107 ]
  ret i1 %123
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19GetNormalizedHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN7network12_GLOBAL__N_117IsBlockedInternalENS_25CrossOriginResourcePolicy12ParsedHeaderERK4GURLRKN4absl8optionalIN3url6OriginEEENS_5mojom11RequestModeESA_NSD_30CrossOriginEmbedderPolicyValueE(i32, %class.GURL* dereferenceable(120), %"class.absl::optional.5"* dereferenceable(88), i32, %"class.absl::optional.5"*, i32) unnamed_addr #0 {
  %7 = alloca %"class.url::Origin", align 8
  %8 = alloca %"class.url::Origin", align 8
  %9 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = icmp eq i32 %5, 2
  br i1 %13, label %14, label %17

14:                                               ; preds = %12
  %15 = and i32 %0, -5
  %16 = icmp eq i32 %15, 0
  br label %23

17:                                               ; preds = %12
  %18 = icmp eq i32 %5, 1
  %19 = icmp eq i32 %3, 4
  %20 = and i1 %19, %18
  %21 = and i32 %0, -5
  %22 = icmp eq i32 %21, 0
  br i1 %20, label %23, label %25

23:                                               ; preds = %17, %14
  %24 = phi i1 [ %16, %14 ], [ %22, %17 ]
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i32 [ 1, %23 ], [ %0, %17 ]
  %27 = phi i1 [ %24, %23 ], [ %22, %17 ]
  %28 = phi i64 [ 12884901888, %23 ], [ 8589934592, %17 ]
  %29 = select i1 %27, i32 %26, i32 %0
  %30 = select i1 %27, i64 %28, i64 8589934592
  switch i32 %29, label %31 [
    i32 4, label %45
    i32 3, label %45
    i32 0, label %45
  ]

31:                                               ; preds = %25
  %32 = bitcast %"class.url::Origin"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %32) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 80, i1 false)
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %7, %class.GURL* dereferenceable(120) %1) #7
  %33 = bitcast %"class.url::Origin"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %33) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 80, i1 false)
  call void @_ZN7network23GetTrustworthyInitiatorERKN4absl8optionalIN3url6OriginEEES6_(%"class.url::Origin"* nonnull sret %8, %"class.absl::optional.5"* dereferenceable(88) %4, %"class.absl::optional.5"* dereferenceable(88) %2) #7
  %34 = call zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"* nonnull %8, %"class.url::Origin"* nonnull dereferenceable(80) %7) #7
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = icmp eq i32 %29, 1
  br i1 %36, label %42, label %37

37:                                               ; preds = %35
  %38 = call fastcc zeroext i1 @_ZN7network12_GLOBAL__N_119ShouldAllowSameSiteERKN3url6OriginES4_(%"class.url::Origin"* nonnull dereferenceable(80) %8, %"class.url::Origin"* nonnull dereferenceable(80) %7)
  %39 = xor i1 %38, true
  %40 = zext i1 %39 to i64
  %41 = select i1 %38, i64 0, i64 17179869184
  br label %42

42:                                               ; preds = %37, %35, %31
  %43 = phi i64 [ 0, %31 ], [ 1, %35 ], [ %40, %37 ]
  %44 = phi i64 [ 0, %31 ], [ %30, %35 ], [ %41, %37 ]
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %33) #7
  call void @_ZN3url6OriginD1Ev(%"class.url::Origin"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %32) #7
  br label %45

45:                                               ; preds = %6, %25, %25, %25, %42
  %46 = phi i64 [ %43, %42 ], [ 0, %6 ], [ 0, %25 ], [ 0, %25 ], [ 0, %25 ]
  %47 = phi i64 [ %44, %42 ], [ 0, %6 ], [ 0, %25 ], [ 0, %25 ], [ 0, %25 ]
  %48 = and i64 %46, 255
  %49 = or i64 %47, %48
  ret i64 %49
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #2

declare void @_ZN7network23GetTrustworthyInitiatorERKN4absl8optionalIN3url6OriginEEES6_(%"class.url::Origin"* sret, %"class.absl::optional.5"* dereferenceable(88), %"class.absl::optional.5"* dereferenceable(88)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3url6OriginD1Ev(%"class.url::Origin"*) unnamed_addr #5

declare zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #2

declare void @_ZN3url6OriginC1ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

declare void @_ZNK3url6Origin6GetURLEv(%class.GURL* sret, %"class.url::Origin"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK4GURL15HostIsIPAddressEv(%class.GURL*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #5

declare void @_ZN3net27registry_controlled_domains20GetDomainAndRegistryERKN3url6OriginENS0_21PrivateRegistryFilterE(%"class.std::__1::basic_string"* sret, %"class.url::Origin"* dereferenceable(80), i32) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
