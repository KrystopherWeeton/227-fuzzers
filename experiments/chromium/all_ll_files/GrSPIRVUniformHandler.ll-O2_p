; ModuleID = '../../third_party/skia/src/gpu/GrSPIRVUniformHandler.cpp'
source_filename = "../../third_party/skia/src/gpu/GrSPIRVUniformHandler.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrSPIRVUniformHandler = type { %class.GrGLSLUniformHandler, %class.GrTBlockList.109, %class.GrTBlockList.109, %class.GrTBlockList.109, %class.SkTArray.112, %class.SkTArray, i32, i32, [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrTBlockList.109 = type { %class.GrSBlockAllocator.110 }
%class.GrSBlockAllocator.110 = type { [120 x i8], [8 x i8] }
%class.SkTArray.112 = type { %class.GrSwizzle*, i64 }
%class.GrSwizzle = type { i16 }
%class.SkTArray = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrGLSLProgramBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLVertexBuilder, %class.GrGLSLGeometryBuilder, %class.GrGLSLFragmentShaderBuilder, i32, %class.GrProgramDesc*, %class.GrProgramInfo*, %struct.GrGLSLBuiltinUniformHandles, %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::vector", i32, %class.SkSTArray.106 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.2, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.8], i32, i8, [3 x i8], i32 }>
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkSTArray.2 = type { %class.SkAlignedSTStorage.3, %class.SkTArray.4 }
%class.SkAlignedSTStorage.3 = type { [16 x i8] }
%class.SkTArray.4 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.8 = type { %class.SkAlignedSTStorage.9, %class.SkTArray }
%class.SkAlignedSTStorage.9 = type { [8 x i8] }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFragmentShaderBuilder = type <{ %class.GrGLSLFPFragmentBuilder.base, [4 x i8], %class.GrGLSLXPFragmentBuilder.base, %class.SkTArray.10, %class.SkString, %class.GrShaderVar*, i8, i8, i8, i8, [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLFPFragmentBuilder.base = type <{ i32 (...)**, [4 x i8] }>
%class.GrGLSLXPFragmentBuilder.base = type { i32 (...)** }
%class.SkTArray.10 = type { i32*, i64 }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.GrProgramDesc = type <{ %class.SkSTArray.11, i32, [4 x i8] }>
%class.SkSTArray.11 = type { %class.SkAlignedSTStorage.12, %class.SkTArray.13 }
%class.SkAlignedSTStorage.12 = type { [132 x i8] }
%class.SkTArray.13 = type { i32*, i64 }
%class.GrProgramInfo = type { i32, i8, %class.GrBackendFormat, i32, i8, %class.GrPipeline*, %struct.GrUserStencilSettings*, %class.GrGeometryProcessor*, i32, i8, i8, i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.14, i32, [4 x i8] }
%union.anon.14 = type { %struct.anon.15 }
%struct.anon.15 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrPipeline = type <{ %class.GrSurfaceProxyView, %struct.SkIPoint, i32, [4 x i8], %class.GrWindowRectsState, i8, [7 x i8], %class.sk_sp.63, %class.SkAutoSTArray, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrSurfaceProxyView = type <{ %class.sk_sp.17, i32, %class.GrSwizzle, [2 x i8] }>
%class.sk_sp.17 = type { %class.GrSurfaceProxy* }
%class.GrSurfaceProxy = type { i32 (...)**, %class.SkNVRefCnt, %class.sk_sp.18, i32, [4 x i8], %class.GrBackendFormat, %struct.SkISize, i32, i8, i32, %"class.GrSurfaceProxy::UniqueID", %"class.std::__1::function", i8, i8, i8, i8, i32, %"struct.std::__1::atomic.57" }
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.sk_sp.18 = type { %class.GrSurface* }
%class.GrSurface = type { %class.GrGpuResource, %struct.SkISize, i32, i8, %class.sk_sp.22 }
%class.GrGpuResource = type { i32 (...)**, %class.GrIORef, i32, i32, %"class.std::__1::chrono::time_point", %class.GrScratchKey, %class.GrUniqueKey, %class.GrGpu*, i64, i8, i8, %"class.GrGpuResource::UniqueID" }
%class.GrIORef = type { %"struct.std::__1::atomic", %"struct.std::__1::atomic" }
%"class.std::__1::chrono::time_point" = type { %"class.std::__1::chrono::duration" }
%"class.std::__1::chrono::duration" = type { i64 }
%class.GrScratchKey = type { %class.GrResourceKey }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.19, [4 x i8] }>
%union.anon.19 = type { [7 x i32] }
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.20, i8* }
%class.sk_sp.20 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.21, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.21 = type { %"struct.std::__1::atomic" }
%class.GrGpu = type opaque
%"class.GrGpuResource::UniqueID" = type { i32 }
%class.sk_sp.22 = type { %class.GrRefCntedCallback* }
%class.GrRefCntedCallback = type { %class.SkNVRefCnt.23, void (i8*)*, i8* }
%class.SkNVRefCnt.23 = type { %"struct.std::__1::atomic" }
%struct.SkISize = type { i32, i32 }
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"struct.GrSurfaceProxy::LazyCallbackResult"*, %"union.std::__1::__function::__policy_storage"*, %class.GrResourceProvider*, %"struct.GrSurfaceProxy::LazySurfaceDesc"*)* }
%"struct.GrSurfaceProxy::LazyCallbackResult" = type <{ %class.sk_sp.18, i32, i8, [3 x i8] }>
%class.GrResourceProvider = type { %class.GrResourceCache*, %class.GrGpu*, %class.sk_sp.54, %class.sk_sp.56, %class.sk_sp.56 }
%class.GrResourceCache = type { %class.GrProxyProvider*, %class.GrThreadSafeCache*, i32, %class.SkTDPQueue, %class.SkTDArray, %class.SkTMultiMap, %class.SkTDynamicHash.30, i64, i64, i32, i64, i64, i32, [4 x i8], %"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox", %"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox", %class.SkTHashMap, %"class.GrDirectContext::DirectContextID", i32, %class.GrSingleOwner* }
%class.GrProxyProvider = type opaque
%class.GrThreadSafeCache = type opaque
%class.SkTDPQueue = type { %class.SkTDArray }
%class.SkTDArray = type { %class.GrGpuResource**, i32, i32 }
%class.SkTMultiMap = type <{ %class.SkTDynamicHash, i32, [4 x i8] }>
%class.SkTDynamicHash = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList *, GrScratchKey, SkTDynamicHash<SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList, GrScratchKey, SkTMultiMap<GrGpuResource, GrScratchKey, GrResourceCache::ScratchMapTraits>::ValueList>::AdaptedTraits>::Slot" = type opaque
%class.SkTDynamicHash.30 = type { %class.SkTHashTable.31 }
%class.SkTHashTable.31 = type { i32, i32, %class.SkAutoTArray.32 }
%class.SkAutoTArray.32 = type { %"class.std::__1::unique_ptr.33" }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot"* }
%"struct.SkTHashTable<GrGpuResource *, GrUniqueKey, SkTDynamicHash<GrGpuResource, GrUniqueKey, GrResourceCache::UniqueHashTraits>::AdaptedTraits>::Slot" = type <{ %class.GrGpuResource*, i32, [4 x i8] }>
%"class.SkMessageBus<GrUniqueKeyInvalidatedMessage, unsigned int, true>::Inbox" = type <{ %class.SkTArray.39, %class.SkMutex, i32, [4 x i8] }>
%class.SkTArray.39 = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.40" }
%"struct.std::__1::atomic.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__cxx_atomic_impl.43" }
%"struct.std::__1::__cxx_atomic_impl.43" = type { %"struct.std::__1::__cxx_atomic_base_impl.44" }
%"struct.std::__1::__cxx_atomic_base_impl.44" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%"class.SkMessageBus<GrTextureFreedMessage, GrDirectContext::DirectContextID, true>::Inbox" = type <{ %class.SkTArray.45, %class.SkMutex, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.SkTArray.45 = type { %struct.GrTextureFreedMessage*, i64 }
%struct.GrTextureFreedMessage = type <{ %class.GrTexture*, %"class.GrDirectContext::DirectContextID", [4 x i8] }>
%class.GrTexture = type <{ i32 (...)**, i32, i32, i32, [4 x i8], %class.GrSurface }>
%class.SkTHashMap = type { %class.SkTHashTable.46 }
%class.SkTHashTable.46 = type { i32, i32, %class.SkAutoTArray.47 }
%class.SkAutoTArray.47 = type { %"class.std::__1::unique_ptr.48" }
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, GrResourceCache::TextureAwaitingUnref, SkGoodHash>::Pair>::Slot" = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%class.GrSingleOwner = type { i8 }
%class.sk_sp.54 = type { %class.GrCaps* }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp.55, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.55 = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.56 = type { %class.GrGpuBuffer* }
%class.GrGpuBuffer = type { %class.GrGpuResource, %class.GrBuffer, i8*, i64, i32, i32 }
%class.GrBuffer = type { i32 (...)** }
%"struct.GrSurfaceProxy::LazySurfaceDesc" = type <{ %struct.SkISize, i32, i8, i8, [2 x i8], i32, [4 x i8], %class.GrBackendFormat*, i8, i8, [6 x i8] }>
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"struct.std::__1::atomic.57" = type { %"struct.std::__1::__atomic_base.58" }
%"struct.std::__1::__atomic_base.58" = type { %"struct.std::__1::__atomic_base.59" }
%"struct.std::__1::__atomic_base.59" = type { %"struct.std::__1::__cxx_atomic_impl.60" }
%"struct.std::__1::__cxx_atomic_impl.60" = type { %"struct.std::__1::__cxx_atomic_base_impl.61" }
%"struct.std::__1::__cxx_atomic_base_impl.61" = type { i64 }
%struct.SkIPoint = type { i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon.62 }
%union.anon.62 = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef = type { i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.sk_sp.63 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.64, i8, i8, [2 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef.64 = type { i32 }
%class.SkAutoSTArray = type { i32, %"class.std::__1::unique_ptr.65"*, [24 x i8] }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.68, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.SkSTArray.68 = type { %class.SkAlignedSTStorage.69, %class.SkTArray.70 }
%class.SkAlignedSTStorage.69 = type { [8 x i8] }
%class.SkTArray.70 = type { %"class.std::__1::unique_ptr.71"*, i64 }
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef.80, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrNonAtomicRef.80 = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%struct.GrGLSLBuiltinUniformHandles = type { %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %class.GrGLSLGeometryProcessor* }
%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray.84 }
%class.SkTArray.84 = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %class.GrGLSLXferProcessor* }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.94"*, %"class.std::__1::unique_ptr.94"*, %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %class.GrGLSLFragmentProcessor* }
%class.GrGLSLFragmentProcessor = type { i32 (...)**, %class.SkTArray, %class.SkTArray.97 }
%class.SkTArray.97 = type { %"class.std::__1::unique_ptr.94"*, i64 }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::unique_ptr.94"* }
%class.SkSTArray.106 = type { %class.SkAlignedSTStorage.107, %class.SkTArray.108 }
%class.SkAlignedSTStorage.107 = type { [160 x i8] }
%class.SkTArray.108 = type { %class.GrShaderVar*, i64 }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%"struct.GrSPIRVUniformHandler::SPIRVUniformInfo" = type <{ %"struct.GrGLSLUniformHandler::UniformInfo", i32, [4 x i8] }>
%"struct.GrGLSLUniformHandler::UniformInfo" = type { %class.GrShaderVar, i32, %class.GrFragmentProcessor*, %class.SkString }

$_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE9push_backEOS1_ = comdat any

$_ZN21GrSPIRVUniformHandlerD2Ev = comdat any

$_ZN21GrSPIRVUniformHandlerD0Ev = comdat any

$_ZNK21GrSPIRVUniformHandler11numUniformsEv = comdat any

$_ZN21GrSPIRVUniformHandler7uniformEi = comdat any

$_ZNK21GrSPIRVUniformHandler7uniformEi = comdat any

$_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE = comdat any

$_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE = comdat any

$_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc = comdat any

$_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE5resetEv = comdat any

$_ZN9GrSwizzleC2EPKc = comdat any

$_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

$_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE = comdat any

@_ZTV21GrSPIRVUniformHandler = hidden unnamed_addr constant { [17 x i8*] } { [17 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrSPIRVUniformHandler*)* @_ZN21GrSPIRVUniformHandlerD2Ev to i8*), i8* bitcast (void (%class.GrSPIRVUniformHandler*)* @_ZN21GrSPIRVUniformHandlerD0Ev to i8*), i8* bitcast (%class.GrShaderVar* (%class.GrSPIRVUniformHandler*, i32)* @_ZNK21GrSPIRVUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i8* (%class.GrSPIRVUniformHandler*, i32)* @_ZNK21GrSPIRVUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE to i8*), i8* bitcast (i32 (%class.GrSPIRVUniformHandler*)* @_ZNK21GrSPIRVUniformHandler11numUniformsEv to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrSPIRVUniformHandler*, i32)* @_ZN21GrSPIRVUniformHandler7uniformEi to i8*), i8* bitcast (%"struct.GrGLSLUniformHandler::UniformInfo"* (%class.GrSPIRVUniformHandler*, i32)* @_ZNK21GrSPIRVUniformHandler7uniformEi to i8*), i8* bitcast (i8* (%class.GrSPIRVUniformHandler*, i32)* @_ZNK21GrSPIRVUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrSPIRVUniformHandler*, i32)* @_ZNK21GrSPIRVUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE to i8*), i8* bitcast (i8* (%class.GrGLSLUniformHandler*, i32)* @_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE to i8*), i8* bitcast (void (%class.GrSwizzle*, %class.GrGLSLUniformHandler*, i32)* @_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE to i8*), i8* bitcast (i32 (%class.GrSPIRVUniformHandler*, %class.GrBackendFormat*, i64, i32, %class.GrSwizzle*, i8*, %class.GrShaderCaps*)* @_ZN21GrSPIRVUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps to i8*), i8* bitcast (i32 (%class.GrGLSLUniformHandler*, %class.GrSwizzle*, i8*)* @_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc to i8*), i8* bitcast (i32 (%class.GrSPIRVUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)* @_ZN21GrSPIRVUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_ to i8*), i8* bitcast (void (%class.GrSPIRVUniformHandler*, i32, %class.SkString*)* @_ZNK21GrSPIRVUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString to i8*)] }, align 8
@.str = private unnamed_addr constant [4 x i8] c"sk_\00", align 1
@.str.1 = private unnamed_addr constant [12 x i8] c"offset = %d\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"set = %d, binding = %d\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"makeSampler2D(%s, %s)\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c";\0A\00", align 1
@.str.5 = private unnamed_addr constant [57 x i8] c"layout (set = %d, binding = %d) uniform UniformBuffer\0A{\0A\00", align 1
@.str.6 = private unnamed_addr constant [7 x i8] c"%s\0A};\0A\00", align 1
@.str.7 = private unnamed_addr constant [57 x i8] c"../../third_party/skia/src/gpu/GrSPIRVUniformHandler.cpp\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"Unexpected type\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"rgba\00", align 1
@switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei = private unnamed_addr constant [38 x i32] [i32 0, i32 1, i32 3, i32 3, i32 0, i32 1, i32 3, i32 3, i32 1, i32 3, i32 7, i32 7, i32 1, i32 3, i32 7, i32 7, i32 3, i32 7, i32 15, i32 15, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15, i32 3, i32 7, i32 15, i32 15], align 4
@switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei.12 = private unnamed_addr constant [38 x i32] [i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 32, i32 48, i32 64, i32 16, i32 16, i32 16, i32 16, i32 32, i32 48, i32 64, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16], align 4
@switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei.13 = private unnamed_addr constant [38 x i32] [i32 1, i32 2, i32 3, i32 4, i32 1, i32 2, i32 3, i32 4, i32 2, i32 4, i32 6, i32 8, i32 2, i32 4, i32 6, i32 8, i32 4, i32 8, i32 12, i32 16, i32 32, i32 48, i32 64, i32 4, i32 8, i32 12, i32 16, i32 32, i32 48, i32 64, i32 4, i32 8, i32 12, i32 16, i32 4, i32 8, i32 12, i32 16], align 4

@_ZN21GrSPIRVUniformHandlerC1EP20GrGLSLProgramBuilder = hidden unnamed_addr alias void (%class.GrSPIRVUniformHandler*, %class.GrGLSLProgramBuilder*), void (%class.GrSPIRVUniformHandler*, %class.GrGLSLProgramBuilder*)* @_ZN21GrSPIRVUniformHandlerC2EP20GrGLSLProgramBuilder

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21GrSPIRVUniformHandlerC2EP20GrGLSLProgramBuilder(%class.GrSPIRVUniformHandler*, %class.GrGLSLProgramBuilder*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 1
  store %class.GrGLSLProgramBuilder* %1, %class.GrGLSLProgramBuilder** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21GrSPIRVUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 16
  %5 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1
  %6 = bitcast %class.GrTBlockList.109* %5 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %6, i32 0, i64 608, i64 72) #12
  %7 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2
  %8 = bitcast %class.GrTBlockList.109* %7 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %8, i32 0, i64 608, i64 72) #12
  %9 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3
  %10 = bitcast %class.GrTBlockList.109* %9 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator* %10, i32 0, i64 608, i64 72) #12
  %11 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4, i32 1
  %12 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4, i32 0
  store %class.GrSwizzle* null, %class.GrSwizzle** %12, align 8
  store i64 1, i64* %11, align 8
  %13 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5, i32 1
  %14 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5, i32 0
  store %class.SkString* null, %class.SkString** %14, align 8
  store i64 1, i64* %13, align 8
  %15 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 6
  store i32 0, i32* %15, align 16
  %16 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 7
  store i32 0, i32* %16, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(40) %class.GrShaderVar* @_ZNK21GrSPIRVUniformHandler18getUniformVariableE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrSPIRVUniformHandler* readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %class.GrShaderVar*
  ret %class.GrShaderVar* %35
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZNK21GrSPIRVUniformHandler14getUniformCStrE16GrResourceHandleIN24GrGLSLProgramDataManager17UniformHandleKindEE(%class.GrSPIRVUniformHandler* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = getelementptr inbounds i8, i8* %34, i64 16
  %36 = bitcast i8* %35 to %"struct.SkString::Rec"**
  %37 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %36, align 8
  %38 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %37, i64 0, i32 2
  ret i8* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN21GrSPIRVUniformHandler23internalAddUniformArrayEPK19GrFragmentProcessorj8GrSLTypePKcbiPS5_(%class.GrSPIRVUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1 zeroext, i32, i8**) unnamed_addr #0 align 2 {
  %9 = alloca %class.SkString, align 8
  %10 = alloca %class.SkString, align 8
  %11 = alloca %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = alloca %class.SkString, align 8
  %15 = load i8, i8* %4, align 1
  %16 = icmp eq i8 %15, 117
  br i1 %16, label %20, label %17

17:                                               ; preds = %8
  %18 = tail call i32 @strncmp(i8* %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0), i64 3) #13
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17, %8
  br label %21

21:                                               ; preds = %17, %20
  %22 = phi i8 [ 0, %20 ], [ 117, %17 ]
  %23 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #12
  %24 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %24, align 8
  %25 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 1
  %26 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %25, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %9, %class.GrGLSLProgramBuilder* %26, i8 signext %22, i8* %4, i1 zeroext %5) #12
  %27 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 6
  %28 = call fastcc i32 @_ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei(i32* %27, i32 %3, i32 %6)
  %29 = bitcast %class.SkString* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  %30 = getelementptr inbounds %class.SkString, %class.SkString* %10, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %30, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %10) #12
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %10, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i64 0, i64 0), i32 %28) #12
  %31 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1
  %32 = bitcast %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %12, %class.SkString* nonnull dereferenceable(8) %9) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %13, %class.SkString* nonnull dereferenceable(8) %10) #12
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %14) #12
  %33 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 0
  store i32 %3, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 2
  store i32 %6, i32* %35, align 8
  %36 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %36, %class.SkString* nonnull dereferenceable(8) %12) #12
  %37 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* %37, %class.SkString* nonnull dereferenceable(8) %13) #12
  %38 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* nonnull dereferenceable(8) %14) #12
  %39 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 1
  store i32 %2, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* %1, %class.GrFragmentProcessor** %40, align 8
  %41 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %41, i8* %4) #12
  %42 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %11, i64 0, i32 1
  store i32 %28, i32* %42, align 8
  %43 = call dereferenceable(72) %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.109* %31, %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* nonnull dereferenceable(72) %11)
  call void @_ZN8SkStringD1Ev(%class.SkString* %41) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %38) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %37) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %36) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #12
  %44 = icmp eq i8** %7, null
  br i1 %44, label %49, label %45

45:                                               ; preds = %21
  %46 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %43, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %47 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %46, align 8
  %48 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %47, i64 0, i32 2
  store i8* %48, i8** %7, align 8
  br label %49

49:                                               ; preds = %21, %45
  %50 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %51 = bitcast i8* %50 to i32*
  %52 = load i32, i32* %51, align 4
  %53 = add nsw i32 %52, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #12
  ret i32 %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #2

declare void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* sret, %class.GrGLSLProgramBuilder*, i8 signext, i8*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @_ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei(i32* nocapture, i32, i32) unnamed_addr #0 {
  %4 = add i32 %1, -5
  %5 = icmp ult i32 %4, 38
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 102, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)) #14
  unreachable

7:                                                ; preds = %3
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [38 x i32], [38 x i32]* @switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %2, 0
  %12 = icmp eq i32 %1, 25
  %13 = or i1 %12, %11
  %14 = select i1 %13, i32 15, i32 %10
  %15 = load i32, i32* %0, align 4
  %16 = and i32 %15, %14
  %17 = icmp eq i32 %16, 0
  %18 = add nuw nsw i32 %14, 1
  %19 = sub nsw i32 %18, %16
  %20 = select i1 %17, i32 0, i32 %19
  %21 = add i32 %20, %15
  %22 = add i32 %1, -5
  %23 = icmp ult i32 %22, 38
  br i1 %11, label %24, label %31

24:                                               ; preds = %7
  br i1 %23, label %26, label %25

25:                                               ; preds = %24
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 184, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)) #14
  unreachable

26:                                               ; preds = %24
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds [38 x i32], [38 x i32]* @switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei.12, i64 0, i64 %27
  %29 = load i32, i32* %28, align 4
  %30 = mul i32 %29, %2
  br label %37

31:                                               ; preds = %7
  br i1 %23, label %33, label %32

32:                                               ; preds = %31
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.7, i64 0, i64 0), i32 184, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)) #14
  unreachable

33:                                               ; preds = %31
  %34 = sext i32 %22 to i64
  %35 = getelementptr inbounds [38 x i32], [38 x i32]* @switch.table._ZN12_GLOBAL__N_114get_ubo_offsetEPj8GrSLTypei.13, i64 0, i64 %34
  %36 = load i32, i32* %35, align 4
  br label %37

37:                                               ; preds = %33, %26
  %38 = phi i32 [ %30, %26 ], [ %36, %33 ]
  %39 = add i32 %38, %21
  store i32 %39, i32* %0, align 4
  ret i32 %21
}

declare void @_ZN8SkStringC1Ev(%class.SkString*) unnamed_addr #3

declare void @_ZN8SkString7appendfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(72) %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.109*, %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %class.GrTBlockList.109* %0 to %"class.GrBlockAllocator::Block"**
  %4 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %5 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 3
  %6 = load i32, i32* %5, align 4, !noalias !2
  %7 = add i32 %6, 7
  %8 = and i32 %7, -8
  %9 = add nsw i32 %8, 72
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %4, i64 0, i32 2
  %11 = load i32, i32* %10, align 8, !noalias !2
  %12 = icmp sgt i32 %9, %11
  br i1 %12, label %13, label %21

13:                                               ; preds = %2
  %14 = bitcast %class.GrTBlockList.109* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator* %14, i32 104, i32 536870944) #12, !noalias !2
  %15 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 3
  %17 = load i32, i32* %16, align 4, !noalias !2
  %18 = add i32 %17, 7
  %19 = and i32 %18, -8
  %20 = add nsw i32 %19, 72
  br label %21

21:                                               ; preds = %2, %13
  %22 = phi %"class.GrBlockAllocator::Block"* [ %15, %13 ], [ %4, %2 ]
  %23 = phi i32 [ %19, %13 ], [ %8, %2 ]
  %24 = phi i32 [ %20, %13 ], [ %9, %2 ]
  %25 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %22, i64 0, i32 3
  store i32 %24, i32* %25, align 4, !noalias !2
  %26 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %3, align 16, !noalias !2
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %26, i64 0, i32 4
  store i32 %23, i32* %27, align 8
  %28 = getelementptr inbounds %class.GrTBlockList.109, %class.GrTBlockList.109* %0, i64 0, i32 0, i32 0, i64 44
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %30, 1
  store i32 %31, i32* %29, align 4
  %32 = bitcast %"class.GrBlockAllocator::Block"* %26 to i8*
  %33 = sext i32 %23 to i64
  %34 = getelementptr inbounds i8, i8* %32, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"*
  %36 = bitcast %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %36, i64 12, i1 false) #12
  %37 = getelementptr inbounds i8, i8* %34, i64 16
  %38 = bitcast i8* %37 to %class.SkString*
  %39 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* dereferenceable(8) %39) #12
  %40 = getelementptr inbounds i8, i8* %34, i64 24
  %41 = bitcast i8* %40 to %class.SkString*
  %42 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 0, i32 0, i32 4
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %41, %class.SkString* dereferenceable(8) %42) #12
  %43 = getelementptr inbounds i8, i8* %34, i64 32
  %44 = bitcast i8* %43 to %class.SkString*
  %45 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 0, i32 0, i32 5
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %44, %class.SkString* dereferenceable(8) %45) #12
  %46 = getelementptr inbounds i8, i8* %34, i64 40
  %47 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 0, i32 1
  %48 = bitcast i32* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %48, i64 16, i1 false) #12
  %49 = getelementptr inbounds i8, i8* %34, i64 56
  %50 = bitcast i8* %49 to %class.SkString*
  %51 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %50, %class.SkString* dereferenceable(8) %51) #12
  %52 = getelementptr inbounds i8, i8* %34, i64 64
  %53 = bitcast i8* %52 to i32*
  %54 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %1, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %53, align 8
  ret %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %35
}

declare void @_ZN8SkStringC1EOS_(%class.SkString*, %class.SkString* dereferenceable(8)) unnamed_addr #3

declare void @_ZN8SkStringC1EPKc(%class.SkString*, i8*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN21GrSPIRVUniformHandler10addSamplerERK15GrBackendFormat14GrSamplerStateRK9GrSwizzlePKcPK12GrShaderCaps(%class.GrSPIRVUniformHandler*, %class.GrBackendFormat* nocapture readnone dereferenceable(72), i64, i32, %class.GrSwizzle* nocapture readonly dereferenceable(2), i8*, %class.GrShaderCaps* nocapture readnone) unnamed_addr #0 align 2 {
  %8 = alloca %class.SkString, align 8
  %9 = alloca %class.SkString, align 8
  %10 = alloca %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", align 8
  %11 = alloca %class.SkString, align 8
  %12 = alloca %class.SkString, align 8
  %13 = alloca %class.SkString, align 8
  %14 = alloca %class.SkString, align 8
  %15 = alloca %class.SkString, align 8
  %16 = alloca %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", align 8
  %17 = alloca %class.SkString, align 8
  %18 = alloca %class.SkString, align 8
  %19 = alloca %class.SkString, align 8
  %20 = alloca %class.SkString, align 8
  %21 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2
  %22 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 44
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = shl nsw i32 %24, 1
  %26 = bitcast %class.SkString* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #12
  %27 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %27, align 8
  %28 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 1
  %29 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %28, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %8, %class.GrGLSLProgramBuilder* %29, i8 signext 115, i8* %5, i1 zeroext true) #12
  %30 = bitcast %class.SkString* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #12
  %31 = getelementptr inbounds %class.SkString, %class.SkString* %9, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %31, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %9) #12
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %9, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 %25) #12
  %32 = bitcast %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %11, %class.SkString* nonnull dereferenceable(8) %8) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %12, %class.SkString* nonnull dereferenceable(8) %9) #12
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %13) #12
  %33 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 0
  store i32 47, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %34, align 4
  %35 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %36, %class.SkString* nonnull dereferenceable(8) %11) #12
  %37 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* %37, %class.SkString* nonnull dereferenceable(8) %12) #12
  %38 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1EOS_(%class.SkString* %38, %class.SkString* nonnull dereferenceable(8) %13) #12
  %39 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 1
  store i32 16, i32* %39, align 8
  %40 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %40, align 8
  %41 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %41, i8* %5) #12
  %42 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %10, i64 0, i32 1
  store i32 0, i32* %42, align 8
  %43 = call dereferenceable(72) %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.109* %21, %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* nonnull dereferenceable(72) %10)
  call void @_ZN8SkStringD1Ev(%class.SkString* %41) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %38) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %37) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %36) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %13) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %12) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #12
  %44 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4
  call void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.112* %44, i32 1, i32 1) #12
  %45 = getelementptr inbounds %class.SkTArray.112, %class.SkTArray.112* %44, i64 0, i32 0
  %46 = load %class.GrSwizzle*, %class.GrSwizzle** %45, align 8
  %47 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = lshr i64 %48, 1
  %50 = and i64 %49, 2147483647
  %51 = add i64 %48, 2
  %52 = and i64 %51, 4294967294
  %53 = and i64 %48, -4294967295
  %54 = or i64 %52, %53
  store i64 %54, i64* %47, align 8
  %55 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %46, i64 %50, i32 0
  %56 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %4, i64 0, i32 0
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %55, align 2
  %58 = bitcast %class.SkString* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  %59 = getelementptr inbounds %class.SkString, %class.SkString* %14, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %59, align 8
  %60 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %28, align 8
  call void @_ZN20GrGLSLProgramBuilder12nameVariableEcPKcb(%class.SkString* nonnull sret %14, %class.GrGLSLProgramBuilder* %60, i8 signext 116, i8* %5, i1 zeroext true) #12
  %61 = bitcast %class.SkString* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #12
  %62 = getelementptr inbounds %class.SkString, %class.SkString* %15, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %62, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %15) #12
  %63 = or i32 %25, 1
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* nonnull %15, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i32 1, i32 %63) #12
  %64 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3
  %65 = bitcast %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %65) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %17, %class.SkString* nonnull dereferenceable(8) %14) #12
  call void @_ZN8SkStringC1EOS_(%class.SkString* nonnull %18, %class.SkString* nonnull dereferenceable(8) %15) #12
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %19) #12
  %66 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 0
  store i32 46, i32* %66, align 8
  %67 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 3
  call void @_ZN8SkStringC1EOS_(%class.SkString* %69, %class.SkString* nonnull dereferenceable(8) %17) #12
  %70 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 4
  call void @_ZN8SkStringC1EOS_(%class.SkString* %70, %class.SkString* nonnull dereferenceable(8) %18) #12
  %71 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 0, i32 5
  call void @_ZN8SkStringC1EOS_(%class.SkString* %71, %class.SkString* nonnull dereferenceable(8) %19) #12
  %72 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 1
  store i32 16, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 2
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %73, align 8
  %74 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 0, i32 3
  call void @_ZN8SkStringC1EPKc(%class.SkString* %74, i8* %5) #12
  %75 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %16, i64 0, i32 1
  store i32 0, i32* %75, align 8
  %76 = call dereferenceable(72) %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE9push_backEOS1_(%class.GrTBlockList.109* %64, %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* nonnull dereferenceable(72) %16)
  call void @_ZN8SkStringD1Ev(%class.SkString* %74) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %71) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %70) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* %69) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %19) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %18) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %17) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %65) #12
  %77 = bitcast %class.SkString* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #12
  %78 = getelementptr inbounds %class.SkString, %class.SkString* %20, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %78, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %20) #12
  %79 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %76, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %79, align 8
  %81 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %80, i64 0, i32 2
  %82 = getelementptr inbounds %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo", %"struct.GrSPIRVUniformHandler::SPIRVUniformInfo"* %43, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %83 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %82, align 8
  %84 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %83, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString6printfEPKcz(%class.SkString* nonnull %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* %81, i8* %84) #12
  %85 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5
  call void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray* %85, i32 1, i32 1) #12
  %86 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %85, i64 0, i32 0
  %87 = load %class.SkString*, %class.SkString** %86, align 8
  %88 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5, i32 1
  %89 = load i64, i64* %88, align 8
  %90 = lshr i64 %89, 1
  %91 = and i64 %90, 2147483647
  %92 = getelementptr inbounds %class.SkString, %class.SkString* %87, i64 %91
  %93 = add i64 %89, 2
  %94 = and i64 %93, 4294967294
  %95 = and i64 %89, -4294967295
  %96 = or i64 %94, %95
  store i64 %96, i64* %88, align 8
  call void @_ZN8SkStringC1EOS_(%class.SkString* %92, %class.SkString* nonnull dereferenceable(8) %20) #12
  %97 = load i32, i32* %23, align 4
  %98 = add nsw i32 %97, -1
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #12
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #12
  ret i32 %98
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8SkString6printfEPKcz(%class.SkString*, i8*, ...) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK21GrSPIRVUniformHandler15samplerVariableE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrSPIRVUniformHandler* nocapture readonly, i32) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5, i32 0
  %4 = load %class.SkString*, %class.SkString** %3, align 8
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 %5, i32 0, i32 0
  %7 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %7, i64 0, i32 2
  ret i8* %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK21GrSPIRVUniformHandler14samplerSwizzleE16GrResourceHandleIN20GrGLSLUniformHandler17SamplerHandleKindEE(%class.GrSwizzle* noalias nocapture sret, %class.GrSPIRVUniformHandler* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %1, i64 0, i32 4, i32 0
  %5 = load %class.GrSwizzle*, %class.GrSwizzle** %4, align 8
  %6 = sext i32 %2 to i64
  %7 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %8 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %5, i64 %6, i32 0
  %9 = load i16, i16* %8, align 2
  store i16 %9, i16* %7, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK21GrSPIRVUniformHandler18appendUniformDeclsE13GrShaderFlagsP8SkString(%class.GrSPIRVUniformHandler*, i32, %class.SkString*) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkString, align 8
  %5 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %6 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"*
  %7 = bitcast i8* %5 to %"class.GrBlockAllocator::Block"**
  %8 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %7, align 8, !noalias !5
  %9 = ptrtoint %"class.GrBlockAllocator::Block"* %8 to i64
  %10 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 40
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8, !noalias !5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %24

14:                                               ; preds = %3, %17
  %15 = phi %"class.GrBlockAllocator::Block"* [ %23, %17 ], [ %8, %3 ]
  %16 = icmp eq %"class.GrBlockAllocator::Block"* %15, null
  br i1 %16, label %24, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.GrBlockAllocator::Block"* %15 to i64*
  %19 = load i64, i64* %18, align 8, !noalias !5
  %20 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %15, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !5
  %22 = icmp eq i32 %21, 0
  %23 = inttoptr i64 %19 to %"class.GrBlockAllocator::Block"*
  br i1 %22, label %14, label %24

24:                                               ; preds = %14, %17, %3
  %25 = phi %"class.GrBlockAllocator::Block"* [ %6, %3 ], [ null, %14 ], [ %15, %17 ]
  %26 = phi i64 [ %9, %3 ], [ 0, %14 ], [ %19, %17 ]
  %27 = phi i32 [ 32, %3 ], [ 0, %14 ], [ 32, %17 ]
  %28 = phi i32 [ %12, %3 ], [ 0, %14 ], [ %21, %17 ]
  %29 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %30 = bitcast i8* %29 to %"class.GrBlockAllocator::Block"**
  %31 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %30, align 8, !noalias !8
  %32 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 40
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 8, !noalias !8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %46

36:                                               ; preds = %24, %39
  %37 = phi %"class.GrBlockAllocator::Block"* [ %45, %39 ], [ %31, %24 ]
  %38 = icmp eq %"class.GrBlockAllocator::Block"* %37, null
  br i1 %38, label %55, label %39

39:                                               ; preds = %36
  %40 = bitcast %"class.GrBlockAllocator::Block"* %37 to i64*
  %41 = load i64, i64* %40, align 8, !noalias !8
  %42 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %37, i64 0, i32 4
  %43 = load i32, i32* %42, align 8, !noalias !8
  %44 = icmp eq i32 %43, 0
  %45 = inttoptr i64 %41 to %"class.GrBlockAllocator::Block"*
  br i1 %44, label %36, label %50

46:                                               ; preds = %24
  %47 = bitcast i8* %29 to %"class.GrBlockAllocator::Block"*
  %48 = ptrtoint %"class.GrBlockAllocator::Block"* %31 to i64
  %49 = icmp eq i8* %29, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %39, %46
  %51 = phi i32 [ %34, %46 ], [ %43, %39 ]
  %52 = phi %"class.GrBlockAllocator::Block"* [ %47, %46 ], [ %37, %39 ]
  %53 = phi i64 [ %48, %46 ], [ %41, %39 ]
  %54 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 1
  br label %84

55:                                               ; preds = %36, %153, %173, %163, %46
  %56 = bitcast %class.SkString* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  %57 = getelementptr inbounds %class.SkString, %class.SkString* %4, i64 0, i32 0, i32 0
  store %"struct.SkString::Rec"* inttoptr (i64 -6148914691236517206 to %"struct.SkString::Rec"*), %"struct.SkString::Rec"** %57, align 8
  call void @_ZN8SkStringC1Ev(%class.SkString* nonnull %4) #12
  %58 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %59 = bitcast i8* %58 to %"class.GrBlockAllocator::Block"**
  %60 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %59, align 8, !noalias !11
  %61 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 40
  %62 = bitcast i8* %61 to i32*
  %63 = load i32, i32* %62, align 8, !noalias !11
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %75

65:                                               ; preds = %55, %68
  %66 = phi %"class.GrBlockAllocator::Block"* [ %74, %68 ], [ %60, %55 ]
  %67 = icmp eq %"class.GrBlockAllocator::Block"* %66, null
  br i1 %67, label %179, label %68

68:                                               ; preds = %65
  %69 = bitcast %"class.GrBlockAllocator::Block"* %66 to i64*
  %70 = load i64, i64* %69, align 8, !noalias !11
  %71 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %66, i64 0, i32 4
  %72 = load i32, i32* %71, align 8, !noalias !11
  %73 = icmp eq i32 %72, 0
  %74 = inttoptr i64 %70 to %"class.GrBlockAllocator::Block"*
  br i1 %73, label %65, label %79

75:                                               ; preds = %55
  %76 = bitcast i8* %58 to %"class.GrBlockAllocator::Block"*
  %77 = ptrtoint %"class.GrBlockAllocator::Block"* %60 to i64
  %78 = icmp eq i8* %58, null
  br i1 %78, label %179, label %79

79:                                               ; preds = %68, %75
  %80 = phi %"class.GrBlockAllocator::Block"* [ %76, %75 ], [ %66, %68 ]
  %81 = phi i64 [ %77, %75 ], [ %70, %68 ]
  %82 = phi i32 [ %63, %75 ], [ %72, %68 ]
  %83 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 1
  br label %184

84:                                               ; preds = %50, %173
  %85 = phi i32 [ %28, %50 ], [ %150, %173 ]
  %86 = phi i32 [ %27, %50 ], [ %149, %173 ]
  %87 = phi i64 [ %26, %50 ], [ %148, %173 ]
  %88 = phi %"class.GrBlockAllocator::Block"* [ %25, %50 ], [ %147, %173 ]
  %89 = phi i32 [ %51, %50 ], [ %177, %173 ]
  %90 = phi %"class.GrBlockAllocator::Block"* [ %52, %50 ], [ %176, %173 ]
  %91 = phi i64 [ %53, %50 ], [ %175, %173 ]
  %92 = phi i32 [ 32, %50 ], [ %174, %173 ]
  %93 = bitcast %"class.GrBlockAllocator::Block"* %90 to i8*
  %94 = sext i32 %92 to i64
  %95 = getelementptr inbounds i8, i8* %93, i64 %94
  %96 = getelementptr inbounds i8, i8* %95, i64 40
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, %1
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %123, label %101

101:                                              ; preds = %84
  %102 = bitcast i8* %95 to %class.GrShaderVar*
  %103 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %54, align 8
  %104 = bitcast %class.GrGLSLProgramBuilder* %103 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %105 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %104, align 16
  %106 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %105, i64 2
  %107 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %106, align 8
  %108 = tail call %class.GrCaps* %107(%class.GrGLSLProgramBuilder* %103) #12
  %109 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %108, i64 0, i32 2, i32 0
  %110 = load %class.GrShaderCaps*, %class.GrShaderCaps** %109, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %102, %class.GrShaderCaps* %110, %class.SkString* %2) #12
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12
  %111 = bitcast %"class.GrBlockAllocator::Block"* %88 to i8*
  %112 = sext i32 %86 to i64
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  %114 = bitcast i8* %113 to %class.GrShaderVar*
  %115 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %54, align 8
  %116 = bitcast %class.GrGLSLProgramBuilder* %115 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %117 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %116, align 16
  %118 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %117, i64 2
  %119 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %118, align 8
  %120 = tail call %class.GrCaps* %119(%class.GrGLSLProgramBuilder* %115) #12
  %121 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %120, i64 0, i32 2, i32 0
  %122 = load %class.GrShaderCaps*, %class.GrShaderCaps** %121, align 8
  tail call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %114, %class.GrShaderCaps* %122, %class.SkString* %2) #12
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %2, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %123

123:                                              ; preds = %84, %101
  %124 = add i32 %86, 72
  %125 = icmp sgt i32 %124, %85
  br i1 %125, label %126, label %146

126:                                              ; preds = %123
  %127 = inttoptr i64 %87 to %"class.GrBlockAllocator::Block"*
  %128 = icmp eq i64 %87, 0
  br i1 %128, label %146, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %127, i64 0, i32 0
  %131 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %130, align 8
  %132 = ptrtoint %"class.GrBlockAllocator::Block"* %131 to i64
  %133 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %127, i64 0, i32 4
  %134 = load i32, i32* %133, align 8
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %146

136:                                              ; preds = %129, %139
  %137 = phi %"class.GrBlockAllocator::Block"* [ %145, %139 ], [ %131, %129 ]
  %138 = icmp eq %"class.GrBlockAllocator::Block"* %137, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %136
  %140 = bitcast %"class.GrBlockAllocator::Block"* %137 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %137, i64 0, i32 4
  %143 = load i32, i32* %142, align 8
  %144 = icmp eq i32 %143, 0
  %145 = inttoptr i64 %141 to %"class.GrBlockAllocator::Block"*
  br i1 %144, label %136, label %146

146:                                              ; preds = %136, %139, %129, %126, %123
  %147 = phi %"class.GrBlockAllocator::Block"* [ %88, %123 ], [ null, %126 ], [ %127, %129 ], [ null, %136 ], [ %137, %139 ]
  %148 = phi i64 [ %87, %123 ], [ 0, %126 ], [ %132, %129 ], [ 0, %136 ], [ %141, %139 ]
  %149 = phi i32 [ %124, %123 ], [ 0, %126 ], [ 32, %129 ], [ 0, %136 ], [ 32, %139 ]
  %150 = phi i32 [ %85, %123 ], [ 0, %126 ], [ %134, %129 ], [ 0, %136 ], [ %143, %139 ]
  %151 = add i32 %92, 72
  %152 = icmp sgt i32 %151, %89
  br i1 %152, label %153, label %173

153:                                              ; preds = %146
  %154 = inttoptr i64 %91 to %"class.GrBlockAllocator::Block"*
  %155 = icmp eq i64 %91, 0
  br i1 %155, label %55, label %156

156:                                              ; preds = %153
  %157 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %154, i64 0, i32 0
  %158 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %157, align 8
  %159 = ptrtoint %"class.GrBlockAllocator::Block"* %158 to i64
  %160 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %154, i64 0, i32 4
  %161 = load i32, i32* %160, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %173

163:                                              ; preds = %156, %166
  %164 = phi %"class.GrBlockAllocator::Block"* [ %172, %166 ], [ %158, %156 ]
  %165 = icmp eq %"class.GrBlockAllocator::Block"* %164, null
  br i1 %165, label %55, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.GrBlockAllocator::Block"* %164 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %164, i64 0, i32 4
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  %172 = inttoptr i64 %168 to %"class.GrBlockAllocator::Block"*
  br i1 %171, label %163, label %173

173:                                              ; preds = %166, %156, %146
  %174 = phi i32 [ %151, %146 ], [ 32, %156 ], [ 32, %166 ]
  %175 = phi i64 [ %91, %146 ], [ %159, %156 ], [ %168, %166 ]
  %176 = phi %"class.GrBlockAllocator::Block"* [ %90, %146 ], [ %154, %156 ], [ %164, %166 ]
  %177 = phi i32 [ %89, %146 ], [ %161, %156 ], [ %170, %166 ]
  %178 = icmp eq %"class.GrBlockAllocator::Block"* %176, null
  br i1 %178, label %55, label %84

179:                                              ; preds = %65, %210, %230, %220, %75
  %180 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %57, align 8
  %181 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %180, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %239, label %236

184:                                              ; preds = %79, %230
  %185 = phi %"class.GrBlockAllocator::Block"* [ %80, %79 ], [ %234, %230 ]
  %186 = phi i64 [ %81, %79 ], [ %233, %230 ]
  %187 = phi i32 [ 32, %79 ], [ %232, %230 ]
  %188 = phi i32 [ %82, %79 ], [ %231, %230 ]
  %189 = bitcast %"class.GrBlockAllocator::Block"* %185 to i8*
  %190 = sext i32 %187 to i64
  %191 = getelementptr inbounds i8, i8* %189, i64 %190
  %192 = getelementptr inbounds i8, i8* %191, i64 40
  %193 = bitcast i8* %192 to i32*
  %194 = load i32, i32* %193, align 8
  %195 = and i32 %194, %1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %207, label %197

197:                                              ; preds = %184
  %198 = bitcast i8* %191 to %class.GrShaderVar*
  %199 = load %class.GrGLSLProgramBuilder*, %class.GrGLSLProgramBuilder** %83, align 8
  %200 = bitcast %class.GrGLSLProgramBuilder* %199 to %class.GrCaps* (%class.GrGLSLProgramBuilder*)***
  %201 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)**, %class.GrCaps* (%class.GrGLSLProgramBuilder*)*** %200, align 16
  %202 = getelementptr inbounds %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %201, i64 2
  %203 = load %class.GrCaps* (%class.GrGLSLProgramBuilder*)*, %class.GrCaps* (%class.GrGLSLProgramBuilder*)** %202, align 8
  %204 = call %class.GrCaps* %203(%class.GrGLSLProgramBuilder* %199) #12
  %205 = getelementptr inbounds %class.GrCaps, %class.GrCaps* %204, i64 0, i32 2, i32 0
  %206 = load %class.GrShaderCaps*, %class.GrShaderCaps** %205, align 8
  call void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar* %198, %class.GrShaderCaps* %206, %class.SkString* nonnull %4) #12
  call void @_ZN8SkString6insertEmPKc(%class.SkString* nonnull %4, i64 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %207

207:                                              ; preds = %184, %197
  %208 = add i32 %187, 72
  %209 = icmp sgt i32 %208, %188
  br i1 %209, label %210, label %230

210:                                              ; preds = %207
  %211 = inttoptr i64 %186 to %"class.GrBlockAllocator::Block"*
  %212 = icmp eq i64 %186, 0
  br i1 %212, label %179, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %211, i64 0, i32 0
  %215 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %214, align 8
  %216 = ptrtoint %"class.GrBlockAllocator::Block"* %215 to i64
  %217 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %211, i64 0, i32 4
  %218 = load i32, i32* %217, align 8
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %230

220:                                              ; preds = %213, %223
  %221 = phi %"class.GrBlockAllocator::Block"* [ %229, %223 ], [ %215, %213 ]
  %222 = icmp eq %"class.GrBlockAllocator::Block"* %221, null
  br i1 %222, label %179, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.GrBlockAllocator::Block"* %221 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %221, i64 0, i32 4
  %227 = load i32, i32* %226, align 8
  %228 = icmp eq i32 %227, 0
  %229 = inttoptr i64 %225 to %"class.GrBlockAllocator::Block"*
  br i1 %228, label %220, label %230

230:                                              ; preds = %223, %213, %207
  %231 = phi i32 [ %188, %207 ], [ %218, %213 ], [ %227, %223 ]
  %232 = phi i32 [ %208, %207 ], [ 32, %213 ], [ 32, %223 ]
  %233 = phi i64 [ %186, %207 ], [ %216, %213 ], [ %225, %223 ]
  %234 = phi %"class.GrBlockAllocator::Block"* [ %185, %207 ], [ %211, %213 ], [ %221, %223 ]
  %235 = icmp eq %"class.GrBlockAllocator::Block"* %234, null
  br i1 %235, label %179, label %184

236:                                              ; preds = %179
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.5, i64 0, i64 0), i32 0, i32 0) #12
  %237 = load %"struct.SkString::Rec"*, %"struct.SkString::Rec"** %57, align 8
  %238 = getelementptr inbounds %"struct.SkString::Rec", %"struct.SkString::Rec"* %237, i64 0, i32 2
  call void (%class.SkString*, i8*, ...) @_ZN8SkString7appendfEPKcz(%class.SkString* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0), i8* %238) #12
  br label %239

239:                                              ; preds = %236, %179
  call void @_ZN8SkStringD1Ev(%class.SkString* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  ret void
}

declare void @_ZNK11GrShaderVar10appendDeclEPK12GrShaderCapsP8SkString(%class.GrShaderVar*, %class.GrShaderCaps*, %class.SkString*) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK21GrSPIRVUniformHandler17getRTHeightOffsetEv(%class.GrSPIRVUniformHandler* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 16
  %4 = and i32 %3, 3
  %5 = icmp eq i32 %4, 0
  %6 = sub nuw nsw i32 4, %4
  %7 = select i1 %5, i32 0, i32 %6
  %8 = add i32 %7, %3
  ret i32 %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrSPIRVUniformHandlerD2Ev(%class.GrSPIRVUniformHandler*) unnamed_addr #8 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [17 x i8*] }, { [17 x i8*] }* @_ZTV21GrSPIRVUniformHandler, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 16
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5
  %4 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 5, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %class.SkString*, %class.SkString** %9, align 8
  %17 = getelementptr inbounds %class.SkString, %class.SkString* %16, i64 %15
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #12
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #12
  br label %26

26:                                               ; preds = %10, %23
  %27 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 4
  %33 = bitcast %class.SkTArray.112* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #12
  br label %35

35:                                               ; preds = %26, %31
  %36 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3
  tail call void @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE5resetEv(%class.GrTBlockList.109* %36) #12
  %37 = bitcast %class.GrTBlockList.109* %36 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %37) #12
  %38 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 3, i32 0, i32 0, i64 16
  %39 = bitcast i8* %38 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %39) #12
  %40 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2
  tail call void @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE5resetEv(%class.GrTBlockList.109* %40) #12
  %41 = bitcast %class.GrTBlockList.109* %40 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #12
  %42 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 2, i32 0, i32 0, i64 16
  %43 = bitcast i8* %42 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %43) #12
  %44 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1
  tail call void @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE5resetEv(%class.GrTBlockList.109* %44) #12
  %45 = bitcast %class.GrTBlockList.109* %44 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %45) #12
  %46 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %47 = bitcast i8* %46 to %"class.GrBlockAllocator::Block"*
  tail call void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"* %47) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrSPIRVUniformHandlerD0Ev(%class.GrSPIRVUniformHandler*) unnamed_addr #8 comdat align 2 {
  tail call void @_ZN21GrSPIRVUniformHandlerD2Ev(%class.GrSPIRVUniformHandler* %0) #12
  %2 = bitcast %class.GrSPIRVUniformHandler* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK21GrSPIRVUniformHandler11numUniformsEv(%class.GrSPIRVUniformHandler*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 44
  %3 = bitcast i8* %2 to i32*
  %4 = load i32, i32* %3, align 4
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZN21GrSPIRVUniformHandler7uniformEi(%class.GrSPIRVUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(64) %"struct.GrGLSLUniformHandler::UniformInfo"* @_ZNK21GrSPIRVUniformHandler7uniformEi(%class.GrSPIRVUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSPIRVUniformHandler, %class.GrSPIRVUniformHandler* %0, i64 0, i32 1, i32 0, i32 0, i64 16
  %4 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"**
  %5 = bitcast i8* %3 to %"class.GrBlockAllocator::Block"*
  br label %6

6:                                                ; preds = %27, %2
  %7 = phi i32 [ %28, %27 ], [ %1, %2 ]
  %8 = phi %"class.GrBlockAllocator::Block"** [ %30, %27 ], [ %4, %2 ]
  %9 = phi %"class.GrBlockAllocator::Block"* [ %11, %27 ], [ %5, %2 ]
  %10 = phi i8* [ %12, %27 ], [ %3, %2 ]
  %11 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %8, align 8
  %12 = bitcast %"class.GrBlockAllocator::Block"* %11 to i8*
  %13 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %9, i64 0, i32 4
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %27, label %16

16:                                               ; preds = %6
  %17 = add i32 %14, 72
  %18 = mul i32 %7, 72
  %19 = add i32 %18, 32
  %20 = icmp slt i32 %19, %17
  br i1 %20, label %32, label %21

21:                                               ; preds = %16
  %22 = add i32 %14, 40
  %23 = sext i32 %22 to i64
  %24 = udiv i64 %23, 72
  %25 = trunc i64 %24 to i32
  %26 = sub i32 %7, %25
  br label %27

27:                                               ; preds = %21, %6
  %28 = phi i32 [ %26, %21 ], [ %7, %6 ]
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %11, null
  %30 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %11, i64 0, i32 0
  br i1 %29, label %31, label %6

31:                                               ; preds = %27
  tail call void @llvm.trap() #12
  unreachable

32:                                               ; preds = %16
  %33 = sext i32 %19 to i64
  %34 = getelementptr inbounds i8, i8* %10, i64 %33
  %35 = bitcast i8* %34 to %"struct.GrGLSLUniformHandler::UniformInfo"*
  ret %"struct.GrGLSLUniformHandler::UniformInfo"* %35
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20GrGLSLUniformHandler20inputSamplerVariableE16GrResourceHandleINS_17SamplerHandleKindEE(%class.GrGLSLUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  ret i8* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK20GrGLSLUniformHandler19inputSamplerSwizzleE16GrResourceHandleINS_17SamplerHandleKindEE(%class.GrSwizzle* noalias sret, %class.GrGLSLUniformHandler*, i32) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN20GrGLSLUniformHandler15addInputSamplerERK9GrSwizzlePKc(%class.GrGLSLUniformHandler*, %class.GrSwizzle* dereferenceable(2), i8*) unnamed_addr #0 comdat align 2 {
  ret i32 -1
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #10

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #3

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN12GrTBlockListIN21GrSPIRVUniformHandler16SPIRVUniformInfoELi1EE5resetEv(%class.GrTBlockList.109*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GrTBlockList.109* %0 to %"class.GrBlockAllocator::Block"**
  %3 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %2, align 16, !noalias !14
  %4 = icmp eq %"class.GrBlockAllocator::Block"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 1
  %7 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %6, align 8, !noalias !14
  %8 = icmp eq %"class.GrBlockAllocator::Block"* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %7, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !14
  %12 = icmp slt i32 %11, 0
  %13 = select i1 %12, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %7
  br label %14

14:                                               ; preds = %9, %5
  %15 = phi %"class.GrBlockAllocator::Block"* [ %13, %9 ], [ null, %5 ]
  %16 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8, !noalias !14
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %35, %14
  %20 = phi %"class.GrBlockAllocator::Block"* [ %3, %14 ], [ %24, %35 ]
  %21 = phi %"class.GrBlockAllocator::Block"* [ %15, %14 ], [ %36, %35 ]
  %22 = phi i32 [ %17, %14 ], [ %38, %35 ]
  br label %42

23:                                               ; preds = %14, %35
  %24 = phi %"class.GrBlockAllocator::Block"* [ %36, %35 ], [ %15, %14 ]
  %25 = icmp eq %"class.GrBlockAllocator::Block"* %24, null
  br i1 %25, label %40, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 1
  %28 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %27, align 8, !noalias !14
  %29 = icmp eq %"class.GrBlockAllocator::Block"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %28, i64 0, i32 3
  %32 = load i32, i32* %31, align 4, !noalias !14
  %33 = icmp slt i32 %32, 0
  %34 = select i1 %33, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %28
  br label %35

35:                                               ; preds = %30, %26
  %36 = phi %"class.GrBlockAllocator::Block"* [ null, %26 ], [ %34, %30 ]
  %37 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %24, i64 0, i32 4
  %38 = load i32, i32* %37, align 8, !noalias !14
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %23, label %19

40:                                               ; preds = %23, %61, %81, %1
  %41 = bitcast %class.GrTBlockList.109* %0 to %class.GrBlockAllocator*
  tail call void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator* %41) #12
  ret void

42:                                               ; preds = %77, %19
  %43 = phi %"class.GrBlockAllocator::Block"* [ %20, %19 ], [ %78, %77 ]
  %44 = phi %"class.GrBlockAllocator::Block"* [ %21, %19 ], [ %79, %77 ]
  %45 = phi i32 [ %22, %19 ], [ %80, %77 ]
  %46 = bitcast %"class.GrBlockAllocator::Block"* %43 to i8*
  br label %47

47:                                               ; preds = %42, %47
  %48 = phi i32 [ %59, %47 ], [ %45, %42 ]
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = getelementptr inbounds i8, i8* %50, i64 56
  %52 = bitcast i8* %51 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %52) #12
  %53 = getelementptr inbounds i8, i8* %50, i64 32
  %54 = bitcast i8* %53 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %54) #12
  %55 = getelementptr inbounds i8, i8* %50, i64 24
  %56 = bitcast i8* %55 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %56) #12
  %57 = getelementptr inbounds i8, i8* %50, i64 16
  %58 = bitcast i8* %57 to %class.SkString*
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #12
  %59 = add i32 %48, -72
  %60 = icmp slt i32 %59, 32
  br i1 %60, label %61, label %47

61:                                               ; preds = %47
  %62 = icmp eq %"class.GrBlockAllocator::Block"* %44, null
  br i1 %62, label %40, label %63

63:                                               ; preds = %61
  %64 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 1
  %65 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %64, align 8
  %66 = icmp eq %"class.GrBlockAllocator::Block"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %65, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = icmp slt i32 %69, 0
  %71 = select i1 %70, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %65
  br label %72

72:                                               ; preds = %67, %63
  %73 = phi %"class.GrBlockAllocator::Block"* [ null, %63 ], [ %71, %67 ]
  %74 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %44, i64 0, i32 4
  %75 = load i32, i32* %74, align 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %93, %72
  %78 = phi %"class.GrBlockAllocator::Block"* [ %44, %72 ], [ %82, %93 ]
  %79 = phi %"class.GrBlockAllocator::Block"* [ %73, %72 ], [ %94, %93 ]
  %80 = phi i32 [ %75, %72 ], [ %96, %93 ]
  br label %42

81:                                               ; preds = %72, %93
  %82 = phi %"class.GrBlockAllocator::Block"* [ %94, %93 ], [ %73, %72 ]
  %83 = icmp eq %"class.GrBlockAllocator::Block"* %82, null
  br i1 %83, label %40, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 1
  %86 = load %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"** %85, align 8
  %87 = icmp eq %"class.GrBlockAllocator::Block"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %86, i64 0, i32 3
  %90 = load i32, i32* %89, align 4
  %91 = icmp slt i32 %90, 0
  %92 = select i1 %91, %"class.GrBlockAllocator::Block"* null, %"class.GrBlockAllocator::Block"* %86
  br label %93

93:                                               ; preds = %88, %84
  %94 = phi %"class.GrBlockAllocator::Block"* [ null, %84 ], [ %92, %88 ]
  %95 = getelementptr inbounds %"class.GrBlockAllocator::Block", %"class.GrBlockAllocator::Block"* %82, i64 0, i32 4
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %81, label %77
}

declare void @_ZN16GrBlockAllocator5resetEv(%class.GrBlockAllocator*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN16GrBlockAllocator5BlockD1Ev(%"class.GrBlockAllocator::Block"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9GrSwizzleC2EPKc(%class.GrSwizzle*, i8*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %0, i64 0, i32 0
  %4 = load i8, i8* %1, align 1
  %5 = sext i8 %4 to i32
  switch i32 %5, label %11 [
    i32 114, label %12
    i32 103, label %6
    i32 98, label %7
    i32 97, label %8
    i32 48, label %9
    i32 49, label %10
  ]

6:                                                ; preds = %2
  br label %12

7:                                                ; preds = %2
  br label %12

8:                                                ; preds = %2
  br label %12

9:                                                ; preds = %2
  br label %12

10:                                               ; preds = %2
  br label %12

11:                                               ; preds = %2
  tail call void @llvm.trap() #12
  unreachable

12:                                               ; preds = %2, %6, %7, %8, %9, %10
  %13 = phi i16 [ 5, %10 ], [ 4, %9 ], [ 3, %8 ], [ 2, %7 ], [ 1, %6 ], [ 0, %2 ]
  %14 = getelementptr inbounds i8, i8* %1, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = sext i8 %15 to i32
  switch i32 %16, label %22 [
    i32 114, label %23
    i32 103, label %17
    i32 98, label %18
    i32 97, label %19
    i32 48, label %20
    i32 49, label %21
  ]

17:                                               ; preds = %12
  br label %23

18:                                               ; preds = %12
  br label %23

19:                                               ; preds = %12
  br label %23

20:                                               ; preds = %12
  br label %23

21:                                               ; preds = %12
  br label %23

22:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %12, %17, %18, %19, %20, %21
  %24 = phi i16 [ 80, %21 ], [ 64, %20 ], [ 48, %19 ], [ 32, %18 ], [ 16, %17 ], [ 0, %12 ]
  %25 = or i16 %24, %13
  %26 = getelementptr inbounds i8, i8* %1, i64 2
  %27 = load i8, i8* %26, align 1
  %28 = sext i8 %27 to i32
  switch i32 %28, label %34 [
    i32 114, label %35
    i32 103, label %29
    i32 98, label %30
    i32 97, label %31
    i32 48, label %32
    i32 49, label %33
  ]

29:                                               ; preds = %23
  br label %35

30:                                               ; preds = %23
  br label %35

31:                                               ; preds = %23
  br label %35

32:                                               ; preds = %23
  br label %35

33:                                               ; preds = %23
  br label %35

34:                                               ; preds = %23
  tail call void @llvm.trap() #12
  unreachable

35:                                               ; preds = %23, %29, %30, %31, %32, %33
  %36 = phi i16 [ 1280, %33 ], [ 1024, %32 ], [ 768, %31 ], [ 512, %30 ], [ 256, %29 ], [ 0, %23 ]
  %37 = or i16 %25, %36
  %38 = getelementptr inbounds i8, i8* %1, i64 3
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  switch i32 %40, label %46 [
    i32 114, label %47
    i32 103, label %41
    i32 98, label %42
    i32 97, label %43
    i32 48, label %44
    i32 49, label %45
  ]

41:                                               ; preds = %35
  br label %47

42:                                               ; preds = %35
  br label %47

43:                                               ; preds = %35
  br label %47

44:                                               ; preds = %35
  br label %47

45:                                               ; preds = %35
  br label %47

46:                                               ; preds = %35
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %35, %41, %42, %43, %44, %45
  %48 = phi i16 [ 20480, %45 ], [ 16384, %44 ], [ 12288, %43 ], [ 8192, %42 ], [ 4096, %41 ], [ 0, %35 ]
  %49 = or i16 %37, %48
  store i16 %49, i16* %3, align 2
  ret void
}

declare i8* @_Z15sk_malloc_throwmm(i64, i64) local_unnamed_addr #3

declare void @_ZN16GrBlockAllocatorC1ENS_12GrowthPolicyEmm(%class.GrBlockAllocator*, i32, i64, i64) unnamed_addr #3

declare void @_ZN16GrBlockAllocator8addBlockEii(%class.GrBlockAllocator*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI9GrSwizzleLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray.112*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray.112, %class.SkTArray.112* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %75

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %75, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 2) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray.112, %class.SkTArray.112* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %58, %50 ]
  %52 = shl nuw i64 %51, 1
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = load %class.GrSwizzle*, %class.GrSwizzle** %49, align 8
  %55 = bitcast i8* %53 to i16*
  %56 = getelementptr inbounds %class.GrSwizzle, %class.GrSwizzle* %54, i64 %51, i32 0
  %57 = load i16, i16* %56, align 2
  store i16 %57, i16* %55, align 2
  %58 = add nuw nsw i64 %51, 1
  %59 = load i64, i64* %4, align 8
  %60 = lshr i64 %59, 1
  %61 = and i64 %60, 2147483647
  %62 = icmp ult i64 %58, %61
  br i1 %62, label %50, label %63

63:                                               ; preds = %50, %35
  %64 = phi i64 [ %45, %35 ], [ %59, %50 ]
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  %67 = bitcast %class.SkTArray.112* %0 to i8**
  br i1 %66, label %71, label %68

68:                                               ; preds = %63
  %69 = load i8*, i8** %67, align 8
  tail call void @_Z7sk_freePv(i8* %69) #12
  %70 = load i64, i64* %4, align 8
  br label %71

71:                                               ; preds = %63, %68
  %72 = phi i64 [ %70, %68 ], [ %64, %63 ]
  store i8* %44, i8** %67, align 8
  %73 = and i64 %72, -4294967298
  %74 = or i64 %73, 1
  store i64 %74, i64* %4, align 8
  br label %75

75:                                               ; preds = %71, %32, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkTArrayI8SkStringLb0EE12checkReallocEiNS1_11ReallocTypeE(%class.SkTArray*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 1
  %7 = trunc i64 %6 to i32
  %8 = and i32 %7, 2147483647
  %9 = add nsw i32 %8, %1
  %10 = sext i32 %9 to i64
  %11 = lshr i64 %5, 33
  %12 = icmp slt i64 %11, %10
  %13 = mul nsw i64 %10, 3
  %14 = icmp sle i64 %11, %13
  %15 = and i64 %5, 1
  %16 = icmp eq i64 %15, 0
  %17 = or i1 %16, %14
  br i1 %17, label %21, label %18

18:                                               ; preds = %3
  %19 = and i64 %5, 4294967296
  %20 = icmp eq i64 %19, 0
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i1 [ false, %3 ], [ %20, %18 ]
  %23 = or i1 %12, %22
  br i1 %23, label %24, label %76

24:                                               ; preds = %21
  %25 = icmp eq i32 %2, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %24
  %27 = add nsw i64 %10, 1
  %28 = ashr i64 %27, 1
  %29 = add nsw i64 %10, 7
  %30 = add nsw i64 %29, %28
  %31 = and i64 %30, -8
  br label %32

32:                                               ; preds = %24, %26
  %33 = phi i64 [ %31, %26 ], [ %10, %24 ]
  %34 = icmp eq i64 %33, %11
  br i1 %34, label %76, label %35

35:                                               ; preds = %32
  %36 = icmp slt i64 %33, 2147483647
  %37 = select i1 %36, i64 %33, i64 2147483647
  %38 = icmp sgt i64 %37, -2147483647
  %39 = select i1 %38, i64 %37, i64 -2147483647
  %40 = shl i64 %39, 33
  %41 = and i64 %5, 8589934591
  %42 = or i64 %40, %41
  store i64 %42, i64* %4, align 8
  %43 = and i64 %39, 2147483647
  %44 = tail call i8* @_Z15sk_malloc_throwmm(i64 %43, i64 8) #12
  %45 = load i64, i64* %4, align 8
  %46 = and i64 %45, 4294967294
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %64, label %48

48:                                               ; preds = %35
  %49 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %0, i64 0, i32 0
  br label %50

50:                                               ; preds = %50, %48
  %51 = phi i64 [ 0, %48 ], [ %59, %50 ]
  %52 = shl nuw nsw i64 %51, 3
  %53 = getelementptr inbounds i8, i8* %44, i64 %52
  %54 = bitcast i8* %53 to %class.SkString*
  %55 = load %class.SkString*, %class.SkString** %49, align 8
  %56 = getelementptr inbounds %class.SkString, %class.SkString* %55, i64 %51
  tail call void @_ZN8SkStringC1EOS_(%class.SkString* %54, %class.SkString* dereferenceable(8) %56) #12
  %57 = load %class.SkString*, %class.SkString** %49, align 8
  %58 = getelementptr inbounds %class.SkString, %class.SkString* %57, i64 %51
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %58) #12
  %59 = add nuw nsw i64 %51, 1
  %60 = load i64, i64* %4, align 8
  %61 = lshr i64 %60, 1
  %62 = and i64 %61, 2147483647
  %63 = icmp ult i64 %59, %62
  br i1 %63, label %50, label %64

64:                                               ; preds = %50, %35
  %65 = phi i64 [ %45, %35 ], [ %60, %50 ]
  %66 = and i64 %65, 1
  %67 = icmp eq i64 %66, 0
  %68 = bitcast %class.SkTArray* %0 to i8**
  br i1 %67, label %72, label %69

69:                                               ; preds = %64
  %70 = load i8*, i8** %68, align 8
  tail call void @_Z7sk_freePv(i8* %70) #12
  %71 = load i64, i64* %4, align 8
  br label %72

72:                                               ; preds = %64, %69
  %73 = phi i64 [ %71, %69 ], [ %65, %64 ]
  store i8* %44, i8** %68, align 8
  %74 = and i64 %73, -4294967298
  %75 = or i64 %74, 1
  store i64 %75, i64* %4, align 8
  br label %76

76:                                               ; preds = %72, %32, %21
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { nounwind readonly }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm: argument 0"}
!4 = distinct !{!4, !"_ZN16GrBlockAllocator8allocateILm8ELm0EEENS_9ByteRangeEm"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!7 = distinct !{!7, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv: argument 0"}
!13 = distinct !{!13, !"_ZNK18BlockIndexIteratorIRKN21GrSPIRVUniformHandler16SPIRVUniformInfoELb1ELb1EXadL_ZN12GrTBlockListIS1_Li1EE5FirstEPKN16GrBlockAllocator5BlockEEEXadL_ZNS5_4LastES9_EEXadL_ZNS5_9IncrementES9_iEEXadL_ZNS5_7GetItemES9_iEEE5beginEv"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNK18BlockIndexIteratorIRN21GrSPIRVUniformHandler16SPIRVUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv: argument 0"}
!16 = distinct !{!16, !"_ZNK18BlockIndexIteratorIRN21GrSPIRVUniformHandler16SPIRVUniformInfoELb0ELb0EXadL_ZN12GrTBlockListIS1_Li1EE4LastEPKN16GrBlockAllocator5BlockEEEXadL_ZNS4_5FirstES8_EEXadL_ZNS4_9DecrementES8_iEEXadL_ZNS4_7GetItemEPS6_iEEE5beginEv"}
