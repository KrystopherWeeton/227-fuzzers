; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/add_n.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/add_n.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, {}*, {}*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"class.tflite::VectorOfTensors" = type { %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { float**, float**, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { float** }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"class.std::__1::__compressed_pair.4" }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.tflite::RuntimeShape"* }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"**, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.tflite::RuntimeShape"** }
%"class.tflite::VectorOfTensors.24" = type { %"class.std::__1::vector.25", %"class.std::__1::vector.2", %"class.std::__1::vector.9" }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { i32**, i32**, %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { i32** }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN6tflite3ops7builtin5add_n8EvalAddNIfEEvP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin5add_n8EvalAddNIiEEvP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm = comdat any

$_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray = comdat any

@.str = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/add_n.cc\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"num_inputs >= 2\00", align 1
@.str.5 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.8 = private unnamed_addr constant [30 x i8] c"HaveSameShapes(input1, input)\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"input1->type\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.12 = private unnamed_addr constant [46 x i8] c"AddN only supports FLOAT32|INT32 now, got %s.\00", align 1
@_ZZN6tflite3ops7builtin14Register_ADD_NEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5add_n7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin5add_n4EvalEP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5add_n7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %6, 1
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %10 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %9, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %10(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 33, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %84

11:                                               ; preds = %2
  %12 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %11
  %18 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %19 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %18, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %19(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 34, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %15, i32 1) #9
  br label %84

20:                                               ; preds = %11
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %20, %24
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %20 ]
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  %41 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 0
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %45 = zext i32 %6 to i64
  br label %48

46:                                               ; preds = %64
  %47 = icmp eq i64 %69, %45
  br i1 %47, label %77, label %48

48:                                               ; preds = %46, %39
  %49 = phi i64 [ 1, %39 ], [ %69, %46 ]
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 %49
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %48
  %55 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %44, align 8
  %56 = sext i32 %52 to i64
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %55, i64 %56
  br label %58

58:                                               ; preds = %48, %54
  %59 = phi %struct.TfLiteTensor* [ %57, %54 ], [ null, %48 ]
  %60 = tail call zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor* %30, %struct.TfLiteTensor* %59) #9
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %63 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %62, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %63(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 43, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %84

64:                                               ; preds = %58
  %65 = load i32, i32* %41, align 8
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %65, %67
  %69 = add nuw nsw i64 %49, 1
  br i1 %68, label %46, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %59, i64 0, i32 0
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  %74 = tail call i8* @TfLiteTypeGetName(i32 %65) #9
  %75 = load i32, i32* %71, align 8
  %76 = tail call i8* @TfLiteTypeGetName(i32 %75) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 44, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i8* %74, i8* %76) #9
  br label %84

77:                                               ; preds = %46
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %79 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %78, align 8
  %80 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %79) #9
  %81 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %82 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %81, align 8
  %83 = tail call i32 %82(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %40, %struct.TfLiteIntArray* %80) #9
  br label %84

84:                                               ; preds = %61, %70, %77, %17, %8
  %85 = phi i32 [ 1, %17 ], [ 1, %8 ], [ %83, %77 ], [ 1, %70 ], [ 1, %61 ]
  ret i32 %85
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN6tflite14HaveSameShapesEPK12TfLiteTensorS2_(%struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #2

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin5add_n4EvalEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %19 [
    i32 1, label %17
    i32 2, label %18
  ]

17:                                               ; preds = %13
  tail call void @_ZN6tflite3ops7builtin5add_n8EvalAddNIfEEvP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  br label %23

18:                                               ; preds = %13
  tail call void @_ZN6tflite3ops7builtin5add_n8EvalAddNIiEEvP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext* %0, %struct.TfLiteNode* %1)
  br label %23

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %21 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %20, align 8
  %22 = tail call i8* @TfLiteTypeGetName(i32 %16) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %21(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.12, i64 0, i64 0), i8* %22) #9
  br label %23

23:                                               ; preds = %17, %18, %19
  %24 = phi i32 [ 1, %19 ], [ 0, %18 ], [ 0, %17 ]
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin5add_n8EvalAddNIfEEvP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.tflite::VectorOfTensors", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = bitcast %"class.tflite::VectorOfTensors"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 72, i1 false)
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  call void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %7)
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %15 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 %16
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi %struct.TfLiteTensor* [ %17, %13 ], [ null, %2 ]
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  br label %35

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  %33 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #9
  %34 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %26, %28
  %36 = phi i8* [ %27, %26 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !2
  br label %63

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !2
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !2
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !2
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = call i8* @_Znam(i64 %48) #10, !noalias !2
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !2
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #9
  br label %63

63:                                               ; preds = %35, %58
  %64 = phi i32 [ 0, %35 ], [ %42, %58 ]
  %65 = phi i8* [ %36, %35 ], [ %33, %58 ]
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = load float**, float*** %67, align 8
  %69 = icmp eq %struct.TfLiteTensor* %19, null
  br i1 %69, label %74, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 0, i32 1
  %72 = bitcast %union.TfLitePtrUnion* %71 to float**
  %73 = load float*, float** %72, align 8
  br label %74

74:                                               ; preds = %63, %70
  %75 = phi float* [ %73, %70 ], [ null, %63 ]
  %76 = icmp sgt i32 %64, 5
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %76, label %78, label %81

78:                                               ; preds = %74
  %79 = getelementptr inbounds %union.anon, %union.anon* %77, i64 0, i32 0
  %80 = load i32*, i32** %79, align 8
  br label %84

81:                                               ; preds = %74
  %82 = bitcast %union.anon* %77 to i32*
  %83 = icmp sgt i32 %64, 0
  br i1 %83, label %84, label %188

84:                                               ; preds = %81, %78
  %85 = phi i32* [ %80, %78 ], [ %82, %81 ]
  %86 = zext i32 %64 to i64
  %87 = icmp ult i32 %64, 8
  br i1 %87, label %173, label %88

88:                                               ; preds = %84
  %89 = and i64 %86, 4294967288
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp ult i64 %90, 24
  br i1 %94, label %140, label %95

95:                                               ; preds = %88
  %96 = sub nsw i64 %92, %93
  br label %97

97:                                               ; preds = %97, %95
  %98 = phi i64 [ 0, %95 ], [ %137, %97 ]
  %99 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %95 ], [ %135, %97 ]
  %100 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %95 ], [ %136, %97 ]
  %101 = phi i64 [ %96, %95 ], [ %138, %97 ]
  %102 = getelementptr inbounds i32, i32* %85, i64 %98
  %103 = bitcast i32* %102 to <4 x i32>*
  %104 = load <4 x i32>, <4 x i32>* %103, align 4
  %105 = getelementptr inbounds i32, i32* %102, i64 4
  %106 = bitcast i32* %105 to <4 x i32>*
  %107 = load <4 x i32>, <4 x i32>* %106, align 4
  %108 = mul nsw <4 x i32> %104, %99
  %109 = mul nsw <4 x i32> %107, %100
  %110 = or i64 %98, 8
  %111 = getelementptr inbounds i32, i32* %85, i64 %110
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4
  %114 = getelementptr inbounds i32, i32* %111, i64 4
  %115 = bitcast i32* %114 to <4 x i32>*
  %116 = load <4 x i32>, <4 x i32>* %115, align 4
  %117 = mul nsw <4 x i32> %113, %108
  %118 = mul nsw <4 x i32> %116, %109
  %119 = or i64 %98, 16
  %120 = getelementptr inbounds i32, i32* %85, i64 %119
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = getelementptr inbounds i32, i32* %120, i64 4
  %124 = bitcast i32* %123 to <4 x i32>*
  %125 = load <4 x i32>, <4 x i32>* %124, align 4
  %126 = mul nsw <4 x i32> %122, %117
  %127 = mul nsw <4 x i32> %125, %118
  %128 = or i64 %98, 24
  %129 = getelementptr inbounds i32, i32* %85, i64 %128
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = getelementptr inbounds i32, i32* %129, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4
  %135 = mul nsw <4 x i32> %131, %126
  %136 = mul nsw <4 x i32> %134, %127
  %137 = add i64 %98, 32
  %138 = add i64 %101, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %97, !llvm.loop !5

140:                                              ; preds = %97, %88
  %141 = phi <4 x i32> [ undef, %88 ], [ %135, %97 ]
  %142 = phi <4 x i32> [ undef, %88 ], [ %136, %97 ]
  %143 = phi i64 [ 0, %88 ], [ %137, %97 ]
  %144 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %88 ], [ %135, %97 ]
  %145 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %88 ], [ %136, %97 ]
  %146 = icmp eq i64 %93, 0
  br i1 %146, label %163, label %147

147:                                              ; preds = %140, %147
  %148 = phi i64 [ %160, %147 ], [ %143, %140 ]
  %149 = phi <4 x i32> [ %158, %147 ], [ %144, %140 ]
  %150 = phi <4 x i32> [ %159, %147 ], [ %145, %140 ]
  %151 = phi i64 [ %161, %147 ], [ %93, %140 ]
  %152 = getelementptr inbounds i32, i32* %85, i64 %148
  %153 = bitcast i32* %152 to <4 x i32>*
  %154 = load <4 x i32>, <4 x i32>* %153, align 4
  %155 = getelementptr inbounds i32, i32* %152, i64 4
  %156 = bitcast i32* %155 to <4 x i32>*
  %157 = load <4 x i32>, <4 x i32>* %156, align 4
  %158 = mul nsw <4 x i32> %154, %149
  %159 = mul nsw <4 x i32> %157, %150
  %160 = add i64 %148, 8
  %161 = add i64 %151, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %147, !llvm.loop !7

163:                                              ; preds = %147, %140
  %164 = phi <4 x i32> [ %141, %140 ], [ %158, %147 ]
  %165 = phi <4 x i32> [ %142, %140 ], [ %159, %147 ]
  %166 = mul <4 x i32> %165, %164
  %167 = shufflevector <4 x i32> %166, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %168 = mul <4 x i32> %166, %167
  %169 = shufflevector <4 x i32> %168, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %170 = mul <4 x i32> %168, %169
  %171 = extractelement <4 x i32> %170, i32 0
  %172 = icmp eq i64 %89, %86
  br i1 %172, label %184, label %173

173:                                              ; preds = %163, %84
  %174 = phi i64 [ 0, %84 ], [ %89, %163 ]
  %175 = phi i32 [ 1, %84 ], [ %171, %163 ]
  br label %176

176:                                              ; preds = %173, %176
  %177 = phi i64 [ %182, %176 ], [ %174, %173 ]
  %178 = phi i32 [ %181, %176 ], [ %175, %173 ]
  %179 = getelementptr inbounds i32, i32* %85, i64 %177
  %180 = load i32, i32* %179, align 4
  %181 = mul nsw i32 %180, %178
  %182 = add nuw nsw i64 %177, 1
  %183 = icmp eq i64 %182, %86
  br i1 %183, label %184, label %176, !llvm.loop !9

184:                                              ; preds = %176, %163
  %185 = phi i32 [ %171, %163 ], [ %181, %176 ]
  %186 = sext i32 %185 to i64
  %187 = icmp eq i32 %185, 0
  br i1 %187, label %250, label %188

188:                                              ; preds = %184, %81
  %189 = phi i64 [ %186, %184 ], [ 1, %81 ]
  %190 = icmp eq i32 %22, 0
  %191 = add nsw i64 %66, -1
  %192 = and i64 %66, 3
  %193 = icmp ult i64 %191, 3
  %194 = sub nsw i64 %66, %192
  %195 = icmp eq i64 %192, 0
  br label %196

196:                                              ; preds = %215, %188
  %197 = phi i64 [ 0, %188 ], [ %218, %215 ]
  br i1 %190, label %215, label %198

198:                                              ; preds = %196
  br i1 %193, label %199, label %220

199:                                              ; preds = %220, %198
  %200 = phi float [ undef, %198 ], [ %246, %220 ]
  %201 = phi i64 [ 0, %198 ], [ %247, %220 ]
  %202 = phi float [ 0.000000e+00, %198 ], [ %246, %220 ]
  br i1 %195, label %215, label %203

203:                                              ; preds = %199, %203
  %204 = phi i64 [ %212, %203 ], [ %201, %199 ]
  %205 = phi float [ %211, %203 ], [ %202, %199 ]
  %206 = phi i64 [ %213, %203 ], [ %192, %199 ]
  %207 = getelementptr inbounds float*, float** %68, i64 %204
  %208 = load float*, float** %207, align 8
  %209 = getelementptr inbounds float, float* %208, i64 %197
  %210 = load float, float* %209, align 4
  %211 = fadd float %205, %210
  %212 = add nuw i64 %204, 1
  %213 = add i64 %206, -1
  %214 = icmp eq i64 %213, 0
  br i1 %214, label %215, label %203, !llvm.loop !11

215:                                              ; preds = %199, %203, %196
  %216 = phi float [ 0.000000e+00, %196 ], [ %200, %199 ], [ %211, %203 ]
  %217 = getelementptr inbounds float, float* %75, i64 %197
  store float %216, float* %217, align 4
  %218 = add nuw i64 %197, 1
  %219 = icmp ult i64 %218, %189
  br i1 %219, label %196, label %250

220:                                              ; preds = %198, %220
  %221 = phi i64 [ %247, %220 ], [ 0, %198 ]
  %222 = phi float [ %246, %220 ], [ 0.000000e+00, %198 ]
  %223 = phi i64 [ %248, %220 ], [ %194, %198 ]
  %224 = getelementptr inbounds float*, float** %68, i64 %221
  %225 = load float*, float** %224, align 8
  %226 = getelementptr inbounds float, float* %225, i64 %197
  %227 = load float, float* %226, align 4
  %228 = fadd float %222, %227
  %229 = or i64 %221, 1
  %230 = getelementptr inbounds float*, float** %68, i64 %229
  %231 = load float*, float** %230, align 8
  %232 = getelementptr inbounds float, float* %231, i64 %197
  %233 = load float, float* %232, align 4
  %234 = fadd float %228, %233
  %235 = or i64 %221, 2
  %236 = getelementptr inbounds float*, float** %68, i64 %235
  %237 = load float*, float** %236, align 8
  %238 = getelementptr inbounds float, float* %237, i64 %197
  %239 = load float, float* %238, align 4
  %240 = fadd float %234, %239
  %241 = or i64 %221, 3
  %242 = getelementptr inbounds float*, float** %68, i64 %241
  %243 = load float*, float** %242, align 8
  %244 = getelementptr inbounds float, float* %243, i64 %197
  %245 = load float, float* %244, align 4
  %246 = fadd float %240, %245
  %247 = add nuw i64 %221, 4
  %248 = add i64 %223, -4
  %249 = icmp eq i64 %248, 0
  br i1 %249, label %199, label %220

250:                                              ; preds = %215, %184
  br i1 %76, label %251, label %257

251:                                              ; preds = %250
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = icmp eq i32* %253, null
  br i1 %254, label %257, label %255

255:                                              ; preds = %251
  %256 = bitcast i32* %253 to i8*
  call void @_ZdaPv(i8* %256) #10
  br label %257

257:                                              ; preds = %250, %251, %255
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %258 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 0
  %259 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %258, align 8
  %260 = icmp eq %"class.tflite::RuntimeShape"** %259, null
  br i1 %260, label %266, label %261

261:                                              ; preds = %257
  %262 = ptrtoint %"class.tflite::RuntimeShape"** %259 to i64
  %263 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 2, i32 0, i32 1
  %264 = bitcast %"class.tflite::RuntimeShape"*** %263 to i64*
  store i64 %262, i64* %264, align 8
  %265 = bitcast %"class.tflite::RuntimeShape"** %259 to i8*
  call void @_ZdlPv(i8* %265) #10
  br label %266

266:                                              ; preds = %261, %257
  %267 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1
  %268 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %267, i64 0, i32 0, i32 0
  %269 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %268, align 8
  %270 = icmp eq %"class.tflite::RuntimeShape"* %269, null
  br i1 %270, label %295, label %271

271:                                              ; preds = %266
  %272 = bitcast %"class.tflite::RuntimeShape"* %269 to i8*
  %273 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 1, i32 0, i32 1
  %274 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %273, align 8
  %275 = icmp eq %"class.tflite::RuntimeShape"* %274, %269
  br i1 %275, label %293, label %276

276:                                              ; preds = %271, %288
  %277 = phi %"class.tflite::RuntimeShape"* [ %278, %288 ], [ %274, %271 ]
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %277, i64 -1
  %279 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %278, i64 0, i32 0
  %280 = load i32, i32* %279, align 8
  %281 = icmp sgt i32 %280, 5
  br i1 %281, label %282, label %288

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %277, i64 -1, i32 1, i32 0
  %284 = load i32*, i32** %283, align 8
  %285 = icmp eq i32* %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %282
  %287 = bitcast i32* %284 to i8*
  call void @_ZdaPv(i8* %287) #10
  br label %288

288:                                              ; preds = %286, %282, %276
  %289 = icmp eq %"class.tflite::RuntimeShape"* %278, %269
  br i1 %289, label %290, label %276

290:                                              ; preds = %288
  %291 = bitcast %"class.std::__1::vector.2"* %267 to i8**
  %292 = load i8*, i8** %291, align 8
  br label %293

293:                                              ; preds = %290, %271
  %294 = phi i8* [ %292, %290 ], [ %272, %271 ]
  store %"class.tflite::RuntimeShape"* %269, %"class.tflite::RuntimeShape"** %273, align 8
  call void @_ZdlPv(i8* %294) #10
  br label %295

295:                                              ; preds = %293, %266
  %296 = load float**, float*** %67, align 8
  %297 = icmp eq float** %296, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %295
  %299 = ptrtoint float** %296 to i64
  %300 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %3, i64 0, i32 0, i32 0, i32 1
  %301 = bitcast float*** %300 to i64*
  store i64 %299, i64* %301, align 8
  %302 = bitcast float** %296 to i8*
  call void @_ZdlPv(i8* %302) #10
  br label %303

303:                                              ; preds = %295, %298
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin5add_n8EvalAddNIiEEvP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.tflite::VectorOfTensors.24", align 8
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = bitcast %"class.tflite::VectorOfTensors.24"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 72, i1 false)
  %6 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %7 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  call void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"* nonnull %3, %struct.TfLiteContext* dereferenceable(160) %0, %struct.TfLiteIntArray* dereferenceable(4) %7)
  %8 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %9 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %8, align 8
  %10 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %15 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %14, align 8
  %16 = sext i32 %11 to i64
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %15, i64 %16
  br label %18

18:                                               ; preds = %2, %13
  %19 = phi %struct.TfLiteTensor* [ %17, %13 ], [ null, %2 ]
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %6, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, 0
  br i1 %25, label %26, label %28

26:                                               ; preds = %18
  %27 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #9
  br label %35

28:                                               ; preds = %18
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %24 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  %33 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #9
  %34 = icmp eq %struct.TfLiteTensor* %32, null
  br i1 %34, label %35, label %38

35:                                               ; preds = %26, %28
  %36 = phi i8* [ %27, %26 ], [ %33, %28 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %37, align 8, !alias.scope !12
  br label %63

38:                                               ; preds = %28
  %39 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31, i32 2
  %40 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %39, align 8, !noalias !12
  %41 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 0
  %42 = load i32, i32* %41, align 4, !noalias !12
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %40, i64 0, i32 1, i64 0
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %42, i32* %44, align 8, !alias.scope !12
  %45 = icmp sgt i32 %42, 5
  br i1 %45, label %46, label %53

46:                                               ; preds = %38
  %47 = sext i32 %42 to i64
  %48 = shl nsw i64 %47, 2
  %49 = call i8* @_Znam(i64 %48) #10, !noalias !12
  %50 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %51 = bitcast i32** %50 to i8**
  store i8* %49, i8** %51, align 8, !alias.scope !12
  %52 = bitcast i8* %49 to i32*
  br label %58

53:                                               ; preds = %38
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %55 = bitcast %union.anon* %54 to i32*
  %56 = sext i32 %42 to i64
  %57 = shl nsw i64 %56, 2
  br label %58

58:                                               ; preds = %53, %46
  %59 = phi i64 [ %48, %46 ], [ %57, %53 ]
  %60 = phi i32* [ %52, %46 ], [ %55, %53 ]
  %61 = bitcast i32* %60 to i8*
  %62 = bitcast i32* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %62, i64 %59, i1 false) #9
  br label %63

63:                                               ; preds = %35, %58
  %64 = phi i32 [ 0, %35 ], [ %42, %58 ]
  %65 = phi i8* [ %36, %35 ], [ %33, %58 ]
  %66 = sext i32 %22 to i64
  %67 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 0
  %68 = load i32**, i32*** %67, align 8
  %69 = icmp eq %struct.TfLiteTensor* %19, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %63
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %19, i64 0, i32 1, i32 0
  %72 = load i32*, i32** %71, align 8
  br label %73

73:                                               ; preds = %63, %70
  %74 = phi i32* [ %72, %70 ], [ null, %63 ]
  %75 = icmp sgt i32 %64, 5
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  br i1 %75, label %77, label %80

77:                                               ; preds = %73
  %78 = getelementptr inbounds %union.anon, %union.anon* %76, i64 0, i32 0
  %79 = load i32*, i32** %78, align 8
  br label %83

80:                                               ; preds = %73
  %81 = bitcast %union.anon* %76 to i32*
  %82 = icmp sgt i32 %64, 0
  br i1 %82, label %83, label %187

83:                                               ; preds = %80, %77
  %84 = phi i32* [ %79, %77 ], [ %81, %80 ]
  %85 = zext i32 %64 to i64
  %86 = icmp ult i32 %64, 8
  br i1 %86, label %172, label %87

87:                                               ; preds = %83
  %88 = and i64 %85, 4294967288
  %89 = add nsw i64 %88, -8
  %90 = lshr exact i64 %89, 3
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 24
  br i1 %93, label %139, label %94

94:                                               ; preds = %87
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %136, %96 ]
  %98 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %134, %96 ]
  %99 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %135, %96 ]
  %100 = phi i64 [ %95, %94 ], [ %137, %96 ]
  %101 = getelementptr inbounds i32, i32* %84, i64 %97
  %102 = bitcast i32* %101 to <4 x i32>*
  %103 = load <4 x i32>, <4 x i32>* %102, align 4
  %104 = getelementptr inbounds i32, i32* %101, i64 4
  %105 = bitcast i32* %104 to <4 x i32>*
  %106 = load <4 x i32>, <4 x i32>* %105, align 4
  %107 = mul nsw <4 x i32> %103, %98
  %108 = mul nsw <4 x i32> %106, %99
  %109 = or i64 %97, 8
  %110 = getelementptr inbounds i32, i32* %84, i64 %109
  %111 = bitcast i32* %110 to <4 x i32>*
  %112 = load <4 x i32>, <4 x i32>* %111, align 4
  %113 = getelementptr inbounds i32, i32* %110, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  %115 = load <4 x i32>, <4 x i32>* %114, align 4
  %116 = mul nsw <4 x i32> %112, %107
  %117 = mul nsw <4 x i32> %115, %108
  %118 = or i64 %97, 16
  %119 = getelementptr inbounds i32, i32* %84, i64 %118
  %120 = bitcast i32* %119 to <4 x i32>*
  %121 = load <4 x i32>, <4 x i32>* %120, align 4
  %122 = getelementptr inbounds i32, i32* %119, i64 4
  %123 = bitcast i32* %122 to <4 x i32>*
  %124 = load <4 x i32>, <4 x i32>* %123, align 4
  %125 = mul nsw <4 x i32> %121, %116
  %126 = mul nsw <4 x i32> %124, %117
  %127 = or i64 %97, 24
  %128 = getelementptr inbounds i32, i32* %84, i64 %127
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4
  %131 = getelementptr inbounds i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4
  %134 = mul nsw <4 x i32> %130, %125
  %135 = mul nsw <4 x i32> %133, %126
  %136 = add i64 %97, 32
  %137 = add i64 %100, -4
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %139, label %96, !llvm.loop !15

139:                                              ; preds = %96, %87
  %140 = phi <4 x i32> [ undef, %87 ], [ %134, %96 ]
  %141 = phi <4 x i32> [ undef, %87 ], [ %135, %96 ]
  %142 = phi i64 [ 0, %87 ], [ %136, %96 ]
  %143 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %87 ], [ %134, %96 ]
  %144 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %87 ], [ %135, %96 ]
  %145 = icmp eq i64 %92, 0
  br i1 %145, label %162, label %146

146:                                              ; preds = %139, %146
  %147 = phi i64 [ %159, %146 ], [ %142, %139 ]
  %148 = phi <4 x i32> [ %157, %146 ], [ %143, %139 ]
  %149 = phi <4 x i32> [ %158, %146 ], [ %144, %139 ]
  %150 = phi i64 [ %160, %146 ], [ %92, %139 ]
  %151 = getelementptr inbounds i32, i32* %84, i64 %147
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = getelementptr inbounds i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = mul nsw <4 x i32> %153, %148
  %158 = mul nsw <4 x i32> %156, %149
  %159 = add i64 %147, 8
  %160 = add i64 %150, -1
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %146, !llvm.loop !16

162:                                              ; preds = %146, %139
  %163 = phi <4 x i32> [ %140, %139 ], [ %157, %146 ]
  %164 = phi <4 x i32> [ %141, %139 ], [ %158, %146 ]
  %165 = mul <4 x i32> %164, %163
  %166 = shufflevector <4 x i32> %165, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %167 = mul <4 x i32> %165, %166
  %168 = shufflevector <4 x i32> %167, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %169 = mul <4 x i32> %167, %168
  %170 = extractelement <4 x i32> %169, i32 0
  %171 = icmp eq i64 %88, %85
  br i1 %171, label %183, label %172

172:                                              ; preds = %162, %83
  %173 = phi i64 [ 0, %83 ], [ %88, %162 ]
  %174 = phi i32 [ 1, %83 ], [ %170, %162 ]
  br label %175

175:                                              ; preds = %172, %175
  %176 = phi i64 [ %181, %175 ], [ %173, %172 ]
  %177 = phi i32 [ %180, %175 ], [ %174, %172 ]
  %178 = getelementptr inbounds i32, i32* %84, i64 %176
  %179 = load i32, i32* %178, align 4
  %180 = mul nsw i32 %179, %177
  %181 = add nuw nsw i64 %176, 1
  %182 = icmp eq i64 %181, %85
  br i1 %182, label %183, label %175, !llvm.loop !17

183:                                              ; preds = %175, %162
  %184 = phi i32 [ %170, %162 ], [ %180, %175 ]
  %185 = sext i32 %184 to i64
  %186 = icmp eq i32 %184, 0
  br i1 %186, label %249, label %187

187:                                              ; preds = %183, %80
  %188 = phi i64 [ %185, %183 ], [ 1, %80 ]
  %189 = icmp eq i32 %22, 0
  %190 = add nsw i64 %66, -1
  %191 = and i64 %66, 3
  %192 = icmp ult i64 %190, 3
  %193 = sub nsw i64 %66, %191
  %194 = icmp eq i64 %191, 0
  br label %195

195:                                              ; preds = %214, %187
  %196 = phi i64 [ 0, %187 ], [ %217, %214 ]
  br i1 %189, label %214, label %197

197:                                              ; preds = %195
  br i1 %192, label %198, label %219

198:                                              ; preds = %219, %197
  %199 = phi i32 [ undef, %197 ], [ %245, %219 ]
  %200 = phi i64 [ 0, %197 ], [ %246, %219 ]
  %201 = phi i32 [ 0, %197 ], [ %245, %219 ]
  br i1 %194, label %214, label %202

202:                                              ; preds = %198, %202
  %203 = phi i64 [ %211, %202 ], [ %200, %198 ]
  %204 = phi i32 [ %210, %202 ], [ %201, %198 ]
  %205 = phi i64 [ %212, %202 ], [ %191, %198 ]
  %206 = getelementptr inbounds i32*, i32** %68, i64 %203
  %207 = load i32*, i32** %206, align 8
  %208 = getelementptr inbounds i32, i32* %207, i64 %196
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, %204
  %211 = add nuw i64 %203, 1
  %212 = add i64 %205, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %202, !llvm.loop !18

214:                                              ; preds = %198, %202, %195
  %215 = phi i32 [ 0, %195 ], [ %199, %198 ], [ %210, %202 ]
  %216 = getelementptr inbounds i32, i32* %74, i64 %196
  store i32 %215, i32* %216, align 4
  %217 = add nuw i64 %196, 1
  %218 = icmp ult i64 %217, %188
  br i1 %218, label %195, label %249

219:                                              ; preds = %197, %219
  %220 = phi i64 [ %246, %219 ], [ 0, %197 ]
  %221 = phi i32 [ %245, %219 ], [ 0, %197 ]
  %222 = phi i64 [ %247, %219 ], [ %193, %197 ]
  %223 = getelementptr inbounds i32*, i32** %68, i64 %220
  %224 = load i32*, i32** %223, align 8
  %225 = getelementptr inbounds i32, i32* %224, i64 %196
  %226 = load i32, i32* %225, align 4
  %227 = add nsw i32 %226, %221
  %228 = or i64 %220, 1
  %229 = getelementptr inbounds i32*, i32** %68, i64 %228
  %230 = load i32*, i32** %229, align 8
  %231 = getelementptr inbounds i32, i32* %230, i64 %196
  %232 = load i32, i32* %231, align 4
  %233 = add nsw i32 %232, %227
  %234 = or i64 %220, 2
  %235 = getelementptr inbounds i32*, i32** %68, i64 %234
  %236 = load i32*, i32** %235, align 8
  %237 = getelementptr inbounds i32, i32* %236, i64 %196
  %238 = load i32, i32* %237, align 4
  %239 = add nsw i32 %238, %233
  %240 = or i64 %220, 3
  %241 = getelementptr inbounds i32*, i32** %68, i64 %240
  %242 = load i32*, i32** %241, align 8
  %243 = getelementptr inbounds i32, i32* %242, i64 %196
  %244 = load i32, i32* %243, align 4
  %245 = add nsw i32 %244, %239
  %246 = add nuw i64 %220, 4
  %247 = add i64 %222, -4
  %248 = icmp eq i64 %247, 0
  br i1 %248, label %198, label %219

249:                                              ; preds = %214, %183
  br i1 %75, label %250, label %256

250:                                              ; preds = %249
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %250
  %255 = bitcast i32* %252 to i8*
  call void @_ZdaPv(i8* %255) #10
  br label %256

256:                                              ; preds = %249, %250, %254
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %257 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 0
  %258 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %257, align 8
  %259 = icmp eq %"class.tflite::RuntimeShape"** %258, null
  br i1 %259, label %265, label %260

260:                                              ; preds = %256
  %261 = ptrtoint %"class.tflite::RuntimeShape"** %258 to i64
  %262 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 2, i32 0, i32 1
  %263 = bitcast %"class.tflite::RuntimeShape"*** %262 to i64*
  store i64 %261, i64* %263, align 8
  %264 = bitcast %"class.tflite::RuntimeShape"** %258 to i8*
  call void @_ZdlPv(i8* %264) #10
  br label %265

265:                                              ; preds = %260, %256
  %266 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1
  %267 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %266, i64 0, i32 0, i32 0
  %268 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %267, align 8
  %269 = icmp eq %"class.tflite::RuntimeShape"* %268, null
  br i1 %269, label %294, label %270

270:                                              ; preds = %265
  %271 = bitcast %"class.tflite::RuntimeShape"* %268 to i8*
  %272 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 1, i32 0, i32 1
  %273 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %272, align 8
  %274 = icmp eq %"class.tflite::RuntimeShape"* %273, %268
  br i1 %274, label %292, label %275

275:                                              ; preds = %270, %287
  %276 = phi %"class.tflite::RuntimeShape"* [ %277, %287 ], [ %273, %270 ]
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %276, i64 -1
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %277, i64 0, i32 0
  %279 = load i32, i32* %278, align 8
  %280 = icmp sgt i32 %279, 5
  br i1 %280, label %281, label %287

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %276, i64 -1, i32 1, i32 0
  %283 = load i32*, i32** %282, align 8
  %284 = icmp eq i32* %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %281
  %286 = bitcast i32* %283 to i8*
  call void @_ZdaPv(i8* %286) #10
  br label %287

287:                                              ; preds = %285, %281, %275
  %288 = icmp eq %"class.tflite::RuntimeShape"* %277, %268
  br i1 %288, label %289, label %275

289:                                              ; preds = %287
  %290 = bitcast %"class.std::__1::vector.2"* %266 to i8**
  %291 = load i8*, i8** %290, align 8
  br label %292

292:                                              ; preds = %289, %270
  %293 = phi i8* [ %291, %289 ], [ %271, %270 ]
  store %"class.tflite::RuntimeShape"* %268, %"class.tflite::RuntimeShape"** %272, align 8
  call void @_ZdlPv(i8* %293) #10
  br label %294

294:                                              ; preds = %292, %265
  %295 = load i32**, i32*** %67, align 8
  %296 = icmp eq i32** %295, null
  br i1 %296, label %302, label %297

297:                                              ; preds = %294
  %298 = ptrtoint i32** %295 to i64
  %299 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %3, i64 0, i32 0, i32 0, i32 1
  %300 = bitcast i32*** %299 to i64*
  store i64 %298, i64* %300, align 8
  %301 = bitcast i32** %295 to i8*
  call void @_ZdlPv(i8* %301) #10
  br label %302

302:                                              ; preds = %294, %297
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin14Register_ADD_NEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin14Register_ADD_NEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIfEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast float*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to float**
  %22 = getelementptr inbounds float*, float** %21, i64 %10
  %23 = ptrtoint float** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %221

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast float*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %218
  br i1 %59, label %77, label %221

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors", %"class.tflite::VectorOfTensors"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %222

83:                                               ; preds = %218, %60
  %84 = phi i64 [ 0, %60 ], [ %219, %218 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1
  %93 = bitcast %union.TfLitePtrUnion* %92 to float**
  %94 = load float*, float** %93, align 8
  br label %95

95:                                               ; preds = %83, %91
  %96 = phi float* [ %94, %91 ], [ null, %83 ]
  %97 = ptrtoint float* %96 to i64
  %98 = load float**, float*** %62, align 8
  %99 = load float**, float*** %11, align 8
  %100 = icmp ult float** %98, %99
  %101 = ptrtoint float** %99 to i64
  br i1 %100, label %102, label %106

102:                                              ; preds = %95
  %103 = bitcast float** %98 to i64*
  store i64 %97, i64* %103, align 8
  %104 = getelementptr inbounds float*, float** %98, i64 1
  %105 = ptrtoint float** %104 to i64
  store i64 %105, i64* %63, align 8
  br label %159

106:                                              ; preds = %95
  %107 = ptrtoint float** %98 to i64
  %108 = load i64, i64* %13, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 3
  %111 = add nsw i64 %110, 1
  %112 = icmp ugt i64 %111, 2305843009213693951
  br i1 %112, label %113, label %115

113:                                              ; preds = %106
  %114 = bitcast %"class.tflite::VectorOfTensors"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %114) #11
  unreachable

115:                                              ; preds = %106
  %116 = sub i64 %101, %108
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %115
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %111
  %122 = select i1 %121, i64 %111, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  call void @abort() #11
  unreachable

127:                                              ; preds = %124, %115
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %115 ]
  %129 = shl i64 %128, 3
  %130 = call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to float**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi float** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds float*, float** %134, i64 %110
  %136 = getelementptr inbounds float*, float** %134, i64 %133
  %137 = ptrtoint float** %136 to i64
  %138 = bitcast float** %135 to i64*
  store i64 %97, i64* %138, align 8
  %139 = getelementptr inbounds float*, float** %135, i64 1
  %140 = ptrtoint float** %139 to i64
  %141 = load float**, float*** %64, align 8
  %142 = load i64, i64* %63, align 8
  %143 = ptrtoint float** %141 to i64
  %144 = sub i64 %142, %143
  %145 = ashr exact i64 %144, 3
  %146 = sub nsw i64 0, %145
  %147 = getelementptr inbounds float*, float** %135, i64 %146
  %148 = ptrtoint float** %147 to i64
  %149 = icmp sgt i64 %144, 0
  br i1 %149, label %150, label %154

150:                                              ; preds = %132
  %151 = bitcast float** %147 to i8*
  %152 = bitcast float** %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %144, i1 false) #9
  %153 = load float**, float*** %64, align 8
  br label %154

154:                                              ; preds = %150, %132
  %155 = phi float** [ %141, %132 ], [ %153, %150 ]
  store i64 %148, i64* %13, align 8
  store i64 %140, i64* %63, align 8
  store i64 %137, i64* %12, align 8
  %156 = icmp eq float** %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %154
  %158 = bitcast float** %155 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %102, %154, %157
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %160, label %161

160:                                              ; preds = %159
  store i32 0, i32* %66, align 8, !alias.scope !19
  br label %177

161:                                              ; preds = %159
  %162 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %163 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %162, align 8, !noalias !19
  %164 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 0
  %165 = load i32, i32* %164, align 4, !noalias !19
  %166 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %163, i64 0, i32 1, i64 0
  store i32 %165, i32* %66, align 8, !alias.scope !19
  %167 = icmp sgt i32 %165, 5
  %168 = sext i32 %165 to i64
  %169 = shl nsw i64 %168, 2
  br i1 %167, label %170, label %173

170:                                              ; preds = %161
  %171 = call i8* @_Znam(i64 %169) #10, !noalias !19
  store i8* %171, i8** %70, align 8, !alias.scope !19
  %172 = bitcast i8* %171 to i32*
  br label %173

173:                                              ; preds = %161, %170
  %174 = phi i32* [ %172, %170 ], [ %68, %161 ]
  %175 = bitcast i32* %174 to i8*
  %176 = bitcast i32* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %175, i8* align 4 %176, i64 %169, i1 false) #9
  br label %177

177:                                              ; preds = %160, %173
  %178 = phi i32 [ 0, %160 ], [ %165, %173 ]
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %180 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %181 = icmp ult %"class.tflite::RuntimeShape"* %179, %180
  br i1 %181, label %182, label %208

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 0
  store i32 %178, i32* %183, align 8
  %184 = icmp sgt i32 %178, 5
  br i1 %184, label %185, label %192

185:                                              ; preds = %182
  %186 = sext i32 %178 to i64
  %187 = shl nsw i64 %186, 2
  %188 = call i8* @_Znam(i64 %187) #10
  %189 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1, i32 0
  %190 = bitcast i32** %189 to i8**
  store i8* %188, i8** %190, align 8
  %191 = bitcast i8* %188 to i32*
  br label %197

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 0, i32 1
  %194 = bitcast %union.anon* %193 to i32*
  %195 = sext i32 %178 to i64
  %196 = shl nsw i64 %195, 2
  br label %197

197:                                              ; preds = %192, %185
  %198 = phi i64 [ %187, %185 ], [ %196, %192 ]
  %199 = phi i32* [ %191, %185 ], [ %194, %192 ]
  %200 = bitcast i32* %199 to i8*
  %201 = load i32, i32* %66, align 8
  %202 = icmp sgt i32 %201, 5
  %203 = load i32*, i32** %73, align 8
  %204 = select i1 %202, i32* %203, i32* %68
  %205 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 4 %205, i64 %198, i1 false) #9
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %179, i64 1
  %207 = ptrtoint %"class.tflite::RuntimeShape"* %206 to i64
  store i64 %207, i64* %74, align 8
  br label %210

208:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %209 = load i32, i32* %66, align 8
  br label %210

210:                                              ; preds = %197, %208
  %211 = phi i32 [ %201, %197 ], [ %209, %208 ]
  %212 = icmp sgt i32 %211, 5
  br i1 %212, label %213, label %218

213:                                              ; preds = %210
  %214 = load i32*, i32** %69, align 8
  %215 = icmp eq i32* %214, null
  br i1 %215, label %218, label %216

216:                                              ; preds = %213
  %217 = bitcast i32* %214 to i8*
  call void @_ZdaPv(i8* %217) #10
  br label %218

218:                                              ; preds = %210, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %219 = add nuw nsw i64 %84, 1
  %220 = icmp eq i64 %219, %75
  br i1 %220, label %76, label %83

221:                                              ; preds = %288, %58, %76
  ret void

222:                                              ; preds = %288, %77
  %223 = phi i64 [ 0, %77 ], [ %289, %288 ]
  %224 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %224, i64 %223
  %226 = ptrtoint %"class.tflite::RuntimeShape"* %225 to i64
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %228 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %229 = icmp ult %"class.tflite::RuntimeShape"** %227, %228
  %230 = ptrtoint %"class.tflite::RuntimeShape"** %228 to i64
  br i1 %229, label %231, label %235

231:                                              ; preds = %222
  %232 = bitcast %"class.tflite::RuntimeShape"** %227 to i64*
  store i64 %226, i64* %232, align 8
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %227, i64 1
  %234 = ptrtoint %"class.tflite::RuntimeShape"** %233 to i64
  store i64 %234, i64* %80, align 8
  br label %288

235:                                              ; preds = %222
  %236 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  %237 = load i64, i64* %32, align 8
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 3
  %240 = add nsw i64 %239, 1
  %241 = icmp ugt i64 %240, 2305843009213693951
  br i1 %241, label %242, label %244

242:                                              ; preds = %235
  %243 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %243) #11
  unreachable

244:                                              ; preds = %235
  %245 = sub i64 %230, %237
  %246 = ashr exact i64 %245, 3
  %247 = icmp ult i64 %246, 1152921504606846975
  br i1 %247, label %248, label %256

248:                                              ; preds = %244
  %249 = ashr exact i64 %245, 2
  %250 = icmp ult i64 %249, %240
  %251 = select i1 %250, i64 %240, i64 %249
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %261, label %253

253:                                              ; preds = %248
  %254 = icmp ugt i64 %251, 2305843009213693951
  br i1 %254, label %255, label %256

255:                                              ; preds = %253
  call void @abort() #11
  unreachable

256:                                              ; preds = %253, %244
  %257 = phi i64 [ %251, %253 ], [ 2305843009213693951, %244 ]
  %258 = shl i64 %257, 3
  %259 = call i8* @_Znwm(i64 %258) #10
  %260 = bitcast i8* %259 to %"class.tflite::RuntimeShape"**
  br label %261

261:                                              ; preds = %256, %248
  %262 = phi i64 [ %257, %256 ], [ 0, %248 ]
  %263 = phi %"class.tflite::RuntimeShape"** [ %260, %256 ], [ null, %248 ]
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %239
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %262
  %266 = ptrtoint %"class.tflite::RuntimeShape"** %265 to i64
  %267 = bitcast %"class.tflite::RuntimeShape"** %264 to i64*
  store i64 %226, i64* %267, align 8
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 1
  %269 = ptrtoint %"class.tflite::RuntimeShape"** %268 to i64
  %270 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %271 = load i64, i64* %80, align 8
  %272 = ptrtoint %"class.tflite::RuntimeShape"** %270 to i64
  %273 = sub i64 %271, %272
  %274 = ashr exact i64 %273, 3
  %275 = sub nsw i64 0, %274
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %264, i64 %275
  %277 = ptrtoint %"class.tflite::RuntimeShape"** %276 to i64
  %278 = icmp sgt i64 %273, 0
  br i1 %278, label %279, label %283

279:                                              ; preds = %261
  %280 = bitcast %"class.tflite::RuntimeShape"** %276 to i8*
  %281 = bitcast %"class.tflite::RuntimeShape"** %270 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %280, i8* align 8 %281, i64 %273, i1 false) #9
  %282 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %283

283:                                              ; preds = %279, %261
  %284 = phi %"class.tflite::RuntimeShape"** [ %270, %261 ], [ %282, %279 ]
  store i64 %277, i64* %32, align 8
  store i64 %269, i64* %80, align 8
  store i64 %266, i64* %30, align 8
  %285 = icmp eq %"class.tflite::RuntimeShape"** %284, null
  br i1 %285, label %288, label %286

286:                                              ; preds = %283
  %287 = bitcast %"class.tflite::RuntimeShape"** %284 to i8*
  call void @_ZdlPv(i8* %287) #10
  br label %288

288:                                              ; preds = %231, %283, %286
  %289 = add nuw nsw i64 %223, 1
  %290 = icmp eq i64 %289, %82
  br i1 %290, label %221, label %222
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = icmp ult i64 %9, %1
  %11 = inttoptr i64 %7 to %"class.tflite::RuntimeShape"*
  br i1 %10, label %12, label %93

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.tflite::RuntimeShape"** %13 to i64*
  %15 = icmp ugt i64 %1, 576460752303423487
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  tail call void @abort() #11
  unreachable

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = sub i64 %18, %7
  %20 = ashr exact i64 %19, 5
  %21 = shl i64 %1, 5
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.tflite::RuntimeShape"*
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %20
  %25 = ptrtoint %"class.tflite::RuntimeShape"* %24 to i64
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %23, i64 %1
  %27 = ptrtoint %"class.tflite::RuntimeShape"* %26 to i64
  %28 = inttoptr i64 %18 to %"class.tflite::RuntimeShape"*
  %29 = icmp eq %"class.tflite::RuntimeShape"* %28, %11
  br i1 %29, label %69, label %30

30:                                               ; preds = %17, %50
  %31 = phi %"class.tflite::RuntimeShape"* [ %62, %50 ], [ %24, %17 ]
  %32 = phi %"class.tflite::RuntimeShape"* [ %33, %50 ], [ %28, %17 ]
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1
  %34 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 0
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %33, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  store i32 %36, i32* %34, align 8
  %37 = icmp sgt i32 %36, 5
  br i1 %37, label %38, label %45

38:                                               ; preds = %30
  %39 = sext i32 %36 to i64
  %40 = shl nsw i64 %39, 2
  %41 = tail call i8* @_Znam(i64 %40) #10
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1, i32 0
  %43 = bitcast i32** %42 to i8**
  store i8* %41, i8** %43, align 8
  %44 = bitcast i8* %41 to i32*
  br label %50

45:                                               ; preds = %30
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1, i32 1
  %47 = bitcast %union.anon* %46 to i32*
  %48 = sext i32 %36 to i64
  %49 = shl nsw i64 %48, 2
  br label %50

50:                                               ; preds = %45, %38
  %51 = phi i64 [ %40, %38 ], [ %49, %45 ]
  %52 = phi i32* [ %44, %38 ], [ %47, %45 ]
  %53 = bitcast i32* %52 to i8*
  %54 = load i32, i32* %35, align 8
  %55 = icmp sgt i32 %54, 5
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %32, i64 -1, i32 1
  %57 = getelementptr inbounds %union.anon, %union.anon* %56, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %union.anon* %56 to i32*
  %60 = select i1 %55, i32* %58, i32* %59
  %61 = bitcast i32* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %61, i64 %51, i1 false) #9
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %31, i64 -1
  %63 = icmp eq %"class.tflite::RuntimeShape"* %33, %11
  br i1 %63, label %64, label %30

64:                                               ; preds = %50
  %65 = ptrtoint %"class.tflite::RuntimeShape"* %62 to i64
  %66 = load i64, i64* %6, align 8
  %67 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %13, align 8
  %68 = inttoptr i64 %66 to %"class.tflite::RuntimeShape"*
  br label %69

69:                                               ; preds = %17, %64
  %70 = phi %"class.tflite::RuntimeShape"* [ %68, %64 ], [ %28, %17 ]
  %71 = phi %"class.tflite::RuntimeShape"* [ %67, %64 ], [ %11, %17 ]
  %72 = phi i64 [ %65, %64 ], [ %25, %17 ]
  %73 = phi i64 [ %66, %64 ], [ %18, %17 ]
  store i64 %72, i64* %6, align 8
  store i64 %25, i64* %14, align 8
  store i64 %27, i64* %4, align 8
  %74 = icmp eq %"class.tflite::RuntimeShape"* %71, %70
  br i1 %74, label %89, label %75

75:                                               ; preds = %69, %87
  %76 = phi %"class.tflite::RuntimeShape"* [ %77, %87 ], [ %71, %69 ]
  %77 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 8
  %80 = icmp sgt i32 %79, 5
  br i1 %80, label %81, label %87

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %76, i64 -1, i32 1, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = icmp eq i32* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast i32* %83 to i8*
  tail call void @_ZdaPv(i8* %86) #10
  br label %87

87:                                               ; preds = %85, %81, %75
  %88 = icmp eq %"class.tflite::RuntimeShape"* %77, %70
  br i1 %88, label %89, label %75

89:                                               ; preds = %87, %69
  %90 = icmp eq i64 %73, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %89
  %92 = inttoptr i64 %73 to i8*
  tail call void @_ZdlPv(i8* %92) #10
  br label %93

93:                                               ; preds = %91, %89, %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"*, %"class.tflite::RuntimeShape"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.tflite::RuntimeShape"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.2"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.tflite::RuntimeShape"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #10
  %33 = bitcast i8* %32 to %"class.tflite::RuntimeShape"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.tflite::RuntimeShape"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9
  %38 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %35
  %39 = ptrtoint %"class.tflite::RuntimeShape"* %38 to i64
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 0, i32 0
  %41 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  store i32 %42, i32* %40, align 8
  %43 = icmp sgt i32 %42, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %34
  %45 = sext i32 %42 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %34
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %36, i64 %9, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %42 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = load i32, i32* %41, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %63 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = bitcast %union.anon* %62 to i32*
  %66 = select i1 %61, i32* %64, i32* %65
  %67 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %67, i64 %57, i1 false) #9
  %68 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %37, i64 1
  %69 = ptrtoint %"class.tflite::RuntimeShape"* %68 to i64
  %70 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %71 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %70, align 8
  %72 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  %73 = icmp eq %"class.tflite::RuntimeShape"* %72, %71
  br i1 %73, label %74, label %76

74:                                               ; preds = %56
  %75 = ptrtoint %"class.tflite::RuntimeShape"* %71 to i64
  br label %113

76:                                               ; preds = %56, %96
  %77 = phi %"class.tflite::RuntimeShape"* [ %108, %96 ], [ %37, %56 ]
  %78 = phi %"class.tflite::RuntimeShape"* [ %79, %96 ], [ %72, %56 ]
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1
  %80 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 0
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %79, i64 0, i32 0
  %82 = load i32, i32* %81, align 8
  store i32 %82, i32* %80, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %91

84:                                               ; preds = %76
  %85 = sext i32 %82 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Znam(i64 %86) #10
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1, i32 0
  %89 = bitcast i32** %88 to i8**
  store i8* %87, i8** %89, align 8
  %90 = bitcast i8* %87 to i32*
  br label %96

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1, i32 1
  %93 = bitcast %union.anon* %92 to i32*
  %94 = sext i32 %82 to i64
  %95 = shl nsw i64 %94, 2
  br label %96

96:                                               ; preds = %91, %84
  %97 = phi i64 [ %86, %84 ], [ %95, %91 ]
  %98 = phi i32* [ %90, %84 ], [ %93, %91 ]
  %99 = bitcast i32* %98 to i8*
  %100 = load i32, i32* %81, align 8
  %101 = icmp sgt i32 %100, 5
  %102 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %78, i64 -1, i32 1
  %103 = getelementptr inbounds %union.anon, %union.anon* %102, i64 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %union.anon* %102 to i32*
  %106 = select i1 %101, i32* %104, i32* %105
  %107 = bitcast i32* %106 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %107, i64 %97, i1 false) #9
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %77, i64 -1
  %109 = icmp eq %"class.tflite::RuntimeShape"* %79, %71
  br i1 %109, label %110, label %76

110:                                              ; preds = %96
  %111 = load i64, i64* %6, align 8
  %112 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %3, align 8
  br label %113

113:                                              ; preds = %74, %110
  %114 = phi %"class.tflite::RuntimeShape"* [ %71, %74 ], [ %112, %110 ]
  %115 = phi %"class.tflite::RuntimeShape"* [ %37, %74 ], [ %108, %110 ]
  %116 = phi i64 [ %75, %74 ], [ %111, %110 ]
  %117 = ptrtoint %"class.tflite::RuntimeShape"* %115 to i64
  store i64 %117, i64* %6, align 8
  store i64 %69, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %118 = inttoptr i64 %116 to %"class.tflite::RuntimeShape"*
  %119 = icmp eq %"class.tflite::RuntimeShape"* %114, %118
  br i1 %119, label %134, label %120

120:                                              ; preds = %113, %132
  %121 = phi %"class.tflite::RuntimeShape"* [ %122, %132 ], [ %114, %113 ]
  %122 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %122, i64 0, i32 0
  %124 = load i32, i32* %123, align 8
  %125 = icmp sgt i32 %124, 5
  br i1 %125, label %126, label %132

126:                                              ; preds = %120
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %121, i64 -1, i32 1, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = icmp eq i32* %128, null
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = bitcast i32* %128 to i8*
  tail call void @_ZdaPv(i8* %131) #10
  br label %132

132:                                              ; preds = %130, %126, %120
  %133 = icmp eq %"class.tflite::RuntimeShape"* %122, %118
  br i1 %133, label %134, label %120

134:                                              ; preds = %132, %113
  %135 = icmp eq i64 %116, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = inttoptr i64 %116 to i8*
  tail call void @_ZdlPv(i8* %137) #10
  br label %138

138:                                              ; preds = %134, %136
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite15VectorOfTensorsIiEC2ERK13TfLiteContextRK14TfLiteIntArray(%"class.tflite::VectorOfTensors.24"*, %struct.TfLiteContext* dereferenceable(160), %struct.TfLiteIntArray* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 0
  %8 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 72, i1 false)
  %9 = load i32, i32* %7, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %12 = bitcast i32*** %11 to i64*
  %13 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to i64*
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = icmp slt i32 %9, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @abort() #11
  unreachable

18:                                               ; preds = %15
  %19 = shl nsw i64 %10, 3
  %20 = tail call i8* @_Znwm(i64 %19) #10
  %21 = bitcast i8* %20 to i32**
  %22 = getelementptr inbounds i32*, i32** %21, i64 %10
  %23 = ptrtoint i32** %22 to i64
  %24 = insertelement <2 x i8*> undef, i8* %20, i32 0
  %25 = shufflevector <2 x i8*> %24, <2 x i8*> undef, <2 x i32> zeroinitializer
  %26 = ptrtoint <2 x i8*> %25 to <2 x i64>
  %27 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to <2 x i64>*
  store <2 x i64> %26, <2 x i64>* %27, align 8
  store i64 %23, i64* %12, align 8
  br label %28

28:                                               ; preds = %18, %3
  tail call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE7reserveEm(%"class.std::__1::vector.2"* %5, i64 %10)
  %29 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"class.tflite::RuntimeShape"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.9"* %6 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, %10
  br i1 %36, label %37, label %58

37:                                               ; preds = %28
  %38 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %39 = bitcast %"class.tflite::RuntimeShape"*** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %40, %33
  %42 = ashr exact i64 %41, 3
  %43 = shl nsw i64 %10, 3
  %44 = tail call i8* @_Znwm(i64 %43) #10
  %45 = bitcast i8* %44 to %"class.tflite::RuntimeShape"**
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %42
  %47 = ptrtoint %"class.tflite::RuntimeShape"** %46 to i64
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %45, i64 %10
  %49 = ptrtoint %"class.tflite::RuntimeShape"** %48 to i64
  %50 = ptrtoint i8* %44 to i64
  %51 = icmp sgt i64 %41, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %37
  %53 = inttoptr i64 %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 8 %53, i64 %41, i1 false) #9
  br label %54

54:                                               ; preds = %52, %37
  store i64 %50, i64* %32, align 8
  store i64 %47, i64* %39, align 8
  store i64 %49, i64* %30, align 8
  %55 = icmp eq i64 %33, 0
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = inttoptr i64 %33 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  br label %58

58:                                               ; preds = %28, %54, %56
  %59 = icmp sgt i32 %9, 0
  br i1 %59, label %60, label %220

60:                                               ; preds = %58
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %1, i64 0, i32 2
  %62 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast i32*** %62 to i64*
  %64 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  %66 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %68 = bitcast %union.anon* %67 to i32*
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %70 = bitcast i32** %69 to i8**
  %71 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 1
  %72 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %73 = getelementptr inbounds %union.anon, %union.anon* %67, i64 0, i32 0
  %74 = bitcast %"class.tflite::RuntimeShape"** %71 to i64*
  %75 = zext i32 %9 to i64
  br label %83

76:                                               ; preds = %217
  br i1 %59, label %77, label %220

77:                                               ; preds = %76
  %78 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %5, i64 0, i32 0, i32 0
  %79 = getelementptr inbounds %"class.tflite::VectorOfTensors.24", %"class.tflite::VectorOfTensors.24"* %0, i64 0, i32 2, i32 0, i32 1
  %80 = bitcast %"class.tflite::RuntimeShape"*** %79 to i64*
  %81 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %6, i64 0, i32 0, i32 0
  %82 = zext i32 %9 to i64
  br label %221

83:                                               ; preds = %217, %60
  %84 = phi i64 [ 0, %60 ], [ %218, %217 ]
  %85 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %2, i64 0, i32 1, i64 %84
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88
  %90 = icmp eq %struct.TfLiteTensor* %89, null
  br i1 %90, label %94, label %91

91:                                               ; preds = %83
  %92 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 1, i32 0
  %93 = load i32*, i32** %92, align 8
  br label %94

94:                                               ; preds = %83, %91
  %95 = phi i32* [ %93, %91 ], [ null, %83 ]
  %96 = ptrtoint i32* %95 to i64
  %97 = load i32**, i32*** %62, align 8
  %98 = load i32**, i32*** %11, align 8
  %99 = icmp ult i32** %97, %98
  %100 = ptrtoint i32** %98 to i64
  br i1 %99, label %101, label %105

101:                                              ; preds = %94
  %102 = bitcast i32** %97 to i64*
  store i64 %96, i64* %102, align 8
  %103 = getelementptr inbounds i32*, i32** %97, i64 1
  %104 = ptrtoint i32** %103 to i64
  store i64 %104, i64* %63, align 8
  br label %158

105:                                              ; preds = %94
  %106 = ptrtoint i32** %97 to i64
  %107 = load i64, i64* %13, align 8
  %108 = sub i64 %106, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %105
  %113 = bitcast %"class.tflite::VectorOfTensors.24"* %0 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #11
  unreachable

114:                                              ; preds = %105
  %115 = sub i64 %100, %107
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %116, 1152921504606846975
  br i1 %117, label %118, label %126

118:                                              ; preds = %114
  %119 = ashr exact i64 %115, 2
  %120 = icmp ult i64 %119, %110
  %121 = select i1 %120, i64 %110, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %131, label %123

123:                                              ; preds = %118
  %124 = icmp ugt i64 %121, 2305843009213693951
  br i1 %124, label %125, label %126

125:                                              ; preds = %123
  call void @abort() #11
  unreachable

126:                                              ; preds = %123, %114
  %127 = phi i64 [ %121, %123 ], [ 2305843009213693951, %114 ]
  %128 = shl i64 %127, 3
  %129 = call i8* @_Znwm(i64 %128) #10
  %130 = bitcast i8* %129 to i32**
  br label %131

131:                                              ; preds = %126, %118
  %132 = phi i64 [ %127, %126 ], [ 0, %118 ]
  %133 = phi i32** [ %130, %126 ], [ null, %118 ]
  %134 = getelementptr inbounds i32*, i32** %133, i64 %109
  %135 = getelementptr inbounds i32*, i32** %133, i64 %132
  %136 = ptrtoint i32** %135 to i64
  %137 = bitcast i32** %134 to i64*
  store i64 %96, i64* %137, align 8
  %138 = getelementptr inbounds i32*, i32** %134, i64 1
  %139 = ptrtoint i32** %138 to i64
  %140 = load i32**, i32*** %64, align 8
  %141 = load i64, i64* %63, align 8
  %142 = ptrtoint i32** %140 to i64
  %143 = sub i64 %141, %142
  %144 = ashr exact i64 %143, 3
  %145 = sub nsw i64 0, %144
  %146 = getelementptr inbounds i32*, i32** %134, i64 %145
  %147 = ptrtoint i32** %146 to i64
  %148 = icmp sgt i64 %143, 0
  br i1 %148, label %149, label %153

149:                                              ; preds = %131
  %150 = bitcast i32** %146 to i8*
  %151 = bitcast i32** %140 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %150, i8* align 8 %151, i64 %143, i1 false) #9
  %152 = load i32**, i32*** %64, align 8
  br label %153

153:                                              ; preds = %149, %131
  %154 = phi i32** [ %140, %131 ], [ %152, %149 ]
  store i64 %147, i64* %13, align 8
  store i64 %139, i64* %63, align 8
  store i64 %136, i64* %12, align 8
  %155 = icmp eq i32** %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %153
  %157 = bitcast i32** %154 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %101, %153, %156
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %65) #9
  br i1 %90, label %159, label %160

159:                                              ; preds = %158
  store i32 0, i32* %66, align 8, !alias.scope !22
  br label %176

160:                                              ; preds = %158
  %161 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %85, i64 %88, i32 2
  %162 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %161, align 8, !noalias !22
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 0
  %164 = load i32, i32* %163, align 4, !noalias !22
  %165 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %162, i64 0, i32 1, i64 0
  store i32 %164, i32* %66, align 8, !alias.scope !22
  %166 = icmp sgt i32 %164, 5
  %167 = sext i32 %164 to i64
  %168 = shl nsw i64 %167, 2
  br i1 %166, label %169, label %172

169:                                              ; preds = %160
  %170 = call i8* @_Znam(i64 %168) #10, !noalias !22
  store i8* %170, i8** %70, align 8, !alias.scope !22
  %171 = bitcast i8* %170 to i32*
  br label %172

172:                                              ; preds = %160, %169
  %173 = phi i32* [ %171, %169 ], [ %68, %160 ]
  %174 = bitcast i32* %173 to i8*
  %175 = bitcast i32* %165 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %174, i8* align 4 %175, i64 %168, i1 false) #9
  br label %176

176:                                              ; preds = %159, %172
  %177 = phi i32 [ 0, %159 ], [ %164, %172 ]
  %178 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %71, align 8
  %179 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %72, align 8
  %180 = icmp ult %"class.tflite::RuntimeShape"* %178, %179
  br i1 %180, label %181, label %207

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 0
  store i32 %177, i32* %182, align 8
  %183 = icmp sgt i32 %177, 5
  br i1 %183, label %184, label %191

184:                                              ; preds = %181
  %185 = sext i32 %177 to i64
  %186 = shl nsw i64 %185, 2
  %187 = call i8* @_Znam(i64 %186) #10
  %188 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1, i32 0
  %189 = bitcast i32** %188 to i8**
  store i8* %187, i8** %189, align 8
  %190 = bitcast i8* %187 to i32*
  br label %196

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 0, i32 1
  %193 = bitcast %union.anon* %192 to i32*
  %194 = sext i32 %177 to i64
  %195 = shl nsw i64 %194, 2
  br label %196

196:                                              ; preds = %191, %184
  %197 = phi i64 [ %186, %184 ], [ %195, %191 ]
  %198 = phi i32* [ %190, %184 ], [ %193, %191 ]
  %199 = bitcast i32* %198 to i8*
  %200 = load i32, i32* %66, align 8
  %201 = icmp sgt i32 %200, 5
  %202 = load i32*, i32** %73, align 8
  %203 = select i1 %201, i32* %202, i32* %68
  %204 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %199, i8* align 4 %204, i64 %197, i1 false) #9
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %178, i64 1
  %206 = ptrtoint %"class.tflite::RuntimeShape"* %205 to i64
  store i64 %206, i64* %74, align 8
  br label %209

207:                                              ; preds = %176
  call void @_ZNSt3__16vectorIN6tflite12RuntimeShapeENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.2"* %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4) #9
  %208 = load i32, i32* %66, align 8
  br label %209

209:                                              ; preds = %196, %207
  %210 = phi i32 [ %200, %196 ], [ %208, %207 ]
  %211 = icmp sgt i32 %210, 5
  br i1 %211, label %212, label %217

212:                                              ; preds = %209
  %213 = load i32*, i32** %69, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %217, label %215

215:                                              ; preds = %212
  %216 = bitcast i32* %213 to i8*
  call void @_ZdaPv(i8* %216) #10
  br label %217

217:                                              ; preds = %209, %212, %215
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %65) #9
  %218 = add nuw nsw i64 %84, 1
  %219 = icmp eq i64 %218, %75
  br i1 %219, label %76, label %83

220:                                              ; preds = %287, %58, %76
  ret void

221:                                              ; preds = %287, %77
  %222 = phi i64 [ 0, %77 ], [ %288, %287 ]
  %223 = load %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %78, align 8
  %224 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %223, i64 %222
  %225 = ptrtoint %"class.tflite::RuntimeShape"* %224 to i64
  %226 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %79, align 8
  %227 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %29, align 8
  %228 = icmp ult %"class.tflite::RuntimeShape"** %226, %227
  %229 = ptrtoint %"class.tflite::RuntimeShape"** %227 to i64
  br i1 %228, label %230, label %234

230:                                              ; preds = %221
  %231 = bitcast %"class.tflite::RuntimeShape"** %226 to i64*
  store i64 %225, i64* %231, align 8
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %226, i64 1
  %233 = ptrtoint %"class.tflite::RuntimeShape"** %232 to i64
  store i64 %233, i64* %80, align 8
  br label %287

234:                                              ; preds = %221
  %235 = ptrtoint %"class.tflite::RuntimeShape"** %226 to i64
  %236 = load i64, i64* %32, align 8
  %237 = sub i64 %235, %236
  %238 = ashr exact i64 %237, 3
  %239 = add nsw i64 %238, 1
  %240 = icmp ugt i64 %239, 2305843009213693951
  br i1 %240, label %241, label %243

241:                                              ; preds = %234
  %242 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %242) #11
  unreachable

243:                                              ; preds = %234
  %244 = sub i64 %229, %236
  %245 = ashr exact i64 %244, 3
  %246 = icmp ult i64 %245, 1152921504606846975
  br i1 %246, label %247, label %255

247:                                              ; preds = %243
  %248 = ashr exact i64 %244, 2
  %249 = icmp ult i64 %248, %239
  %250 = select i1 %249, i64 %239, i64 %248
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %260, label %252

252:                                              ; preds = %247
  %253 = icmp ugt i64 %250, 2305843009213693951
  br i1 %253, label %254, label %255

254:                                              ; preds = %252
  call void @abort() #11
  unreachable

255:                                              ; preds = %252, %243
  %256 = phi i64 [ %250, %252 ], [ 2305843009213693951, %243 ]
  %257 = shl i64 %256, 3
  %258 = call i8* @_Znwm(i64 %257) #10
  %259 = bitcast i8* %258 to %"class.tflite::RuntimeShape"**
  br label %260

260:                                              ; preds = %255, %247
  %261 = phi i64 [ %256, %255 ], [ 0, %247 ]
  %262 = phi %"class.tflite::RuntimeShape"** [ %259, %255 ], [ null, %247 ]
  %263 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %238
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %262, i64 %261
  %265 = ptrtoint %"class.tflite::RuntimeShape"** %264 to i64
  %266 = bitcast %"class.tflite::RuntimeShape"** %263 to i64*
  store i64 %225, i64* %266, align 8
  %267 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 1
  %268 = ptrtoint %"class.tflite::RuntimeShape"** %267 to i64
  %269 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  %270 = load i64, i64* %80, align 8
  %271 = ptrtoint %"class.tflite::RuntimeShape"** %269 to i64
  %272 = sub i64 %270, %271
  %273 = ashr exact i64 %272, 3
  %274 = sub nsw i64 0, %273
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"** %263, i64 %274
  %276 = ptrtoint %"class.tflite::RuntimeShape"** %275 to i64
  %277 = icmp sgt i64 %272, 0
  br i1 %277, label %278, label %282

278:                                              ; preds = %260
  %279 = bitcast %"class.tflite::RuntimeShape"** %275 to i8*
  %280 = bitcast %"class.tflite::RuntimeShape"** %269 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 %272, i1 false) #9
  %281 = load %"class.tflite::RuntimeShape"**, %"class.tflite::RuntimeShape"*** %81, align 8
  br label %282

282:                                              ; preds = %278, %260
  %283 = phi %"class.tflite::RuntimeShape"** [ %269, %260 ], [ %281, %278 ]
  store i64 %276, i64* %32, align 8
  store i64 %268, i64* %80, align 8
  store i64 %265, i64* %30, align 8
  %284 = icmp eq %"class.tflite::RuntimeShape"** %283, null
  br i1 %284, label %287, label %285

285:                                              ; preds = %282
  %286 = bitcast %"class.tflite::RuntimeShape"** %283 to i8*
  call void @_ZdlPv(i8* %286) #10
  br label %287

287:                                              ; preds = %230, %282, %285
  %288 = add nuw nsw i64 %222, 1
  %289 = icmp eq i64 %288, %82
  br i1 %289, label %220, label %221
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!4 = distinct !{!4, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.unroll.disable"}
!9 = distinct !{!9, !10, !6}
!10 = !{!"llvm.loop.unroll.runtime.disable"}
!11 = distinct !{!11, !8}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = distinct !{!15, !6}
!16 = distinct !{!16, !8}
!17 = distinct !{!17, !10, !6}
!18 = distinct !{!18, !8}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!21 = distinct !{!21, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!24 = distinct !{!24, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
