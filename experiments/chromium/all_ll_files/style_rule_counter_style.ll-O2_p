; ModuleID = '../../third_party/blink/renderer/core/css/style_rule_counter_style.cc'
source_filename = "../../third_party/blink/renderer/core/css/style_rule_counter_style.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.192" }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::StyleRuleBase" = type { i8 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.179", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.std::__1::unique_ptr.35", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.118", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.35" = type { %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.38" = type { %"struct.std::__1::__atomic_base.39" }
%"struct.std::__1::__atomic_base.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__cxx_atomic_impl.41" }
%"struct.std::__1::__cxx_atomic_impl.41" = type { %"struct.std::__1::__cxx_atomic_base_impl.42" }
%"struct.std::__1::__cxx_atomic_base_impl.42" = type { i64 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::Worklist.91"* }
%"class.blink::Worklist.91" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.38" }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.98", %"class.std::__1::__compressed_pair.105", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.112", [4 x i8] }>
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100", %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { i64 }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { float }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.121", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.130" }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.77"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.183" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__cxx_atomic_impl.181" }
%"struct.std::__1::__cxx_atomic_impl.181" = type { %"struct.std::__1::__cxx_atomic_base_impl.182" }
%"struct.std::__1::__cxx_atomic_base_impl.182" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink21StyleRuleCounterStyleC1ERKN3WTF12AtomicStringEPNS_19CSSPropertyValueSetE = hidden unnamed_addr alias void (%"class.blink::StyleRuleCounterStyle"*, %"class.WTF::AtomicString"*, %"class.blink::CSSPropertyValueSet"*), void (%"class.blink::StyleRuleCounterStyle"*, %"class.WTF::AtomicString"*, %"class.blink::CSSPropertyValueSet"*)* @_ZN5blink21StyleRuleCounterStyleC2ERKN3WTF12AtomicStringEPNS_19CSSPropertyValueSetE
@_ZN5blink21StyleRuleCounterStyleC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"*), void (%"class.blink::StyleRuleCounterStyle"*, %"class.blink::StyleRuleCounterStyle"*)* @_ZN5blink21StyleRuleCounterStyleC2ERKS0_
@_ZN5blink21StyleRuleCounterStyleD1Ev = hidden unnamed_addr alias void (%"class.blink::StyleRuleCounterStyle"*), void (%"class.blink::StyleRuleCounterStyle"*)* @_ZN5blink21StyleRuleCounterStyleD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleRuleCounterStyleC2ERKN3WTF12AtomicStringEPNS_19CSSPropertyValueSetE(%"class.blink::StyleRuleCounterStyle"* nocapture, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::CSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 0, i32 0
  store i8 11, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %7, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %8, label %26, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %26

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = zext i32 %16 to i33
  %18 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %17, i33 1) #5
  %19 = extractvalue { i33, i1 } %18, 1
  %20 = extractvalue { i33, i1 } %18, 0
  %21 = icmp slt i33 %20, 0
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %24, !prof !2

23:                                               ; preds = %14
  tail call void @llvm.trap() #5
  unreachable

24:                                               ; preds = %14
  %25 = trunc i33 %20 to i32
  store i32 %25, i32* %15, align 4
  br label %26

26:                                               ; preds = %3, %9, %24
  %27 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 346) #5
  %28 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSValue"* %27, %"class.blink::CSSValue"** %28, align 8
  %29 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 243) #5
  %30 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::CSSValue"* %29, %"class.blink::CSSValue"** %30, align 8
  %31 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 287) #5
  %32 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::CSSValue"* %31, %"class.blink::CSSValue"** %32, align 8
  %33 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 343) #5
  %34 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::CSSValue"* %33, %"class.blink::CSSValue"** %34, align 8
  %35 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 290) #5
  %36 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::CSSValue"* %35, %"class.blink::CSSValue"** %36, align 8
  %37 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 271) #5
  %38 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8, i32 0, i32 0
  store %"class.blink::CSSValue"* %37, %"class.blink::CSSValue"** %38, align 8
  %39 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 141) #5
  %40 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9, i32 0, i32 0
  store %"class.blink::CSSValue"* %39, %"class.blink::CSSValue"** %40, align 8
  %41 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 344) #5
  %42 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.blink::CSSValue"* %41, %"class.blink::CSSValue"** %42, align 8
  %43 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 29) #5
  %44 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11, i32 0, i32 0
  store %"class.blink::CSSValue"* %43, %"class.blink::CSSValue"** %44, align 8
  %45 = tail call %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"* %2, i32 330) #5
  %46 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::CSSValue"* %45, %"class.blink::CSSValue"** %46, align 8
  %47 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 13
  store i32 0, i32* %47, align 8
  ret void
}

declare %"class.blink::CSSValue"* @_ZNK5blink19CSSPropertyValueSet19GetPropertyCSSValueINS_13CSSPropertyIDEEEPKNS_8CSSValueET_(%"class.blink::CSSPropertyValueSet"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleRuleCounterStyleC2ERKS0_(%"class.blink::StyleRuleCounterStyle"* nocapture, %"class.blink::StyleRuleCounterStyle"* nocapture readonly dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #5
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #5
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %2, %10, %25
  %28 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3
  %29 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 3
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.blink::Member"* %28 to i64*
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4
  %34 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 4
  %35 = bitcast %"class.blink::Member"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.blink::Member"* %33 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5
  %39 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 5
  %40 = bitcast %"class.blink::Member"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.blink::Member"* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6
  %44 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 6
  %45 = bitcast %"class.blink::Member"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::Member"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7
  %49 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 7
  %50 = bitcast %"class.blink::Member"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.blink::Member"* %48 to i64*
  store i64 %51, i64* %52, align 8
  %53 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8
  %54 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 8
  %55 = bitcast %"class.blink::Member"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.blink::Member"* %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9
  %59 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 9
  %60 = bitcast %"class.blink::Member"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"class.blink::Member"* %58 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10
  %64 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 10
  %65 = bitcast %"class.blink::Member"* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.blink::Member"* %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11
  %69 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 11
  %70 = bitcast %"class.blink::Member"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.blink::Member"* %68 to i64*
  store i64 %71, i64* %72, align 8
  %73 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  %74 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 12
  %75 = bitcast %"class.blink::Member"* %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.blink::Member"* %73 to i64*
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 13
  %79 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %1, i64 0, i32 13
  %80 = load i32, i32* %79, align 8
  store i32 %80, i32* %78, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleRuleCounterStyleD2Ev(%"class.blink::StyleRuleCounterStyle"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #5
  br label %18

18:                                               ; preds = %1, %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21StyleRuleCounterStyle15HasValidSymbolsEv(%"class.blink::StyleRuleCounterStyle"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %2, align 8
  %4 = tail call i32 @_ZN5blink12CounterStyle24ToCounterStyleSystemEnumEPKNS_8CSSValueE(%"class.blink::CSSValue"* %3) #5
  %5 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10, i32 0, i32 0
  %6 = bitcast %"class.blink::CSSValue"** %5 to %"class.blink::CSSValueList"**
  %7 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11, i32 0, i32 0
  %9 = bitcast %"class.blink::CSSValue"** %8 to %"class.blink::CSSValueList"**
  %10 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %9, align 8
  switch i32 %4, label %33 [
    i32 0, label %11
    i32 1, label %11
    i32 2, label %11
    i32 3, label %17
    i32 4, label %17
    i32 5, label %23
    i32 17, label %29
    i32 6, label %34
    i32 7, label %34
    i32 8, label %34
    i32 9, label %34
    i32 10, label %34
    i32 11, label %34
    i32 12, label %34
    i32 13, label %34
    i32 14, label %34
    i32 15, label %34
    i32 16, label %34
  ]

11:                                               ; preds = %1, %1, %1
  %12 = icmp eq %"class.blink::CSSValueList"* %7, null
  br i1 %12, label %34, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  br label %34

17:                                               ; preds = %1, %1
  %18 = icmp eq %"class.blink::CSSValueList"* %7, null
  br i1 %18, label %34, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp ugt i32 %21, 1
  br label %34

23:                                               ; preds = %1
  %24 = icmp eq %"class.blink::CSSValueList"* %10, null
  br i1 %24, label %34, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br label %34

29:                                               ; preds = %1
  %30 = icmp eq %"class.blink::CSSValueList"* %7, null
  %31 = icmp eq %"class.blink::CSSValueList"* %10, null
  %32 = and i1 %30, %31
  br label %34

33:                                               ; preds = %1
  unreachable

34:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %25, %23, %19, %17, %13, %11, %29
  %35 = phi i1 [ %32, %29 ], [ false, %11 ], [ %16, %13 ], [ false, %17 ], [ %22, %19 ], [ false, %23 ], [ %28, %25 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %35
}

declare i32 @_ZN5blink12CounterStyle24ToCounterStyleSystemEnumEPKNS_8CSSValueE(%"class.blink::CSSValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.blink::Member"* @_ZN5blink21StyleRuleCounterStyle22GetDescriptorReferenceENS_18AtRuleDescriptorIDE(%"class.blink::StyleRuleCounterStyle"* readnone, i32) local_unnamed_addr #2 align 2 {
  switch i32 %1, label %23 [
    i32 36, label %3
    i32 23, label %5
    i32 26, label %7
    i32 33, label %9
    i32 27, label %11
    i32 25, label %13
    i32 15, label %15
    i32 34, label %17
    i32 1, label %19
    i32 30, label %21
  ]

3:                                                ; preds = %2
  %4 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3
  br label %25

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4
  br label %25

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5
  br label %25

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6
  br label %25

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7
  br label %25

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8
  br label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9
  br label %25

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10
  br label %25

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11
  br label %25

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %25

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %25

25:                                               ; preds = %23, %21, %19, %17, %15, %13, %11, %9, %7, %5, %3
  %26 = phi %"class.blink::Member"* [ %24, %23 ], [ %22, %21 ], [ %20, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ]
  ret %"class.blink::Member"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21StyleRuleCounterStyle22NewValueInvalidOrEqualENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"*, i32, %"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %24 [
    i32 36, label %4
    i32 23, label %6
    i32 26, label %8
    i32 33, label %10
    i32 27, label %12
    i32 25, label %14
    i32 15, label %16
    i32 34, label %18
    i32 1, label %20
    i32 30, label %22
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3
  br label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4
  br label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5
  br label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6
  br label %26

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7
  br label %26

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8
  br label %26

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9
  br label %26

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10
  br label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11
  br label %26

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %26

26:                                               ; preds = %4, %6, %8, %10, %12, %14, %16, %18, %20, %22, %24
  %27 = phi %"class.blink::Member"* [ %25, %24 ], [ %23, %22 ], [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  %28 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %28, align 8
  %30 = icmp eq %"class.blink::CSSValue"* %29, %2
  br i1 %30, label %95, label %31

31:                                               ; preds = %26
  %32 = icmp ne %"class.blink::CSSValue"* %29, null
  %33 = icmp ne %"class.blink::CSSValue"* %2, null
  %34 = and i1 %33, %32
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %29, %"class.blink::CSSValue"* nonnull dereferenceable(3) %2) #5
  br i1 %36, label %95, label %37

37:                                               ; preds = %31, %35
  switch i32 %1, label %95 [
    i32 36, label %38
    i32 34, label %44
    i32 1, label %44
  ]

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %39, align 8
  %41 = tail call i32 @_ZN5blink12CounterStyle24ToCounterStyleSystemEnumEPKNS_8CSSValueE(%"class.blink::CSSValue"* %40) #5
  %42 = tail call i32 @_ZN5blink12CounterStyle24ToCounterStyleSystemEnumEPKNS_8CSSValueE(%"class.blink::CSSValue"* %2) #5
  %43 = icmp eq i32 %41, %42
  br label %95

44:                                               ; preds = %37, %37
  %45 = bitcast %"class.blink::Member"* %27 to i64*
  %46 = load i64, i64* %45, align 8, !noalias !3
  %47 = ptrtoint %"class.blink::CSSValue"* %2 to i64
  store atomic i64 %47, i64* %45 monotonic, align 8, !noalias !3
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4, !noalias !3
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 0
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #5, !noalias !3
  br label %53

53:                                               ; preds = %44, %50
  %54 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %54, align 8
  %56 = tail call i32 @_ZN5blink12CounterStyle24ToCounterStyleSystemEnumEPKNS_8CSSValueE(%"class.blink::CSSValue"* %55) #5
  %57 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10, i32 0, i32 0
  %58 = bitcast %"class.blink::CSSValue"** %57 to %"class.blink::CSSValueList"**
  %59 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11, i32 0, i32 0
  %61 = bitcast %"class.blink::CSSValue"** %60 to %"class.blink::CSSValueList"**
  %62 = load %"class.blink::CSSValueList"*, %"class.blink::CSSValueList"** %61, align 8
  switch i32 %56, label %85 [
    i32 0, label %63
    i32 1, label %63
    i32 2, label %63
    i32 3, label %69
    i32 4, label %69
    i32 5, label %75
    i32 17, label %81
    i32 6, label %86
    i32 7, label %86
    i32 8, label %86
    i32 9, label %86
    i32 10, label %86
    i32 11, label %86
    i32 12, label %86
    i32 13, label %86
    i32 14, label %86
    i32 15, label %86
    i32 16, label %86
  ]

63:                                               ; preds = %53, %53, %53
  %64 = icmp eq %"class.blink::CSSValueList"* %59, null
  br i1 %64, label %86, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp ne i32 %67, 0
  br label %86

69:                                               ; preds = %53, %53
  %70 = icmp eq %"class.blink::CSSValueList"* %59, null
  br i1 %70, label %86, label %71

71:                                               ; preds = %69
  %72 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp ugt i32 %73, 1
  br label %86

75:                                               ; preds = %53
  %76 = icmp eq %"class.blink::CSSValueList"* %62, null
  br i1 %76, label %86, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.blink::CSSValueList", %"class.blink::CSSValueList"* %62, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp ne i32 %79, 0
  br label %86

81:                                               ; preds = %53
  %82 = icmp eq %"class.blink::CSSValueList"* %59, null
  %83 = icmp eq %"class.blink::CSSValueList"* %62, null
  %84 = and i1 %82, %83
  br label %86

85:                                               ; preds = %53
  unreachable

86:                                               ; preds = %53, %53, %53, %53, %53, %53, %53, %53, %53, %53, %53, %63, %65, %69, %71, %75, %77, %81
  %87 = phi i1 [ %84, %81 ], [ false, %63 ], [ %68, %65 ], [ false, %69 ], [ %74, %71 ], [ false, %75 ], [ %80, %77 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ], [ true, %53 ]
  %88 = icmp eq %"class.blink::Member"* %27, null
  br i1 %88, label %95, label %89

89:                                               ; preds = %86
  store atomic i64 %46, i64* %45 monotonic, align 8
  %90 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %89
  %93 = inttoptr i64 %46 to i8*
  %94 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %93) #5
  br label %95

95:                                               ; preds = %26, %92, %89, %86, %37, %35, %38
  %96 = phi i1 [ %43, %38 ], [ false, %35 ], [ true, %37 ], [ %87, %86 ], [ %87, %89 ], [ %87, %92 ], [ false, %26 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21StyleRuleCounterStyle18SetDescriptorValueENS_18AtRuleDescriptorIDEPKNS_8CSSValueE(%"class.blink::StyleRuleCounterStyle"* nocapture, i32, %"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %24 [
    i32 36, label %4
    i32 23, label %6
    i32 26, label %8
    i32 33, label %10
    i32 27, label %12
    i32 25, label %14
    i32 15, label %16
    i32 34, label %18
    i32 1, label %20
    i32 30, label %22
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3
  br label %26

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4
  br label %26

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5
  br label %26

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6
  br label %26

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7
  br label %26

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8
  br label %26

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9
  br label %26

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10
  br label %26

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11
  br label %26

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %26

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  br label %26

26:                                               ; preds = %4, %6, %8, %10, %12, %14, %16, %18, %20, %22, %24
  %27 = phi %"class.blink::Member"* [ %25, %24 ], [ %23, %22 ], [ %21, %20 ], [ %19, %18 ], [ %17, %16 ], [ %15, %14 ], [ %13, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ %5, %4 ]
  %28 = ptrtoint %"class.blink::CSSValue"* %2 to i64
  %29 = bitcast %"class.blink::Member"* %27 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %2, i64 0, i32 0
  %34 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #5
  br label %35

35:                                               ; preds = %26, %32
  %36 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 13
  %37 = load i32, i32* %36, align 8
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %36, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21StyleRuleCounterStyle18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::StyleRuleCounterStyle"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSValue"*
  %9 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %8, i64 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 4
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = inttoptr i64 %17 to %"class.blink::CSSValue"*
  %21 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %20, i64 0, i32 0
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %23, i64 5
  %25 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8* %21, i8* %21, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %26

26:                                               ; preds = %14, %19
  %27 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 5
  %28 = bitcast %"class.blink::Member"* %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %38, label %31

31:                                               ; preds = %26
  %32 = inttoptr i64 %29 to %"class.blink::CSSValue"*
  %33 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %32, i64 0, i32 0
  %34 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %1, i8* %33, i8* %33, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %38

38:                                               ; preds = %26, %31
  %39 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 6
  %40 = bitcast %"class.blink::Member"* %39 to i64*
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = inttoptr i64 %41 to %"class.blink::CSSValue"*
  %45 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %44, i64 0, i32 0
  %46 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %47 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, i64 5
  %49 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %48, align 8
  tail call void %49(%"class.blink::Visitor"* %1, i8* %45, i8* %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %50

50:                                               ; preds = %38, %43
  %51 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 7
  %52 = bitcast %"class.blink::Member"* %51 to i64*
  %53 = load atomic i64, i64* %52 monotonic, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %62, label %55

55:                                               ; preds = %50
  %56 = inttoptr i64 %53 to %"class.blink::CSSValue"*
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %56, i64 0, i32 0
  %58 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %59 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, i64 5
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %60, align 8
  tail call void %61(%"class.blink::Visitor"* %1, i8* %57, i8* %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %62

62:                                               ; preds = %50, %55
  %63 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 8
  %64 = bitcast %"class.blink::Member"* %63 to i64*
  %65 = load atomic i64, i64* %64 monotonic, align 8
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %74, label %67

67:                                               ; preds = %62
  %68 = inttoptr i64 %65 to %"class.blink::CSSValue"*
  %69 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %68, i64 0, i32 0
  %70 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %71 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, i64 5
  %73 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, align 8
  tail call void %73(%"class.blink::Visitor"* %1, i8* %69, i8* %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %74

74:                                               ; preds = %62, %67
  %75 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 9
  %76 = bitcast %"class.blink::Member"* %75 to i64*
  %77 = load atomic i64, i64* %76 monotonic, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %86, label %79

79:                                               ; preds = %74
  %80 = inttoptr i64 %77 to %"class.blink::CSSValue"*
  %81 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %80, i64 0, i32 0
  %82 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %83, i64 5
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %84, align 8
  tail call void %85(%"class.blink::Visitor"* %1, i8* %81, i8* %81, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %86

86:                                               ; preds = %74, %79
  %87 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 10
  %88 = bitcast %"class.blink::Member"* %87 to i64*
  %89 = load atomic i64, i64* %88 monotonic, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %98, label %91

91:                                               ; preds = %86
  %92 = inttoptr i64 %89 to %"class.blink::CSSValue"*
  %93 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %92, i64 0, i32 0
  %94 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %1, i8* %93, i8* %93, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %98

98:                                               ; preds = %86, %91
  %99 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 11
  %100 = bitcast %"class.blink::Member"* %99 to i64*
  %101 = load atomic i64, i64* %100 monotonic, align 8
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %98
  %104 = inttoptr i64 %101 to %"class.blink::CSSValue"*
  %105 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %104, i64 0, i32 0
  %106 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %107 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %107, i64 5
  %109 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %108, align 8
  tail call void %109(%"class.blink::Visitor"* %1, i8* %105, i8* %105, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %110

110:                                              ; preds = %98, %103
  %111 = getelementptr inbounds %"class.blink::StyleRuleCounterStyle", %"class.blink::StyleRuleCounterStyle"* %0, i64 0, i32 12
  %112 = bitcast %"class.blink::Member"* %111 to i64*
  %113 = load atomic i64, i64* %112 monotonic, align 8
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %122, label %115

115:                                              ; preds = %110
  %116 = inttoptr i64 %113 to %"class.blink::CSSValue"*
  %117 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %116, i64 0, i32 0
  %118 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %119 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %119, i64 5
  %121 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %120, align 8
  tail call void %121(%"class.blink::Visitor"* %1, i8* %117, i8* %117, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv) #5
  br label %122

122:                                              ; preds = %110, %115
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #5
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__18exchangeIN5blink6MemberIKNS1_8CSSValueEEERPS4_EET_RS8_OT0_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__18exchangeIN5blink6MemberIKNS1_8CSSValueEEERPS4_EET_RS8_OT0_"}
