; ModuleID = '../../third_party/blink/renderer/modules/accessibility/ax_inline_text_box.cc'
source_filename = "../../third_party/blink/renderer/modules/accessibility/ax_inline_text_box.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1594", i64 }
%"class.std::__1::vector.1594" = type { %"class.std::__1::__vector_base.1595" }
%"class.std::__1::__vector_base.1595" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1596" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1596" = type { %"struct.std::__1::__compressed_pair_elem.1597" }
%"struct.std::__1::__compressed_pair_elem.1597" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::AXInlineTextBox" = type { %"class.blink::AXObject", %class.scoped_refptr.1739 }
%"class.blink::AXObject" = type { i32 (...)**, i32, %"class.blink::Member.1644", %"class.blink::HeapVector.1646", i8, i32, %"class.blink::LayoutRect", i32, i32, i8, %"class.blink::Member.1644", i32, i32, %"class.blink::FloatRect", %"class.blink::Member.1653" }
%"class.blink::HeapVector.1646" = type { %"class.WTF::Vector.1649" }
%"class.WTF::Vector.1649" = type { %"class.WTF::VectorBuffer.1650" }
%"class.WTF::VectorBuffer.1650" = type { %"class.WTF::VectorBufferBase.1651" }
%"class.WTF::VectorBufferBase.1651" = type { %"class.blink::Member.1644"*, i32, i32 }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.1644" = type { %"class.blink::MemberBase.1645" }
%"class.blink::MemberBase.1645" = type { %"class.blink::AXObject"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::AXObjectCacheImpl"* }
%class.scoped_refptr.1739 = type { %"class.blink::AbstractInlineTextBox"* }
%"class.blink::AbstractInlineTextBox" = type { i32 (...)**, %"class.WTF::RefCounted.1740", %"class.blink::LineLayoutText" }
%"class.WTF::RefCounted.1740" = type { %"class.base::RefCounted.1741" }
%"class.base::RefCounted.1741" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::LineLayoutText" = type { %"class.blink::LineLayoutItem" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1601", [4 x i8] }>
%"class.WTF::RefCounted.1601" = type { %"class.base::RefCounted.1602" }
%"class.base::RefCounted.1602" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1928 }
%class.scoped_refptr.1928 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.1929", %"class.WTF::Vector.630", %"class.WTF::Vector.1931", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.1929" = type { %"class.base::RefCounted.1930" }
%"class.base::RefCounted.1930" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.1931" = type { %"class.WTF::VectorBuffer.1932" }
%"class.WTF::VectorBuffer.1932" = type { %"class.WTF::VectorBufferBase.1933" }
%"class.WTF::VectorBufferBase.1933" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.1934 }
%union.anon.1934 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.906", %"class.WTF::Vector.906", i8, i32, %"class.blink::Member.913", %"class.blink::Member.915", %"class.blink::Member.917", %"class.blink::Member.919", %"class.blink::Member.921", %"class.blink::Member.923", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.931", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.937", %"class.blink::Member.939", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.942", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.967", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.976", double, double, i64, i64, %"class.blink::HeapHashSet.978", %"class.blink::HeapHashSet.985", i16, i8, %"class.blink::Member.992", %"class.blink::Member.994", %"class.blink::Member.1318", %"class.blink::Member.1320", %"class.blink::TextLinkColors", %"class.blink::Member.1322", i8, [7 x i8], %"class.blink::HeapHashMap.1324", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1331", %"class.blink::Member.1336", %"class.blink::Member.1338", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1340", %"class.blink::HeapVector.1342", %"class.std::__1::unique_ptr.1350", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1356", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1369", %"class.WTF::Vector.1371", i8, i8, %"class.std::__1::unique_ptr.1376", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1382", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1390", i8, i32, %"class.blink::Member.1392", %"class.blink::Member.1394", %"class.blink::Member.1396", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1398", %"class.WTF::HashMap.1400", %"class.blink::Member.1405", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::Member.1411", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1413", i8, i32, %"class.blink::Member.1420", %"class.blink::Member.1422", i32, %"class.blink::Member.1424", %"class.blink::Member.1426", %"class.blink::Member.1428", %"class.std::__1::unique_ptr.1430", i64, %"class.std::__1::unique_ptr.1436", i32, i32, %"class.blink::Member.1447", %"class.blink::Member.1449", %"class.blink::Member.1451", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1453", %"class.WTF::Vector.1455", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1460", %"class.blink::Member.1467", %"class.std::__1::unique_ptr.1469", %"class.blink::Member.1475", i8, i8, %"class.WTF::String", %"class.blink::Member.1477", i8, [7 x i8], %"class.blink::HeapHashMap.1479", %"class.blink::HeapObserverSet", %"class.blink::Member.1493", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1495", i32, i8, i8, %"class.blink::WeakMember.1497", %"class.blink::Member.1498" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.899" }
%"class.blink::HeapHashMap.899" = type { %"class.WTF::HashMap.902" }
%"class.WTF::HashMap.902" = type { %"class.WTF::HashTable.903" }
%"class.WTF::HashTable.903" = type <{ %"struct.WTF::KeyValuePair.905"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.905" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.906" = type { %"class.WTF::VectorBuffer.907" }
%"class.WTF::VectorBuffer.907" = type { %"class.WTF::VectorBufferBase.908" }
%"class.WTF::VectorBufferBase.908" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.909 }
%class.scoped_refptr.909 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.910", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.910" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.913" = type { %"class.blink::MemberBase.914" }
%"class.blink::MemberBase.914" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.915" = type { %"class.blink::MemberBase.916" }
%"class.blink::MemberBase.916" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1522", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1563", i32, i8, [3 x i8], %"class.blink::HeapVector.1565", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1573", %"class.blink::Member.1575", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1584", %"class.blink::Member.1590", %"class.blink::Member.1592", i8, [7 x i8] }>
%"class.blink::Supplementable.1522" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1523" }
%"class.blink::HeapHashMap.1523" = type { %"class.WTF::HashMap.1526" }
%"class.WTF::HashMap.1526" = type { %"class.WTF::HashTable.1527" }
%"class.WTF::HashTable.1527" = type <{ %"struct.WTF::KeyValuePair.1529"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1529" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1538" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1530" }
%"class.blink::HeapObserverSet.1530" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1531" }
%"class.blink::HeapHashSet.1531" = type { %"class.WTF::HashSet.1534" }
%"class.WTF::HashSet.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"class.blink::WeakMember.1537"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1537" = type opaque
%"class.blink::Supplementable.1538" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1539" }
%"class.blink::HeapHashMap.1539" = type { %"class.WTF::HashMap.1542" }
%"class.WTF::HashMap.1542" = type { %"class.WTF::HashTable.1543" }
%"class.WTF::HashTable.1543" = type <{ %"struct.WTF::KeyValuePair.1545"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1545" = type { i8*, %"class.blink::Member.1914" }
%"class.blink::Member.1914" = type { %"class.blink::MemberBase.1915" }
%"class.blink::MemberBase.1915" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1916" }
%"class.blink::Member.1916" = type { %"class.blink::MemberBase.1917" }
%"class.blink::MemberBase.1917" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1546, %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1547", %"class.std::__1::unique_ptr.1553", %"class.std::__1::unique_ptr.1553", %"class.blink::Member.915", i32, [4 x i8], %"class.WTF::HashSet.1559", i32, i32 }
%class.scoped_refptr.1546 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1632", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1634", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1639 }
%"class.WTF::RefCounted.1632" = type { %"class.base::RefCounted.1633" }
%"class.base::RefCounted.1633" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1634" = type { %"class.absl::optional_internal::optional_data.1635" }
%"class.absl::optional_internal::optional_data.1635" = type { %"class.absl::optional_internal::optional_data_base.1636" }
%"class.absl::optional_internal::optional_data_base.1636" = type { %"class.absl::optional_internal::optional_data_dtor_base.1637" }
%"class.absl::optional_internal::optional_data_dtor_base.1637" = type { i8, %union.anon.1638 }
%union.anon.1638 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1639 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1547" = type { %"class.std::__1::__compressed_pair.1548" }
%"class.std::__1::__compressed_pair.1548" = type { %"struct.std::__1::__compressed_pair_elem.1549" }
%"struct.std::__1::__compressed_pair_elem.1549" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1553" = type { %"class.std::__1::__compressed_pair.1554" }
%"class.std::__1::__compressed_pair.1554" = type { %"struct.std::__1::__compressed_pair_elem.1555" }
%"struct.std::__1::__compressed_pair_elem.1555" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1559" = type { %"class.WTF::HashTable.1560" }
%"class.WTF::HashTable.1560" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1565" = type { %"class.WTF::Vector.1568" }
%"class.WTF::Vector.1568" = type { %"class.WTF::VectorBuffer.1569" }
%"class.WTF::VectorBuffer.1569" = type { %"class.WTF::VectorBufferBase.1570" }
%"class.WTF::VectorBufferBase.1570" = type { %"class.blink::Member.1571"*, i32, i32 }
%"class.blink::Member.1571" = type opaque
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1575" = type { %"class.blink::MemberBase.1576" }
%"class.blink::MemberBase.1576" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1577", i32, i32 }
%"class.blink::HeapHashMap.1577" = type { %"class.WTF::HashMap.1580" }
%"class.WTF::HashMap.1580" = type { %"class.WTF::HashTable.1581" }
%"class.WTF::HashTable.1581" = type <{ %"struct.WTF::KeyValuePair.1583"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1583" = type opaque
%"class.std::__1::unique_ptr.1584" = type { %"class.std::__1::__compressed_pair.1585" }
%"class.std::__1::__compressed_pair.1585" = type { %"struct.std::__1::__compressed_pair_elem.1586" }
%"struct.std::__1::__compressed_pair_elem.1586" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1590" = type { %"class.blink::MemberBase.1591" }
%"class.blink::MemberBase.1591" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.917" = type { %"class.blink::MemberBase.918" }
%"class.blink::MemberBase.918" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.919" = type { %"class.blink::MemberBase.920" }
%"class.blink::MemberBase.920" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.921" = type { %"class.blink::MemberBase.922" }
%"class.blink::MemberBase.922" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.923" = type { %"class.blink::MemberBase.924" }
%"class.blink::MemberBase.924" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.931" = type { %"class.std::__1::__compressed_pair.932" }
%"class.std::__1::__compressed_pair.932" = type { %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.925" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.925" = type { %"class.std::__1::__compressed_pair.926" }
%"class.std::__1::__compressed_pair.926" = type { %"struct.std::__1::__compressed_pair_elem.927" }
%"struct.std::__1::__compressed_pair_elem.927" = type { %"class.blink::KURL"* }
%"class.blink::Member.937" = type { %"class.blink::MemberBase.938" }
%"class.blink::MemberBase.938" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.939" = type { %"class.blink::MemberBase.940" }
%"class.blink::MemberBase.940" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.941 }
%class.scoped_refptr.941 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.942" = type { %"class.WTF::VectorBuffer.943" }
%"class.WTF::VectorBuffer.943" = type { %"class.WTF::VectorBufferBase.944" }
%"class.WTF::VectorBufferBase.944" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.945 }
%class.scoped_refptr.945 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.946", i32, i32, %"class.blink::Persistent.948" }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.948" = type { %"class.blink::PersistentBase.949" }
%"class.blink::PersistentBase.949" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.952" }
%"class.blink::HeapHashMap.952" = type { %"class.WTF::HashMap.955" }
%"class.WTF::HashMap.955" = type { %"class.WTF::HashTable.956" }
%"class.WTF::HashTable.956" = type <{ %"struct.WTF::KeyValuePair.958"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.958" = type { %"class.blink::WeakMember.959", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.959" = type { %"class.blink::MemberBase.960" }
%"class.blink::MemberBase.960" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.967" = type { %"class.blink::MemberBase.968" }
%"class.blink::MemberBase.968" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.969" }
%"class.blink::HeapHashMap.969" = type { %"class.WTF::HashMap.972" }
%"class.WTF::HashMap.972" = type { %"class.WTF::HashTable.973" }
%"class.WTF::HashTable.973" = type <{ %"struct.WTF::KeyValuePair.975"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.975" = type opaque
%"class.blink::Member.976" = type { %"class.blink::MemberBase.977" }
%"class.blink::MemberBase.977" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.978" = type { %"class.WTF::HashSet.981" }
%"class.WTF::HashSet.981" = type { %"class.WTF::HashTable.982" }
%"class.WTF::HashTable.982" = type <{ %"class.blink::WeakMember.984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.984" = type opaque
%"class.blink::HeapHashSet.985" = type { %"class.WTF::HashSet.988" }
%"class.WTF::HashSet.988" = type { %"class.WTF::HashTable.989" }
%"class.WTF::HashTable.989" = type <{ %"class.blink::WeakMember.991"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.991" = type opaque
%"class.blink::Member.992" = type { %"class.blink::MemberBase.993" }
%"class.blink::MemberBase.993" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.994" = type { %"class.blink::MemberBase.995" }
%"class.blink::MemberBase.995" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.998", %"class.blink::Member.1025", %"class.blink::HeapHashMap.1027", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1034", %"class.blink::HeapHashSet.1034", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1040", %"class.blink::Member.1052", %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1089", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1251", %"class.blink::Member.1257", %"class.blink::HeapHashMap.1259", %"class.blink::HeapHashMap.1266", %"class.std::__1::unique_ptr.1273", i32, %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1279", %"class.blink::HeapVector.1010", %"class.blink::HeapHashSet.1287", %"class.blink::HeapHashMap.1294", %"class.blink::Member.1301", %"class.blink::HeapHashMap.1303", %class.scoped_refptr.1310, %class.scoped_refptr.259, %"class.blink::Member.1215", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1311", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1002", %"class.blink::HeapVector.1010", i8 }>
%"class.blink::HeapVector.1002" = type { %"class.WTF::Vector.1005" }
%"class.WTF::Vector.1005" = type { %"class.WTF::VectorBuffer.1006" }
%"class.WTF::VectorBuffer.1006" = type { %"class.WTF::VectorBufferBase.1007" }
%"class.WTF::VectorBufferBase.1007" = type { %"class.blink::Member.1008"*, i32, i32 }
%"class.blink::Member.1008" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1021", %"class.blink::Member.1023", %"class.blink::Member.1023", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1021" = type <{ %"class.blink::Member.1023"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1023", %"class.blink::Member.1023" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1027" = type { %"class.WTF::HashMap.1030" }
%"class.WTF::HashMap.1030" = type { %"class.WTF::HashTable.1031" }
%"class.WTF::HashTable.1031" = type <{ %"struct.WTF::KeyValuePair.1033"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1033" = type opaque
%"class.blink::HeapHashSet.1034" = type { %"class.WTF::HashSet.1037" }
%"class.WTF::HashSet.1037" = type { %"class.WTF::HashTable.1038" }
%"class.WTF::HashTable.1038" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1040" = type { %"class.blink::MemberBase.1041" }
%"class.blink::MemberBase.1041" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1042", %"class.blink::Member.1044" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1042" = type { %"class.blink::MemberBase.1043" }
%"class.blink::MemberBase.1043" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1044" = type { %"class.blink::MemberBase.1045" }
%"class.blink::MemberBase.1045" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1048", %"class.blink::Member.1050" }
%"class.blink::Member.1048" = type { %"class.blink::MemberBase.1049" }
%"class.blink::MemberBase.1049" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1513", %"class.blink::Member.1044", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.817] }
%"class.blink::HeapVector.1513" = type { %"class.WTF::Vector.1516" }
%"class.WTF::Vector.1516" = type { %"class.WTF::VectorBuffer.1517" }
%"class.WTF::VectorBuffer.1517" = type { %"class.WTF::VectorBufferBase.1518" }
%"class.WTF::VectorBufferBase.1518" = type { %"class.blink::Member.1050"*, i32, i32 }
%class.sk_sp.817 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.818, i32, %"class.absl::optional.819", i8, i32 }
%class.sk_sp.818 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.819" = type { %"class.absl::optional_internal::optional_data.820" }
%"class.absl::optional_internal::optional_data.820" = type { %"class.absl::optional_internal::optional_data_base.821" }
%"class.absl::optional_internal::optional_data_base.821" = type { %"class.absl::optional_internal::optional_data_dtor_base.822" }
%"class.absl::optional_internal::optional_data_dtor_base.822" = type { i8, %union.anon.823 }
%union.anon.823 = type { %struct.SkRect }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1025", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1056" }
%"class.blink::HeapHashMap.1056" = type { %"class.WTF::HashMap.1059" }
%"class.WTF::HashMap.1059" = type { %"class.WTF::HashTable.1060" }
%"class.WTF::HashTable.1060" = type <{ %"struct.WTF::KeyValuePair.1062"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1062" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1063", %"class.std::__1::unique_ptr.1075" }
%"class.blink::HeapVector.1063" = type { %"class.WTF::Vector.1066" }
%"class.WTF::Vector.1066" = type { %"class.WTF::VectorBuffer.1067" }
%"class.WTF::VectorBuffer.1067" = type { %"class.WTF::VectorBufferBase.1068" }
%"class.WTF::VectorBufferBase.1068" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1069" }
%"class.WTF::Vector.1069" = type { %"class.WTF::VectorBuffer.1070" }
%"class.WTF::VectorBuffer.1070" = type { %"class.WTF::VectorBufferBase.1071", [16 x i8] }
%"class.WTF::VectorBufferBase.1071" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1075" = type { %"class.std::__1::__compressed_pair.1076" }
%"class.std::__1::__compressed_pair.1076" = type { %"struct.std::__1::__compressed_pair_elem.1077" }
%"struct.std::__1::__compressed_pair_elem.1077" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1087", i8, [7 x i8] }>
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1111", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1093", %"class.WTF::HashMap.1098", %class.scoped_refptr.1103, %class.scoped_refptr.1110, %class.scoped_refptr.1109, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1093" = type { %"class.WTF::HashTable.1094" }
%"class.WTF::HashTable.1094" = type <{ %"struct.WTF::KeyValuePair.1097"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1097" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1942 }
%class.scoped_refptr.1942 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1104" = type { %"class.base::RefCounted.1105" }
%"class.base::RefCounted.1105" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1106" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1107" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1108" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1098" = type { %"class.WTF::HashTable.1099" }
%"class.WTF::HashTable.1099" = type <{ %"struct.WTF::KeyValuePair.1102"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1102" = type opaque
%class.scoped_refptr.1103 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1109, %class.scoped_refptr.1109 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1104", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1106", %"union.blink::InvalidationSet::Backing.1107", %"union.blink::InvalidationSet::Backing.1108", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1110 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1109 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapHashMap.1115", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::HeapVector.1122", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1158", %"class.blink::HeapVector.1166", %"class.blink::HeapVector.1174", %"class.blink::HeapVector.1191", %"class.blink::HeapVector.1199", %"class.blink::HeapVector.1207", %"class.blink::HeapVector.1220", %"class.WTF::Vector.1227", i32, %"class.blink::Member.1233" }
%"class.blink::HeapHashMap.1115" = type { %"class.WTF::HashMap.1118" }
%"class.WTF::HashMap.1118" = type { %"class.WTF::HashTable.1119" }
%"class.WTF::HashTable.1119" = type <{ %"struct.WTF::KeyValuePair.1121"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1121" = type { %"class.WTF::AtomicString", %"class.blink::Member.1952" }
%"class.blink::Member.1952" = type { %"class.blink::MemberBase.1953" }
%"class.blink::MemberBase.1953" = type { %"class.blink::HeapVector.1122"* }
%"class.blink::HeapVector.1122" = type { %"class.WTF::Vector.1125" }
%"class.WTF::Vector.1125" = type { %"class.WTF::VectorBuffer.1126" }
%"class.WTF::VectorBuffer.1126" = type { %"class.WTF::VectorBufferBase.1127" }
%"class.WTF::VectorBufferBase.1127" = type { %"class.blink::Member.1128"*, i32, i32 }
%"class.blink::Member.1128" = type { %"class.blink::MemberBase.1129" }
%"class.blink::MemberBase.1129" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1132", i64, [4 x i32] }
%"class.blink::Member.1132" = type { %"class.blink::MemberBase.1133" }
%"class.blink::MemberBase.1133" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1153" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1158" = type { %"class.WTF::Vector.1161" }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { %"class.blink::Member.1164"*, i32, i32 }
%"class.blink::Member.1164" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1166" = type { %"class.WTF::Vector.1169" }
%"class.WTF::Vector.1169" = type { %"class.WTF::VectorBuffer.1170" }
%"class.WTF::VectorBuffer.1170" = type { %"class.WTF::VectorBufferBase.1171" }
%"class.WTF::VectorBufferBase.1171" = type { %"class.blink::Member.1172"*, i32, i32 }
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1949" }
%"class.blink::MemberBase.1949" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1174" = type { %"class.WTF::Vector.1177" }
%"class.WTF::Vector.1177" = type { %"class.WTF::VectorBuffer.1178" }
%"class.WTF::VectorBuffer.1178" = type { %"class.WTF::VectorBufferBase.1179" }
%"class.WTF::VectorBufferBase.1179" = type { %"class.blink::Member.1180"*, i32, i32 }
%"class.blink::Member.1180" = type { %"class.blink::MemberBase.1181" }
%"class.blink::MemberBase.1181" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1182", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1182" = type { %"class.WTF::Vector.1185" }
%"class.WTF::Vector.1185" = type { %"class.WTF::VectorBuffer.1186" }
%"class.WTF::VectorBuffer.1186" = type { %"class.WTF::VectorBufferBase.1187" }
%"class.WTF::VectorBufferBase.1187" = type { %"class.blink::Member.1188"*, i32, i32 }
%"class.blink::Member.1188" = type opaque
%"class.blink::HeapVector.1191" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Member.1197"*, i32, i32 }
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1199" = type { %"class.WTF::Vector.1202" }
%"class.WTF::Vector.1202" = type { %"class.WTF::VectorBuffer.1203" }
%"class.WTF::VectorBuffer.1203" = type { %"class.WTF::VectorBufferBase.1204" }
%"class.WTF::VectorBufferBase.1204" = type { %"class.blink::Member.1205"*, i32, i32 }
%"class.blink::Member.1205" = type { %"class.blink::MemberBase.1951" }
%"class.blink::MemberBase.1951" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", i32, [4 x i8] }>
%"class.blink::HeapVector.1207" = type { %"class.WTF::Vector.1210" }
%"class.WTF::Vector.1210" = type { %"class.WTF::VectorBuffer.1211" }
%"class.WTF::VectorBuffer.1211" = type { %"class.WTF::VectorBufferBase.1212" }
%"class.WTF::VectorBufferBase.1212" = type { %"class.blink::Member.1213"*, i32, i32 }
%"class.blink::Member.1213" = type { %"class.blink::MemberBase.1214" }
%"class.blink::MemberBase.1214" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215", %"class.blink::Member.1215" }
%"class.blink::HeapVector.1220" = type { %"class.WTF::Vector.1223" }
%"class.WTF::Vector.1223" = type { %"class.WTF::VectorBuffer.1224" }
%"class.WTF::VectorBuffer.1224" = type { %"class.WTF::VectorBufferBase.1225" }
%"class.WTF::VectorBufferBase.1225" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1132", i32, i32 }
%"class.WTF::Vector.1227" = type { %"class.WTF::VectorBuffer.1228" }
%"class.WTF::VectorBuffer.1228" = type { %"class.WTF::VectorBufferBase.1229" }
%"class.WTF::VectorBufferBase.1229" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1230, i8, [7 x i8] }>
%class.scoped_refptr.1230 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237", %"class.blink::HeapHashMap.1237" }
%"class.blink::HeapHashMap.1237" = type { %"class.WTF::HashMap.1240" }
%"class.WTF::HashMap.1240" = type { %"class.WTF::HashTable.1241" }
%"class.WTF::HashTable.1241" = type <{ %"struct.WTF::KeyValuePair.1243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1243" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1244" }
%"class.blink::HeapHashMap.1244" = type { %"class.WTF::HashMap.1247" }
%"class.WTF::HashMap.1247" = type { %"class.WTF::HashTable.1248" }
%"class.WTF::HashTable.1248" = type <{ %"struct.WTF::KeyValuePair.1250"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1250" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1943", %"class.WTF::Vector.1943" }
%"class.WTF::Vector.1943" = type { %"class.WTF::VectorBuffer.1944" }
%"class.WTF::VectorBuffer.1944" = type { %"class.WTF::VectorBufferBase.1945" }
%"class.WTF::VectorBufferBase.1945" = type { %class.scoped_refptr.1942*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1251" = type { %"class.WTF::HashSet.1254" }
%"class.WTF::HashSet.1254" = type { %"class.WTF::HashTable.1255" }
%"class.WTF::HashTable.1255" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1257" = type { %"class.blink::MemberBase.1258" }
%"class.blink::MemberBase.1258" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1259" = type { %"class.WTF::HashMap.1262" }
%"class.WTF::HashMap.1262" = type { %"class.WTF::HashTable.1263" }
%"class.WTF::HashTable.1263" = type <{ %"struct.WTF::KeyValuePair.1265"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1265" = type opaque
%"class.blink::HeapHashMap.1266" = type { %"class.WTF::HashMap.1269" }
%"class.WTF::HashMap.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"struct.WTF::KeyValuePair.1272"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1272" = type opaque
%"class.std::__1::unique_ptr.1273" = type { %"class.std::__1::__compressed_pair.1274" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.1275" }
%"struct.std::__1::__compressed_pair_elem.1275" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"struct.std::__1::pair.1285"*, i32, i32 }
%"struct.std::__1::pair.1285" = type opaque
%"class.blink::HeapVector.1010" = type { %"class.WTF::Vector.1013" }
%"class.WTF::Vector.1013" = type { %"class.WTF::VectorBuffer.1014" }
%"class.WTF::VectorBuffer.1014" = type { %"class.WTF::VectorBufferBase.1015" }
%"class.WTF::VectorBufferBase.1015" = type { %"struct.std::__1::pair.1016"*, i32, i32 }
%"struct.std::__1::pair.1016" = type opaque
%"class.blink::HeapHashSet.1287" = type { %"class.WTF::HashSet.1290" }
%"class.WTF::HashSet.1290" = type { %"class.WTF::HashTable.1291" }
%"class.WTF::HashTable.1291" = type <{ %"class.blink::WeakMember.1293"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1293" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1294" = type { %"class.WTF::HashMap.1297" }
%"class.WTF::HashMap.1297" = type { %"class.WTF::HashTable.1298" }
%"class.WTF::HashTable.1298" = type <{ %"struct.WTF::KeyValuePair.1300"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1300" = type { %"class.WTF::AtomicString", %"class.blink::Member.1180" }
%"class.blink::Member.1301" = type { %"class.blink::MemberBase.1302" }
%"class.blink::MemberBase.1302" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1303" = type { %"class.WTF::HashMap.1306" }
%"class.WTF::HashMap.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"struct.WTF::KeyValuePair.1309"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1309" = type opaque
%class.scoped_refptr.1310 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1215" = type { %"class.blink::MemberBase.1216" }
%"class.blink::MemberBase.1216" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1311" = type { %"class.WTF::HashSet.1314" }
%"class.WTF::HashSet.1314" = type { %"class.WTF::HashTable.1315" }
%"class.WTF::HashTable.1315" = type <{ %"class.blink::Member.1317"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1317" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1320" = type { %"class.blink::MemberBase.1321" }
%"class.blink::MemberBase.1321" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type opaque
%"class.WTF::Vector.1331" = type { %"class.WTF::VectorBuffer.1332" }
%"class.WTF::VectorBuffer.1332" = type { %"class.WTF::VectorBufferBase.1333" }
%"class.WTF::VectorBufferBase.1333" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1336" = type { %"class.blink::MemberBase.1337" }
%"class.blink::MemberBase.1337" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1338" = type { %"class.blink::MemberBase.1339" }
%"class.blink::MemberBase.1339" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::HeapHashMap.1605", %"class.blink::DocumentMarker::MarkerTypes", %"class.blink::Member.326" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.966" }
%"class.blink::WeakMember.966" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashMap.1605" = type { %"class.WTF::HashMap.1608" }
%"class.WTF::HashMap.1608" = type { %"class.WTF::HashTable.1609" }
%"class.WTF::HashTable.1609" = type <{ %"struct.WTF::KeyValuePair.1611"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1611" = type opaque
%"class.blink::DocumentMarker::MarkerTypes" = type { i32 }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1340" = type { %"class.blink::MemberBase.1341" }
%"class.blink::MemberBase.1341" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1342" = type { %"class.WTF::Vector.1345" }
%"class.WTF::Vector.1345" = type { %"class.WTF::VectorBuffer.1346" }
%"class.WTF::VectorBuffer.1346" = type { %"class.WTF::VectorBufferBase.1347" }
%"class.WTF::VectorBufferBase.1347" = type { %"class.blink::Member.1348"*, i32, i32 }
%"class.blink::Member.1348" = type opaque
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1356" = type { %"class.WTF::HashSet.1359" }
%"class.WTF::HashSet.1359" = type { %"class.WTF::HashTable.1360" }
%"class.WTF::HashTable.1360" = type <{ %"class.blink::WeakMember.1362"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1362" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1363", i32, [4 x i8] }>
%"class.WTF::Vector.1363" = type { %"class.WTF::VectorBuffer.1364" }
%"class.WTF::VectorBuffer.1364" = type { %"class.WTF::VectorBufferBase.1365" }
%"class.WTF::VectorBufferBase.1365" = type { %"struct.std::__1::pair.1366"*, i32, i32 }
%"struct.std::__1::pair.1366" = type opaque
%"class.blink::Member.1369" = type { %"class.blink::MemberBase.1370" }
%"class.blink::MemberBase.1370" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1376" = type { %"class.std::__1::__compressed_pair.1377" }
%"class.std::__1::__compressed_pair.1377" = type { %"struct.std::__1::__compressed_pair_elem.1378" }
%"struct.std::__1::__compressed_pair_elem.1378" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1382" = type { %"class.WTF::Vector.1385" }
%"class.WTF::Vector.1385" = type { %"class.WTF::VectorBuffer.1386" }
%"class.WTF::VectorBuffer.1386" = type { %"class.WTF::VectorBufferBase.1387" }
%"class.WTF::VectorBufferBase.1387" = type { %"class.blink::Member.1388"*, i32, i32 }
%"class.blink::Member.1388" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1392" = type { %"class.blink::MemberBase.1393" }
%"class.blink::MemberBase.1393" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1394" = type { %"class.blink::MemberBase.1395" }
%"class.blink::MemberBase.1395" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1396" = type { %"class.blink::MemberBase.1397" }
%"class.blink::MemberBase.1397" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1398" = type { %"class.blink::MemberBase.1399" }
%"class.blink::MemberBase.1399" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1400" = type { %"class.WTF::HashTable.1401" }
%"class.WTF::HashTable.1401" = type <{ %"struct.WTF::KeyValuePair.1404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1404" = type opaque
%"class.blink::Member.1405" = type { %"class.blink::MemberBase.1406" }
%"class.blink::MemberBase.1406" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.966", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.963, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.963 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.964" }>
%"class.base::RefCountedThreadSafe.964" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.965 }
%class.scoped_refptr.965 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapHashSet.1413" = type { %"class.WTF::HashSet.1416" }
%"class.WTF::HashSet.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"class.blink::Member.1419"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1419" = type opaque
%"class.blink::Member.1420" = type { %"class.blink::MemberBase.1421" }
%"class.blink::MemberBase.1421" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1424" = type { %"class.blink::MemberBase.1425" }
%"class.blink::MemberBase.1425" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1426" = type { %"class.blink::MemberBase.1427" }
%"class.blink::MemberBase.1427" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1428" = type { %"class.blink::MemberBase.1429" }
%"class.blink::MemberBase.1429" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1430" = type { %"class.std::__1::__compressed_pair.1431" }
%"class.std::__1::__compressed_pair.1431" = type { %"struct.std::__1::__compressed_pair_elem.1432" }
%"struct.std::__1::__compressed_pair_elem.1432" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1436" = type { %"class.std::__1::__compressed_pair.1437" }
%"class.std::__1::__compressed_pair.1437" = type { %"struct.std::__1::__compressed_pair_elem.1438" }
%"struct.std::__1::__compressed_pair_elem.1438" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", %"class.WTF::HashMap.1439", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1439" = type { %"class.WTF::HashTable.1440" }
%"class.WTF::HashTable.1440" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1447" = type { %"class.blink::MemberBase.1448" }
%"class.blink::MemberBase.1448" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1449" = type { %"class.blink::MemberBase.1450" }
%"class.blink::MemberBase.1450" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1451" = type { %"class.blink::MemberBase.1452" }
%"class.blink::MemberBase.1452" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1453" = type { %"class.blink::MemberBase.1454" }
%"class.blink::MemberBase.1454" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1455" = type { %"class.WTF::VectorBuffer.1456" }
%"class.WTF::VectorBuffer.1456" = type { %"class.WTF::VectorBufferBase.1457" }
%"class.WTF::VectorBufferBase.1457" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1460" = type { %"class.WTF::HashMap.1463" }
%"class.WTF::HashMap.1463" = type { %"class.WTF::HashTable.1464" }
%"class.WTF::HashTable.1464" = type <{ %"struct.WTF::KeyValuePair.1466"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1466" = type opaque
%"class.blink::Member.1467" = type { %"class.blink::MemberBase.1468" }
%"class.blink::MemberBase.1468" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1469" = type { %"class.std::__1::__compressed_pair.1470" }
%"class.std::__1::__compressed_pair.1470" = type { %"struct.std::__1::__compressed_pair_elem.1471" }
%"struct.std::__1::__compressed_pair_elem.1471" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1475" = type { %"class.blink::MemberBase.1476" }
%"class.blink::MemberBase.1476" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1479" = type { %"class.WTF::HashMap.1482" }
%"class.WTF::HashMap.1482" = type { %"class.WTF::HashTable.1483" }
%"class.WTF::HashTable.1483" = type <{ %"struct.WTF::KeyValuePair.1485"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1485" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1486" }
%"class.blink::HeapHashSet.1486" = type { %"class.WTF::HashSet.1489" }
%"class.WTF::HashSet.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"class.blink::WeakMember.1492"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1492" = type opaque
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1495" = type { %"class.blink::MemberBase.1496" }
%"class.blink::MemberBase.1496" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1502", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1509", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::HeapTaskRunnerTimer.1509" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1510", { i64, i64 } }
%"class.blink::WeakMember.1510" = type { %"class.blink::MemberBase.1496" }
%"class.blink::WeakMember.1497" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.1918" }
%"class.WTF::Vector.1918" = type { %"class.WTF::VectorBuffer.1919" }
%"class.WTF::VectorBuffer.1919" = type { %"class.WTF::VectorBufferBase.1920" }
%"class.WTF::VectorBufferBase.1920" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.1923", %"class.absl::optional.1923", %"class.absl::optional.1923" }
%"class.absl::optional.1923" = type { %"class.absl::optional_internal::optional_data.1924" }
%"class.absl::optional_internal::optional_data.1924" = type { %"class.absl::optional_internal::optional_data_base.1925" }
%"class.absl::optional_internal::optional_data_base.1925" = type { %"class.absl::optional_internal::optional_data_dtor_base.1926" }
%"class.absl::optional_internal::optional_data_dtor_base.1926" = type { i8, %union.anon.1927 }
%union.anon.1927 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.897", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.897" = type { %"class.base::RefCounted.898" }
%"class.base::RefCounted.898" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.1938" }
%"class.WTF::VectorBuffer.1938" = type { %"class.WTF::VectorBufferBase.1939", [32 x i8] }
%"class.WTF::VectorBufferBase.1939" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.756", %"class.std::__1::unique_ptr.877", i8, %"class.absl::optional.883", %class.scoped_refptr.859, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.888" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.759, %class.scoped_refptr.794, %class.scoped_refptr.808, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.809, %class.scoped_refptr.849, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.850, %class.scoped_refptr.873 }
%class.scoped_refptr.759 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.776" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.760", i8, i8, %class.scoped_refptr.762, i32, i32 }
%"class.WTF::RefCounted.760" = type { %"class.base::RefCounted.761" }
%"class.base::RefCounted.761" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.762 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.769, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.770", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.763" }
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.769 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.795", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.795" = type { %"class.WTF::RefCounted.796", i8, i8, %class.scoped_refptr.769, i32, i32 }
%"class.WTF::RefCounted.796" = type { %"class.base::RefCounted.797" }
%"class.base::RefCounted.797" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.798" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.798" = type { %"class.absl::optional_internal::optional_data.799" }
%"class.absl::optional_internal::optional_data.799" = type { %"class.absl::optional_internal::optional_data_base.800" }
%"class.absl::optional_internal::optional_data_base.800" = type { %"class.absl::optional_internal::optional_data_dtor_base.801" }
%"class.absl::optional_internal::optional_data_dtor_base.801" = type { i8, %union.anon.802 }
%union.anon.802 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.803" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.770" = type { %"class.std::__1::__compressed_pair.771" }
%"class.std::__1::__compressed_pair.771" = type { %"struct.std::__1::__compressed_pair_elem.772" }
%"struct.std::__1::__compressed_pair_elem.772" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.776" = type { %"class.std::__1::__compressed_pair.777" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.785", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.785" = type { %"class.std::__1::__compressed_pair.786" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.787" }
%"struct.std::__1::__compressed_pair_elem.787" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.794 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.808 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.809 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.810" }
%"class.blink::PaintPropertyNode.810" = type { %"class.WTF::RefCounted.811", i8, i8, %class.scoped_refptr.813, i32, i32 }
%"class.WTF::RefCounted.811" = type { %"class.base::RefCounted.812" }
%"class.base::RefCounted.812" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.813 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.762, %class.scoped_refptr.814, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.836", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.814 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.851" }
%"class.blink::PaintPropertyNode.851" = type { %"class.WTF::RefCounted.852", i8, i8, %class.scoped_refptr.814, i32, i32 }
%"class.WTF::RefCounted.852" = type { %"class.base::RefCounted.853" }
%"class.base::RefCounted.853" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.815" }
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.831" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.817, [20 x float], i32, [4 x i8], %"class.std::__1::vector.824", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.824" = type { %"class.std::__1::__vector_base.825" }
%"class.std::__1::__vector_base.825" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.826" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.831" = type { %"struct.std::__1::__compressed_pair_elem.832" }
%"struct.std::__1::__compressed_pair_elem.832" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.836" = type { %"class.std::__1::__compressed_pair.837" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.842" }
%"class.std::__1::vector.842" = type { %"class.std::__1::__vector_base.843" }
%"class.std::__1::__vector_base.843" = type { i32*, i32*, %"class.std::__1::__compressed_pair.844" }
%"class.std::__1::__compressed_pair.844" = type { %"struct.std::__1::__compressed_pair_elem.845" }
%"struct.std::__1::__compressed_pair_elem.845" = type { i32* }
%class.scoped_refptr.849 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.850 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.862" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.762, %"class.absl::optional.854", %class.scoped_refptr.859, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.854" = type { %"class.absl::optional_internal::optional_data.855" }
%"class.absl::optional_internal::optional_data.855" = type { %"class.absl::optional_internal::optional_data_base.856" }
%"class.absl::optional_internal::optional_data_base.856" = type { %"class.absl::optional_internal::optional_data_dtor_base.857" }
%"class.absl::optional_internal::optional_data_dtor_base.857" = type { i8, [3 x i8], %union.anon.858 }
%union.anon.858 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.862" = type { %"class.std::__1::__compressed_pair.863" }
%"class.std::__1::__compressed_pair.863" = type { %"struct.std::__1::__compressed_pair_elem.864" }
%"struct.std::__1::__compressed_pair_elem.864" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.865", i32, [4 x i8] }>
%"class.WTF::Vector.865" = type { %"class.WTF::VectorBuffer.866" }
%"class.WTF::VectorBuffer.866" = type { %"class.WTF::VectorBufferBase.867" }
%"class.WTF::VectorBufferBase.867" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.873 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.877" = type { %"class.std::__1::__compressed_pair.878" }
%"class.std::__1::__compressed_pair.878" = type { %"struct.std::__1::__compressed_pair_elem.879" }
%"struct.std::__1::__compressed_pair_elem.879" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.762, %class.scoped_refptr.814, %class.scoped_refptr.813 }
%"class.absl::optional.883" = type { %"class.absl::optional_internal::optional_data.884" }
%"class.absl::optional_internal::optional_data.884" = type { %"class.absl::optional_internal::optional_data_base.885" }
%"class.absl::optional_internal::optional_data_base.885" = type { %"class.absl::optional_internal::optional_data_dtor_base.886" }
%"class.absl::optional_internal::optional_data_dtor_base.886" = type { i8, %union.anon.887 }
%union.anon.887 = type { %"class.blink::IntRect" }
%class.scoped_refptr.859 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.860", [4 x i8] }
%"class.WTF::RefCounted.860" = type { %"class.base::RefCounted.861" }
%"class.base::RefCounted.861" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.888" = type { %"class.std::__1::__compressed_pair.889" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.890" }
%"struct.std::__1::__compressed_pair_elem.890" = type { %"class.blink::FragmentData"* }
%"class.blink::AXObjectCacheImpl" = type { %"class.blink::AXObjectCacheBase", %"class.blink::mojom::blink::PermissionObserver", %"class.blink::Member.326", %"class.ui::AXMode", [4 x i8], %"class.blink::HeapHashMap.1655", %"class.blink::HeapHashMap.1662", %"class.WTF::HashMap.1669", %"class.blink::HeapHashMap.1674", %"class.WTF::HashMap.1681", i32, [4 x i8], %"class.WTF::HashSet.1686", i32, %"class.blink::WeakMember.1690", %"class.std::__1::unique_ptr.1691", %"class.blink::HeapVector.1697", i32, %"class.blink::HeapMojoRemote", %"class.blink::HeapMojoReceiver", %"class.blink::HeapHashSet.1709", %"class.blink::HeapVector.1715", %"class.blink::HeapHashSet.1723", i32, i8, [3 x i8], %"class.WTF::HashMap.1729", %"class.WTF::HashSet.1686", %"class.WTF::HashSet.1686", i32, i32, %"class.WTF::HashCountedSet", i8, [7 x i8], %"class.WTF::HashSet.1686" }
%"class.blink::AXObjectCacheBase" = type { %"class.blink::AXObjectCache" }
%"class.blink::mojom::blink::PermissionObserver" = type { i32 (...)** }
%"class.ui::AXMode" = type { i32 }
%"class.blink::HeapHashMap.1655" = type { %"class.WTF::HashMap.1658" }
%"class.WTF::HashMap.1658" = type { %"class.WTF::HashTable.1659" }
%"class.WTF::HashTable.1659" = type <{ %"struct.WTF::KeyValuePair.1661"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1661" = type { i32, %"class.blink::Member.1644" }
%"class.blink::HeapHashMap.1662" = type { %"class.WTF::HashMap.1665" }
%"class.WTF::HashMap.1665" = type { %"class.WTF::HashTable.1666" }
%"class.WTF::HashTable.1666" = type <{ %"struct.WTF::KeyValuePair.1668"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1668" = type opaque
%"class.WTF::HashMap.1669" = type { %"class.WTF::HashTable.1670" }
%"class.WTF::HashTable.1670" = type <{ %"struct.WTF::KeyValuePair.1673"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1673" = type opaque
%"class.blink::HeapHashMap.1674" = type { %"class.WTF::HashMap.1677" }
%"class.WTF::HashMap.1677" = type { %"class.WTF::HashTable.1678" }
%"class.WTF::HashTable.1678" = type <{ %"struct.WTF::KeyValuePair.1680"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1680" = type opaque
%"class.WTF::HashMap.1681" = type { %"class.WTF::HashTable.1682" }
%"class.WTF::HashTable.1682" = type <{ %"struct.WTF::KeyValuePair.1685"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1685" = type opaque
%"class.blink::WeakMember.1690" = type { %"class.blink::MemberBase.1645" }
%"class.std::__1::unique_ptr.1691" = type { %"class.std::__1::__compressed_pair.1692" }
%"class.std::__1::__compressed_pair.1692" = type { %"struct.std::__1::__compressed_pair_elem.1693" }
%"struct.std::__1::__compressed_pair_elem.1693" = type { %"class.blink::AXRelationCache"* }
%"class.blink::AXRelationCache" = type opaque
%"class.blink::HeapVector.1697" = type { %"class.WTF::Vector.1700" }
%"class.WTF::Vector.1700" = type { %"class.WTF::VectorBuffer.1701" }
%"class.WTF::VectorBuffer.1701" = type { %"class.WTF::VectorBufferBase.1702" }
%"class.WTF::VectorBufferBase.1702" = type { %"class.blink::Member.1703"*, i32, i32 }
%"class.blink::Member.1703" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1705" }
%"class.blink::Member.1705" = type { %"class.blink::MemberBase.1706" }
%"class.blink::MemberBase.1706" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::PermissionService, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1707" }
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::PermissionObserver, blink::AXObjectCacheImpl, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::HeapHashSet.1709" = type { %"class.WTF::HashSet.1712" }
%"class.WTF::HashSet.1712" = type { %"class.WTF::HashTable.1713" }
%"class.WTF::HashTable.1713" = type <{ %"class.blink::WeakMember.966"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.1715" = type { %"class.WTF::Vector.1718" }
%"class.WTF::Vector.1718" = type { %"class.WTF::VectorBuffer.1719" }
%"class.WTF::VectorBuffer.1719" = type { %"class.WTF::VectorBufferBase.1720" }
%"class.WTF::VectorBufferBase.1720" = type { %"class.blink::Member.1721"*, i32, i32 }
%"class.blink::Member.1721" = type opaque
%"class.blink::HeapHashSet.1723" = type { %"class.WTF::HashSet.1726" }
%"class.WTF::HashSet.1726" = type { %"class.WTF::HashTable.1727" }
%"class.WTF::HashTable.1727" = type <{ %"class.blink::WeakMember.1497"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.1729" = type { %"class.WTF::HashTable.1730" }
%"class.WTF::HashTable.1730" = type <{ %"struct.WTF::KeyValuePair.1733"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1733" = type opaque
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.1734" }
%"class.WTF::HashMap.1734" = type { %"class.WTF::HashTable.1735" }
%"class.WTF::HashTable.1735" = type <{ %"struct.WTF::KeyValuePair.1738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1738" = type { %"class.blink::BlinkAXEventIntent", i32, [4 x i8] }
%"class.blink::BlinkAXEventIntent" = type <{ i32 (...)**, %"struct.ui::AXEventIntent", i8, i8, [6 x i8] }>
%"struct.ui::AXEventIntent" = type { i32 (...)**, i32, i32, i32, i32 }
%"class.WTF::HashSet.1686" = type { %"class.WTF::HashTable.1687" }
%"class.WTF::HashTable.1687" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.blink::HeapVector.1742" = type opaque
%"class.WTF::Vector.1743" = type { %"class.WTF::VectorBuffer.1744" }
%"class.WTF::VectorBuffer.1744" = type { %"class.WTF::VectorBufferBase.1745" }
%"class.WTF::VectorBufferBase.1745" = type { i32*, i32, i32 }
%"class.WTF::Vector.1748" = type { %"class.WTF::VectorBuffer.1749" }
%"class.WTF::VectorBuffer.1749" = type { %"class.WTF::VectorBufferBase.1750" }
%"class.WTF::VectorBufferBase.1750" = type { float*, i32, i32 }
%"class.WTF::Vector.1753" = type { %"class.WTF::VectorBuffer.1754" }
%"class.WTF::VectorBuffer.1754" = type { %"class.WTF::VectorBufferBase.1755" }
%"class.WTF::VectorBufferBase.1755" = type { %"struct.blink::AbstractInlineTextBox::WordBoundaries"*, i32, i32 }
%"struct.blink::AbstractInlineTextBox::WordBoundaries" = type { i32, i32 }
%"struct.ui::AXNodeData" = type { i32 (...)**, i32, i32, i32, i64, %"class.std::__1::vector.1758", %"class.std::__1::vector.1766", %"class.std::__1::vector.1774", %"class.std::__1::vector.1782", %"class.std::__1::vector.1790", %"class.std::__1::vector.1798", %"class.std::__1::vector.1806", %"class.std::__1::vector.1814", %"struct.ui::AXRelativeBounds" }
%"class.std::__1::vector.1758" = type { %"class.std::__1::__vector_base.1759" }
%"class.std::__1::__vector_base.1759" = type { %"struct.std::__1::pair.1760"*, %"struct.std::__1::pair.1760"*, %"class.std::__1::__compressed_pair.1761" }
%"struct.std::__1::pair.1760" = type opaque
%"class.std::__1::__compressed_pair.1761" = type { %"struct.std::__1::__compressed_pair_elem.1762" }
%"struct.std::__1::__compressed_pair_elem.1762" = type { %"struct.std::__1::pair.1760"* }
%"class.std::__1::vector.1766" = type { %"class.std::__1::__vector_base.1767" }
%"class.std::__1::__vector_base.1767" = type { %"struct.std::__1::pair.1768"*, %"struct.std::__1::pair.1768"*, %"class.std::__1::__compressed_pair.1769" }
%"struct.std::__1::pair.1768" = type opaque
%"class.std::__1::__compressed_pair.1769" = type { %"struct.std::__1::__compressed_pair_elem.1770" }
%"struct.std::__1::__compressed_pair_elem.1770" = type { %"struct.std::__1::pair.1768"* }
%"class.std::__1::vector.1774" = type { %"class.std::__1::__vector_base.1775" }
%"class.std::__1::__vector_base.1775" = type { %"struct.std::__1::pair.1776"*, %"struct.std::__1::pair.1776"*, %"class.std::__1::__compressed_pair.1777" }
%"struct.std::__1::pair.1776" = type opaque
%"class.std::__1::__compressed_pair.1777" = type { %"struct.std::__1::__compressed_pair_elem.1778" }
%"struct.std::__1::__compressed_pair_elem.1778" = type { %"struct.std::__1::pair.1776"* }
%"class.std::__1::vector.1782" = type { %"class.std::__1::__vector_base.1783" }
%"class.std::__1::__vector_base.1783" = type { %"struct.std::__1::pair.1784"*, %"struct.std::__1::pair.1784"*, %"class.std::__1::__compressed_pair.1785" }
%"struct.std::__1::pair.1784" = type opaque
%"class.std::__1::__compressed_pair.1785" = type { %"struct.std::__1::__compressed_pair_elem.1786" }
%"struct.std::__1::__compressed_pair_elem.1786" = type { %"struct.std::__1::pair.1784"* }
%"class.std::__1::vector.1790" = type { %"class.std::__1::__vector_base.1791" }
%"class.std::__1::__vector_base.1791" = type { %"struct.std::__1::pair.1792"*, %"struct.std::__1::pair.1792"*, %"class.std::__1::__compressed_pair.1793" }
%"struct.std::__1::pair.1792" = type opaque
%"class.std::__1::__compressed_pair.1793" = type { %"struct.std::__1::__compressed_pair_elem.1794" }
%"struct.std::__1::__compressed_pair_elem.1794" = type { %"struct.std::__1::pair.1792"* }
%"class.std::__1::vector.1798" = type { %"class.std::__1::__vector_base.1799" }
%"class.std::__1::__vector_base.1799" = type { %"struct.std::__1::pair.1800"*, %"struct.std::__1::pair.1800"*, %"class.std::__1::__compressed_pair.1801" }
%"struct.std::__1::pair.1800" = type opaque
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1802" }
%"struct.std::__1::__compressed_pair_elem.1802" = type { %"struct.std::__1::pair.1800"* }
%"class.std::__1::vector.1806" = type { %"class.std::__1::__vector_base.1807" }
%"class.std::__1::__vector_base.1807" = type { %"struct.std::__1::pair.1808"*, %"struct.std::__1::pair.1808"*, %"class.std::__1::__compressed_pair.1809" }
%"struct.std::__1::pair.1808" = type opaque
%"class.std::__1::__compressed_pair.1809" = type { %"struct.std::__1::__compressed_pair_elem.1810" }
%"struct.std::__1::__compressed_pair_elem.1810" = type { %"struct.std::__1::pair.1808"* }
%"class.std::__1::vector.1814" = type { %"class.std::__1::__vector_base.1815" }
%"class.std::__1::__vector_base.1815" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { i32* }
%"struct.ui::AXRelativeBounds" = type { i32 (...)**, i32, %"class.gfx::RectF", %"class.std::__1::unique_ptr.1821" }
%"class.std::__1::unique_ptr.1821" = type { %"class.std::__1::__compressed_pair.1822" }
%"class.std::__1::__compressed_pair.1822" = type { %"struct.std::__1::__compressed_pair_elem.1823" }
%"struct.std::__1::__compressed_pair_elem.1823" = type { %"class.gfx::Transform"* }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%"class.blink::AXRange" = type { %"class.blink::AXPosition", %"class.blink::AXPosition" }
%"class.blink::AXPosition" = type { %"class.blink::WeakPersistent.1827", i32, i32 }
%"class.blink::WeakPersistent.1827" = type { %"class.blink::PersistentBase.1828" }
%"class.blink::PersistentBase.1828" = type { %"class.blink::AXObject"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::EphemeralRangeTemplate" = type { %"class.blink::PositionTemplate.1839", %"class.blink::PositionTemplate.1839" }
%"class.blink::PositionTemplate.1839" = type { %"class.blink::Member.318", i32, i32 }
%"class.blink::HeapVector.1840" = type { %"class.WTF::Vector.1843" }
%"class.WTF::Vector.1843" = type { %"class.WTF::VectorBuffer.1844" }
%"class.WTF::VectorBuffer.1844" = type { %"class.WTF::VectorBufferBase.1845" }
%"class.WTF::VectorBufferBase.1845" = type { %"struct.std::__1::pair.1846"*, i32, i32 }
%"struct.std::__1::pair.1846" = type { %"class.blink::Member.1847", %"class.blink::Member.1879" }
%"class.blink::Member.1847" = type { %"class.blink::MemberBase.1848" }
%"class.blink::MemberBase.1848" = type { %"class.blink::Text"* }
%"class.blink::Text" = type { %"class.blink::CharacterData" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::ParkableString" = type { %class.scoped_refptr.1849 }
%class.scoped_refptr.1849 = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.1850", %"class.WTF::String", %"class.std::__1::unique_ptr.1852" }
%"class.WTF::RefCounted.1850" = type { %"class.base::RefCounted.1851" }
%"class.base::RefCounted.1851" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1852" = type { %"class.std::__1::__compressed_pair.1853" }
%"class.std::__1::__compressed_pair.1853" = type { %"struct.std::__1::__compressed_pair_elem.1854" }
%"struct.std::__1::__compressed_pair_elem.1854" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.1855", %"class.std::__1::unique_ptr.1866", %"class.WTF::Vector.1872", i8, i32 }
%"class.std::__1::unique_ptr.1855" = type { %"class.std::__1::__compressed_pair.1856" }
%"class.std::__1::__compressed_pair.1856" = type { %"struct.std::__1::__compressed_pair_elem.1857" }
%"struct.std::__1::__compressed_pair_elem.1857" = type { %"class.WTF::Vector.1858"* }
%"class.WTF::Vector.1858" = type { %"class.WTF::VectorBuffer.1859" }
%"class.WTF::VectorBuffer.1859" = type { %"class.WTF::VectorBufferBase.1860" }
%"class.WTF::VectorBufferBase.1860" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.1866" = type { %"class.std::__1::__compressed_pair.1867" }
%"class.std::__1::__compressed_pair.1867" = type { %"struct.std::__1::__compressed_pair_elem.1868" }
%"struct.std::__1::__compressed_pair_elem.1868" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.1872" = type { %"class.WTF::VectorBuffer.1873" }
%"class.WTF::VectorBuffer.1873" = type { %"class.WTF::VectorBufferBase.1860", [32 x i8] }
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::DocumentMarker"* }
%"class.blink::DocumentMarker" = type { i32 (...)**, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::AccessibleNode" = type opaque
%"class.blink::HeapVector.1902" = type opaque
%"class.blink::HeapVector.1903" = type { %"class.WTF::Vector.1906" }
%"class.WTF::Vector.1906" = type { %"class.WTF::VectorBuffer.1907" }
%"class.WTF::VectorBuffer.1907" = type { %"class.WTF::VectorBufferBase.1908" }
%"class.WTF::VectorBufferBase.1908" = type { %"class.blink::Member.1909"*, i32, i32 }
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1954" }
%"class.blink::MemberBase.1954" = type { %"class.blink::NameSourceRelatedObject"* }
%"class.blink::NameSourceRelatedObject" = type { %"class.blink::WeakMember.1690", %"class.WTF::String" }
%"class.blink::HeapHashSet.1911" = type opaque
%"class.blink::HeapVector.1912" = type opaque
%"class.WTF::Vector.1913" = type opaque
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::Member.1896", %"class.blink::Member.1898", %"class.WTF::Vector.906", i16, %class.scoped_refptr.963 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.1898" = type { %"class.blink::MemberBase.1899" }
%"class.blink::MemberBase.1899" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink7AXRangeD2Ev = comdat any

$_ZN5blink15AXInlineTextBoxD2Ev = comdat any

$_ZN5blink15AXInlineTextBoxD0Ev = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE = comdat any

$_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE = comdat any

$_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE = comdat any

$_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb = comdat any

$_ZNK5blink8AXObject9AccessKeyEv = comdat any

$_ZNK5blink8AXObject15BackgroundColorEv = comdat any

$_ZNK5blink15AXInlineTextBox8GetColorEv = comdat any

$_ZNK5blink8AXObject10ColorValueEv = comdat any

$_ZNK5blink8AXObject24CanvasHasFallbackContentEv = comdat any

$_ZNK5blink8AXObject18ComputedFontFamilyEv = comdat any

$_ZNK5blink8AXObject26FontFamilyForSerializationEv = comdat any

$_ZNK5blink8AXObject8FontSizeEv = comdat any

$_ZNK5blink8AXObject10FontWeightEv = comdat any

$_ZNK5blink8AXObject12HeadingLevelEv = comdat any

$_ZNK5blink8AXObject17HierarchicalLevelEv = comdat any

$_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE = comdat any

$_ZNK5blink8AXObject16InPageLinkTargetEv = comdat any

$_ZNK5blink8AXObject12GetListStyleEv = comdat any

$_ZNK5blink8AXObject12GetTextAlignEv = comdat any

$_ZNK5blink8AXObject13GetTextIndentEv = comdat any

$_ZNK5blink8AXObject15GetTextPositionEv = comdat any

$_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ = comdat any

$_ZNK5blink8AXObject19RadioButtonsInGroupEv = comdat any

$_ZNK5blink8AXObject3UrlEv = comdat any

$_ZNK5blink8AXObject12ChooserPopupEv = comdat any

$_ZNK5blink8AXObject19GetAriaCurrentStateEv = comdat any

$_ZNK5blink8AXObject15GetInvalidStateEv = comdat any

$_ZNK5blink8AXObject16AriaInvalidValueEv = comdat any

$_ZNK5blink8AXObject13ValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MaxValueForRangeEPf = comdat any

$_ZNK5blink8AXObject16MinValueForRangeEPf = comdat any

$_ZNK5blink8AXObject17StepValueForRangeEPf = comdat any

$_ZN5blink8AXObject16ActiveDescendantEv = comdat any

$_ZNK5blink8AXObject12AutoCompleteEv = comdat any

$_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject12ErrorMessageEv = comdat any

$_ZNK5blink8AXObject20SupportsARIADraggingEv = comdat any

$_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE = comdat any

$_ZNK5blink8AXObject8PosInSetEv = comdat any

$_ZNK5blink8AXObject7SetSizeEv = comdat any

$_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE = comdat any

$_ZNK5blink15AXInlineTextBox15CanHaveChildrenEv = comdat any

$_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE = comdat any

$_ZNK5blink8AXObject24EstimatedLoadingProgressEv = comdat any

$_ZNK5blink8AXObject13AnchorElementEv = comdat any

$_ZNK5blink8AXObject13ActionElementEv = comdat any

$_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE = comdat any

$_ZNK5blink8AXObject11IsDataTableEv = comdat any

$_ZNK5blink8AXObject16GetSortDirectionEv = comdat any

$_ZNK5blink8AXObject12HeaderObjectEv = comdat any

$_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv = comdat any

$_ZN5blink8AXObject15ChildrenChangedEv = comdat any

$_ZN5blink8AXObject29HandleActiveDescendantChangedEv = comdat any

$_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE = comdat any

$_ZN5blink8AXObject25HandleAriaExpandedChangedEv = comdat any

$_ZNK5blink15AXInlineTextBox22NativeRoleIgnoringAriaEv = comdat any

$_ZN5blink15AXInlineTextBox11AddChildrenEv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv = comdat any

$_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm = comdat any

$_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKiEEvOT_ = comdat any

@_ZTVN5blink15AXInlineTextBoxE = hidden unnamed_addr constant { [164 x i8*] } { [164 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::AXInlineTextBox"*)* @_ZN5blink15AXInlineTextBoxD2Ev to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*)* @_ZN5blink15AXInlineTextBoxD0Ev to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::Visitor"*)* @_ZNK5blink8AXObject5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*, %"class.blink::AXObject"*)* @_ZN5blink15AXInlineTextBox4InitEPNS_8AXObjectE to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*)* @_ZN5blink15AXInlineTextBox6DetachEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i32, i8*)* @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb to i8*), i8* bitcast (%"class.blink::AccessibleNode"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17GetAccessibleNodeEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsImageMapLinkEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXNodeObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsAXLayoutObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox17IsAXInlineTextBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject6IsListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsAXListBoxEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsAXListBoxOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsMenuListEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16IsMenuListOptionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsMenuListPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsMockObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsProgressIndicatorEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsAXRadioInputEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsValidationMessageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15IsVirtualObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsControlEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsDefaultEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsFieldsetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsInputImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13IsNativeImageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18IsNativeSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsNativeSliderEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12IsSpinButtonEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsAutofillAvailableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsClickableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsExpandedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsFocusedEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsGrabbedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsHoveredEv to i8*), i8* bitcast (i1 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox20IsLineBreakingObjectEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLinkedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7IsModalEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17IsMultiSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsOffScreenEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsRequiredEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10IsSelectedEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsSelectedFromFocusEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject22IsSelectedOptionActiveEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19IsNotUserSelectableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisibleEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9IsVisitedEv to i8*), i8* bitcast (i1 (%"class.blink::AXInlineTextBox"*, %"class.blink::HeapVector.1742"*)* @_ZNK5blink15AXInlineTextBox29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)* @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXInlineTextBox"*, i32*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink15AXInlineTextBox7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32, i32*, %"class.blink::HeapVector.1902"*, %"class.blink::HeapVector.1903"*)* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i32)* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, i1, i1, %"class.blink::HeapHashSet.1911"*, i32*, %"class.blink::HeapVector.1903"*, %"class.blink::HeapVector.1912"*)* @_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::HeapHashSet.1911"*, i1)* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject9AccessKeyEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15BackgroundColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox8GetColorEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColorValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24CanvasHasFallbackContentEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18ComputedFontFamilyEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject26FontFamilyForSerializationEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8FontSizeEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10FontWeightEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeadingLevelEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17HierarchicalLevelEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*, %"class.blink::IntSize"*)* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16InPageLinkTargetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11OrientationEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetListStyleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12GetTextAlignEv to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox16GetTextDirectionEv to i8*), i8* bitcast (float (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13GetTextIndentEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetTextPositionEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32*, i32*, i32*, i32*)* @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_ to i8*), i8* bitcast (void (%"class.blink::HeapVector.1646"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject19RadioButtonsInGroupEv to i8*), i8* bitcast (void (%"class.blink::KURL"*, %"class.blink::AXObject"*)* @_ZNK5blink8AXObject3UrlEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ChooserPopupEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox10NextOnLineEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox14PreviousOnLineEv to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*, %"class.WTF::Vector.1743"*)* @_ZNK5blink15AXInlineTextBox20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*, %"class.WTF::Vector.1743"*, %"class.WTF::Vector.1743"*)* @_ZNK5blink15AXInlineTextBox17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_ to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox10TextLengthEv to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*, i32)* @_ZNK5blink15AXInlineTextBox29TextOffsetInFormattingContextEi to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*, i32)* @_ZNK5blink15AXInlineTextBox21TextOffsetInContainerEi to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject19GetAriaCurrentStateEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetInvalidStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16AriaInvalidValueEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject13ValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MaxValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject16MinValueForRangeEPf to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, float*)* @_ZNK5blink8AXObject17StepValueForRangeEPf to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18GetValueForControlEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11RestrictionEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject26DetermineAccessibilityRoleEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject17AriaRoleAttributeEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16ActiveDescendantEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12AutoCompleteEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12ErrorMessageEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8HasPopupEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject14IsEditableRootEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject20SupportsARIADraggingEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.WTF::Vector.1913"*)* @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8PosInSetEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7SetSizeEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16LiveRegionStatusEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject18LiveRegionRelevantEv to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*, %"class.blink::AXObject"**, %"class.blink::FloatRect"*, %class.SkMatrix44*, i8*)* @_ZNK5blink15AXInlineTextBox17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, %"class.blink::IntPoint"*)* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE to i8*), i8* bitcast (i1 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox15CanHaveChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox13ClearChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (double (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject24EstimatedLoadingProgressEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12RootScrollerEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox7GetNodeEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject15GetLayoutObjectEv to i8*), i8* bitcast (%"class.blink::Document"* (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox11GetDocumentEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13AnchorElementEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject13ActionElementEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8LanguageEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::AXObject"*, %"class.blink::QualifiedName"*)* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11IsDataTableEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnCountEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowCountEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (void (%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"*)* @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*, i32, i32)* @_ZNK5blink8AXObject19CellForColumnAndRowEjj to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject11ColumnIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject8RowIndexEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject10ColumnSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject7RowSpanEv to i8*), i8* bitcast (i32 (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject16GetSortDirectionEv to i8*), i8* bitcast (%"class.blink::AXObject"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject12HeaderObjectEv to i8*), i8* bitcast (%"class.blink::ScrollableArea"* (%"class.blink::AXObject"*)* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeDecrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeClickActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject19OnNativeFocusActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject23OnNativeIncrementActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, i1)* @_ZN5blink8AXObject25OnNativeSetSelectedActionEb to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*)* @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv to i8*), i8* bitcast (i1 (%"class.blink::AXObject"*, %"class.WTF::String"*)* @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject15ChildrenChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject29HandleActiveDescendantChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*, i32)* @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject25HandleAriaExpandedChangedEv to i8*), i8* bitcast (void (%"class.blink::AXObject"*)* @_ZN5blink8AXObject16SelectionChangedEv to i8*), i8* bitcast (i32 (%"class.blink::AXInlineTextBox"*)* @_ZNK5blink15AXInlineTextBox22NativeRoleIgnoringAriaEv to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*)* @_ZN5blink15AXInlineTextBox11AddChildrenEv to i8*), i8* bitcast (void (%"class.blink::AXInlineTextBox"*, %"struct.ui::AXNodeData"*)* @_ZNK5blink15AXInlineTextBox25SerializeMarkerAttributesEPN2ui10AXNodeDataE to i8*)] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase62is_accessibility_use_ax_position_for_document_markers_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.3 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.4 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1

@_ZN5blink15AXInlineTextBoxC1E13scoped_refptrINS_21AbstractInlineTextBoxEERNS_17AXObjectCacheImplE = hidden unnamed_addr alias void (%"class.blink::AXInlineTextBox"*, %"class.blink::AbstractInlineTextBox"*, %"class.blink::AXObjectCacheImpl"*), void (%"class.blink::AXInlineTextBox"*, %"class.blink::AbstractInlineTextBox"*, %"class.blink::AXObjectCacheImpl"*)* @_ZN5blink15AXInlineTextBoxC2E13scoped_refptrINS_21AbstractInlineTextBoxEERNS_17AXObjectCacheImplE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXInlineTextBoxC2E13scoped_refptrINS_21AbstractInlineTextBoxEERNS_17AXObjectCacheImplE(%"class.blink::AXInlineTextBox"*, %"class.blink::AbstractInlineTextBox"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #0 align 2 {
  %4 = ptrtoint %"class.blink::AbstractInlineTextBox"* %1 to i64
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXObject"* %5, %"class.blink::AXObjectCacheImpl"* dereferenceable(456) %2) #14
  %6 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink15AXInlineTextBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1
  %8 = bitcast %class.scoped_refptr.1739* %7 to i64*
  store i64 %4, i64* %8, align 8
  ret void
}

declare void @_ZN5blink8AXObjectC2ERNS_17AXObjectCacheImplE(%"class.blink::AXObject"*, %"class.blink::AXObjectCacheImpl"* dereferenceable(456)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AXInlineTextBox17GetRelativeBoundsEPPNS_8AXObjectERNS_9FloatRectER10SkMatrix44Pb(%"class.blink::AXInlineTextBox"*, %"class.blink::AXObject"** nocapture, %"class.blink::FloatRect"* nocapture dereferenceable(16), %class.SkMatrix44* dereferenceable(68), i8* nocapture readnone) unnamed_addr #2 align 2 {
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %1, align 8
  %6 = bitcast %"class.blink::FloatRect"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false)
  tail call void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44* %3) #14
  %7 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %7, align 8
  %9 = icmp eq %"class.blink::AbstractInlineTextBox"* %8, null
  br i1 %9, label %64, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %12 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %11) #14
  %13 = icmp eq %"class.blink::AXObject"* %12, null
  br i1 %13, label %64, label %14

14:                                               ; preds = %10
  %15 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %11) #14
  %16 = bitcast %"class.blink::AXObject"* %15 to %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)***
  %17 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)**, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %17, i64 125
  %19 = load %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)*, %"class.blink::LayoutObject"* (%"class.blink::AXObject"*)** %18, align 8
  %20 = tail call %"class.blink::LayoutObject"* %19(%"class.blink::AXObject"* %15) #14
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %64, label %22

22:                                               ; preds = %14
  %23 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %11) #14
  store %"class.blink::AXObject"* %23, %"class.blink::AXObject"** %1, align 8
  %24 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %7, align 8
  %25 = bitcast %"class.blink::AbstractInlineTextBox"* %24 to { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)***
  %26 = load { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)**, { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)*** %25, align 8
  %27 = getelementptr inbounds { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)*, { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)** %26, i64 4
  %28 = load { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)*, { i64, i64 } (%"class.blink::AbstractInlineTextBox"*)** %27, align 8
  %29 = tail call { i64, i64 } %28(%"class.blink::AbstractInlineTextBox"* %24) #14
  %30 = extractvalue { i64, i64 } %29, 0
  %31 = trunc i64 %30 to i32
  %32 = lshr i64 %30, 32
  %33 = trunc i64 %32 to i32
  %34 = extractvalue { i64, i64 } %29, 1
  %35 = sitofp i32 %31 to float
  %36 = fmul float %35, 1.562500e-02
  %37 = sitofp i32 %33 to float
  %38 = fmul float %37, 1.562500e-02
  %39 = trunc i64 %34 to i32
  %40 = sitofp i32 %39 to float
  %41 = fmul float %40, 1.562500e-02
  %42 = lshr i64 %34, 32
  %43 = trunc i64 %42 to i32
  %44 = sitofp i32 %43 to float
  %45 = fmul float %44, 1.562500e-02
  %46 = insertelement <2 x float> undef, float %36, i32 0
  %47 = insertelement <2 x float> %46, float %38, i32 1
  %48 = insertelement <2 x float> undef, float %41, i32 0
  %49 = insertelement <2 x float> %48, float %45, i32 1
  %50 = bitcast %"class.blink::FloatRect"* %2 to <2 x float>*
  store <2 x float> %47, <2 x float>* %50, align 4
  %51 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1
  %52 = bitcast %"class.blink::FloatSize"* %51 to <2 x float>*
  store <2 x float> %49, <2 x float>* %52, align 4
  %53 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %11) #14
  %54 = tail call { <2 x float>, <2 x float> } @_ZN5blink8AXObject36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::AXObject"* %53) #14
  %55 = extractvalue { <2 x float>, <2 x float> } %54, 0
  %56 = extractelement <2 x float> %55, i32 0
  %57 = extractelement <2 x float> %55, i32 1
  %58 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %59 = load float, float* %58, align 4
  %60 = fsub float %59, %56
  store float %60, float* %58, align 4
  %61 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = fsub float %62, %57
  store float %63, float* %61, align 4
  br label %64

64:                                               ; preds = %5, %14, %10, %22
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN10SkMatrix4411setIdentityEv(%class.SkMatrix44*) local_unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN5blink8AXObject36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15AXInlineTextBox29ComputeAccessibilityIsIgnoredEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXInlineTextBox"*, %"class.blink::HeapVector.1742"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #14
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"* nonnull %4) #14
  br i1 %7, label %8, label %16

8:                                                ; preds = %6
  %9 = icmp eq %"class.blink::HeapVector.1742"* %1, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %8
  %11 = bitcast %"class.blink::AXObject"* %4 to i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)***
  %12 = load i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)**, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)** %12, i64 51
  %14 = load i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)*, i1 (%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.blink::AXObject"* nonnull %4, %"class.blink::HeapVector.1742"* nonnull %1) #14
  br label %16

16:                                               ; preds = %10, %8, %6, %2
  %17 = phi i1 [ false, %2 ], [ false, %6 ], [ true, %8 ], [ true, %10 ]
  ret i1 %17
}

declare zeroext i1 @_ZNK5blink8AXObject22AccessibilityIsIgnoredEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AXInlineTextBox20TextCharacterOffsetsERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXInlineTextBox"*, %"class.WTF::Vector.1743"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.1748", align 8
  %4 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #14
  br i1 %5, label %119, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.WTF::Vector.1748"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #14
  %10 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %10, align 8
  %12 = bitcast %"class.blink::AbstractInlineTextBox"* %11 to void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)***
  %13 = load void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)**, void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)*, void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)** %13, i64 8
  %15 = load void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)*, void (%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1748"*)** %14, align 8
  call void %15(%"class.blink::AbstractInlineTextBox"* %11, %"class.WTF::Vector.1748"* nonnull dereferenceable(16) %3) #14
  %16 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #14
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 2
  br label %84

19:                                               ; preds = %6
  %20 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %10, align 8
  %21 = bitcast %"class.blink::AbstractInlineTextBox"* %20 to i32 (%"class.blink::AbstractInlineTextBox"*)***
  %22 = load i32 (%"class.blink::AbstractInlineTextBox"*)**, i32 (%"class.blink::AbstractInlineTextBox"*)*** %21, align 8
  %23 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %22, i64 5
  %24 = load i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %23, align 8
  %25 = call i32 %24(%"class.blink::AbstractInlineTextBox"* %20) #14
  %26 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp ult i32 %27, %25
  br i1 %28, label %29, label %84

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp ult i32 %31, %25
  br i1 %32, label %33, label %72

33:                                               ; preds = %29
  %34 = lshr i32 %31, 2
  %35 = add nuw i32 %31, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %25
  %40 = select i1 %39, i32 %38, i32 %25
  %41 = icmp ult i32 %31, %40
  br i1 %41, label %42, label %72, !prof !2

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 0
  %44 = load i32*, i32** %43, align 8
  %45 = icmp eq i32* %44, null
  %46 = zext i32 %40 to i64
  %47 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %46) #14
  %48 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %47, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %45, label %49, label %54

49:                                               ; preds = %42
  %50 = ptrtoint i8* %48 to i64
  %51 = bitcast %"class.WTF::Vector.1743"* %1 to i64*
  store atomic i64 %50, i64* %51 monotonic, align 8
  %52 = lshr i64 %47, 2
  %53 = trunc i64 %52 to i32
  store i32 %53, i32* %30, align 8
  br label %72

54:                                               ; preds = %42
  %55 = lshr i64 %47, 2
  %56 = ptrtoint i8* %48 to i64
  %57 = load i32*, i32** %43, align 8
  %58 = icmp ne i8* %48, null
  %59 = icmp ne i32* %57, null
  %60 = and i1 %58, %59
  %61 = bitcast i32* %57 to i8*
  br i1 %60, label %62, label %68, !prof !2

62:                                               ; preds = %54
  %63 = load i32, i32* %26, align 4
  %64 = zext i32 %63 to i64
  %65 = shl nuw nsw i64 %64, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* nonnull align 4 %61, i64 %65, i1 false) #14
  %66 = bitcast %"class.WTF::Vector.1743"* %1 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %62, %54
  %69 = phi i8* [ %67, %62 ], [ %61, %54 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #14
  %70 = bitcast %"class.WTF::Vector.1743"* %1 to i64*
  store atomic i64 %56, i64* %70 monotonic, align 8
  %71 = trunc i64 %55 to i32
  store i32 %71, i32* %30, align 8
  br label %72

72:                                               ; preds = %68, %49, %33, %29
  %73 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = load i32, i32* %26, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %74, i64 %76
  %78 = zext i32 %25 to i64
  %79 = getelementptr inbounds i32, i32* %74, i64 %78
  %80 = bitcast i32* %77 to i8*
  %81 = ptrtoint i32* %79 to i64
  %82 = ptrtoint i32* %77 to i64
  %83 = sub i64 %81, %82
  call void @llvm.memset.p0i8.i64(i8* align 4 %80, i8 0, i64 %83, i1 false) #14
  br label %84

84:                                               ; preds = %17, %19, %72
  %85 = phi i32* [ %18, %17 ], [ %26, %19 ], [ %26, %72 ]
  %86 = phi i32 [ 0, %17 ], [ %25, %19 ], [ %25, %72 ]
  store i32 %86, i32* %85, align 4
  br label %87

87:                                               ; preds = %111, %84
  %88 = phi float [ 0.000000e+00, %84 ], [ %114, %111 ]
  %89 = phi i32 [ 0, %84 ], [ %118, %111 ]
  %90 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #14
  br i1 %90, label %98, label %91

91:                                               ; preds = %87
  %92 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %10, align 8
  %93 = bitcast %"class.blink::AbstractInlineTextBox"* %92 to i32 (%"class.blink::AbstractInlineTextBox"*)***
  %94 = load i32 (%"class.blink::AbstractInlineTextBox"*)**, i32 (%"class.blink::AbstractInlineTextBox"*)*** %93, align 8
  %95 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %94, i64 5
  %96 = load i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %95, align 8
  %97 = call i32 %96(%"class.blink::AbstractInlineTextBox"* %92) #14
  br label %98

98:                                               ; preds = %87, %91
  %99 = phi i32 [ %97, %91 ], [ 0, %87 ]
  %100 = icmp slt i32 %89, %99
  br i1 %100, label %111, label %101

101:                                              ; preds = %98
  %102 = load float*, float** %8, align 8
  %103 = icmp eq float* %102, null
  %104 = bitcast float* %102 to i8*
  br i1 %103, label %110, label %105, !prof !2

105:                                              ; preds = %101
  %106 = load i32, i32* %9, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %109, label %108, !prof !3

108:                                              ; preds = %105
  store i32 0, i32* %9, align 4
  br label %109

109:                                              ; preds = %108, %105
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #14
  store float* null, float** %8, align 8
  br label %110

110:                                              ; preds = %101, %109
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %119

111:                                              ; preds = %98
  %112 = call dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1748"* nonnull %3, i32 %89) #14
  %113 = load float, float* %112, align 4
  %114 = fadd float %88, %113
  %115 = call float @llvm.round.f32(float %114)
  %116 = fptosi float %115 to i32
  %117 = call dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1743"* %1, i32 %89) #14
  store i32 %116, i32* %117, align 4
  %118 = add nuw nsw i32 %89, 1
  br label %87

119:                                              ; preds = %2, %110
  ret void
}

declare zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15AXInlineTextBox10TextLengthEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = bitcast %"class.blink::AbstractInlineTextBox"* %6 to i32 (%"class.blink::AbstractInlineTextBox"*)***
  %8 = load i32 (%"class.blink::AbstractInlineTextBox"*)**, i32 (%"class.blink::AbstractInlineTextBox"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %8, i64 5
  %10 = load i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::AbstractInlineTextBox"* %6) #14
  br label %12

12:                                               ; preds = %1, %4
  %13 = phi i32 [ %11, %4 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.round.f32(float) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AXInlineTextBox17GetWordBoundariesERN3WTF6VectorIiLj0ENS1_18PartitionAllocatorEEES5_(%"class.blink::AXInlineTextBox"* nocapture readonly, %"class.WTF::Vector.1743"* dereferenceable(16), %"class.WTF::Vector.1743"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::Vector.1753", align 8
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = icmp eq %"class.blink::AbstractInlineTextBox"* %6, null
  br i1 %7, label %154, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::AbstractInlineTextBox"* %6 to %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)**, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)** %10, i64 9
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::AbstractInlineTextBox"* nonnull %6) #14
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %154, label %15

15:                                               ; preds = %8
  %16 = tail call zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"* nonnull %13) #14
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %15
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %15
  %26 = phi i32 [ %24, %23 ], [ %22, %15 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #14
  br i1 %16, label %154, label %30

29:                                               ; preds = %25
  br i1 %16, label %154, label %30

30:                                               ; preds = %28, %29
  %31 = bitcast %"class.WTF::Vector.1753"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #14
  %32 = getelementptr inbounds %"class.WTF::Vector.1753", %"class.WTF::Vector.1753"* %4, i64 0, i32 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.WTF::Vector.1753", %"class.WTF::Vector.1753"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #14
  %34 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  call void @_ZNK5blink21AbstractInlineTextBox17GetWordBoundariesERN3WTF6VectorINS0_14WordBoundariesELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AbstractInlineTextBox"* %34, %"class.WTF::Vector.1753"* nonnull dereferenceable(16) %4) #14
  %35 = load i32, i32* %33, align 4
  %36 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %37, %35
  br i1 %38, label %39, label %68, !prof !2

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  %43 = zext i32 %35 to i64
  %44 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %43) #14
  %45 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  %46 = ptrtoint i8* %45 to i64
  br i1 %42, label %47, label %49

47:                                               ; preds = %39
  %48 = bitcast %"class.WTF::Vector.1743"* %1 to i64*
  store atomic i64 %46, i64* %48 monotonic, align 8
  br label %65

49:                                               ; preds = %39
  %50 = load i32*, i32** %40, align 8
  %51 = icmp ne i8* %45, null
  %52 = icmp ne i32* %50, null
  %53 = and i1 %51, %52
  %54 = bitcast i32* %50 to i8*
  br i1 %53, label %55, label %62, !prof !2

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i64
  %59 = shl nuw nsw i64 %58, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* nonnull align 4 %54, i64 %59, i1 false) #14
  %60 = bitcast %"class.WTF::Vector.1743"* %1 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %55, %49
  %63 = phi i8* [ %61, %55 ], [ %54, %49 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %63) #14
  %64 = bitcast %"class.WTF::Vector.1743"* %1 to i64*
  store atomic i64 %46, i64* %64 monotonic, align 8
  br label %65

65:                                               ; preds = %62, %47
  %66 = lshr i64 %44, 2
  %67 = trunc i64 %66 to i32
  store i32 %67, i32* %36, align 8
  br label %68

68:                                               ; preds = %65, %30
  %69 = load i32, i32* %33, align 4
  %70 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %2, i64 0, i32 0, i32 0, i32 1
  %71 = load i32, i32* %70, align 8
  %72 = icmp ult i32 %71, %69
  br i1 %72, label %73, label %101, !prof !2

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %2, i64 0, i32 0, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %75, null
  %77 = zext i32 %69 to i64
  %78 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %77) #14
  %79 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %78, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  %80 = ptrtoint i8* %79 to i64
  br i1 %76, label %96, label %81

81:                                               ; preds = %73
  %82 = load i32*, i32** %74, align 8
  %83 = icmp ne i8* %79, null
  %84 = icmp ne i32* %82, null
  %85 = and i1 %83, %84
  %86 = bitcast i32* %82 to i8*
  br i1 %85, label %87, label %94, !prof !2

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %2, i64 0, i32 0, i32 0, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = shl nuw nsw i64 %90, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %79, i8* nonnull align 4 %86, i64 %91, i1 false) #14
  %92 = bitcast %"class.WTF::Vector.1743"* %2 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %87, %81
  %95 = phi i8* [ %93, %87 ], [ %86, %81 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #14
  br label %96

96:                                               ; preds = %73, %94
  %97 = bitcast %"class.WTF::Vector.1743"* %2 to i64*
  store atomic i64 %80, i64* %97 monotonic, align 8
  %98 = lshr i64 %78, 2
  %99 = trunc i64 %98 to i32
  store i32 %99, i32* %70, align 8
  %100 = load i32, i32* %33, align 4
  br label %101

101:                                              ; preds = %96, %68
  %102 = phi i32 [ %100, %96 ], [ %69, %68 ]
  %103 = load %"struct.blink::AbstractInlineTextBox::WordBoundaries"*, %"struct.blink::AbstractInlineTextBox::WordBoundaries"** %32, align 8
  %104 = zext i32 %102 to i64
  %105 = getelementptr inbounds %"struct.blink::AbstractInlineTextBox::WordBoundaries", %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %103, i64 %104
  %106 = icmp eq i32 %102, 0
  br i1 %106, label %114, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 2
  %109 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %1, i64 0, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %2, i64 0, i32 0, i32 0, i32 2
  %111 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %2, i64 0, i32 0, i32 0, i32 0
  br label %124

112:                                              ; preds = %151
  %113 = load %"struct.blink::AbstractInlineTextBox::WordBoundaries"*, %"struct.blink::AbstractInlineTextBox::WordBoundaries"** %32, align 8
  br label %114

114:                                              ; preds = %112, %101
  %115 = phi %"struct.blink::AbstractInlineTextBox::WordBoundaries"* [ %113, %112 ], [ %103, %101 ]
  %116 = icmp eq %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %115, null
  %117 = bitcast %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %115 to i8*
  br i1 %116, label %123, label %118, !prof !2

118:                                              ; preds = %114
  %119 = load i32, i32* %33, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %122, label %121, !prof !3

121:                                              ; preds = %118
  store i32 0, i32* %33, align 4
  br label %122

122:                                              ; preds = %121, %118
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %117) #14
  store %"struct.blink::AbstractInlineTextBox::WordBoundaries"* null, %"struct.blink::AbstractInlineTextBox::WordBoundaries"** %32, align 8
  br label %123

123:                                              ; preds = %114, %122
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #14
  br label %154

124:                                              ; preds = %107, %151
  %125 = phi %"struct.blink::AbstractInlineTextBox::WordBoundaries"* [ %103, %107 ], [ %152, %151 ]
  %126 = getelementptr inbounds %"struct.blink::AbstractInlineTextBox::WordBoundaries", %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %125, i64 0, i32 0
  %127 = load i32, i32* %108, align 4
  %128 = load i32, i32* %36, align 8
  %129 = icmp eq i32 %127, %128
  br i1 %129, label %137, label %130, !prof !3

130:                                              ; preds = %124
  %131 = load i32*, i32** %109, align 8
  %132 = zext i32 %127 to i64
  %133 = getelementptr inbounds i32, i32* %131, i64 %132
  %134 = load i32, i32* %126, align 4
  store i32 %134, i32* %133, align 4
  %135 = load i32, i32* %108, align 4
  %136 = add i32 %135, 1
  store i32 %136, i32* %108, align 4
  br label %138

137:                                              ; preds = %124
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKiEEvOT_(%"class.WTF::Vector.1743"* %1, i32* dereferenceable(4) %126) #14
  br label %138

138:                                              ; preds = %130, %137
  %139 = getelementptr inbounds %"struct.blink::AbstractInlineTextBox::WordBoundaries", %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %125, i64 0, i32 1
  %140 = load i32, i32* %110, align 4
  %141 = load i32, i32* %70, align 8
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %150, label %143, !prof !3

143:                                              ; preds = %138
  %144 = load i32*, i32** %111, align 8
  %145 = zext i32 %140 to i64
  %146 = getelementptr inbounds i32, i32* %144, i64 %145
  %147 = load i32, i32* %139, align 4
  store i32 %147, i32* %146, align 4
  %148 = load i32, i32* %110, align 4
  %149 = add i32 %148, 1
  store i32 %149, i32* %110, align 4
  br label %151

150:                                              ; preds = %138
  call void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKiEEvOT_(%"class.WTF::Vector.1743"* %2, i32* dereferenceable(4) %139) #14
  br label %151

151:                                              ; preds = %143, %150
  %152 = getelementptr inbounds %"struct.blink::AbstractInlineTextBox::WordBoundaries", %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %125, i64 1
  %153 = icmp eq %"struct.blink::AbstractInlineTextBox::WordBoundaries"* %152, %105
  br i1 %153, label %112, label %124

154:                                              ; preds = %3, %8, %28, %29, %123
  ret void
}

declare void @_ZNK5blink21AbstractInlineTextBox17GetWordBoundariesERN3WTF6VectorINS0_14WordBoundariesELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AbstractInlineTextBox"*, %"class.WTF::Vector.1753"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15AXInlineTextBox29TextOffsetInFormattingContextEi(%"class.blink::AXInlineTextBox"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #14
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %6, align 8
  %8 = bitcast %"class.blink::AbstractInlineTextBox"* %7 to i32 (%"class.blink::AbstractInlineTextBox"*, i32)***
  %9 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)**, i32 (%"class.blink::AbstractInlineTextBox"*, i32)*** %8, align 8
  %10 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %9, i64 6
  %11 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %10, align 8
  %12 = tail call i32 %11(%"class.blink::AbstractInlineTextBox"* %7, i32 %1) #14
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ 0, %2 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15AXInlineTextBox21TextOffsetInContainerEi(%"class.blink::AXInlineTextBox"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #14
  br i1 %4, label %26, label %5

5:                                                ; preds = %2
  %6 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %3) #14
  br i1 %6, label %15, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %8, align 8
  %10 = bitcast %"class.blink::AbstractInlineTextBox"* %9 to i32 (%"class.blink::AbstractInlineTextBox"*, i32)***
  %11 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)**, i32 (%"class.blink::AbstractInlineTextBox"*, i32)*** %10, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %11, i64 6
  %13 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::AbstractInlineTextBox"* %9, i32 %1) #14
  br label %15

15:                                               ; preds = %5, %7
  %16 = phi i32 [ %14, %7 ], [ 0, %5 ]
  %17 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %3) #14
  %18 = icmp eq %"class.blink::AXObject"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::AXObject"* %17 to i32 (%"class.blink::AXObject"*, i32)***
  %21 = load i32 (%"class.blink::AXObject"*, i32)**, i32 (%"class.blink::AXObject"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %21, i64 89
  %23 = load i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %22, align 8
  %24 = tail call i32 %23(%"class.blink::AXObject"* nonnull %17, i32 0) #14
  %25 = sub nsw i32 %16, %24
  br label %26

26:                                               ; preds = %19, %15, %2
  %27 = phi i32 [ 0, %2 ], [ %25, %19 ], [ %16, %15 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink15AXInlineTextBox7GetNameERN2ax5mojom8NameFromEPNS_10HeapVectorINS_6MemberINS_8AXObjectEEELj0EEE(%"class.blink::AXInlineTextBox"*, i32* nocapture dereferenceable(4), %"class.blink::HeapVector.1646"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %4) #14
  br i1 %5, label %14, label %6

6:                                                ; preds = %3
  store i32 5, i32* %1, align 4
  %7 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %7, align 8
  %9 = bitcast %"class.blink::AbstractInlineTextBox"* %8 to %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)***
  %10 = load %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)**, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)** %10, i64 9
  %12 = load %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.WTF::StringImpl"* (%"class.blink::AbstractInlineTextBox"*)** %11, align 8
  %13 = tail call %"class.WTF::StringImpl"* %12(%"class.blink::AbstractInlineTextBox"* %8) #14
  br label %14

14:                                               ; preds = %3, %6
  %15 = phi %"class.WTF::StringImpl"* [ %13, %6 ], [ null, %3 ]
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink15AXInlineTextBox16GetTextDirectionEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = bitcast %"class.blink::AbstractInlineTextBox"* %6 to i32 (%"class.blink::AbstractInlineTextBox"*)***
  %8 = load i32 (%"class.blink::AbstractInlineTextBox"*)**, i32 (%"class.blink::AbstractInlineTextBox"*)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %8, i64 7
  %10 = load i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %9, align 8
  %11 = tail call i32 %10(%"class.blink::AbstractInlineTextBox"* %6) #14
  %12 = add i32 %11, -1
  %13 = icmp ult i32 %12, 3
  br i1 %13, label %14, label %16

14:                                               ; preds = %4
  %15 = add i32 %11, 1
  ret i32 %15

16:                                               ; preds = %4, %1
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink15AXInlineTextBox7GetNodeEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %8, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = tail call %"class.blink::Node"* @_ZNK5blink21AbstractInlineTextBox7GetNodeEv(%"class.blink::AbstractInlineTextBox"* %6) #14
  br label %8

8:                                                ; preds = %1, %4
  %9 = phi %"class.blink::Node"* [ %7, %4 ], [ null, %1 ]
  ret %"class.blink::Node"* %9
}

declare %"class.blink::Node"* @_ZNK5blink21AbstractInlineTextBox7GetNodeEv(%"class.blink::AbstractInlineTextBox"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Document"* @_ZNK5blink15AXInlineTextBox11GetDocumentEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #14
  %4 = icmp eq %"class.blink::AXObject"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #14
  %7 = bitcast %"class.blink::AXObject"* %6 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %8 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %8, i64 126
  %10 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %9, align 8
  %11 = tail call %"class.blink::Document"* %10(%"class.blink::AXObject"* %6) #14
  br label %12

12:                                               ; preds = %1, %5
  %13 = phi %"class.blink::Document"* [ %11, %5 ], [ null, %1 ]
  ret %"class.blink::Document"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink15AXInlineTextBox10NextOnLineEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %43, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = bitcast %"class.blink::AbstractInlineTextBox"* %6 to i1 (%"class.blink::AbstractInlineTextBox"*)***
  %8 = load i1 (%"class.blink::AbstractInlineTextBox"*)**, i1 (%"class.blink::AbstractInlineTextBox"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %8, i64 11
  %10 = load i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::AbstractInlineTextBox"* %6) #14
  br i1 %11, label %12, label %19

12:                                               ; preds = %4
  %13 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #14
  %14 = bitcast %"class.blink::AXObject"* %13 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %15 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %15, i64 84
  %17 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::AXObject"* %17(%"class.blink::AXObject"* %13) #14
  br label %43

19:                                               ; preds = %4
  %20 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %21 = bitcast %"class.blink::AbstractInlineTextBox"* %20 to %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)***
  %22 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)**, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %22, i64 12
  %24 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %23, align 8
  %25 = tail call %"class.blink::AbstractInlineTextBox"* %24(%"class.blink::AbstractInlineTextBox"* %20) #14
  %26 = icmp eq %"class.blink::AbstractInlineTextBox"* %25, null
  br i1 %26, label %43, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %28, align 8
  %30 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_21AbstractInlineTextBoxEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %29, %"class.blink::AbstractInlineTextBox"* nonnull %25, %"class.blink::AXObject"* null) #14
  %31 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %25, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #14
  %33 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted.1741"* %37 to %"class.blink::AbstractInlineTextBox"*
  %39 = bitcast %"class.base::RefCounted.1741"* %37 to void (%"class.blink::AbstractInlineTextBox"*)***
  %40 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %40, i64 1
  %42 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %41, align 8
  tail call void %42(%"class.blink::AbstractInlineTextBox"* nonnull %38) #14
  br label %43

43:                                               ; preds = %19, %36, %27, %1, %12
  %44 = phi %"class.blink::AXObject"* [ %18, %12 ], [ null, %1 ], [ %30, %27 ], [ %30, %36 ], [ null, %19 ]
  ret %"class.blink::AXObject"* %44
}

declare %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_21AbstractInlineTextBoxEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"*, %"class.blink::AbstractInlineTextBox"*, %"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::AXObject"* @_ZNK5blink15AXInlineTextBox14PreviousOnLineEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %43, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %7 = bitcast %"class.blink::AbstractInlineTextBox"* %6 to i1 (%"class.blink::AbstractInlineTextBox"*)***
  %8 = load i1 (%"class.blink::AbstractInlineTextBox"*)**, i1 (%"class.blink::AbstractInlineTextBox"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %8, i64 10
  %10 = load i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::AbstractInlineTextBox"* %6) #14
  br i1 %11, label %12, label %19

12:                                               ; preds = %4
  %13 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #14
  %14 = bitcast %"class.blink::AXObject"* %13 to %"class.blink::AXObject"* (%"class.blink::AXObject"*)***
  %15 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)**, %"class.blink::AXObject"* (%"class.blink::AXObject"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %15, i64 85
  %17 = load %"class.blink::AXObject"* (%"class.blink::AXObject"*)*, %"class.blink::AXObject"* (%"class.blink::AXObject"*)** %16, align 8
  %18 = tail call %"class.blink::AXObject"* %17(%"class.blink::AXObject"* %13) #14
  br label %43

19:                                               ; preds = %4
  %20 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  %21 = bitcast %"class.blink::AbstractInlineTextBox"* %20 to %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)***
  %22 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)**, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*** %21, align 8
  %23 = getelementptr inbounds %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %22, i64 13
  %24 = load %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)*, %"class.blink::AbstractInlineTextBox"* (%"class.blink::AbstractInlineTextBox"*)** %23, align 8
  %25 = tail call %"class.blink::AbstractInlineTextBox"* %24(%"class.blink::AbstractInlineTextBox"* %20) #14
  %26 = icmp eq %"class.blink::AbstractInlineTextBox"* %25, null
  br i1 %26, label %43, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 14, i32 0, i32 0
  %29 = load %"class.blink::AXObjectCacheImpl"*, %"class.blink::AXObjectCacheImpl"** %28, align 8
  %30 = tail call %"class.blink::AXObject"* @_ZN5blink17AXObjectCacheImpl11GetOrCreateEPNS_21AbstractInlineTextBoxEPNS_8AXObjectE(%"class.blink::AXObjectCacheImpl"* %29, %"class.blink::AbstractInlineTextBox"* nonnull %25, %"class.blink::AXObject"* null) #14
  %31 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %25, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %32) #14
  %33 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %43

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %31, i64 -2
  %38 = bitcast %"class.base::RefCounted.1741"* %37 to %"class.blink::AbstractInlineTextBox"*
  %39 = bitcast %"class.base::RefCounted.1741"* %37 to void (%"class.blink::AbstractInlineTextBox"*)***
  %40 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %40, i64 1
  %42 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %41, align 8
  tail call void %42(%"class.blink::AbstractInlineTextBox"* nonnull %38) #14
  br label %43

43:                                               ; preds = %19, %36, %27, %1, %12
  %44 = phi %"class.blink::AXObject"* [ %18, %12 ], [ null, %1 ], [ %30, %27 ], [ %30, %36 ], [ null, %19 ]
  ret %"class.blink::AXObject"* %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AXInlineTextBox25SerializeMarkerAttributesEPN2ui10AXNodeDataE(%"class.blink::AXInlineTextBox"*, %"struct.ui::AXNodeData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::AXRange", align 8
  %4 = alloca %"class.std::__1::vector.1814", align 8
  %5 = alloca %"class.std::__1::vector.1814", align 8
  %6 = alloca %"class.std::__1::vector.1814", align 8
  %7 = alloca %"class.blink::AXPosition", align 8
  %8 = alloca %"class.blink::AXPosition", align 8
  %9 = alloca %"class.blink::PositionTemplate", align 8
  %10 = alloca %"class.blink::AXPosition", align 8
  %11 = alloca %"class.blink::PositionTemplate", align 8
  %12 = alloca %"class.blink::AXPosition", align 8
  %13 = alloca %"class.blink::EphemeralRangeTemplate", align 8
  %14 = alloca %"class.blink::PositionTemplate.1839", align 8
  %15 = alloca %"class.blink::PositionTemplate.1839", align 8
  %16 = alloca %"class.blink::HeapVector.1840", align 8
  %17 = alloca %"class.blink::AXPosition", align 8
  %18 = alloca %"class.blink::PositionTemplate", align 8
  %19 = alloca %"class.blink::AXPosition", align 8
  %20 = alloca %"class.blink::PositionTemplate", align 8
  %21 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase62is_accessibility_use_ax_position_for_document_markers_enabled_E, align 1, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %849, label %23

23:                                               ; preds = %2
  %24 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %25, label %849, label %26

26:                                               ; preds = %23
  %27 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %28 = icmp eq %"class.blink::AXObject"* %27, null
  br i1 %28, label %849, label %29

29:                                               ; preds = %26
  %30 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %31 = bitcast %"class.blink::AXObject"* %30 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %32 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %31, align 8
  %33 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %32, i64 126
  %34 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %33, align 8
  %35 = tail call %"class.blink::Document"* %34(%"class.blink::AXObject"* %30) #14
  %36 = icmp eq %"class.blink::Document"* %35, null
  br i1 %36, label %849, label %37

37:                                               ; preds = %29
  %38 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %39 = icmp eq %"class.blink::AXObject"* %38, null
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %42 = bitcast %"class.blink::AXObject"* %41 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %43 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %42, align 8
  %44 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %43, i64 126
  %45 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %44, align 8
  %46 = tail call %"class.blink::Document"* %45(%"class.blink::AXObject"* %41) #14
  br label %47

47:                                               ; preds = %37, %40
  %48 = phi %"class.blink::Document"* [ %46, %40 ], [ null, %37 ]
  %49 = tail call zeroext i1 @_ZNK5blink8Document41IsSlotAssignmentOrLegacyDistributionDirtyEv(%"class.blink::Document"* %48) #14
  br i1 %49, label %849, label %50

50:                                               ; preds = %47
  %51 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %51, label %849, label %52

52:                                               ; preds = %50
  %53 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %54 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %53, align 8
  %55 = bitcast %"class.blink::AbstractInlineTextBox"* %54 to i32 (%"class.blink::AbstractInlineTextBox"*)***
  %56 = load i32 (%"class.blink::AbstractInlineTextBox"*)**, i32 (%"class.blink::AbstractInlineTextBox"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %56, i64 5
  %58 = load i32 (%"class.blink::AbstractInlineTextBox"*)*, i32 (%"class.blink::AbstractInlineTextBox"*)** %57, align 8
  %59 = tail call i32 %58(%"class.blink::AbstractInlineTextBox"* %54) #14
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %849, label %61

61:                                               ; preds = %52
  %62 = bitcast %"class.blink::AXRange"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %62) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %62, i8 -86, i64 48, i1 false)
  call void @_ZN5blink7AXRange15RangeOfContentsERKNS_8AXObjectE(%"class.blink::AXRange"* nonnull sret %3, %"class.blink::AXObject"* dereferenceable(120) %24) #14
  %63 = bitcast %"class.std::__1::vector.1814"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #14
  %64 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %4, i64 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %4, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 24, i1 false) #14
  %67 = bitcast %"class.std::__1::vector.1814"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #14
  %68 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %5, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %5, i64 0, i32 0, i32 1
  %70 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 0, i64 24, i1 false) #14
  %71 = bitcast %"class.std::__1::vector.1814"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %71) #14
  %72 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %6, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %6, i64 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.std::__1::vector.1814", %"class.std::__1::vector.1814"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 24, i1 false) #14
  %75 = call i64 @_ZNK5blink8AXObject30GetAriaSpellingOrGrammarMarkerEv(%"class.blink::AXObject"* %24) #14
  %76 = trunc i64 %75 to i8
  %77 = lshr i64 %75, 32
  %78 = trunc i64 %77 to i32
  %79 = icmp eq i8 %76, 0
  br i1 %79, label %370, label %80

80:                                               ; preds = %61
  %81 = call i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32 %78) #14
  %82 = load i32*, i32** %65, align 8
  %83 = load i32*, i32** %66, align 8
  %84 = icmp ult i32* %82, %83
  %85 = ptrtoint i32* %83 to i64
  br i1 %84, label %86, label %90

86:                                               ; preds = %80
  store i32 %81, i32* %82, align 4
  %87 = getelementptr inbounds i32, i32* %82, i64 1
  %88 = ptrtoint i32* %87 to i64
  %89 = bitcast i32** %65 to i64*
  store i64 %88, i64* %89, align 8
  br label %136

90:                                               ; preds = %80
  %91 = ptrtoint i32* %82 to i64
  %92 = bitcast i32** %65 to i64*
  %93 = bitcast %"class.std::__1::vector.1814"* %4 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %91, %94
  %96 = ashr exact i64 %95, 2
  %97 = add nsw i64 %96, 1
  %98 = icmp ugt i64 %97, 4611686018427387903
  br i1 %98, label %99, label %101

99:                                               ; preds = %90
  %100 = bitcast %"class.std::__1::vector.1814"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %100) #15
  unreachable

101:                                              ; preds = %90
  %102 = bitcast i32** %66 to i64*
  %103 = sub i64 %85, %94
  %104 = ashr exact i64 %103, 2
  %105 = icmp ult i64 %104, 2305843009213693951
  br i1 %105, label %106, label %114

106:                                              ; preds = %101
  %107 = ashr exact i64 %103, 1
  %108 = icmp ult i64 %107, %97
  %109 = select i1 %108, i64 %97, i64 %107
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %119, label %111

111:                                              ; preds = %106
  %112 = icmp ugt i64 %109, 4611686018427387903
  br i1 %112, label %113, label %114

113:                                              ; preds = %111
  call void @abort() #15
  unreachable

114:                                              ; preds = %111, %101
  %115 = phi i64 [ %109, %111 ], [ 4611686018427387903, %101 ]
  %116 = shl i64 %115, 2
  %117 = call i8* @_Znwm(i64 %116) #16
  %118 = bitcast i8* %117 to i32*
  br label %119

119:                                              ; preds = %114, %106
  %120 = phi i64 [ %115, %114 ], [ 0, %106 ]
  %121 = phi i8* [ %117, %114 ], [ null, %106 ]
  %122 = phi i32* [ %118, %114 ], [ null, %106 ]
  %123 = getelementptr inbounds i32, i32* %122, i64 %96
  %124 = getelementptr inbounds i32, i32* %122, i64 %120
  %125 = ptrtoint i32* %124 to i64
  store i32 %81, i32* %123, align 4
  %126 = getelementptr inbounds i32, i32* %123, i64 1
  %127 = ptrtoint i32* %126 to i64
  %128 = ptrtoint i32* %122 to i64
  %129 = icmp sgt i64 %95, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %119
  %131 = inttoptr i64 %94 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %121, i8* align 4 %131, i64 %95, i1 false) #14
  br label %132

132:                                              ; preds = %130, %119
  store i64 %128, i64* %93, align 8
  store i64 %127, i64* %92, align 8
  store i64 %125, i64* %102, align 8
  %133 = icmp eq i64 %94, 0
  br i1 %133, label %136, label %134

134:                                              ; preds = %132
  %135 = inttoptr i64 %94 to i8*
  call void @_ZdlPv(i8* %135) #16
  br label %136

136:                                              ; preds = %86, %132, %134
  %137 = bitcast %"class.blink::AXPosition"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #14
  %138 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0
  %139 = bitcast %"class.blink::AXRange"* %3 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast %"class.blink::AXPosition"* %7 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %142, align 8
  switch i64 %140, label %143 [
    i64 0, label %169
    i64 -1, label %169
  ]

143:                                              ; preds = %136
  %144 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %145 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %144, i64 0, i32 1
  %146 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %145) #14
  %147 = icmp eq i8* %146, null
  br i1 %147, label %148, label %150, !prof !3

148:                                              ; preds = %143
  %149 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %145, i8* %149) #14
  br label %150

150:                                              ; preds = %148, %143
  %151 = phi i8* [ %149, %148 ], [ %146, %143 ]
  %152 = bitcast i8* %151 to %"class.blink::ThreadState"**
  %153 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %153, i64 0, i32 4, i32 0, i32 0, i32 0
  %155 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %155, i64 0, i32 0, i32 0
  %157 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  %158 = icmp eq %"class.blink::PersistentNode"* %157, null
  br i1 %158, label %159, label %162, !prof !3

159:                                              ; preds = %150
  %160 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %155, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %160) #14
  %161 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %156, align 8
  br label %162

162:                                              ; preds = %159, %150
  %163 = phi %"class.blink::PersistentNode"* [ %161, %159 ], [ %157, %150 ]
  %164 = bitcast %"class.blink::PersistentNode"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.blink::PersistentRegion"* %155 to i64*
  store i64 %165, i64* %166, align 8
  %167 = bitcast %"class.blink::PersistentNode"* %163 to %"class.blink::PersistentBase.1828"**
  store %"class.blink::PersistentBase.1828"* %138, %"class.blink::PersistentBase.1828"** %167, align 8
  %168 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %163, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %168, align 8
  store %"class.blink::PersistentNode"* %163, %"class.blink::PersistentNode"** %142, align 8
  br label %169

169:                                              ; preds = %136, %136, %162
  %170 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %7, i64 0, i32 1
  %171 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 0, i32 1
  %172 = bitcast i32* %171 to i64*
  %173 = bitcast i32* %170 to i64*
  %174 = load i64, i64* %172, align 8
  store i64 %174, i64* %173, align 8
  %175 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %7) #14
  %176 = load i32*, i32** %69, align 8
  %177 = load i32*, i32** %70, align 8
  %178 = icmp ult i32* %176, %177
  %179 = ptrtoint i32* %177 to i64
  br i1 %178, label %180, label %184

180:                                              ; preds = %169
  store i32 %175, i32* %176, align 4
  %181 = getelementptr inbounds i32, i32* %176, i64 1
  %182 = ptrtoint i32* %181 to i64
  %183 = bitcast i32** %69 to i64*
  store i64 %182, i64* %183, align 8
  br label %230

184:                                              ; preds = %169
  %185 = ptrtoint i32* %176 to i64
  %186 = bitcast i32** %69 to i64*
  %187 = bitcast %"class.std::__1::vector.1814"* %5 to i64*
  %188 = load i64, i64* %187, align 8
  %189 = sub i64 %185, %188
  %190 = ashr exact i64 %189, 2
  %191 = add nsw i64 %190, 1
  %192 = icmp ugt i64 %191, 4611686018427387903
  br i1 %192, label %193, label %195

193:                                              ; preds = %184
  %194 = bitcast %"class.std::__1::vector.1814"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %194) #15
  unreachable

195:                                              ; preds = %184
  %196 = bitcast i32** %70 to i64*
  %197 = sub i64 %179, %188
  %198 = ashr exact i64 %197, 2
  %199 = icmp ult i64 %198, 2305843009213693951
  br i1 %199, label %200, label %208

200:                                              ; preds = %195
  %201 = ashr exact i64 %197, 1
  %202 = icmp ult i64 %201, %191
  %203 = select i1 %202, i64 %191, i64 %201
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %213, label %205

205:                                              ; preds = %200
  %206 = icmp ugt i64 %203, 4611686018427387903
  br i1 %206, label %207, label %208

207:                                              ; preds = %205
  call void @abort() #15
  unreachable

208:                                              ; preds = %205, %195
  %209 = phi i64 [ %203, %205 ], [ 4611686018427387903, %195 ]
  %210 = shl i64 %209, 2
  %211 = call i8* @_Znwm(i64 %210) #16
  %212 = bitcast i8* %211 to i32*
  br label %213

213:                                              ; preds = %208, %200
  %214 = phi i64 [ %209, %208 ], [ 0, %200 ]
  %215 = phi i8* [ %211, %208 ], [ null, %200 ]
  %216 = phi i32* [ %212, %208 ], [ null, %200 ]
  %217 = getelementptr inbounds i32, i32* %216, i64 %190
  %218 = getelementptr inbounds i32, i32* %216, i64 %214
  %219 = ptrtoint i32* %218 to i64
  store i32 %175, i32* %217, align 4
  %220 = getelementptr inbounds i32, i32* %217, i64 1
  %221 = ptrtoint i32* %220 to i64
  %222 = ptrtoint i32* %216 to i64
  %223 = icmp sgt i64 %189, 0
  br i1 %223, label %224, label %226

224:                                              ; preds = %213
  %225 = inttoptr i64 %188 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %215, i8* align 4 %225, i64 %189, i1 false) #14
  br label %226

226:                                              ; preds = %224, %213
  store i64 %222, i64* %187, align 8
  store i64 %221, i64* %186, align 8
  store i64 %219, i64* %196, align 8
  %227 = icmp eq i64 %188, 0
  br i1 %227, label %230, label %228

228:                                              ; preds = %226
  %229 = inttoptr i64 %188 to i8*
  call void @_ZdlPv(i8* %229) #16
  br label %230

230:                                              ; preds = %180, %226, %228
  %231 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %142, align 8
  %232 = icmp eq %"class.blink::PersistentNode"* %231, null
  br i1 %232, label %252, label %233

233:                                              ; preds = %230
  %234 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %235 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %234, i64 0, i32 1
  %236 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %235) #14
  %237 = icmp eq i8* %236, null
  br i1 %237, label %238, label %240, !prof !3

238:                                              ; preds = %233
  %239 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %235, i8* %239) #14
  br label %240

240:                                              ; preds = %238, %233
  %241 = phi i8* [ %239, %238 ], [ %236, %233 ]
  %242 = bitcast i8* %241 to %"class.blink::ThreadState"**
  %243 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %242, align 8
  %244 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %243, i64 0, i32 4, i32 0, i32 0, i32 0
  %245 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %244, align 8
  %246 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %142, align 8
  %247 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %245, i64 0, i32 0, i32 0
  %248 = bitcast %"class.blink::PersistentRegion"* %245 to i64*
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.blink::PersistentNode"* %246 to i64*
  store i64 %249, i64* %250, align 8
  %251 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %246, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %251, align 8
  store %"class.blink::PersistentNode"* %246, %"class.blink::PersistentNode"** %247, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %142, align 8
  br label %252

252:                                              ; preds = %230, %240
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #14
  %253 = bitcast %"class.blink::AXPosition"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %253) #14
  %254 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 1
  %255 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 0, i32 0
  %256 = bitcast %"class.blink::AXPosition"* %254 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = bitcast %"class.blink::AXPosition"* %8 to i64*
  store i64 %257, i64* %258, align 8
  %259 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %259, align 8
  switch i64 %257, label %260 [
    i64 0, label %286
    i64 -1, label %286
  ]

260:                                              ; preds = %252
  %261 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %262 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %261, i64 0, i32 1
  %263 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %262) #14
  %264 = icmp eq i8* %263, null
  br i1 %264, label %265, label %267, !prof !3

265:                                              ; preds = %260
  %266 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %262, i8* %266) #14
  br label %267

267:                                              ; preds = %265, %260
  %268 = phi i8* [ %266, %265 ], [ %263, %260 ]
  %269 = bitcast i8* %268 to %"class.blink::ThreadState"**
  %270 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %269, align 8
  %271 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %270, i64 0, i32 4, i32 0, i32 0, i32 0
  %272 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %271, align 8
  %273 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %272, i64 0, i32 0, i32 0
  %274 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %273, align 8
  %275 = icmp eq %"class.blink::PersistentNode"* %274, null
  br i1 %275, label %276, label %279, !prof !3

276:                                              ; preds = %267
  %277 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %272, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %277) #14
  %278 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %273, align 8
  br label %279

279:                                              ; preds = %276, %267
  %280 = phi %"class.blink::PersistentNode"* [ %278, %276 ], [ %274, %267 ]
  %281 = bitcast %"class.blink::PersistentNode"* %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = bitcast %"class.blink::PersistentRegion"* %272 to i64*
  store i64 %282, i64* %283, align 8
  %284 = bitcast %"class.blink::PersistentNode"* %280 to %"class.blink::PersistentBase.1828"**
  store %"class.blink::PersistentBase.1828"* %255, %"class.blink::PersistentBase.1828"** %284, align 8
  %285 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %280, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %285, align 8
  store %"class.blink::PersistentNode"* %280, %"class.blink::PersistentNode"** %259, align 8
  br label %286

286:                                              ; preds = %252, %252, %279
  %287 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %8, i64 0, i32 1
  %288 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 1, i32 1
  %289 = bitcast i32* %288 to i64*
  %290 = bitcast i32* %287 to i64*
  %291 = load i64, i64* %289, align 8
  store i64 %291, i64* %290, align 8
  %292 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %8) #14
  %293 = load i32*, i32** %73, align 8
  %294 = load i32*, i32** %74, align 8
  %295 = icmp ult i32* %293, %294
  %296 = ptrtoint i32* %294 to i64
  br i1 %295, label %297, label %301

297:                                              ; preds = %286
  store i32 %292, i32* %293, align 4
  %298 = getelementptr inbounds i32, i32* %293, i64 1
  %299 = ptrtoint i32* %298 to i64
  %300 = bitcast i32** %73 to i64*
  store i64 %299, i64* %300, align 8
  br label %347

301:                                              ; preds = %286
  %302 = ptrtoint i32* %293 to i64
  %303 = bitcast i32** %73 to i64*
  %304 = bitcast %"class.std::__1::vector.1814"* %6 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = sub i64 %302, %305
  %307 = ashr exact i64 %306, 2
  %308 = add nsw i64 %307, 1
  %309 = icmp ugt i64 %308, 4611686018427387903
  br i1 %309, label %310, label %312

310:                                              ; preds = %301
  %311 = bitcast %"class.std::__1::vector.1814"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %311) #15
  unreachable

312:                                              ; preds = %301
  %313 = bitcast i32** %74 to i64*
  %314 = sub i64 %296, %305
  %315 = ashr exact i64 %314, 2
  %316 = icmp ult i64 %315, 2305843009213693951
  br i1 %316, label %317, label %325

317:                                              ; preds = %312
  %318 = ashr exact i64 %314, 1
  %319 = icmp ult i64 %318, %308
  %320 = select i1 %319, i64 %308, i64 %318
  %321 = icmp eq i64 %320, 0
  br i1 %321, label %330, label %322

322:                                              ; preds = %317
  %323 = icmp ugt i64 %320, 4611686018427387903
  br i1 %323, label %324, label %325

324:                                              ; preds = %322
  call void @abort() #15
  unreachable

325:                                              ; preds = %322, %312
  %326 = phi i64 [ %320, %322 ], [ 4611686018427387903, %312 ]
  %327 = shl i64 %326, 2
  %328 = call i8* @_Znwm(i64 %327) #16
  %329 = bitcast i8* %328 to i32*
  br label %330

330:                                              ; preds = %325, %317
  %331 = phi i64 [ %326, %325 ], [ 0, %317 ]
  %332 = phi i8* [ %328, %325 ], [ null, %317 ]
  %333 = phi i32* [ %329, %325 ], [ null, %317 ]
  %334 = getelementptr inbounds i32, i32* %333, i64 %307
  %335 = getelementptr inbounds i32, i32* %333, i64 %331
  %336 = ptrtoint i32* %335 to i64
  store i32 %292, i32* %334, align 4
  %337 = getelementptr inbounds i32, i32* %334, i64 1
  %338 = ptrtoint i32* %337 to i64
  %339 = ptrtoint i32* %333 to i64
  %340 = icmp sgt i64 %306, 0
  br i1 %340, label %341, label %343

341:                                              ; preds = %330
  %342 = inttoptr i64 %305 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %332, i8* align 4 %342, i64 %306, i1 false) #14
  br label %343

343:                                              ; preds = %341, %330
  store i64 %339, i64* %304, align 8
  store i64 %338, i64* %303, align 8
  store i64 %336, i64* %313, align 8
  %344 = icmp eq i64 %305, 0
  br i1 %344, label %347, label %345

345:                                              ; preds = %343
  %346 = inttoptr i64 %305 to i8*
  call void @_ZdlPv(i8* %346) #16
  br label %347

347:                                              ; preds = %297, %343, %345
  %348 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %259, align 8
  %349 = icmp eq %"class.blink::PersistentNode"* %348, null
  br i1 %349, label %369, label %350

350:                                              ; preds = %347
  %351 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %352 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %351, i64 0, i32 1
  %353 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %352) #14
  %354 = icmp eq i8* %353, null
  br i1 %354, label %355, label %357, !prof !3

355:                                              ; preds = %350
  %356 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %352, i8* %356) #14
  br label %357

357:                                              ; preds = %355, %350
  %358 = phi i8* [ %356, %355 ], [ %353, %350 ]
  %359 = bitcast i8* %358 to %"class.blink::ThreadState"**
  %360 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %359, align 8
  %361 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %360, i64 0, i32 4, i32 0, i32 0, i32 0
  %362 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %361, align 8
  %363 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %259, align 8
  %364 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %362, i64 0, i32 0, i32 0
  %365 = bitcast %"class.blink::PersistentRegion"* %362 to i64*
  %366 = load i64, i64* %365, align 8
  %367 = bitcast %"class.blink::PersistentNode"* %363 to i64*
  store i64 %366, i64* %367, align 8
  %368 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %363, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %368, align 8
  store %"class.blink::PersistentNode"* %363, %"class.blink::PersistentNode"** %364, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %259, align 8
  br label %369

369:                                              ; preds = %347, %357
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %253) #14
  br label %370

370:                                              ; preds = %61, %369
  %371 = phi i32 [ %78, %369 ], [ -1431655766, %61 ]
  %372 = phi i8 [ 1, %369 ], [ 0, %61 ]
  %373 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %374 = icmp eq %"class.blink::AXObject"* %373, null
  br i1 %374, label %382, label %375

375:                                              ; preds = %370
  %376 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %377 = bitcast %"class.blink::AXObject"* %376 to %"class.blink::Document"* (%"class.blink::AXObject"*)***
  %378 = load %"class.blink::Document"* (%"class.blink::AXObject"*)**, %"class.blink::Document"* (%"class.blink::AXObject"*)*** %377, align 8
  %379 = getelementptr inbounds %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %378, i64 126
  %380 = load %"class.blink::Document"* (%"class.blink::AXObject"*)*, %"class.blink::Document"* (%"class.blink::AXObject"*)** %379, align 8
  %381 = call %"class.blink::Document"* %380(%"class.blink::AXObject"* %376) #14
  br label %382

382:                                              ; preds = %370, %375
  %383 = phi %"class.blink::Document"* [ %381, %375 ], [ null, %370 ]
  %384 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %383, i64 0, i32 81, i32 0, i32 0
  %385 = load %"class.blink::DocumentMarkerController"*, %"class.blink::DocumentMarkerController"** %384, align 8
  %386 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %386) #14
  %387 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %9, i64 0, i32 0, i32 0, i32 0
  %388 = bitcast %"class.blink::AXPosition"* %10 to i8*
  %389 = bitcast %"class.blink::PositionTemplate"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %389, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %388) #14
  %390 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %10, i64 0, i32 0, i32 0
  %391 = bitcast %"class.blink::AXRange"* %3 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = bitcast %"class.blink::AXPosition"* %10 to i64*
  store i64 %392, i64* %393, align 8
  %394 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %10, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %394, align 8
  switch i64 %392, label %395 [
    i64 0, label %421
    i64 -1, label %421
  ]

395:                                              ; preds = %382
  %396 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %397 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %396, i64 0, i32 1
  %398 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %397) #14
  %399 = icmp eq i8* %398, null
  br i1 %399, label %400, label %402, !prof !3

400:                                              ; preds = %395
  %401 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %397, i8* %401) #14
  br label %402

402:                                              ; preds = %400, %395
  %403 = phi i8* [ %401, %400 ], [ %398, %395 ]
  %404 = bitcast i8* %403 to %"class.blink::ThreadState"**
  %405 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %404, align 8
  %406 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %405, i64 0, i32 4, i32 0, i32 0, i32 0
  %407 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %406, align 8
  %408 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %407, i64 0, i32 0, i32 0
  %409 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %408, align 8
  %410 = icmp eq %"class.blink::PersistentNode"* %409, null
  br i1 %410, label %411, label %414, !prof !3

411:                                              ; preds = %402
  %412 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %407, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %412) #14
  %413 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %408, align 8
  br label %414

414:                                              ; preds = %411, %402
  %415 = phi %"class.blink::PersistentNode"* [ %413, %411 ], [ %409, %402 ]
  %416 = bitcast %"class.blink::PersistentNode"* %415 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = bitcast %"class.blink::PersistentRegion"* %407 to i64*
  store i64 %417, i64* %418, align 8
  %419 = bitcast %"class.blink::PersistentNode"* %415 to %"class.blink::PersistentBase.1828"**
  store %"class.blink::PersistentBase.1828"* %390, %"class.blink::PersistentBase.1828"** %419, align 8
  %420 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %415, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %420, align 8
  store %"class.blink::PersistentNode"* %415, %"class.blink::PersistentNode"** %394, align 8
  br label %421

421:                                              ; preds = %382, %382, %414
  %422 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %10, i64 0, i32 1
  %423 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 0, i32 1
  %424 = bitcast i32* %423 to i64*
  %425 = bitcast i32* %422 to i64*
  %426 = load i64, i64* %424, align 8
  store i64 %426, i64* %425, align 8
  call void @_ZNK5blink10AXPosition10ToPositionENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionTemplate"* nonnull sret %9, %"class.blink::AXPosition"* nonnull %10, i32 0) #14
  %427 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %394, align 8
  %428 = icmp eq %"class.blink::PersistentNode"* %427, null
  br i1 %428, label %448, label %429

429:                                              ; preds = %421
  %430 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %431 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %430, i64 0, i32 1
  %432 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %431) #14
  %433 = icmp eq i8* %432, null
  br i1 %433, label %434, label %436, !prof !3

434:                                              ; preds = %429
  %435 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %431, i8* %435) #14
  br label %436

436:                                              ; preds = %434, %429
  %437 = phi i8* [ %435, %434 ], [ %432, %429 ]
  %438 = bitcast i8* %437 to %"class.blink::ThreadState"**
  %439 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %438, align 8
  %440 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %439, i64 0, i32 4, i32 0, i32 0, i32 0
  %441 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %440, align 8
  %442 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %394, align 8
  %443 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %441, i64 0, i32 0, i32 0
  %444 = bitcast %"class.blink::PersistentRegion"* %441 to i64*
  %445 = load i64, i64* %444, align 8
  %446 = bitcast %"class.blink::PersistentNode"* %442 to i64*
  store i64 %445, i64* %446, align 8
  %447 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %442, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %447, align 8
  store %"class.blink::PersistentNode"* %442, %"class.blink::PersistentNode"** %443, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %394, align 8
  br label %448

448:                                              ; preds = %421, %436
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %388) #14
  %449 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %449) #14
  %450 = getelementptr inbounds %"class.blink::PositionTemplate", %"class.blink::PositionTemplate"* %11, i64 0, i32 0, i32 0, i32 0
  %451 = bitcast %"class.blink::AXPosition"* %12 to i8*
  %452 = bitcast %"class.blink::PositionTemplate"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %452, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %451) #14
  %453 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 1
  %454 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %12, i64 0, i32 0, i32 0
  %455 = bitcast %"class.blink::AXPosition"* %453 to i64*
  %456 = load i64, i64* %455, align 8
  %457 = bitcast %"class.blink::AXPosition"* %12 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %12, i64 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %458, align 8
  switch i64 %456, label %459 [
    i64 0, label %485
    i64 -1, label %485
  ]

459:                                              ; preds = %448
  %460 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %461 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %460, i64 0, i32 1
  %462 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %461) #14
  %463 = icmp eq i8* %462, null
  br i1 %463, label %464, label %466, !prof !3

464:                                              ; preds = %459
  %465 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %461, i8* %465) #14
  br label %466

466:                                              ; preds = %464, %459
  %467 = phi i8* [ %465, %464 ], [ %462, %459 ]
  %468 = bitcast i8* %467 to %"class.blink::ThreadState"**
  %469 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %468, align 8
  %470 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %469, i64 0, i32 4, i32 0, i32 0, i32 0
  %471 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %470, align 8
  %472 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %471, i64 0, i32 0, i32 0
  %473 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %472, align 8
  %474 = icmp eq %"class.blink::PersistentNode"* %473, null
  br i1 %474, label %475, label %478, !prof !3

475:                                              ; preds = %466
  %476 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %471, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %476) #14
  %477 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %472, align 8
  br label %478

478:                                              ; preds = %475, %466
  %479 = phi %"class.blink::PersistentNode"* [ %477, %475 ], [ %473, %466 ]
  %480 = bitcast %"class.blink::PersistentNode"* %479 to i64*
  %481 = load i64, i64* %480, align 8
  %482 = bitcast %"class.blink::PersistentRegion"* %471 to i64*
  store i64 %481, i64* %482, align 8
  %483 = bitcast %"class.blink::PersistentNode"* %479 to %"class.blink::PersistentBase.1828"**
  store %"class.blink::PersistentBase.1828"* %454, %"class.blink::PersistentBase.1828"** %483, align 8
  %484 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %479, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv, void (%"class.blink::Visitor"*, i8*)** %484, align 8
  store %"class.blink::PersistentNode"* %479, %"class.blink::PersistentNode"** %458, align 8
  br label %485

485:                                              ; preds = %448, %448, %478
  %486 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %12, i64 0, i32 1
  %487 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %3, i64 0, i32 1, i32 1
  %488 = bitcast i32* %487 to i64*
  %489 = bitcast i32* %486 to i64*
  %490 = load i64, i64* %488, align 8
  store i64 %490, i64* %489, align 8
  call void @_ZNK5blink10AXPosition10ToPositionENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionTemplate"* nonnull sret %11, %"class.blink::AXPosition"* nonnull %12, i32 1) #14
  %491 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %458, align 8
  %492 = icmp eq %"class.blink::PersistentNode"* %491, null
  br i1 %492, label %512, label %493

493:                                              ; preds = %485
  %494 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %495 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %494, i64 0, i32 1
  %496 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %495) #14
  %497 = icmp eq i8* %496, null
  br i1 %497, label %498, label %500, !prof !3

498:                                              ; preds = %493
  %499 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %495, i8* %499) #14
  br label %500

500:                                              ; preds = %498, %493
  %501 = phi i8* [ %499, %498 ], [ %496, %493 ]
  %502 = bitcast i8* %501 to %"class.blink::ThreadState"**
  %503 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %502, align 8
  %504 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %503, i64 0, i32 4, i32 0, i32 0, i32 0
  %505 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %504, align 8
  %506 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %458, align 8
  %507 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %505, i64 0, i32 0, i32 0
  %508 = bitcast %"class.blink::PersistentRegion"* %505 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.blink::PersistentNode"* %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %506, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %511, align 8
  store %"class.blink::PersistentNode"* %506, %"class.blink::PersistentNode"** %507, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %458, align 8
  br label %512

512:                                              ; preds = %485, %500
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %451) #14
  %513 = load %"class.blink::Node"*, %"class.blink::Node"** %387, align 8
  %514 = icmp eq %"class.blink::Node"* %513, null
  %515 = load %"class.blink::Node"*, %"class.blink::Node"** %450, align 8
  %516 = icmp eq %"class.blink::Node"* %515, null
  %517 = or i1 %514, %516
  br i1 %517, label %827, label %518

518:                                              ; preds = %512
  %519 = call zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgtERKS4_(%"class.blink::PositionTemplate"* nonnull %9, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11) #14
  br i1 %519, label %827, label %520

520:                                              ; preds = %518
  %521 = bitcast %"class.blink::EphemeralRangeTemplate"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %521) #14
  %522 = bitcast %"class.blink::PositionTemplate.1839"* %14 to i8*
  %523 = bitcast %"class.blink::EphemeralRangeTemplate"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %523, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %522) #14
  call void @_ZN5blink20ToPositionInFlatTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate.1839"* nonnull sret %14, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %9) #14
  %524 = bitcast %"class.blink::PositionTemplate.1839"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %524) #14
  call void @_ZN5blink20ToPositionInFlatTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate.1839"* nonnull sret %15, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %11) #14
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"* nonnull %13, %"class.blink::PositionTemplate.1839"* nonnull dereferenceable(16) %14, %"class.blink::PositionTemplate.1839"* nonnull dereferenceable(16) %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %524) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %522) #14
  %525 = bitcast %"class.blink::HeapVector.1840"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %525) #14
  %526 = getelementptr inbounds %"class.blink::HeapVector.1840", %"class.blink::HeapVector.1840"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %527 = getelementptr inbounds %"class.blink::HeapVector.1840", %"class.blink::HeapVector.1840"* %16, i64 0, i32 0, i32 0, i32 0, i32 2
  %528 = bitcast %"class.blink::HeapVector.1840"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %528, i8 -86, i64 16, i1 false)
  call void @_ZN5blink24DocumentMarkerController24MarkersIntersectingRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_14DocumentMarker11MarkerTypesE(%"class.blink::HeapVector.1840"* nonnull sret %16, %"class.blink::DocumentMarkerController"* %385, %"class.blink::EphemeralRangeTemplate"* nonnull dereferenceable(32) %13, i32 119) #14
  %529 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %529, label %550, label %530

530:                                              ; preds = %520
  %531 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %531, label %539, label %532

532:                                              ; preds = %530
  %533 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %53, align 8
  %534 = bitcast %"class.blink::AbstractInlineTextBox"* %533 to i32 (%"class.blink::AbstractInlineTextBox"*, i32)***
  %535 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)**, i32 (%"class.blink::AbstractInlineTextBox"*, i32)*** %534, align 8
  %536 = getelementptr inbounds i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %535, i64 6
  %537 = load i32 (%"class.blink::AbstractInlineTextBox"*, i32)*, i32 (%"class.blink::AbstractInlineTextBox"*, i32)** %536, align 8
  %538 = call i32 %537(%"class.blink::AbstractInlineTextBox"* %533, i32 0) #14
  br label %539

539:                                              ; preds = %532, %530
  %540 = phi i32 [ %538, %532 ], [ 0, %530 ]
  %541 = call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %24) #14
  %542 = icmp eq %"class.blink::AXObject"* %541, null
  br i1 %542, label %550, label %543

543:                                              ; preds = %539
  %544 = bitcast %"class.blink::AXObject"* %541 to i32 (%"class.blink::AXObject"*, i32)***
  %545 = load i32 (%"class.blink::AXObject"*, i32)**, i32 (%"class.blink::AXObject"*, i32)*** %544, align 8
  %546 = getelementptr inbounds i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %545, i64 89
  %547 = load i32 (%"class.blink::AXObject"*, i32)*, i32 (%"class.blink::AXObject"*, i32)** %546, align 8
  %548 = call i32 %547(%"class.blink::AXObject"* nonnull %541, i32 0) #14
  %549 = sub nsw i32 %540, %548
  br label %550

550:                                              ; preds = %520, %539, %543
  %551 = phi i32 [ 0, %520 ], [ %549, %543 ], [ %540, %539 ]
  %552 = load %"struct.std::__1::pair.1846"*, %"struct.std::__1::pair.1846"** %526, align 8
  %553 = load i32, i32* %527, align 4
  %554 = zext i32 %553 to i64
  %555 = getelementptr inbounds %"struct.std::__1::pair.1846", %"struct.std::__1::pair.1846"* %552, i64 %554
  %556 = icmp eq i32 %553, 0
  br i1 %556, label %576, label %557

557:                                              ; preds = %550
  %558 = icmp ne i8 %372, 0
  %559 = bitcast %"class.blink::AXPosition"* %17 to i8*
  %560 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %17, i64 0, i32 0, i32 0, i32 1, i32 0
  %561 = bitcast %"class.blink::PositionTemplate"* %18 to i8*
  %562 = bitcast %"class.blink::AXPosition"* %19 to i8*
  %563 = getelementptr inbounds %"class.blink::AXPosition", %"class.blink::AXPosition"* %19, i64 0, i32 0, i32 0, i32 1, i32 0
  %564 = bitcast %"class.blink::PositionTemplate"* %20 to i8*
  %565 = bitcast i32** %65 to i64*
  %566 = bitcast %"class.std::__1::vector.1814"* %4 to i64*
  %567 = bitcast i32** %66 to i64*
  %568 = bitcast i32** %69 to i64*
  %569 = bitcast %"class.std::__1::vector.1814"* %5 to i64*
  %570 = bitcast i32** %70 to i64*
  %571 = bitcast i32** %73 to i64*
  %572 = bitcast %"class.std::__1::vector.1814"* %6 to i64*
  %573 = bitcast i32** %74 to i64*
  %574 = bitcast %"class.blink::AXPosition"* %17 to i8*
  %575 = bitcast %"class.blink::AXPosition"* %19 to i8*
  br label %580

576:                                              ; preds = %822, %550
  %577 = load i32*, i32** %64, align 8
  %578 = load i32*, i32** %65, align 8
  %579 = icmp eq i32* %577, %578
  br i1 %579, label %826, label %825

580:                                              ; preds = %557, %822
  %581 = phi %"struct.std::__1::pair.1846"* [ %552, %557 ], [ %823, %822 ]
  %582 = getelementptr inbounds %"struct.std::__1::pair.1846", %"struct.std::__1::pair.1846"* %581, i64 0, i32 1, i32 0, i32 0
  %583 = load %"class.blink::DocumentMarker"*, %"class.blink::DocumentMarker"** %582, align 8
  %584 = bitcast %"class.blink::DocumentMarker"* %583 to i32 (%"class.blink::DocumentMarker"*)***
  %585 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %584, align 8
  %586 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %585, i64 2
  %587 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %586, align 8
  %588 = call i32 %587(%"class.blink::DocumentMarker"* %583) #14
  %589 = icmp eq i32 %371, %588
  %590 = and i1 %558, %589
  br i1 %590, label %822, label %591

591:                                              ; preds = %580
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %559) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %574, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %561) #14
  %592 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %592, label %596, label %593

593:                                              ; preds = %591
  %594 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %53, align 8
  %595 = call %"class.blink::Node"* @_ZNK5blink21AbstractInlineTextBox7GetNodeEv(%"class.blink::AbstractInlineTextBox"* %594) #14
  br label %596

596:                                              ; preds = %591, %593
  %597 = phi %"class.blink::Node"* [ %595, %593 ], [ null, %591 ]
  %598 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %583, i64 0, i32 1
  %599 = load i32, i32* %598, align 8
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %18, %"class.blink::Node"* dereferenceable(64) %597, i32 %599) #14
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %17, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %18, i32 1, i32 0) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %561) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %562) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %575, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %564) #14
  %600 = call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %24) #14
  br i1 %600, label %604, label %601

601:                                              ; preds = %596
  %602 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %53, align 8
  %603 = call %"class.blink::Node"* @_ZNK5blink21AbstractInlineTextBox7GetNodeEv(%"class.blink::AbstractInlineTextBox"* %602) #14
  br label %604

604:                                              ; preds = %596, %601
  %605 = phi %"class.blink::Node"* [ %603, %601 ], [ null, %596 ]
  %606 = getelementptr inbounds %"class.blink::DocumentMarker", %"class.blink::DocumentMarker"* %583, i64 0, i32 2
  %607 = load i32, i32* %606, align 4
  call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"* nonnull %20, %"class.blink::Node"* dereferenceable(64) %605, i32 %607) #14
  call void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* nonnull sret %19, %"class.blink::PositionTemplate"* nonnull dereferenceable(16) %20, i32 1, i32 1) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %564) #14
  %608 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %17, %"class.WTF::String"* null) #14
  br i1 %608, label %609, label %777

609:                                              ; preds = %604
  %610 = call zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"* nonnull %19, %"class.WTF::String"* null) #14
  br i1 %610, label %611, label %777

611:                                              ; preds = %609
  %612 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %17) #14
  %613 = sub nsw i32 %612, %551
  %614 = icmp sgt i32 %613, 0
  %615 = select i1 %614, i32 %613, i32 0
  %616 = call i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"* nonnull %19) #14
  %617 = sub nsw i32 %616, %551
  %618 = icmp slt i32 %617, %59
  %619 = select i1 %618, i32 %617, i32 %59
  %620 = load i32 (%"class.blink::DocumentMarker"*)**, i32 (%"class.blink::DocumentMarker"*)*** %584, align 8
  %621 = getelementptr inbounds i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %620, i64 2
  %622 = load i32 (%"class.blink::DocumentMarker"*)*, i32 (%"class.blink::DocumentMarker"*)** %621, align 8
  %623 = call i32 %622(%"class.blink::DocumentMarker"* %583) #14
  %624 = call i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32 %623) #14
  %625 = load i32*, i32** %65, align 8
  %626 = load i32*, i32** %66, align 8
  %627 = icmp ult i32* %625, %626
  %628 = ptrtoint i32* %626 to i64
  br i1 %627, label %629, label %632

629:                                              ; preds = %611
  store i32 %624, i32* %625, align 4
  %630 = getelementptr inbounds i32, i32* %625, i64 1
  %631 = ptrtoint i32* %630 to i64
  store i64 %631, i64* %565, align 8
  br label %675

632:                                              ; preds = %611
  %633 = ptrtoint i32* %625 to i64
  %634 = load i64, i64* %566, align 8
  %635 = sub i64 %633, %634
  %636 = ashr exact i64 %635, 2
  %637 = add nsw i64 %636, 1
  %638 = icmp ugt i64 %637, 4611686018427387903
  br i1 %638, label %639, label %641

639:                                              ; preds = %632
  %640 = bitcast %"class.std::__1::vector.1814"* %4 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %640) #15
  unreachable

641:                                              ; preds = %632
  %642 = sub i64 %628, %634
  %643 = ashr exact i64 %642, 2
  %644 = icmp ult i64 %643, 2305843009213693951
  br i1 %644, label %645, label %653

645:                                              ; preds = %641
  %646 = ashr exact i64 %642, 1
  %647 = icmp ult i64 %646, %637
  %648 = select i1 %647, i64 %637, i64 %646
  %649 = icmp eq i64 %648, 0
  br i1 %649, label %658, label %650

650:                                              ; preds = %645
  %651 = icmp ugt i64 %648, 4611686018427387903
  br i1 %651, label %652, label %653

652:                                              ; preds = %650
  call void @abort() #15
  unreachable

653:                                              ; preds = %650, %641
  %654 = phi i64 [ %648, %650 ], [ 4611686018427387903, %641 ]
  %655 = shl i64 %654, 2
  %656 = call i8* @_Znwm(i64 %655) #16
  %657 = bitcast i8* %656 to i32*
  br label %658

658:                                              ; preds = %653, %645
  %659 = phi i64 [ %654, %653 ], [ 0, %645 ]
  %660 = phi i8* [ %656, %653 ], [ null, %645 ]
  %661 = phi i32* [ %657, %653 ], [ null, %645 ]
  %662 = getelementptr inbounds i32, i32* %661, i64 %636
  %663 = getelementptr inbounds i32, i32* %661, i64 %659
  %664 = ptrtoint i32* %663 to i64
  store i32 %624, i32* %662, align 4
  %665 = getelementptr inbounds i32, i32* %662, i64 1
  %666 = ptrtoint i32* %665 to i64
  %667 = ptrtoint i32* %661 to i64
  %668 = icmp sgt i64 %635, 0
  br i1 %668, label %669, label %671

669:                                              ; preds = %658
  %670 = inttoptr i64 %634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %660, i8* align 4 %670, i64 %635, i1 false) #14
  br label %671

671:                                              ; preds = %669, %658
  store i64 %667, i64* %566, align 8
  store i64 %666, i64* %565, align 8
  store i64 %664, i64* %567, align 8
  %672 = icmp eq i64 %634, 0
  br i1 %672, label %675, label %673

673:                                              ; preds = %671
  %674 = inttoptr i64 %634 to i8*
  call void @_ZdlPv(i8* %674) #16
  br label %675

675:                                              ; preds = %629, %671, %673
  %676 = load i32*, i32** %69, align 8
  %677 = load i32*, i32** %70, align 8
  %678 = icmp eq i32* %676, %677
  %679 = ptrtoint i32* %677 to i64
  br i1 %678, label %683, label %680

680:                                              ; preds = %675
  store i32 %615, i32* %676, align 4
  %681 = getelementptr inbounds i32, i32* %676, i64 1
  %682 = ptrtoint i32* %681 to i64
  store i64 %682, i64* %568, align 8
  br label %726

683:                                              ; preds = %675
  %684 = ptrtoint i32* %676 to i64
  %685 = load i64, i64* %569, align 8
  %686 = sub i64 %684, %685
  %687 = ashr exact i64 %686, 2
  %688 = add nsw i64 %687, 1
  %689 = icmp ugt i64 %688, 4611686018427387903
  br i1 %689, label %690, label %692

690:                                              ; preds = %683
  %691 = bitcast %"class.std::__1::vector.1814"* %5 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %691) #15
  unreachable

692:                                              ; preds = %683
  %693 = sub i64 %679, %685
  %694 = ashr exact i64 %693, 2
  %695 = icmp ult i64 %694, 2305843009213693951
  br i1 %695, label %696, label %704

696:                                              ; preds = %692
  %697 = ashr exact i64 %693, 1
  %698 = icmp ult i64 %697, %688
  %699 = select i1 %698, i64 %688, i64 %697
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %709, label %701

701:                                              ; preds = %696
  %702 = icmp ugt i64 %699, 4611686018427387903
  br i1 %702, label %703, label %704

703:                                              ; preds = %701
  call void @abort() #15
  unreachable

704:                                              ; preds = %701, %692
  %705 = phi i64 [ %699, %701 ], [ 4611686018427387903, %692 ]
  %706 = shl i64 %705, 2
  %707 = call i8* @_Znwm(i64 %706) #16
  %708 = bitcast i8* %707 to i32*
  br label %709

709:                                              ; preds = %704, %696
  %710 = phi i64 [ %705, %704 ], [ 0, %696 ]
  %711 = phi i8* [ %707, %704 ], [ null, %696 ]
  %712 = phi i32* [ %708, %704 ], [ null, %696 ]
  %713 = getelementptr inbounds i32, i32* %712, i64 %687
  %714 = getelementptr inbounds i32, i32* %712, i64 %710
  %715 = ptrtoint i32* %714 to i64
  store i32 %615, i32* %713, align 4
  %716 = getelementptr inbounds i32, i32* %713, i64 1
  %717 = ptrtoint i32* %716 to i64
  %718 = ptrtoint i32* %712 to i64
  %719 = icmp sgt i64 %686, 0
  br i1 %719, label %720, label %722

720:                                              ; preds = %709
  %721 = inttoptr i64 %685 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %711, i8* align 4 %721, i64 %686, i1 false) #14
  br label %722

722:                                              ; preds = %720, %709
  store i64 %718, i64* %569, align 8
  store i64 %717, i64* %568, align 8
  store i64 %715, i64* %570, align 8
  %723 = icmp eq i64 %685, 0
  br i1 %723, label %726, label %724

724:                                              ; preds = %722
  %725 = inttoptr i64 %685 to i8*
  call void @_ZdlPv(i8* %725) #16
  br label %726

726:                                              ; preds = %680, %722, %724
  %727 = load i32*, i32** %73, align 8
  %728 = load i32*, i32** %74, align 8
  %729 = icmp eq i32* %727, %728
  %730 = ptrtoint i32* %728 to i64
  br i1 %729, label %734, label %731

731:                                              ; preds = %726
  store i32 %619, i32* %727, align 4
  %732 = getelementptr inbounds i32, i32* %727, i64 1
  %733 = ptrtoint i32* %732 to i64
  store i64 %733, i64* %571, align 8
  br label %777

734:                                              ; preds = %726
  %735 = ptrtoint i32* %727 to i64
  %736 = load i64, i64* %572, align 8
  %737 = sub i64 %735, %736
  %738 = ashr exact i64 %737, 2
  %739 = add nsw i64 %738, 1
  %740 = icmp ugt i64 %739, 4611686018427387903
  br i1 %740, label %741, label %743

741:                                              ; preds = %734
  %742 = bitcast %"class.std::__1::vector.1814"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %742) #15
  unreachable

743:                                              ; preds = %734
  %744 = sub i64 %730, %736
  %745 = ashr exact i64 %744, 2
  %746 = icmp ult i64 %745, 2305843009213693951
  br i1 %746, label %747, label %755

747:                                              ; preds = %743
  %748 = ashr exact i64 %744, 1
  %749 = icmp ult i64 %748, %739
  %750 = select i1 %749, i64 %739, i64 %748
  %751 = icmp eq i64 %750, 0
  br i1 %751, label %760, label %752

752:                                              ; preds = %747
  %753 = icmp ugt i64 %750, 4611686018427387903
  br i1 %753, label %754, label %755

754:                                              ; preds = %752
  call void @abort() #15
  unreachable

755:                                              ; preds = %752, %743
  %756 = phi i64 [ %750, %752 ], [ 4611686018427387903, %743 ]
  %757 = shl i64 %756, 2
  %758 = call i8* @_Znwm(i64 %757) #16
  %759 = bitcast i8* %758 to i32*
  br label %760

760:                                              ; preds = %755, %747
  %761 = phi i64 [ %756, %755 ], [ 0, %747 ]
  %762 = phi i8* [ %758, %755 ], [ null, %747 ]
  %763 = phi i32* [ %759, %755 ], [ null, %747 ]
  %764 = getelementptr inbounds i32, i32* %763, i64 %738
  %765 = getelementptr inbounds i32, i32* %763, i64 %761
  %766 = ptrtoint i32* %765 to i64
  store i32 %619, i32* %764, align 4
  %767 = getelementptr inbounds i32, i32* %764, i64 1
  %768 = ptrtoint i32* %767 to i64
  %769 = ptrtoint i32* %763 to i64
  %770 = icmp sgt i64 %737, 0
  br i1 %770, label %771, label %773

771:                                              ; preds = %760
  %772 = inttoptr i64 %736 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %762, i8* align 4 %772, i64 %737, i1 false) #14
  br label %773

773:                                              ; preds = %771, %760
  store i64 %769, i64* %572, align 8
  store i64 %768, i64* %571, align 8
  store i64 %766, i64* %573, align 8
  %774 = icmp eq i64 %736, 0
  br i1 %774, label %777, label %775

775:                                              ; preds = %773
  %776 = inttoptr i64 %736 to i8*
  call void @_ZdlPv(i8* %776) #16
  br label %777

777:                                              ; preds = %775, %773, %731, %604, %609
  %778 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %563, align 8
  %779 = icmp eq %"class.blink::PersistentNode"* %778, null
  br i1 %779, label %799, label %780

780:                                              ; preds = %777
  %781 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %782 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %781, i64 0, i32 1
  %783 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %782) #14
  %784 = icmp eq i8* %783, null
  br i1 %784, label %785, label %787, !prof !3

785:                                              ; preds = %780
  %786 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %782, i8* %786) #14
  br label %787

787:                                              ; preds = %785, %780
  %788 = phi i8* [ %786, %785 ], [ %783, %780 ]
  %789 = bitcast i8* %788 to %"class.blink::ThreadState"**
  %790 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %789, align 8
  %791 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %790, i64 0, i32 4, i32 0, i32 0, i32 0
  %792 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %791, align 8
  %793 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %563, align 8
  %794 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %792, i64 0, i32 0, i32 0
  %795 = bitcast %"class.blink::PersistentRegion"* %792 to i64*
  %796 = load i64, i64* %795, align 8
  %797 = bitcast %"class.blink::PersistentNode"* %793 to i64*
  store i64 %796, i64* %797, align 8
  %798 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %793, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %798, align 8
  store %"class.blink::PersistentNode"* %793, %"class.blink::PersistentNode"** %794, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %563, align 8
  br label %799

799:                                              ; preds = %777, %787
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %562) #14
  %800 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %560, align 8
  %801 = icmp eq %"class.blink::PersistentNode"* %800, null
  br i1 %801, label %821, label %802

802:                                              ; preds = %799
  %803 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %804 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %803, i64 0, i32 1
  %805 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %804) #14
  %806 = icmp eq i8* %805, null
  br i1 %806, label %807, label %809, !prof !3

807:                                              ; preds = %802
  %808 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %804, i8* %808) #14
  br label %809

809:                                              ; preds = %807, %802
  %810 = phi i8* [ %808, %807 ], [ %805, %802 ]
  %811 = bitcast i8* %810 to %"class.blink::ThreadState"**
  %812 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %811, align 8
  %813 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %812, i64 0, i32 4, i32 0, i32 0, i32 0
  %814 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %813, align 8
  %815 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %560, align 8
  %816 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %814, i64 0, i32 0, i32 0
  %817 = bitcast %"class.blink::PersistentRegion"* %814 to i64*
  %818 = load i64, i64* %817, align 8
  %819 = bitcast %"class.blink::PersistentNode"* %815 to i64*
  store i64 %818, i64* %819, align 8
  %820 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %815, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %820, align 8
  store %"class.blink::PersistentNode"* %815, %"class.blink::PersistentNode"** %816, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %560, align 8
  br label %821

821:                                              ; preds = %799, %809
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %559) #14
  br label %822

822:                                              ; preds = %580, %821
  %823 = getelementptr inbounds %"struct.std::__1::pair.1846", %"struct.std::__1::pair.1846"* %581, i64 1
  %824 = icmp eq %"struct.std::__1::pair.1846"* %823, %555
  br i1 %824, label %576, label %580

825:                                              ; preds = %576
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 8, %"class.std::__1::vector.1814"* nonnull dereferenceable(24) %4) #14
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 9, %"class.std::__1::vector.1814"* nonnull dereferenceable(24) %5) #14
  call void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"* %1, i32 10, %"class.std::__1::vector.1814"* nonnull dereferenceable(24) %6) #14
  br label %826

826:                                              ; preds = %576, %825
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %525) #14
  call void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"* nonnull %13) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %521) #14
  br label %827

827:                                              ; preds = %518, %512, %826
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %449) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %386) #14
  %828 = load i32*, i32** %72, align 8
  %829 = icmp eq i32* %828, null
  br i1 %829, label %834, label %830

830:                                              ; preds = %827
  %831 = ptrtoint i32* %828 to i64
  %832 = bitcast i32** %73 to i64*
  store i64 %831, i64* %832, align 8
  %833 = bitcast i32* %828 to i8*
  call void @_ZdlPv(i8* %833) #16
  br label %834

834:                                              ; preds = %827, %830
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %71) #14
  %835 = load i32*, i32** %68, align 8
  %836 = icmp eq i32* %835, null
  br i1 %836, label %841, label %837

837:                                              ; preds = %834
  %838 = ptrtoint i32* %835 to i64
  %839 = bitcast i32** %69 to i64*
  store i64 %838, i64* %839, align 8
  %840 = bitcast i32* %835 to i8*
  call void @_ZdlPv(i8* %840) #16
  br label %841

841:                                              ; preds = %834, %837
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #14
  %842 = load i32*, i32** %64, align 8
  %843 = icmp eq i32* %842, null
  br i1 %843, label %848, label %844

844:                                              ; preds = %841
  %845 = ptrtoint i32* %842 to i64
  %846 = bitcast i32** %65 to i64*
  store i64 %845, i64* %846, align 8
  %847 = bitcast i32* %842 to i8*
  call void @_ZdlPv(i8* %847) #16
  br label %848

848:                                              ; preds = %841, %844
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #14
  call void @_ZN5blink7AXRangeD2Ev(%"class.blink::AXRange"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %62) #14
  br label %849

849:                                              ; preds = %2, %50, %26, %848, %52, %29, %47, %23
  ret void
}

declare zeroext i1 @_ZNK5blink8Document41IsSlotAssignmentOrLegacyDistributionDirtyEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink7AXRange15RangeOfContentsERKNS_8AXObjectE(%"class.blink::AXRange"* sret, %"class.blink::AXObject"* dereferenceable(120)) local_unnamed_addr #1

declare i64 @_ZNK5blink8AXObject30GetAriaSpellingOrGrammarMarkerEv(%"class.blink::AXObject"*) local_unnamed_addr #1

declare i32 @_ZN5blink14ToAXMarkerTypeENS_14DocumentMarker10MarkerTypeE(i32) local_unnamed_addr #1

declare i32 @_ZNK5blink10AXPosition10TextOffsetEv(%"class.blink::AXPosition"*) local_unnamed_addr #1

declare void @_ZNK5blink10AXPosition10ToPositionENS_28AXPositionAdjustmentBehaviorE(%"class.blink::PositionTemplate"* sret, %"class.blink::AXPosition"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEgtERKS4_(%"class.blink::PositionTemplate"*, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink20ToPositionInFlatTreeERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEE(%"class.blink::PositionTemplate.1839"* sret, %"class.blink::PositionTemplate"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEC1ERKNS_16PositionTemplateIS3_EES8_(%"class.blink::EphemeralRangeTemplate"*, %"class.blink::PositionTemplate.1839"* dereferenceable(16), %"class.blink::PositionTemplate.1839"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink24DocumentMarkerController24MarkersIntersectingRangeERKNS_22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEEENS_14DocumentMarker11MarkerTypesE(%"class.blink::HeapVector.1840"* sret, %"class.blink::DocumentMarkerController"*, %"class.blink::EphemeralRangeTemplate"* dereferenceable(32), i32) local_unnamed_addr #1

declare void @_ZN5blink10AXPosition12FromPositionERKNS_16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEENS_12TextAffinityENS_28AXPositionAdjustmentBehaviorE(%"class.blink::AXPosition"* sret, %"class.blink::PositionTemplate"* dereferenceable(16), i32, i32) local_unnamed_addr #1

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1ERKNS_4NodeEi(%"class.blink::PositionTemplate"*, %"class.blink::Node"* dereferenceable(64), i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10AXPosition7IsValidEPN3WTF6StringE(%"class.blink::AXPosition"*, %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN2ui10AXNodeData19AddIntListAttributeEN2ax5mojom16IntListAttributeERKNSt3__16vectorIiNS4_9allocatorIiEEEE(%"struct.ui::AXNodeData"*, i32, %"class.std::__1::vector.1814"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink22EphemeralRangeTemplateINS_16EditingAlgorithmINS_17FlatTreeTraversalEEEED1Ev(%"class.blink::EphemeralRangeTemplate"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7AXRangeD2Ev(%"class.blink::AXRange"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #14
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #14
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::AXRange", %"class.blink::AXRange"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %26 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %27 = icmp eq %"class.blink::PersistentNode"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %24
  %29 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %30 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %29, i64 0, i32 1
  %31 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %30) #14
  %32 = icmp eq i8* %31, null
  br i1 %32, label %33, label %35, !prof !3

33:                                               ; preds = %28
  %34 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %30, i8* %34) #14
  br label %35

35:                                               ; preds = %33, %28
  %36 = phi i8* [ %34, %33 ], [ %31, %28 ]
  %37 = bitcast i8* %36 to %"class.blink::ThreadState"**
  %38 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %40 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %39, align 8
  %41 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %25, align 8
  %42 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %40, i64 0, i32 0, i32 0
  %43 = bitcast %"class.blink::PersistentRegion"* %40 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.blink::PersistentNode"* %41 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %41, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %46, align 8
  store %"class.blink::PersistentNode"* %41, %"class.blink::PersistentNode"** %42, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %25, align 8
  br label %47

47:                                               ; preds = %24, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXInlineTextBox4InitEPNS_8AXObjectE(%"class.blink::AXInlineTextBox"*, %"class.blink::AXObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 5
  store i32 102, i32* %4, align 4
  tail call void @_ZNK5blink8AXObject9SetParentEPS0_(%"class.blink::AXObject"* %3, %"class.blink::AXObject"* %1) #14
  tail call void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"* %3, i1 zeroext false) #14
  ret void
}

declare void @_ZNK5blink8AXObject9SetParentEPS0_(%"class.blink::AXObject"*, %"class.blink::AXObject"*) local_unnamed_addr #1

declare void @_ZNK5blink8AXObject35UpdateCachedAttributeValuesIfNeededEb(%"class.blink::AXObject"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AXInlineTextBox6DetachEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"* %2) #14
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1
  %4 = bitcast %class.scoped_refptr.1739* %3 to i64*
  %5 = getelementptr inbounds %class.scoped_refptr.1739, %class.scoped_refptr.1739* %3, i64 0, i32 0
  %6 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %5, align 8
  store i64 0, i64* %4, align 8
  %7 = icmp eq %"class.blink::AbstractInlineTextBox"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %6, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %9, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %10) #14
  %11 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %9, i64 0, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %21

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %9, i64 -2
  %16 = bitcast %"class.base::RefCounted.1741"* %15 to %"class.blink::AbstractInlineTextBox"*
  %17 = bitcast %"class.base::RefCounted.1741"* %15 to void (%"class.blink::AbstractInlineTextBox"*)***
  %18 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %18, i64 1
  %20 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %19, align 8
  tail call void %20(%"class.blink::AbstractInlineTextBox"* nonnull %16) #14
  br label %21

21:                                               ; preds = %1, %8, %14
  ret void
}

declare void @_ZN5blink8AXObject6DetachEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK5blink15AXInlineTextBox17IsAXInlineTextBoxEv(%"class.blink::AXInlineTextBox"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15AXInlineTextBox20IsLineBreakingObjectEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink8AXObject10IsDetachedEv(%"class.blink::AXObject"* %2) #14
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  %5 = tail call zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"* %2) #14
  br label %20

6:                                                ; preds = %1
  %7 = tail call %"class.blink::AXObject"* @_ZNK5blink8AXObject12ParentObjectEv(%"class.blink::AXObject"* %2) #14
  %8 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %9 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %8, align 8
  %10 = bitcast %"class.blink::AbstractInlineTextBox"* %9 to i1 (%"class.blink::AbstractInlineTextBox"*)***
  %11 = load i1 (%"class.blink::AbstractInlineTextBox"*)**, i1 (%"class.blink::AbstractInlineTextBox"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %11, i64 14
  %13 = load i1 (%"class.blink::AbstractInlineTextBox"*)*, i1 (%"class.blink::AbstractInlineTextBox"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::AbstractInlineTextBox"* %9) #14
  br i1 %14, label %20, label %15

15:                                               ; preds = %6
  %16 = icmp eq %"class.blink::AXObject"* %7, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %15
  %18 = tail call i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"* nonnull %7) #14
  %19 = icmp eq i32 %18, 110
  br label %20

20:                                               ; preds = %6, %17, %15, %4
  %21 = phi i1 [ %5, %4 ], [ true, %6 ], [ false, %15 ], [ %19, %17 ]
  ret i1 %21
}

declare zeroext i1 @_ZNK5blink8AXObject20IsLineBreakingObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject9RoleValueEv(%"class.blink::AXObject"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZNK5blink15AXInlineTextBox13ClearChildrenEv(%"class.blink::AXInlineTextBox"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AXInlineTextBoxD2Ev(%"class.blink::AXInlineTextBox"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink15AXInlineTextBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %3, align 8
  %5 = icmp eq %"class.blink::AbstractInlineTextBox"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #14
  %9 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.1741"* %13 to %"class.blink::AbstractInlineTextBox"*
  %15 = bitcast %"class.base::RefCounted.1741"* %13 to void (%"class.blink::AbstractInlineTextBox"*)***
  %16 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %16, i64 1
  %18 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %17, align 8
  tail call void %18(%"class.blink::AbstractInlineTextBox"* nonnull %14) #14
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"* %20) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AXInlineTextBoxD0Ev(%"class.blink::AXInlineTextBox"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [164 x i8*] }, { [164 x i8*] }* @_ZTVN5blink15AXInlineTextBoxE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::AbstractInlineTextBox"*, %"class.blink::AbstractInlineTextBox"** %3, align 8
  %5 = icmp eq %"class.blink::AbstractInlineTextBox"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::AbstractInlineTextBox", %"class.blink::AbstractInlineTextBox"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #14
  %9 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted.1741", %"class.base::RefCounted.1741"* %7, i64 -2
  %14 = bitcast %"class.base::RefCounted.1741"* %13 to %"class.blink::AbstractInlineTextBox"*
  %15 = bitcast %"class.base::RefCounted.1741"* %13 to void (%"class.blink::AbstractInlineTextBox"*)***
  %16 = load void (%"class.blink::AbstractInlineTextBox"*)**, void (%"class.blink::AbstractInlineTextBox"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %16, i64 1
  %18 = load void (%"class.blink::AbstractInlineTextBox"*)*, void (%"class.blink::AbstractInlineTextBox"*)** %17, align 8
  tail call void %18(%"class.blink::AbstractInlineTextBox"* nonnull %14) #14
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = getelementptr inbounds %"class.blink::AXInlineTextBox", %"class.blink::AXInlineTextBox"* %0, i64 0, i32 0
  tail call void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"* %20) #14
  ret void
}

declare void @_ZNK5blink8AXObject5TraceEPNS_7VisitorE(%"class.blink::AXObject"*, %"class.blink::Visitor"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject29GetAOMPropertyOrARIAAttributeENS_17AOMStringPropertyE(%"class.blink::AXObject"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject29HasAOMPropertyOrARIAAttributeENS_18AOMBooleanPropertyERb(%"class.blink::AXObject"*, i32, i8* dereferenceable(1)) unnamed_addr #1

declare %"class.blink::AccessibleNode"* @_ZNK5blink8AXObject17GetAccessibleNodeEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsImageMapLinkEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXNodeObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsAXLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject6IsListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsAXListBoxEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsAXListBoxOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsMenuListEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject16IsMenuListOptionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsMenuListPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsMockObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsProgressIndicatorEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsAXRadioInputEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsSliderEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsValidationMessageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject15IsVirtualObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsControlEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsDefaultEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsFieldsetEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsInputImageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject13IsNativeImageEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject18IsNativeSpinButtonEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsNativeSliderEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject12IsSpinButtonEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsAutofillAvailableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsClickableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10IsExpandedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsFocusedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject9IsGrabbedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsHoveredEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLinkedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject8IsLoadedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject7IsModalEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject17IsMultiSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject11IsOffScreenEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject10IsRequiredEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10IsSelectedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsSelectedFromFocusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject22IsSelectedOptionActiveEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject19IsNotUserSelectableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisibleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject9IsVisitedEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject22DefaultObjectInclusionEPNS_10HeapVectorINS_13IgnoredReasonELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1742"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.1646"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11DescriptionEN2ax5mojom8NameFromERNS2_15DescriptionFromEPNS_10HeapVectorINS_17DescriptionSourceELj0EEEPNS6_INS_6MemberINS_23NameSourceRelatedObjectEEELj0EEE(%"class.blink::AXObject"*, i32, i32* dereferenceable(4), %"class.blink::HeapVector.1902"*, %"class.blink::HeapVector.1903"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject11PlaceholderEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject5TitleEN2ax5mojom8NameFromE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject15TextAlternativeEbbRNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEERN2ax5mojom8NameFromEPNS_10HeapVectorINS2_INS_23NameSourceRelatedObjectEEELj0EEEPNSG_INS_10NameSourceELj0EEE(%"class.blink::AXObject"*, i1 zeroext, i1 zeroext, %"class.blink::HeapHashSet.1911"*, i32* dereferenceable(4), %"class.blink::HeapVector.1903"*, %"class.blink::HeapVector.1912"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject19TextFromDescendantsERNS_11HeapHashSetINS_6MemberIKS0_EEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEb(%"class.blink::AXObject"*, %"class.blink::HeapHashSet.1911"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject9AccessKeyEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15BackgroundColorEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15AXInlineTextBox8GetColorEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject10ColorValueEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject24CanvasHasFallbackContentEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18ComputedFontFamilyEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject26FontFamilyForSerializationEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject8FontSizeEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject10FontWeightEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12HeadingLevelEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject17HierarchicalLevelEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12ImageDataUrlERKNS_7IntSizeE(%"class.blink::AXObject"*, %"class.blink::IntSize"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %4 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #14
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #14
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject16InPageLinkTargetEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare i32 @_ZNK5blink8AXObject11OrientationEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetListStyleEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject12GetTextAlignEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink8AXObject13GetTextIndentEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret float 0.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetTextPositionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject34GetTextStyleAndTextDecorationStyleEPiPN2ax5mojom19TextDecorationStyleES5_S5_(%"class.blink::AXObject"*, i32*, i32*, i32*, i32*) unnamed_addr #0 comdat align 2 {
  store i32 0, i32* %1, align 4
  store i32 0, i32* %2, align 4
  store i32 0, i32* %3, align 4
  store i32 0, i32* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject19RadioButtonsInGroupEv(%"class.blink::HeapVector.1646"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::HeapVector.1646"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject3UrlEv(%"class.blink::KURL"* noalias sret, %"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ChooserPopupEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare void @_ZN5blink8AXObject28LoadInlineTextBoxesRecursiveEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject19GetAriaCurrentStateEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject15GetInvalidStateEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject16AriaInvalidValueEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject13ValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MaxValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject16MinValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject17StepValueForRangeEPf(%"class.blink::AXObject"*, float*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject18GetValueForControlEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject46SlowGetValueForControlIncludingContentEditableEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11RestrictionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZN5blink8AXObject26DetermineAccessibilityRoleEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject17AriaRoleAttributeEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZN5blink8AXObject16ActiveDescendantEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink8AXObject12AutoCompleteEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject16AriaOwnsElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject23AriaDescribedbyElementsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12ErrorMessageEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

declare i32 @_ZNK5blink8AXObject8HasPopupEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject14IsEditableRootEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink8AXObject30HasContentEditableAttributeSetEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject20SupportsARIADraggingEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject11DropeffectsERN3WTF6VectorIN2ax5mojom10DropeffectELj0ENS1_18PartitionAllocatorEEE(%"class.blink::AXObject"*, %"class.WTF::Vector.1913"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject8PosInSetEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject7SetSizeEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject16LiveRegionStatusEv(%"class.blink::AXObject"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject18LiveRegionRelevantEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject20AccessibilityHitTestERKNS_8IntPointE(%"class.blink::AXObject"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15AXInlineTextBox15CanHaveChildrenEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink8AXObject15SelectedOptionsERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink8AXObject24EstimatedLoadingProgressEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject12RootScrollerEv(%"class.blink::AXObject"*) unnamed_addr #1

declare %"class.blink::LayoutObject"* @_ZNK5blink8AXObject15GetLayoutObjectEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13AnchorElementEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Element"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Element"* @_ZNK5blink8AXObject13ActionElementEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Element"* null
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8AXObject8LanguageEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject12HasAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink8AXObject12GetAttributeERKNS_13QualifiedNameE(%"class.blink::AXObject"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %3 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  ret %"class.WTF::AtomicString"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8AXObject11IsDataTableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink8AXObject11ColumnCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowCountEv(%"class.blink::AXObject"*) unnamed_addr #1

declare void @_ZNK5blink8AXObject13ColumnHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"* dereferenceable(16)) unnamed_addr #1

declare void @_ZNK5blink8AXObject10RowHeadersERNS_10HeapVectorINS_6MemberIS0_EELj0EEE(%"class.blink::AXObject"*, %"class.blink::HeapVector.1646"* dereferenceable(16)) unnamed_addr #1

declare %"class.blink::AXObject"* @_ZNK5blink8AXObject19CellForColumnAndRowEjj(%"class.blink::AXObject"*, i32, i32) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject11ColumnIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject8RowIndexEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject10ColumnSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

declare i32 @_ZNK5blink8AXObject7RowSpanEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink8AXObject16GetSortDirectionEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AXObject"* @_ZNK5blink8AXObject12HeaderObjectEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::AXObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ScrollableArea"* @_ZNK5blink8AXObject29GetScrollableAreaIfScrollableEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ScrollableArea"* null
}

declare zeroext i1 @_ZN5blink8AXObject35InternalSetAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject37InternalClearAccessibilityFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject23OnNativeDecrementActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeClickActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject19OnNativeFocusActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject23OnNativeIncrementActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject25OnNativeSetSelectedActionEb(%"class.blink::AXObject"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject55OnNativeSetSequentialFocusNavigationStartingPointActionEv(%"class.blink::AXObject"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink8AXObject22OnNativeSetValueActionERKN3WTF6StringE(%"class.blink::AXObject"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject15ChildrenChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject29HandleActiveDescendantChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject26HandleAutofillStateChangedENS_18WebAXAutofillStateE(%"class.blink::AXObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8AXObject25HandleAriaExpandedChangedEv(%"class.blink::AXObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink8AXObject16SelectionChangedEv(%"class.blink::AXObject"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink15AXInlineTextBox22NativeRoleIgnoringAriaEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 102
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AXInlineTextBox11AddChildrenEv(%"class.blink::AXInlineTextBox"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF10StringImpl29ContainsOnlyWhitespaceOrEmptyEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS6_15TracePersistentEPNS_7VisitorEEEE10TrampolineES8_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseIKNS_8AXObjectELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AXObject"**
  %4 = load %"class.blink::AXObject"*, %"class.blink::AXObject"** %3, align 8
  %5 = icmp eq %"class.blink::AXObject"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #14
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #14
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::AXObject", %"class.blink::AXObject"* %4, i64 -1, i32 14
  %20 = bitcast %"class.blink::Member.1653"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::AXObject"* null, %"class.blink::AXObject"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #14
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #14
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #14
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: nounwind
declare void @_ZN5blink8AXObjectD2Ev(%"class.blink::AXObject"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) i32* @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1743"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i32, i32* %24, i64 %25
  ret i32* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(4) float* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.1748"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #14
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #14
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #14
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #14
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %23 = getelementptr inbounds %"class.WTF::Vector.1748", %"class.WTF::Vector.1748"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load float*, float** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds float, float* %24, i64 %25
  ret float* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.3, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.4, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIiLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRKiEEvOT_(%"class.WTF::Vector.1743"*, i32* dereferenceable(4)) local_unnamed_addr #9 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.1743"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !2

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.1743"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.1743"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.1743", %"class.WTF::Vector.1743"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !2

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIiEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.1743"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !2

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.1743"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.1743"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { noreturn nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
