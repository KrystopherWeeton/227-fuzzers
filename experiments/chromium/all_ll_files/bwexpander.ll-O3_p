; ModuleID = '../../third_party/opus/src/silk/bwexpander.c'
source_filename = "../../third_party/opus/src/silk/bwexpander.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @silk_bwexpander(i16* nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = add nsw i32 %2, -65536
  %5 = add i32 %1, -1
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %66

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %5, 1
  br i1 %10, label %47, label %11

11:                                               ; preds = %7
  %12 = sub nsw i64 %8, %9
  br label %13

13:                                               ; preds = %13, %11
  %14 = phi i64 [ 0, %11 ], [ %44, %13 ]
  %15 = phi i32 [ %2, %11 ], [ %43, %13 ]
  %16 = phi i64 [ %12, %11 ], [ %45, %13 ]
  %17 = getelementptr inbounds i16, i16* %0, i64 %14
  %18 = load i16, i16* %17, align 2
  %19 = sext i16 %18 to i32
  %20 = mul nsw i32 %15, %19
  %21 = lshr i32 %20, 15
  %22 = add nuw nsw i32 %21, 1
  %23 = lshr i32 %22, 1
  %24 = trunc i32 %23 to i16
  store i16 %24, i16* %17, align 2
  %25 = mul nsw i32 %15, %4
  %26 = ashr i32 %25, 15
  %27 = add nsw i32 %26, 1
  %28 = ashr i32 %27, 1
  %29 = add nsw i32 %28, %15
  %30 = or i64 %14, 1
  %31 = getelementptr inbounds i16, i16* %0, i64 %30
  %32 = load i16, i16* %31, align 2
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %29, %33
  %35 = lshr i32 %34, 15
  %36 = add nuw nsw i32 %35, 1
  %37 = lshr i32 %36, 1
  %38 = trunc i32 %37 to i16
  store i16 %38, i16* %31, align 2
  %39 = mul nsw i32 %29, %4
  %40 = ashr i32 %39, 15
  %41 = add nsw i32 %40, 1
  %42 = ashr i32 %41, 1
  %43 = add nsw i32 %42, %29
  %44 = add nuw nsw i64 %14, 2
  %45 = add i64 %16, -2
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %13

47:                                               ; preds = %13, %7
  %48 = phi i32 [ undef, %7 ], [ %43, %13 ]
  %49 = phi i64 [ 0, %7 ], [ %44, %13 ]
  %50 = phi i32 [ %2, %7 ], [ %43, %13 ]
  %51 = icmp eq i64 %9, 0
  br i1 %51, label %66, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds i16, i16* %0, i64 %49
  %54 = load i16, i16* %53, align 2
  %55 = sext i16 %54 to i32
  %56 = mul nsw i32 %50, %55
  %57 = lshr i32 %56, 15
  %58 = add nuw nsw i32 %57, 1
  %59 = lshr i32 %58, 1
  %60 = trunc i32 %59 to i16
  store i16 %60, i16* %53, align 2
  %61 = mul nsw i32 %50, %4
  %62 = ashr i32 %61, 15
  %63 = add nsw i32 %62, 1
  %64 = ashr i32 %63, 1
  %65 = add nsw i32 %64, %50
  br label %66

66:                                               ; preds = %52, %47, %3
  %67 = phi i32 [ %2, %3 ], [ %48, %47 ], [ %65, %52 ]
  %68 = sext i32 %5 to i64
  %69 = getelementptr inbounds i16, i16* %0, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = sext i16 %70 to i32
  %72 = mul nsw i32 %67, %71
  %73 = lshr i32 %72, 15
  %74 = add nuw nsw i32 %73, 1
  %75 = lshr i32 %74, 1
  %76 = trunc i32 %75 to i16
  store i16 %76, i16* %69, align 2
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
