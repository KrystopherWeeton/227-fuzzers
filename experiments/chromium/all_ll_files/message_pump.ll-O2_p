; ModuleID = '../../base/message_loop/message_pump.cc'
source_filename = "../../base/message_loop/message_pump.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::MessagePump" = type { i32 (...)** }
%"class.base::MessagePumpGlib" = type { %"class.base::MessagePump", %"struct.base::MessagePumpGlib::RunState"*, %struct._GMainContext*, i8, %struct._GSource*, i32, i32, %"class.std::__1::unique_ptr.4" }
%"struct.base::MessagePumpGlib::RunState" = type opaque
%struct._GMainContext = type opaque
%struct._GSource = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %struct._GPollFD* }
%struct._GPollFD = type opaque
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%struct.event_base = type opaque
%struct.event = type opaque
%"class.base::ThreadChecker" = type { i8 }
%"class.base::MessagePumpDefault" = type { %"class.base::MessagePump", i8, [7 x i8], %"class.base::WaitableEvent" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.23" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i64 }

@_ZTVN4base11MessagePumpE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MessagePump"*)* @_ZN4base11MessagePumpD2Ev to i8*), i8* bitcast (void (%"class.base::MessagePump"*)* @_ZN4base11MessagePumpD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.base::MessagePump"*, i32)* @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE to i8*)] }, align 8
@_ZN4base12_GLOBAL__N_128message_pump_for_ui_factory_E = internal unnamed_addr global %"class.base::MessagePump"* ()* null, align 8

@_ZN4base11MessagePumpD1Ev = hidden unnamed_addr alias void (%"class.base::MessagePump"*), void (%"class.base::MessagePump"*)* @_ZN4base11MessagePumpD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11MessagePumpC2Ev(%"class.base::MessagePump"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePump", %"class.base::MessagePump"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base11MessagePumpE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN4base11MessagePumpD0Ev(%"class.base::MessagePump"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE(%"class.base::MessagePump"* nocapture, i32) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11MessagePump31OverrideMessagePumpForUIFactoryEPFNSt3__110unique_ptrIS0_NS1_14default_deleteIS0_EEEEvE(%"class.base::MessagePump"* ()*) local_unnamed_addr #0 align 2 {
  store %"class.base::MessagePump"* ()* %0, %"class.base::MessagePump"* ()** @_ZN4base12_GLOBAL__N_128message_pump_for_ui_factory_E, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11MessagePump34IsMessagePumpForUIFactoryOveriddenEv() local_unnamed_addr #4 align 2 {
  %1 = load %"class.base::MessagePump"* ()*, %"class.base::MessagePump"* ()** @_ZN4base12_GLOBAL__N_128message_pump_for_ui_factory_E, align 8
  %2 = icmp ne %"class.base::MessagePump"* ()* %1, null
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.base::MessagePump"* @_ZN4base11MessagePump6CreateENS_15MessagePumpTypeE(i32) local_unnamed_addr #5 align 2 {
  switch i32 %0, label %20 [
    i32 1, label %2
    i32 3, label %12
    i32 2, label %21
    i32 0, label %16
  ]

2:                                                ; preds = %1
  %3 = load %"class.base::MessagePump"* ()*, %"class.base::MessagePump"* ()** @_ZN4base12_GLOBAL__N_128message_pump_for_ui_factory_E, align 8
  %4 = icmp eq %"class.base::MessagePump"* ()* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.base::MessagePump"* %3() #9
  %7 = ptrtoint %"class.base::MessagePump"* %6 to i64
  br label %21

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 56) #10
  %10 = bitcast i8* %9 to %"class.base::MessagePumpGlib"*
  tail call void @_ZN4base15MessagePumpGlibC1Ev(%"class.base::MessagePumpGlib"* nonnull %10) #9
  %11 = ptrtoint i8* %9 to i64
  br label %21

12:                                               ; preds = %1
  %13 = tail call i8* @_Znwm(i64 56) #10
  %14 = bitcast i8* %13 to %"class.base::MessagePumpLibevent"*
  tail call void @_ZN4base19MessagePumpLibeventC1Ev(%"class.base::MessagePumpLibevent"* nonnull %14) #9
  %15 = ptrtoint i8* %13 to i64
  br label %21

16:                                               ; preds = %1
  %17 = tail call i8* @_Znwm(i64 32) #10
  %18 = bitcast i8* %17 to %"class.base::MessagePumpDefault"*
  tail call void @_ZN4base18MessagePumpDefaultC1Ev(%"class.base::MessagePumpDefault"* nonnull %18) #9
  %19 = ptrtoint i8* %17 to i64
  br label %21

20:                                               ; preds = %1
  unreachable

21:                                               ; preds = %1, %16, %12, %8, %5
  %22 = phi i64 [ %19, %16 ], [ %15, %12 ], [ %11, %8 ], [ %7, %5 ], [ 0, %1 ]
  %23 = inttoptr i64 %22 to %"class.base::MessagePump"*
  ret %"class.base::MessagePump"* %23
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN4base15MessagePumpGlibC1Ev(%"class.base::MessagePumpGlib"*) unnamed_addr #7

declare void @_ZN4base19MessagePumpLibeventC1Ev(%"class.base::MessagePumpLibevent"*) unnamed_addr #7

declare void @_ZN4base18MessagePumpDefaultC1Ev(%"class.base::MessagePumpDefault"*) unnamed_addr #7

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
