; ModuleID = '../../third_party/blink/renderer/core/animation/animation_effect.cc'
source_filename = "../../third_party/blink/renderer/core/animation/animation_effect.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.9 = type { double }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted.323" }
%"class.base::RefCounted.323" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.330", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.330" = type { %"class.blink::MemberBase.331" }
%"class.blink::MemberBase.331" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.128", i32, [4 x i8], %"class.std::__1::unique_ptr.272", %"class.std::__1::unique_ptr.272", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.283", %"class.std::__1::unique_ptr.289", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.307", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.314", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.179", %"class.std::__1::unique_ptr.186", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.214", %"class.std::__1::unique_ptr.221", %"class.std::__1::unique_ptr.252", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__atomic_base.166" }
%"struct.std::__1::__atomic_base.166" = type { %"struct.std::__1::__cxx_atomic_impl.167" }
%"struct.std::__1::__cxx_atomic_impl.167" = type { %"struct.std::__1::__cxx_atomic_base_impl.168" }
%"struct.std::__1::__cxx_atomic_base_impl.168" = type { i64 }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::Worklist.175"* }
%"class.blink::Worklist.175" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::Worklist.182"* }
%"class.blink::Worklist.182" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.blink::Worklist.189"* }
%"class.blink::Worklist.189" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist.196"* }
%"class.blink::Worklist.196" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::Worklist.203"* }
%"class.blink::Worklist.203" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::Worklist.210"* }
%"class.blink::Worklist.210" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::Worklist.217"* }
%"class.blink::Worklist.217" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.164" }
%"class.std::__1::unique_ptr.221" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.224" }
%"class.std::__1::__hash_table.224" = type <{ %"class.std::__1::unique_ptr.225", %"class.std::__1::__compressed_pair.235", %"class.std::__1::__compressed_pair.240", %"class.std::__1::__compressed_pair.244", [4 x i8] }>
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227", %"struct.std::__1::__compressed_pair_elem.229" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"struct.std::__1::__hash_node_base.228"** }
%"struct.std::__1::__hash_node_base.228" = type { %"struct.std::__1::__hash_node_base.228"* }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"class.std::__1::__bucket_list_deallocator.230" }
%"class.std::__1::__bucket_list_deallocator.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { i64 }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.228" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { float }
%"class.std::__1::unique_ptr.252" = type { %"class.std::__1::__compressed_pair.253" }
%"class.std::__1::__compressed_pair.253" = type { %"struct.std::__1::__compressed_pair_elem.254" }
%"struct.std::__1::__compressed_pair_elem.254" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.255", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.264" }
%"class.WTF::Vector.264" = type { %"class.WTF::VectorBuffer.265" }
%"class.WTF::VectorBuffer.265" = type { %"class.WTF::VectorBufferBase.266" }
%"class.WTF::VectorBufferBase.266" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.280" }
%"class.WTF::VectorBuffer.280" = type { %"class.WTF::VectorBufferBase.281" }
%"class.WTF::VectorBufferBase.281" = type { %"struct.std::__1::pair.282"*, i32, i32 }
%"struct.std::__1::pair.282" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.289" = type { %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.295" }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.175"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.182"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.189"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.196"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.203"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.318" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.313 }
%class.scoped_refptr.313 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.314" = type { %"struct.std::__1::__atomic_base.315" }
%"struct.std::__1::__atomic_base.315" = type { %"struct.std::__1::__cxx_atomic_impl.316" }
%"struct.std::__1::__cxx_atomic_impl.316" = type { %"struct.std::__1::__cxx_atomic_base_impl.317" }
%"struct.std::__1::__cxx_atomic_base_impl.317" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member", %"struct.blink::Timing", %"class.blink::Member.1", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional", %"class.absl::optional.10", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::AnimationEffectOwner"* }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr, i16, [6 x i8] }>
%class.scoped_refptr = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.5", %"class.absl::optional.5", i8, i8, i8, %"class.absl::optional", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { i32 }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.349 }
%union.anon.349 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::EffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::UnrestrictedDoubleOrString" = type { i32, %"class.WTF::String", double }
%"class.WTF::String" = type { %class.scoped_refptr.17 }
%class.scoped_refptr.17 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.5", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.37", %"class.absl::optional", i8, [3 x i8], i32, %"class.blink::Member.42", %"class.blink::Member.42", %"class.blink::Member.44", %"class.blink::Member.46", %"class.blink::Member.48", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.99", %"class.blink::Member.99", %"class.blink::Member.99", %"class.std::__1::unique_ptr.101", i8, [3 x i8], i32, %"class.blink::Member.107", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member.27" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::HeapVector.29"* }
%"class.blink::HeapVector.29" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.30"* }
%"class.WTF::Vector.30" = type opaque
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.32" }
%"class.blink::MemberBase.32" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.36" = type opaque
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.absl::optional.37" = type { %"class.absl::optional_internal::optional_data.38" }
%"class.absl::optional_internal::optional_data.38" = type { %"class.absl::optional_internal::optional_data_base.39" }
%"class.absl::optional_internal::optional_data_base.39" = type { %"class.absl::optional_internal::optional_data_dtor_base.40" }
%"class.absl::optional_internal::optional_data_dtor_base.40" = type { i8, %union.anon.41 }
%union.anon.41 = type { i32 }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::AnimationEffect"* }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.46", i32, [4 x i8], %"class.blink::HeapHashSet.50", %"class.blink::HeapHashSet.58", %"class.std::__1::unique_ptr.65", %"class.absl::optional.89" }
%"class.blink::HeapHashSet.50" = type { %"class.WTF::HashSet.53" }
%"class.WTF::HashSet.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"class.blink::Member.56"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::Animation"* }
%"class.blink::HeapHashSet.58" = type { %"class.WTF::HashSet.61" }
%"class.WTF::HashSet.61" = type { %"class.WTF::HashTable.62" }
%"class.WTF::HashTable.62" = type <{ %"class.blink::WeakMember.64"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.64" = type opaque
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.68 }
%class.scoped_refptr.68 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.69", %"class.std::__1::__compressed_pair.76", %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.83", [4 x i8] }>
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71", %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.94" }
%"class.absl::optional.94" = type { %"class.absl::optional_internal::optional_data.95" }
%"class.absl::optional_internal::optional_data.95" = type { %"class.absl::optional_internal::optional_data_base.96" }
%"class.absl::optional_internal::optional_data_base.96" = type { %"class.absl::optional_internal::optional_data_dtor_base.97" }
%"class.absl::optional_internal::optional_data_dtor_base.97" = type { i8, %union.anon.98 }
%union.anon.98 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::Member.99" = type { %"class.blink::MemberBase.100" }
%"class.blink::MemberBase.100" = type { %"class.blink::Event"* }
%"class.blink::Event" = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.5", %"class.absl::optional.5", double, i8, i32 }
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.111", %"class.std::__1::unique_ptr.112", %"class.blink::Member.56" }
%"class.blink::ThreadState::PrefinalizerRegistration.111" = type { i8 }
%"class.std::__1::unique_ptr.112" = type { %"class.std::__1::__compressed_pair.113" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::ComputedEffectTiming" = type { %"class.blink::EffectTiming", i8, i8, %"class.blink::DoubleOrCSSNumericValue", double, %"class.blink::DoubleOrCSSNumericValue", %"class.blink::DoubleOrCSSNumericValue", double }
%"class.blink::DoubleOrCSSNumericValue" = type { i32, %"class.blink::Member.118", double }
%"class.blink::Member.118" = type { %"class.blink::MemberBase.119" }
%"class.blink::MemberBase.119" = type { %"class.blink::CSSNumericValue"* }
%"class.blink::CSSNumericValue" = type { %"class.blink::CSSStyleValue", %"class.blink::CSSNumericValueType" }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.blink::CSSNumericValueType" = type { %"class.WTF::Vector.120", i32, i8, i32, [4 x i8] }
%"class.WTF::Vector.120" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.122", [28 x i8] }>
%"class.WTF::VectorBufferBase.122" = type { i32*, i32, i32 }
%"class.blink::OptionalEffectTiming" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, double, %"class.WTF::String", %"class.blink::UnrestrictedDoubleOrString", %"class.WTF::String", double, %"class.WTF::String", double, double }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.125" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.125" = type { %"class.v8::TracedReference.126" }
%"class.v8::TracedReference.126" = type { %"class.v8::BasicTracedReference.127" }
%"class.v8::BasicTracedReference.127" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.354", %"class.blink::FreeList", %"class.WTF::Vector.359" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.354" = type { %"class.WTF::VectorBuffer.355" }
%"class.WTF::VectorBuffer.355" = type { %"class.WTF::VectorBufferBase.356" }
%"class.WTF::VectorBufferBase.356" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361" }
%"class.WTF::VectorBufferBase.361" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.336, %"class.blink::Member.337", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.336 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.337" = type { %"class.blink::MemberBase.338" }
%"class.blink::MemberBase.338" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.339" }
%"class.blink::Persistent.339" = type { %"class.blink::PersistentBase.340" }
%"class.blink::PersistentBase.340" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

$_ZN5blink15AnimationEffectD2Ev = comdat any

$_ZN5blink15AnimationEffectD0Ev = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink15AnimationEffect18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink15AnimationEffect16IsKeyframeEffectEv = comdat any

$_ZNK5blink15AnimationEffect13IsInertEffectEv = comdat any

$_ZN5blink15AnimationEffect6AttachEPNS_20AnimationEffectOwnerE = comdat any

$_ZN5blink15AnimationEffect6DetachEv = comdat any

$_ZNK5blink15AnimationEffect26IntrinsicIterationDurationEv = comdat any

$_ZN5blink10TraceTraitINS_15AnimationEffect13EventDelegateEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink15AnimationEffectE = hidden unnamed_addr constant { [18 x i8*] } { [18 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::AnimationEffect"*)* @_ZN5blink15AnimationEffectD2Ev to i8*), i8* bitcast (void (%"class.blink::AnimationEffect"*)* @_ZN5blink15AnimationEffectD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::AnimationEffect"*, %"class.blink::Visitor"*)* @_ZNK5blink15AnimationEffect5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::AnimationEffect"*)* @_ZNK5blink15AnimationEffect18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i1 (%"class.blink::AnimationEffect"*)* @_ZNK5blink15AnimationEffect16IsKeyframeEffectEv to i8*), i8* bitcast (i1 (%"class.blink::AnimationEffect"*)* @_ZNK5blink15AnimationEffect13IsInertEffectEv to i8*), i8* bitcast (void (%"class.blink::AnimationEffect"*, %"class.blink::AnimationEffectOwner"*)* @_ZN5blink15AnimationEffect6AttachEPNS_20AnimationEffectOwnerE to i8*), i8* bitcast (void (%"class.blink::AnimationEffect"*)* @_ZN5blink15AnimationEffect6DetachEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (double (%"class.blink::AnimationEffect"*)* @_ZNK5blink15AnimationEffect26IntrinsicIterationDurationEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@__const._ZNK5blink15AnimationEffect19UpdateInheritedTimeEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS_13TimelinePhaseEEENS_18TimingUpdateReasonE.playback_rate = private unnamed_addr constant { { { { i8, [7 x i8], %union.anon.9 } } } } { { { { i8, [7 x i8], %union.anon.9 } } } { { { i8, [7 x i8], %union.anon.9 } } { { i8, [7 x i8], %union.anon.9 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.9 { double 0xFFFFFFFFFFFFFFFF } } } } }, align 8
@__const._ZNK5blink15AnimationEffect19UpdateInheritedTimeEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS_13TimelinePhaseEEENS_18TimingUpdateReasonE.calculated = private unnamed_addr constant { i32, [4 x i8], { { { { i8, [7 x i8], %union.anon.9 } } } }, { { { { i8, [7 x i8], %union.anon.9 } } } }, i8, i8, i8, [5 x i8], { { { { i8, [7 x i8], %union.anon } } } }, %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.9 } } } } { { { { i8, [7 x i8], %union.anon.9 } } } { { { i8, [7 x i8], %union.anon.9 } } { { i8, [7 x i8], %union.anon.9 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.9 { double 0xFFFFFFFFFFFFFFFF } } } } }, { { { { i8, [7 x i8], %union.anon.9 } } } } { { { { i8, [7 x i8], %union.anon.9 } } } { { { i8, [7 x i8], %union.anon.9 } } { { i8, [7 x i8], %union.anon.9 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.9 { double 0xFFFFFFFFFFFFFFFF } } } } }, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon } } } } { { { { i8, [7 x i8], %union.anon } } } { { { i8, [7 x i8], %union.anon } } { { i8, [7 x i8], %union.anon } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon { %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF } } } } } }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF }, %"class.blink::AnimationTimeDelta" { double 0xFFFFFFFFFFFFFFFF } }, align 8
@_ZN5blink15AnimationEffect18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str = private unnamed_addr constant [32 x i8] c"../../base/memory/ref_counted.h\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"ref_count_.Increment() > 0\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AnimationEffectC2ERKNS_6TimingEPNS0_13EventDelegateE(%"class.blink::AnimationEffect"* nocapture, %"struct.blink::Timing"* nocapture readonly dereferenceable(80), %"class.blink::AnimationEffect::EventDelegate"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink15AnimationEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::AnimationEffectOwner"* null, %"class.blink::AnimationEffectOwner"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %9 = bitcast %"struct.blink::Timing"* %8 to i8*
  %10 = bitcast %"struct.blink::Timing"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 60, i1 false) #7
  %11 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 9, i32 0
  %12 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 9, i32 0
  store %"class.blink::TimingFunction"* %12, %"class.blink::TimingFunction"** %13, align 8
  %14 = icmp eq %"class.blink::TimingFunction"* %12, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 1 monotonic
  %18 = icmp sgt i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #7
  br label %22

22:                                               ; preds = %3, %15, %19
  %23 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 10
  %24 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 10
  %25 = load i16, i16* %24, align 8
  store i16 %25, i16* %23, align 8
  %26 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::AnimationEffect::EventDelegate"* %2, %"class.blink::AnimationEffect::EventDelegate"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 0
  store i32 3, i32* %27, align 8
  %28 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  store double 0.000000e+00, double* %29, align 8
  %30 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %30, align 8
  %31 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 7, i32 0
  %34 = bitcast double* %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 11, i1 false) #7
  %35 = bitcast double* %33 to <2 x double>*
  store <2 x double> <double 0x7FF0000000000000, double 0x7FF0000000000000>, <2 x double>* %35, align 8
  %36 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 9, i32 0
  store double 0x7FF0000000000000, double* %36, align 8
  %37 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 5
  store i8 1, i8* %37, align 8
  %38 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %38, align 8
  %39 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 4
  %40 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 8, i32 0
  store double 0.000000e+00, double* %40, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AnimationEffect21UpdateSpecifiedTimingERKNS_6TimingE(%"class.blink::AnimationEffect"* nocapture, %"struct.blink::Timing"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 10
  %7 = load i16, i16* %6, align 8
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %44

9:                                                ; preds = %2
  %10 = bitcast %"struct.blink::Timing"* %5 to i8*
  %11 = bitcast %"struct.blink::Timing"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 60, i1 false) #7
  %12 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 9
  %13 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 9, i32 0
  %14 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %13, align 8
  %15 = icmp eq %"class.blink::TimingFunction"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %14, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #7
  br label %23

23:                                               ; preds = %20, %16, %9
  %24 = ptrtoint %"class.blink::TimingFunction"* %14 to i64
  %25 = bitcast %class.scoped_refptr* %12 to i64*
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %12, i64 0, i32 0
  %27 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %26, align 8
  store i64 %24, i64* %25, align 8
  %28 = icmp eq %"class.blink::TimingFunction"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %27, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe"* %35 to %"class.blink::TimingFunction"*
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %35 to void (%"class.blink::TimingFunction"*)***
  %38 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %38, i64 1
  %40 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %39, align 8
  call void %40(%"class.blink::TimingFunction"* nonnull %36) #7
  br label %41

41:                                               ; preds = %23, %29, %34
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 10
  %43 = load i16, i16* %42, align 8
  store i16 %43, i16* %6, align 8
  br label %132

44:                                               ; preds = %2
  %45 = zext i16 %7 to i32
  %46 = and i32 %45, 64
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = bitcast %"struct.blink::Timing"* %1 to i64*
  %50 = bitcast %"struct.blink::Timing"* %5 to i64*
  %51 = load i64, i64* %49, align 8
  store i64 %51, i64* %50, align 8
  br label %52

52:                                               ; preds = %44, %48
  %53 = and i32 %45, 1
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 7
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 7
  store i32 %57, i32* %58, align 8
  br label %59

59:                                               ; preds = %52, %55
  %60 = and i32 %45, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 6, i32 0, i32 0, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 8 %64, i64 16, i1 false)
  br label %65

65:                                               ; preds = %59, %62
  %66 = and i32 %45, 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %74

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 1
  %70 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 1
  %71 = bitcast %"class.blink::AnimationTimeDelta"* %69 to i64*
  %72 = bitcast %"class.blink::AnimationTimeDelta"* %70 to i64*
  %73 = load i64, i64* %71, align 8
  store i64 %73, i64* %72, align 8
  br label %74

74:                                               ; preds = %65, %68
  %75 = and i32 %45, 8
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 2
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 2
  store i32 %79, i32* %80, align 8
  br label %81

81:                                               ; preds = %74, %77
  %82 = and i32 %45, 16
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %90

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 5
  %86 = bitcast double* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 5
  %89 = bitcast double* %88 to i64*
  store i64 %87, i64* %89, align 8
  br label %90

90:                                               ; preds = %81, %84
  %91 = and i32 %45, 32
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %99

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 4
  %95 = bitcast double* %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 4
  %98 = bitcast double* %97 to i64*
  store i64 %96, i64* %98, align 8
  br label %99

99:                                               ; preds = %90, %93
  %100 = trunc i16 %7 to i8
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %132, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %1, i64 0, i32 9, i32 0
  %104 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %103, align 8
  %105 = icmp eq %"class.blink::TimingFunction"* %104, null
  br i1 %105, label %113, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %104, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 1 monotonic
  %109 = icmp sgt i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %106
  %111 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #7
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str, i64 0, i64 0), i32 211, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0)) #7
  %112 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %111) #7
  br label %113

113:                                              ; preds = %102, %106, %110
  %114 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 9
  %115 = ptrtoint %"class.blink::TimingFunction"* %104 to i64
  %116 = bitcast %class.scoped_refptr* %114 to i64*
  %117 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %114, i64 0, i32 0
  %118 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %117, align 8
  store i64 %115, i64* %116, align 8
  %119 = icmp eq %"class.blink::TimingFunction"* %118, null
  br i1 %119, label %132, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %118, i64 0, i32 1, i32 0
  %122 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = atomicrmw sub i32* %122, i32 1 acq_rel
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %121, i64 -2
  %127 = bitcast %"class.base::RefCountedThreadSafe"* %126 to %"class.blink::TimingFunction"*
  %128 = bitcast %"class.base::RefCountedThreadSafe"* %126 to void (%"class.blink::TimingFunction"*)***
  %129 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %129, i64 1
  %131 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %130, align 8
  call void %131(%"class.blink::TimingFunction"* nonnull %127) #7
  br label %132

132:                                              ; preds = %125, %120, %113, %99, %41
  %133 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 5
  store i8 1, i8* %133, align 8
  %134 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %135 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %134, align 8
  %136 = icmp eq %"class.blink::AnimationEffectOwner"* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %132
  %138 = bitcast %"class.blink::AnimationEffectOwner"* %135 to void (%"class.blink::AnimationEffectOwner"*)***
  %139 = load void (%"class.blink::AnimationEffectOwner"*)**, void (%"class.blink::AnimationEffectOwner"*)*** %138, align 8
  %140 = getelementptr inbounds void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %139, i64 6
  %141 = load void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %140, align 8
  call void %141(%"class.blink::AnimationEffectOwner"* nonnull %135) #7
  br label %142

142:                                              ; preds = %132, %137
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AnimationEffect24InvalidateAndNotifyOwnerEv(%"class.blink::AnimationEffect"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 5
  store i8 1, i8* %2, align 8
  %3 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %3, align 8
  %5 = icmp eq %"class.blink::AnimationEffectOwner"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AnimationEffectOwner"* %4 to void (%"class.blink::AnimationEffectOwner"*)***
  %8 = load void (%"class.blink::AnimationEffectOwner"*)**, void (%"class.blink::AnimationEffectOwner"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %8, i64 6
  %10 = load void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %9, align 8
  tail call void %10(%"class.blink::AnimationEffectOwner"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink15AnimationEffect28SetIgnoreCssTimingPropertiesEv(%"class.blink::AnimationEffect"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 10
  %3 = load i16, i16* %2, align 8
  %4 = or i16 %3, 255
  store i16 %4, i16* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EffectTiming"* @_ZNK5blink15AnimationEffect9getTimingEv(%"class.blink::AnimationEffect"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %2, align 8
  %4 = icmp eq %"class.blink::AnimationEffectOwner"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AnimationEffectOwner"* %3 to %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)***
  %7 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)**, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %7, i64 8
  %9 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %8, align 8
  %10 = tail call %"class.blink::Animation"* %9(%"class.blink::AnimationEffectOwner"* nonnull %3) #7
  %11 = icmp eq %"class.blink::Animation"* %10, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %5
  %13 = bitcast %"class.blink::Animation"* %10 to void (%"class.blink::Animation"*)***
  %14 = load void (%"class.blink::Animation"*)**, void (%"class.blink::Animation"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Animation"*)*, void (%"class.blink::Animation"*)** %14, i64 48
  %16 = load void (%"class.blink::Animation"*)*, void (%"class.blink::Animation"*)** %15, align 8
  tail call void %16(%"class.blink::Animation"* nonnull %10) #7
  br label %17

17:                                               ; preds = %1, %5, %12
  %18 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %19 = tail call %"class.blink::EffectTiming"* @_ZNK5blink6Timing21ConvertToEffectTimingEv(%"struct.blink::Timing"* %18) #7
  ret %"class.blink::EffectTiming"* %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Animation"* @_ZNK5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %2, align 8
  %4 = icmp eq %"class.blink::AnimationEffectOwner"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AnimationEffectOwner"* %3 to %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)***
  %7 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)**, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %7, i64 8
  %9 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %8, align 8
  %10 = tail call %"class.blink::Animation"* %9(%"class.blink::AnimationEffectOwner"* nonnull %3) #7
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.blink::Animation"* [ %10, %5 ], [ null, %1 ]
  ret %"class.blink::Animation"* %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.blink::EffectTiming"* @_ZNK5blink6Timing21ConvertToEffectTimingEv(%"struct.blink::Timing"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::ComputedEffectTiming"* @_ZNK5blink15AnimationEffect17getComputedTimingEv(%"class.blink::AnimationEffect"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %3, align 8
  %5 = icmp eq %"class.blink::AnimationEffectOwner"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::AnimationEffectOwner"* %4 to void (%"class.blink::AnimationEffectOwner"*)***
  %8 = load void (%"class.blink::AnimationEffectOwner"*)**, void (%"class.blink::AnimationEffectOwner"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %8, i64 7
  %10 = load void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %9, align 8
  tail call void %10(%"class.blink::AnimationEffectOwner"* nonnull %4) #7
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4
  %13 = icmp eq %"class.blink::AnimationEffect"* %0, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %11
  %15 = bitcast %"class.blink::AnimationEffect"* %0 to i1 (%"class.blink::AnimationEffect"*)***
  %16 = load i1 (%"class.blink::AnimationEffect"*)**, i1 (%"class.blink::AnimationEffect"*)*** %15, align 8
  %17 = getelementptr inbounds i1 (%"class.blink::AnimationEffect"*)*, i1 (%"class.blink::AnimationEffect"*)** %16, i64 9
  %18 = load i1 (%"class.blink::AnimationEffect"*)*, i1 (%"class.blink::AnimationEffect"*)** %17, align 8
  %19 = tail call zeroext i1 %18(%"class.blink::AnimationEffect"* nonnull %0) #7
  br label %20

20:                                               ; preds = %11, %14
  %21 = phi i1 [ false, %11 ], [ %19, %14 ]
  %22 = tail call %"class.blink::ComputedEffectTiming"* @_ZNK5blink6Timing17getComputedTimingERKNS0_16CalculatedTimingEb(%"struct.blink::Timing"* %2, %"struct.blink::Timing::CalculatedTiming"* dereferenceable(88) %12, i1 zeroext %21) #7
  ret %"class.blink::ComputedEffectTiming"* %22
}

declare %"class.blink::ComputedEffectTiming"* @_ZNK5blink6Timing17getComputedTimingERKNS0_16CalculatedTimingEb(%"struct.blink::Timing"*, %"struct.blink::Timing::CalculatedTiming"* dereferenceable(88), i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(88) %"struct.blink::Timing::CalculatedTiming"* @_ZNK5blink15AnimationEffect16EnsureCalculatedEv(%"class.blink::AnimationEffect"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %2, align 8
  %4 = icmp eq %"class.blink::AnimationEffectOwner"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AnimationEffectOwner"* %3 to void (%"class.blink::AnimationEffectOwner"*)***
  %7 = load void (%"class.blink::AnimationEffectOwner"*)**, void (%"class.blink::AnimationEffectOwner"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %7, i64 7
  %9 = load void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %8, align 8
  tail call void %9(%"class.blink::AnimationEffectOwner"* nonnull %3) #7
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4
  ret %"struct.blink::Timing::CalculatedTiming"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15AnimationEffect12updateTimingEPNS_20OptionalEffectTimingERNS_14ExceptionStateE(%"class.blink::AnimationEffect"*, %"class.blink::OptionalEffectTiming"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %5 = tail call zeroext i1 @_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80) %4, %"class.blink::OptionalEffectTiming"* %1, %"class.blink::Document"* null, %"class.blink::ExceptionState"* dereferenceable(72) %2) #7
  br i1 %5, label %6, label %16

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %8, align 8
  %10 = icmp eq %"class.blink::AnimationEffectOwner"* %9, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::AnimationEffectOwner"* %9 to void (%"class.blink::AnimationEffectOwner"*)***
  %13 = load void (%"class.blink::AnimationEffectOwner"*)**, void (%"class.blink::AnimationEffectOwner"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %13, i64 6
  %15 = load void (%"class.blink::AnimationEffectOwner"*)*, void (%"class.blink::AnimationEffectOwner"*)** %14, align 8
  tail call void %15(%"class.blink::AnimationEffectOwner"* nonnull %9) #7
  br label %16

16:                                               ; preds = %11, %6, %3
  ret void
}

declare zeroext i1 @_ZN5blink11TimingInput6UpdateINS_20OptionalEffectTimingEEEbRNS_6TimingEPKT_PNS_8DocumentERNS_14ExceptionStateE(%"struct.blink::Timing"* dereferenceable(80), %"class.blink::OptionalEffectTiming"*, %"class.blink::Document"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink26TimelinePhaseToTimingPhaseEN4absl8optionalINS_13TimelinePhaseEEE(i64) local_unnamed_addr #0 {
  %2 = trunc i64 %0 to i8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = lshr i64 %0, 32
  %6 = trunc i64 %5 to i32
  %7 = add i32 %6, -1
  %8 = icmp ult i32 %7, 3
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = zext i32 %7 to i64
  %11 = shl nuw i64 %10, 32
  br label %12

12:                                               ; preds = %9, %4, %1
  %13 = phi i64 [ 0, %4 ], [ 0, %1 ], [ 1, %9 ]
  %14 = phi i64 [ -6148914691236517376, %4 ], [ -6148914691236517376, %1 ], [ %11, %9 ]
  %15 = or i64 %14, %13
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AnimationEffect19UpdateInheritedTimeEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS_13TimelinePhaseEEENS_18TimingUpdateReasonE(%"class.blink::AnimationEffect"*, i8, double, i64, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.absl::optional", align 8
  %7 = alloca [7 x i8], align 1
  %8 = alloca [7 x i8], align 1
  %9 = alloca %"struct.blink::Timing::CalculatedTiming", align 8
  %10 = alloca %"class.absl::optional.5", align 8
  %11 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store double %2, double* %12, align 8
  %13 = getelementptr inbounds [7 x i8], [7 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %13)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ({ { { { i8, [7 x i8], %union.anon.9 } } } }, { { { { i8, [7 x i8], %union.anon.9 } } } }* @__const._ZNK5blink15AnimationEffect19UpdateInheritedTimeEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS_13TimelinePhaseEEENS_18TimingUpdateReasonE.playback_rate, i64 0, i32 0, i32 0, i32 0, i32 1, i64 0), i64 7, i1 false)
  %14 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %14, align 8
  %16 = icmp eq %"class.blink::AnimationEffectOwner"* %15, null
  br i1 %16, label %40, label %17

17:                                               ; preds = %5
  %18 = bitcast %"class.blink::AnimationEffectOwner"* %15 to %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)***
  %19 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)**, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %19, i64 8
  %21 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %20, align 8
  %22 = tail call %"class.blink::Animation"* %21(%"class.blink::AnimationEffectOwner"* nonnull %15) #7
  %23 = icmp eq %"class.blink::Animation"* %22, null
  br i1 %23, label %40, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds [7 x i8], [7 x i8]* %8, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 7, i8* nonnull %25)
  %26 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %14, align 8
  %27 = icmp eq %"class.blink::AnimationEffectOwner"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::AnimationEffectOwner"* %26 to %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)***
  %30 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)**, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %30, i64 8
  %32 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %31, align 8
  %33 = tail call %"class.blink::Animation"* %32(%"class.blink::AnimationEffectOwner"* nonnull %26) #7
  br label %34

34:                                               ; preds = %28, %24
  %35 = phi %"class.blink::Animation"* [ %33, %28 ], [ null, %24 ]
  %36 = tail call double @_ZNK5blink9Animation12playbackRateEv(%"class.blink::Animation"* %35) #7
  %37 = bitcast double %36 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* nonnull align 1 %25, i64 7, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %25)
  %38 = fcmp olt double %36, 0.000000e+00
  %39 = zext i1 %38 to i32
  br label %40

40:                                               ; preds = %5, %17, %34
  %41 = phi i64 [ %37, %34 ], [ -1, %17 ], [ -1, %5 ]
  %42 = phi i8 [ 1, %34 ], [ 0, %17 ], [ 0, %5 ]
  %43 = phi i32 [ %39, %34 ], [ 0, %17 ], [ 0, %5 ]
  %44 = trunc i64 %3 to i8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %40
  %47 = lshr i64 %3, 32
  %48 = trunc i64 %47 to i32
  %49 = add i32 %48, -1
  %50 = icmp ult i32 %49, 3
  br i1 %50, label %51, label %54

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = shl nuw i64 %52, 32
  br label %54

54:                                               ; preds = %51, %46, %40
  %55 = phi i64 [ 0, %46 ], [ 0, %40 ], [ 1, %51 ]
  %56 = phi i64 [ -6148914691236517376, %46 ], [ -6148914691236517376, %40 ], [ %53, %51 ]
  %57 = trunc i64 %55 to i8
  %58 = lshr i64 %56, 32
  %59 = trunc i64 %58 to i32
  %60 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 5
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %103

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp ne i8 %65, 0
  %67 = icmp ne i8 %1, 0
  %68 = xor i1 %66, %67
  %69 = xor i1 %66, true
  %70 = or i1 %68, %69
  br i1 %70, label %78, label %71

71:                                               ; preds = %63
  %72 = icmp eq i8 %1, 0
  br i1 %72, label %73, label %74, !prof !3

73:                                               ; preds = %71
  tail call void @llvm.trap() #7
  unreachable

74:                                               ; preds = %71
  %75 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = call zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8) %75, %"class.blink::AnimationTimeDelta"* dereferenceable(8) %76) #7
  br i1 %77, label %103, label %79

78:                                               ; preds = %63
  br i1 %68, label %103, label %79

79:                                               ; preds = %74, %78
  %80 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %14, align 8
  %81 = icmp eq %"class.blink::AnimationEffectOwner"* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.blink::AnimationEffectOwner"* %80 to i1 (%"class.blink::AnimationEffectOwner"*)***
  %84 = load i1 (%"class.blink::AnimationEffectOwner"*)**, i1 (%"class.blink::AnimationEffectOwner"*)*** %83, align 8
  %85 = getelementptr inbounds i1 (%"class.blink::AnimationEffectOwner"*)*, i1 (%"class.blink::AnimationEffectOwner"*)** %84, i64 4
  %86 = load i1 (%"class.blink::AnimationEffectOwner"*)*, i1 (%"class.blink::AnimationEffectOwner"*)** %85, align 8
  %87 = call zeroext i1 %86(%"class.blink::AnimationEffectOwner"* nonnull %80) #7
  br i1 %87, label %103, label %88

88:                                               ; preds = %79, %82
  %89 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %90 = load i8, i8* %89, align 4, !range !2
  %91 = icmp ne i8 %90, 0
  %92 = icmp ne i8 %57, 0
  %93 = xor i1 %92, %91
  %94 = xor i1 %91, true
  %95 = or i1 %93, %94
  br i1 %95, label %103, label %96

96:                                               ; preds = %88
  %97 = icmp eq i8 %57, 0
  br i1 %97, label %98, label %99, !prof !3

98:                                               ; preds = %96
  call void @llvm.trap() #7
  unreachable

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp ne i32 %101, %59
  br label %103

103:                                              ; preds = %99, %88, %74, %54, %82, %78
  %104 = phi i1 [ true, %82 ], [ true, %78 ], [ true, %54 ], [ true, %74 ], [ %93, %88 ], [ %102, %99 ]
  store i8 0, i8* %60, align 8
  %105 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* nonnull align 8 %11, i64 16, i1 false)
  %106 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %107 = bitcast i8* %106 to i64*
  %108 = or i64 %56, %55
  store i64 %108, i64* %107, align 8
  br i1 %104, label %109, label %146

109:                                              ; preds = %103
  %110 = bitcast %"struct.blink::Timing::CalculatedTiming"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %110) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %110, i8* align 8 bitcast ({ i32, [4 x i8], { { { { i8, [7 x i8], %union.anon.9 } } } }, { { { { i8, [7 x i8], %union.anon.9 } } } }, i8, i8, i8, [5 x i8], { { { { i8, [7 x i8], %union.anon } } } }, %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }* @__const._ZNK5blink15AnimationEffect19UpdateInheritedTimeEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS_13TimelinePhaseEEENS_18TimingUpdateReasonE.calculated to i8*), i64 88, i1 false)
  %111 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2
  %112 = load i8, i8* %11, align 8
  %113 = load double, double* %12, align 8
  %114 = icmp eq %"class.blink::AnimationEffect"* %0, null
  br i1 %114, label %121, label %115

115:                                              ; preds = %109
  %116 = bitcast %"class.blink::AnimationEffect"* %0 to i1 (%"class.blink::AnimationEffect"*)***
  %117 = load i1 (%"class.blink::AnimationEffect"*)**, i1 (%"class.blink::AnimationEffect"*)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::AnimationEffect"*)*, i1 (%"class.blink::AnimationEffect"*)** %117, i64 9
  %119 = load i1 (%"class.blink::AnimationEffect"*)*, i1 (%"class.blink::AnimationEffect"*)** %118, align 8
  %120 = call zeroext i1 %119(%"class.blink::AnimationEffect"* nonnull %0) #7
  br label %121

121:                                              ; preds = %109, %115
  %122 = phi i1 [ false, %109 ], [ %120, %115 ]
  %123 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %42, i8* %123, align 8
  %124 = getelementptr inbounds i8, i8* %123, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %124, i8* nonnull align 1 %13, i64 7, i1 false)
  %125 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %126 = bitcast %union.anon.9* %125 to i64*
  store i64 %41, i64* %126, align 8
  call void @_ZNK5blink6Timing16CalculateTimingsEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS0_5PhaseEEENS0_18AnimationDirectionEbNS2_IdEE(%"struct.blink::Timing::CalculatedTiming"* nonnull sret %9, %"struct.blink::Timing"* %111, i8 %112, double %113, i64 %108, i32 %43, i1 zeroext %122, %"class.absl::optional.5"* nonnull byval(%"class.absl::optional.5") align 8 %10) #7
  %127 = getelementptr inbounds %"struct.blink::Timing::CalculatedTiming", %"struct.blink::Timing::CalculatedTiming"* %9, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4
  %130 = getelementptr inbounds %"struct.blink::Timing::CalculatedTiming", %"struct.blink::Timing::CalculatedTiming"* %129, i64 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = icmp ne i32 %128, %131
  %133 = icmp eq i32 %128, 3
  %134 = and i1 %133, %132
  br i1 %134, label %135, label %144

135:                                              ; preds = %121
  %136 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 3, i32 0, i32 0
  %137 = load %"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect::EventDelegate"** %136, align 8
  %138 = icmp eq %"class.blink::AnimationEffect::EventDelegate"* %137, null
  br i1 %138, label %144, label %139

139:                                              ; preds = %135
  %140 = bitcast %"class.blink::AnimationEffect::EventDelegate"* %137 to void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)***
  %141 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)**, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*** %140, align 8
  %142 = getelementptr inbounds void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)** %141, i64 3
  %143 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)** %142, align 8
  call void %143(%"class.blink::AnimationEffect::EventDelegate"* nonnull %137, %"class.blink::AnimationEffect"* dereferenceable(240) %0, i32 3) #7
  br label %144

144:                                              ; preds = %135, %139, %121
  %145 = bitcast %"struct.blink::Timing::CalculatedTiming"* %129 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* nonnull align 8 %110, i64 88, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %110) #7
  br label %146

146:                                              ; preds = %144, %103
  %147 = icmp eq i32 %4, 1
  br i1 %147, label %148, label %168

148:                                              ; preds = %146
  %149 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %14, align 8
  %150 = icmp eq %"class.blink::AnimationEffectOwner"* %149, null
  br i1 %150, label %157, label %151

151:                                              ; preds = %148
  %152 = bitcast %"class.blink::AnimationEffectOwner"* %149 to i1 (%"class.blink::AnimationEffectOwner"*)***
  %153 = load i1 (%"class.blink::AnimationEffectOwner"*)**, i1 (%"class.blink::AnimationEffectOwner"*)*** %152, align 8
  %154 = getelementptr inbounds i1 (%"class.blink::AnimationEffectOwner"*)*, i1 (%"class.blink::AnimationEffectOwner"*)** %153, i64 3
  %155 = load i1 (%"class.blink::AnimationEffectOwner"*)*, i1 (%"class.blink::AnimationEffectOwner"*)** %154, align 8
  %156 = call zeroext i1 %155(%"class.blink::AnimationEffectOwner"* nonnull %149) #7
  br i1 %156, label %157, label %168

157:                                              ; preds = %148, %151
  %158 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 3, i32 0, i32 0
  %159 = load %"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect::EventDelegate"** %158, align 8
  %160 = icmp eq %"class.blink::AnimationEffect::EventDelegate"* %159, null
  br i1 %160, label %168, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 0
  %163 = load i32, i32* %162, align 8
  %164 = bitcast %"class.blink::AnimationEffect::EventDelegate"* %159 to void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)***
  %165 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)**, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)** %165, i64 3
  %167 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::AnimationEffect"*, i32)** %166, align 8
  call void %167(%"class.blink::AnimationEffect::EventDelegate"* nonnull %159, %"class.blink::AnimationEffect"* dereferenceable(240) %0, i32 %163) #7
  br label %168

168:                                              ; preds = %157, %161, %151, %146
  br i1 %104, label %169, label %192

169:                                              ; preds = %168
  %170 = bitcast %"class.blink::AnimationEffect"* %0 to void (%"class.blink::AnimationEffect"*)***
  %171 = load void (%"class.blink::AnimationEffect"*)**, void (%"class.blink::AnimationEffect"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.blink::AnimationEffect"*)*, void (%"class.blink::AnimationEffect"*)** %171, i64 13
  %173 = load void (%"class.blink::AnimationEffect"*)*, void (%"class.blink::AnimationEffect"*)** %172, align 8
  call void %173(%"class.blink::AnimationEffect"* %0) #7
  %174 = load i8, i8* %11, align 8
  %175 = load double, double* %12, align 8
  %176 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 9, i32 0
  %177 = load double, double* %176, align 8
  %178 = bitcast %"class.blink::AnimationEffect"* %0 to double (%"class.blink::AnimationEffect"*, i1, i8, double, double)***
  %179 = load double (%"class.blink::AnimationEffect"*, i1, i8, double, double)**, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*** %178, align 8
  %180 = getelementptr inbounds double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)** %179, i64 15
  %181 = load double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)** %180, align 8
  %182 = call double %181(%"class.blink::AnimationEffect"* %0, i1 zeroext true, i8 %174, double %175, double %177) #7
  %183 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 7, i32 0
  store double %182, double* %183, align 8
  %184 = load i8, i8* %11, align 8
  %185 = load double, double* %12, align 8
  %186 = load double, double* %176, align 8
  %187 = load double (%"class.blink::AnimationEffect"*, i1, i8, double, double)**, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*** %178, align 8
  %188 = getelementptr inbounds double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)** %187, i64 15
  %189 = load double (%"class.blink::AnimationEffect"*, i1, i8, double, double)*, double (%"class.blink::AnimationEffect"*, i1, i8, double, double)** %188, align 8
  %190 = call double %189(%"class.blink::AnimationEffect"* %0, i1 zeroext false, i8 %184, double %185, double %186) #7
  %191 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 4, i32 8, i32 0
  store double %190, double* %191, align 8
  br label %192

192:                                              ; preds = %169, %168
  call void @llvm.lifetime.end.p0i8(i64 7, i8* nonnull %13)
  ret void
}

declare double @_ZNK5blink9Animation12playbackRateEv(%"class.blink::Animation"*) local_unnamed_addr #3

declare void @_ZNK5blink6Timing16CalculateTimingsEN4absl8optionalINS_18AnimationTimeDeltaEEENS2_INS0_5PhaseEEENS0_18AnimationDirectionEbNS2_IdEE(%"struct.blink::Timing::CalculatedTiming"* sret, %"struct.blink::Timing"*, i8, double, i64, i32, i1 zeroext, %"class.absl::optional.5"* byval(%"class.absl::optional.5") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Animation"* @_ZN5blink15AnimationEffect12GetAnimationEv(%"class.blink::AnimationEffect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::AnimationEffectOwner"*, %"class.blink::AnimationEffectOwner"** %2, align 8
  %4 = icmp eq %"class.blink::AnimationEffectOwner"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::AnimationEffectOwner"* %3 to %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)***
  %7 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)**, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %7, i64 8
  %9 = load %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)*, %"class.blink::Animation"* (%"class.blink::AnimationEffectOwner"*)** %8, align 8
  %10 = tail call %"class.blink::Animation"* %9(%"class.blink::AnimationEffectOwner"* nonnull %3) #7
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.blink::Animation"* [ %10, %5 ], [ null, %1 ]
  ret %"class.blink::Animation"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink15AnimationEffect5TraceEPNS_7VisitorE(%"class.blink::AnimationEffect"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #7, !range !4
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #7
  br label %73

73:                                               ; preds = %2, %54
  %74 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 3
  %75 = bitcast %"class.blink::Member.1"* %74 to i64*
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %84, label %78

78:                                               ; preds = %73
  %79 = inttoptr i64 %76 to i8*
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %79, i8* nonnull %79, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15AnimationEffect13EventDelegateEE5TraceEPNS_7VisitorEPKv) #7
  br label %84

84:                                               ; preds = %73, %78
  %85 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %85, %"class.blink::Visitor"* %1) #7
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #3

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AnimationEffectD2Ev(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN5blink15AnimationEffectE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 2, i32 9, i32 0
  %4 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %3, align 8
  %5 = icmp eq %"class.blink::TimingFunction"* %4, null
  br i1 %5, label %18, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %4, i64 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %18

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 -2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"class.blink::TimingFunction"*
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %12 to void (%"class.blink::TimingFunction"*)***
  %15 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %15, i64 1
  %17 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %16, align 8
  tail call void %17(%"class.blink::TimingFunction"* nonnull %13) #7
  br label %18

18:                                               ; preds = %1, %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AnimationEffectD0Ev(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #8
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15AnimationEffect18GetWrapperTypeInfoEv(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15AnimationEffect18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #3

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15AnimationEffect16IsKeyframeEffectEv(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15AnimationEffect13IsInertEffectEv(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AnimationEffect6AttachEPNS_20AnimationEffectOwnerE(%"class.blink::AnimationEffect"*, %"class.blink::AnimationEffectOwner"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1
  %4 = ptrtoint %"class.blink::AnimationEffectOwner"* %1 to i64
  %5 = bitcast %"class.blink::Member"* %3 to i64*
  store atomic i64 %4, i64* %5 monotonic, align 8
  %6 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::AnimationEffectOwner"* %1 to i8*
  %10 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %9) #7
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15AnimationEffect6DetachEv(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::AnimationEffect", %"class.blink::AnimationEffect"* %0, i64 0, i32 1
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden double @_ZNK5blink15AnimationEffect26IntrinsicIterationDurationEv(%"class.blink::AnimationEffect"*) unnamed_addr #0 comdat align 2 {
  ret double 0.000000e+00
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare zeroext i1 @_ZN5blinkneERKNS_18AnimationTimeDeltaES2_(%"class.blink::AnimationTimeDelta"* dereferenceable(8), %"class.blink::AnimationTimeDelta"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15AnimationEffect13EventDelegateEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::AnimationEffect::EventDelegate"*
  %4 = bitcast i8* %1 to void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)**, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)** %5, i64 6
  %7 = load void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)*, void (%"class.blink::AnimationEffect::EventDelegate"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::AnimationEffect::EventDelegate"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i32 24, i32 33}
