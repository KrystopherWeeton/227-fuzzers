; ModuleID = '../../third_party/blink/renderer/platform/text/character.cc'
source_filename = "../../third_party/blink/renderer/platform/text/character.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.UCPTrie = type { i16*, %union.UCPTrieData, i32, i32, i32, i16, i8, i8, i32, i16, i16, i32, i32 }
%union.UCPTrieData = type { i8* }
%"class.blink::ICUError" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.3, i32, i8, i8, [2 x i8] }>
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%union.anon.3 = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [16 x i8] }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6", [16 x i8] }
%"class.WTF::VectorBufferBase.6" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF13StringBuilder6AppendEDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

@_ZN5blinkL34stretchy_operator_with_inline_axisE = internal constant [108 x i16] [i16 61, i16 94, i16 95, i16 126, i16 175, i16 710, i16 711, i16 713, i16 717, i16 732, i16 759, i16 770, i16 818, i16 8254, i16 8400, i16 8401, i16 8406, i16 8407, i16 8417, i16 8592, i16 8594, i16 8596, i16 8600, i16 8601, i16 8604, i16 8605, i16 8606, i16 8608, i16 8610, i16 8611, i16 8612, i16 8614, i16 8617, i16 8618, i16 8619, i16 8620, i16 8621, i16 8628, i16 8633, i16 8636, i16 8637, i16 8640, i16 8641, i16 8644, i16 8646, i16 8647, i16 8649, i16 8651, i16 8652, i16 8656, i16 8658, i16 8660, i16 8666, i16 8667, i16 8668, i16 8669, i16 8672, i16 8674, i16 8676, i16 8677, i16 8678, i16 8680, i16 8688, i16 8694, i16 8701, i16 8702, i16 8703, i16 9140, i16 9141, i16 9180, i16 9181, i16 9182, i16 9183, i16 9184, i16 9185, i16 9472, i16 10229, i16 10230, i16 10231, i16 10232, i16 10233, i16 10234, i16 10235, i16 10236, i16 10237, i16 10238, i16 10239, i16 10508, i16 10509, i16 10510, i16 10511, i16 10512, i16 10574, i16 10576, i16 10578, i16 10579, i16 10582, i16 10583, i16 10586, i16 10587, i16 10590, i16 10591, i16 11077, i16 11078, i16 -459, i16 -458, i16 -457, i16 -456], align 16
@_ZZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie = internal unnamed_addr global %struct.UCPTrie* null, align 8
@_ZGVZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie = internal global i64 0, align 8
@_ZN5blink24kSerializedCharacterDataE = external constant [0 x i8], align 1
@_ZN5blink28kSerializedCharacterDataSizeE = external local_unnamed_addr constant i32, align 4
@.str = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"idx < size()\00", align 1
@.str.2 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.3 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.6 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character24IsUprightInMixedVerticalEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @u_getIntPropertyValue_69(i32 %0, i32 4120) #8
  %3 = icmp ne i32 %2, 0
  ret i1 %3
}

declare i32 @u_getIntPropertyValue_69(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character26IsCJKIdeographOrSymbolSlowEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %0, i8 zeroext 1)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32, i8 zeroext) unnamed_addr #0 {
  %3 = alloca %"class.blink::ICUError", align 4
  %4 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie to i8*) acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %18, !prof !2

6:                                                ; preds = %2
  %7 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %18, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.blink::ICUError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #8
  %11 = getelementptr inbounds %"class.blink::ICUError", %"class.blink::ICUError"* %3, i64 0, i32 0
  store i32 0, i32* %11, align 4
  %12 = load i32, i32* @_ZN5blink28kSerializedCharacterDataSizeE, align 4
  %13 = call %struct.UCPTrie* @ucptrie_openFromBinary_69(i32 0, i32 0, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink24kSerializedCharacterDataE, i64 0, i64 0), i32 %12, i32* null, i32* nonnull %11) #8
  %14 = load i32, i32* %11, align 4
  %15 = icmp slt i32 %14, 1
  br i1 %15, label %17, label %16

16:                                               ; preds = %9
  call void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"* nonnull %3) #8
  br label %17

17:                                               ; preds = %9, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #8
  store %struct.UCPTrie* %13, %struct.UCPTrie** @_ZZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie, align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie) #8
  br label %18

18:                                               ; preds = %6, %17, %2
  %19 = load %struct.UCPTrie*, %struct.UCPTrie** @_ZZN5blinkL11HasPropertyEiNS_17CharacterPropertyEE4trie, align 8
  %20 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 1
  %21 = bitcast %union.UCPTrieData* %20 to i16**
  %22 = load i16*, i16** %21, align 8
  %23 = icmp ult i32 %0, 65536
  br i1 %23, label %24, label %34

24:                                               ; preds = %18
  %25 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 0
  %26 = load i16*, i16** %25, align 8
  %27 = lshr i32 %0, 6
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds i16, i16* %26, i64 %28
  %30 = load i16, i16* %29, align 2
  %31 = zext i16 %30 to i32
  %32 = and i32 %0, 63
  %33 = add nuw nsw i32 %32, %31
  br label %50

34:                                               ; preds = %18
  %35 = icmp ult i32 %0, 1114112
  br i1 %35, label %36, label %46

36:                                               ; preds = %34
  %37 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = icmp sgt i32 %38, %0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = add nsw i32 %42, -2
  br label %50

44:                                               ; preds = %36
  %45 = call i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie* %19, i32 %0) #8
  br label %50

46:                                               ; preds = %34
  %47 = getelementptr inbounds %struct.UCPTrie, %struct.UCPTrie* %19, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, -1
  br label %50

50:                                               ; preds = %46, %44, %40, %24
  %51 = phi i32 [ %33, %24 ], [ %49, %46 ], [ %43, %40 ], [ %45, %44 ]
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i16, i16* %22, i64 %52
  %54 = load i16, i16* %53, align 2
  %55 = zext i16 %54 to i32
  %56 = zext i8 %1 to i32
  %57 = and i32 %55, %56
  %58 = icmp ne i32 %57, 0
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character32IsPotentialCustomElementNameCharEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %0, i8 zeroext 4)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character13IsBidiControlEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %0, i8 zeroext 8)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character12IsHangulSlowEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %0, i8 zeroext 16)
  ret i1 %2
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKhLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i8*, i8 zeroext, i8* nocapture dereferenceable(1), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %4, 3
  br i1 %7, label %8, label %10

8:                                                ; preds = %5
  store i8 1, i8* %3, align 1
  %9 = trunc i64 %0 to i32
  br label %53

10:                                               ; preds = %5
  %11 = icmp eq i8 %2, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %10
  %13 = icmp eq i64 %0, 0
  br i1 %13, label %53, label %14

14:                                               ; preds = %12, %22
  %15 = phi i64 [ %26, %22 ], [ 0, %12 ]
  %16 = phi i32 [ %25, %22 ], [ 0, %12 ]
  %17 = phi i32 [ %24, %22 ], [ 0, %12 ]
  %18 = getelementptr inbounds i8, i8* %1, i64 %15
  %19 = load i8, i8* %18, align 1
  switch i8 %19, label %22 [
    i8 32, label %20
    i8 10, label %20
    i8 9, label %20
    i8 -96, label %20
  ]

20:                                               ; preds = %14, %14, %14, %14
  %21 = add i32 %17, 1
  br label %22

22:                                               ; preds = %14, %20
  %23 = phi i8 [ 1, %20 ], [ 0, %14 ]
  %24 = phi i32 [ %21, %20 ], [ %17, %14 ]
  store i8 %23, i8* %3, align 1
  %25 = add i32 %16, 1
  %26 = zext i32 %25 to i64
  %27 = icmp ult i64 %26, %0
  br i1 %27, label %14, label %53

28:                                               ; preds = %10
  %29 = trunc i64 %0 to i32
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %53, label %31

31:                                               ; preds = %28
  %32 = bitcast %"class.logging::CheckError"* %6 to i8*
  %33 = and i64 %0, 4294967295
  br label %34

34:                                               ; preds = %31, %48
  %35 = phi i64 [ %33, %31 ], [ %52, %48 ]
  %36 = phi i32 [ 0, %31 ], [ %50, %48 ]
  %37 = trunc i64 %35 to i32
  %38 = add i32 %37, -1
  %39 = zext i32 %38 to i64
  %40 = icmp ult i64 %39, %0
  br i1 %40, label %43, label %41

41:                                               ; preds = %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #8
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %43

43:                                               ; preds = %34, %41
  %44 = getelementptr inbounds i8, i8* %1, i64 %39
  %45 = load i8, i8* %44, align 1
  switch i8 %45, label %48 [
    i8 32, label %46
    i8 10, label %46
    i8 9, label %46
    i8 -96, label %46
  ]

46:                                               ; preds = %43, %43, %43, %43
  %47 = add i32 %36, 1
  br label %48

48:                                               ; preds = %43, %46
  %49 = phi i8 [ 1, %46 ], [ 0, %43 ]
  %50 = phi i32 [ %47, %46 ], [ %36, %43 ]
  store i8 %49, i8* %3, align 1
  %51 = icmp eq i32 %38, 0
  %52 = add nsw i64 %35, -1
  br i1 %51, label %53, label %34

53:                                               ; preds = %48, %22, %12, %28, %8
  %54 = phi i32 [ %9, %8 ], [ 0, %12 ], [ 0, %28 ], [ %24, %22 ], [ %50, %48 ]
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink9Character25ExpansionOpportunityCountEN4base4spanIKDsLm18446744073709551615EEENS_13TextDirectionERbNS_11TextJustifyE(i64, i16*, i8 zeroext, i8* nocapture dereferenceable(1), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = icmp eq i8 %2, 0
  br i1 %9, label %10, label %60

10:                                               ; preds = %5
  %11 = icmp eq i64 %0, 0
  br i1 %11, label %127, label %12

12:                                               ; preds = %10
  %13 = icmp ne i32 %4, 0
  br label %14

14:                                               ; preds = %12, %53
  %15 = phi i64 [ 0, %12 ], [ %58, %53 ]
  %16 = phi i32 [ 0, %12 ], [ %57, %53 ]
  %17 = phi i32 [ 0, %12 ], [ %55, %53 ]
  %18 = getelementptr inbounds i16, i16* %1, i64 %15
  %19 = load i16, i16* %18, align 2
  %20 = zext i16 %19 to i32
  switch i16 %19, label %23 [
    i16 32, label %21
    i16 10, label %21
    i16 9, label %21
    i16 160, label %21
  ]

21:                                               ; preds = %14, %14, %14, %14
  %22 = add i32 %17, 1
  br label %53

23:                                               ; preds = %14
  %24 = and i32 %20, 64512
  %25 = icmp eq i32 %24, 55296
  br i1 %25, label %26, label %40

26:                                               ; preds = %23
  %27 = add i32 %16, 1
  %28 = zext i32 %27 to i64
  %29 = icmp ult i64 %28, %0
  br i1 %29, label %30, label %40

30:                                               ; preds = %26
  %31 = getelementptr inbounds i16, i16* %1, i64 %28
  %32 = load i16, i16* %31, align 2
  %33 = and i16 %32, -1024
  %34 = icmp eq i16 %33, -9216
  br i1 %34, label %35, label %40

35:                                               ; preds = %30
  %36 = shl nuw nsw i32 %20, 10
  %37 = zext i16 %32 to i32
  %38 = add nsw i32 %36, -56613888
  %39 = add nsw i32 %38, %37
  br label %40

40:                                               ; preds = %35, %30, %26, %23
  %41 = phi i32 [ %27, %35 ], [ %16, %30 ], [ %16, %26 ], [ %16, %23 ]
  %42 = phi i32 [ %39, %35 ], [ %20, %30 ], [ %20, %26 ], [ %20, %23 ]
  %43 = icmp slt i32 %42, 711
  %44 = or i1 %13, %43
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %42, i8 zeroext 1) #8
  br i1 %46, label %47, label %53

47:                                               ; preds = %45
  %48 = load i8, i8* %3, align 1, !range !3
  %49 = xor i8 %48, 1
  %50 = zext i8 %49 to i32
  %51 = add i32 %17, 1
  %52 = add i32 %51, %50
  br label %53

53:                                               ; preds = %45, %40, %47, %21
  %54 = phi i8 [ 1, %47 ], [ 1, %21 ], [ 0, %40 ], [ 0, %45 ]
  %55 = phi i32 [ %52, %47 ], [ %22, %21 ], [ %17, %40 ], [ %17, %45 ]
  %56 = phi i32 [ %41, %47 ], [ %16, %21 ], [ %41, %40 ], [ %41, %45 ]
  store i8 %54, i8* %3, align 1
  %57 = add i32 %56, 1
  %58 = zext i32 %57 to i64
  %59 = icmp ult i64 %58, %0
  br i1 %59, label %14, label %127

60:                                               ; preds = %5
  %61 = trunc i64 %0 to i32
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %127, label %63

63:                                               ; preds = %60
  %64 = bitcast %"class.logging::CheckError"* %8 to i8*
  %65 = bitcast %"class.logging::CheckError"* %7 to i8*
  %66 = bitcast %"class.logging::CheckError"* %6 to i8*
  %67 = icmp ne i32 %4, 0
  br label %68

68:                                               ; preds = %63, %121
  %69 = phi i32 [ %61, %63 ], [ %125, %121 ]
  %70 = phi i32 [ 0, %63 ], [ %123, %121 ]
  %71 = add i32 %69, -1
  %72 = zext i32 %71 to i64
  %73 = icmp ult i64 %72, %0
  br i1 %73, label %76, label %74

74:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #8
  %75 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #8
  br label %76

76:                                               ; preds = %68, %74
  %77 = getelementptr inbounds i16, i16* %1, i64 %72
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  switch i16 %78, label %82 [
    i16 32, label %80
    i16 10, label %80
    i16 9, label %80
    i16 160, label %80
  ]

80:                                               ; preds = %76, %76, %76, %76
  %81 = add i32 %70, 1
  br label %121

82:                                               ; preds = %76
  %83 = and i32 %79, 64512
  %84 = icmp eq i32 %83, 56320
  %85 = icmp ugt i32 %69, 1
  %86 = and i1 %85, %84
  br i1 %86, label %87, label %108

87:                                               ; preds = %82
  %88 = add i32 %69, -2
  %89 = zext i32 %88 to i64
  %90 = icmp ult i64 %89, %0
  br i1 %90, label %93, label %91

91:                                               ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #8
  %92 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #8
  br label %93

93:                                               ; preds = %87, %91
  %94 = getelementptr inbounds i16, i16* %1, i64 %89
  %95 = load i16, i16* %94, align 2
  %96 = and i16 %95, -1024
  %97 = icmp eq i16 %96, -10240
  br i1 %97, label %98, label %108

98:                                               ; preds = %93
  br i1 %90, label %102, label %99

99:                                               ; preds = %98
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i32 418, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)) #8
  %100 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #8
  %101 = load i16, i16* %94, align 2
  br label %102

102:                                              ; preds = %98, %99
  %103 = phi i16 [ %95, %98 ], [ %101, %99 ]
  %104 = zext i16 %103 to i32
  %105 = shl nuw nsw i32 %104, 10
  %106 = add nuw nsw i32 %79, -56613888
  %107 = add nsw i32 %106, %105
  br label %108

108:                                              ; preds = %102, %93, %82
  %109 = phi i32 [ %71, %102 ], [ %69, %93 ], [ %69, %82 ]
  %110 = phi i32 [ %107, %102 ], [ %79, %93 ], [ %79, %82 ]
  %111 = icmp slt i32 %110, 711
  %112 = or i1 %67, %111
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %110, i8 zeroext 1) #8
  br i1 %114, label %115, label %121

115:                                              ; preds = %113
  %116 = load i8, i8* %3, align 1, !range !3
  %117 = xor i8 %116, 1
  %118 = zext i8 %117 to i32
  %119 = add i32 %70, 1
  %120 = add i32 %119, %118
  br label %121

121:                                              ; preds = %113, %108, %115, %80
  %122 = phi i8 [ 1, %115 ], [ 1, %80 ], [ 0, %108 ], [ 0, %113 ]
  %123 = phi i32 [ %120, %115 ], [ %81, %80 ], [ %70, %108 ], [ %70, %113 ]
  %124 = phi i32 [ %109, %115 ], [ %69, %80 ], [ %109, %108 ], [ %109, %113 ]
  store i8 %122, i8* %3, align 1
  %125 = add i32 %124, -1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %68

127:                                              ; preds = %121, %53, %10, %60
  %128 = phi i32 [ 0, %10 ], [ 0, %60 ], [ %55, %53 ], [ %123, %121 ]
  ret i32 %128
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character24CanTextDecorationSkipInkEi(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %2 [
    i32 95, label %9
    i32 92, label %9
    i32 47, label %9
  ]

2:                                                ; preds = %1
  %3 = icmp slt i32 %0, 711
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call fastcc zeroext i1 @_ZN5blinkL11HasPropertyEiNS_17CharacterPropertyE(i32 %0, i8 zeroext 1) #8
  br i1 %5, label %9, label %6

6:                                                ; preds = %2, %4
  %7 = tail call i32 @ublock_getCode_69(i32 %0) #8
  switch i32 %7, label %8 [
    i32 30, label %9
    i32 65, label %9
    i32 74, label %9
    i32 180, label %9
    i32 185, label %9
    i32 118, label %9
  ]

8:                                                ; preds = %6
  br label %9

9:                                                ; preds = %8, %6, %6, %6, %6, %6, %6, %4, %1, %1, %1
  %10 = phi i1 [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %4 ], [ true, %8 ], [ false, %6 ], [ false, %6 ], [ false, %6 ], [ false, %6 ], [ false, %6 ], [ false, %6 ]
  ret i1 %10
}

declare i32 @ublock_getCode_69(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character22CanReceiveTextEmphasisEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call signext i8 @u_charType_69(i32 %0) #8
  %3 = sext i8 %2 to i32
  %4 = shl i32 1, %3
  %5 = and i32 %4, 126977
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  switch i32 %0, label %8 [
    i32 66463, label %9
    i32 65793, label %9
    i32 65792, label %9
    i32 4961, label %9
    i32 3852, label %9
    i32 3851, label %9
  ]

8:                                                ; preds = %7
  br label %9

9:                                                ; preds = %7, %7, %7, %7, %7, %7, %1, %8
  %10 = phi i1 [ true, %8 ], [ false, %1 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ], [ false, %7 ]
  ret i1 %10
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character18IsEmojiTagSequenceEi(i32) local_unnamed_addr #3 align 2 {
  %2 = add i32 %0, -917552
  %3 = icmp ult i32 %2, 10
  %4 = add i32 %0, -917601
  %5 = icmp ult i32 %4, 26
  %6 = or i1 %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character22IsExtendedPictographicEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call signext i8 @u_hasBinaryProperty_69(i32 %0, i32 64) #8
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

declare signext i8 @u_hasBinaryProperty_69(i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character16IsEmojiComponentEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call signext i8 @u_hasBinaryProperty_69(i32 %0, i32 61) #8
  %3 = icmp ne i8 %2, 0
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9Character15NormalizeSpacesEPKhj(i8* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false) #8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %7 = bitcast %union.anon.3* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %10, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %3, i32 %1) #8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = zext i32 %1 to i64
  br label %31

14:                                               ; preds = %38, %2
  %15 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %42, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %42

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #8
  br label %42

31:                                               ; preds = %38, %12
  %32 = phi i64 [ 0, %12 ], [ %40, %38 ]
  %33 = getelementptr inbounds i8, i8* %0, i64 %32
  %34 = load i8, i8* %33, align 1
  switch i8 %34, label %35 [
    i8 32, label %38
    i8 10, label %38
    i8 9, label %38
    i8 -96, label %38
    i8 12, label %37
    i8 -83, label %37
    i8 13, label %37
  ]

35:                                               ; preds = %31
  %36 = zext i8 %34 to i16
  br label %38

37:                                               ; preds = %31, %31, %31
  br label %38

38:                                               ; preds = %37, %35, %31, %31, %31, %31
  %39 = phi i16 [ 32, %31 ], [ 32, %31 ], [ 32, %31 ], [ 32, %31 ], [ 8203, %37 ], [ %36, %35 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %3, i16 zeroext %39) #8
  %40 = add nuw nsw i64 %32, 1
  %41 = icmp eq i64 %40, %13
  br i1 %41, label %14, label %31

42:                                               ; preds = %14, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #8
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink9Character15NormalizeSpacesEPKDsj(i16* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringBuilder", align 8
  %4 = bitcast %"class.WTF::StringBuilder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 48, i1 false) #8
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 1
  %7 = bitcast %union.anon.3* %6 to i8*
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 2
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 3
  store i8 1, i8* %9, align 4
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %3, i64 0, i32 4
  store i8 0, i8* %10, align 1
  call void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"* nonnull %3, i32 %1) #8
  %11 = icmp eq i32 %1, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  %13 = zext i32 %1 to i64
  br label %31

14:                                               ; preds = %47, %2
  %15 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %3) #8
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %51, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %51

30:                                               ; preds = %27
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #8
  br label %51

31:                                               ; preds = %47, %12
  %32 = phi i64 [ 0, %12 ], [ %49, %47 ]
  %33 = getelementptr inbounds i16, i16* %0, i64 %32
  %34 = load i16, i16* %33, align 2
  %35 = zext i16 %34 to i32
  switch i16 %34, label %36 [
    i16 32, label %47
    i16 10, label %47
    i16 9, label %47
    i16 160, label %47
    i16 8203, label %41
    i16 173, label %41
    i16 13, label %41
    i16 12, label %41
  ]

36:                                               ; preds = %31
  %37 = and i32 %35, 65534
  %38 = icmp eq i32 %37, 8206
  br i1 %38, label %41, label %39

39:                                               ; preds = %36
  switch i16 %34, label %40 [
    i16 -257, label %41
    i16 8238, label %41
    i16 8237, label %41
    i16 8236, label %41
    i16 8235, label %41
    i16 8234, label %41
    i16 -4, label %41
  ]

40:                                               ; preds = %39
  br label %41

41:                                               ; preds = %40, %39, %39, %39, %39, %39, %39, %39, %36, %31, %31, %31, %31
  %42 = phi i1 [ false, %40 ], [ true, %36 ], [ true, %39 ], [ true, %39 ], [ true, %39 ], [ true, %39 ], [ true, %39 ], [ true, %39 ], [ true, %39 ], [ true, %31 ], [ true, %31 ], [ true, %31 ], [ true, %31 ]
  %43 = or i32 %35, 1
  %44 = icmp eq i32 %43, 8205
  %45 = or i1 %44, %42
  %46 = select i1 %45, i16 8203, i16 %34
  br label %47

47:                                               ; preds = %41, %31, %31, %31, %31
  %48 = phi i16 [ %46, %41 ], [ 32, %31 ], [ 32, %31 ], [ 32, %31 ], [ 32, %31 ]
  call void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"* nonnull %3, i16 zeroext %48) #8
  %49 = add nuw nsw i64 %32, 1
  %50 = icmp eq i64 %49, %13
  br i1 %50, label %14, label %31

51:                                               ; preds = %14, %27, %30
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #8
  ret %"class.WTF::StringImpl"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character25IsCommonOrInheritedScriptEi(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ICUError", align 4
  %3 = bitcast %"class.blink::ICUError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.blink::ICUError", %"class.blink::ICUError"* %2, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = call i32 @uscript_getScript_69(i32 %0, i32* nonnull %4) #8
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  %8 = icmp ult i32 %5, 2
  %9 = and i1 %8, %7
  br i1 %7, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"* nonnull %2) #8
  br label %11

11:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i1 %9
}

declare i32 @uscript_getScript_69(i32, i32*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character12IsPrivateUseEi(i32) local_unnamed_addr #0 align 2 {
  %2 = tail call signext i8 @u_charType_69(i32 %0) #8
  %3 = icmp eq i8 %2, 17
  ret i1 %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character14IsNonCharacterEi(i32) local_unnamed_addr #3 align 2 {
  %2 = icmp sgt i32 %0, 64975
  br i1 %2, label %3, label %10

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, 65008
  %5 = and i32 %0, 65534
  %6 = icmp eq i32 %5, 65534
  %7 = or i1 %4, %6
  %8 = icmp slt i32 %0, 1114112
  %9 = and i1 %8, %7
  ret i1 %9

10:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character17HasDefiniteScriptEi(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::ICUError", align 4
  %3 = bitcast %"class.blink::ICUError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #8
  %4 = getelementptr inbounds %"class.blink::ICUError", %"class.blink::ICUError"* %2, i64 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = call i32 @uscript_getScript_69(i32 %0, i32* nonnull %4) #8
  %6 = load i32, i32* %4, align 4
  %7 = icmp slt i32 %6, 1
  %8 = icmp ugt i32 %5, 1
  %9 = and i1 %8, %7
  br i1 %7, label %11, label %10

10:                                               ; preds = %1
  call void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"* nonnull %2) #8
  br label %11

11:                                               ; preds = %1, %10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #8
  ret i1 %9
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN5blink9Character23IsVerticalMathCharacterEi(i32) local_unnamed_addr #4 align 2 {
  %2 = or i32 %0, 1
  %3 = icmp eq i32 %2, 126705
  br i1 %3, label %24, label %4

4:                                                ; preds = %1, %4
  %5 = phi i64 [ %16, %4 ], [ 108, %1 ]
  %6 = phi i16* [ %15, %4 ], [ getelementptr inbounds ([108 x i16], [108 x i16]* @_ZN5blinkL34stretchy_operator_with_inline_axisE, i64 0, i64 0), %1 ]
  %7 = lshr i64 %5, 1
  %8 = getelementptr inbounds i16, i16* %6, i64 %7
  %9 = load i16, i16* %8, align 2
  %10 = zext i16 %9 to i32
  %11 = icmp slt i32 %10, %0
  %12 = getelementptr inbounds i16, i16* %8, i64 1
  %13 = xor i64 %7, -1
  %14 = add i64 %5, %13
  %15 = select i1 %11, i16* %12, i16* %6
  %16 = select i1 %11, i64 %14, i64 %7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %4

18:                                               ; preds = %4
  %19 = icmp eq i16* %15, getelementptr inbounds ([108 x i16], [108 x i16]* @_ZN5blinkL34stretchy_operator_with_inline_axisE, i64 1, i64 0)
  br i1 %19, label %24, label %20

20:                                               ; preds = %18
  %21 = load i16, i16* %15, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp sgt i32 %22, %0
  br label %24

24:                                               ; preds = %20, %18, %1
  %25 = phi i1 [ false, %1 ], [ true, %18 ], [ %23, %20 ]
  ret i1 %25
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

declare i32 @ucptrie_internalSmallIndex_69(%struct.UCPTrie*, i32) local_unnamed_addr #1

declare %struct.UCPTrie* @ucptrie_openFromBinary_69(i32, i32, i8*, i32, i32*, i32*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #6

declare signext i8 @u_charType_69(i32) local_unnamed_addr #1

declare void @_ZN5blink8ICUError13HandleFailureEv(%"class.blink::ICUError"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3WTF13StringBuilder15ReserveCapacityEj(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEDs(%"class.WTF::StringBuilder"*, i16 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i16, align 2
  store i16 %1, i16* %4, align 2
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !3
  %7 = icmp ne i8 %6, 0
  %8 = icmp ult i16 %1, 256
  %9 = and i1 %8, %7
  br i1 %9, label %10, label %35

10:                                               ; preds = %2
  %11 = trunc i16 %1 to i8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3)
  store i8 %11, i8* %3, align 1
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %13 = load i8, i8* %12, align 1, !range !3
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %16

15:                                               ; preds = %10
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %16

16:                                               ; preds = %15, %10
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %30, label %23, !prof !4

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %17, i64 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = zext i32 %19 to i64
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  store i8 %11, i8* %27, align 1
  %28 = load i32, i32* %18, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %18, align 4
  br label %31

30:                                               ; preds = %16
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"* %17, i8* nonnull dereferenceable(1) %3) #8
  br label %31

31:                                               ; preds = %23, %30
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3)
  br label %62

35:                                               ; preds = %2
  %36 = icmp eq i8 %6, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %39 = load i8, i8* %38, align 1, !range !3
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %37, %35
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #8
  br label %42

42:                                               ; preds = %37, %41
  %43 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %56, label %49, !prof !4

49:                                               ; preds = %42
  %50 = bitcast %union.anon.3* %43 to i16**
  %51 = load i16*, i16** %50, align 8
  %52 = zext i32 %45 to i64
  %53 = getelementptr inbounds i16, i16* %51, i64 %52
  store i16 %1, i16* %53, align 2
  %54 = load i32, i32* %44, align 4
  %55 = add i32 %54, 1
  store i32 %55, i32* %44, align 4
  br label %58

56:                                               ; preds = %42
  %57 = bitcast %union.anon.3* %43 to %"class.WTF::Vector.4"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.4"* %57, i16* nonnull dereferenceable(2) %4) #8
  br label %58

58:                                               ; preds = %49, %56
  %59 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, 1
  store i32 %61, i32* %59, align 8
  br label %62

62:                                               ; preds = %58, %31
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"* %0, i32 %5) #8
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %27) #8
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #8
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %18, i8* nonnull %6) #8
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #8
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #8
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !5

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #8
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !5

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"* %46, i8* %42) #8
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #8
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.4"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"* %0, i32 %5) #8
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"* %0, i32 %5) #8
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #8
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.2, i64 0, i64 0), i8* %15, i8* %16) #8
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.3, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #8
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #8
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #8
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !5

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #8
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4"* %0, i32 %27) #8
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #8
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.5"* %19, i16* nonnull %6) #8
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #8
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #8
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !5

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #8
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.5"* %53, i16* %48) #8
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.5, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.6, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.5"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{!"branch_weights", i32 2000, i32 1}
