; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/interp_fixup_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/interp_fixup_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::InterpFixupPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8] }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%struct.spv_position_t = type { i64, i64, i64 }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::function.922" = type { %"class.std::__1::__function::__policy_func.926" }
%"class.std::__1::__function::__policy_func.926" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.927", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.927" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules" = type { %"class.spvtools::opt::FoldingRules" }
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.spvtools::opt::FoldingRules::Key", %"class.std::__1::vector.855" }
%"struct.spvtools::opt::FoldingRules::Key" = type { i32, i32 }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node.943" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.944" }
%"struct.std::__1::pair.944" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__tree_node.954" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.955" }
%"struct.std::__1::__value_type.955" = type { %"struct.std::__1::pair.956" }
%"struct.std::__1::pair.956" = type { %"struct.spvtools::opt::ConstantFoldingRules::Key", %"struct.spvtools::opt::ConstantFoldingRules::Value" }
%"struct.spvtools::opt::ConstantFoldingRules::Key" = type { i32, i32 }
%"struct.spvtools::opt::ConstantFoldingRules::Value" = type { %"class.std::__1::vector.795" }
%"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules" = type { %"class.spvtools::opt::ConstantFoldingRules" }

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt15InterpFixupPassD0Ev = comdat any

$_ZNK8spvtools3opt15InterpFixupPass4nameEv = comdat any

$_ZN8spvtools3opt15InterpFixupPass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt12FoldingRulesD2Ev = comdat any

$_ZNSt3__113unordered_mapIjNS_6vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS4_11InstructionERKNS1_IPKNS4_8analysis8ConstantENS_9allocatorISC_EEEEEEENSD_ISJ_EEEENS_4hashIjEENS_8equal_toIjEENSD_INS_4pairIKjSL_EEEEED2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS0_IPKNS3_8analysis8ConstantENS_9allocatorISB_EEEEEEENSC_ISI_EEE21__push_back_slow_pathISI_EEvOT_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE11__call_implINS0_20__default_alloc_funcIPSI_SI_EEEEbPKNS0_16__policy_storageES5_S7_SH_ = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt20ConstantFoldingRulesD2Ev = comdat any

$_ZNSt3__113unordered_mapIjN8spvtools3opt20ConstantFoldingRules5ValueENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS4_EEEEED2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIPFbPN8spvtools3opt9IRContextEPNS5_11InstructionERKNS_6vectorIPKNS5_8analysis8ConstantENS_9allocatorISE_EEEEESK_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@_ZTVN8spvtools3opt15InterpFixupPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InterpFixupPass"*)* @_ZN8spvtools3opt15InterpFixupPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::InterpFixupPass"*)* @_ZNK8spvtools3opt15InterpFixupPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::InterpFixupPass"*)* @_ZN8spvtools3opt15InterpFixupPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::InterpFixupPass"*)* @_ZN8spvtools3opt15InterpFixupPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt12_GLOBAL__N_118InterpFoldingRulesE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::FoldingRules"*)* @_ZN8spvtools3opt12FoldingRulesD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"*)* @_ZN8spvtools3opt12_GLOBAL__N_118InterpFoldingRulesD0Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"*)* @_ZN8spvtools3opt12_GLOBAL__N_118InterpFoldingRules15AddFoldingRulesEv to i8*)] }, align 8
@_ZTVN8spvtools3opt12FoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIPFbPN8spvtools3opt9IRContextEPNS5_11InstructionERKNS_6vectorIPKNS5_8analysis8ConstantENS_9allocatorISE_EEEEESK_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.2 = private unnamed_addr constant [13 x i8] c"interp-fixup\00", align 1
@_ZTVN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRulesE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::ConstantFoldingRules"*)* @_ZN8spvtools3opt20ConstantFoldingRulesD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"*)* @_ZN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRulesD0Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"*)* @_ZN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRules15AddFoldingRulesEv to i8*)] }, align 8
@_ZTVN8spvtools3opt20ConstantFoldingRulesE = external unnamed_addr constant { [5 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15InterpFixupPass7ProcessEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt15InterpFixupPass7ProcessEv(%"class.spvtools::opt::InterpFixupPass"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.spvtools::opt::InstructionFolder", align 8
  %4 = alloca %"class.std::__1::function.922", align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #11
  store i8 0, i8* %2, align 1
  %5 = bitcast %"class.spvtools::opt::InstructionFolder"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::InterpFixupPass", %"class.spvtools::opt::InterpFixupPass"* %0, i64 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = tail call i8* @_Znwm(i64 104) #12
  %12 = bitcast i8* %11 to i32 (...)***
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = getelementptr inbounds i8, i8* %11, i64 40
  %15 = bitcast i8* %14 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 56
  %17 = getelementptr inbounds i8, i8* %11, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #11
  %18 = bitcast i8* %17 to i8**
  store i8* %16, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %11, i64 72
  %20 = bitcast i8* %19 to %"class.spvtools::opt::IRContext"**
  store %"class.spvtools::opt::IRContext"* %10, %"class.spvtools::opt::IRContext"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %11, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12_GLOBAL__N_118InterpFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %22 = ptrtoint i8* %11 to i64
  %23 = ptrtoint %"class.spvtools::opt::IRContext"* %10 to i64
  %24 = tail call i8* @_Znwm(i64 104) #12
  %25 = bitcast i8* %24 to i32 (...)***
  %26 = getelementptr inbounds i8, i8* %24, i64 8
  %27 = getelementptr inbounds i8, i8* %24, i64 40
  %28 = bitcast i8* %27 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %28, align 4
  %29 = getelementptr inbounds i8, i8* %24, i64 56
  %30 = getelementptr inbounds i8, i8* %24, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %31 = bitcast i8* %30 to i8**
  store i8* %29, i8** %31, align 8
  %32 = getelementptr inbounds i8, i8* %24, i64 72
  %33 = bitcast i8* %32 to i64*
  store i64 %23, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %24, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %35 = ptrtoint i8* %24 to i64
  store %"class.spvtools::opt::IRContext"* %10, %"class.spvtools::opt::IRContext"** %6, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %3, i64 0, i32 1
  %37 = bitcast %"class.std::__1::unique_ptr.757"* %36 to i64*
  store i64 %35, i64* %37, align 8
  %38 = getelementptr inbounds %"class.spvtools::opt::InstructionFolder", %"class.spvtools::opt::InstructionFolder"* %3, i64 0, i32 2
  %39 = bitcast %"class.std::__1::unique_ptr.817"* %38 to i64*
  store i64 %22, i64* %39, align 8
  %40 = bitcast i8* %11 to %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"*
  tail call void @_ZN8spvtools3opt12_GLOBAL__N_118InterpFoldingRules15AddFoldingRulesEv(%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* nonnull %40) #11
  %41 = bitcast i8* %24 to %"class.spvtools::opt::ConstantFoldingRules"*
  %42 = bitcast i8* %24 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %43 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %43, i64 2
  %45 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %44, align 8
  tail call void %45(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %41) #11
  %46 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %46, i64 0, i32 4, i32 0, i32 0, i32 0
  %48 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %48, i64 0, i32 15, i32 0, i32 0
  %50 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %48, i64 0, i32 15, i32 0, i32 1
  %52 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %51, align 8
  %53 = icmp eq %"class.std::__1::unique_ptr.28"* %50, %52
  br i1 %53, label %54, label %56

54:                                               ; preds = %1
  %55 = bitcast i8* %11 to %"class.spvtools::opt::FoldingRules"*
  store %"class.spvtools::opt::FoldingRules"* null, %"class.spvtools::opt::FoldingRules"** %8, align 8
  br label %69

56:                                               ; preds = %1
  %57 = bitcast %"class.std::__1::function.922"* %4 to i8*
  %58 = getelementptr inbounds %"class.std::__1::function.922", %"class.std::__1::function.922"* %4, i64 0, i32 0, i32 1, i32 0
  %59 = getelementptr inbounds %"class.std::__1::function.922", %"class.std::__1::function.922"* %4, i64 0, i32 0, i32 2
  %60 = getelementptr inbounds %"class.std::__1::function.922", %"class.std::__1::function.922"* %4, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::function.922", %"class.std::__1::function.922"* %4, i64 0, i32 0, i32 0, i32 1
  %62 = bitcast [8 x i8]* %61 to %"class.spvtools::opt::InstructionFolder"**
  br label %86

63:                                               ; preds = %96
  %64 = load i8, i8* %2, align 1, !range !2
  %65 = load %"class.spvtools::opt::FoldingRules"*, %"class.spvtools::opt::FoldingRules"** %8, align 8
  %66 = icmp eq i8 %64, 0
  %67 = select i1 %66, i32 17, i32 16
  store %"class.spvtools::opt::FoldingRules"* null, %"class.spvtools::opt::FoldingRules"** %8, align 8
  %68 = icmp eq %"class.spvtools::opt::FoldingRules"* %65, null
  br i1 %68, label %76, label %69

69:                                               ; preds = %54, %63
  %70 = phi i32 [ 17, %54 ], [ %67, %63 ]
  %71 = phi %"class.spvtools::opt::FoldingRules"* [ %55, %54 ], [ %65, %63 ]
  %72 = bitcast %"class.spvtools::opt::FoldingRules"* %71 to void (%"class.spvtools::opt::FoldingRules"*)***
  %73 = load void (%"class.spvtools::opt::FoldingRules"*)**, void (%"class.spvtools::opt::FoldingRules"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %73, i64 1
  %75 = load void (%"class.spvtools::opt::FoldingRules"*)*, void (%"class.spvtools::opt::FoldingRules"*)** %74, align 8
  call void %75(%"class.spvtools::opt::FoldingRules"* nonnull %71) #11
  br label %76

76:                                               ; preds = %69, %63
  %77 = phi i32 [ %70, %69 ], [ %67, %63 ]
  %78 = load %"class.spvtools::opt::ConstantFoldingRules"*, %"class.spvtools::opt::ConstantFoldingRules"** %7, align 8
  store %"class.spvtools::opt::ConstantFoldingRules"* null, %"class.spvtools::opt::ConstantFoldingRules"** %7, align 8
  %79 = icmp eq %"class.spvtools::opt::ConstantFoldingRules"* %78, null
  br i1 %79, label %85, label %80

80:                                               ; preds = %76
  %81 = bitcast %"class.spvtools::opt::ConstantFoldingRules"* %78 to void (%"class.spvtools::opt::ConstantFoldingRules"*)***
  %82 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)**, void (%"class.spvtools::opt::ConstantFoldingRules"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %82, i64 1
  %84 = load void (%"class.spvtools::opt::ConstantFoldingRules"*)*, void (%"class.spvtools::opt::ConstantFoldingRules"*)** %83, align 8
  call void %84(%"class.spvtools::opt::ConstantFoldingRules"* nonnull %78) #11
  br label %85

85:                                               ; preds = %76, %80
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #11
  ret i32 %77

86:                                               ; preds = %56, %96
  %87 = phi %"class.std::__1::unique_ptr.28"* [ %50, %56 ], [ %97, %96 ]
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %87, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %88, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15InterpFixupPass7ProcessEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %58, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15InterpFixupPass7ProcessEvE3$_0FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %59, align 8
  store i8* %2, i8** %60, align 8
  store %"class.spvtools::opt::InstructionFolder"* %3, %"class.spvtools::opt::InstructionFolder"** %62, align 8
  call void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"* %89, %"class.std::__1::function.922"* nonnull dereferenceable(32) %4, i1 zeroext false, i1 zeroext false) #11
  %90 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %59, align 8
  %91 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %90, i64 0, i32 1
  %92 = load void (i8*)*, void (i8*)** %91, align 8
  %93 = icmp eq void (i8*)* %92, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %86
  %95 = load i8*, i8** %60, align 8
  call void %92(i8* %95) #11
  br label %96

96:                                               ; preds = %86, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #11
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %87, i64 1
  %98 = icmp eq %"class.std::__1::unique_ptr.28"* %97, %52
  br i1 %98, label %63, label %86
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8spvtools3opt8Function11ForEachInstERKNSt3__18functionIFvPNS0_11InstructionEEEEbb(%"class.spvtools::opt::Function"*, %"class.std::__1::function.922"* dereferenceable(32), i1 zeroext, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InterpFixupPassD0Ev(%"class.spvtools::opt::InterpFixupPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InterpFixupPass", %"class.spvtools::opt::InterpFixupPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InterpFixupPass", %"class.spvtools::opt::InterpFixupPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::InterpFixupPass", %"class.spvtools::opt::InterpFixupPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  %12 = bitcast %"class.spvtools::opt::InterpFixupPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %12) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt15InterpFixupPass4nameEv(%"class.spvtools::opt::InterpFixupPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt15InterpFixupPass20GetPreservedAnalysesEv(%"class.spvtools::opt::InterpFixupPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 65535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt12FoldingRulesD2Ev(%"class.spvtools::opt::FoldingRules"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %4, align 8
  %6 = icmp eq %"class.std::__1::function.857"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::function.857"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %9, align 8
  %11 = icmp eq %"class.std::__1::function.857"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::function.857"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %13, i64 -1, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"class.std::__1::function.857"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.855"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::function.857"* %5, %"class.std::__1::function.857"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE(%"class.std::__1::__tree.845"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::FoldingRules", %"class.spvtools::opt::FoldingRules"* %0, i64 0, i32 1
  tail call void @_ZNSt3__113unordered_mapIjNS_6vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS4_11InstructionERKNS1_IPKNS4_8analysis8ConstantENS_9allocatorISC_EEEEEEENSD_ISJ_EEEENS_4hashIjEENS_8equal_toIjEENSD_INS_4pairIKjSL_EEEEED2Ev(%"class.std::__1::unordered_map.820"* %35) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8spvtools3opt12_GLOBAL__N_118InterpFoldingRulesD0Ev(%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt12FoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %4, align 8
  %6 = icmp eq %"class.std::__1::function.857"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::function.857"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %9, align 8
  %11 = icmp eq %"class.std::__1::function.857"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::function.857"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %13, i64 -1, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"class.std::__1::function.857"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.855"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::function.857"* %5, %"class.std::__1::function.857"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node"**
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE(%"class.std::__1::__tree.845"* %31, %"class.std::__1::__tree_node"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.825"*, %"struct.std::__1::__hash_node_base.825"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.825"* %36, null
  br i1 %37, label %73, label %38

38:                                               ; preds = %30, %70
  %39 = phi %"struct.std::__1::__hash_node_base.825"* [ %41, %70 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.825"*, %"struct.std::__1::__hash_node_base.825"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %39, i64 3
  %43 = bitcast %"struct.std::__1::__hash_node_base.825"* %42 to %"class.std::__1::function.857"**
  %44 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %43, align 8
  %45 = icmp eq %"class.std::__1::function.857"* %44, null
  br i1 %45, label %70, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.std::__1::function.857"* %44 to i8*
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %39, i64 4
  %49 = bitcast %"struct.std::__1::__hash_node_base.825"* %48 to %"class.std::__1::function.857"**
  %50 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %49, align 8
  %51 = icmp eq %"class.std::__1::function.857"* %50, %44
  br i1 %51, label %68, label %52

52:                                               ; preds = %46, %63
  %53 = phi %"class.std::__1::function.857"* [ %54, %63 ], [ %50, %46 ]
  %54 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %53, i64 -1
  %55 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %53, i64 -1, i32 0, i32 2
  %56 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %56, i64 0, i32 1
  %58 = load void (i8*)*, void (i8*)** %57, align 8
  %59 = icmp eq void (i8*)* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %54, i64 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void %58(i8* %62) #11
  br label %63

63:                                               ; preds = %60, %52
  %64 = icmp eq %"class.std::__1::function.857"* %54, %44
  br i1 %64, label %65, label %52

65:                                               ; preds = %63
  %66 = bitcast %"struct.std::__1::__hash_node_base.825"* %42 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %46
  %69 = phi i8* [ %67, %65 ], [ %47, %46 ]
  store %"class.std::__1::function.857"* %44, %"class.std::__1::function.857"** %49, align 8
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %68, %38
  %71 = bitcast %"struct.std::__1::__hash_node_base.825"* %39 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  %72 = icmp eq %"struct.std::__1::__hash_node_base.825"* %41, null
  br i1 %72, label %73, label %38

73:                                               ; preds = %70, %30
  %74 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.825"**, %"struct.std::__1::__hash_node_base.825"*** %74, align 8
  store %"struct.std::__1::__hash_node_base.825"** null, %"struct.std::__1::__hash_node_base.825"*** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.825"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.std::__1::__hash_node_base.825"** %75 to i8*
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %73, %77
  %80 = bitcast %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8spvtools3opt12_GLOBAL__N_118InterpFoldingRules15AddFoldingRulesEv(%"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::function.857", align 8
  %3 = alloca %"class.std::__1::function.857", align 8
  %4 = alloca %"class.std::__1::function.857", align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 3
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::FeatureManager"* %9, null
  br i1 %10, label %11, label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 1
  %13 = tail call i8* @_Znwm(i64 48) #12
  %14 = bitcast i8* %13 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %12, %"class.spvtools::AssemblyGrammar"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false) #11
  %16 = ptrtoint i8* %13 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.152"* %7 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %13 to %"class.spvtools::opt::FeatureManager"*
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %18, %"class.spvtools::opt::Module"* %20) #11
  %21 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  br label %22

22:                                               ; preds = %1, %11
  %23 = phi %"class.spvtools::opt::FeatureManager"* [ %9, %1 ], [ %21, %11 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %23, i64 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %376, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0
  %29 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to %"class.std::__1::__tree_node"**
  %31 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node"* %31, null
  br i1 %32, label %67, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %63, %33
  %36 = phi %"class.std::__1::__tree_node"* [ %66, %63 ], [ %31, %33 ]
  %37 = phi %"class.std::__1::__tree_node_base"** [ %65, %63 ], [ %34, %33 ]
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp ult i32 %25, %39
  br i1 %40, label %47, label %41

41:                                               ; preds = %35
  %42 = icmp ugt i32 %25, %39
  br i1 %42, label %55, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 1, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = icmp ugt i32 %45, 76
  br i1 %46, label %47, label %53

47:                                               ; preds = %43, %35
  %48 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node_base"* %49, null
  br i1 %50, label %51, label %63

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 0
  br label %69

53:                                               ; preds = %43
  %54 = icmp eq i32 %45, 76
  br i1 %54, label %61, label %55

55:                                               ; preds = %53, %41
  %56 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 1
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %59, label %63

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 0
  br label %69

61:                                               ; preds = %53
  %62 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %36, i64 0, i32 0, i32 0
  br label %69

63:                                               ; preds = %55, %47
  %64 = phi %"class.std::__1::__tree_node_base"* [ %49, %47 ], [ %57, %55 ]
  %65 = phi %"class.std::__1::__tree_node_base"** [ %48, %47 ], [ %56, %55 ]
  %66 = bitcast %"class.std::__1::__tree_node_base"* %64 to %"class.std::__1::__tree_node"*
  br label %35

67:                                               ; preds = %27
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  br label %69

69:                                               ; preds = %67, %61, %59, %51
  %70 = phi %"class.std::__1::__tree_end_node"* [ %29, %67 ], [ %52, %51 ], [ %60, %59 ], [ %62, %61 ]
  %71 = phi %"class.std::__1::__tree_node_base"** [ %68, %67 ], [ %48, %51 ], [ %56, %59 ], [ %37, %61 ]
  %72 = bitcast %"class.std::__1::__tree_node_base"** %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %103

75:                                               ; preds = %69
  %76 = tail call i8* @_Znwm(i64 64) #12, !noalias !3
  %77 = getelementptr inbounds i8, i8* %76, i64 32
  %78 = bitcast i8* %77 to i64*
  %79 = zext i32 %25 to i64
  %80 = or i64 %79, 326417514496
  store i64 %80, i64* %78, align 8, !noalias !3
  %81 = getelementptr inbounds i8, i8* %76, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 24, i1 false) #11, !noalias !3
  %82 = bitcast i8* %76 to %"class.std::__1::__tree_node"*
  %83 = bitcast i8* %76 to %"class.std::__1::__tree_node_base"*
  %84 = getelementptr inbounds i8, i8* %76, i64 16
  %85 = bitcast i8* %84 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %85, align 8
  %86 = bitcast %"class.std::__1::__tree_node_base"** %71 to i8**
  store i8* %76, i8** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::__tree.845", %"class.std::__1::__tree.845"* %28, i64 0, i32 0
  %88 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %87, align 8
  %89 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %88, i64 0, i32 0
  %90 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %89, align 8
  %91 = icmp eq %"class.std::__1::__tree_node_base"* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %75
  %93 = ptrtoint %"class.std::__1::__tree_node_base"* %90 to i64
  %94 = bitcast %"class.std::__1::__tree.845"* %28 to i64*
  store i64 %93, i64* %94, align 8
  %95 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %71, align 8
  br label %96

96:                                               ; preds = %92, %75
  %97 = phi %"class.std::__1::__tree_node_base"* [ %83, %75 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %98, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %97) #11
  %100 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 1
  store i64 %102, i64* %100, align 8
  br label %103

103:                                              ; preds = %69, %96
  %104 = phi %"class.std::__1::__tree_node"* [ %73, %69 ], [ %82, %96 ]
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::function.857"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %106) #11
  %107 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %2, i64 0, i32 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %2, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE11__call_implINS0_20__default_alloc_funcIPSI_SI_EEEEbPKNS0_16__policy_storageES5_S7_SH_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)** %107, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIPFbPN8spvtools3opt9IRContextEPNS5_11InstructionERKNS_6vectorIPKNS5_8analysis8ConstantENS_9allocatorISE_EEEEESK_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %108, align 8
  %109 = bitcast %"class.std::__1::function.857"* %2 to i64*
  store i64 ptrtoint (i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZN8spvtools3opt12_GLOBAL__N_126ReplaceInternalInterpolateEPNS0_9IRContextEPNS0_11InstructionERKNSt3__16vectorIPKNS0_8analysis8ConstantENS6_9allocatorISB_EEEE to i64), i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 6
  %111 = bitcast %"class.std::__1::__tree_end_node"* %110 to %"class.std::__1::function.857"**
  %112 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 7
  %114 = bitcast %"class.std::__1::__tree_end_node"* %113 to %"class.std::__1::function.857"**
  %115 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %114, align 8
  %116 = icmp ult %"class.std::__1::function.857"* %112, %115
  br i1 %116, label %117, label %134

117:                                              ; preds = %103
  %118 = bitcast %"class.std::__1::function.857"* %112 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %118, i8* nonnull align 8 %106, i64 16, i1 false) #11
  %119 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %112, i64 0, i32 0, i32 1
  %120 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %2, i64 0, i32 0, i32 1
  %121 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %120 to i64*
  %122 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %119 to i64*
  %123 = load i64, i64* %121, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %112, i64 0, i32 0, i32 2
  %125 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %108, align 8
  store %"struct.std::__1::__function::__policy"* %125, %"struct.std::__1::__function::__policy"** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %125, i64 0, i32 1
  %127 = load void (i8*)*, void (i8*)** %126, align 8
  %128 = icmp eq void (i8*)* %127, null
  br i1 %128, label %130, label %129

129:                                              ; preds = %117
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %108, align 8
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ to i64), i64* %121, align 8
  br label %130

130:                                              ; preds = %129, %117
  %131 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %112, i64 1
  %132 = ptrtoint %"class.std::__1::function.857"* %131 to i64
  %133 = bitcast %"class.std::__1::__tree_end_node"* %110 to i64*
  store i64 %132, i64* %133, align 8
  br label %137

134:                                              ; preds = %103
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %105, i64 5
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to %"class.std::__1::vector.855"*
  call void @_ZNSt3__16vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS0_IPKNS3_8analysis8ConstantENS_9allocatorISB_EEEEEEENSC_ISI_EEE21__push_back_slow_pathISI_EEvOT_(%"class.std::__1::vector.855"* %136, %"class.std::__1::function.857"* nonnull dereferenceable(32) %2) #11
  br label %137

137:                                              ; preds = %130, %134
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %108, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %145, label %142

142:                                              ; preds = %137
  %143 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %2, i64 0, i32 0, i32 0, i32 0
  %144 = load i8*, i8** %143, align 8
  call void %140(i8* %144) #11
  br label %145

145:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %106) #11
  %146 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %147 = icmp eq %"class.std::__1::__tree_node"* %146, null
  br i1 %147, label %182, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %150

150:                                              ; preds = %178, %148
  %151 = phi %"class.std::__1::__tree_node"* [ %181, %178 ], [ %146, %148 ]
  %152 = phi %"class.std::__1::__tree_node_base"** [ %180, %178 ], [ %149, %148 ]
  %153 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 0, i32 0
  %154 = load i32, i32* %153, align 4
  %155 = icmp ult i32 %25, %154
  br i1 %155, label %162, label %156

156:                                              ; preds = %150
  %157 = icmp ugt i32 %25, %154
  br i1 %157, label %170, label %158

158:                                              ; preds = %156
  %159 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 1, i32 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = icmp ugt i32 %160, 77
  br i1 %161, label %162, label %168

162:                                              ; preds = %158, %150
  %163 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %163, align 8
  %165 = icmp eq %"class.std::__1::__tree_node_base"* %164, null
  br i1 %165, label %166, label %178

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 0, i32 0
  br label %184

168:                                              ; preds = %158
  %169 = icmp eq i32 %160, 77
  br i1 %169, label %176, label %170

170:                                              ; preds = %168, %156
  %171 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 0, i32 1
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %178

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 0, i32 0
  br label %184

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %151, i64 0, i32 0, i32 0
  br label %184

178:                                              ; preds = %170, %162
  %179 = phi %"class.std::__1::__tree_node_base"* [ %164, %162 ], [ %172, %170 ]
  %180 = phi %"class.std::__1::__tree_node_base"** [ %163, %162 ], [ %171, %170 ]
  %181 = bitcast %"class.std::__1::__tree_node_base"* %179 to %"class.std::__1::__tree_node"*
  br label %150

182:                                              ; preds = %145
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  br label %184

184:                                              ; preds = %182, %176, %174, %166
  %185 = phi %"class.std::__1::__tree_end_node"* [ %29, %182 ], [ %167, %166 ], [ %175, %174 ], [ %177, %176 ]
  %186 = phi %"class.std::__1::__tree_node_base"** [ %183, %182 ], [ %163, %166 ], [ %171, %174 ], [ %152, %176 ]
  %187 = bitcast %"class.std::__1::__tree_node_base"** %186 to %"class.std::__1::__tree_node"**
  %188 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %187, align 8
  %189 = icmp eq %"class.std::__1::__tree_node"* %188, null
  br i1 %189, label %190, label %218

190:                                              ; preds = %184
  %191 = call i8* @_Znwm(i64 64) #12, !noalias !6
  %192 = getelementptr inbounds i8, i8* %191, i64 32
  %193 = bitcast i8* %192 to i64*
  %194 = zext i32 %25 to i64
  %195 = or i64 %194, 330712481792
  store i64 %195, i64* %193, align 8, !noalias !6
  %196 = getelementptr inbounds i8, i8* %191, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %196, i8 0, i64 24, i1 false) #11, !noalias !6
  %197 = bitcast i8* %191 to %"class.std::__1::__tree_node"*
  %198 = bitcast i8* %191 to %"class.std::__1::__tree_node_base"*
  %199 = getelementptr inbounds i8, i8* %191, i64 16
  %200 = bitcast i8* %199 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %191, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %185, %"class.std::__1::__tree_end_node"** %200, align 8
  %201 = bitcast %"class.std::__1::__tree_node_base"** %186 to i8**
  store i8* %191, i8** %201, align 8
  %202 = getelementptr inbounds %"class.std::__1::__tree.845", %"class.std::__1::__tree.845"* %28, i64 0, i32 0
  %203 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %202, align 8
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, null
  br i1 %206, label %211, label %207

207:                                              ; preds = %190
  %208 = ptrtoint %"class.std::__1::__tree_node_base"* %205 to i64
  %209 = bitcast %"class.std::__1::__tree.845"* %28 to i64*
  store i64 %208, i64* %209, align 8
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  br label %211

211:                                              ; preds = %207, %190
  %212 = phi %"class.std::__1::__tree_node_base"* [ %198, %190 ], [ %210, %207 ]
  %213 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %214, %"class.std::__1::__tree_node_base"* %212) #11
  %215 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %216, 1
  store i64 %217, i64* %215, align 8
  br label %218

218:                                              ; preds = %184, %211
  %219 = phi %"class.std::__1::__tree_node"* [ %188, %184 ], [ %197, %211 ]
  %220 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %219, i64 0, i32 0, i32 0
  %221 = bitcast %"class.std::__1::function.857"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %221) #11
  %222 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %3, i64 0, i32 0, i32 1, i32 0
  %223 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %3, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE11__call_implINS0_20__default_alloc_funcIPSI_SI_EEEEbPKNS0_16__policy_storageES5_S7_SH_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)** %222, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIPFbPN8spvtools3opt9IRContextEPNS5_11InstructionERKNS_6vectorIPKNS5_8analysis8ConstantENS_9allocatorISE_EEEEESK_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %223, align 8
  %224 = bitcast %"class.std::__1::function.857"* %3 to i64*
  store i64 ptrtoint (i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZN8spvtools3opt12_GLOBAL__N_126ReplaceInternalInterpolateEPNS0_9IRContextEPNS0_11InstructionERKNSt3__16vectorIPKNS0_8analysis8ConstantENS6_9allocatorISB_EEEE to i64), i64* %224, align 8
  %225 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 6
  %226 = bitcast %"class.std::__1::__tree_end_node"* %225 to %"class.std::__1::function.857"**
  %227 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 7
  %229 = bitcast %"class.std::__1::__tree_end_node"* %228 to %"class.std::__1::function.857"**
  %230 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %229, align 8
  %231 = icmp ult %"class.std::__1::function.857"* %227, %230
  br i1 %231, label %232, label %249

232:                                              ; preds = %218
  %233 = bitcast %"class.std::__1::function.857"* %227 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* nonnull align 8 %221, i64 16, i1 false) #11
  %234 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %227, i64 0, i32 0, i32 1
  %235 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %3, i64 0, i32 0, i32 1
  %236 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %235 to i64*
  %237 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %234 to i64*
  %238 = load i64, i64* %236, align 8
  store i64 %238, i64* %237, align 8
  %239 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %227, i64 0, i32 0, i32 2
  %240 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %223, align 8
  store %"struct.std::__1::__function::__policy"* %240, %"struct.std::__1::__function::__policy"** %239, align 8
  %241 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %240, i64 0, i32 1
  %242 = load void (i8*)*, void (i8*)** %241, align 8
  %243 = icmp eq void (i8*)* %242, null
  br i1 %243, label %245, label %244

244:                                              ; preds = %232
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %223, align 8
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ to i64), i64* %236, align 8
  br label %245

245:                                              ; preds = %244, %232
  %246 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %227, i64 1
  %247 = ptrtoint %"class.std::__1::function.857"* %246 to i64
  %248 = bitcast %"class.std::__1::__tree_end_node"* %225 to i64*
  store i64 %247, i64* %248, align 8
  br label %252

249:                                              ; preds = %218
  %250 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %220, i64 5
  %251 = bitcast %"class.std::__1::__tree_end_node"* %250 to %"class.std::__1::vector.855"*
  call void @_ZNSt3__16vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS0_IPKNS3_8analysis8ConstantENS_9allocatorISB_EEEEEEENSC_ISI_EEE21__push_back_slow_pathISI_EEvOT_(%"class.std::__1::vector.855"* %251, %"class.std::__1::function.857"* nonnull dereferenceable(32) %3) #11
  br label %252

252:                                              ; preds = %245, %249
  %253 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %223, align 8
  %254 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %253, i64 0, i32 1
  %255 = load void (i8*)*, void (i8*)** %254, align 8
  %256 = icmp eq void (i8*)* %255, null
  br i1 %256, label %260, label %257

257:                                              ; preds = %252
  %258 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %3, i64 0, i32 0, i32 0, i32 0
  %259 = load i8*, i8** %258, align 8
  call void %255(i8* %259) #11
  br label %260

260:                                              ; preds = %252, %257
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %221) #11
  %261 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %30, align 8
  %262 = icmp eq %"class.std::__1::__tree_node"* %261, null
  br i1 %262, label %297, label %263

263:                                              ; preds = %260
  %264 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %265

265:                                              ; preds = %293, %263
  %266 = phi %"class.std::__1::__tree_node"* [ %296, %293 ], [ %261, %263 ]
  %267 = phi %"class.std::__1::__tree_node_base"** [ %295, %293 ], [ %264, %263 ]
  %268 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 1, i32 0, i32 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp ult i32 %25, %269
  br i1 %270, label %277, label %271

271:                                              ; preds = %265
  %272 = icmp ugt i32 %25, %269
  br i1 %272, label %285, label %273

273:                                              ; preds = %271
  %274 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 1, i32 0, i32 0, i32 1
  %275 = load i32, i32* %274, align 4
  %276 = icmp ugt i32 %275, 78
  br i1 %276, label %277, label %283

277:                                              ; preds = %273, %265
  %278 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %281, label %293

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 0, i32 0
  br label %299

283:                                              ; preds = %273
  %284 = icmp eq i32 %275, 78
  br i1 %284, label %291, label %285

285:                                              ; preds = %283, %271
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %289, label %293

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 0, i32 0
  br label %299

291:                                              ; preds = %283
  %292 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %266, i64 0, i32 0, i32 0
  br label %299

293:                                              ; preds = %285, %277
  %294 = phi %"class.std::__1::__tree_node_base"* [ %279, %277 ], [ %287, %285 ]
  %295 = phi %"class.std::__1::__tree_node_base"** [ %278, %277 ], [ %286, %285 ]
  %296 = bitcast %"class.std::__1::__tree_node_base"* %294 to %"class.std::__1::__tree_node"*
  br label %265

297:                                              ; preds = %260
  %298 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %29, i64 0, i32 0
  br label %299

299:                                              ; preds = %297, %291, %289, %281
  %300 = phi %"class.std::__1::__tree_end_node"* [ %29, %297 ], [ %282, %281 ], [ %290, %289 ], [ %292, %291 ]
  %301 = phi %"class.std::__1::__tree_node_base"** [ %298, %297 ], [ %278, %281 ], [ %286, %289 ], [ %267, %291 ]
  %302 = bitcast %"class.std::__1::__tree_node_base"** %301 to %"class.std::__1::__tree_node"**
  %303 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %302, align 8
  %304 = icmp eq %"class.std::__1::__tree_node"* %303, null
  br i1 %304, label %305, label %333

305:                                              ; preds = %299
  %306 = call i8* @_Znwm(i64 64) #12, !noalias !9
  %307 = getelementptr inbounds i8, i8* %306, i64 32
  %308 = bitcast i8* %307 to i64*
  %309 = zext i32 %25 to i64
  %310 = or i64 %309, 335007449088
  store i64 %310, i64* %308, align 8, !noalias !9
  %311 = getelementptr inbounds i8, i8* %306, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %311, i8 0, i64 24, i1 false) #11, !noalias !9
  %312 = bitcast i8* %306 to %"class.std::__1::__tree_node"*
  %313 = bitcast i8* %306 to %"class.std::__1::__tree_node_base"*
  %314 = getelementptr inbounds i8, i8* %306, i64 16
  %315 = bitcast i8* %314 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %306, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %300, %"class.std::__1::__tree_end_node"** %315, align 8
  %316 = bitcast %"class.std::__1::__tree_node_base"** %301 to i8**
  store i8* %306, i8** %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree.845", %"class.std::__1::__tree.845"* %28, i64 0, i32 0
  %318 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %317, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %318, i64 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %326, label %322

322:                                              ; preds = %305
  %323 = ptrtoint %"class.std::__1::__tree_node_base"* %320 to i64
  %324 = bitcast %"class.std::__1::__tree.845"* %28 to i64*
  store i64 %323, i64* %324, align 8
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %301, align 8
  br label %326

326:                                              ; preds = %322, %305
  %327 = phi %"class.std::__1::__tree_node_base"* [ %313, %305 ], [ %325, %322 ]
  %328 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %329 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %328, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %329, %"class.std::__1::__tree_node_base"* %327) #11
  %330 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %330, align 8
  br label %333

333:                                              ; preds = %299, %326
  %334 = phi %"class.std::__1::__tree_node"* [ %303, %299 ], [ %312, %326 ]
  %335 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %334, i64 0, i32 0, i32 0
  %336 = bitcast %"class.std::__1::function.857"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %336) #11
  %337 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %4, i64 0, i32 0, i32 1, i32 0
  %338 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE11__call_implINS0_20__default_alloc_funcIPSI_SI_EEEEbPKNS0_16__policy_storageES5_S7_SH_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)** %337, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIPFbPN8spvtools3opt9IRContextEPNS5_11InstructionERKNS_6vectorIPKNS5_8analysis8ConstantENS_9allocatorISE_EEEEESK_EEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %338, align 8
  %339 = bitcast %"class.std::__1::function.857"* %4 to i64*
  store i64 ptrtoint (i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZN8spvtools3opt12_GLOBAL__N_126ReplaceInternalInterpolateEPNS0_9IRContextEPNS0_11InstructionERKNSt3__16vectorIPKNS0_8analysis8ConstantENS6_9allocatorISB_EEEE to i64), i64* %339, align 8
  %340 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %335, i64 6
  %341 = bitcast %"class.std::__1::__tree_end_node"* %340 to %"class.std::__1::function.857"**
  %342 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %335, i64 7
  %344 = bitcast %"class.std::__1::__tree_end_node"* %343 to %"class.std::__1::function.857"**
  %345 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %344, align 8
  %346 = icmp ult %"class.std::__1::function.857"* %342, %345
  br i1 %346, label %347, label %364

347:                                              ; preds = %333
  %348 = bitcast %"class.std::__1::function.857"* %342 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %348, i8* nonnull align 8 %336, i64 16, i1 false) #11
  %349 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %342, i64 0, i32 0, i32 1
  %350 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %4, i64 0, i32 0, i32 1
  %351 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %350 to i64*
  %352 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %349 to i64*
  %353 = load i64, i64* %351, align 8
  store i64 %353, i64* %352, align 8
  %354 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %342, i64 0, i32 0, i32 2
  %355 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %338, align 8
  store %"struct.std::__1::__function::__policy"* %355, %"struct.std::__1::__function::__policy"** %354, align 8
  %356 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %355, i64 0, i32 1
  %357 = load void (i8*)*, void (i8*)** %356, align 8
  %358 = icmp eq void (i8*)* %357, null
  br i1 %358, label %360, label %359

359:                                              ; preds = %347
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %338, align 8
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ to i64), i64* %351, align 8
  br label %360

360:                                              ; preds = %359, %347
  %361 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %342, i64 1
  %362 = ptrtoint %"class.std::__1::function.857"* %361 to i64
  %363 = bitcast %"class.std::__1::__tree_end_node"* %340 to i64*
  store i64 %362, i64* %363, align 8
  br label %367

364:                                              ; preds = %333
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %335, i64 5
  %366 = bitcast %"class.std::__1::__tree_end_node"* %365 to %"class.std::__1::vector.855"*
  call void @_ZNSt3__16vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS0_IPKNS3_8analysis8ConstantENS_9allocatorISB_EEEEEEENSC_ISI_EEE21__push_back_slow_pathISI_EEvOT_(%"class.std::__1::vector.855"* %366, %"class.std::__1::function.857"* nonnull dereferenceable(32) %4) #11
  br label %367

367:                                              ; preds = %360, %364
  %368 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %338, align 8
  %369 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %368, i64 0, i32 1
  %370 = load void (i8*)*, void (i8*)** %369, align 8
  %371 = icmp eq void (i8*)* %370, null
  br i1 %371, label %375, label %372

372:                                              ; preds = %367
  %373 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %4, i64 0, i32 0, i32 0, i32 0
  %374 = load i8*, i8** %373, align 8
  call void %370(i8* %374) #11
  br label %375

375:                                              ; preds = %367, %372
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %336) #11
  br label %376

376:                                              ; preds = %22, %375
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113unordered_mapIjNS_6vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS4_11InstructionERKNS1_IPKNS4_8analysis8ConstantENS_9allocatorISC_EEEEEEENSD_ISJ_EEEENS_4hashIjEENS_8equal_toIjEENSD_INS_4pairIKjSL_EEEEED2Ev(%"class.std::__1::unordered_map.820"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unordered_map.820", %"class.std::__1::unordered_map.820"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.825"*, %"struct.std::__1::__hash_node_base.825"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.825"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1, %37
  %6 = phi %"struct.std::__1::__hash_node_base.825"* [ %8, %37 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.825"*, %"struct.std::__1::__hash_node_base.825"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base.825"* %9 to %"class.std::__1::function.857"**
  %11 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %10, align 8
  %12 = icmp eq %"class.std::__1::function.857"* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::function.857"* %11 to i8*
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.825", %"struct.std::__1::__hash_node_base.825"* %6, i64 4
  %16 = bitcast %"struct.std::__1::__hash_node_base.825"* %15 to %"class.std::__1::function.857"**
  %17 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %16, align 8
  %18 = icmp eq %"class.std::__1::function.857"* %17, %11
  br i1 %18, label %35, label %19

19:                                               ; preds = %13, %30
  %20 = phi %"class.std::__1::function.857"* [ %21, %30 ], [ %17, %13 ]
  %21 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %20, i64 -1, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void %25(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"class.std::__1::function.857"* %21, %11
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"struct.std::__1::__hash_node_base.825"* %9 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %13
  %36 = phi i8* [ %34, %32 ], [ %14, %13 ]
  store %"class.std::__1::function.857"* %11, %"class.std::__1::function.857"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %35, %5
  %38 = bitcast %"struct.std::__1::__hash_node_base.825"* %6 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  %39 = icmp eq %"struct.std::__1::__hash_node_base.825"* %8, null
  br i1 %39, label %40, label %5

40:                                               ; preds = %37, %1
  %41 = getelementptr inbounds %"class.std::__1::unordered_map.820", %"class.std::__1::unordered_map.820"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.825"**, %"struct.std::__1::__hash_node_base.825"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.825"** null, %"struct.std::__1::__hash_node_base.825"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.825"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.825"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %40, %44
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE(%"class.std::__1::__tree.845"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE(%"class.std::__1::__tree.845"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE7destroyEPNS_11__tree_nodeISP_PvEE(%"class.std::__1::__tree.845"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %11, align 8
  %13 = icmp eq %"class.std::__1::function.857"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::function.857"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %17 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %16, align 8
  %18 = icmp eq %"class.std::__1::function.857"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::function.857"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %20, i64 -1, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void %25(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"class.std::__1::function.857"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.855"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::function.857"* %12, %"class.std::__1::function.857"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN8spvtools3opt12_GLOBAL__N_126ReplaceInternalInterpolateEPNS0_9IRContextEPNS0_11InstructionERKNSt3__16vectorIPKNS0_8analysis8ConstantENS6_9allocatorISB_EEEE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"* nocapture readnone dereferenceable(24)) #0 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"struct.spvtools::opt::Operand", align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"struct.spvtools::opt::Operand", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::FeatureManager"* %15, null
  br i1 %16, label %17, label %28

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 1
  %19 = tail call i8* @_Znwm(i64 48) #12
  %20 = bitcast i8* %19 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %18, %"class.spvtools::AssemblyGrammar"** %20, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 40, i1 false) #11
  %22 = ptrtoint i8* %19 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.152"* %13 to i64*
  store i64 %22, i64* %23, align 8
  %24 = bitcast i8* %19 to %"class.spvtools::opt::FeatureManager"*
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %26 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %25, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %24, %"class.spvtools::opt::Module"* %26) #11
  %27 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %14, align 8
  br label %28

28:                                               ; preds = %3, %17
  %29 = phi %"class.spvtools::opt::FeatureManager"* [ %15, %3 ], [ %27, %17 ]
  %30 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %29, i64 0, i32 3
  %31 = load i32, i32* %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %36 = load i8, i8* %35, align 1, !range !2
  %37 = icmp eq i8 %36, 0
  %38 = select i1 %37, i32 1, i32 2
  %39 = xor i1 %37, true
  %40 = zext i1 %39 to i32
  %41 = select i1 %34, i32 %40, i32 %38
  %42 = add nuw nsw i32 %41, 1
  %43 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %42) #11
  %44 = load i8, i8* %32, align 4, !range !2
  %45 = icmp eq i8 %44, 0
  %46 = load i8, i8* %35, align 1, !range !2
  %47 = icmp eq i8 %46, 0
  %48 = select i1 %47, i32 1, i32 2
  %49 = xor i1 %47, true
  %50 = zext i1 %49 to i32
  %51 = select i1 %45, i32 %50, i32 %48
  %52 = add nuw nsw i32 %51, 2
  %53 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %52) #11
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, 1
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %82

58:                                               ; preds = %28
  %59 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %59, align 8
  %61 = tail call i8* @_Znwm(i64 104) #12
  %62 = bitcast i8* %61 to %"class.spvtools::opt::analysis::DefUseManager"*
  %63 = getelementptr inbounds i8, i8* %61, i64 32
  %64 = bitcast i8* %63 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %61, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %64, align 4
  %65 = getelementptr inbounds i8, i8* %61, i64 48
  %66 = getelementptr inbounds i8, i8* %61, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #11
  %67 = bitcast i8* %66 to i8**
  store i8* %65, i8** %67, align 8
  %68 = getelementptr inbounds i8, i8* %61, i64 64
  %69 = getelementptr inbounds i8, i8* %61, i64 96
  %70 = bitcast i8* %69 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %70, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %62, %"class.spvtools::opt::Module"* %60) #11
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %72 = ptrtoint i8* %61 to i64
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %71, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.62"* %71 to i64*
  store i64 %72, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %58
  %78 = bitcast %"class.std::__1::unique_ptr.62"* %71 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %78, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %74) #11
  br label %79

79:                                               ; preds = %77, %58
  %80 = load i32, i32* %54, align 8
  %81 = or i32 %80, 1
  store i32 %81, i32* %54, align 8
  br label %82

82:                                               ; preds = %28, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %83, align 8
  %85 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %84, i32 %53) #11
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 2
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 61
  br i1 %88, label %89, label %501

89:                                               ; preds = %82
  %90 = tail call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction14GetBaseAddressEv(%"class.spvtools::opt::Instruction"* %85) #11
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %90, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 59
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %90, i64 0, i32 3
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %90, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !2
  %100 = icmp eq i8 %99, 0
  %101 = select i1 %100, i32 1, i32 2
  %102 = xor i1 %100, true
  %103 = zext i1 %102 to i32
  %104 = select i1 %97, i32 %103, i32 %101
  %105 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %90, i32 %104) #11
  br label %106

106:                                              ; preds = %94, %89
  %107 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 3
  %108 = load i8, i8* %107, align 4, !range !2
  %109 = icmp eq i8 %108, 0
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 4
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, i32 1, i32 2
  %114 = xor i1 %112, true
  %115 = zext i1 %114 to i32
  %116 = select i1 %109, i32 %115, i32 %113
  %117 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %85, i32 %116) #11
  %118 = icmp eq i32 %43, 76
  br i1 %118, label %130, label %119

119:                                              ; preds = %106
  %120 = load i8, i8* %32, align 4, !range !2
  %121 = icmp eq i8 %120, 0
  %122 = load i8, i8* %35, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  %124 = select i1 %123, i32 1, i32 2
  %125 = xor i1 %123, true
  %126 = zext i1 %125 to i32
  %127 = select i1 %121, i32 %126, i32 %124
  %128 = add nuw nsw i32 %127, 3
  %129 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %128) #11
  br label %130

130:                                              ; preds = %106, %119
  %131 = phi i32 [ %129, %119 ], [ 0, %106 ]
  %132 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #11
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 24, i1 false) #11
  %136 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %136) #11
  %137 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %139 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %140 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %142 = bitcast i32** %140 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %141, %"struct.std::__1::aligned_storage<4, 4>::type"** %142, align 8
  %143 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %144 = bitcast %"class.std::__1::unique_ptr.0"* %143 to i64*
  store i64 0, i64* %144, align 8
  %145 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %141 to i32*
  store i64 1, i64* %139, align 8
  store i32 %31, i32* %145, align 8
  %146 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %146, align 8
  %147 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %148 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %147, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %152 = bitcast i32** %150 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %151, %"struct.std::__1::aligned_storage<4, 4>::type"** %152, align 8
  %153 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %154 = bitcast %"class.std::__1::unique_ptr.0"* %153 to i64*
  store i64 0, i64* %154, align 8
  %155 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %147, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %156 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %157 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %135, align 8
  %158 = icmp ult %"struct.spvtools::opt::Operand"* %156, %157
  br i1 %158, label %159, label %174

159:                                              ; preds = %130
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 0
  %161 = load i32, i32* %146, align 8
  store i32 %161, i32* %160, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 1
  %163 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %162, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 1, i32 1
  store i64 0, i64* %164, align 8
  %165 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 1, i32 2
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 1, i32 3, i64 0
  %167 = bitcast i32** %165 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %166, %"struct.std::__1::aligned_storage<4, 4>::type"** %167, align 8
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 0, i32 1, i32 4
  %169 = bitcast %"class.std::__1::unique_ptr.0"* %168 to i64*
  store i64 0, i64* %169, align 8
  %170 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %162, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %147) #11
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %156, i64 1
  %172 = ptrtoint %"struct.spvtools::opt::Operand"* %171 to i64
  %173 = bitcast %"struct.spvtools::opt::Operand"** %134 to i64*
  store i64 %172, i64* %173, align 8
  br label %175

174:                                              ; preds = %130
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  br label %175

175:                                              ; preds = %159, %174
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %176, align 8
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %177, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %177, align 8
  %179 = icmp eq %"class.std::__1::vector.3"* %178, null
  br i1 %179, label %191, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = icmp eq i32* %182, null
  br i1 %183, label %189, label %184

184:                                              ; preds = %180
  %185 = ptrtoint i32* %182 to i64
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %178, i64 0, i32 0, i32 1
  %187 = bitcast i32** %186 to i64*
  store i64 %185, i64* %187, align 8
  %188 = bitcast i32* %182 to i8*
  call void @_ZdlPv(i8* %188) #12
  br label %189

189:                                              ; preds = %184, %180
  %190 = bitcast %"class.std::__1::vector.3"* %178 to i8*
  call void @_ZdlPv(i8* %190) #12
  br label %191

191:                                              ; preds = %175, %189
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %138, align 8
  %192 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %193 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %192, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %192, align 8
  %194 = icmp eq %"class.std::__1::vector.3"* %193, null
  br i1 %194, label %206, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = icmp eq i32* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = ptrtoint i32* %197 to i64
  %201 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 1
  %202 = bitcast i32** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = bitcast i32* %197 to i8*
  call void @_ZdlPv(i8* %203) #12
  br label %204

204:                                              ; preds = %199, %195
  %205 = bitcast %"class.std::__1::vector.3"* %193 to i8*
  call void @_ZdlPv(i8* %205) #12
  br label %206

206:                                              ; preds = %191, %204
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %136) #11
  %207 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %207) #11
  %208 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %209, align 8
  %210 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %211 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %212 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %213 = bitcast i32** %211 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %212, %"struct.std::__1::aligned_storage<4, 4>::type"** %213, align 8
  %214 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %215 = bitcast %"class.std::__1::unique_ptr.0"* %214 to i64*
  store i64 0, i64* %215, align 8
  %216 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %212 to i32*
  store i64 1, i64* %210, align 8
  store i32 %43, i32* %216, align 8
  %217 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  store i32 7, i32* %217, align 8
  %218 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %219 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %218, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %219, align 8
  %220 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  store i64 0, i64* %220, align 8
  %221 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %222 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %223 = bitcast i32** %221 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %222, %"struct.std::__1::aligned_storage<4, 4>::type"** %223, align 8
  %224 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %225 = bitcast %"class.std::__1::unique_ptr.0"* %224 to i64*
  store i64 0, i64* %225, align 8
  %226 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %218, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %227 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %228 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %135, align 8
  %229 = icmp ult %"struct.spvtools::opt::Operand"* %227, %228
  br i1 %229, label %230, label %245

230:                                              ; preds = %206
  %231 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 0
  %232 = load i32, i32* %217, align 8
  store i32 %232, i32* %231, align 8
  %233 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 1
  %234 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %233, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %234, align 8
  %235 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 1, i32 1
  store i64 0, i64* %235, align 8
  %236 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 1, i32 2
  %237 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 1, i32 3, i64 0
  %238 = bitcast i32** %236 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %237, %"struct.std::__1::aligned_storage<4, 4>::type"** %238, align 8
  %239 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 0, i32 1, i32 4
  %240 = bitcast %"class.std::__1::unique_ptr.0"* %239 to i64*
  store i64 0, i64* %240, align 8
  %241 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %233, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %218) #11
  %242 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 1
  %243 = ptrtoint %"struct.spvtools::opt::Operand"* %242 to i64
  %244 = bitcast %"struct.spvtools::opt::Operand"** %134 to i64*
  store i64 %243, i64* %244, align 8
  br label %246

245:                                              ; preds = %206
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %246

246:                                              ; preds = %230, %245
  %247 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %247, align 8
  %248 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %249 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %248, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %248, align 8
  %250 = icmp eq %"class.std::__1::vector.3"* %249, null
  br i1 %250, label %262, label %251

251:                                              ; preds = %246
  %252 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %249, i64 0, i32 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = icmp eq i32* %253, null
  br i1 %254, label %260, label %255

255:                                              ; preds = %251
  %256 = ptrtoint i32* %253 to i64
  %257 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %249, i64 0, i32 0, i32 1
  %258 = bitcast i32** %257 to i64*
  store i64 %256, i64* %258, align 8
  %259 = bitcast i32* %253 to i8*
  call void @_ZdlPv(i8* %259) #12
  br label %260

260:                                              ; preds = %255, %251
  %261 = bitcast %"class.std::__1::vector.3"* %249 to i8*
  call void @_ZdlPv(i8* %261) #12
  br label %262

262:                                              ; preds = %246, %260
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %209, align 8
  %263 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %264 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %263, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %263, align 8
  %265 = icmp eq %"class.std::__1::vector.3"* %264, null
  br i1 %265, label %277, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %264, i64 0, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = icmp eq i32* %268, null
  br i1 %269, label %275, label %270

270:                                              ; preds = %266
  %271 = ptrtoint i32* %268 to i64
  %272 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %264, i64 0, i32 0, i32 1
  %273 = bitcast i32** %272 to i64*
  store i64 %271, i64* %273, align 8
  %274 = bitcast i32* %268 to i8*
  call void @_ZdlPv(i8* %274) #12
  br label %275

275:                                              ; preds = %270, %266
  %276 = bitcast %"class.std::__1::vector.3"* %264 to i8*
  call void @_ZdlPv(i8* %276) #12
  br label %277

277:                                              ; preds = %262, %275
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %208) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %207) #11
  %278 = bitcast %"struct.spvtools::opt::Operand"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %278) #11
  %279 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %279) #11
  %280 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %281 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %282 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %283 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %284 = bitcast i32** %282 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %283, %"struct.std::__1::aligned_storage<4, 4>::type"** %284, align 8
  %285 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %286 = bitcast %"class.std::__1::unique_ptr.0"* %285 to i64*
  store i64 0, i64* %286, align 8
  %287 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %283 to i32*
  store i64 1, i64* %281, align 8
  store i32 %117, i32* %287, align 8
  %288 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 0
  store i32 1, i32* %288, align 8
  %289 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1
  %290 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %289, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %290, align 8
  %291 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 1
  store i64 0, i64* %291, align 8
  %292 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 2
  %293 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 3, i64 0
  %294 = bitcast i32** %292 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %293, %"struct.std::__1::aligned_storage<4, 4>::type"** %294, align 8
  %295 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4
  %296 = bitcast %"class.std::__1::unique_ptr.0"* %295 to i64*
  store i64 0, i64* %296, align 8
  %297 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %289, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %298 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %299 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %135, align 8
  %300 = icmp ult %"struct.spvtools::opt::Operand"* %298, %299
  br i1 %300, label %301, label %316

301:                                              ; preds = %277
  %302 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 0
  %303 = load i32, i32* %288, align 8
  store i32 %303, i32* %302, align 8
  %304 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 1
  %305 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %304, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %305, align 8
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 1, i32 1
  store i64 0, i64* %306, align 8
  %307 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 1, i32 2
  %308 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 1, i32 3, i64 0
  %309 = bitcast i32** %307 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %308, %"struct.std::__1::aligned_storage<4, 4>::type"** %309, align 8
  %310 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 0, i32 1, i32 4
  %311 = bitcast %"class.std::__1::unique_ptr.0"* %310 to i64*
  store i64 0, i64* %311, align 8
  %312 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %304, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %289) #11
  %313 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %298, i64 1
  %314 = ptrtoint %"struct.spvtools::opt::Operand"* %313 to i64
  %315 = bitcast %"struct.spvtools::opt::Operand"** %134 to i64*
  store i64 %314, i64* %315, align 8
  br label %317

316:                                              ; preds = %277
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %9) #11
  br label %317

317:                                              ; preds = %301, %316
  %318 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %318, align 8
  %319 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %9, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %320 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %319, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %319, align 8
  %321 = icmp eq %"class.std::__1::vector.3"* %320, null
  br i1 %321, label %333, label %322

322:                                              ; preds = %317
  %323 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 0
  %324 = load i32*, i32** %323, align 8
  %325 = icmp eq i32* %324, null
  br i1 %325, label %331, label %326

326:                                              ; preds = %322
  %327 = ptrtoint i32* %324 to i64
  %328 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %320, i64 0, i32 0, i32 1
  %329 = bitcast i32** %328 to i64*
  store i64 %327, i64* %329, align 8
  %330 = bitcast i32* %324 to i8*
  call void @_ZdlPv(i8* %330) #12
  br label %331

331:                                              ; preds = %326, %322
  %332 = bitcast %"class.std::__1::vector.3"* %320 to i8*
  call void @_ZdlPv(i8* %332) #12
  br label %333

333:                                              ; preds = %317, %331
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %280, align 8
  %334 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %335 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %334, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %334, align 8
  %336 = icmp eq %"class.std::__1::vector.3"* %335, null
  br i1 %336, label %348, label %337

337:                                              ; preds = %333
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 0
  %339 = load i32*, i32** %338, align 8
  %340 = icmp eq i32* %339, null
  br i1 %340, label %346, label %341

341:                                              ; preds = %337
  %342 = ptrtoint i32* %339 to i64
  %343 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %335, i64 0, i32 0, i32 1
  %344 = bitcast i32** %343 to i64*
  store i64 %342, i64* %344, align 8
  %345 = bitcast i32* %339 to i8*
  call void @_ZdlPv(i8* %345) #12
  br label %346

346:                                              ; preds = %341, %337
  %347 = bitcast %"class.std::__1::vector.3"* %335 to i8*
  call void @_ZdlPv(i8* %347) #12
  br label %348

348:                                              ; preds = %333, %346
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %279) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %278) #11
  %349 = icmp eq i32 %131, 0
  br i1 %349, label %422, label %350

350:                                              ; preds = %348
  %351 = bitcast %"struct.spvtools::opt::Operand"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %351) #11
  %352 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %352) #11
  %353 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8
  %354 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %355 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %356 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %357 = bitcast i32** %355 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %356, %"struct.std::__1::aligned_storage<4, 4>::type"** %357, align 8
  %358 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %359 = bitcast %"class.std::__1::unique_ptr.0"* %358 to i64*
  store i64 0, i64* %359, align 8
  %360 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %356 to i32*
  store i64 1, i64* %354, align 8
  store i32 %131, i32* %360, align 8
  %361 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 0
  store i32 1, i32* %361, align 8
  %362 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1
  %363 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %362, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %363, align 8
  %364 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 1
  store i64 0, i64* %364, align 8
  %365 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 2
  %366 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 3, i64 0
  %367 = bitcast i32** %365 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %366, %"struct.std::__1::aligned_storage<4, 4>::type"** %367, align 8
  %368 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 4
  %369 = bitcast %"class.std::__1::unique_ptr.0"* %368 to i64*
  store i64 0, i64* %369, align 8
  %370 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %362, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  %371 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %372 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %135, align 8
  %373 = icmp ult %"struct.spvtools::opt::Operand"* %371, %372
  br i1 %373, label %374, label %389

374:                                              ; preds = %350
  %375 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 0
  %376 = load i32, i32* %361, align 8
  store i32 %376, i32* %375, align 8
  %377 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 1
  %378 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %377, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %378, align 8
  %379 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 1, i32 1
  store i64 0, i64* %379, align 8
  %380 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 1, i32 2
  %381 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 1, i32 3, i64 0
  %382 = bitcast i32** %380 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %381, %"struct.std::__1::aligned_storage<4, 4>::type"** %382, align 8
  %383 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 0, i32 1, i32 4
  %384 = bitcast %"class.std::__1::unique_ptr.0"* %383 to i64*
  store i64 0, i64* %384, align 8
  %385 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %377, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %362) #11
  %386 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %371, i64 1
  %387 = ptrtoint %"struct.spvtools::opt::Operand"* %386 to i64
  %388 = bitcast %"struct.spvtools::opt::Operand"** %134 to i64*
  store i64 %387, i64* %388, align 8
  br label %390

389:                                              ; preds = %350
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %11) #11
  br label %390

390:                                              ; preds = %374, %389
  %391 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %391, align 8
  %392 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %11, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %393 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %392, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %392, align 8
  %394 = icmp eq %"class.std::__1::vector.3"* %393, null
  br i1 %394, label %406, label %395

395:                                              ; preds = %390
  %396 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %393, i64 0, i32 0, i32 0
  %397 = load i32*, i32** %396, align 8
  %398 = icmp eq i32* %397, null
  br i1 %398, label %404, label %399

399:                                              ; preds = %395
  %400 = ptrtoint i32* %397 to i64
  %401 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %393, i64 0, i32 0, i32 1
  %402 = bitcast i32** %401 to i64*
  store i64 %400, i64* %402, align 8
  %403 = bitcast i32* %397 to i8*
  call void @_ZdlPv(i8* %403) #12
  br label %404

404:                                              ; preds = %399, %395
  %405 = bitcast %"class.std::__1::vector.3"* %393 to i8*
  call void @_ZdlPv(i8* %405) #12
  br label %406

406:                                              ; preds = %390, %404
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %353, align 8
  %407 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %408 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %407, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %407, align 8
  %409 = icmp eq %"class.std::__1::vector.3"* %408, null
  br i1 %409, label %421, label %410

410:                                              ; preds = %406
  %411 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %408, i64 0, i32 0, i32 0
  %412 = load i32*, i32** %411, align 8
  %413 = icmp eq i32* %412, null
  br i1 %413, label %419, label %414

414:                                              ; preds = %410
  %415 = ptrtoint i32* %412 to i64
  %416 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %408, i64 0, i32 0, i32 1
  %417 = bitcast i32** %416 to i64*
  store i64 %415, i64* %417, align 8
  %418 = bitcast i32* %412 to i8*
  call void @_ZdlPv(i8* %418) #12
  br label %419

419:                                              ; preds = %414, %410
  %420 = bitcast %"class.std::__1::vector.3"* %408 to i8*
  call void @_ZdlPv(i8* %420) #12
  br label %421

421:                                              ; preds = %406, %419
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %352) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %351) #11
  br label %422

422:                                              ; preds = %348, %421
  %423 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %424 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %423, i64 0, i32 0, i32 0
  %425 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %424, align 8
  %426 = load i8, i8* %32, align 4, !range !2
  %427 = icmp eq i8 %426, 0
  %428 = load i8, i8* %35, align 1, !range !2
  %429 = icmp eq i8 %428, 0
  %430 = select i1 %429, i64 1, i64 2
  %431 = xor i1 %429, true
  %432 = zext i1 %431 to i64
  %433 = select i1 %427, i64 %432, i64 %430
  %434 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %425, i64 %433
  %435 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %436 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %435, align 8
  %437 = icmp eq %"struct.spvtools::opt::Operand"* %434, %436
  br i1 %437, label %459, label %438

438:                                              ; preds = %422, %456
  %439 = phi %"struct.spvtools::opt::Operand"* [ %440, %456 ], [ %436, %422 ]
  %440 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %439, i64 -1
  %441 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %439, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %441, align 8
  %442 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %439, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %443 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %442, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %442, align 8
  %444 = icmp eq %"class.std::__1::vector.3"* %443, null
  br i1 %444, label %456, label %445

445:                                              ; preds = %438
  %446 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %443, i64 0, i32 0, i32 0
  %447 = load i32*, i32** %446, align 8
  %448 = icmp eq i32* %447, null
  br i1 %448, label %454, label %449

449:                                              ; preds = %445
  %450 = ptrtoint i32* %447 to i64
  %451 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %443, i64 0, i32 0, i32 1
  %452 = bitcast i32** %451 to i64*
  store i64 %450, i64* %452, align 8
  %453 = bitcast i32* %447 to i8*
  call void @_ZdlPv(i8* %453) #12
  br label %454

454:                                              ; preds = %449, %445
  %455 = bitcast %"class.std::__1::vector.3"* %443 to i8*
  call void @_ZdlPv(i8* %455) #12
  br label %456

456:                                              ; preds = %454, %438
  %457 = icmp eq %"struct.spvtools::opt::Operand"* %440, %434
  br i1 %457, label %458, label %438

458:                                              ; preds = %456
  store %"struct.spvtools::opt::Operand"* %434, %"struct.spvtools::opt::Operand"** %435, align 8
  br label %459

459:                                              ; preds = %422, %458
  %460 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %133, align 8
  %461 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %462 = call %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"* %423, %"struct.spvtools::opt::Operand"* %434, %"struct.spvtools::opt::Operand"* %460, %"struct.spvtools::opt::Operand"* %461) #11
  %463 = load i32, i32* %54, align 8
  %464 = and i32 %463, 1
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %468, label %466

466:                                              ; preds = %459
  %467 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %83, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %467, %"class.spvtools::opt::Instruction"* %1) #11
  br label %468

468:                                              ; preds = %459, %466
  %469 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %133, align 8
  %470 = icmp eq %"struct.spvtools::opt::Operand"* %469, null
  br i1 %470, label %500, label %471

471:                                              ; preds = %468
  %472 = bitcast %"struct.spvtools::opt::Operand"* %469 to i8*
  %473 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %474 = icmp eq %"struct.spvtools::opt::Operand"* %473, %469
  br i1 %474, label %498, label %475

475:                                              ; preds = %471, %493
  %476 = phi %"struct.spvtools::opt::Operand"* [ %477, %493 ], [ %473, %471 ]
  %477 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %476, i64 -1
  %478 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %476, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %478, align 8
  %479 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %476, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %480 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %479, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %479, align 8
  %481 = icmp eq %"class.std::__1::vector.3"* %480, null
  br i1 %481, label %493, label %482

482:                                              ; preds = %475
  %483 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %480, i64 0, i32 0, i32 0
  %484 = load i32*, i32** %483, align 8
  %485 = icmp eq i32* %484, null
  br i1 %485, label %491, label %486

486:                                              ; preds = %482
  %487 = ptrtoint i32* %484 to i64
  %488 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %480, i64 0, i32 0, i32 1
  %489 = bitcast i32** %488 to i64*
  store i64 %487, i64* %489, align 8
  %490 = bitcast i32* %484 to i8*
  call void @_ZdlPv(i8* %490) #12
  br label %491

491:                                              ; preds = %486, %482
  %492 = bitcast %"class.std::__1::vector.3"* %480 to i8*
  call void @_ZdlPv(i8* %492) #12
  br label %493

493:                                              ; preds = %491, %475
  %494 = icmp eq %"struct.spvtools::opt::Operand"* %477, %469
  br i1 %494, label %495, label %475

495:                                              ; preds = %493
  %496 = bitcast %"class.std::__1::vector"* %4 to i8**
  %497 = load i8*, i8** %496, align 8
  br label %498

498:                                              ; preds = %495, %471
  %499 = phi i8* [ %497, %495 ], [ %472, %471 ]
  store %"struct.spvtools::opt::Operand"* %469, %"struct.spvtools::opt::Operand"** %134, align 8
  call void @_ZdlPv(i8* %499) #12
  br label %500

500:                                              ; preds = %468, %498
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #11
  br label %501

501:                                              ; preds = %82, %500
  %502 = phi i1 [ true, %500 ], [ false, %82 ]
  ret i1 %502
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_8functionIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS0_IPKNS3_8analysis8ConstantENS_9allocatorISB_EEEEEEENSC_ISI_EEE21__push_back_slow_pathISI_EEvOT_(%"class.std::__1::vector.855"*, %"class.std::__1::function.857"* dereferenceable(32)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::function.857"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.855"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.855"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::function.857"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.std::__1::function.857"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::function.857"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::function.857"* %38 to i64
  %40 = bitcast %"class.std::__1::function.857"* %37 to i8*
  %41 = bitcast %"class.std::__1::function.857"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false) #11
  %42 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %36, i64 %9, i32 0, i32 1
  %43 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %1, i64 0, i32 0, i32 1
  %44 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %43 to i64*
  %45 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %42 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %36, i64 %9, i32 0, i32 2
  %48 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %1, i64 0, i32 0, i32 2
  %49 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %48, align 8
  store %"struct.std::__1::__function::__policy"* %49, %"struct.std::__1::__function::__policy"** %47, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %34
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %48, align 8
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ to i64), i64* %44, align 8
  br label %54

54:                                               ; preds = %34, %53
  %55 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %37, i64 1
  %56 = ptrtoint %"class.std::__1::function.857"* %55 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.855", %"class.std::__1::vector.855"* %0, i64 0, i32 0, i32 0
  %58 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %57, align 8
  %59 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %3, align 8
  %60 = icmp eq %"class.std::__1::function.857"* %59, %58
  br i1 %60, label %61, label %63

61:                                               ; preds = %54
  %62 = ptrtoint %"class.std::__1::function.857"* %58 to i64
  br label %87

63:                                               ; preds = %54, %82
  %64 = phi %"class.std::__1::function.857"* [ %66, %82 ], [ %37, %54 ]
  %65 = phi %"class.std::__1::function.857"* [ %67, %82 ], [ %59, %54 ]
  %66 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %64, i64 -1
  %67 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %65, i64 -1
  %68 = bitcast %"class.std::__1::function.857"* %66 to i8*
  %69 = bitcast %"class.std::__1::function.857"* %67 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false) #11
  %70 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %64, i64 -1, i32 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %65, i64 -1, i32 0, i32 1
  %72 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %71 to i64*
  %73 = bitcast %"struct.std::__1::__function::__policy_invoker.861"* %70 to i64*
  %74 = load i64, i64* %72, align 8
  store i64 %74, i64* %73, align 8
  %75 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %64, i64 -1, i32 0, i32 2
  %76 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %65, i64 -1, i32 0, i32 2
  %77 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %76, align 8
  store %"struct.std::__1::__function::__policy"* %77, %"struct.std::__1::__function::__policy"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %77, i64 0, i32 1
  %79 = load void (i8*)*, void (i8*)** %78, align 8
  %80 = icmp eq void (i8*)* %79, null
  br i1 %80, label %82, label %81

81:                                               ; preds = %63
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %76, align 8
  store i64 ptrtoint (i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_ to i64), i64* %72, align 8
  br label %82

82:                                               ; preds = %81, %63
  %83 = icmp eq %"class.std::__1::function.857"* %67, %58
  br i1 %83, label %84, label %63

84:                                               ; preds = %82
  %85 = load i64, i64* %6, align 8
  %86 = load %"class.std::__1::function.857"*, %"class.std::__1::function.857"** %3, align 8
  br label %87

87:                                               ; preds = %61, %84
  %88 = phi %"class.std::__1::function.857"* [ %58, %61 ], [ %86, %84 ]
  %89 = phi %"class.std::__1::function.857"* [ %37, %61 ], [ %66, %84 ]
  %90 = phi i64 [ %62, %61 ], [ %85, %84 ]
  %91 = ptrtoint %"class.std::__1::function.857"* %89 to i64
  store i64 %91, i64* %6, align 8
  store i64 %56, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %92 = inttoptr i64 %90 to %"class.std::__1::function.857"*
  %93 = icmp eq %"class.std::__1::function.857"* %88, %92
  br i1 %93, label %107, label %94

94:                                               ; preds = %87, %105
  %95 = phi %"class.std::__1::function.857"* [ %96, %105 ], [ %88, %87 ]
  %96 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %95, i64 -1
  %97 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %95, i64 -1, i32 0, i32 2
  %98 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %97, align 8
  %99 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %98, i64 0, i32 1
  %100 = load void (i8*)*, void (i8*)** %99, align 8
  %101 = icmp eq void (i8*)* %100, null
  br i1 %101, label %105, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.std::__1::function.857", %"class.std::__1::function.857"* %96, i64 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  tail call void %100(i8* %104) #11
  br label %105

105:                                              ; preds = %102, %94
  %106 = icmp eq %"class.std::__1::function.857"* %96, %92
  br i1 %106, label %107, label %94

107:                                              ; preds = %105, %87
  %108 = icmp eq i64 %90, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %90 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE12__call_emptyEPKNS0_16__policy_storageES5_S7_SH_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"* dereferenceable(24)) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #14
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #7 comdat {
  tail call void @abort() #13
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #3

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction14GetBaseAddressEv(%"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #3

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #12
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.943"**
  %34 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.943"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #12
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.943"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.943"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.943"* %1 to %"class.std::__1::__tree_node.943"**
  %6 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.943"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.943", %"class.std::__1::__tree_node.943"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.943"**
  %9 = load %"class.std::__1::__tree_node.943"*, %"class.std::__1::__tree_node.943"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.943"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.943"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #12
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #12
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #12
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #12
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #12
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #12
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #12
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #12
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #12
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.spvtools::opt::Operand"* @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE6insertINS_11__wrap_iterIPS3_EEEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS3_NS_15iterator_traitsISC_E9referenceEEE5valueESA_E4typeENS8_IPKS3_EESC_SC_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.spvtools::opt::Operand"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = ptrtoint %"struct.spvtools::opt::Operand"* %2 to i64
  %8 = ptrtoint %"struct.spvtools::opt::Operand"* %3 to i64
  %9 = sub i64 %8, %7
  %10 = sdiv exact i64 %9, 48
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %250

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %18 = ptrtoint %"struct.spvtools::opt::Operand"* %17 to i64
  %19 = sub i64 %15, %18
  %20 = sdiv exact i64 %19, 48
  %21 = icmp sgt i64 %10, %20
  %22 = bitcast %"struct.spvtools::opt::Operand"** %16 to i64*
  br i1 %21, label %116, label %23

23:                                               ; preds = %12
  %24 = sub i64 %18, %5
  %25 = sdiv exact i64 %24, 48
  %26 = icmp sgt i64 %10, %25
  br i1 %26, label %27, label %56

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %2, i64 %25
  %29 = icmp eq %"struct.spvtools::opt::Operand"* %28, %3
  br i1 %29, label %51, label %30

30:                                               ; preds = %27, %30
  %31 = phi %"struct.spvtools::opt::Operand"* [ %47, %30 ], [ %17, %27 ]
  %32 = phi %"struct.spvtools::opt::Operand"* [ %46, %30 ], [ %28, %27 ]
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 0
  %35 = load i32, i32* %34, align 8
  store i32 %35, i32* %33, align 8
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %36, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 1
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 2
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 3, i64 0
  %42 = bitcast i32** %40 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %41, %"struct.std::__1::aligned_storage<4, 4>::type"** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 0, i32 1, i32 4
  %44 = bitcast %"class.std::__1::unique_ptr.0"* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %36, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %37) #11
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %32, i64 1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %31, i64 1
  %48 = icmp eq %"struct.spvtools::opt::Operand"* %46, %3
  br i1 %48, label %49, label %30

49:                                               ; preds = %30
  %50 = ptrtoint %"struct.spvtools::opt::Operand"* %47 to i64
  br label %51

51:                                               ; preds = %49, %27
  %52 = phi i64 [ %18, %27 ], [ %50, %49 ]
  store i64 %52, i64* %22, align 8
  %53 = icmp sgt i64 %24, 0
  br i1 %53, label %54, label %250

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to %"struct.spvtools::opt::Operand"*
  br label %56

56:                                               ; preds = %54, %23
  %57 = phi i64 [ %52, %54 ], [ %18, %23 ]
  %58 = phi %"struct.spvtools::opt::Operand"* [ %55, %54 ], [ %17, %23 ]
  %59 = phi %"struct.spvtools::opt::Operand"* [ %28, %54 ], [ %3, %23 ]
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %10
  %61 = ptrtoint %"struct.spvtools::opt::Operand"* %60 to i64
  %62 = sub i64 %57, %61
  %63 = sdiv exact i64 %62, 48
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 %63
  %65 = icmp ult %"struct.spvtools::opt::Operand"* %64, %17
  br i1 %65, label %83, label %68

66:                                               ; preds = %83
  %67 = ptrtoint %"struct.spvtools::opt::Operand"* %100 to i64
  br label %68

68:                                               ; preds = %66, %56
  %69 = phi i64 [ %67, %66 ], [ %57, %56 ]
  store i64 %69, i64* %22, align 8
  %70 = icmp eq i64 %62, 0
  br i1 %70, label %102, label %71

71:                                               ; preds = %68, %71
  %72 = phi %"struct.spvtools::opt::Operand"* [ %75, %71 ], [ %58, %68 ]
  %73 = phi %"struct.spvtools::opt::Operand"* [ %74, %71 ], [ %64, %68 ]
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1
  %76 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %74, i64 0, i32 0
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %75, i64 0, i32 0
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %72, i64 -1, i32 1
  %80 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %73, i64 -1, i32 1
  %81 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %79, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %80) #11
  %82 = icmp eq %"struct.spvtools::opt::Operand"* %74, %1
  br i1 %82, label %102, label %71

83:                                               ; preds = %56, %83
  %84 = phi %"struct.spvtools::opt::Operand"* [ %100, %83 ], [ %58, %56 ]
  %85 = phi %"struct.spvtools::opt::Operand"* [ %99, %83 ], [ %64, %56 ]
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 0
  %88 = load i32, i32* %87, align 8
  store i32 %88, i32* %86, align 8
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 0, i32 1
  %91 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %89, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %91, align 8
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 1
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 2
  %94 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 3, i64 0
  %95 = bitcast i32** %93 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %94, %"struct.std::__1::aligned_storage<4, 4>::type"** %95, align 8
  %96 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 0, i32 1, i32 4
  %97 = bitcast %"class.std::__1::unique_ptr.0"* %96 to i64*
  store i64 0, i64* %97, align 8
  %98 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %89, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %90) #11
  %99 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %85, i64 1
  %100 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %84, i64 1
  %101 = icmp ult %"struct.spvtools::opt::Operand"* %99, %17
  br i1 %101, label %83, label %66

102:                                              ; preds = %71, %68
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %59, %2
  br i1 %103, label %250, label %104

104:                                              ; preds = %102, %104
  %105 = phi %"struct.spvtools::opt::Operand"* [ %114, %104 ], [ %1, %102 ]
  %106 = phi %"struct.spvtools::opt::Operand"* [ %113, %104 ], [ %2, %102 ]
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 0
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 0, i32 1
  %111 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 0, i32 1
  %112 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %110, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %111) #11
  %113 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %106, i64 1
  %114 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 1
  %115 = icmp eq %"struct.spvtools::opt::Operand"* %113, %59
  br i1 %115, label %250, label %104

116:                                              ; preds = %12
  %117 = bitcast %"class.std::__1::vector"* %0 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = sub i64 %18, %118
  %120 = sdiv exact i64 %119, 48
  %121 = add nsw i64 %120, %10
  %122 = icmp ugt i64 %121, 384307168202282325
  br i1 %122, label %123, label %125

123:                                              ; preds = %116
  %124 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %124) #13
  unreachable

125:                                              ; preds = %116
  %126 = sub i64 %15, %118
  %127 = sdiv exact i64 %126, 48
  %128 = icmp ult i64 %127, 192153584101141162
  br i1 %128, label %132, label %129

129:                                              ; preds = %125
  %130 = sub i64 %5, %118
  %131 = sdiv exact i64 %130, 48
  br label %139

132:                                              ; preds = %125
  %133 = shl nsw i64 %127, 1
  %134 = icmp ult i64 %133, %121
  %135 = select i1 %134, i64 %121, i64 %133
  %136 = sub i64 %5, %118
  %137 = sdiv exact i64 %136, 48
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %145, label %139

139:                                              ; preds = %132, %129
  %140 = phi i64 [ %131, %129 ], [ %137, %132 ]
  %141 = phi i64 [ 384307168202282325, %129 ], [ %135, %132 ]
  %142 = mul i64 %141, 48
  %143 = tail call i8* @_Znwm(i64 %142) #12
  %144 = bitcast i8* %143 to %"struct.spvtools::opt::Operand"*
  br label %145

145:                                              ; preds = %139, %132
  %146 = phi i64 [ %140, %139 ], [ %137, %132 ]
  %147 = phi i64 [ %141, %139 ], [ 0, %132 ]
  %148 = phi %"struct.spvtools::opt::Operand"* [ %144, %139 ], [ null, %132 ]
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %146
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %148, i64 %147
  %151 = ptrtoint %"struct.spvtools::opt::Operand"* %150 to i64
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 %10
  br label %153

153:                                              ; preds = %145, %153
  %154 = phi %"struct.spvtools::opt::Operand"* [ %169, %153 ], [ %149, %145 ]
  %155 = phi %"struct.spvtools::opt::Operand"* [ %170, %153 ], [ %2, %145 ]
  %156 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 0
  %158 = load i32, i32* %157, align 8
  store i32 %158, i32* %156, align 8
  %159 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1
  %160 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 0, i32 1
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %159, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %161, align 8
  %162 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 1
  store i64 0, i64* %162, align 8
  %163 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 2
  %164 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 3, i64 0
  %165 = bitcast i32** %163 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %164, %"struct.std::__1::aligned_storage<4, 4>::type"** %165, align 8
  %166 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 0, i32 1, i32 4
  %167 = bitcast %"class.std::__1::unique_ptr.0"* %166 to i64*
  store i64 0, i64* %167, align 8
  %168 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %159, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %160) #11
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %154, i64 1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %155, i64 1
  %171 = icmp eq %"struct.spvtools::opt::Operand"* %152, %169
  br i1 %171, label %172, label %153

172:                                              ; preds = %153
  %173 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  %174 = icmp eq %"struct.spvtools::opt::Operand"* %173, %1
  br i1 %174, label %194, label %175

175:                                              ; preds = %172, %175
  %176 = phi %"struct.spvtools::opt::Operand"* [ %192, %175 ], [ %149, %172 ]
  %177 = phi %"struct.spvtools::opt::Operand"* [ %178, %175 ], [ %1, %172 ]
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1
  %179 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 0
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %178, i64 0, i32 0
  %181 = load i32, i32* %180, align 8
  store i32 %181, i32* %179, align 8
  %182 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %177, i64 -1, i32 1
  %184 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %182, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %184, align 8
  %185 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 1
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 2
  %187 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 3, i64 0
  %188 = bitcast i32** %186 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %187, %"struct.std::__1::aligned_storage<4, 4>::type"** %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1, i32 1, i32 4
  %190 = bitcast %"class.std::__1::unique_ptr.0"* %189 to i64*
  store i64 0, i64* %190, align 8
  %191 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %182, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %183) #11
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %176, i64 -1
  %193 = icmp eq %"struct.spvtools::opt::Operand"* %178, %173
  br i1 %193, label %194, label %175

194:                                              ; preds = %175, %172
  %195 = phi %"struct.spvtools::opt::Operand"* [ %149, %172 ], [ %192, %175 ]
  %196 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  %197 = icmp eq %"struct.spvtools::opt::Operand"* %196, %1
  br i1 %197, label %219, label %198

198:                                              ; preds = %194, %198
  %199 = phi %"struct.spvtools::opt::Operand"* [ %215, %198 ], [ %152, %194 ]
  %200 = phi %"struct.spvtools::opt::Operand"* [ %214, %198 ], [ %1, %194 ]
  %201 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 0
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 0
  %203 = load i32, i32* %202, align 8
  store i32 %203, i32* %201, align 8
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 0, i32 1
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %204, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %206, align 8
  %207 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 1
  store i64 0, i64* %207, align 8
  %208 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 2
  %209 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 3, i64 0
  %210 = bitcast i32** %208 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %209, %"struct.std::__1::aligned_storage<4, 4>::type"** %210, align 8
  %211 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 0, i32 1, i32 4
  %212 = bitcast %"class.std::__1::unique_ptr.0"* %211 to i64*
  store i64 0, i64* %212, align 8
  %213 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %204, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %205) #11
  %214 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %200, i64 1
  %215 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %199, i64 1
  %216 = icmp eq %"struct.spvtools::opt::Operand"* %214, %196
  br i1 %216, label %217, label %198

217:                                              ; preds = %198
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %16, align 8
  br label %219

219:                                              ; preds = %194, %217
  %220 = phi %"struct.spvtools::opt::Operand"* [ %218, %217 ], [ %1, %194 ]
  %221 = phi %"struct.spvtools::opt::Operand"* [ %215, %217 ], [ %152, %194 ]
  %222 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  %223 = ptrtoint %"struct.spvtools::opt::Operand"* %221 to i64
  %224 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %6, align 8
  store i64 %222, i64* %117, align 8
  store i64 %223, i64* %22, align 8
  store i64 %151, i64* %14, align 8
  %225 = icmp eq %"struct.spvtools::opt::Operand"* %220, %224
  br i1 %225, label %246, label %226

226:                                              ; preds = %219, %244
  %227 = phi %"struct.spvtools::opt::Operand"* [ %228, %244 ], [ %220, %219 ]
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1
  %229 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %229, align 8
  %230 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %227, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %231 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %230, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %230, align 8
  %232 = icmp eq %"class.std::__1::vector.3"* %231, null
  br i1 %232, label %244, label %233

233:                                              ; preds = %226
  %234 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 0
  %235 = load i32*, i32** %234, align 8
  %236 = icmp eq i32* %235, null
  br i1 %236, label %242, label %237

237:                                              ; preds = %233
  %238 = ptrtoint i32* %235 to i64
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %231, i64 0, i32 0, i32 1
  %240 = bitcast i32** %239 to i64*
  store i64 %238, i64* %240, align 8
  %241 = bitcast i32* %235 to i8*
  tail call void @_ZdlPv(i8* %241) #12
  br label %242

242:                                              ; preds = %237, %233
  %243 = bitcast %"class.std::__1::vector.3"* %231 to i8*
  tail call void @_ZdlPv(i8* %243) #12
  br label %244

244:                                              ; preds = %242, %226
  %245 = icmp eq %"struct.spvtools::opt::Operand"* %228, %224
  br i1 %245, label %246, label %226

246:                                              ; preds = %244, %219
  %247 = icmp eq %"struct.spvtools::opt::Operand"* %224, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %246
  %249 = bitcast %"struct.spvtools::opt::Operand"* %224 to i8*
  tail call void @_ZdlPv(i8* %249) #12
  br label %250

250:                                              ; preds = %104, %248, %246, %51, %102, %4
  %251 = phi %"struct.spvtools::opt::Operand"* [ %1, %4 ], [ %1, %102 ], [ %1, %51 ], [ %149, %246 ], [ %149, %248 ], [ %1, %104 ]
  ret %"struct.spvtools::opt::Operand"* %251
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #12
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #13
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #12
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #12
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #12
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #12
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #13
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #13
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #12
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt9IRContextEPNS3_11InstructionERKNS_6vectorIPKNS3_8analysis8ConstantENS_9allocatorISC_EEEEEE11__call_implINS0_20__default_alloc_funcIPSI_SI_EEEEbPKNS0_16__policy_storageES5_S7_SH_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"* dereferenceable(24)) #0 comdat align 2 {
  %5 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)**
  %6 = load i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)*, i1 (%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.spvtools::opt::IRContext"* %1, %"class.spvtools::opt::Instruction"* %2, %"class.std::__1::vector.802"* dereferenceable(24) %3) #11
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #13
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt20ConstantFoldingRulesD2Ev(%"class.spvtools::opt::ConstantFoldingRules"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt20ConstantFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.795", %"class.std::__1::vector.795"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %4, align 8
  %6 = icmp eq %"class.std::__1::function.797"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::function.797"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %9, align 8
  %11 = icmp eq %"class.std::__1::function.797"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::function.797"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %13, i64 -1, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"class.std::__1::function.797"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.795"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::function.797"* %5, %"class.std::__1::function.797"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.954"**
  %34 = load %"class.std::__1::__tree_node.954"*, %"class.std::__1::__tree_node.954"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.785"* %31, %"class.std::__1::__tree_node.954"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::ConstantFoldingRules", %"class.spvtools::opt::ConstantFoldingRules"* %0, i64 0, i32 1
  tail call void @_ZNSt3__113unordered_mapIjN8spvtools3opt20ConstantFoldingRules5ValueENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS4_EEEEED2Ev(%"class.std::__1::unordered_map.760"* %35) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRulesD0Ev(%"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"*) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN8spvtools3opt20ConstantFoldingRulesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 4
  %4 = getelementptr inbounds %"class.std::__1::vector.795", %"class.std::__1::vector.795"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %4, align 8
  %6 = icmp eq %"class.std::__1::function.797"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::function.797"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 4, i32 0, i32 1
  %10 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %9, align 8
  %11 = icmp eq %"class.std::__1::function.797"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::function.797"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %13, i64 -1, i32 0, i32 2
  %16 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  %17 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %16, i64 0, i32 1
  %18 = load void (i8*)*, void (i8*)** %17, align 8
  %19 = icmp eq void (i8*)* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %14, i64 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void %18(i8* %22) #11
  br label %23

23:                                               ; preds = %20, %12
  %24 = icmp eq %"class.std::__1::function.797"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.795"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::function.797"* %5, %"class.std::__1::function.797"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #12
  br label %30

30:                                               ; preds = %1, %28
  %31 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.954"**
  %34 = load %"class.std::__1::__tree_node.954"*, %"class.std::__1::__tree_node.954"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.785"* %31, %"class.std::__1::__tree_node.954"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.765"*, %"struct.std::__1::__hash_node_base.765"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.765"* %36, null
  br i1 %37, label %73, label %38

38:                                               ; preds = %30, %70
  %39 = phi %"struct.std::__1::__hash_node_base.765"* [ %41, %70 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.765"*, %"struct.std::__1::__hash_node_base.765"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %39, i64 3
  %43 = bitcast %"struct.std::__1::__hash_node_base.765"* %42 to %"class.std::__1::function.797"**
  %44 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %43, align 8
  %45 = icmp eq %"class.std::__1::function.797"* %44, null
  br i1 %45, label %70, label %46

46:                                               ; preds = %38
  %47 = bitcast %"class.std::__1::function.797"* %44 to i8*
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %39, i64 4
  %49 = bitcast %"struct.std::__1::__hash_node_base.765"* %48 to %"class.std::__1::function.797"**
  %50 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %49, align 8
  %51 = icmp eq %"class.std::__1::function.797"* %50, %44
  br i1 %51, label %68, label %52

52:                                               ; preds = %46, %63
  %53 = phi %"class.std::__1::function.797"* [ %54, %63 ], [ %50, %46 ]
  %54 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %53, i64 -1
  %55 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %53, i64 -1, i32 0, i32 2
  %56 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %56, i64 0, i32 1
  %58 = load void (i8*)*, void (i8*)** %57, align 8
  %59 = icmp eq void (i8*)* %58, null
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %54, i64 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  tail call void %58(i8* %62) #11
  br label %63

63:                                               ; preds = %60, %52
  %64 = icmp eq %"class.std::__1::function.797"* %54, %44
  br i1 %64, label %65, label %52

65:                                               ; preds = %63
  %66 = bitcast %"struct.std::__1::__hash_node_base.765"* %42 to i8**
  %67 = load i8*, i8** %66, align 8
  br label %68

68:                                               ; preds = %65, %46
  %69 = phi i8* [ %67, %65 ], [ %47, %46 ]
  store %"class.std::__1::function.797"* %44, %"class.std::__1::function.797"** %49, align 8
  tail call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %68, %38
  %71 = bitcast %"struct.std::__1::__hash_node_base.765"* %39 to i8*
  tail call void @_ZdlPv(i8* %71) #12
  %72 = icmp eq %"struct.std::__1::__hash_node_base.765"* %41, null
  br i1 %72, label %73, label %38

73:                                               ; preds = %70, %30
  %74 = getelementptr inbounds %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules", %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.765"**, %"struct.std::__1::__hash_node_base.765"*** %74, align 8
  store %"struct.std::__1::__hash_node_base.765"** null, %"struct.std::__1::__hash_node_base.765"*** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.765"** %75, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %73
  %78 = bitcast %"struct.std::__1::__hash_node_base.765"** %75 to i8*
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %73, %77
  %80 = bitcast %"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* %0 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN8spvtools3opt12_GLOBAL__N_123InterpConstFoldingRules15AddFoldingRulesEv(%"class.spvtools::opt::(anonymous namespace)::InterpConstFoldingRules"* nocapture) unnamed_addr #10 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113unordered_mapIjN8spvtools3opt20ConstantFoldingRules5ValueENS_4hashIjEENS_8equal_toIjEENS_9allocatorINS_4pairIKjS4_EEEEED2Ev(%"class.std::__1::unordered_map.760"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unordered_map.760", %"class.std::__1::unordered_map.760"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.765"*, %"struct.std::__1::__hash_node_base.765"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.765"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1, %37
  %6 = phi %"struct.std::__1::__hash_node_base.765"* [ %8, %37 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.765"*, %"struct.std::__1::__hash_node_base.765"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %6, i64 3
  %10 = bitcast %"struct.std::__1::__hash_node_base.765"* %9 to %"class.std::__1::function.797"**
  %11 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %10, align 8
  %12 = icmp eq %"class.std::__1::function.797"* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %5
  %14 = bitcast %"class.std::__1::function.797"* %11 to i8*
  %15 = getelementptr inbounds %"struct.std::__1::__hash_node_base.765", %"struct.std::__1::__hash_node_base.765"* %6, i64 4
  %16 = bitcast %"struct.std::__1::__hash_node_base.765"* %15 to %"class.std::__1::function.797"**
  %17 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %16, align 8
  %18 = icmp eq %"class.std::__1::function.797"* %17, %11
  br i1 %18, label %35, label %19

19:                                               ; preds = %13, %30
  %20 = phi %"class.std::__1::function.797"* [ %21, %30 ], [ %17, %13 ]
  %21 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %20, i64 -1, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void %25(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"class.std::__1::function.797"* %21, %11
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"struct.std::__1::__hash_node_base.765"* %9 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %13
  %36 = phi i8* [ %34, %32 ], [ %14, %13 ]
  store %"class.std::__1::function.797"* %11, %"class.std::__1::function.797"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %35, %5
  %38 = bitcast %"struct.std::__1::__hash_node_base.765"* %6 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  %39 = icmp eq %"struct.std::__1::__hash_node_base.765"* %8, null
  br i1 %39, label %40, label %5

40:                                               ; preds = %37, %1
  %41 = getelementptr inbounds %"class.std::__1::unordered_map.760", %"class.std::__1::unordered_map.760"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"struct.std::__1::__hash_node_base.765"**, %"struct.std::__1::__hash_node_base.765"*** %41, align 8
  store %"struct.std::__1::__hash_node_base.765"** null, %"struct.std::__1::__hash_node_base.765"*** %41, align 8
  %43 = icmp eq %"struct.std::__1::__hash_node_base.765"** %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = bitcast %"struct.std::__1::__hash_node_base.765"** %42 to i8*
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %40, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.785"*, %"class.std::__1::__tree_node.954"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.954"* %1, null
  br i1 %3, label %39, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.954"* %1 to %"class.std::__1::__tree_node.954"**
  %6 = load %"class.std::__1::__tree_node.954"*, %"class.std::__1::__tree_node.954"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.785"* %0, %"class.std::__1::__tree_node.954"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.954", %"class.std::__1::__tree_node.954"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.954"**
  %9 = load %"class.std::__1::__tree_node.954"*, %"class.std::__1::__tree_node.954"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt20ConstantFoldingRules3KeyENS4_5ValueEEENS_19__map_value_compareIS5_S7_NS_4lessIS5_EELb1EEENS_9allocatorIS7_EEE7destroyEPNS_11__tree_nodeIS7_PvEE(%"class.std::__1::__tree.785"* %0, %"class.std::__1::__tree_node.954"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.954", %"class.std::__1::__tree_node.954"* %1, i64 0, i32 1, i32 0, i32 1
  %11 = getelementptr inbounds %"struct.spvtools::opt::ConstantFoldingRules::Value", %"struct.spvtools::opt::ConstantFoldingRules::Value"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %11, align 8
  %13 = icmp eq %"class.std::__1::function.797"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %4
  %15 = bitcast %"class.std::__1::function.797"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node.954", %"class.std::__1::__tree_node.954"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %17 = load %"class.std::__1::function.797"*, %"class.std::__1::function.797"** %16, align 8
  %18 = icmp eq %"class.std::__1::function.797"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::function.797"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %20, i64 -1, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 1
  %25 = load void (i8*)*, void (i8*)** %24, align 8
  %26 = icmp eq void (i8*)* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.std::__1::function.797", %"class.std::__1::function.797"* %21, i64 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  tail call void %25(i8* %29) #11
  br label %30

30:                                               ; preds = %27, %19
  %31 = icmp eq %"class.std::__1::function.797"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"struct.spvtools::opt::ConstantFoldingRules::Value"* %10 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::function.797"* %12, %"class.std::__1::function.797"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %4, %35
  %38 = bitcast %"class.std::__1::__tree_node.954"* %1 to i8*
  tail call void @_ZdlPv(i8* %38) #12
  br label %39

39:                                               ; preds = %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15InterpFixupPass7ProcessEvE3$_0S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %4 = bitcast [8 x i8]* %3 to %"class.spvtools::opt::InstructionFolder"**
  %5 = load %"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::InstructionFolder"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK8spvtools3opt17InstructionFolder15FoldInstructionEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"* %5, %"class.spvtools::opt::Instruction"* %1) #11
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 0
  %9 = load i8*, i8** %8, align 8
  store i8 1, i8* %9, align 1
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt17InstructionFolder15FoldInstructionEPNS0_11InstructionE(%"class.spvtools::opt::InstructionFolder"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { noreturn }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__16__treeINS_12__value_typeIN8spvtools3opt12FoldingRules3KeyENS_6vectorINS_8functionIFbPNS3_9IRContextEPNS3_11InstructionERKNS6_IPKNS3_8analysis8ConstantENS_9allocatorISF_EEEEEEENSG_ISM_EEEEEENS_19__map_value_compareIS5_SP_NS_4lessIS5_EELb1EEENSG_ISP_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENS10_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISP_PvEENS_22__tree_node_destructorINSG_IS17_EEEEEEDpOT_"}
