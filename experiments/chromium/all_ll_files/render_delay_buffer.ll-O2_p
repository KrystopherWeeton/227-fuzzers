; ModuleID = '../../third_party/webrtc/modules/audio_processing/aec3/render_delay_buffer.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/aec3/render_delay_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::RenderDelayBuffer" = type { i32 (...)** }
%"struct.webrtc::EchoCanceller3Config" = type { %"struct.webrtc::EchoCanceller3Config::Buffering", %"struct.webrtc::EchoCanceller3Config::Delay", %"struct.webrtc::EchoCanceller3Config::Filter", %"struct.webrtc::EchoCanceller3Config::Erle", %"struct.webrtc::EchoCanceller3Config::EpStrength", %"struct.webrtc::EchoCanceller3Config::EchoAudibility", %"struct.webrtc::EchoCanceller3Config::RenderLevels", %"struct.webrtc::EchoCanceller3Config::EchoRemovalControl", [6 x i8], %"struct.webrtc::EchoCanceller3Config::EchoModel", %"struct.webrtc::EchoCanceller3Config::ComfortNoise", [4 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor" }
%"struct.webrtc::EchoCanceller3Config::Buffering" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Delay" = type { i64, i64, i64, i64, i64, i64, float, float, float, %"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds", i8, i8, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing", %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" }
%"struct.webrtc::EchoCanceller3Config::Delay::DelaySelectionThresholds" = type { i32, i32 }
%"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing" = type { i8, i8, float, i8 }
%"struct.webrtc::EchoCanceller3Config::Filter" = type <{ %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration", %"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration", i64, float, i32, i8, i8, i8, i8, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Filter::RefinedConfiguration" = type { i64, float, float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::Filter::CoarseConfiguration" = type { i64, float, float }
%"struct.webrtc::EchoCanceller3Config::Erle" = type <{ float, float, float, i8, [3 x i8], i64, i8, i8, [6 x i8] }>
%"struct.webrtc::EchoCanceller3Config::EpStrength" = type <{ float, float, i8, i8, i8, i8 }>
%"struct.webrtc::EchoCanceller3Config::EchoAudibility" = type <{ float, float, float, float, float, float, i8, i8, [2 x i8] }>
%"struct.webrtc::EchoCanceller3Config::RenderLevels" = type { float, float, float, float }
%"struct.webrtc::EchoCanceller3Config::EchoRemovalControl" = type { i8, i8 }
%"struct.webrtc::EchoCanceller3Config::EchoModel" = type <{ i64, float, float, float, float, i64, i64, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::ComfortNoise" = type { float }
%"struct.webrtc::EchoCanceller3Config::Suppressor" = type <{ i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning", %"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection", i8, [3 x i8], %"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression", float, i8, [7 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::Tuning" = type { %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", %"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::MaskingThresholds" = type { float, float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::DominantNearendDetection" = type <{ float, float, float, i32, i32, i8, [3 x i8] }>
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection" = type { i64, %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", %"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion", float, float }
%"struct.webrtc::EchoCanceller3Config::Suppressor::SubbandNearendDetection::SubbandRegion" = type { i64, i64 }
%"struct.webrtc::EchoCanceller3Config::Suppressor::HighBandsSuppression" = type { float, float, float, float }
%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl" = type { %"class.webrtc::RenderDelayBuffer", %"class.std::__1::unique_ptr", i32, %"struct.webrtc::EchoCanceller3Config", i8, float, i32, i64, i32, %"struct.webrtc::BlockBuffer", %"struct.webrtc::SpectrumBuffer", %"struct.webrtc::FftBuffer", %"class.absl::optional", %"class.webrtc::RenderBuffer", %"struct.webrtc::DownsampledRenderBuffer", %"class.webrtc::AlignmentMixer", %"class.webrtc::Decimator", %"class.webrtc::Aec3Fft", %"class.std::__1::vector.5", i32, i8, i32, i32, i64, i64, i8, i64, %"class.absl::optional.61", i8, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::ApmDataDumper"* }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"struct.webrtc::BlockBuffer" = type { i32, %"class.std::__1::vector", i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"*, %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.std::__1::vector.5"* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.std::__1::vector.1"* }
%"struct.webrtc::SpectrumBuffer" = type { i32, %"class.std::__1::vector.25", i32, i32 }
%"class.std::__1::vector.25" = type { %"class.std::__1::__vector_base.26" }
%"class.std::__1::__vector_base.26" = type { %"class.std::__1::vector.27"*, %"class.std::__1::vector.27"*, %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::vector.27" = type { %"class.std::__1::__vector_base.28" }
%"class.std::__1::__vector_base.28" = type { %"struct.std::__1::array"*, %"struct.std::__1::array"*, %"class.std::__1::__compressed_pair.29" }
%"struct.std::__1::array" = type { [65 x float] }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"struct.std::__1::array"* }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.std::__1::vector.27"* }
%"struct.webrtc::FftBuffer" = type { i32, %"class.std::__1::vector.39", i32, i32 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"*, %"class.std::__1::__compressed_pair.43" }
%"struct.webrtc::FftData" = type { %"struct.std::__1::array", %"struct.std::__1::array" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.webrtc::FftData"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::vector.41"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.webrtc::RenderBuffer" = type <{ %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*, i8, [7 x i8] }>
%"struct.webrtc::DownsampledRenderBuffer" = type { i32, %"class.std::__1::vector.5", i32, i32 }
%"class.webrtc::AlignmentMixer" = type { i64, float, float, i8, i32, %"struct.std::__1::array.53", %"class.std::__1::vector.5", i32, i64 }
%"struct.std::__1::array.53" = type { [2 x i64] }
%"class.webrtc::Decimator" = type { i64, %"class.webrtc::CascadedBiQuadFilter", %"class.webrtc::CascadedBiQuadFilter" }
%"class.webrtc::CascadedBiQuadFilter" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuad"*, %"struct.webrtc::CascadedBiQuadFilter::BiQuad"*, %"class.std::__1::__compressed_pair.56" }
%"struct.webrtc::CascadedBiQuadFilter::BiQuad" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuadCoefficients", [2 x float], [2 x float] }
%"struct.webrtc::CascadedBiQuadFilter::BiQuadCoefficients" = type { [3 x float], [2 x float] }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.webrtc::CascadedBiQuadFilter::BiQuad"* }
%"class.webrtc::Aec3Fft" = type { %"class.webrtc::OouraFft" }
%"class.webrtc::OouraFft" = type { i8 }
%"class.std::__1::vector.5" = type { %"class.std::__1::__vector_base.6" }
%"class.std::__1::__vector_base.6" = type { float*, float*, %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { float* }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { i32 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.73" = type { [64 x float] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE = comdat any

@_ZTVN6webrtc12_GLOBAL__N_121RenderDelayBufferImplE = internal unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImplD2Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImplD0Ev to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5ResetEv to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*, %"class.std::__1::vector.1"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl6InsertERKNSt3__16vectorINS3_INS3_IfNS2_9allocatorIfEEEENS4_IS6_EEEENS4_IS8_EEEE to i8*), i8* bitcast (i32 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl24PrepareCaptureProcessingEv to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl30HandleSkippedCaptureProcessingEv to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*, i64)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl14AlignFromDelayEm to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl22AlignFromExternalDelayEv to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5DelayEv to i8*), i8* bitcast (i64 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl8MaxDelayEv to i8*), i8* bitcast (%"class.webrtc::RenderBuffer"* (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl15GetRenderBufferEv to i8*), i8* bitcast (%"struct.webrtc::DownsampledRenderBuffer"* (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl26GetDownsampledRenderBufferEv to i8*), i8* bitcast (void (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*, i32)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl19SetAudioBufferDelayEi to i8*), i8* bitcast (i1 (%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*)* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl22HasReceivedBufferDelayEv to i8*)] }, align 8
@_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl15instance_count_E = internal global i32 0, align 4
@.str = private unnamed_addr constant [51 x i8] c"WebRTC-Aec3RenderBufferCallCounterUpdateKillSwitch\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/webrtc/modules/audio_processing/aec3/render_delay_buffer.cc\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"Applying total delay of \00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c" blocks.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.6 = private unnamed_addr constant [52 x i8] c"New max number api jitter observed at render block \00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c":  \00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c" blocks\00", align 1
@.str.10 = private unnamed_addr constant [53 x i8] c"New max number api jitter observed at capture block \00", align 1
@.str.11 = private unnamed_addr constant [40 x i8] c"Excess render blocks detected at block \00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"Render buffer underrun detected at block \00", align 1
@.str.16 = private unnamed_addr constant [96 x i8] c"Mismatch between first estimated delay after reset and externally reported audio buffer delay: \00", align 1
@.str.17 = private unnamed_addr constant [61 x i8] c"Receiving a first externally reported audio buffer delay of \00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c" ms.\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.webrtc::RenderDelayBuffer"* @_ZN6webrtc17RenderDelayBuffer6CreateERKNS_20EchoCanceller3ConfigEim(%"struct.webrtc::EchoCanceller3Config"* dereferenceable(560), i32, i64) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 1072) #16
  %5 = bitcast i8* %4 to %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*
  %6 = bitcast i8* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_121RenderDelayBufferImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 8
  %8 = tail call i8* @_Znwm(i64 1) #16
  %9 = bitcast i8* %8 to %"class.webrtc::ApmDataDumper"*
  %10 = atomicrmw add i32* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl15instance_count_E, i32 1 seq_cst
  %11 = add i32 %10, 1
  tail call void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"* nonnull %9, i32 %11) #17
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast i8* %7 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %4, i64 16
  %15 = bitcast i8* %14 to i32*
  %16 = tail call i32 @_ZN6webrtc18DetectOptimizationEv() #17
  store i32 %16, i32* %15, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 24
  %18 = bitcast i8* %17 to %"struct.webrtc::EchoCanceller3Config"*
  tail call void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"* %18, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560) %0) #17
  %19 = getelementptr inbounds i8, i8* %4, i64 584
  %20 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0)) #17
  %21 = xor i1 %20, true
  %22 = zext i1 %21 to i8
  store i8 %22, i8* %19, align 8
  %23 = getelementptr inbounds i8, i8* %4, i64 588
  %24 = bitcast i8* %23 to float*
  %25 = getelementptr inbounds i8, i8* %4, i64 340
  %26 = bitcast i8* %25 to float*
  %27 = load float, float* %26, align 4
  %28 = fdiv float %27, 2.000000e+01
  %29 = tail call float @powf(float 1.000000e+01, float %28) #17
  store float %29, float* %24, align 4
  %30 = getelementptr inbounds i8, i8* %4, i64 592
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i8, i8* %4, i64 109
  %33 = load i8, i8* %32, align 1, !range !2
  %34 = icmp eq i8 %33, 0
  %35 = select i1 %34, i32 4, i32 2
  store i32 %35, i32* %31, align 8
  %36 = getelementptr inbounds i8, i8* %4, i64 600
  %37 = bitcast i8* %36 to i64*
  %38 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 1, i32 1
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %37, align 8
  %40 = getelementptr inbounds i8, i8* %4, i64 608
  %41 = bitcast i8* %40 to i32*
  %42 = icmp eq i64 %39, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %3
  %44 = udiv i64 64, %39
  %45 = trunc i64 %44 to i32
  br label %46

46:                                               ; preds = %3, %43
  %47 = phi i64 [ %44, %43 ], [ 0, %3 ]
  %48 = phi i32 [ %45, %43 ], [ 64, %3 ]
  store i32 %48, i32* %41, align 8
  %49 = getelementptr inbounds i8, i8* %4, i64 616
  %50 = bitcast i8* %49 to %"struct.webrtc::BlockBuffer"*
  %51 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 1, i32 2
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 2, i32 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = mul i64 %52, 24
  %56 = add i64 %55, 33
  %57 = mul i64 %56, %47
  %58 = udiv i64 %57, %47
  %59 = add i64 %54, 1
  %60 = add i64 %59, %58
  %61 = sdiv i32 %1, 16000
  %62 = sext i32 %61 to i64
  tail call void @_ZN6webrtc11BlockBufferC1Emmmm(%"struct.webrtc::BlockBuffer"* %50, i64 %60, i64 %62, i64 %2, i64 64) #17
  %63 = getelementptr inbounds i8, i8* %4, i64 656
  %64 = bitcast i8* %63 to %"struct.webrtc::SpectrumBuffer"*
  %65 = getelementptr inbounds i8, i8* %4, i64 624
  %66 = getelementptr inbounds i8, i8* %4, i64 632
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i8* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = sdiv exact i64 %71, 24
  tail call void @_ZN6webrtc14SpectrumBufferC1Emm(%"struct.webrtc::SpectrumBuffer"* %64, i64 %72, i64 %2) #17
  %73 = getelementptr inbounds i8, i8* %4, i64 696
  %74 = bitcast i8* %73 to %"struct.webrtc::FftBuffer"*
  %75 = load i64, i64* %67, align 8
  %76 = load i64, i64* %69, align 8
  %77 = sub i64 %75, %76
  %78 = sdiv exact i64 %77, 24
  tail call void @_ZN6webrtc9FftBufferC1Emm(%"struct.webrtc::FftBuffer"* %74, i64 %78, i64 %2) #17
  %79 = getelementptr inbounds i8, i8* %4, i64 40
  %80 = bitcast i8* %79 to i64*
  %81 = getelementptr inbounds i8, i8* %4, i64 736
  store i8 1, i8* %81, align 8
  %82 = getelementptr inbounds i8, i8* %4, i64 744
  %83 = bitcast i8* %82 to i64*
  %84 = load i64, i64* %80, align 8
  store i64 %84, i64* %83, align 8
  %85 = getelementptr inbounds i8, i8* %4, i64 752
  %86 = bitcast i8* %85 to %"class.webrtc::RenderBuffer"*
  tail call void @_ZN6webrtc12RenderBufferC1EPNS_11BlockBufferEPNS_14SpectrumBufferEPNS_9FftBufferE(%"class.webrtc::RenderBuffer"* %86, %"struct.webrtc::BlockBuffer"* %50, %"struct.webrtc::SpectrumBuffer"* %64, %"struct.webrtc::FftBuffer"* %74) #17
  %87 = getelementptr inbounds i8, i8* %4, i64 784
  %88 = bitcast i8* %87 to %"struct.webrtc::DownsampledRenderBuffer"*
  %89 = load i64, i64* %37, align 8
  %90 = load i64, i64* %51, align 8
  %91 = udiv i64 64, %89
  %92 = mul i64 %90, 24
  %93 = add i64 %92, 33
  %94 = mul i64 %93, %91
  tail call void @_ZN6webrtc23DownsampledRenderBufferC1Em(%"struct.webrtc::DownsampledRenderBuffer"* %88, i64 %94) #17
  %95 = getelementptr inbounds i8, i8* %4, i64 824
  %96 = bitcast i8* %95 to %"class.webrtc::AlignmentMixer"*
  %97 = getelementptr inbounds %"struct.webrtc::EchoCanceller3Config", %"struct.webrtc::EchoCanceller3Config"* %0, i64 0, i32 1, i32 12
  tail call void @_ZN6webrtc14AlignmentMixerC1EmRKNS_20EchoCanceller3Config5Delay15AlignmentMixingE(%"class.webrtc::AlignmentMixer"* %96, i64 %2, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing"* dereferenceable(12) %97) #17
  %98 = getelementptr inbounds i8, i8* %4, i64 904
  %99 = bitcast i8* %98 to %"class.webrtc::Decimator"*
  %100 = load i64, i64* %37, align 8
  tail call void @_ZN6webrtc9DecimatorC1Em(%"class.webrtc::Decimator"* %99, i64 %100) #17
  %101 = getelementptr inbounds i8, i8* %4, i64 960
  %102 = bitcast i8* %101 to %"class.webrtc::Aec3Fft"*
  tail call void @_ZN6webrtc7Aec3FftC1Ev(%"class.webrtc::Aec3Fft"* %102) #17
  %103 = getelementptr inbounds i8, i8* %4, i64 968
  %104 = load i32, i32* %41, align 8
  %105 = sext i32 %104 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 24, i1 false) #17
  %106 = icmp eq i32 %104, 0
  br i1 %106, label %122, label %107

107:                                              ; preds = %46
  %108 = icmp slt i32 %104, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %107
  %110 = bitcast i8* %103 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %110) #18
  unreachable

111:                                              ; preds = %107
  %112 = shl nsw i64 %105, 2
  %113 = tail call i8* @_Znwm(i64 %112) #16
  %114 = bitcast i8* %113 to float*
  %115 = getelementptr inbounds i8, i8* %4, i64 976
  %116 = bitcast i8* %103 to i8**
  store i8* %113, i8** %116, align 8
  %117 = getelementptr inbounds float, float* %114, i64 %105
  %118 = getelementptr inbounds i8, i8* %4, i64 984
  %119 = bitcast i8* %118 to float**
  store float* %117, float** %119, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %113, i8 0, i64 %112, i1 false) #17
  %120 = bitcast i8* %115 to i64*
  %121 = ptrtoint float* %117 to i64
  store i64 %121, i64* %120, align 8
  br label %122

122:                                              ; preds = %46, %111
  %123 = getelementptr inbounds i8, i8* %4, i64 992
  %124 = bitcast i8* %123 to i32*
  %125 = load i64, i64* %53, align 8
  %126 = trunc i64 %125 to i32
  store i32 %126, i32* %124, align 8
  %127 = getelementptr inbounds i8, i8* %4, i64 996
  store i8 0, i8* %127, align 4
  %128 = getelementptr inbounds i8, i8* %4, i64 1000
  %129 = bitcast i8* %128 to i32*
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds i8, i8* %4, i64 1004
  %131 = bitcast i8* %130 to i32*
  store i32 1, i32* %131, align 4
  %132 = getelementptr inbounds i8, i8* %4, i64 1008
  %133 = getelementptr inbounds i8, i8* %4, i64 1032
  %134 = bitcast i8* %133 to i64*
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds i8, i8* %4, i64 1040
  store i8 0, i8* %135, align 4
  %136 = getelementptr inbounds i8, i8* %4, i64 1048
  store i8 0, i8* %136, align 8
  %137 = getelementptr inbounds i8, i8* %4, i64 1056
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %132, i8 0, i64 17, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %137, i8 0, i64 16, i1 false) #17
  tail call void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5ResetEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nonnull %5) #17
  %138 = bitcast i8* %4 to %"class.webrtc::RenderDelayBuffer"*
  ret %"class.webrtc::RenderDelayBuffer"* %138
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #2

declare i32 @_ZN6webrtc18DetectOptimizationEv() local_unnamed_addr #2

declare void @_ZN6webrtc20EchoCanceller3ConfigC1ERKS0_(%"struct.webrtc::EchoCanceller3Config"*, %"struct.webrtc::EchoCanceller3Config"* dereferenceable(560)) unnamed_addr #2

declare void @_ZN6webrtc11BlockBufferC1Emmmm(%"struct.webrtc::BlockBuffer"*, i64, i64, i64, i64) unnamed_addr #2

declare void @_ZN6webrtc14SpectrumBufferC1Emm(%"struct.webrtc::SpectrumBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN6webrtc9FftBufferC1Emm(%"struct.webrtc::FftBuffer"*, i64, i64) unnamed_addr #2

declare void @_ZN6webrtc12RenderBufferC1EPNS_11BlockBufferEPNS_14SpectrumBufferEPNS_9FftBufferE(%"class.webrtc::RenderBuffer"*, %"struct.webrtc::BlockBuffer"*, %"struct.webrtc::SpectrumBuffer"*, %"struct.webrtc::FftBuffer"*) unnamed_addr #2

declare void @_ZN6webrtc23DownsampledRenderBufferC1Em(%"struct.webrtc::DownsampledRenderBuffer"*, i64) unnamed_addr #2

declare void @_ZN6webrtc14AlignmentMixerC1EmRKNS_20EchoCanceller3Config5Delay15AlignmentMixingE(%"class.webrtc::AlignmentMixer"*, i64, %"struct.webrtc::EchoCanceller3Config::Delay::AlignmentMixing"* dereferenceable(12)) unnamed_addr #2

declare void @_ZN6webrtc9DecimatorC1Em(%"class.webrtc::Decimator"*, i64) unnamed_addr #2

declare void @_ZN6webrtc7Aec3FftC1Ev(%"class.webrtc::Aec3Fft"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5ResetEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 20
  store i8 0, i8* %4, align 4
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 21
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 29
  %7 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 2
  %8 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i32, i32* %7, align 8
  %10 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %11, %9
  %15 = add i32 %14, %13
  %16 = srem i32 %15, %13
  %17 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 3
  store i32 %16, i32* %17, align 4
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %107, label %21

21:                                               ; preds = %1
  %22 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, 3
  %25 = add nsw i32 %23, -2
  %26 = select i1 %24, i32 1, i32 %25
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1
  %29 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.1"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = sdiv exact i64 %34, 24
  %36 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 19
  %37 = load i32, i32* %36, align 8
  %38 = xor i32 %37, -1
  %39 = sext i32 %38 to i64
  %40 = add nsw i64 %35, %39
  %41 = icmp ult i64 %40, %27
  %42 = select i1 %41, i64 %40, i64 %27
  %43 = trunc i64 %42 to i32
  %44 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %44) #17
  %45 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %46 = load i32, i32* %45, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 378, i32 %46, i32 0, i32 0) #17
  %47 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %48 = bitcast %"class.std::__1::basic_ostringstream"* %47 to %"class.std::__1::basic_ostream"*
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %48, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i64 24) #17
  %50 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %49, i32 %43) #17
  %51 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %44) #17
  %52 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = sub i32 %53, %43
  %57 = add i32 %56, %55
  %58 = srem i32 %57, %55
  %59 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %61, %43
  %65 = add i32 %64, %63
  %66 = srem i32 %65, %63
  %67 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = add i32 %69, %43
  %73 = add i32 %72, %71
  %74 = srem i32 %73, %71
  %75 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1
  %77 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1, i32 0, i32 1
  %78 = bitcast float** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.std::__1::vector.5"* %76 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 2
  %84 = load i32, i32* %17, align 4
  %85 = sext i32 %84 to i64
  %86 = add nsw i64 %83, %85
  %87 = load i32, i32* %7, align 8
  %88 = sext i32 %87 to i64
  %89 = sub nsw i64 %86, %88
  %90 = urem i64 %89, %83
  %91 = trunc i64 %90 to i32
  %92 = load i32, i32* %10, align 8
  %93 = sdiv i32 %91, %92
  %94 = icmp slt i32 %66, %61
  %95 = select i1 %94, i32 %63, i32 0
  %96 = sub i32 %66, %61
  %97 = add i32 %96, %95
  %98 = sub i32 %97, %93
  %99 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %21
  store i8 1, i8* %99, align 8
  br label %103

103:                                              ; preds = %21, %102
  %104 = sext i32 %98 to i64
  %105 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 28
  br label %144

107:                                              ; preds = %1
  %108 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 3, i32 1, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = trunc i64 %109 to i32
  %111 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %111) #17
  %112 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %113 = load i32, i32* %112, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 378, i32 %113, i32 0, i32 0) #17
  %114 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %115 = bitcast %"class.std::__1::basic_ostringstream"* %114 to %"class.std::__1::basic_ostream"*
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %115, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i64 24) #17
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %116, i32 %110) #17
  %118 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %117, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %111) #17
  %119 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %120 = load i32, i32* %119, align 8
  %121 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %122 = load i32, i32* %121, align 8
  %123 = sub i32 %120, %110
  %124 = add i32 %123, %122
  %125 = srem i32 %124, %122
  %126 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  store i32 %125, i32* %126, align 4
  %127 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %130 = load i32, i32* %129, align 8
  %131 = add i32 %128, %110
  %132 = add i32 %131, %130
  %133 = srem i32 %132, %130
  %134 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  store i32 %133, i32* %134, align 4
  %135 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 2
  %136 = load i32, i32* %135, align 8
  %137 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = add i32 %136, %110
  %140 = add i32 %139, %138
  %141 = srem i32 %140, %138
  %142 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  br label %144

144:                                              ; preds = %107, %103
  %145 = phi i8* [ %143, %107 ], [ %106, %103 ]
  store i8 0, i8* %145, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImplD2Ev(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc12_GLOBAL__N_121RenderDelayBufferImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 18, i32 0, i32 0
  %4 = load float*, float** %3, align 8
  %5 = icmp eq float* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint float* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 18, i32 0, i32 1
  %9 = bitcast float** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast float* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #16
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 17, i32 0
  tail call void @_ZN6webrtc8OouraFftD1Ev(%"class.webrtc::OouraFft"* %12) #17
  %13 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 16, i32 2
  tail call void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"* %13) #17
  %14 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 16, i32 1
  tail call void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"* %14) #17
  %15 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 15, i32 6, i32 0, i32 0
  %16 = load float*, float** %15, align 8
  %17 = icmp eq float* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %11
  %19 = ptrtoint float* %16 to i64
  %20 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 15, i32 6, i32 0, i32 1
  %21 = bitcast float** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast float* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #16
  br label %23

23:                                               ; preds = %11, %18
  %24 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14
  tail call void @_ZN6webrtc23DownsampledRenderBufferD1Ev(%"struct.webrtc::DownsampledRenderBuffer"* %24) #17
  %25 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 13
  tail call void @_ZN6webrtc12RenderBufferD1Ev(%"class.webrtc::RenderBuffer"* %25) #17
  %26 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11
  tail call void @_ZN6webrtc9FftBufferD1Ev(%"struct.webrtc::FftBuffer"* %26) #17
  %27 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10
  tail call void @_ZN6webrtc14SpectrumBufferD1Ev(%"struct.webrtc::SpectrumBuffer"* %27) #17
  %28 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9
  tail call void @_ZN6webrtc11BlockBufferD1Ev(%"struct.webrtc::BlockBuffer"* %28) #17
  %29 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %29, align 8
  store %"class.webrtc::ApmDataDumper"* null, %"class.webrtc::ApmDataDumper"** %29, align 8
  %31 = icmp eq %"class.webrtc::ApmDataDumper"* %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %23
  tail call void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"* nonnull %30) #17
  %33 = getelementptr inbounds %"class.webrtc::ApmDataDumper", %"class.webrtc::ApmDataDumper"* %30, i64 0, i32 0
  tail call void @_ZdlPv(i8* %33) #16
  br label %34

34:                                               ; preds = %23, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImplD0Ev(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImplD2Ev(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0) #17
  %2 = bitcast %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl6InsertERKNSt3__16vectorINS3_INS3_IfNS2_9allocatorIfEEEENS4_IS6_EEEENS4_IS8_EEEE(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*, %"class.std::__1::vector.1"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array.73", align 4
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 24
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 20
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  store i8 1, i8* %12, align 4
  %16 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 21
  store i32 1, i32* %16, align 8
  br label %37

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 21
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 22
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %37, label %24

24:                                               ; preds = %17
  store i32 %20, i32* %21, align 4
  %25 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 223, i32 %27, i32 0, i32 0) #17
  %28 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %28 to %"class.std::__1::basic_ostream"*
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.6, i64 0, i64 0), i64 51) #17
  %31 = load i64, i64* %5, align 8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %30, i64 %31) #17
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #17
  %34 = load i32, i32* %18, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %33, i32 %34) #17
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #17
  br label %37

37:                                               ; preds = %2, %17, %15, %24
  %38 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 8
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 2
  %43 = load i32, i32* %42, align 8
  %44 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = sub i32 %43, %41
  %47 = add i32 %46, %45
  %48 = srem i32 %47, %45
  store i32 %48, i32* %42, align 8
  %49 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = add nsw i32 %50, -1
  %52 = icmp sgt i32 %51, %39
  %53 = add nsw i32 %39, 1
  %54 = select i1 %52, i32 %53, i32 0
  store i32 %54, i32* %38, align 8
  %55 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %56 = load i32, i32* %55, align 8
  %57 = icmp sgt i32 %56, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %37
  %59 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %60 = load i32, i32* %59, align 8
  br label %61

61:                                               ; preds = %58, %37
  %62 = phi i32 [ %60, %58 ], [ %56, %37 ]
  %63 = add nsw i32 %62, -1
  store i32 %63, i32* %55, align 8
  %64 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 2
  %65 = load i32, i32* %64, align 8
  %66 = icmp sgt i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %69 = load i32, i32* %68, align 8
  br label %70

70:                                               ; preds = %61, %67
  %71 = phi i32 [ %69, %67 ], [ %65, %61 ]
  %72 = add nsw i32 %71, -1
  store i32 %72, i32* %64, align 8
  %73 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 3
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %48
  br i1 %75, label %80, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, %54
  br i1 %79, label %80, label %81

80:                                               ; preds = %70, %76
  br label %81

81:                                               ; preds = %76, %80
  %82 = phi i1 [ true, %80 ], [ false, %76 ]
  %83 = phi i32 [ 2, %80 ], [ 0, %76 ]
  %84 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 25
  %85 = load i8, i8* %84, align 8, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %176

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  %89 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %88, align 8
  %90 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %90, align 8
  %92 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %91, i64 0, i32 0, i32 0
  %93 = load float*, float** %92, align 8
  %94 = ptrtoint float* %93 to i64
  %95 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %91, i64 0, i32 0, i32 1
  %96 = bitcast float** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %97, %94
  %99 = ashr exact i64 %98, 2
  %100 = icmp eq i64 %98, 0
  %101 = select i1 %100, float* null, float* %93
  %102 = getelementptr inbounds float, float* %101, i64 %99
  br i1 %100, label %163, label %103

103:                                              ; preds = %87
  %104 = add nsw i64 %99, -1
  %105 = getelementptr float, float* %101, i64 %104
  %106 = ptrtoint float* %105 to i64
  %107 = sub i64 %106, %94
  %108 = lshr i64 %107, 2
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, 7
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %103, %112
  %113 = phi float [ %118, %112 ], [ 0.000000e+00, %103 ]
  %114 = phi float* [ %119, %112 ], [ %93, %103 ]
  %115 = phi i64 [ %120, %112 ], [ %110, %103 ]
  %116 = load float, float* %114, align 4
  %117 = fmul float %116, %116
  %118 = fadd float %113, %117
  %119 = getelementptr inbounds float, float* %114, i64 1
  %120 = add i64 %115, -1
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %112, !llvm.loop !3

122:                                              ; preds = %112, %103
  %123 = phi float [ undef, %103 ], [ %118, %112 ]
  %124 = phi float [ 0.000000e+00, %103 ], [ %118, %112 ]
  %125 = phi float* [ %93, %103 ], [ %119, %112 ]
  %126 = icmp ult i64 %107, 28
  br i1 %126, label %163, label %127

127:                                              ; preds = %122, %127
  %128 = phi float [ %160, %127 ], [ %124, %122 ]
  %129 = phi float* [ %161, %127 ], [ %125, %122 ]
  %130 = load float, float* %129, align 4
  %131 = fmul float %130, %130
  %132 = fadd float %128, %131
  %133 = getelementptr inbounds float, float* %129, i64 1
  %134 = load float, float* %133, align 4
  %135 = fmul float %134, %134
  %136 = fadd float %132, %135
  %137 = getelementptr inbounds float, float* %129, i64 2
  %138 = load float, float* %137, align 4
  %139 = fmul float %138, %138
  %140 = fadd float %136, %139
  %141 = getelementptr inbounds float, float* %129, i64 3
  %142 = load float, float* %141, align 4
  %143 = fmul float %142, %142
  %144 = fadd float %140, %143
  %145 = getelementptr inbounds float, float* %129, i64 4
  %146 = load float, float* %145, align 4
  %147 = fmul float %146, %146
  %148 = fadd float %144, %147
  %149 = getelementptr inbounds float, float* %129, i64 5
  %150 = load float, float* %149, align 4
  %151 = fmul float %150, %150
  %152 = fadd float %148, %151
  %153 = getelementptr inbounds float, float* %129, i64 6
  %154 = load float, float* %153, align 4
  %155 = fmul float %154, %154
  %156 = fadd float %152, %155
  %157 = getelementptr inbounds float, float* %129, i64 7
  %158 = load float, float* %157, align 4
  %159 = fmul float %158, %158
  %160 = fadd float %156, %159
  %161 = getelementptr inbounds float, float* %129, i64 8
  %162 = icmp eq float* %161, %102
  br i1 %162, label %163, label %127

163:                                              ; preds = %122, %127, %87
  %164 = phi float [ 0.000000e+00, %87 ], [ %123, %122 ], [ %160, %127 ]
  %165 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 3, i32 6, i32 0
  %166 = load float, float* %165, align 8
  %167 = fmul float %166, %166
  %168 = fmul float %167, 6.400000e+01
  %169 = fcmp ogt float %164, %168
  %170 = zext i1 %169 to i64
  %171 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 26
  %172 = load i64, i64* %171, align 8
  %173 = add i64 %172, %170
  store i64 %173, i64* %171, align 8
  %174 = icmp ugt i64 %173, 19
  %175 = zext i1 %174 to i8
  store i8 %175, i8* %84, align 8
  br label %176

176:                                              ; preds = %81, %163
  %177 = sext i32 %54 to i64
  %178 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1, i32 0, i32 0
  %179 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %180 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %179, i64 %177
  %181 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %179, i64 %177, i32 0, i32 1
  %182 = bitcast %"class.std::__1::vector.3"** %181 to i64*
  %183 = load i64, i64* %182, align 8
  %184 = bitcast %"class.std::__1::vector.1"* %180 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = sub i64 %183, %185
  %187 = sdiv exact i64 %186, 24
  %188 = inttoptr i64 %185 to %"class.std::__1::vector.3"*
  %189 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %188, i64 0, i32 0, i32 1
  %190 = bitcast %"class.std::__1::vector.5"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = inttoptr i64 %185 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = sdiv exact i64 %194, 24
  %196 = icmp eq i64 %186, 0
  br i1 %196, label %264, label %197

197:                                              ; preds = %176
  %198 = icmp eq i64 %194, 0
  %199 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %1, i64 0, i32 0, i32 0
  br label %200

200:                                              ; preds = %206, %197
  %201 = phi i64 [ 0, %197 ], [ %207, %206 ]
  br i1 %198, label %206, label %209

202:                                              ; preds = %206
  %203 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 5
  %204 = load float, float* %203, align 4
  %205 = fcmp une float %204, 1.000000e+00
  br i1 %205, label %237, label %264

206:                                              ; preds = %234, %200
  %207 = add nuw i64 %201, 1
  %208 = icmp ult i64 %207, %187
  br i1 %208, label %200, label %202

209:                                              ; preds = %200, %234
  %210 = phi i64 [ %235, %234 ], [ 0, %200 ]
  %211 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %199, align 8
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %211, i64 %201, i32 0, i32 0
  %213 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %213, i64 %210, i32 0, i32 0
  %215 = load float*, float** %214, align 8
  %216 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %213, i64 %210, i32 0, i32 1
  %217 = bitcast float** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = ptrtoint float* %215 to i64
  %220 = sub i64 %218, %219
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %234, label %222

222:                                              ; preds = %209
  %223 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %224 = load i32, i32* %38, align 8
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %223, i64 %225, i32 0, i32 0
  %227 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %227, i64 %201, i32 0, i32 0
  %229 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %229, i64 %210, i32 0, i32 0
  %231 = bitcast float** %230 to i8**
  %232 = load i8*, i8** %231, align 8
  %233 = bitcast float* %215 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %232, i8* align 4 %233, i64 %220, i1 false) #17
  br label %234

234:                                              ; preds = %222, %209
  %235 = add nuw i64 %210, 1
  %236 = icmp ult i64 %235, %195
  br i1 %236, label %209, label %206

237:                                              ; preds = %202, %241
  %238 = phi i64 [ %242, %241 ], [ 0, %202 ]
  br i1 %198, label %241, label %239

239:                                              ; preds = %237, %244
  %240 = phi i64 [ %245, %244 ], [ 0, %237 ]
  br label %247

241:                                              ; preds = %244, %237
  %242 = add nuw i64 %238, 1
  %243 = icmp ult i64 %242, %187
  br i1 %243, label %237, label %264

244:                                              ; preds = %247
  %245 = add nuw i64 %240, 1
  %246 = icmp ult i64 %245, %195
  br i1 %246, label %239, label %241

247:                                              ; preds = %247, %239
  %248 = phi i64 [ 0, %239 ], [ %262, %247 ]
  %249 = load float, float* %203, align 4
  %250 = load i32, i32* %38, align 8
  %251 = sext i32 %250 to i64
  %252 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %253 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %252, i64 %251, i32 0, i32 0
  %254 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %253, align 8
  %255 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %254, i64 %238, i32 0, i32 0
  %256 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %256, i64 %240, i32 0, i32 0
  %258 = load float*, float** %257, align 8
  %259 = getelementptr inbounds float, float* %258, i64 %248
  %260 = load float, float* %259, align 4
  %261 = fmul float %249, %260
  store float %261, float* %259, align 4
  %262 = add nuw nsw i64 %248, 1
  %263 = icmp eq i64 %262, 64
  br i1 %263, label %244, label %247

264:                                              ; preds = %241, %202, %176
  %265 = bitcast %"struct.std::__1::array.73"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %265) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %265, i8 -1, i64 256, i1 false) #17
  %266 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 15
  %267 = load i32, i32* %38, align 8
  %268 = sext i32 %267 to i64
  %269 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %270 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %269, i64 %268, i32 0, i32 0
  %271 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %270, align 8
  %272 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %272, align 8
  %274 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %271, i64 0, i32 0, i32 1
  %275 = bitcast %"class.std::__1::vector.5"** %274 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = ptrtoint %"class.std::__1::vector.5"* %273 to i64
  %278 = sub i64 %276, %277
  %279 = sdiv exact i64 %278, 24
  %280 = icmp eq i64 %278, 0
  %281 = select i1 %280, %"class.std::__1::vector.5"* null, %"class.std::__1::vector.5"* %273
  %282 = getelementptr inbounds %"struct.std::__1::array.73", %"struct.std::__1::array.73"* %3, i64 0, i32 0, i64 0
  call void @_ZN6webrtc14AlignmentMixer13ProduceOutputEN3rtc9ArrayViewIKNSt3__16vectorIfNS3_9allocatorIfEEEELln4711EEENS2_IfLl64EEE(%"class.webrtc::AlignmentMixer"* %266, %"class.std::__1::vector.5"* %281, i64 %279, float* nonnull %282) #17
  %283 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 16
  %284 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 18, i32 0, i32 0
  %285 = load float*, float** %284, align 8
  %286 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 18, i32 0, i32 1
  %287 = bitcast float** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = ptrtoint float* %285 to i64
  %290 = sub i64 %288, %289
  %291 = ashr exact i64 %290, 2
  %292 = icmp eq i64 %290, 0
  %293 = select i1 %292, float* null, float* %285
  call void @_ZN6webrtc9Decimator8DecimateEN3rtc9ArrayViewIKfLln4711EEENS2_IfLln4711EEE(%"class.webrtc::Decimator"* %283, float* nonnull %282, i64 64, float* %293, i64 %291) #17
  %294 = load float*, float** %286, align 8
  %295 = load float*, float** %284, align 8
  %296 = ptrtoint float* %295 to i64
  %297 = icmp eq float* %294, %295
  br i1 %297, label %465, label %298

298:                                              ; preds = %264
  %299 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1, i32 0, i32 0
  %300 = load float*, float** %299, align 8
  %301 = load i32, i32* %42, align 8
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds float, float* %300, i64 %302
  %304 = getelementptr float, float* %294, i64 -1
  %305 = ptrtoint float* %304 to i64
  %306 = sub i64 %305, %296
  %307 = lshr i64 %306, 2
  %308 = add nuw nsw i64 %307, 1
  %309 = icmp ult i64 %308, 8
  br i1 %309, label %396, label %310

310:                                              ; preds = %298
  %311 = getelementptr float, float* %294, i64 -1
  %312 = ptrtoint float* %311 to i64
  %313 = sub i64 %312, %296
  %314 = lshr i64 %313, 2
  %315 = add nsw i64 %314, %302
  %316 = add i64 %315, 1
  %317 = getelementptr float, float* %300, i64 %316
  %318 = xor i64 %314, -1
  %319 = getelementptr float, float* %294, i64 %318
  %320 = icmp ult float* %303, %294
  %321 = icmp ult float* %319, %317
  %322 = and i1 %320, %321
  br i1 %322, label %396, label %323

323:                                              ; preds = %310
  %324 = and i64 %308, 9223372036854775800
  %325 = getelementptr float, float* %303, i64 %324
  %326 = sub nsw i64 0, %324
  %327 = getelementptr float, float* %294, i64 %326
  %328 = add nsw i64 %324, -8
  %329 = lshr exact i64 %328, 3
  %330 = add nuw nsw i64 %329, 1
  %331 = and i64 %330, 1
  %332 = icmp eq i64 %328, 0
  br i1 %332, label %374, label %333

333:                                              ; preds = %323
  %334 = sub nuw nsw i64 %330, %331
  %335 = getelementptr float, float* %294, i64 -1
  %336 = getelementptr float, float* %294, i64 -1
  br label %337

337:                                              ; preds = %337, %333
  %338 = phi i64 [ 0, %333 ], [ %371, %337 ]
  %339 = phi i64 [ %334, %333 ], [ %372, %337 ]
  %340 = getelementptr float, float* %303, i64 %338
  %341 = sub i64 0, %338
  %342 = getelementptr inbounds float, float* %335, i64 %341
  %343 = getelementptr inbounds float, float* %342, i64 -3
  %344 = bitcast float* %343 to <4 x i32>*
  %345 = load <4 x i32>, <4 x i32>* %344, align 4, !alias.scope !5
  %346 = shufflevector <4 x i32> %345, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %347 = getelementptr inbounds float, float* %342, i64 -4
  %348 = getelementptr inbounds float, float* %347, i64 -3
  %349 = bitcast float* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4, !alias.scope !5
  %351 = shufflevector <4 x i32> %350, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %352 = bitcast float* %340 to <4 x i32>*
  store <4 x i32> %346, <4 x i32>* %352, align 4, !alias.scope !8, !noalias !5
  %353 = getelementptr float, float* %340, i64 4
  %354 = bitcast float* %353 to <4 x i32>*
  store <4 x i32> %351, <4 x i32>* %354, align 4, !alias.scope !8, !noalias !5
  %355 = or i64 %338, 8
  %356 = getelementptr float, float* %303, i64 %355
  %357 = sub nuw nsw i64 -8, %338
  %358 = getelementptr inbounds float, float* %336, i64 %357
  %359 = getelementptr inbounds float, float* %358, i64 -3
  %360 = bitcast float* %359 to <4 x i32>*
  %361 = load <4 x i32>, <4 x i32>* %360, align 4, !alias.scope !5
  %362 = shufflevector <4 x i32> %361, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %363 = getelementptr inbounds float, float* %358, i64 -4
  %364 = getelementptr inbounds float, float* %363, i64 -3
  %365 = bitcast float* %364 to <4 x i32>*
  %366 = load <4 x i32>, <4 x i32>* %365, align 4, !alias.scope !5
  %367 = shufflevector <4 x i32> %366, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %368 = bitcast float* %356 to <4 x i32>*
  store <4 x i32> %362, <4 x i32>* %368, align 4, !alias.scope !8, !noalias !5
  %369 = getelementptr float, float* %356, i64 4
  %370 = bitcast float* %369 to <4 x i32>*
  store <4 x i32> %367, <4 x i32>* %370, align 4, !alias.scope !8, !noalias !5
  %371 = add i64 %338, 16
  %372 = add i64 %339, -2
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %337, !llvm.loop !10

374:                                              ; preds = %337, %323
  %375 = phi i64 [ 0, %323 ], [ %371, %337 ]
  %376 = icmp eq i64 %331, 0
  br i1 %376, label %394, label %377

377:                                              ; preds = %374
  %378 = getelementptr float, float* %303, i64 %375
  %379 = sub i64 0, %375
  %380 = getelementptr float, float* %294, i64 -1
  %381 = getelementptr inbounds float, float* %380, i64 %379
  %382 = getelementptr inbounds float, float* %381, i64 -3
  %383 = bitcast float* %382 to <4 x i32>*
  %384 = load <4 x i32>, <4 x i32>* %383, align 4, !alias.scope !5
  %385 = shufflevector <4 x i32> %384, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %386 = getelementptr inbounds float, float* %381, i64 -4
  %387 = getelementptr inbounds float, float* %386, i64 -3
  %388 = bitcast float* %387 to <4 x i32>*
  %389 = load <4 x i32>, <4 x i32>* %388, align 4, !alias.scope !5
  %390 = shufflevector <4 x i32> %389, <4 x i32> undef, <4 x i32> <i32 3, i32 2, i32 1, i32 0>
  %391 = bitcast float* %378 to <4 x i32>*
  store <4 x i32> %385, <4 x i32>* %391, align 4, !alias.scope !8, !noalias !5
  %392 = getelementptr float, float* %378, i64 4
  %393 = bitcast float* %392 to <4 x i32>*
  store <4 x i32> %390, <4 x i32>* %393, align 4, !alias.scope !8, !noalias !5
  br label %394

394:                                              ; preds = %374, %377
  %395 = icmp eq i64 %308, %324
  br i1 %395, label %465, label %396

396:                                              ; preds = %394, %310, %298
  %397 = phi float* [ %303, %310 ], [ %303, %298 ], [ %325, %394 ]
  %398 = phi float* [ %294, %310 ], [ %294, %298 ], [ %327, %394 ]
  %399 = getelementptr float, float* %398, i64 -1
  %400 = ptrtoint float* %399 to i64
  %401 = sub i64 %400, %296
  %402 = lshr i64 %401, 2
  %403 = add nuw nsw i64 %402, 1
  %404 = and i64 %403, 7
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %417, label %406

406:                                              ; preds = %396, %406
  %407 = phi float* [ %414, %406 ], [ %397, %396 ]
  %408 = phi float* [ %410, %406 ], [ %398, %396 ]
  %409 = phi i64 [ %415, %406 ], [ %404, %396 ]
  %410 = getelementptr inbounds float, float* %408, i64 -1
  %411 = bitcast float* %410 to i32*
  %412 = load i32, i32* %411, align 4
  %413 = bitcast float* %407 to i32*
  store i32 %412, i32* %413, align 4
  %414 = getelementptr inbounds float, float* %407, i64 1
  %415 = add i64 %409, -1
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %406, !llvm.loop !12

417:                                              ; preds = %406, %396
  %418 = phi float* [ %397, %396 ], [ %414, %406 ]
  %419 = phi float* [ %398, %396 ], [ %410, %406 ]
  %420 = icmp ult i64 %401, 28
  br i1 %420, label %465, label %421

421:                                              ; preds = %417, %421
  %422 = phi float* [ %463, %421 ], [ %418, %417 ]
  %423 = phi float* [ %459, %421 ], [ %419, %417 ]
  %424 = getelementptr inbounds float, float* %423, i64 -1
  %425 = bitcast float* %424 to i32*
  %426 = load i32, i32* %425, align 4
  %427 = bitcast float* %422 to i32*
  store i32 %426, i32* %427, align 4
  %428 = getelementptr inbounds float, float* %422, i64 1
  %429 = getelementptr inbounds float, float* %423, i64 -2
  %430 = bitcast float* %429 to i32*
  %431 = load i32, i32* %430, align 4
  %432 = bitcast float* %428 to i32*
  store i32 %431, i32* %432, align 4
  %433 = getelementptr inbounds float, float* %422, i64 2
  %434 = getelementptr inbounds float, float* %423, i64 -3
  %435 = bitcast float* %434 to i32*
  %436 = load i32, i32* %435, align 4
  %437 = bitcast float* %433 to i32*
  store i32 %436, i32* %437, align 4
  %438 = getelementptr inbounds float, float* %422, i64 3
  %439 = getelementptr inbounds float, float* %423, i64 -4
  %440 = bitcast float* %439 to i32*
  %441 = load i32, i32* %440, align 4
  %442 = bitcast float* %438 to i32*
  store i32 %441, i32* %442, align 4
  %443 = getelementptr inbounds float, float* %422, i64 4
  %444 = getelementptr inbounds float, float* %423, i64 -5
  %445 = bitcast float* %444 to i32*
  %446 = load i32, i32* %445, align 4
  %447 = bitcast float* %443 to i32*
  store i32 %446, i32* %447, align 4
  %448 = getelementptr inbounds float, float* %422, i64 5
  %449 = getelementptr inbounds float, float* %423, i64 -6
  %450 = bitcast float* %449 to i32*
  %451 = load i32, i32* %450, align 4
  %452 = bitcast float* %448 to i32*
  store i32 %451, i32* %452, align 4
  %453 = getelementptr inbounds float, float* %422, i64 6
  %454 = getelementptr inbounds float, float* %423, i64 -7
  %455 = bitcast float* %454 to i32*
  %456 = load i32, i32* %455, align 4
  %457 = bitcast float* %453 to i32*
  store i32 %456, i32* %457, align 4
  %458 = getelementptr inbounds float, float* %422, i64 7
  %459 = getelementptr inbounds float, float* %423, i64 -8
  %460 = bitcast float* %459 to i32*
  %461 = load i32, i32* %460, align 4
  %462 = bitcast float* %458 to i32*
  store i32 %461, i32* %462, align 4
  %463 = getelementptr inbounds float, float* %422, i64 8
  %464 = icmp eq float* %459, %295
  br i1 %464, label %465, label %421, !llvm.loop !13

465:                                              ; preds = %417, %421, %394, %264
  %466 = load i32, i32* %38, align 8
  %467 = sext i32 %466 to i64
  %468 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %469 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %468, i64 %467, i32 0, i32 0
  %470 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %469, align 8
  %471 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %470, i64 0, i32 0, i32 1
  %472 = bitcast %"class.std::__1::vector.5"** %471 to i64*
  %473 = load i64, i64* %472, align 8
  %474 = bitcast %"class.std::__1::vector.3"* %470 to i64*
  %475 = load i64, i64* %474, align 8
  %476 = icmp eq i64 %473, %475
  br i1 %476, label %546, label %477

477:                                              ; preds = %465
  %478 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 17
  %479 = sext i32 %39 to i64
  %480 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 1, i32 0, i32 0
  %481 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 2
  %482 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 1, i32 0, i32 0
  br label %483

483:                                              ; preds = %483, %477
  %484 = phi %"class.std::__1::vector.3"* [ %470, %477 ], [ %537, %483 ]
  %485 = phi %"class.std::__1::vector.1"* [ %468, %477 ], [ %535, %483 ]
  %486 = phi i64 [ 0, %477 ], [ %532, %483 ]
  %487 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %484, i64 0, i32 0, i32 0
  %488 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %487, align 8
  %489 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %488, i64 %486, i32 0, i32 0
  %490 = load float*, float** %489, align 8
  %491 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %488, i64 %486, i32 0, i32 1
  %492 = bitcast float** %491 to i64*
  %493 = load i64, i64* %492, align 8
  %494 = ptrtoint float* %490 to i64
  %495 = sub i64 %493, %494
  %496 = ashr exact i64 %495, 2
  %497 = icmp eq i64 %495, 0
  %498 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %485, i64 %479, i32 0, i32 0
  %499 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %498, align 8
  %500 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %499, i64 0, i32 0, i32 0
  %501 = load %"class.std::__1::vector.5"*, %"class.std::__1::vector.5"** %500, align 8
  %502 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %501, i64 %486, i32 0, i32 0
  %503 = load float*, float** %502, align 8
  %504 = getelementptr inbounds %"class.std::__1::vector.5", %"class.std::__1::vector.5"* %501, i64 %486, i32 0, i32 1
  %505 = bitcast float** %504 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = ptrtoint float* %503 to i64
  %508 = sub i64 %506, %507
  %509 = ashr exact i64 %508, 2
  %510 = icmp eq i64 %508, 0
  %511 = load i32, i32* %64, align 8
  %512 = sext i32 %511 to i64
  %513 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %480, align 8
  %514 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %513, i64 %512, i32 0, i32 0
  %515 = load %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"** %514, align 8
  %516 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %515, i64 %486
  %517 = select i1 %497, float* null, float* %490
  %518 = select i1 %510, float* null, float* %503
  call void @_ZNK6webrtc7Aec3Fft9PaddedFftEN3rtc9ArrayViewIKfLln4711EEES4_NS0_6WindowEPNS_7FftDataE(%"class.webrtc::Aec3Fft"* %478, float* %517, i64 %496, float* %518, i64 %509, i32 0, %"struct.webrtc::FftData"* %516) #17
  %519 = load i32, i32* %64, align 8
  %520 = sext i32 %519 to i64
  %521 = load %"class.std::__1::vector.41"*, %"class.std::__1::vector.41"** %480, align 8
  %522 = getelementptr inbounds %"class.std::__1::vector.41", %"class.std::__1::vector.41"* %521, i64 %520, i32 0, i32 0
  %523 = load %"struct.webrtc::FftData"*, %"struct.webrtc::FftData"** %522, align 8
  %524 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %523, i64 %486
  %525 = load i32, i32* %481, align 8
  %526 = load i32, i32* %55, align 8
  %527 = sext i32 %526 to i64
  %528 = load %"class.std::__1::vector.27"*, %"class.std::__1::vector.27"** %482, align 8
  %529 = getelementptr inbounds %"class.std::__1::vector.27", %"class.std::__1::vector.27"* %528, i64 %527, i32 0, i32 0
  %530 = load %"struct.std::__1::array"*, %"struct.std::__1::array"** %529, align 8
  %531 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %530, i64 %486, i32 0, i64 0
  call void @_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* %524, i32 %525, float* %531, i64 65) #17
  %532 = add nuw i64 %486, 1
  %533 = load i32, i32* %38, align 8
  %534 = sext i32 %533 to i64
  %535 = load %"class.std::__1::vector.1"*, %"class.std::__1::vector.1"** %178, align 8
  %536 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %535, i64 %534, i32 0, i32 0
  %537 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %536, align 8
  %538 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %537, i64 0, i32 0, i32 1
  %539 = bitcast %"class.std::__1::vector.5"** %538 to i64*
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %"class.std::__1::vector.3"* %537 to i64*
  %542 = load i64, i64* %541, align 8
  %543 = sub i64 %540, %542
  %544 = sdiv exact i64 %543, 24
  %545 = icmp ult i64 %532, %544
  br i1 %545, label %483, label %546

546:                                              ; preds = %483, %465
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %265) #17
  br i1 %82, label %547, label %548

547:                                              ; preds = %546
  call void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5ResetEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0)
  br label %548

548:                                              ; preds = %547, %546
  ret i32 %83
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl24PrepareCaptureProcessingEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 23
  %6 = load i64, i64* %5, align 8
  %7 = add nsw i64 %6, 1
  store i64 %7, i64* %5, align 8
  %8 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %37, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 20
  %13 = load i8, i8* %12, align 4, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  store i8 0, i8* %12, align 4
  %16 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 21
  store i32 1, i32* %16, align 8
  br label %37

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 21
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 22
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %19, %22
  br i1 %23, label %37, label %24

24:                                               ; preds = %17
  store i32 %20, i32* %21, align 4
  %25 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %25) #17
  %26 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %27 = load i32, i32* %26, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 275, i32 %27, i32 0, i32 0) #17
  %28 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %29 = bitcast %"class.std::__1::basic_ostringstream"* %28 to %"class.std::__1::basic_ostream"*
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %29, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.10, i64 0, i64 0), i64 52) #17
  %31 = load i64, i64* %5, align 8
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %30, i64 %31) #17
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %32, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i64 0, i64 0), i64 3) #17
  %34 = load i32, i32* %18, align 8
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %33, i32 %34) #17
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %25) #17
  br label %37

37:                                               ; preds = %1, %17, %15, %24
  %38 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1
  %39 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1, i32 0, i32 1
  %40 = bitcast float** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.5"* %38 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = sub i64 %41, %43
  %45 = ashr exact i64 %44, 2
  %46 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 3
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = add nsw i64 %45, %48
  %50 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 2
  %51 = load i32, i32* %50, align 8
  %52 = sext i32 %51 to i64
  %53 = sub nsw i64 %49, %52
  %54 = urem i64 %53, %45
  %55 = trunc i64 %54 to i32
  %56 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 8
  %57 = load i32, i32* %56, align 8
  %58 = sdiv i32 %55, %57
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 29
  %61 = load i64, i64* %60, align 8
  %62 = icmp ugt i64 %61, %59
  %63 = select i1 %62, i64 %59, i64 %61
  store i64 %63, i64* %60, align 8
  %64 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 30
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  %67 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %66, %68
  br i1 %69, label %83, label %70

70:                                               ; preds = %37
  %71 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %63, %72
  store i64 %59, i64* %60, align 8
  store i64 0, i64* %64, align 8
  br i1 %73, label %74, label %83

74:                                               ; preds = %70
  %75 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %75) #17
  %76 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %77 = load i32, i32* %76, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 286, i32 %77, i32 0, i32 0) #17
  %78 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %79 = bitcast %"class.std::__1::basic_ostringstream"* %78 to %"class.std::__1::basic_ostream"*
  %80 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %79, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11, i64 0, i64 0), i64 39) #17
  %81 = load i64, i64* %5, align 8
  %82 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %80, i64 %81) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %75) #17
  call void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5ResetEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0)
  br label %169

83:                                               ; preds = %37, %70
  %84 = icmp eq i32 %47, %51
  br i1 %84, label %85, label %133

85:                                               ; preds = %83
  %86 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %86) #17
  %87 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %88 = load i32, i32* %87, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 293, i32 %88, i32 0, i32 0) #17
  %89 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %90 = bitcast %"class.std::__1::basic_ostringstream"* %89 to %"class.std::__1::basic_ostream"*
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i64 41) #17
  %92 = load i64, i64* %5, align 8
  %93 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"* %91, i64 %92) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %86) #17
  %94 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %124, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add nsw i32 %101, -1
  %103 = icmp sgt i32 %102, %95
  %104 = add nsw i32 %95, 1
  %105 = select i1 %103, i32 %104, i32 0
  store i32 %105, i32* %94, align 4
  %106 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %112, label %109

109:                                              ; preds = %99
  %110 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %111 = load i32, i32* %110, align 8
  br label %112

112:                                              ; preds = %109, %99
  %113 = phi i32 [ %111, %109 ], [ %107, %99 ]
  %114 = add nsw i32 %113, -1
  store i32 %114, i32* %106, align 4
  %115 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  %116 = load i32, i32* %115, align 4
  %117 = icmp sgt i32 %116, 0
  br i1 %117, label %121, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %120 = load i32, i32* %119, align 8
  br label %121

121:                                              ; preds = %118, %112
  %122 = phi i32 [ %120, %118 ], [ %116, %112 ]
  %123 = add nsw i32 %122, -1
  store i32 %123, i32* %115, align 4
  br label %124

124:                                              ; preds = %85, %121
  %125 = load i8, i8* %8, align 8, !range !2
  %126 = icmp eq i8 %125, 0
  br i1 %126, label %169, label %127

127:                                              ; preds = %124
  %128 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %169, label %131

131:                                              ; preds = %127
  %132 = add i64 %129, -1
  store i8 1, i8* %8, align 8
  store i64 %132, i64* %128, align 8
  br label %169

133:                                              ; preds = %83
  %134 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = sub i32 %47, %57
  %137 = add i32 %136, %135
  %138 = srem i32 %137, %135
  store i32 %138, i32* %46, align 4
  %139 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  %140 = load i32, i32* %139, align 4
  %141 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %142 = load i32, i32* %141, align 8
  %143 = icmp eq i32 %140, %142
  br i1 %143, label %169, label %144

144:                                              ; preds = %133
  %145 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %146 = load i32, i32* %145, align 8
  %147 = add nsw i32 %146, -1
  %148 = icmp sgt i32 %147, %140
  %149 = add nsw i32 %140, 1
  %150 = select i1 %148, i32 %149, i32 0
  store i32 %150, i32* %139, align 4
  %151 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  %152 = load i32, i32* %151, align 4
  %153 = icmp sgt i32 %152, 0
  br i1 %153, label %157, label %154

154:                                              ; preds = %144
  %155 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %156 = load i32, i32* %155, align 8
  br label %157

157:                                              ; preds = %154, %144
  %158 = phi i32 [ %156, %154 ], [ %152, %144 ]
  %159 = add nsw i32 %158, -1
  store i32 %159, i32* %151, align 4
  %160 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  %161 = load i32, i32* %160, align 4
  %162 = icmp sgt i32 %161, 0
  br i1 %162, label %166, label %163

163:                                              ; preds = %157
  %164 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %165 = load i32, i32* %164, align 8
  br label %166

166:                                              ; preds = %163, %157
  %167 = phi i32 [ %165, %163 ], [ %161, %157 ]
  %168 = add nsw i32 %167, -1
  store i32 %168, i32* %160, align 4
  br label %169

169:                                              ; preds = %124, %166, %133, %131, %127, %74
  %170 = phi i32 [ 2, %74 ], [ 1, %127 ], [ 1, %131 ], [ 1, %124 ], [ 0, %133 ], [ 0, %166 ]
  %171 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 25
  %172 = load i8, i8* %171, align 8, !range !2
  %173 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 13, i32 3
  store i8 %172, i8* %173, align 8
  %174 = icmp eq i8 %172, 0
  br i1 %174, label %177, label %175

175:                                              ; preds = %169
  %176 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 26
  store i64 0, i64* %176, align 8
  store i8 0, i8* %171, align 8
  br label %177

177:                                              ; preds = %169, %175
  ret i32 %170
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl30HandleSkippedCaptureProcessingEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 23
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, 1
  store i64 %8, i64* %6, align 8
  br label %9

9:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl14AlignFromDelayEm(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 28
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %30

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %30, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %30, label %16

16:                                               ; preds = %12
  %17 = trunc i64 %1 to i32
  %18 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = trunc i64 %19 to i32
  %21 = sub nsw i32 %17, %20
  %22 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 323, i32 %24, i32 0, i32 0) #17
  %25 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.16, i64 0, i64 0), i64 95) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %27, i32 %21) #17
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i64 0, i64 0), i64 7) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %22) #17
  store i8 1, i8* %5, align 8
  br label %30

30:                                               ; preds = %12, %8, %2, %16
  %31 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %32 = load i8, i8* %31, align 8, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %1
  br i1 %37, label %114, label %38

38:                                               ; preds = %34, %30
  store i8 1, i8* %31, align 8
  %39 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %39, align 8
  %40 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1
  %41 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1, i32 0, i32 1
  %42 = bitcast float** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::vector.5"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = ashr exact i64 %46, 2
  %48 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = add nsw i64 %47, %50
  %52 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 2
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = sub nsw i64 %51, %54
  %56 = urem i64 %55, %47
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 8
  %59 = load i32, i32* %58, align 8
  %60 = sdiv i32 %57, %59
  %61 = trunc i64 %1 to i32
  %62 = add nsw i32 %60, %61
  %63 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1
  %64 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1, i32 0, i32 1
  %65 = bitcast %"class.std::__1::vector.1"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::vector"* %63 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = sub i64 %66, %68
  %70 = sdiv exact i64 %69, 24
  %71 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 19
  %72 = load i32, i32* %71, align 8
  %73 = xor i32 %72, -1
  %74 = sext i32 %73 to i64
  %75 = add nsw i64 %70, %74
  %76 = icmp sgt i32 %62, 0
  %77 = select i1 %76, i32 %62, i32 0
  %78 = zext i32 %77 to i64
  %79 = icmp ugt i64 %75, %78
  %80 = select i1 %79, i64 %78, i64 %75
  %81 = trunc i64 %80 to i32
  %82 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %82) #17
  %83 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %84 = load i32, i32* %83, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 378, i32 %84, i32 0, i32 0) #17
  %85 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %86 = bitcast %"class.std::__1::basic_ostringstream"* %85 to %"class.std::__1::basic_ostream"*
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %86, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i64 24) #17
  %88 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %87, i32 %81) #17
  %89 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %88, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %82) #17
  %90 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %91 = load i32, i32* %90, align 8
  %92 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %93 = load i32, i32* %92, align 8
  %94 = sub i32 %91, %81
  %95 = add i32 %94, %93
  %96 = srem i32 %95, %93
  %97 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  store i32 %96, i32* %97, align 4
  %98 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %99 = load i32, i32* %98, align 8
  %100 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %99, %81
  %103 = add i32 %102, %101
  %104 = srem i32 %103, %101
  %105 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 2
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %109 = load i32, i32* %108, align 8
  %110 = add i32 %107, %81
  %111 = add i32 %110, %109
  %112 = srem i32 %111, %109
  %113 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  store i32 %112, i32* %113, align 4
  br label %114

114:                                              ; preds = %34, %38
  %115 = phi i1 [ true, %38 ], [ false, %34 ]
  ret i1 %115
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl22AlignFromExternalDelayEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 4, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %53, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 24
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 23
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = add i64 %11, %14
  %16 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 3, i32 1, i32 3
  %17 = load i64, i64* %16, align 8
  %18 = lshr i64 %17, 6
  %19 = sub i64 %15, %18
  %20 = trunc i64 %19 to i32
  %21 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %21) #17
  %22 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 378, i32 %23, i32 0, i32 0) #17
  %24 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %25 = bitcast %"class.std::__1::basic_ostringstream"* %24 to %"class.std::__1::basic_ostream"*
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i64 24) #17
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %26, i32 %20) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %27, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), i64 8) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %21) #17
  %29 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = sub i32 %30, %20
  %34 = add i32 %33, %32
  %35 = srem i32 %34, %32
  %36 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 3
  store i32 %35, i32* %36, align 4
  %37 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %38 = load i32, i32* %37, align 8
  %39 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = add i32 %38, %20
  %42 = add i32 %41, %40
  %43 = srem i32 %42, %40
  %44 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  store i32 %43, i32* %44, align 4
  %45 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %46, %20
  %50 = add i32 %49, %48
  %51 = srem i32 %50, %48
  %52 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 11, i32 3
  store i32 %51, i32* %52, align 4
  br label %53

53:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl5DelayEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 1, i32 0, i32 1
  %4 = bitcast float** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.5"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 2
  %10 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = add nsw i64 %9, %12
  %14 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = sub nsw i64 %13, %16
  %18 = urem i64 %17, %9
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 8
  %22 = sdiv i32 %19, %21
  %23 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp slt i32 %24, %26
  br i1 %27, label %28, label %32

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 10, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = add nsw i32 %30, %24
  br label %32

32:                                               ; preds = %1, %28
  %33 = phi i32 [ %31, %28 ], [ %24, %1 ]
  %34 = add i32 %26, %22
  %35 = sub i32 %33, %34
  %36 = sext i32 %35 to i64
  ret i64 %36
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i64 @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl8MaxDelayEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1
  %3 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 9, i32 1, i32 0, i32 1
  %4 = bitcast %"class.std::__1::vector.1"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 19
  %11 = load i32, i32* %10, align 8
  %12 = xor i32 %11, -1
  %13 = sext i32 %12 to i64
  %14 = add nsw i64 %9, %13
  ret i64 %14
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal %"class.webrtc::RenderBuffer"* @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl15GetRenderBufferEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 13
  ret %"class.webrtc::RenderBuffer"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal dereferenceable(40) %"struct.webrtc::DownsampledRenderBuffer"* @_ZNK6webrtc12_GLOBAL__N_121RenderDelayBufferImpl26GetDownsampledRenderBufferEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 14
  ret %"struct.webrtc::DownsampledRenderBuffer"* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl19SetAudioBufferDelayEi(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27
  %5 = getelementptr inbounds %"class.absl::optional.61", %"class.absl::optional.61"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %17

8:                                                ; preds = %2
  %9 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 346, i32 %11, i32 0, i32 0) #17
  %12 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %13 = bitcast %"class.std::__1::basic_ostringstream"* %12 to %"class.std::__1::basic_ostream"*
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %13, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.17, i64 0, i64 0), i64 60) #17
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %14, i32 %1) #17
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0), i64 4) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %9) #17
  br label %17

17:                                               ; preds = %2, %8
  %18 = sdiv i32 %1, 4
  %19 = bitcast %"class.absl::optional.61"* %4 to i64*
  %20 = zext i32 %18 to i64
  %21 = shl nuw i64 %20, 32
  %22 = or i64 %21, 1
  store i64 %22, i64* %19, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZN6webrtc12_GLOBAL__N_121RenderDelayBufferImpl22HasReceivedBufferDelayEv(%"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl", %"class.webrtc::(anonymous namespace)::RenderDelayBufferImpl"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #7 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i64 @strlen(i8* %0) #17
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #18
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #16
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7) #17
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #16
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #12

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #13

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6webrtc23DownsampledRenderBufferD1Ev(%"struct.webrtc::DownsampledRenderBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc12RenderBufferD1Ev(%"class.webrtc::RenderBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc9FftBufferD1Ev(%"struct.webrtc::FftBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc14SpectrumBufferD1Ev(%"struct.webrtc::SpectrumBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc11BlockBufferD1Ev(%"struct.webrtc::BlockBuffer"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc8OouraFftD1Ev(%"class.webrtc::OouraFft"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc20CascadedBiQuadFilterD1Ev(%"class.webrtc::CascadedBiQuadFilter"*) unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"*) unnamed_addr #13

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEl(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare void @_ZN6webrtc14AlignmentMixer13ProduceOutputEN3rtc9ArrayViewIKNSt3__16vectorIfNS3_9allocatorIfEEEELln4711EEENS2_IfLl64EEE(%"class.webrtc::AlignmentMixer"*, %"class.std::__1::vector.5"*, i64, float*) local_unnamed_addr #2

declare void @_ZN6webrtc9Decimator8DecimateEN3rtc9ArrayViewIKfLln4711EEENS2_IfLln4711EEE(%"class.webrtc::Decimator"*, float*, i64, float*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK6webrtc7FftData8SpectrumENS_16Aec3OptimizationEN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"*, i32, float*, i64) local_unnamed_addr #14 comdat align 2 {
  switch i32 %1, label %191 [
    i32 1, label %5
    i32 2, label %188
  ]

5:                                                ; preds = %4
  %6 = bitcast %"struct.webrtc::FftData"* %0 to <4 x float>*
  %7 = load <4 x float>, <4 x float>* %6, align 1
  %8 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %9 = bitcast float* %8 to <4 x float>*
  %10 = load <4 x float>, <4 x float>* %9, align 1
  %11 = fmul <4 x float> %10, %10
  %12 = fmul <4 x float> %7, %7
  %13 = fadd <4 x float> %12, %11
  %14 = bitcast float* %2 to <4 x float>*
  store <4 x float> %13, <4 x float>* %14, align 1
  %15 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 4
  %16 = bitcast float* %15 to <4 x float>*
  %17 = load <4 x float>, <4 x float>* %16, align 1
  %18 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 4
  %19 = bitcast float* %18 to <4 x float>*
  %20 = load <4 x float>, <4 x float>* %19, align 1
  %21 = fmul <4 x float> %20, %20
  %22 = fmul <4 x float> %17, %17
  %23 = fadd <4 x float> %22, %21
  %24 = getelementptr inbounds float, float* %2, i64 4
  %25 = bitcast float* %24 to <4 x float>*
  store <4 x float> %23, <4 x float>* %25, align 1
  %26 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 8
  %27 = bitcast float* %26 to <4 x float>*
  %28 = load <4 x float>, <4 x float>* %27, align 1
  %29 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 8
  %30 = bitcast float* %29 to <4 x float>*
  %31 = load <4 x float>, <4 x float>* %30, align 1
  %32 = fmul <4 x float> %31, %31
  %33 = fmul <4 x float> %28, %28
  %34 = fadd <4 x float> %33, %32
  %35 = getelementptr inbounds float, float* %2, i64 8
  %36 = bitcast float* %35 to <4 x float>*
  store <4 x float> %34, <4 x float>* %36, align 1
  %37 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 12
  %38 = bitcast float* %37 to <4 x float>*
  %39 = load <4 x float>, <4 x float>* %38, align 1
  %40 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 12
  %41 = bitcast float* %40 to <4 x float>*
  %42 = load <4 x float>, <4 x float>* %41, align 1
  %43 = fmul <4 x float> %42, %42
  %44 = fmul <4 x float> %39, %39
  %45 = fadd <4 x float> %44, %43
  %46 = getelementptr inbounds float, float* %2, i64 12
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %45, <4 x float>* %47, align 1
  %48 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 16
  %49 = bitcast float* %48 to <4 x float>*
  %50 = load <4 x float>, <4 x float>* %49, align 1
  %51 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 16
  %52 = bitcast float* %51 to <4 x float>*
  %53 = load <4 x float>, <4 x float>* %52, align 1
  %54 = fmul <4 x float> %53, %53
  %55 = fmul <4 x float> %50, %50
  %56 = fadd <4 x float> %55, %54
  %57 = getelementptr inbounds float, float* %2, i64 16
  %58 = bitcast float* %57 to <4 x float>*
  store <4 x float> %56, <4 x float>* %58, align 1
  %59 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 20
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 1
  %62 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 20
  %63 = bitcast float* %62 to <4 x float>*
  %64 = load <4 x float>, <4 x float>* %63, align 1
  %65 = fmul <4 x float> %64, %64
  %66 = fmul <4 x float> %61, %61
  %67 = fadd <4 x float> %66, %65
  %68 = getelementptr inbounds float, float* %2, i64 20
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %67, <4 x float>* %69, align 1
  %70 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 24
  %71 = bitcast float* %70 to <4 x float>*
  %72 = load <4 x float>, <4 x float>* %71, align 1
  %73 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 24
  %74 = bitcast float* %73 to <4 x float>*
  %75 = load <4 x float>, <4 x float>* %74, align 1
  %76 = fmul <4 x float> %75, %75
  %77 = fmul <4 x float> %72, %72
  %78 = fadd <4 x float> %77, %76
  %79 = getelementptr inbounds float, float* %2, i64 24
  %80 = bitcast float* %79 to <4 x float>*
  store <4 x float> %78, <4 x float>* %80, align 1
  %81 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 28
  %82 = bitcast float* %81 to <4 x float>*
  %83 = load <4 x float>, <4 x float>* %82, align 1
  %84 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 28
  %85 = bitcast float* %84 to <4 x float>*
  %86 = load <4 x float>, <4 x float>* %85, align 1
  %87 = fmul <4 x float> %86, %86
  %88 = fmul <4 x float> %83, %83
  %89 = fadd <4 x float> %88, %87
  %90 = getelementptr inbounds float, float* %2, i64 28
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %89, <4 x float>* %91, align 1
  %92 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 32
  %93 = bitcast float* %92 to <4 x float>*
  %94 = load <4 x float>, <4 x float>* %93, align 1
  %95 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 32
  %96 = bitcast float* %95 to <4 x float>*
  %97 = load <4 x float>, <4 x float>* %96, align 1
  %98 = fmul <4 x float> %97, %97
  %99 = fmul <4 x float> %94, %94
  %100 = fadd <4 x float> %99, %98
  %101 = getelementptr inbounds float, float* %2, i64 32
  %102 = bitcast float* %101 to <4 x float>*
  store <4 x float> %100, <4 x float>* %102, align 1
  %103 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 36
  %104 = bitcast float* %103 to <4 x float>*
  %105 = load <4 x float>, <4 x float>* %104, align 1
  %106 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 36
  %107 = bitcast float* %106 to <4 x float>*
  %108 = load <4 x float>, <4 x float>* %107, align 1
  %109 = fmul <4 x float> %108, %108
  %110 = fmul <4 x float> %105, %105
  %111 = fadd <4 x float> %110, %109
  %112 = getelementptr inbounds float, float* %2, i64 36
  %113 = bitcast float* %112 to <4 x float>*
  store <4 x float> %111, <4 x float>* %113, align 1
  %114 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 40
  %115 = bitcast float* %114 to <4 x float>*
  %116 = load <4 x float>, <4 x float>* %115, align 1
  %117 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 40
  %118 = bitcast float* %117 to <4 x float>*
  %119 = load <4 x float>, <4 x float>* %118, align 1
  %120 = fmul <4 x float> %119, %119
  %121 = fmul <4 x float> %116, %116
  %122 = fadd <4 x float> %121, %120
  %123 = getelementptr inbounds float, float* %2, i64 40
  %124 = bitcast float* %123 to <4 x float>*
  store <4 x float> %122, <4 x float>* %124, align 1
  %125 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 44
  %126 = bitcast float* %125 to <4 x float>*
  %127 = load <4 x float>, <4 x float>* %126, align 1
  %128 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 44
  %129 = bitcast float* %128 to <4 x float>*
  %130 = load <4 x float>, <4 x float>* %129, align 1
  %131 = fmul <4 x float> %130, %130
  %132 = fmul <4 x float> %127, %127
  %133 = fadd <4 x float> %132, %131
  %134 = getelementptr inbounds float, float* %2, i64 44
  %135 = bitcast float* %134 to <4 x float>*
  store <4 x float> %133, <4 x float>* %135, align 1
  %136 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 48
  %137 = bitcast float* %136 to <4 x float>*
  %138 = load <4 x float>, <4 x float>* %137, align 1
  %139 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 48
  %140 = bitcast float* %139 to <4 x float>*
  %141 = load <4 x float>, <4 x float>* %140, align 1
  %142 = fmul <4 x float> %141, %141
  %143 = fmul <4 x float> %138, %138
  %144 = fadd <4 x float> %143, %142
  %145 = getelementptr inbounds float, float* %2, i64 48
  %146 = bitcast float* %145 to <4 x float>*
  store <4 x float> %144, <4 x float>* %146, align 1
  %147 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 52
  %148 = bitcast float* %147 to <4 x float>*
  %149 = load <4 x float>, <4 x float>* %148, align 1
  %150 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 52
  %151 = bitcast float* %150 to <4 x float>*
  %152 = load <4 x float>, <4 x float>* %151, align 1
  %153 = fmul <4 x float> %152, %152
  %154 = fmul <4 x float> %149, %149
  %155 = fadd <4 x float> %154, %153
  %156 = getelementptr inbounds float, float* %2, i64 52
  %157 = bitcast float* %156 to <4 x float>*
  store <4 x float> %155, <4 x float>* %157, align 1
  %158 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 56
  %159 = bitcast float* %158 to <4 x float>*
  %160 = load <4 x float>, <4 x float>* %159, align 1
  %161 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 56
  %162 = bitcast float* %161 to <4 x float>*
  %163 = load <4 x float>, <4 x float>* %162, align 1
  %164 = fmul <4 x float> %163, %163
  %165 = fmul <4 x float> %160, %160
  %166 = fadd <4 x float> %165, %164
  %167 = getelementptr inbounds float, float* %2, i64 56
  %168 = bitcast float* %167 to <4 x float>*
  store <4 x float> %166, <4 x float>* %168, align 1
  %169 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 60
  %170 = bitcast float* %169 to <4 x float>*
  %171 = load <4 x float>, <4 x float>* %170, align 1
  %172 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 60
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 1
  %175 = fmul <4 x float> %174, %174
  %176 = fmul <4 x float> %171, %171
  %177 = fadd <4 x float> %176, %175
  %178 = getelementptr inbounds float, float* %2, i64 60
  %179 = bitcast float* %178 to <4 x float>*
  store <4 x float> %177, <4 x float>* %179, align 1
  %180 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %181 = load float, float* %180, align 4
  %182 = fmul float %181, %181
  %183 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 64
  %184 = load float, float* %183, align 4
  %185 = fmul float %184, %184
  %186 = fadd float %182, %185
  %187 = getelementptr inbounds float, float* %2, i64 64
  store float %186, float* %187, align 4
  br label %448

188:                                              ; preds = %4
  %189 = icmp eq i64 %3, 0
  %190 = select i1 %189, float* null, float* %2
  tail call void @_ZNK6webrtc7FftData12SpectrumAVX2EN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"* %0, float* %190, i64 %3) #17
  br label %448

191:                                              ; preds = %4
  %192 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 0
  %193 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 65
  %194 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %195 = getelementptr float, float* %2, i64 65
  %196 = getelementptr inbounds %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 1, i32 0, i32 0, i64 0
  %197 = icmp ugt float* %196, %2
  %198 = bitcast float* %195 to %"struct.webrtc::FftData"*
  %199 = icmp ugt %"struct.webrtc::FftData"* %198, %0
  %200 = and i1 %197, %199
  br i1 %200, label %379, label %201

201:                                              ; preds = %191
  %202 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %203 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 64
  %204 = getelementptr float, float* %2, i64 64
  %205 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 0
  %206 = bitcast %"struct.webrtc::FftData"* %0 to <4 x float>*
  %207 = load <4 x float>, <4 x float>* %206, align 4, !alias.scope !14
  %208 = bitcast float* %205 to <4 x float>*
  %209 = load <4 x float>, <4 x float>* %208, align 4, !alias.scope !14
  %210 = fmul <4 x float> %207, %207
  %211 = fmul <4 x float> %209, %209
  %212 = fadd <4 x float> %210, %211
  %213 = bitcast float* %2 to <4 x float>*
  store <4 x float> %212, <4 x float>* %213, align 4, !alias.scope !17, !noalias !14
  %214 = getelementptr float, float* %2, i64 4
  %215 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 4
  %216 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 4
  %217 = bitcast float* %216 to <4 x float>*
  %218 = load <4 x float>, <4 x float>* %217, align 4, !alias.scope !14
  %219 = bitcast float* %215 to <4 x float>*
  %220 = load <4 x float>, <4 x float>* %219, align 4, !alias.scope !14
  %221 = fmul <4 x float> %218, %218
  %222 = fmul <4 x float> %220, %220
  %223 = fadd <4 x float> %221, %222
  %224 = bitcast float* %214 to <4 x float>*
  store <4 x float> %223, <4 x float>* %224, align 4, !alias.scope !17, !noalias !14
  %225 = getelementptr float, float* %2, i64 8
  %226 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 8
  %227 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 8
  %228 = bitcast float* %227 to <4 x float>*
  %229 = load <4 x float>, <4 x float>* %228, align 4, !alias.scope !14
  %230 = bitcast float* %226 to <4 x float>*
  %231 = load <4 x float>, <4 x float>* %230, align 4, !alias.scope !14
  %232 = fmul <4 x float> %229, %229
  %233 = fmul <4 x float> %231, %231
  %234 = fadd <4 x float> %232, %233
  %235 = bitcast float* %225 to <4 x float>*
  store <4 x float> %234, <4 x float>* %235, align 4, !alias.scope !17, !noalias !14
  %236 = getelementptr float, float* %2, i64 12
  %237 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 12
  %238 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 12
  %239 = bitcast float* %238 to <4 x float>*
  %240 = load <4 x float>, <4 x float>* %239, align 4, !alias.scope !14
  %241 = bitcast float* %237 to <4 x float>*
  %242 = load <4 x float>, <4 x float>* %241, align 4, !alias.scope !14
  %243 = fmul <4 x float> %240, %240
  %244 = fmul <4 x float> %242, %242
  %245 = fadd <4 x float> %243, %244
  %246 = bitcast float* %236 to <4 x float>*
  store <4 x float> %245, <4 x float>* %246, align 4, !alias.scope !17, !noalias !14
  %247 = getelementptr float, float* %2, i64 16
  %248 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 16
  %249 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 16
  %250 = bitcast float* %249 to <4 x float>*
  %251 = load <4 x float>, <4 x float>* %250, align 4, !alias.scope !14
  %252 = bitcast float* %248 to <4 x float>*
  %253 = load <4 x float>, <4 x float>* %252, align 4, !alias.scope !14
  %254 = fmul <4 x float> %251, %251
  %255 = fmul <4 x float> %253, %253
  %256 = fadd <4 x float> %254, %255
  %257 = bitcast float* %247 to <4 x float>*
  store <4 x float> %256, <4 x float>* %257, align 4, !alias.scope !17, !noalias !14
  %258 = getelementptr float, float* %2, i64 20
  %259 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 20
  %260 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 20
  %261 = bitcast float* %260 to <4 x float>*
  %262 = load <4 x float>, <4 x float>* %261, align 4, !alias.scope !14
  %263 = bitcast float* %259 to <4 x float>*
  %264 = load <4 x float>, <4 x float>* %263, align 4, !alias.scope !14
  %265 = fmul <4 x float> %262, %262
  %266 = fmul <4 x float> %264, %264
  %267 = fadd <4 x float> %265, %266
  %268 = bitcast float* %258 to <4 x float>*
  store <4 x float> %267, <4 x float>* %268, align 4, !alias.scope !17, !noalias !14
  %269 = getelementptr float, float* %2, i64 24
  %270 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 24
  %271 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 24
  %272 = bitcast float* %271 to <4 x float>*
  %273 = load <4 x float>, <4 x float>* %272, align 4, !alias.scope !14
  %274 = bitcast float* %270 to <4 x float>*
  %275 = load <4 x float>, <4 x float>* %274, align 4, !alias.scope !14
  %276 = fmul <4 x float> %273, %273
  %277 = fmul <4 x float> %275, %275
  %278 = fadd <4 x float> %276, %277
  %279 = bitcast float* %269 to <4 x float>*
  store <4 x float> %278, <4 x float>* %279, align 4, !alias.scope !17, !noalias !14
  %280 = getelementptr float, float* %2, i64 28
  %281 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 28
  %282 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 28
  %283 = bitcast float* %282 to <4 x float>*
  %284 = load <4 x float>, <4 x float>* %283, align 4, !alias.scope !14
  %285 = bitcast float* %281 to <4 x float>*
  %286 = load <4 x float>, <4 x float>* %285, align 4, !alias.scope !14
  %287 = fmul <4 x float> %284, %284
  %288 = fmul <4 x float> %286, %286
  %289 = fadd <4 x float> %287, %288
  %290 = bitcast float* %280 to <4 x float>*
  store <4 x float> %289, <4 x float>* %290, align 4, !alias.scope !17, !noalias !14
  %291 = getelementptr float, float* %2, i64 32
  %292 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 32
  %293 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 32
  %294 = bitcast float* %293 to <4 x float>*
  %295 = load <4 x float>, <4 x float>* %294, align 4, !alias.scope !14
  %296 = bitcast float* %292 to <4 x float>*
  %297 = load <4 x float>, <4 x float>* %296, align 4, !alias.scope !14
  %298 = fmul <4 x float> %295, %295
  %299 = fmul <4 x float> %297, %297
  %300 = fadd <4 x float> %298, %299
  %301 = bitcast float* %291 to <4 x float>*
  store <4 x float> %300, <4 x float>* %301, align 4, !alias.scope !17, !noalias !14
  %302 = getelementptr float, float* %2, i64 36
  %303 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 36
  %304 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 36
  %305 = bitcast float* %304 to <4 x float>*
  %306 = load <4 x float>, <4 x float>* %305, align 4, !alias.scope !14
  %307 = bitcast float* %303 to <4 x float>*
  %308 = load <4 x float>, <4 x float>* %307, align 4, !alias.scope !14
  %309 = fmul <4 x float> %306, %306
  %310 = fmul <4 x float> %308, %308
  %311 = fadd <4 x float> %309, %310
  %312 = bitcast float* %302 to <4 x float>*
  store <4 x float> %311, <4 x float>* %312, align 4, !alias.scope !17, !noalias !14
  %313 = getelementptr float, float* %2, i64 40
  %314 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 40
  %315 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 40
  %316 = bitcast float* %315 to <4 x float>*
  %317 = load <4 x float>, <4 x float>* %316, align 4, !alias.scope !14
  %318 = bitcast float* %314 to <4 x float>*
  %319 = load <4 x float>, <4 x float>* %318, align 4, !alias.scope !14
  %320 = fmul <4 x float> %317, %317
  %321 = fmul <4 x float> %319, %319
  %322 = fadd <4 x float> %320, %321
  %323 = bitcast float* %313 to <4 x float>*
  store <4 x float> %322, <4 x float>* %323, align 4, !alias.scope !17, !noalias !14
  %324 = getelementptr float, float* %2, i64 44
  %325 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 44
  %326 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 44
  %327 = bitcast float* %326 to <4 x float>*
  %328 = load <4 x float>, <4 x float>* %327, align 4, !alias.scope !14
  %329 = bitcast float* %325 to <4 x float>*
  %330 = load <4 x float>, <4 x float>* %329, align 4, !alias.scope !14
  %331 = fmul <4 x float> %328, %328
  %332 = fmul <4 x float> %330, %330
  %333 = fadd <4 x float> %331, %332
  %334 = bitcast float* %324 to <4 x float>*
  store <4 x float> %333, <4 x float>* %334, align 4, !alias.scope !17, !noalias !14
  %335 = getelementptr float, float* %2, i64 48
  %336 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 48
  %337 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 48
  %338 = bitcast float* %337 to <4 x float>*
  %339 = load <4 x float>, <4 x float>* %338, align 4, !alias.scope !14
  %340 = bitcast float* %336 to <4 x float>*
  %341 = load <4 x float>, <4 x float>* %340, align 4, !alias.scope !14
  %342 = fmul <4 x float> %339, %339
  %343 = fmul <4 x float> %341, %341
  %344 = fadd <4 x float> %342, %343
  %345 = bitcast float* %335 to <4 x float>*
  store <4 x float> %344, <4 x float>* %345, align 4, !alias.scope !17, !noalias !14
  %346 = getelementptr float, float* %2, i64 52
  %347 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 52
  %348 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 52
  %349 = bitcast float* %348 to <4 x float>*
  %350 = load <4 x float>, <4 x float>* %349, align 4, !alias.scope !14
  %351 = bitcast float* %347 to <4 x float>*
  %352 = load <4 x float>, <4 x float>* %351, align 4, !alias.scope !14
  %353 = fmul <4 x float> %350, %350
  %354 = fmul <4 x float> %352, %352
  %355 = fadd <4 x float> %353, %354
  %356 = bitcast float* %346 to <4 x float>*
  store <4 x float> %355, <4 x float>* %356, align 4, !alias.scope !17, !noalias !14
  %357 = getelementptr float, float* %2, i64 56
  %358 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 56
  %359 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 56
  %360 = bitcast float* %359 to <4 x float>*
  %361 = load <4 x float>, <4 x float>* %360, align 4, !alias.scope !14
  %362 = bitcast float* %358 to <4 x float>*
  %363 = load <4 x float>, <4 x float>* %362, align 4, !alias.scope !14
  %364 = fmul <4 x float> %361, %361
  %365 = fmul <4 x float> %363, %363
  %366 = fadd <4 x float> %364, %365
  %367 = bitcast float* %357 to <4 x float>*
  store <4 x float> %366, <4 x float>* %367, align 4, !alias.scope !17, !noalias !14
  %368 = getelementptr float, float* %2, i64 60
  %369 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 1, i32 0, i64 60
  %370 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 60
  %371 = bitcast float* %370 to <4 x float>*
  %372 = load <4 x float>, <4 x float>* %371, align 4, !alias.scope !14
  %373 = bitcast float* %369 to <4 x float>*
  %374 = load <4 x float>, <4 x float>* %373, align 4, !alias.scope !14
  %375 = fmul <4 x float> %372, %372
  %376 = fmul <4 x float> %374, %374
  %377 = fadd <4 x float> %375, %376
  %378 = bitcast float* %368 to <4 x float>*
  store <4 x float> %377, <4 x float>* %378, align 4, !alias.scope !17, !noalias !14
  br label %379

379:                                              ; preds = %201, %191
  %380 = phi float* [ %2, %191 ], [ %204, %201 ]
  %381 = phi float* [ %194, %191 ], [ %203, %201 ]
  %382 = phi float* [ %192, %191 ], [ %202, %201 ]
  %383 = ptrtoint float* %382 to i64
  %384 = getelementptr %"struct.webrtc::FftData", %"struct.webrtc::FftData"* %0, i64 0, i32 0, i32 0, i64 64
  %385 = ptrtoint float* %384 to i64
  %386 = sub i64 %385, %383
  %387 = lshr i64 %386, 2
  %388 = add nuw nsw i64 %387, 1
  %389 = and i64 %388, 3
  %390 = icmp eq i64 %389, 0
  br i1 %390, label %406, label %391

391:                                              ; preds = %379, %391
  %392 = phi float* [ %403, %391 ], [ %380, %379 ]
  %393 = phi float* [ %402, %391 ], [ %381, %379 ]
  %394 = phi float* [ %401, %391 ], [ %382, %379 ]
  %395 = phi i64 [ %404, %391 ], [ %389, %379 ]
  %396 = load float, float* %394, align 4
  %397 = load float, float* %393, align 4
  %398 = fmul float %396, %396
  %399 = fmul float %397, %397
  %400 = fadd float %398, %399
  store float %400, float* %392, align 4
  %401 = getelementptr inbounds float, float* %394, i64 1
  %402 = getelementptr inbounds float, float* %393, i64 1
  %403 = getelementptr inbounds float, float* %392, i64 1
  %404 = add i64 %395, -1
  %405 = icmp eq i64 %404, 0
  br i1 %405, label %406, label %391, !llvm.loop !19

406:                                              ; preds = %391, %379
  %407 = phi float* [ %380, %379 ], [ %403, %391 ]
  %408 = phi float* [ %381, %379 ], [ %402, %391 ]
  %409 = phi float* [ %382, %379 ], [ %401, %391 ]
  %410 = icmp ult i64 %386, 12
  br i1 %410, label %448, label %411

411:                                              ; preds = %406, %411
  %412 = phi float* [ %446, %411 ], [ %407, %406 ]
  %413 = phi float* [ %445, %411 ], [ %408, %406 ]
  %414 = phi float* [ %444, %411 ], [ %409, %406 ]
  %415 = load float, float* %414, align 4
  %416 = load float, float* %413, align 4
  %417 = fmul float %415, %415
  %418 = fmul float %416, %416
  %419 = fadd float %417, %418
  store float %419, float* %412, align 4
  %420 = getelementptr inbounds float, float* %414, i64 1
  %421 = getelementptr inbounds float, float* %413, i64 1
  %422 = getelementptr inbounds float, float* %412, i64 1
  %423 = load float, float* %420, align 4
  %424 = load float, float* %421, align 4
  %425 = fmul float %423, %423
  %426 = fmul float %424, %424
  %427 = fadd float %425, %426
  store float %427, float* %422, align 4
  %428 = getelementptr inbounds float, float* %414, i64 2
  %429 = getelementptr inbounds float, float* %413, i64 2
  %430 = getelementptr inbounds float, float* %412, i64 2
  %431 = load float, float* %428, align 4
  %432 = load float, float* %429, align 4
  %433 = fmul float %431, %431
  %434 = fmul float %432, %432
  %435 = fadd float %433, %434
  store float %435, float* %430, align 4
  %436 = getelementptr inbounds float, float* %414, i64 3
  %437 = getelementptr inbounds float, float* %413, i64 3
  %438 = getelementptr inbounds float, float* %412, i64 3
  %439 = load float, float* %436, align 4
  %440 = load float, float* %437, align 4
  %441 = fmul float %439, %439
  %442 = fmul float %440, %440
  %443 = fadd float %441, %442
  store float %443, float* %438, align 4
  %444 = getelementptr inbounds float, float* %414, i64 4
  %445 = getelementptr inbounds float, float* %413, i64 4
  %446 = getelementptr inbounds float, float* %412, i64 4
  %447 = icmp eq float* %444, %193
  br i1 %447, label %448, label %411, !llvm.loop !20

448:                                              ; preds = %406, %411, %188, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK6webrtc7Aec3Fft9PaddedFftEN3rtc9ArrayViewIKfLln4711EEES4_NS0_6WindowEPNS_7FftDataE(%"class.webrtc::Aec3Fft"*, float*, i64, float*, i64, i32, %"struct.webrtc::FftData"*) local_unnamed_addr #2

declare void @_ZNK6webrtc7FftData12SpectrumAVX2EN3rtc9ArrayViewIfLln4711EEE(%"struct.webrtc::FftData"*, float*, i64) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !4}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16}
!16 = distinct !{!16, !"LVerDomain"}
!17 = !{!18}
!18 = distinct !{!18, !16}
!19 = distinct !{!19, !4}
!20 = distinct !{!20, !11}
