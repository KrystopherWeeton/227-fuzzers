; ModuleID = '../../media/base/android_overlay_config.cc'
source_filename = "../../media/base/android_overlay_config.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.media::AndroidOverlayConfig" = type { %"class.gfx::Rect", i8, i8, %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.base::RepeatingCallback" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }

@_ZN5media20AndroidOverlayConfigC1Ev = hidden unnamed_addr alias void (%"struct.media::AndroidOverlayConfig"*), void (%"struct.media::AndroidOverlayConfig"*)* @_ZN5media20AndroidOverlayConfigC2Ev
@_ZN5media20AndroidOverlayConfigC1EOS0_ = hidden unnamed_addr alias void (%"struct.media::AndroidOverlayConfig"*, %"struct.media::AndroidOverlayConfig"*), void (%"struct.media::AndroidOverlayConfig"*, %"struct.media::AndroidOverlayConfig"*)* @_ZN5media20AndroidOverlayConfigC2EOS0_
@_ZN5media20AndroidOverlayConfigD1Ev = hidden unnamed_addr alias void (%"struct.media::AndroidOverlayConfig"*), void (%"struct.media::AndroidOverlayConfig"*)* @_ZN5media20AndroidOverlayConfigD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20AndroidOverlayConfigC2Ev(%"struct.media::AndroidOverlayConfig"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = bitcast %"struct.media::AndroidOverlayConfig"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 18, i1 false)
  %4 = bitcast %"class.base::internal::BindStateBase"** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20AndroidOverlayConfigC2EOS0_(%"struct.media::AndroidOverlayConfig"* nocapture, %"struct.media::AndroidOverlayConfig"* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.media::AndroidOverlayConfig"* %0 to i8*
  %4 = bitcast %"struct.media::AndroidOverlayConfig"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 18, i1 false)
  %5 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %1, i64 0, i32 3
  %7 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback"* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %1, i64 0, i32 4
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::OnceCallback"* %11 to i64*
  store i64 %15, i64* %16, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %17 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 5
  %18 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %1, i64 0, i32 5
  %19 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::RepeatingCallback"* %18 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::RepeatingCallback"* %17 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media20AndroidOverlayConfigD2Ev(%"struct.media::AndroidOverlayConfig"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %2) #3
  %3 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #3
  %4 = getelementptr inbounds %"struct.media::AndroidOverlayConfig", %"struct.media::AndroidOverlayConfig"* %0, i64 0, i32 3, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %4) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
