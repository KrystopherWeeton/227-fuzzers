; ModuleID = '../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/vulkan/ProgramPipelineVk.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::ProgramPipelineVk" = type { %"class.rx::ProgramPipelineImpl", %"class.rx::ProgramExecutableVk" }
%"class.rx::ProgramPipelineImpl" = type { i32 (...)**, %"class.gl::ProgramPipelineState"* }
%"class.rx::ProgramExecutableVk" = type { i32 (...)**, %"class.angle::PackedEnumMap.644", %"class.angle::PackedEnumMap.644", i32, %"class.rx::vk::BufferSerial", %"class.rx::DescriptorSetCache", %"class.rx::DescriptorSetCache.661", %"class.rx::DescriptorSetCache.678", %"class.rx::vk::BindingPointer", %"class.angle::PackedEnumMap.695", %"class.angle::PackedEnumMap.699", %"class.angle::PackedEnumMap.703", i32, %"class.angle::FixedVector.719", %"class.std::__1::vector", %"class.rx::ShaderInterfaceVariableInfoMap", [64 x %"class.rx::ProgramInfo"], %"class.rx::ProgramInfo", %"struct.rx::ProgramTransformOptions", %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"struct.rx::ProgramExecutablePerfCounters", %"struct.rx::ProgramExecutablePerfCounters" }
%"class.angle::PackedEnumMap.644" = type { %"struct.std::__1::array.645" }
%"struct.std::__1::array.645" = type { [4 x %struct.VkDescriptorSet_T*] }
%struct.VkDescriptorSet_T = type opaque
%"class.rx::vk::BufferSerial" = type { i32 }
%"class.rx::DescriptorSetCache" = type { %"class.rx::HasCacheStats", %"class.absl::flat_hash_map.646" }
%"class.rx::HasCacheStats" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.rx::CacheStats" = type { i64, i64 }
%"class.absl::flat_hash_map.646" = type { %"class.absl::container_internal::raw_hash_map.647" }
%"class.absl::container_internal::raw_hash_map.647" = type { %"class.absl::container_internal::raw_hash_set.648" }
%"class.absl::container_internal::raw_hash_set.648" = type { i8*, %"union.absl::container_internal::map_slot_type.649"*, i64, i64, %"class.absl::container_internal::CompressedTuple.650" }
%"union.absl::container_internal::map_slot_type.649" = type opaque
%"class.absl::container_internal::CompressedTuple.650" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.651" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.651" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.rx::DescriptorSetCache.661" = type { %"class.rx::HasCacheStats.662", %"class.absl::flat_hash_map.663" }
%"class.rx::HasCacheStats.662" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.663" = type { %"class.absl::container_internal::raw_hash_map.664" }
%"class.absl::container_internal::raw_hash_map.664" = type { %"class.absl::container_internal::raw_hash_set.665" }
%"class.absl::container_internal::raw_hash_set.665" = type { i8*, %"union.absl::container_internal::map_slot_type.666"*, i64, i64, %"class.absl::container_internal::CompressedTuple.667" }
%"union.absl::container_internal::map_slot_type.666" = type opaque
%"class.absl::container_internal::CompressedTuple.667" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.668" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.668" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::DescriptorSetCache.678" = type { %"class.rx::HasCacheStats.679", %"class.absl::flat_hash_map.680" }
%"class.rx::HasCacheStats.679" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.680" = type { %"class.absl::container_internal::raw_hash_map.681" }
%"class.absl::container_internal::raw_hash_map.681" = type { %"class.absl::container_internal::raw_hash_set.682" }
%"class.absl::container_internal::raw_hash_set.682" = type { i8*, %"union.absl::container_internal::map_slot_type.683"*, i64, i64, %"class.absl::container_internal::CompressedTuple.684" }
%"union.absl::container_internal::map_slot_type.683" = type opaque
%"class.absl::container_internal::CompressedTuple.684" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.685" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.685" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::BindingPointer" = type { %"class.rx::vk::RefCounted"* }
%"class.rx::vk::RefCounted" = type { i32, %"class.rx::vk::PipelineLayout" }
%"class.rx::vk::PipelineLayout" = type { %"class.rx::vk::WrappedObject.1420" }
%"class.rx::vk::WrappedObject.1420" = type { %struct.VkPipelineLayout_T* }
%struct.VkPipelineLayout_T = type opaque
%"class.angle::PackedEnumMap.695" = type { %"struct.std::__1::array.696" }
%"struct.std::__1::array.696" = type { [4 x %"class.rx::vk::BindingPointer.697"] }
%"class.rx::vk::BindingPointer.697" = type { %"class.rx::vk::RefCounted.698"* }
%"class.rx::vk::RefCounted.698" = type opaque
%"class.angle::PackedEnumMap.699" = type { %"struct.std::__1::array.700" }
%"struct.std::__1::array.700" = type { [4 x %"class.rx::vk::BindingPointer.701"] }
%"class.rx::vk::BindingPointer.701" = type { %"class.rx::vk::RefCounted.702"* }
%"class.rx::vk::RefCounted.702" = type opaque
%"class.angle::PackedEnumMap.703" = type { %"struct.std::__1::array.704" }
%"struct.std::__1::array.704" = type { [4 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.rx::vk::DynamicDescriptorPool" = type { i64, %"class.std::__1::vector.705", %"class.std::__1::vector.712", %struct.VkDescriptorSetLayout_T* }
%"class.std::__1::vector.705" = type { %"class.std::__1::__vector_base.706" }
%"class.std::__1::__vector_base.706" = type { %"class.rx::vk::RefCounted.702"**, %"class.rx::vk::RefCounted.702"**, %"class.std::__1::__compressed_pair.707" }
%"class.std::__1::__compressed_pair.707" = type { %"struct.std::__1::__compressed_pair_elem.708" }
%"struct.std::__1::__compressed_pair_elem.708" = type { %"class.rx::vk::RefCounted.702"** }
%"class.std::__1::vector.712" = type { %"class.std::__1::__vector_base.713" }
%"class.std::__1::__vector_base.713" = type { %struct.VkDescriptorPoolSize*, %struct.VkDescriptorPoolSize*, %"class.std::__1::__compressed_pair.714" }
%struct.VkDescriptorPoolSize = type { i32, i32 }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %struct.VkDescriptorPoolSize* }
%struct.VkDescriptorSetLayout_T = type opaque
%"class.angle::FixedVector.719" = type { %"struct.std::__1::array.720", i64 }
%"struct.std::__1::array.720" = type { [6 x i32] }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { i32* }
%"class.rx::ShaderInterfaceVariableInfoMap" = type { %"class.angle::PackedEnumMap.721" }
%"class.angle::PackedEnumMap.721" = type { %"struct.std::__1::array.722" }
%"struct.std::__1::array.722" = type { [6 x %"class.absl::flat_hash_map.723"] }
%"class.absl::flat_hash_map.723" = type { %"class.absl::container_internal::raw_hash_map.724" }
%"class.absl::container_internal::raw_hash_map.724" = type { %"class.absl::container_internal::raw_hash_set.725" }
%"class.absl::container_internal::raw_hash_set.725" = type { i8*, %"union.absl::container_internal::map_slot_type.726"*, i64, i64, %"class.absl::container_internal::CompressedTuple.727" }
%"union.absl::container_internal::map_slot_type.726" = type opaque
%"class.absl::container_internal::CompressedTuple.727" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.728" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.728" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::ProgramInfo" = type { [8 x i8], %"class.rx::vk::ShaderProgramHelper", %"class.angle::PackedEnumMap.759" }
%"class.rx::vk::ShaderProgramHelper" = type { [8 x i8], %"class.angle::PackedEnumMap.732", %"class.rx::GraphicsPipelineCache", %"class.rx::vk::ObjectAndSerial.757", %"struct.rx::vk::SpecializationConstants" }
%"class.angle::PackedEnumMap.732" = type { %"struct.std::__1::array.733" }
%"struct.std::__1::array.733" = type { [6 x %"class.rx::vk::BindingPointer.734"] }
%"class.rx::vk::BindingPointer.734" = type { %"class.rx::vk::RefCounted.735"* }
%"class.rx::vk::RefCounted.735" = type { i32, %"class.rx::vk::ObjectAndSerial" }
%"class.rx::vk::ObjectAndSerial" = type { [8 x i8], %"class.rx::vk::ShaderModule", %"class.rx::Serial" }
%"class.rx::vk::ShaderModule" = type { %"class.rx::vk::WrappedObject" }
%"class.rx::vk::WrappedObject" = type { %struct.VkShaderModule_T* }
%struct.VkShaderModule_T = type opaque
%"class.rx::Serial" = type { i64 }
%"class.rx::GraphicsPipelineCache" = type { %"class.rx::HasCacheStats.736", %"class.std::__1::unordered_map" }
%"class.rx::HasCacheStats.736" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.737", %"class.std::__1::__compressed_pair.745", %"class.std::__1::__compressed_pair.750", %"class.std::__1::__compressed_pair.752", [4 x i8] }>
%"class.std::__1::unique_ptr.737" = type { %"class.std::__1::__compressed_pair.738" }
%"class.std::__1::__compressed_pair.738" = type { %"struct.std::__1::__compressed_pair_elem.739", %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.739" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.741" }
%"class.std::__1::__compressed_pair.741" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.750" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { float }
%"class.rx::vk::ObjectAndSerial.757" = type { [8 x i8], %"class.rx::vk::Pipeline", %"class.rx::Serial" }
%"class.rx::vk::Pipeline" = type { %"class.rx::vk::WrappedObject.758" }
%"class.rx::vk::WrappedObject.758" = type { %struct.VkPipeline_T* }
%struct.VkPipeline_T = type opaque
%"struct.rx::vk::SpecializationConstants" = type { i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.759" = type { %"struct.std::__1::array.760" }
%"struct.std::__1::array.760" = type { [6 x %"class.rx::vk::RefCounted.735"] }
%"struct.rx::ProgramTransformOptions" = type { i8 }
%"class.rx::ProgramVk" = type { %"class.rx::ProgramImpl", %"class.angle::PackedEnumMap.763", %"class.angle::BitSetT.160", [7 x i8], %"class.rx::ShaderInfo", %"struct.rx::GlslangProgramInterfaceInfo", %"class.rx::ProgramExecutableVk" }
%"class.rx::ProgramImpl" = type { i32 (...)**, %"class.gl::ProgramState"* }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.142", i32, %"class.std::__1::vector.144", %"class.std::__1::vector.151", %"class.std::__1::vector.158", %"class.gl::Range", %"class.angle::BitSetT.166", %"class.std::__1::vector", %"class.angle::BitSetT.167", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.142" = type { %"struct.std::__1::array.143" }
%"struct.std::__1::array.143" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.104", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.126", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.96", %"class.std::__1::vector.96", %"class.std::__1::vector.89", %"class.std::__1::vector.89", %"class.std::__1::vector.89", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.103, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.96" = type { %"class.std::__1::__vector_base.97" }
%"class.std::__1::__vector_base.97" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.98" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.89" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.91" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.89", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.103 = type { i8, i32 }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.110" }
%"class.angle::BindingPointer.110" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.111", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.117" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.49", %"struct.std::__1::array.49", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.49" = type { [3 x i32] }
%"class.angle::PackedEnumMap.117" = type { %"struct.std::__1::array.118" }
%"struct.std::__1::array.118" = type { [6 x %"class.std::__1::vector.119"] }
%"class.std::__1::vector.119" = type { %"class.std::__1::__vector_base.120" }
%"class.std::__1::__vector_base.120" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.121" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.88", %"class.gl::ResourceMap.141" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.62", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.64" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.88" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.132" }
%"class.absl::flat_hash_map.132" = type { %"class.absl::container_internal::raw_hash_map.133" }
%"class.absl::container_internal::raw_hash_map.133" = type { %"class.absl::container_internal::raw_hash_set.134" }
%"class.absl::container_internal::raw_hash_set.134" = type { i8*, %"union.absl::container_internal::map_slot_type.135"*, i64, i64, %"class.absl::container_internal::CompressedTuple.136" }
%"union.absl::container_internal::map_slot_type.135" = type opaque
%"class.absl::container_internal::CompressedTuple.136" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.137" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.137" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.141" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.260" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.254", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.220" }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.245" }
%"class.absl::flat_hash_map.245" = type { %"class.absl::container_internal::raw_hash_map.246" }
%"class.absl::container_internal::raw_hash_map.246" = type { %"class.absl::container_internal::raw_hash_set.247" }
%"class.absl::container_internal::raw_hash_set.247" = type { i8*, %"union.absl::container_internal::map_slot_type.248"*, i64, i64, %"class.absl::container_internal::CompressedTuple.249" }
%"union.absl::container_internal::map_slot_type.248" = type opaque
%"class.absl::container_internal::CompressedTuple.249" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.250" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.250" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.220" = type { i64 }
%"class.absl::flat_hash_map.260" = type { %"class.absl::container_internal::raw_hash_map.261" }
%"class.absl::container_internal::raw_hash_map.261" = type { %"class.absl::container_internal::raw_hash_set.262" }
%"class.absl::container_internal::raw_hash_set.262" = type { i8*, %"union.absl::container_internal::map_slot_type.263"*, i64, i64, %"class.absl::container_internal::CompressedTuple.264" }
%"union.absl::container_internal::map_slot_type.263" = type { %"struct.std::__1::pair.1408" }
%"struct.std::__1::pair.1408" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.264" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.265" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.265" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.144" = type { %"class.std::__1::__vector_base.145" }
%"class.std::__1::__vector_base.145" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.151" = type { %"class.std::__1::__vector_base.152" }
%"class.std::__1::__vector_base.152" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.153" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.158" = type { %"class.std::__1::__vector_base.159" }
%"class.std::__1::__vector_base.159" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.161" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.160" }>
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.166" = type { i8 }
%"class.angle::BitSetT.167" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.168" }
%"class.absl::flat_hash_map.168" = type { %"class.absl::container_internal::raw_hash_map.169" }
%"class.absl::container_internal::raw_hash_map.169" = type { %"class.absl::container_internal::raw_hash_set.170" }
%"class.absl::container_internal::raw_hash_set.170" = type { i8*, %"union.absl::container_internal::map_slot_type.171"*, i64, i64, %"class.absl::container_internal::CompressedTuple.172" }
%"union.absl::container_internal::map_slot_type.171" = type opaque
%"class.absl::container_internal::CompressedTuple.172" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.173" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.173" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.160", %"class.angle::BitSetT.160", [6 x i8], %"class.angle::BitSetT.185", i32, [4 x i8], %"class.angle::BitSetT.167", %"class.angle::BitSetT.185", %"class.angle::BitSetArray", %"struct.std::__1::array.188", %"struct.std::__1::array.189", %"class.angle::BitSetArray", %"struct.std::__1::array.190", %"struct.std::__1::array.191", %"class.angle::BitSetArray", %"struct.std::__1::array.191", i8, [7 x i8], %"class.std::__1::vector.89", %"class.std::__1::vector.151", %"class.std::__1::vector.151", i8, [7 x i8], %"class.std::__1::vector.89", %"class.std::__1::vector.192", %"class.std::__1::vector.199", i32, [4 x i8], %"class.std::__1::vector.206", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.213", %"class.angle::BitSetT.220", %"class.std::__1::vector.221", %"class.gl::Range", %"class.std::__1::vector.213", %"class.std::__1::vector.213", %"class.gl::Range", %"class.std::__1::vector.228", %"class.std::__1::vector.235", %"class.std::__1::vector.235", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.242", %"class.angle::PackedEnumMap.242", %"class.angle::PackedEnumMap.45", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.244, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.179" }
%"class.std::__1::unique_ptr.179" = type { %"class.std::__1::__compressed_pair.180" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.185" = type { i64 }
%"struct.std::__1::array.188" = type { [96 x i32] }
%"struct.std::__1::array.189" = type { [96 x i8] }
%"struct.std::__1::array.190" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.186" }
%"struct.std::__1::array.186" = type { [2 x %"class.angle::BitSetT.187"] }
%"class.angle::BitSetT.187" = type { i64 }
%"struct.std::__1::array.191" = type { [96 x %"class.angle::BitSetT.160"] }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.194" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { i32*, i32*, %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { i32* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.208" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.221" = type { %"class.std::__1::__vector_base.222" }
%"class.std::__1::__vector_base.222" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.223" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.215" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.228" = type { %"class.std::__1::__vector_base.229" }
%"class.std::__1::__vector_base.229" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.230" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.235" = type { %"class.std::__1::__vector_base.236" }
%"class.std::__1::__vector_base.236" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.237" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.242" = type { %"struct.std::__1::array.243" }
%"struct.std::__1::array.243" = type { [6 x %"class.std::__1::vector.89"] }
%"class.angle::PackedEnumMap.45" = type { %"struct.std::__1::array.46" }
%"struct.std::__1::array.46" = type { [6 x i32] }
%struct.Optional.244 = type { i8, i8 }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.angle::PackedEnumMap.763" = type { %"struct.std::__1::array.764" }
%"struct.std::__1::array.764" = type { [6 x %"struct.rx::DefaultUniformBlock"] }
%"struct.rx::DefaultUniformBlock" = type { [8 x i8], %"class.angle::MemoryBuffer", %"class.std::__1::vector.765" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::vector.765" = type { %"class.std::__1::__vector_base.766" }
%"class.std::__1::__vector_base.766" = type { %"struct.sh::BlockMemberInfo"*, %"struct.sh::BlockMemberInfo"*, %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"struct.sh::BlockMemberInfo"* }
%"class.angle::BitSetT.160" = type { i8 }
%"class.rx::ShaderInfo" = type <{ %"class.angle::PackedEnumMap.772", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.772" = type { %"struct.std::__1::array.773" }
%"struct.std::__1::array.773" = type { [6 x %"class.std::__1::vector"] }
%"struct.rx::GlslangProgramInterfaceInfo" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ProgramExecutablePerfCounters" = type { %"class.angle::PackedEnumMap.761", %"class.angle::PackedEnumMap.761", %"class.angle::PackedEnumMap.761" }
%"class.angle::PackedEnumMap.761" = type { %"struct.std::__1::array.762" }
%"struct.std::__1::array.762" = type { [4 x i32] }
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.369", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.369" = type { %"struct.std::__1::array.370" }
%"struct.std::__1::array.370" = type { [6 x %"class.gl::Program"*] }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.566", [4 x i8], %"class.std::__1::unique_ptr.567", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.573", %"class.gl::ResourceMap.575", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.585", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.595", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.605", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.615", i8*, %"class.std::__1::vector.615", %"class.std::__1::unique_ptr.622", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.342", %"class.gl::StateCache", %"class.angle::BitSetT.187", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::BitSetT.187", %"class.angle::BitSetT.342", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.344", %"class.std::__1::vector.344", %"class.std::__1::vector.344", %struct.Optional.636, %struct.Optional.636, %"class.std::__1::shared_ptr.637", %"class.std::__1::unique_ptr.638", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.403", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.404", %"class.gl::Program"*, %"class.gl::BindingPointer.406", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.408", %"class.gl::VertexArray"*, %"class.angle::BitSetT.167", i64, %"class.angle::PackedEnumMap.436", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.344", %"class.angle::BitSetArray", %"class.std::__1::vector.448", %"class.std::__1::vector.457", %"class.angle::PackedEnumMap.464", %"class.angle::PackedEnumMap.468", %"class.std::__1::vector.470", %"class.std::__1::vector.470", %"class.std::__1::vector.470", %"class.angle::BitSetArray.477", %"class.angle::BitSetT.478", %"class.angle::BitSetT.187", %"class.gl::BindingPointer.479", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.506", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.187", %"class.angle::BitSetT.565", [4 x i8], %"class.angle::BitSetT.342", %"class.angle::BitSetT.185", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.45", %"class.angle::PackedEnumMap.47", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.49", %"struct.std::__1::array.49", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.44", i32 }
%"struct.std::__1::array.44" = type { [2 x i32] }
%"class.angle::PackedEnumMap.47" = type { %"struct.std::__1::array.48" }
%"struct.std::__1::array.48" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.50" }
%"class.angle::PackedEnumMap.50" = type { %"struct.std::__1::array.51" }
%"struct.std::__1::array.51" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.52" }
%"class.std::__1::set.52" = type { %"class.std::__1::__tree.53" }
%"class.std::__1::__tree.53" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.70", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.70" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map.71" }
%"class.std::__1::map.71" = type { %"class.std::__1::__tree.72" }
%"class.std::__1::__tree.72" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.1406" }
%"struct.std::__1::pair.1406" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.269" }
%"class.gl::TypedResourceManager.269" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.270" }
%"class.gl::ResourceMap.270" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.289" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.272", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.285", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.287", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.272" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.276", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.273, i8, [3 x i8] }>
%union.anon.273 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.276" = type { %"class.std::__1::__vector_base.277" }
%"class.std::__1::__vector_base.277" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.278" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.283", i64, i64 }
%"class.gl::BindingPointer.283" = type { %"class.angle::BindingPointer.284" }
%"class.angle::BindingPointer.284" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.285" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.286", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.286" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.287" = type { %"struct.std::__1::array.288", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.288" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.289" = type { %"class.absl::container_internal::raw_hash_map.290" }
%"class.absl::container_internal::raw_hash_map.290" = type { %"class.absl::container_internal::raw_hash_set.291" }
%"class.absl::container_internal::raw_hash_set.291" = type { i8*, %"union.absl::container_internal::map_slot_type.292"*, i64, i64, %"class.absl::container_internal::CompressedTuple.293" }
%"union.absl::container_internal::map_slot_type.292" = type { %"struct.std::__1::pair.1410" }
%"struct.std::__1::pair.1410" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.293" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.298" }
%"class.gl::TypedResourceManager.298" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.299" }
%"class.gl::ResourceMap.299" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.300" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.300" = type { %"class.absl::container_internal::raw_hash_map.301" }
%"class.absl::container_internal::raw_hash_map.301" = type { %"class.absl::container_internal::raw_hash_set.302" }
%"class.absl::container_internal::raw_hash_set.302" = type { i8*, %"union.absl::container_internal::map_slot_type.303"*, i64, i64, %"class.absl::container_internal::CompressedTuple.304" }
%"union.absl::container_internal::map_slot_type.303" = type { %"struct.std::__1::pair.1412" }
%"struct.std::__1::pair.1412" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.304" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.305" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.305" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.309" }
%"class.gl::TypedResourceManager.309" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.310" }
%"class.gl::ResourceMap.310" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.313" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.312", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.312" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.313" = type { %"class.absl::container_internal::raw_hash_map.314" }
%"class.absl::container_internal::raw_hash_map.314" = type { %"class.absl::container_internal::raw_hash_set.315" }
%"class.absl::container_internal::raw_hash_set.315" = type { i8*, %"union.absl::container_internal::map_slot_type.316"*, i64, i64, %"class.absl::container_internal::CompressedTuple.317" }
%"union.absl::container_internal::map_slot_type.316" = type { %"struct.std::__1::pair.1414" }
%"struct.std::__1::pair.1414" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.317" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.322" }
%"class.gl::TypedResourceManager.322" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.323" }
%"class.gl::ResourceMap.323" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.324" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.324" = type { %"class.absl::container_internal::raw_hash_map.325" }
%"class.absl::container_internal::raw_hash_map.325" = type { %"class.absl::container_internal::raw_hash_set.326" }
%"class.absl::container_internal::raw_hash_set.326" = type { i8*, %"union.absl::container_internal::map_slot_type.327"*, i64, i64, %"class.absl::container_internal::CompressedTuple.328" }
%"union.absl::container_internal::map_slot_type.327" = type opaque
%"class.absl::container_internal::CompressedTuple.328" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.329" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.329" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.333" }
%"class.gl::TypedResourceManager.333" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.334" }
%"class.gl::ResourceMap.334" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.353" }
%"class.absl::flat_hash_map.353" = type { %"class.absl::container_internal::raw_hash_map.354" }
%"class.absl::container_internal::raw_hash_map.354" = type { %"class.absl::container_internal::raw_hash_set.355" }
%"class.absl::container_internal::raw_hash_set.355" = type { i8*, %"union.absl::container_internal::map_slot_type.356"*, i64, i64, %"class.absl::container_internal::CompressedTuple.357" }
%"union.absl::container_internal::map_slot_type.356" = type { %"struct.std::__1::pair.1416" }
%"struct.std::__1::pair.1416" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.357" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.362" }
%"class.gl::TypedResourceManager.362" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.374" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.365", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.366", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.344", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.365" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.absl::flat_hash_map.374" = type { %"class.absl::container_internal::raw_hash_map.375" }
%"class.absl::container_internal::raw_hash_map.375" = type { %"class.absl::container_internal::raw_hash_set.376" }
%"class.absl::container_internal::raw_hash_set.376" = type { i8*, %"union.absl::container_internal::map_slot_type.377"*, i64, i64, %"class.absl::container_internal::CompressedTuple.378" }
%"union.absl::container_internal::map_slot_type.377" = type { %"struct.std::__1::pair.1418" }
%"struct.std::__1::pair.1418" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.383" }
%"class.gl::ResourceMap.383" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.384" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.384" = type { %"class.absl::container_internal::raw_hash_map.385" }
%"class.absl::container_internal::raw_hash_map.385" = type { %"class.absl::container_internal::raw_hash_set.386" }
%"class.absl::container_internal::raw_hash_set.386" = type { i8*, %"union.absl::container_internal::map_slot_type.387"*, i64, i64, %"class.absl::container_internal::CompressedTuple.388" }
%"union.absl::container_internal::map_slot_type.387" = type opaque
%"class.absl::container_internal::CompressedTuple.388" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.389" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.393" }
%"class.gl::ResourceMap.393" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.394" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.394" = type { %"class.absl::container_internal::raw_hash_map.395" }
%"class.absl::container_internal::raw_hash_map.395" = type { %"class.absl::container_internal::raw_hash_set.396" }
%"class.absl::container_internal::raw_hash_set.396" = type { i8*, %"union.absl::container_internal::map_slot_type.397"*, i64, i64, %"class.absl::container_internal::CompressedTuple.398" }
%"union.absl::container_internal::map_slot_type.397" = type opaque
%"class.absl::container_internal::CompressedTuple.398" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.399" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.403" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.343, %"class.std::__1::vector.344", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.351", %"class.angle::BitSetT.166", %struct.Optional.352 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.335", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.166", %"class.std::__1::vector", i32, %"class.angle::BitSetT.166", %"class.angle::BitSetT.167", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.342", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.335" = type { %"class.std::__1::__vector_base.336" }
%"class.std::__1::__vector_base.336" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.337" }
%"class.std::__1::__compressed_pair.337" = type { %"struct.std::__1::__compressed_pair_elem.338" }
%"struct.std::__1::__compressed_pair_elem.338" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.343 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.351" = type { i64 }
%struct.Optional.352 = type { i8, %"class.angle::BitSetT.351" }
%"class.gl::BindingPointer.404" = type { %"class.angle::BindingPointer.405" }
%"class.angle::BindingPointer.405" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.406" = type { %"class.angle::BindingPointer.407" }
%"class.angle::BindingPointer.407" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.411" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.410, i32 }
%union.anon.410 = type { [4 x float] }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.430", %"struct.std::__1::array.431", %"struct.std::__1::array.433", %struct.Optional.435, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.344", %"class.angle::BitSetT.185", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.416", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.423", %"class.angle::BitSetT.185", %"class.angle::BitSetT.167", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185" }
%"class.std::__1::vector.416" = type { %"class.std::__1::__vector_base.417" }
%"class.std::__1::__vector_base.417" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.418" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.283", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.423" = type { %"class.std::__1::__vector_base.424" }
%"class.std::__1::__vector_base.424" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.425" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.283", %"class.angle::BitSetT.185" }
%"class.std::__1::__compressed_pair.425" = type { %"struct.std::__1::__compressed_pair_elem.426" }
%"struct.std::__1::__compressed_pair_elem.426" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.430" = type { i64 }
%"struct.std::__1::array.431" = type { [16 x %"class.angle::BitSetT.432"] }
%"class.angle::BitSetT.432" = type { i64 }
%"struct.std::__1::array.433" = type { [16 x %"class.angle::BitSetT.434"] }
%"class.angle::BitSetT.434" = type { i64 }
%struct.Optional.435 = type { i8, %"class.angle::BitSetT.430" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.436" = type { %"struct.std::__1::array.437" }
%"struct.std::__1::array.437" = type { [11 x %"class.std::__1::vector.438"] }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"class.gl::BindingPointer.440"*, %"class.gl::BindingPointer.440"*, %"class.std::__1::__compressed_pair.442" }
%"class.gl::BindingPointer.440" = type { %"class.angle::BindingPointer.441" }
%"class.angle::BindingPointer.441" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::BindingPointer.440"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.447" }
%"struct.std::__1::array.447" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.448" = type { %"class.std::__1::__vector_base.449" }
%"class.std::__1::__vector_base.449" = type { %"class.gl::BindingPointer.450"*, %"class.gl::BindingPointer.450"*, %"class.std::__1::__compressed_pair.452" }
%"class.gl::BindingPointer.450" = type { %"class.angle::BindingPointer.451" }
%"class.angle::BindingPointer.451" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.452" = type { %"struct.std::__1::__compressed_pair_elem.453" }
%"struct.std::__1::__compressed_pair_elem.453" = type { %"class.gl::BindingPointer.450"* }
%"class.std::__1::vector.457" = type { %"class.std::__1::__vector_base.458" }
%"class.std::__1::__vector_base.458" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.459" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.440", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.464" = type { %"struct.std::__1::array.465" }
%"struct.std::__1::array.465" = type { [7 x %"class.gl::BindingPointer.466"] }
%"class.gl::BindingPointer.466" = type { %"class.angle::BindingPointer.467" }
%"class.angle::BindingPointer.467" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.468" = type { %"struct.std::__1::array.469" }
%"struct.std::__1::array.469" = type { [13 x %"class.gl::BindingPointer.283"] }
%"class.std::__1::vector.470" = type { %"class.std::__1::__vector_base.471" }
%"class.std::__1::__vector_base.471" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.477" = type { %"struct.std::__1::array.186" }
%"class.angle::BitSetT.478" = type { i64 }
%"class.gl::BindingPointer.479" = type { %"class.angle::BindingPointer.480" }
%"class.angle::BindingPointer.480" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.482", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.482" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.470" }
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.492" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.488" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.483" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.492" = type { %"class.std::__1::__vector_base.493" }
%"class.std::__1::__vector_base.493" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.501" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.494" }
%"class.std::__1::vector.494" = type { %"class.std::__1::__vector_base.495" }
%"class.std::__1::__vector_base.495" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.496" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.501" = type { %"struct.std::__1::__compressed_pair_elem.502" }
%"struct.std::__1::__compressed_pair_elem.502" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.506" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.185", %"class.std::__1::vector.507", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.515", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.520", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.535", %"class.std::__1::vector.542", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.549", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.558", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.507" = type { %"class.std::__1::__vector_base.508" }
%"class.std::__1::__vector_base.508" = type { %"class.angle::BitSetT.509"*, %"class.angle::BitSetT.509"*, %"class.std::__1::__compressed_pair.510" }
%"class.angle::BitSetT.509" = type opaque
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.angle::BitSetT.509"* }
%"class.std::__1::vector.515" = type { i64*, i64, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.520" = type { %"class.std::__1::__vector_base.521" }
%"class.std::__1::__vector_base.521" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.522" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.527", i64 }
%"struct.std::__1::array.527" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.528", i32, i32 }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { float*, float*, %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { float* }
%"class.std::__1::vector.535" = type { %"class.std::__1::__vector_base.536" }
%"class.std::__1::__vector_base.536" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.537" }
%"class.std::__1::__compressed_pair.537" = type { %"struct.std::__1::__compressed_pair_elem.538" }
%"struct.std::__1::__compressed_pair_elem.538" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.542" = type { %"class.std::__1::__vector_base.543" }
%"class.std::__1::__vector_base.543" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.544" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.545" }
%"struct.std::__1::__compressed_pair_elem.545" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.549" = type { %"class.std::__1::__vector_base.550" }
%"class.std::__1::__vector_base.550" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.553" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.551", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.551" = type { %"class.angle::VectorBase.552" }
%"class.angle::VectorBase.552" = type { [4 x float] }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.558" = type { %"class.std::__1::__vector_base.559" }
%"class.std::__1::__vector_base.559" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.560" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.551" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.565" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.52" }
%"class.angle::BitSetT.566" = type { i32 }
%"class.std::__1::unique_ptr.567" = type { %"class.std::__1::__compressed_pair.568" }
%"class.std::__1::__compressed_pair.568" = type { %"struct.std::__1::__compressed_pair_elem.569" }
%"struct.std::__1::__compressed_pair_elem.569" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.573" = type { %"struct.std::__1::array.574" }
%"struct.std::__1::array.574" = type { [11 x %"class.gl::BindingPointer.440"] }
%"class.gl::ResourceMap.575" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.576" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.576" = type { %"class.absl::container_internal::raw_hash_map.577" }
%"class.absl::container_internal::raw_hash_map.577" = type { %"class.absl::container_internal::raw_hash_set.578" }
%"class.absl::container_internal::raw_hash_set.578" = type { i8*, %"union.absl::container_internal::map_slot_type.579"*, i64, i64, %"class.absl::container_internal::CompressedTuple.580" }
%"union.absl::container_internal::map_slot_type.579" = type opaque
%"class.absl::container_internal::CompressedTuple.580" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.585" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.586" }
%"class.absl::flat_hash_map.586" = type { %"class.absl::container_internal::raw_hash_map.587" }
%"class.absl::container_internal::raw_hash_map.587" = type { %"class.absl::container_internal::raw_hash_set.588" }
%"class.absl::container_internal::raw_hash_set.588" = type { i8*, %"union.absl::container_internal::map_slot_type.589"*, i64, i64, %"class.absl::container_internal::CompressedTuple.590" }
%"union.absl::container_internal::map_slot_type.589" = type opaque
%"class.absl::container_internal::CompressedTuple.590" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.591" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.591" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.595" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.596" }
%"class.absl::flat_hash_map.596" = type { %"class.absl::container_internal::raw_hash_map.597" }
%"class.absl::container_internal::raw_hash_map.597" = type { %"class.absl::container_internal::raw_hash_set.598" }
%"class.absl::container_internal::raw_hash_set.598" = type { i8*, %"union.absl::container_internal::map_slot_type.599"*, i64, i64, %"class.absl::container_internal::CompressedTuple.600" }
%"union.absl::container_internal::map_slot_type.599" = type opaque
%"class.absl::container_internal::CompressedTuple.600" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.601" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.601" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.605" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.606" }
%"class.absl::flat_hash_map.606" = type { %"class.absl::container_internal::raw_hash_map.607" }
%"class.absl::container_internal::raw_hash_map.607" = type { %"class.absl::container_internal::raw_hash_set.608" }
%"class.absl::container_internal::raw_hash_set.608" = type { i8*, %"union.absl::container_internal::map_slot_type.609"*, i64, i64, %"class.absl::container_internal::CompressedTuple.610" }
%"union.absl::container_internal::map_slot_type.609" = type opaque
%"class.absl::container_internal::CompressedTuple.610" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.611" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.611" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { i8**, i8**, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { i8** }
%"class.std::__1::unique_ptr.622" = type { %"class.std::__1::__compressed_pair.623" }
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.187", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.628", %"class.angle::PackedEnumMap.630", %"class.angle::PackedEnumMap.632", %"class.angle::PackedEnumMap.634", %"class.angle::PackedEnumMap.634", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.628" = type { %"struct.std::__1::array.629" }
%"struct.std::__1::array.629" = type { [16 x i8] }
%"class.angle::PackedEnumMap.630" = type { %"struct.std::__1::array.631" }
%"struct.std::__1::array.631" = type { [12 x i8] }
%"class.angle::PackedEnumMap.632" = type { %"struct.std::__1::array.633" }
%"struct.std::__1::array.633" = type { [4 x i8] }
%"class.angle::PackedEnumMap.634" = type { %"struct.std::__1::array.635" }
%"struct.std::__1::array.635" = type { [19 x i32] }
%"class.angle::BitSetT.342" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.344" = type { %"class.std::__1::__vector_base.345" }
%"class.std::__1::__vector_base.345" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.346" }
%"class.std::__1::__compressed_pair.346" = type { %"struct.std::__1::__compressed_pair_elem.347" }
%"struct.std::__1::__compressed_pair_elem.347" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.636 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.std::__1::shared_ptr.637" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::ContextVk" = type { %"class.rx::ContextImpl", %"class.rx::vk::Context", %"class.rx::MultisampleTextureInitializer", %"struct.std::__1::array.774", %"struct.std::__1::array.775", %"class.rx::vk::priv::SecondaryCommandBuffer"*, %"class.rx::vk::PipelineHelper"*, %"class.rx::vk::ObjectAndSerial.757"*, i8, %"class.rx::WindowSurfaceVk"*, i32, i32, %"class.std::__1::unique_ptr.799", %"class.angle::BitSetT.792", %"class.angle::PackedEnumMap.805", %"class.angle::PackedEnumMap.807", %"class.angle::PackedEnumMap.824", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.angle::BitSetT.185", %"class.rx::VertexArrayVk"*, %"class.rx::FramebufferVk"*, %"class.rx::ProgramVk"*, %"class.rx::ProgramPipelineVk"*, %"class.rx::ProgramExecutableVk"*, i8*, i64, i64, %"class.angle::PackedEnumMap.834", i32, i32, %union.VkClearValue, %union.VkClearValue, i64, %"class.rx::IncompleteTextureSet", i8, i8, i8, i8, i8, %"class.angle::PackedEnumMap.838", %"struct.std::__1::array.871", %"class.rx::vk::TextureDescriptorDesc", %"class.rx::vk::ShaderBuffersDescriptorDesc", %"struct.std::__1::array.876", %"class.angle::BitSetT.185", %"struct.std::__1::array.877", %"class.rx::vk::CommandPool", %"class.std::__1::vector.879", %"class.rx::RenderPassCache", %"class.rx::vk::CommandBufferHelper"*, %"class.rx::vk::CommandBufferHelper"*, %"class.angle::FastUnorderedSet", %"class.rx::vk::ShaderLibrary", %"class.rx::UtilsVk", i8, [7 x i8], %"class.rx::vk::DynamicQueryPool", %"class.std::__1::vector.995", %"class.std::__1::vector.1003", i8, i8, i8, %"class.std::__1::vector.1010", %"class.std::__1::vector", %"struct.rx::ContextVk::GpuClockSyncInfo", i64, %"struct.rx::vk::PerfCounters", %"struct.rx::ContextVkPerfCounters", %"struct.rx::ContextVkPerfCounters", %"class.angle::BitSetT.187", %"class.rx::vk::ResourceUseList", i8, %"class.std::__1::vector.1025", %"class.std::__1::vector.1032", %"class.std::__1::vector.1039", %"class.rx::ShareGroupVk"*, %"class.rx::vk::BufferHelper", %"class.rx::vk::DynamicBuffer", %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.144", %"class.std::__1::vector.144" }
%"class.rx::vk::Context" = type { i32 (...)**, %"class.rx::RendererVk"* }
%"class.rx::RendererVk" = type { %"class.egl::Display"*, i8, [7 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"struct.angle::FeaturesVk", %struct.VkInstance_T*, i8, i8, i8, i32, %struct.VkDebugUtilsMessengerEXT_T*, %struct.VkDebugReportCallbackEXT_T*, %struct.VkPhysicalDevice_T*, %struct.VkPhysicalDeviceProperties, %struct.VkPhysicalDeviceFeatures, %struct.VkPhysicalDeviceLineRasterizationFeaturesEXT, %struct.VkPhysicalDeviceProvokingVertexFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT, %struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT, %struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT, %struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT, %struct.VkPhysicalDeviceSubgroupProperties, %struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT, %struct.VkDeviceDeviceMemoryReportCreateInfoEXT, %struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT, %struct.VkPhysicalDeviceShaderFloat16Int8Features, %struct.VkPhysicalDeviceDepthStencilResolveProperties, %struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT, %struct.VkPhysicalDeviceDriverProperties, %struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT, %struct.VkExternalFenceProperties, %struct.VkExternalSemaphoreProperties, %struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures, %"class.std::__1::vector.1130", %"class.angle::PackedEnumMap.1137", i32, i32, i64, i64, i32, %struct.VkDevice_T*, %"class.rx::SerialFactoryBase.1139", i8, %"class.std::__1::mutex", %"class.std::__1::vector.1141", %"class.rx::vk::MemoryProperties", %"class.rx::vk::FormatTable", %"class.std::__1::mutex", %"class.rx::vk::PipelineCache", i32, i8, i8, %"class.angle::PackedEnumMap.1150", %"class.std::__1::basic_string", i32, %"class.rx::DebugAnnotatorVk", i32, %"class.rx::vk::CommandPool", %"class.std::__1::deque.1152", %"class.std::__1::mutex", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::vector.1199", %"class.rx::vk::CommandProcessor", %"class.rx::vk::Allocator", %"class.rx::SamplerCache", %"class.rx::SamplerYcbcrConversionCache", %"class.rx::vk::ActiveHandleCounter", %"class.rx::vk::ResourceSerialFactory", %"class.rx::vk::MemoryReport", %"class.angle::PackedEnumMap.1348", i32, %"class.std::__1::shared_ptr.1350" }
%"struct.angle::FeaturesVk" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.std::__1::array.1129", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.1118" }
%"class.std::__1::map.1118" = type { %"class.std::__1::__tree.1119" }
%"class.std::__1::__tree.1119" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1120", %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::array.1129" = type { [4 x %"struct.angle::Feature"] }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%struct.VkInstance_T = type opaque
%struct.VkDebugUtilsMessengerEXT_T = type opaque
%struct.VkDebugReportCallbackEXT_T = type opaque
%struct.VkPhysicalDevice_T = type opaque
%struct.VkPhysicalDeviceProperties = type { i32, i32, i32, i32, i32, [256 x i8], [16 x i8], %struct.VkPhysicalDeviceLimits, %struct.VkPhysicalDeviceSparseProperties }
%struct.VkPhysicalDeviceLimits = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32, [3 x i32], i32, i32, i32, i32, i32, float, float, i32, [2 x i32], [2 x float], i32, i64, i64, i64, i64, i32, i32, i32, i32, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, [2 x float], [2 x float], float, float, i32, i32, i64, i64, i64 }
%struct.VkPhysicalDeviceSparseProperties = type { i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceFeatures = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceLineRasterizationFeaturesEXT = type { i32, i8*, i32, i32, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceProvokingVertexFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceVertexAttributeDivisorPropertiesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceTransformFeedbackFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceIndexTypeUint8FeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceSubgroupProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceDeviceMemoryReportFeaturesEXT = type { i32, i8*, i32 }
%struct.VkDeviceDeviceMemoryReportCreateInfoEXT = type { i32, i8*, i32, void (%struct.VkDeviceMemoryReportCallbackDataEXT*, i8*)*, i8* }
%struct.VkDeviceMemoryReportCallbackDataEXT = type { i32, i8*, i32, i32, i64, i64, i32, i64, i32 }
%struct.VkPhysicalDeviceExternalMemoryHostPropertiesEXT = type { i32, i8*, i64 }
%struct.VkPhysicalDeviceShaderFloat16Int8Features = type { i32, i8*, i32, i32 }
%struct.VkPhysicalDeviceDepthStencilResolveProperties = type { i32, i8*, i32, i32, i32, i32 }
%struct.VkPhysicalDeviceMultisampledRenderToSingleSampledFeaturesEXT = type { i32, i8*, i32 }
%struct.VkPhysicalDeviceDriverProperties = type { i32, i8*, i32, [256 x i8], [256 x i8], %struct.VkConformanceVersion }
%struct.VkConformanceVersion = type { i8, i8, i8, i8 }
%struct.VkPhysicalDeviceCustomBorderColorFeaturesEXT = type { i32, i8*, i32, i32 }
%struct.VkExternalFenceProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkExternalSemaphoreProperties = type { i32, i8*, i32, i32, i32 }
%struct.VkPhysicalDeviceSamplerYcbcrConversionFeatures = type { i32, i8*, i32 }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { %struct.VkQueueFamilyProperties*, %struct.VkQueueFamilyProperties*, %"class.std::__1::__compressed_pair.1132" }
%struct.VkQueueFamilyProperties = type { i32, i32, i32, %struct.VkExtent3D }
%struct.VkExtent3D = type { i32, i32, i32 }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %struct.VkQueueFamilyProperties* }
%"class.angle::PackedEnumMap.1137" = type { %"struct.std::__1::array.1138" }
%"struct.std::__1::array.1138" = type { [3 x i8] }
%struct.VkDevice_T = type opaque
%"class.rx::SerialFactoryBase.1139" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1140" }
%"struct.std::__1::__atomic_base.1140" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::vector.1141" = type { %"class.std::__1::__vector_base.1142" }
%"class.std::__1::__vector_base.1142" = type { %"class.rx::vk::SharedGarbage"*, %"class.rx::vk::SharedGarbage"*, %"class.std::__1::__compressed_pair.1143" }
%"class.rx::vk::SharedGarbage" = type { %"class.rx::vk::SharedResourceUse", %"class.std::__1::vector.879" }
%"class.rx::vk::SharedResourceUse" = type { %"struct.rx::vk::ResourceUse"* }
%"struct.rx::vk::ResourceUse" = type { i32, %"class.rx::Serial" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.rx::vk::SharedGarbage"* }
%"class.rx::vk::MemoryProperties" = type { %struct.VkPhysicalDeviceMemoryProperties }
%struct.VkPhysicalDeviceMemoryProperties = type { i32, [32 x %struct.VkMemoryType], i32, [16 x %struct.VkMemoryHeap] }
%struct.VkMemoryType = type { i32, i32 }
%struct.VkMemoryHeap = type { i64, i32 }
%"class.rx::vk::FormatTable" = type { [8 x i8], %"struct.std::__1::array.1148" }
%"struct.std::__1::array.1148" = type { [227 x %"struct.rx::vk::Format"] }
%"struct.rx::vk::Format" = type <{ i32, i32, i32, i32, i32, [4 x i8], void (i64, i64, i64, i8*, i64, i64)*, { void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, i8 } (i32)*, void (i8*, i64, i64, i8*)*, void (i8*, i64, i64, i8*)*, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.rx::vk::PipelineCache" = type { %"class.rx::vk::WrappedObject.1149" }
%"class.rx::vk::WrappedObject.1149" = type { %struct.VkPipelineCache_T* }
%struct.VkPipelineCache_T = type opaque
%"class.angle::PackedEnumMap.1150" = type { %"struct.std::__1::array.1151" }
%"struct.std::__1::array.1151" = type { [227 x %struct.VkFormatProperties] }
%struct.VkFormatProperties = type { i32, i32, i32 }
%"class.rx::DebugAnnotatorVk" = type { %"class.angle::LoggingAnnotator" }
%"class.angle::LoggingAnnotator" = type { %"class.gl::DebugAnnotator" }
%"class.gl::DebugAnnotator" = type { i32 (...)** }
%"class.std::__1::deque.1152" = type { %"class.std::__1::__deque_base.1153" }
%"class.std::__1::__deque_base.1153" = type { %"struct.std::__1::__split_buffer.1154", i64, %"class.std::__1::__compressed_pair.1161" }
%"struct.std::__1::__split_buffer.1154" = type { %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"struct.rx::RendererVk::PendingOneOffCommands"**, %"class.std::__1::__compressed_pair.1156" }
%"struct.rx::RendererVk::PendingOneOffCommands" = type { %"class.rx::Serial", %"class.rx::vk::priv::CommandBuffer" }
%"class.rx::vk::priv::CommandBuffer" = type { %"class.rx::vk::WrappedObject.1155" }
%"class.rx::vk::WrappedObject.1155" = type { %struct.VkCommandBuffer_T* }
%struct.VkCommandBuffer_T = type opaque
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"struct.rx::RendererVk::PendingOneOffCommands"** }
%"class.std::__1::__compressed_pair.1161" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::vk::CommandQueue" = type { %"class.rx::vk::CommandQueueInterface", %"class.std::__1::vector.1165", %"class.std::__1::vector.1173", %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::PersistentCommandPool", %"class.rx::SerialFactoryBase.1139", %"class.rx::Serial", %"class.rx::Serial", %"class.rx::Serial", %"class.angle::PackedEnumMap.1189", %"class.rx::vk::FenceRecycler" }
%"class.rx::vk::CommandQueueInterface" = type { i32 (...)** }
%"class.std::__1::vector.1165" = type { %"class.std::__1::__vector_base.1166" }
%"class.std::__1::__vector_base.1166" = type { %"class.rx::vk::ObjectAndSerial.1167"*, %"class.rx::vk::ObjectAndSerial.1167"*, %"class.std::__1::__compressed_pair.1168" }
%"class.rx::vk::ObjectAndSerial.1167" = type opaque
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.1169" }
%"struct.std::__1::__compressed_pair_elem.1169" = type { %"class.rx::vk::ObjectAndSerial.1167"* }
%"class.std::__1::vector.1173" = type { %"class.std::__1::__vector_base.1174" }
%"class.std::__1::__vector_base.1174" = type { %"struct.rx::vk::CommandBatch"*, %"struct.rx::vk::CommandBatch"*, %"class.std::__1::__compressed_pair.1177" }
%"struct.rx::vk::CommandBatch" = type { [8 x i8], %"class.rx::vk::priv::CommandBuffer", %"class.rx::vk::CommandPool", %"class.rx::vk::Shared.1175", %"class.rx::Serial" }
%"class.rx::vk::Shared.1175" = type { %"class.rx::vk::RefCounted.1176"* }
%"class.rx::vk::RefCounted.1176" = type { i32, %"class.rx::vk::Fence" }
%"class.rx::vk::Fence" = type { %"class.rx::vk::WrappedObject.1193" }
%"class.rx::vk::WrappedObject.1193" = type { %struct.VkFence_T* }
%struct.VkFence_T = type opaque
%"class.std::__1::__compressed_pair.1177" = type { %"struct.std::__1::__compressed_pair_elem.1178" }
%"struct.std::__1::__compressed_pair_elem.1178" = type { %"struct.rx::vk::CommandBatch"* }
%"class.rx::vk::PersistentCommandPool" = type { %"class.std::__1::vector.1182", %"class.rx::vk::CommandPool" }
%"class.std::__1::vector.1182" = type { %"class.std::__1::__vector_base.1183" }
%"class.std::__1::__vector_base.1183" = type { %"class.rx::vk::priv::CommandBuffer"*, %"class.rx::vk::priv::CommandBuffer"*, %"class.std::__1::__compressed_pair.1184" }
%"class.std::__1::__compressed_pair.1184" = type { %"struct.std::__1::__compressed_pair_elem.1185" }
%"struct.std::__1::__compressed_pair_elem.1185" = type { %"class.rx::vk::priv::CommandBuffer"* }
%"class.angle::PackedEnumMap.1189" = type { %"struct.std::__1::array.1190" }
%"struct.std::__1::array.1190" = type { [3 x %struct.VkQueue_T*] }
%struct.VkQueue_T = type opaque
%"class.rx::vk::FenceRecycler" = type { %"class.std::__1::mutex", %"class.rx::vk::Recycler" }
%"class.rx::vk::Recycler" = type { %"class.std::__1::vector.1191" }
%"class.std::__1::vector.1191" = type { %"class.std::__1::__vector_base.1192" }
%"class.std::__1::__vector_base.1192" = type { %"class.rx::vk::Fence"*, %"class.rx::vk::Fence"*, %"class.std::__1::__compressed_pair.1194" }
%"class.std::__1::__compressed_pair.1194" = type { %"struct.std::__1::__compressed_pair_elem.1195" }
%"struct.std::__1::__compressed_pair_elem.1195" = type { %"class.rx::vk::Fence"* }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.1199" = type { %"class.std::__1::__vector_base.1200" }
%"class.std::__1::__vector_base.1200" = type { %"class.rx::vk::CommandBufferHelper"**, %"class.rx::vk::CommandBufferHelper"**, %"class.std::__1::__compressed_pair.1201" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.1202" }
%"struct.std::__1::__compressed_pair_elem.1202" = type { %"class.rx::vk::CommandBufferHelper"** }
%"class.rx::vk::CommandProcessor" = type { %"class.rx::vk::Context", %"class.rx::vk::CommandQueueInterface", %"class.std::__1::queue", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::condition_variable", i8, %"class.rx::vk::CommandPool", %"class.rx::vk::CommandQueue", %"class.std::__1::mutex", %"class.std::__1::mutex", %"class.std::__1::queue.1231", %"class.std::__1::mutex", %"class.std::__1::condition_variable", %"class.std::__1::map.1244", %"class.std::__1::thread" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.1206" }
%"class.std::__1::deque.1206" = type { %"class.std::__1::__deque_base.1207" }
%"class.std::__1::__deque_base.1207" = type { %"struct.std::__1::__split_buffer.1208", i64, %"class.std::__1::__compressed_pair.1223" }
%"struct.std::__1::__split_buffer.1208" = type { %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.rx::vk::CommandProcessorTask"**, %"class.std::__1::__compressed_pair.1218" }
%"class.rx::vk::CommandProcessorTask" = type <{ i32, [4 x i8], %"class.rx::vk::RenderPass"*, %"class.rx::vk::CommandBufferHelper"*, %"class.std::__1::vector.1010", %"class.std::__1::vector", %"class.rx::vk::Semaphore"*, %"class.std::__1::vector.879", %"class.rx::Serial", %struct.VkPresentInfoKHR, %struct.VkSwapchainKHR_T*, %struct.VkSemaphore_T*, i32, [4 x i8], %struct.VkPresentRegionKHR, %struct.VkPresentRegionsKHR, %"class.std::__1::vector.1211", %struct.VkCommandBuffer_T*, %"class.rx::vk::Fence"*, i8, [7 x i8] }>
%"class.rx::vk::RenderPass" = type { %"class.rx::vk::WrappedObject.1209" }
%"class.rx::vk::WrappedObject.1209" = type { %struct.VkRenderPass_T* }
%struct.VkRenderPass_T = type opaque
%"class.rx::vk::Semaphore" = type { %"class.rx::vk::WrappedObject.1210" }
%"class.rx::vk::WrappedObject.1210" = type { %struct.VkSemaphore_T* }
%struct.VkPresentInfoKHR = type { i32, i8*, i32, %struct.VkSemaphore_T**, i32, %struct.VkSwapchainKHR_T**, i32*, i32* }
%struct.VkSwapchainKHR_T = type opaque
%struct.VkSemaphore_T = type opaque
%struct.VkPresentRegionKHR = type { i32, %struct.VkRectLayerKHR* }
%struct.VkRectLayerKHR = type { %struct.VkOffset2D, %struct.VkExtent2D, i32 }
%struct.VkOffset2D = type { i32, i32 }
%struct.VkExtent2D = type { i32, i32 }
%struct.VkPresentRegionsKHR = type { i32, i8*, i32, %struct.VkPresentRegionKHR* }
%"class.std::__1::vector.1211" = type { %"class.std::__1::__vector_base.1212" }
%"class.std::__1::__vector_base.1212" = type { %struct.VkRectLayerKHR*, %struct.VkRectLayerKHR*, %"class.std::__1::__compressed_pair.1213" }
%"class.std::__1::__compressed_pair.1213" = type { %"struct.std::__1::__compressed_pair_elem.1214" }
%"struct.std::__1::__compressed_pair_elem.1214" = type { %struct.VkRectLayerKHR* }
%"class.std::__1::__compressed_pair.1218" = type { %"struct.std::__1::__compressed_pair_elem.1219" }
%"struct.std::__1::__compressed_pair_elem.1219" = type { %"class.rx::vk::CommandProcessorTask"** }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::queue.1231" = type { %"class.std::__1::deque.1232" }
%"class.std::__1::deque.1232" = type { %"class.std::__1::__deque_base.1233" }
%"class.std::__1::__deque_base.1233" = type { %"struct.std::__1::__split_buffer.1234", i64, %"class.std::__1::__compressed_pair.1240" }
%"struct.std::__1::__split_buffer.1234" = type { %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"struct.rx::vk::Error"**, %"class.std::__1::__compressed_pair.1235" }
%"struct.rx::vk::Error" = type { i32, i8*, i8*, i32 }
%"class.std::__1::__compressed_pair.1235" = type { %"struct.std::__1::__compressed_pair_elem.1236" }
%"struct.std::__1::__compressed_pair_elem.1236" = type { %"struct.rx::vk::Error"** }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::condition_variable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1227, %union.anon.1229, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1227 = type { i64 }
%union.anon.1229 = type { i64 }
%"class.std::__1::map.1244" = type { %"class.std::__1::__tree.1245" }
%"class.std::__1::__tree.1245" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1246", %"class.std::__1::__compressed_pair.1250" }
%"class.std::__1::__compressed_pair.1246" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1250" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::thread" = type { i64 }
%"class.rx::vk::Allocator" = type { %"class.rx::vk::WrappedObject.1255" }
%"class.rx::vk::WrappedObject.1255" = type { %struct.VmaAllocator_T* }
%struct.VmaAllocator_T = type opaque
%"class.rx::SamplerCache" = type { %"class.rx::HasCacheStats.1256", %"class.std::__1::unordered_map.1257" }
%"class.rx::HasCacheStats.1256" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1257" = type { %"class.std::__1::__hash_table.1258" }
%"class.std::__1::__hash_table.1258" = type <{ %"class.std::__1::unique_ptr.1259", %"class.std::__1::__compressed_pair.1269", %"class.std::__1::__compressed_pair.1274", %"class.std::__1::__compressed_pair.1278", [4 x i8] }>
%"class.std::__1::unique_ptr.1259" = type { %"class.std::__1::__compressed_pair.1260" }
%"class.std::__1::__compressed_pair.1260" = type { %"struct.std::__1::__compressed_pair_elem.1261", %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1261" = type { %"struct.std::__1::__hash_node_base.1262"** }
%"struct.std::__1::__hash_node_base.1262" = type { %"struct.std::__1::__hash_node_base.1262"* }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.std::__1::__bucket_list_deallocator.1264" }
%"class.std::__1::__bucket_list_deallocator.1264" = type { %"class.std::__1::__compressed_pair.1265" }
%"class.std::__1::__compressed_pair.1265" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1269" = type { %"struct.std::__1::__compressed_pair_elem.1270" }
%"struct.std::__1::__compressed_pair_elem.1270" = type { %"struct.std::__1::__hash_node_base.1262" }
%"class.std::__1::__compressed_pair.1274" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1278" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"class.rx::SamplerYcbcrConversionCache" = type { %"class.rx::HasCacheStats.1284", %"class.std::__1::unordered_map.1285" }
%"class.rx::HasCacheStats.1284" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1285" = type { %"class.std::__1::__hash_table.1286" }
%"class.std::__1::__hash_table.1286" = type <{ %"class.std::__1::unique_ptr.1287", %"class.std::__1::__compressed_pair.1297", %"class.std::__1::__compressed_pair.1302", %"class.std::__1::__compressed_pair.1307", [4 x i8] }>
%"class.std::__1::unique_ptr.1287" = type { %"class.std::__1::__compressed_pair.1288" }
%"class.std::__1::__compressed_pair.1288" = type { %"struct.std::__1::__compressed_pair_elem.1289", %"struct.std::__1::__compressed_pair_elem.1291" }
%"struct.std::__1::__compressed_pair_elem.1289" = type { %"struct.std::__1::__hash_node_base.1290"** }
%"struct.std::__1::__hash_node_base.1290" = type { %"struct.std::__1::__hash_node_base.1290"* }
%"struct.std::__1::__compressed_pair_elem.1291" = type { %"class.std::__1::__bucket_list_deallocator.1292" }
%"class.std::__1::__bucket_list_deallocator.1292" = type { %"class.std::__1::__compressed_pair.1293" }
%"class.std::__1::__compressed_pair.1293" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"struct.std::__1::__hash_node_base.1290" }
%"class.std::__1::__compressed_pair.1302" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"class.rx::vk::ActiveHandleCounter" = type { %"class.angle::PackedEnumMap.1313", %"class.angle::PackedEnumMap.1313" }
%"class.angle::PackedEnumMap.1313" = type { %"struct.std::__1::array.1314" }
%"struct.std::__1::array.1314" = type { [24 x i32] }
%"class.rx::vk::ResourceSerialFactory" = type { %"struct.std::__1::atomic.1315" }
%"struct.std::__1::atomic.1315" = type { %"struct.std::__1::__atomic_base.1316" }
%"struct.std::__1::__atomic_base.1316" = type { %"struct.std::__1::__atomic_base.1317" }
%"struct.std::__1::__atomic_base.1317" = type { %"struct.std::__1::__cxx_atomic_impl.1318" }
%"struct.std::__1::__cxx_atomic_impl.1318" = type { %"struct.std::__1::__cxx_atomic_base_impl.1319" }
%"struct.std::__1::__cxx_atomic_base_impl.1319" = type { i32 }
%"class.rx::vk::MemoryReport" = type { %"class.std::__1::mutex", i64, i64, %"class.absl::flat_hash_map.1320", i64, i64, %"class.absl::flat_hash_map.1335" }
%"class.absl::flat_hash_map.1320" = type { %"class.absl::container_internal::raw_hash_map.1321" }
%"class.absl::container_internal::raw_hash_map.1321" = type { %"class.absl::container_internal::raw_hash_set.1322" }
%"class.absl::container_internal::raw_hash_set.1322" = type { i8*, %"union.absl::container_internal::map_slot_type.1323"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1324" }
%"union.absl::container_internal::map_slot_type.1323" = type opaque
%"class.absl::container_internal::CompressedTuple.1324" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1325" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1325" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::flat_hash_map.1335" = type { %"class.absl::container_internal::raw_hash_map.1336" }
%"class.absl::container_internal::raw_hash_map.1336" = type { %"class.absl::container_internal::raw_hash_set.1337" }
%"class.absl::container_internal::raw_hash_set.1337" = type { i8*, %"union.absl::container_internal::map_slot_type.1338"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1339" }
%"union.absl::container_internal::map_slot_type.1338" = type opaque
%"class.absl::container_internal::CompressedTuple.1339" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1340" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1340" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.angle::PackedEnumMap.1348" = type { %"struct.std::__1::array.1349" }
%"struct.std::__1::array.1349" = type { [12 x %"class.rx::CacheStats"] }
%"class.std::__1::shared_ptr.1350" = type { %"class.rx::WaitableCompressEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::WaitableCompressEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.1351" }
%"class.std::__1::shared_ptr.1351" = type { %"class.angle::WaitableEvent"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WaitableEvent" = type { i32 (...)**, %"class.std::__1::shared_ptr.637" }
%"class.rx::MultisampleTextureInitializer" = type { i32 (...)** }
%"struct.std::__1::array.774" = type { [16 x { i64, i64 }] }
%"struct.std::__1::array.775" = type { [16 x { i64, i64 }] }
%"class.rx::vk::priv::SecondaryCommandBuffer" = type { i8, %"class.std::__1::vector.776", %"class.angle::PoolAllocator"*, i8*, i64 }
%"class.std::__1::vector.776" = type { %"class.std::__1::__vector_base.777" }
%"class.std::__1::__vector_base.777" = type { %"struct.rx::vk::priv::CommandHeader"**, %"struct.rx::vk::priv::CommandHeader"**, %"class.std::__1::__compressed_pair.778" }
%"struct.rx::vk::priv::CommandHeader" = type { i16, i16 }
%"class.std::__1::__compressed_pair.778" = type { %"struct.std::__1::__compressed_pair_elem.779" }
%"struct.std::__1::__compressed_pair_elem.779" = type { %"struct.rx::vk::priv::CommandHeader"** }
%"class.angle::PoolAllocator" = type <{ i64, i64, i64, i64, i64, %"struct.angle::PoolAllocator::Header"*, %"struct.angle::PoolAllocator::Header"*, %"class.std::__1::vector.783", i32, [4 x i8], i64, i8, [7 x i8] }>
%"struct.angle::PoolAllocator::Header" = type { %"struct.angle::PoolAllocator::Header"*, i64 }
%"class.std::__1::vector.783" = type { %"class.std::__1::__vector_base.784" }
%"class.std::__1::__vector_base.784" = type { %"struct.angle::PoolAllocator::AllocState"*, %"struct.angle::PoolAllocator::AllocState"*, %"class.std::__1::__compressed_pair.785" }
%"struct.angle::PoolAllocator::AllocState" = type { i64, %"struct.angle::PoolAllocator::Header"* }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"struct.angle::PoolAllocator::AllocState"* }
%"class.rx::vk::PipelineHelper" = type { %"class.std::__1::vector.790", %"class.rx::Serial", %"class.rx::vk::Pipeline" }
%"class.std::__1::vector.790" = type { %"class.std::__1::__vector_base.791" }
%"class.std::__1::__vector_base.791" = type { %"struct.rx::vk::GraphicsPipelineTransition"*, %"struct.rx::vk::GraphicsPipelineTransition"*, %"class.std::__1::__compressed_pair.794" }
%"struct.rx::vk::GraphicsPipelineTransition" = type { %"class.angle::BitSetT.792", %"class.rx::vk::GraphicsPipelineDesc"*, %"class.rx::vk::PipelineHelper"* }
%"class.rx::vk::GraphicsPipelineDesc" = type { %"struct.rx::vk::VertexInputAttributes", %"class.rx::vk::RenderPassDesc", %"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo", %"struct.rx::vk::PackedDepthStencilStateInfo", %"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo", %struct.VkViewport, %"struct.rx::vk::PackedScissor", %"struct.rx::vk::PackedExtent" }
%"struct.rx::vk::VertexInputAttributes" = type { [16 x %"struct.rx::vk::PackedAttribDesc"] }
%"struct.rx::vk::PackedAttribDesc" = type { i8, i8, i16, i16 }
%"class.rx::vk::RenderPassDesc" = type { i8, %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"struct.std::__1::array.793" }
%"struct.std::__1::array.793" = type { [9 x i8] }
%"struct.rx::vk::PackedRasterizationAndMultisampleStateInfo" = type { %"struct.rx::vk::RasterizationStateBits", float, [2 x i32], float, float, float, float }
%"struct.rx::vk::RasterizationStateBits" = type { i32 }
%"struct.rx::vk::PackedDepthStencilStateInfo" = type { %"struct.rx::vk::DepthStencilEnableFlags", i8, i8, %"struct.rx::vk::DepthCompareOpAndSurfaceRotation", float, float, %"struct.rx::vk::PackedStencilOpState", %"struct.rx::vk::PackedStencilOpState" }
%"struct.rx::vk::DepthStencilEnableFlags" = type { i8 }
%"struct.rx::vk::DepthCompareOpAndSurfaceRotation" = type { i8 }
%"struct.rx::vk::PackedStencilOpState" = type { %"struct.rx::vk::StencilOps", i8, i8 }
%"struct.rx::vk::StencilOps" = type { i16 }
%"struct.rx::vk::PackedInputAssemblyAndColorBlendStateInfo" = type { [4 x i8], [8 x %"struct.rx::vk::PackedColorBlendAttachmentState"], [4 x float], %"struct.rx::vk::LogicOpState", i8, %"struct.rx::vk::PrimitiveState" }
%"struct.rx::vk::PackedColorBlendAttachmentState" = type { i32 }
%"struct.rx::vk::LogicOpState" = type { i8 }
%"struct.rx::vk::PrimitiveState" = type { i16 }
%struct.VkViewport = type { float, float, float, float, float, float }
%"struct.rx::vk::PackedScissor" = type { i16, i16, i16, i16 }
%"struct.rx::vk::PackedExtent" = type { i16, i16 }
%"class.std::__1::__compressed_pair.794" = type { %"struct.std::__1::__compressed_pair_elem.795" }
%"struct.std::__1::__compressed_pair_elem.795" = type { %"struct.rx::vk::GraphicsPipelineTransition"* }
%"class.rx::WindowSurfaceVk" = type opaque
%"class.std::__1::unique_ptr.799" = type { %"class.std::__1::__compressed_pair.800" }
%"class.std::__1::__compressed_pair.800" = type { %"struct.std::__1::__compressed_pair_elem.801" }
%"struct.std::__1::__compressed_pair_elem.801" = type { %"class.rx::vk::GraphicsPipelineDesc"* }
%"class.angle::BitSetT.792" = type { i64 }
%"class.angle::PackedEnumMap.805" = type { %"struct.std::__1::array.806" }
%"struct.std::__1::array.806" = type { [2 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.angle::PackedEnumMap.807" = type { %"struct.std::__1::array.808" }
%"struct.std::__1::array.808" = type { [7 x %"class.rx::vk::DynamicQueryPool"] }
%"class.angle::PackedEnumMap.824" = type { %"struct.std::__1::array.825" }
%"struct.std::__1::array.825" = type { [7 x %"class.rx::QueryVk"*] }
%"class.rx::QueryVk" = type <{ %"class.rx::QueryImpl.base", [7 x i8], %"class.rx::vk::Shared", %"class.std::__1::vector.827", %"class.rx::vk::QueryHelper", i64, i64, i8, [7 x i8] }>
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"class.rx::vk::Shared" = type { %"class.rx::vk::RefCounted.826"* }
%"class.rx::vk::RefCounted.826" = type { i32, [4 x i8], %"class.rx::vk::QueryHelper" }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { %"class.rx::vk::Shared"*, %"class.rx::vk::Shared"*, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { %"class.rx::vk::Shared"* }
%"class.rx::vk::QueryHelper" = type <{ %"class.rx::vk::Resource", %"class.rx::vk::DynamicQueryPool"*, i64, i32, [4 x i8] }>
%"class.rx::vk::Resource" = type { i32 (...)**, %"class.rx::vk::SharedResourceUse" }
%"class.rx::VertexArrayVk" = type opaque
%"class.rx::FramebufferVk" = type opaque
%"class.angle::PackedEnumMap.834" = type { %"struct.std::__1::array.835" }
%"struct.std::__1::array.835" = type { [3 x i32] }
%union.VkClearValue = type { %union.VkClearColorValue }
%union.VkClearColorValue = type { [4 x float] }
%"class.rx::IncompleteTextureSet" = type { %"class.angle::PackedEnumMap.836", %"class.gl::Buffer"* }
%"class.angle::PackedEnumMap.836" = type { %"struct.std::__1::array.837" }
%"struct.std::__1::array.837" = type { [4 x %"class.angle::PackedEnumMap.573"] }
%"class.angle::PackedEnumMap.838" = type { %"struct.std::__1::array.839" }
%"struct.std::__1::array.839" = type { [2 x %"struct.rx::ContextVk::DriverUniformsDescriptorSet"] }
%"struct.rx::ContextVk::DriverUniformsDescriptorSet" = type { %"class.rx::vk::DynamicBuffer", %struct.VkDescriptorSet_T*, i32, %"class.rx::vk::BindingPointer.697", %"class.rx::vk::BindingPointer.701", %"class.rx::DriverUniformsDescriptorSetCache" }
%"class.rx::DriverUniformsDescriptorSetCache" = type { %"class.rx::HasCacheStats.856", %"class.angle::FastIntegerMap" }
%"class.rx::HasCacheStats.856" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.angle::FastIntegerMap" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.864" }
%"class.angle::FastIntegerSet" = type { %"class.std::__1::vector.857" }
%"class.std::__1::vector.857" = type { %"class.std::__1::__vector_base.858" }
%"class.std::__1::__vector_base.858" = type { %"class.angle::BitSetT.187"*, %"class.angle::BitSetT.187"*, %"class.std::__1::__compressed_pair.859" }
%"class.std::__1::__compressed_pair.859" = type { %"struct.std::__1::__compressed_pair_elem.860" }
%"struct.std::__1::__compressed_pair_elem.860" = type { %"class.angle::BitSetT.187"* }
%"class.std::__1::vector.864" = type { %"class.std::__1::__vector_base.865" }
%"class.std::__1::__vector_base.865" = type { %struct.VkDescriptorSet_T**, %struct.VkDescriptorSet_T**, %"class.std::__1::__compressed_pair.866" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.867" }
%"struct.std::__1::__compressed_pair_elem.867" = type { %struct.VkDescriptorSet_T** }
%"struct.std::__1::array.871" = type { [96 x %"struct.rx::vk::TextureUnit"] }
%"struct.rx::vk::TextureUnit" = type { %"class.rx::TextureVk"*, %"class.rx::vk::SamplerHelper"*, i32 }
%"class.rx::TextureVk" = type opaque
%"class.rx::vk::SamplerHelper" = type <{ [8 x i8], %"class.rx::vk::Sampler", %"class.rx::vk::SamplerSerial", [4 x i8] }>
%"class.rx::vk::Sampler" = type { %"class.rx::vk::WrappedObject.872" }
%"class.rx::vk::WrappedObject.872" = type { %struct.VkSampler_T* }
%struct.VkSampler_T = type opaque
%"class.rx::vk::SamplerSerial" = type { i32 }
%"class.rx::vk::TextureDescriptorDesc" = type { i32, %"struct.std::__1::array.873" }
%"struct.std::__1::array.873" = type { [96 x %"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials"] }
%"struct.rx::vk::TextureDescriptorDesc::TexUnitSerials" = type { %"struct.rx::vk::ImageOrBufferViewSubresourceSerial", %"class.rx::vk::SamplerSerial" }
%"struct.rx::vk::ImageOrBufferViewSubresourceSerial" = type { %"class.rx::vk::ImageOrBufferViewSerial", %"struct.rx::vk::ImageSubresourceRange" }
%"class.rx::vk::ImageOrBufferViewSerial" = type { i32 }
%"struct.rx::vk::ImageSubresourceRange" = type { i32 }
%"class.rx::vk::ShaderBuffersDescriptorDesc" = type { %"class.angle::FastVector.874" }
%"class.angle::FastVector.874" = type { %"struct.std::__1::array.875", i32*, i64, i64 }
%"struct.std::__1::array.875" = type { [32 x i32] }
%"struct.std::__1::array.876" = type { [96 x %"class.rx::TextureVk"*] }
%"struct.std::__1::array.877" = type { [16 x %"class.rx::vk::DynamicBuffer"] }
%"class.rx::vk::CommandPool" = type { %"class.rx::vk::WrappedObject.878" }
%"class.rx::vk::WrappedObject.878" = type { %struct.VkCommandPool_T* }
%struct.VkCommandPool_T = type opaque
%"class.std::__1::vector.879" = type { %"class.std::__1::__vector_base.880" }
%"class.std::__1::__vector_base.880" = type { %"class.rx::vk::GarbageObject"*, %"class.rx::vk::GarbageObject"*, %"class.std::__1::__compressed_pair.881" }
%"class.rx::vk::GarbageObject" = type { i32, %"struct.rx::vk::GarbageHandle_T"* }
%"struct.rx::vk::GarbageHandle_T" = type opaque
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.rx::vk::GarbageObject"* }
%"class.rx::RenderPassCache" = type { %"class.absl::flat_hash_map.886", %"class.rx::CacheStats", %"class.rx::CacheStats" }
%"class.absl::flat_hash_map.886" = type { %"class.absl::container_internal::raw_hash_map.887" }
%"class.absl::container_internal::raw_hash_map.887" = type { %"class.absl::container_internal::raw_hash_set.888" }
%"class.absl::container_internal::raw_hash_set.888" = type { i8*, %"union.absl::container_internal::map_slot_type.889"*, i64, i64, %"class.absl::container_internal::CompressedTuple.890" }
%"union.absl::container_internal::map_slot_type.889" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.rx::vk::RenderPassDesc", %"class.absl::flat_hash_map.1388" }
%"class.absl::flat_hash_map.1388" = type { %"class.absl::container_internal::raw_hash_map.1389" }
%"class.absl::container_internal::raw_hash_map.1389" = type { %"class.absl::container_internal::raw_hash_set.1390" }
%"class.absl::container_internal::raw_hash_set.1390" = type { i8*, %"union.absl::container_internal::map_slot_type.1391"*, i64, i64, %"class.absl::container_internal::CompressedTuple.1392" }
%"union.absl::container_internal::map_slot_type.1391" = type { %"struct.std::__1::pair.1404" }
%"struct.std::__1::pair.1404" = type { %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::RenderPassHelper" }
%"class.rx::vk::AttachmentOpsArray" = type { %"struct.std::__1::array.911" }
%"struct.std::__1::array.911" = type { [10 x %"struct.rx::vk::PackedAttachmentOpsDesc"] }
%"struct.rx::vk::PackedAttachmentOpsDesc" = type { i32 }
%"class.rx::vk::RenderPassHelper" = type <{ [8 x i8], %"class.rx::vk::RenderPass", %"struct.rx::vk::RenderPassPerfCounters", [3 x i8] }>
%"struct.rx::vk::RenderPassPerfCounters" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::container_internal::CompressedTuple.1392" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1393" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.1393" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.absl::container_internal::CompressedTuple.890" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.891" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.891" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.rx::vk::CommandBufferHelper" = type { [8 x i8], %"class.angle::PoolAllocator", %"class.angle::PackedEnumMap.901", %"class.angle::BitSetT.910", %"class.rx::vk::priv::SecondaryCommandBuffer", i32, %"class.rx::vk::RenderPassDesc", %"class.rx::vk::AttachmentOpsArray", %"class.rx::vk::Framebuffer", %"struct.gl::Rectangle", %"class.rx::vk::PackedClearValuesArray", i8, %"struct.std::__1::array.914", i32, i8, i8, i8, i8, i8, i32, i32, i32, i32, i32, i32, %"struct.gl::Rectangle", %"struct.gl::Rectangle", %"class.rx::vk::PackedAttachmentIndex", %"class.angle::FastIntegerMap.915", %"class.angle::FastIntegerSet", %"class.rx::vk::ImageHelper"*, %"class.rx::vk::ImageHelper"*, %"class.gl::LevelIndexWrapper", i32, i32, %"class.rx::vk::PackedAttachmentIndex", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::PackedImageAttachmentArray", %"class.rx::vk::ImageHelper"* }
%"class.angle::PackedEnumMap.901" = type { %"struct.std::__1::array.902" }
%"struct.std::__1::array.902" = type { [14 x %"class.rx::vk::PipelineBarrier"] }
%"class.rx::vk::PipelineBarrier" = type { i32, i32, i32, i32, %"class.std::__1::vector.903" }
%"class.std::__1::vector.903" = type { %"class.std::__1::__vector_base.904" }
%"class.std::__1::__vector_base.904" = type { %struct.VkImageMemoryBarrier*, %struct.VkImageMemoryBarrier*, %"class.std::__1::__compressed_pair.905" }
%struct.VkImageMemoryBarrier = type { i32, i8*, i32, i32, i32, i32, i32, i32, %struct.VkImage_T*, %struct.VkImageSubresourceRange }
%struct.VkImage_T = type opaque
%struct.VkImageSubresourceRange = type { i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %struct.VkImageMemoryBarrier* }
%"class.angle::BitSetT.910" = type { i16 }
%"class.rx::vk::Framebuffer" = type { %"class.rx::vk::WrappedObject.912" }
%"class.rx::vk::WrappedObject.912" = type { %struct.VkFramebuffer_T* }
%struct.VkFramebuffer_T = type opaque
%"class.rx::vk::PackedClearValuesArray" = type { %"struct.std::__1::array.913" }
%"struct.std::__1::array.913" = type { [10 x %union.VkClearValue] }
%"struct.std::__1::array.914" = type { [4 x %struct.VkBuffer_T*] }
%struct.VkBuffer_T = type opaque
%"class.angle::FastIntegerMap.915" = type { %"class.angle::FastIntegerSet", %"class.std::__1::vector.916" }
%"class.std::__1::vector.916" = type { %"class.std::__1::__vector_base.917" }
%"class.std::__1::__vector_base.917" = type { i32*, i32*, %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { i32* }
%"class.gl::LevelIndexWrapper" = type { i32 }
%"class.rx::vk::PackedAttachmentIndex" = type { i32 }
%"class.rx::vk::PackedImageAttachmentArray" = type { %"struct.std::__1::array.937" }
%"struct.std::__1::array.937" = type { [10 x %"class.rx::vk::ImageHelper"*] }
%"class.rx::vk::ImageHelper" = type <{ %"class.rx::vk::Resource", %"class.angle::Subject", %"class.rx::vk::Image", %"class.rx::vk::DeviceMemory", i32, i32, i32, i32, %struct.VkExtent3D, i8, [3 x i8], %"struct.rx::vk::Format"*, i32, %"class.rx::vk::ImageSerial", i32, i32, i32, i32, %"class.angle::BitSetT.924", [6 x i8], %"class.rx::vk::BindingPointer.925", i64, %"class.gl::LevelIndexWrapper", i32, i32, [4 x i8], %"class.rx::vk::DynamicBuffer", %"class.std::__1::vector.927", %struct.Optional.935, %"struct.std::__1::array.936", %"struct.std::__1::array.936", [4 x i8] }>
%"class.rx::vk::Image" = type { %"class.rx::vk::WrappedObject.923" }
%"class.rx::vk::WrappedObject.923" = type { %struct.VkImage_T* }
%"class.rx::vk::DeviceMemory" = type { %"class.rx::vk::WrappedObject.845" }
%"class.rx::vk::WrappedObject.845" = type { %struct.VkDeviceMemory_T* }
%struct.VkDeviceMemory_T = type opaque
%"class.rx::vk::ImageSerial" = type { i32 }
%"class.angle::BitSetT.924" = type { i16 }
%"class.rx::vk::BindingPointer.925" = type { %"class.rx::vk::RefCounted.926"* }
%"class.rx::vk::RefCounted.926" = type opaque
%"class.std::__1::vector.927" = type { %"class.std::__1::__vector_base.928" }
%"class.std::__1::__vector_base.928" = type { %"class.std::__1::vector.929"*, %"class.std::__1::vector.929"*, %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::vector.929" = type opaque
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.std::__1::vector.929"* }
%struct.Optional.935 = type { i8, %"struct.rx::vk::ImageHelper::ClearUpdate" }
%"struct.rx::vk::ImageHelper::ClearUpdate" = type { i32, %union.VkClearValue, i32, i32, i32 }
%"struct.std::__1::array.936" = type { [16 x %"class.angle::BitSetT.166"] }
%"class.angle::FastUnorderedSet" = type { %"class.angle::FastVector.938" }
%"class.angle::FastVector.938" = type { %"struct.std::__1::array.939", %"class.rx::vk::BufferHelper"**, i64, i64 }
%"struct.std::__1::array.939" = type { [4 x %"class.rx::vk::BufferHelper"*] }
%"class.rx::vk::ShaderLibrary" = type { [8 x i8], [24 x %"class.rx::vk::RefCounted.735"], [4 x %"class.rx::vk::RefCounted.735"], [4 x %"class.rx::vk::RefCounted.735"], [3 x %"class.rx::vk::RefCounted.735"], [1 x %"class.rx::vk::RefCounted.735"], [8 x %"class.rx::vk::RefCounted.735"], [1 x %"class.rx::vk::RefCounted.735"], [10 x %"class.rx::vk::RefCounted.735"], [48 x %"class.rx::vk::RefCounted.735"], [43 x %"class.rx::vk::RefCounted.735"], [6 x %"class.rx::vk::RefCounted.735"], [2 x %"class.rx::vk::RefCounted.735"] }
%"class.rx::UtilsVk" = type { [8 x i8], %"class.angle::PackedEnumMap.940", %"class.angle::PackedEnumMap.942", %"class.angle::PackedEnumMap.944", [4 x %"class.rx::vk::ShaderProgramHelper"], [3 x %"class.rx::vk::ShaderProgramHelper"], [1 x %"class.rx::vk::ShaderProgramHelper"], [8 x %"class.rx::vk::ShaderProgramHelper"], %"class.rx::vk::ShaderProgramHelper", [48 x %"class.rx::vk::ShaderProgramHelper"], [43 x %"class.rx::vk::ShaderProgramHelper"], [24 x %"class.rx::vk::ShaderProgramHelper"], [4 x %"class.rx::vk::ShaderProgramHelper"], [6 x %"class.rx::vk::ShaderProgramHelper"], [2 x %"class.rx::vk::ShaderProgramHelper"], [10 x %"class.rx::vk::ShaderProgramHelper"], %"class.std::__1::unordered_map.946", %"class.std::__1::unordered_map.971", %"class.rx::vk::Sampler", %"class.rx::vk::Sampler", %"struct.rx::InternalShaderPerfCounters", %"struct.rx::InternalShaderPerfCounters" }
%"class.angle::PackedEnumMap.940" = type { %"struct.std::__1::array.941" }
%"struct.std::__1::array.941" = type { [22 x %"class.angle::PackedEnumMap.695"] }
%"class.angle::PackedEnumMap.942" = type { %"struct.std::__1::array.943" }
%"struct.std::__1::array.943" = type { [22 x %"class.rx::vk::BindingPointer"] }
%"class.angle::PackedEnumMap.944" = type { %"struct.std::__1::array.945" }
%"struct.std::__1::array.945" = type { [22 x %"class.rx::vk::DynamicDescriptorPool"] }
%"class.std::__1::unordered_map.946" = type { %"class.std::__1::__hash_table.947" }
%"class.std::__1::__hash_table.947" = type <{ %"class.std::__1::unique_ptr.948", %"class.std::__1::__compressed_pair.958", %"class.std::__1::__compressed_pair.963", %"class.std::__1::__compressed_pair.967", [4 x i8] }>
%"class.std::__1::unique_ptr.948" = type { %"class.std::__1::__compressed_pair.949" }
%"class.std::__1::__compressed_pair.949" = type { %"struct.std::__1::__compressed_pair_elem.950", %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.950" = type { %"struct.std::__1::__hash_node_base.951"** }
%"struct.std::__1::__hash_node_base.951" = type { %"struct.std::__1::__hash_node_base.951"* }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"class.std::__1::__bucket_list_deallocator.953" }
%"class.std::__1::__bucket_list_deallocator.953" = type { %"class.std::__1::__compressed_pair.954" }
%"class.std::__1::__compressed_pair.954" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"struct.std::__1::__hash_node_base.951" }
%"class.std::__1::__compressed_pair.963" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.967" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"class.std::__1::unordered_map.971" = type { %"class.std::__1::__hash_table.972" }
%"class.std::__1::__hash_table.972" = type <{ %"class.std::__1::unique_ptr.973", %"class.std::__1::__compressed_pair.983", %"class.std::__1::__compressed_pair.988", %"class.std::__1::__compressed_pair.991", [4 x i8] }>
%"class.std::__1::unique_ptr.973" = type { %"class.std::__1::__compressed_pair.974" }
%"class.std::__1::__compressed_pair.974" = type { %"struct.std::__1::__compressed_pair_elem.975", %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.975" = type { %"struct.std::__1::__hash_node_base.976"** }
%"struct.std::__1::__hash_node_base.976" = type { %"struct.std::__1::__hash_node_base.976"* }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.std::__1::__bucket_list_deallocator.978" }
%"class.std::__1::__bucket_list_deallocator.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"struct.std::__1::__hash_node_base.976" }
%"class.std::__1::__compressed_pair.988" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.991" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.rx::InternalShaderPerfCounters" = type { i32 }
%"class.rx::vk::DynamicQueryPool" = type { %"class.rx::vk::DynamicallyGrowingPool.base", i32 }
%"class.rx::vk::DynamicallyGrowingPool.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.std::__1::vector.809", %"class.std::__1::vector.817", i64, i32 }>
%"class.std::__1::vector.809" = type { %"class.std::__1::__vector_base.810" }
%"class.std::__1::__vector_base.810" = type { %"class.rx::vk::QueryPool"*, %"class.rx::vk::QueryPool"*, %"class.std::__1::__compressed_pair.812" }
%"class.rx::vk::QueryPool" = type { %"class.rx::vk::WrappedObject.811" }
%"class.rx::vk::WrappedObject.811" = type { %struct.VkQueryPool_T* }
%struct.VkQueryPool_T = type opaque
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.rx::vk::QueryPool"* }
%"class.std::__1::vector.817" = type { %"class.std::__1::__vector_base.818" }
%"class.std::__1::__vector_base.818" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"*, %"class.std::__1::__compressed_pair.819" }
%"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats" = type opaque
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.rx::vk::DynamicallyGrowingPool<rx::vk::QueryPool>::PoolStats"* }
%"class.std::__1::vector.995" = type { %"class.std::__1::__vector_base.996" }
%"class.std::__1::__vector_base.996" = type { %"struct.rx::ContextVk::GpuEventQuery"*, %"struct.rx::ContextVk::GpuEventQuery"*, %"class.std::__1::__compressed_pair.998" }
%"struct.rx::ContextVk::GpuEventQuery" = type { %"struct.std::__1::array.997", i8, [7 x i8], %"class.rx::vk::QueryHelper" }
%"struct.std::__1::array.997" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.998" = type { %"struct.std::__1::__compressed_pair_elem.999" }
%"struct.std::__1::__compressed_pair_elem.999" = type { %"struct.rx::ContextVk::GpuEventQuery"* }
%"class.std::__1::vector.1003" = type { %"class.std::__1::__vector_base.1004" }
%"class.std::__1::__vector_base.1004" = type { %"struct.rx::ContextVk::GpuEvent"*, %"struct.rx::ContextVk::GpuEvent"*, %"class.std::__1::__compressed_pair.1005" }
%"struct.rx::ContextVk::GpuEvent" = type { i64, %"struct.std::__1::array.997", i8 }
%"class.std::__1::__compressed_pair.1005" = type { %"struct.std::__1::__compressed_pair_elem.1006" }
%"struct.std::__1::__compressed_pair_elem.1006" = type { %"struct.rx::ContextVk::GpuEvent"* }
%"class.std::__1::vector.1010" = type { %"class.std::__1::__vector_base.1011" }
%"class.std::__1::__vector_base.1011" = type { %struct.VkSemaphore_T**, %struct.VkSemaphore_T**, %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %struct.VkSemaphore_T** }
%"struct.rx::ContextVk::GpuClockSyncInfo" = type { double, double }
%"struct.rx::vk::PerfCounters" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.rx::ContextVkPerfCounters" = type { %"class.angle::PackedEnumMap.1017" }
%"class.angle::PackedEnumMap.1017" = type { %"struct.std::__1::array.403" }
%"class.rx::vk::ResourceUseList" = type { i32 (...)**, %"class.std::__1::vector.1018" }
%"class.std::__1::vector.1018" = type { %"class.std::__1::__vector_base.1019" }
%"class.std::__1::__vector_base.1019" = type { %"class.rx::vk::SharedResourceUse"*, %"class.rx::vk::SharedResourceUse"*, %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"class.rx::vk::SharedResourceUse"* }
%"class.std::__1::vector.1025" = type { %"class.std::__1::__vector_base.1026" }
%"class.std::__1::__vector_base.1026" = type { %struct.VkDescriptorBufferInfo*, %struct.VkDescriptorBufferInfo*, %"class.std::__1::__compressed_pair.1027" }
%struct.VkDescriptorBufferInfo = type { %struct.VkBuffer_T*, i64, i64 }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %struct.VkDescriptorBufferInfo* }
%"class.std::__1::vector.1032" = type { %"class.std::__1::__vector_base.1033" }
%"class.std::__1::__vector_base.1033" = type { %struct.VkDescriptorImageInfo*, %struct.VkDescriptorImageInfo*, %"class.std::__1::__compressed_pair.1034" }
%struct.VkDescriptorImageInfo = type { %struct.VkSampler_T*, %struct.VkImageView_T*, i32 }
%struct.VkImageView_T = type opaque
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.1035" }
%"struct.std::__1::__compressed_pair_elem.1035" = type { %struct.VkDescriptorImageInfo* }
%"class.std::__1::vector.1039" = type { %"class.std::__1::__vector_base.1040" }
%"class.std::__1::__vector_base.1040" = type { %struct.VkWriteDescriptorSet*, %struct.VkWriteDescriptorSet*, %"class.std::__1::__compressed_pair.1041" }
%struct.VkWriteDescriptorSet = type { i32, i8*, %struct.VkDescriptorSet_T*, i32, i32, i32, i32, %struct.VkDescriptorImageInfo*, %struct.VkDescriptorBufferInfo*, %struct.VkBufferView_T** }
%struct.VkBufferView_T = type opaque
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %struct.VkWriteDescriptorSet* }
%"class.rx::ShareGroupVk" = type <{ %"class.rx::ShareGroupImpl", %"class.rx::PipelineLayoutCache", %"class.rx::DescriptorSetLayoutCache", %"class.std::__1::set.1101", %"class.std::__1::vector.1111", i8, [7 x i8] }>
%"class.rx::ShareGroupImpl" = type { i32 (...)** }
%"class.rx::PipelineLayoutCache" = type { %"class.rx::HasCacheStats.1046", %"class.std::__1::unordered_map.1047" }
%"class.rx::HasCacheStats.1046" = type { i32 (...)**, %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1047" = type { %"class.std::__1::__hash_table.1048" }
%"class.std::__1::__hash_table.1048" = type <{ %"class.std::__1::unique_ptr.1049", %"class.std::__1::__compressed_pair.1059", %"class.std::__1::__compressed_pair.1064", %"class.std::__1::__compressed_pair.1068", [4 x i8] }>
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051", %"struct.std::__1::__compressed_pair_elem.1053" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1052"** }
%"struct.std::__1::__hash_node_base.1052" = type { %"struct.std::__1::__hash_node_base.1052"* }
%"struct.std::__1::__compressed_pair_elem.1053" = type { %"class.std::__1::__bucket_list_deallocator.1054" }
%"class.std::__1::__bucket_list_deallocator.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"struct.std::__1::__hash_node_base.1052" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1068" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"class.rx::DescriptorSetLayoutCache" = type { %"class.std::__1::unordered_map.1074", %"class.rx::CacheStats" }
%"class.std::__1::unordered_map.1074" = type { %"class.std::__1::__hash_table.1075" }
%"class.std::__1::__hash_table.1075" = type <{ %"class.std::__1::unique_ptr.1076", %"class.std::__1::__compressed_pair.1086", %"class.std::__1::__compressed_pair.1091", %"class.std::__1::__compressed_pair.1095", [4 x i8] }>
%"class.std::__1::unique_ptr.1076" = type { %"class.std::__1::__compressed_pair.1077" }
%"class.std::__1::__compressed_pair.1077" = type { %"struct.std::__1::__compressed_pair_elem.1078", %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1078" = type { %"struct.std::__1::__hash_node_base.1079"** }
%"struct.std::__1::__hash_node_base.1079" = type { %"struct.std::__1::__hash_node_base.1079"* }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.std::__1::__bucket_list_deallocator.1081" }
%"class.std::__1::__bucket_list_deallocator.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"struct.std::__1::__hash_node_base.1079" }
%"class.std::__1::__compressed_pair.1091" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"class.std::__1::set.1101" = type { %"class.std::__1::__tree.1102" }
%"class.std::__1::__tree.1102" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1107" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1107" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.1111" = type { %"class.std::__1::__vector_base.1112" }
%"class.std::__1::__vector_base.1112" = type { %"class.rx::vk::ResourceUseList"*, %"class.rx::vk::ResourceUseList"*, %"class.std::__1::__compressed_pair.1113" }
%"class.std::__1::__compressed_pair.1113" = type { %"struct.std::__1::__compressed_pair_elem.1114" }
%"struct.std::__1::__compressed_pair_elem.1114" = type { %"class.rx::vk::ResourceUseList"* }
%"class.rx::vk::BufferHelper" = type { %"class.rx::vk::Resource", %"class.rx::vk::Buffer", %"class.rx::vk::BufferMemory", i32, i64, i32, i32, i32, i32, i32, %"class.rx::vk::BufferSerial" }
%"class.rx::vk::Buffer" = type { %"class.rx::vk::WrappedObject.843" }
%"class.rx::vk::WrappedObject.843" = type { %struct.VkBuffer_T* }
%"class.rx::vk::BufferMemory" = type { [8 x i8], %"class.rx::vk::Allocation", %"class.rx::vk::DeviceMemory", i8*, i8* }
%"class.rx::vk::Allocation" = type { %"class.rx::vk::WrappedObject.844" }
%"class.rx::vk::WrappedObject.844" = type { %struct.VmaAllocation_T* }
%struct.VmaAllocation_T = type opaque
%"class.rx::vk::DynamicBuffer" = type { i32, i8, i32, i64, %"class.std::__1::unique_ptr.840", i32, i32, i64, i64, i32, %"class.std::__1::vector.849", %"class.std::__1::vector.849" }
%"class.std::__1::unique_ptr.840" = type { %"class.std::__1::__compressed_pair.841" }
%"class.std::__1::__compressed_pair.841" = type { %"struct.std::__1::__compressed_pair_elem.842" }
%"struct.std::__1::__compressed_pair_elem.842" = type { %"class.rx::vk::BufferHelper"* }
%"class.std::__1::vector.849" = type { %"class.std::__1::__vector_base.850" }
%"class.std::__1::__vector_base.850" = type { %"class.std::__1::unique_ptr.840"*, %"class.std::__1::unique_ptr.840"*, %"class.std::__1::__compressed_pair.851" }
%"class.std::__1::__compressed_pair.851" = type { %"struct.std::__1::__compressed_pair_elem.852" }
%"struct.std::__1::__compressed_pair_elem.852" = type { %"class.std::__1::unique_ptr.840"* }
%"class.angle::PackedEnumMap.1352" = type { %"struct.std::__1::array.1353" }
%"struct.std::__1::array.1353" = type { [6 x %"class.gl::ProgramState"*] }
%"class.std::__1::vector.1354" = type opaque
%"class.gl::ProgramVaryingPacking" = type <{ [8 x i8], %"class.angle::PackedEnumMap.1355", %"class.angle::PackedEnumMap.1380", [2 x i8] }>
%"class.angle::PackedEnumMap.1355" = type { %"struct.std::__1::array.1356" }
%"struct.std::__1::array.1356" = type { [6 x %"class.gl::VaryingPacking"] }
%"class.gl::VaryingPacking" = type { %"class.std::__1::vector.1357", %"class.std::__1::vector.1364", %"class.std::__1::vector.1371", %"class.angle::PackedEnumMap.1378", %"class.angle::PackedEnumMap.1378" }
%"class.std::__1::vector.1357" = type { %"class.std::__1::__vector_base.1358" }
%"class.std::__1::__vector_base.1358" = type { %"struct.gl::VaryingPacking::Register"*, %"struct.gl::VaryingPacking::Register"*, %"class.std::__1::__compressed_pair.1359" }
%"struct.gl::VaryingPacking::Register" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.1359" = type { %"struct.std::__1::__compressed_pair_elem.1360" }
%"struct.std::__1::__compressed_pair_elem.1360" = type { %"struct.gl::VaryingPacking::Register"* }
%"class.std::__1::vector.1364" = type { %"class.std::__1::__vector_base.1365" }
%"class.std::__1::__vector_base.1365" = type { %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"*, %"class.std::__1::__compressed_pair.1366" }
%"struct.gl::PackedVaryingRegister" = type { %"struct.gl::PackedVarying"*, i32, i32, i32, i32 }
%"struct.gl::PackedVarying" = type <{ [8 x i8], %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.gl::VaryingInShaderRef" = type { %"struct.sh::ShaderVariable"*, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1366" = type { %"struct.std::__1::__compressed_pair_elem.1367" }
%"struct.std::__1::__compressed_pair_elem.1367" = type { %"struct.gl::PackedVaryingRegister"* }
%"class.std::__1::vector.1371" = type { %"class.std::__1::__vector_base.1372" }
%"class.std::__1::__vector_base.1372" = type { %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"*, %"class.std::__1::__compressed_pair.1373" }
%"class.std::__1::__compressed_pair.1373" = type { %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"struct.gl::PackedVarying"* }
%"class.angle::PackedEnumMap.1378" = type { %"struct.std::__1::array.1379" }
%"struct.std::__1::array.1379" = type { [6 x %"class.std::__1::vector.144"] }
%"class.angle::PackedEnumMap.1380" = type { %"struct.std::__1::array.1381" }
%"struct.std::__1::array.1381" = type { [6 x i8] }
%"struct.rx::GlslangSourceOptions" = type { i8, i8, i8, i8 }
%"class.angle::PackedEnumMap.1382" = type { %"struct.std::__1::array.1383" }
%"struct.std::__1::array.1383" = type { [6 x i64] }
%"class.rx::vk::UniformsAndXfbDescriptorDesc" = type { i32, %"struct.std::__1::array.1384", %"struct.std::__1::array.762" }
%"struct.std::__1::array.1384" = type { [5 x %"class.rx::vk::BufferSerial"] }

@_ZTVN2rx17ProgramPipelineVkE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::ProgramPipelineVk"*)* @_ZN2rx17ProgramPipelineVkD2Ev to i8*), i8* bitcast (void (%"class.rx::ProgramPipelineVk"*)* @_ZN2rx17ProgramPipelineVkD0Ev to i8*), i8* bitcast (void (%"class.rx::ProgramPipelineVk"*, %"class.gl::Context"*)* @_ZN2rx17ProgramPipelineVk7destroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ProgramPipelineVk"*, %"class.gl::Context"*, %"class.std::__1::vector.1354"*, %"class.gl::ProgramVaryingPacking"*)* @_ZN2rx17ProgramPipelineVk4linkEPKN2gl7ContextERKNSt3__16vectorINS1_17ProgramVaryingRefENS5_9allocatorIS7_EEEERKNS1_21ProgramVaryingPackingE to i8*)] }, align 8

@_ZN2rx17ProgramPipelineVkC1ERKN2gl20ProgramPipelineStateE = hidden unnamed_addr alias void (%"class.rx::ProgramPipelineVk"*, %"class.gl::ProgramPipelineState"*), void (%"class.rx::ProgramPipelineVk"*, %"class.gl::ProgramPipelineState"*)* @_ZN2rx17ProgramPipelineVkC2ERKN2gl20ProgramPipelineStateE
@_ZN2rx17ProgramPipelineVkD1Ev = hidden unnamed_addr alias void (%"class.rx::ProgramPipelineVk"*), void (%"class.rx::ProgramPipelineVk"*)* @_ZN2rx17ProgramPipelineVkD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVkC2ERKN2gl20ProgramPipelineStateE(%"class.rx::ProgramPipelineVk"*, %"class.gl::ProgramPipelineState"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 0, i32 1
  store %"class.gl::ProgramPipelineState"* %1, %"class.gl::ProgramPipelineState"** %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx17ProgramPipelineVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %5 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  tail call void @_ZN2rx19ProgramExecutableVkC1Ev(%"class.rx::ProgramExecutableVk"* %5) #8
  %6 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1, i32 20
  store %"class.rx::ProgramPipelineVk"* %0, %"class.rx::ProgramPipelineVk"** %6, align 8
  ret void
}

declare void @_ZN2rx19ProgramExecutableVkC1Ev(%"class.rx::ProgramExecutableVk"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVkD2Ev(%"class.rx::ProgramPipelineVk"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx17ProgramPipelineVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  tail call void @_ZN2rx19ProgramExecutableVkD1Ev(%"class.rx::ProgramExecutableVk"* %3) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx19ProgramExecutableVkD1Ev(%"class.rx::ProgramExecutableVk"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVkD0Ev(%"class.rx::ProgramPipelineVk"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx17ProgramPipelineVkE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  tail call void @_ZN2rx19ProgramExecutableVkD1Ev(%"class.rx::ProgramExecutableVk"* %3) #8
  %4 = bitcast %"class.rx::ProgramPipelineVk"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVk7destroyEPKN2gl7ContextE(%"class.rx::ProgramPipelineVk"*, %"class.gl::Context"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %4 = bitcast %"class.rx::ContextImpl"** %3 to %"class.rx::ContextVk"**
  %5 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  tail call void @_ZN2rx19ProgramExecutableVk5resetEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %6, %"class.rx::ContextVk"* %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVk5resetEPNS_9ContextVkE(%"class.rx::ProgramPipelineVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  tail call void @_ZN2rx19ProgramExecutableVk5resetEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %3, %"class.rx::ContextVk"* %1) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN2rx19ProgramExecutableVk5resetEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVk19fillProgramStateMapEPKNS_9ContextVkEPN5angle13PackedEnumMapIN2gl10ShaderTypeEPKNS6_12ProgramStateELm6EEE(%"class.rx::ProgramPipelineVk"* nocapture readnone, %"class.rx::ContextVk"* nocapture readonly, %"class.angle::PackedEnumMap.1352"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 0
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %5, align 8
  %6 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %7 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %6, i64 0, i32 64, i32 0, i32 1
  %8 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %8, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %11 = icmp eq %"class.gl::Program"* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %10, i64 0, i32 5
  %14 = bitcast %"class.rx::ProgramImpl"** %13 to %"class.rx::ProgramVk"**
  %15 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %14, align 8
  %16 = icmp eq %"class.rx::ProgramVk"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %15, i64 0, i32 0, i32 1
  %19 = bitcast %"class.gl::ProgramState"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.angle::PackedEnumMap.1352"* %2 to i64*
  store i64 %20, i64* %21, align 8
  br label %22

22:                                               ; preds = %3, %12, %17
  %23 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 1
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %23, align 8
  %24 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %25 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %24, i64 0, i32 64, i32 0, i32 1
  %26 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %26, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %28 = load %"class.gl::Program"*, %"class.gl::Program"** %27, align 8
  %29 = icmp eq %"class.gl::Program"* %28, null
  br i1 %29, label %40, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %28, i64 0, i32 5
  %32 = bitcast %"class.rx::ProgramImpl"** %31 to %"class.rx::ProgramVk"**
  %33 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %32, align 8
  %34 = icmp eq %"class.rx::ProgramVk"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %33, i64 0, i32 0, i32 1
  %37 = bitcast %"class.gl::ProgramState"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.gl::ProgramState"** %23 to i64*
  store i64 %38, i64* %39, align 8
  br label %40

40:                                               ; preds = %35, %30, %22
  %41 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 2
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %41, align 8
  %42 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %43 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %42, i64 0, i32 64, i32 0, i32 1
  %44 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %43, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %44, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %46 = load %"class.gl::Program"*, %"class.gl::Program"** %45, align 8
  %47 = icmp eq %"class.gl::Program"* %46, null
  br i1 %47, label %58, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %46, i64 0, i32 5
  %50 = bitcast %"class.rx::ProgramImpl"** %49 to %"class.rx::ProgramVk"**
  %51 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %50, align 8
  %52 = icmp eq %"class.rx::ProgramVk"* %51, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %51, i64 0, i32 0, i32 1
  %55 = bitcast %"class.gl::ProgramState"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.gl::ProgramState"** %41 to i64*
  store i64 %56, i64* %57, align 8
  br label %58

58:                                               ; preds = %53, %48, %40
  %59 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 3
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %59, align 8
  %60 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %61 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %60, i64 0, i32 64, i32 0, i32 1
  %62 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %61, align 8
  %63 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %62, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %64 = load %"class.gl::Program"*, %"class.gl::Program"** %63, align 8
  %65 = icmp eq %"class.gl::Program"* %64, null
  br i1 %65, label %76, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %64, i64 0, i32 5
  %68 = bitcast %"class.rx::ProgramImpl"** %67 to %"class.rx::ProgramVk"**
  %69 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %68, align 8
  %70 = icmp eq %"class.rx::ProgramVk"* %69, null
  br i1 %70, label %76, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %69, i64 0, i32 0, i32 1
  %73 = bitcast %"class.gl::ProgramState"** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.gl::ProgramState"** %59 to i64*
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %71, %66, %58
  %77 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 4
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %77, align 8
  %78 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %79 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %78, i64 0, i32 64, i32 0, i32 1
  %80 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %79, align 8
  %81 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %80, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %82 = load %"class.gl::Program"*, %"class.gl::Program"** %81, align 8
  %83 = icmp eq %"class.gl::Program"* %82, null
  br i1 %83, label %94, label %84

84:                                               ; preds = %76
  %85 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %82, i64 0, i32 5
  %86 = bitcast %"class.rx::ProgramImpl"** %85 to %"class.rx::ProgramVk"**
  %87 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %86, align 8
  %88 = icmp eq %"class.rx::ProgramVk"* %87, null
  br i1 %88, label %94, label %89

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %87, i64 0, i32 0, i32 1
  %91 = bitcast %"class.gl::ProgramState"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.gl::ProgramState"** %77 to i64*
  store i64 %92, i64* %93, align 8
  br label %94

94:                                               ; preds = %89, %84, %76
  %95 = getelementptr inbounds %"class.angle::PackedEnumMap.1352", %"class.angle::PackedEnumMap.1352"* %2, i64 0, i32 0, i32 0, i64 5
  store %"class.gl::ProgramState"* null, %"class.gl::ProgramState"** %95, align 8
  %96 = load %"class.gl::State"*, %"class.gl::State"** %4, align 8
  %97 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %96, i64 0, i32 64, i32 0, i32 1
  %98 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %97, align 8
  %99 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %98, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %100 = load %"class.gl::Program"*, %"class.gl::Program"** %99, align 8
  %101 = icmp eq %"class.gl::Program"* %100, null
  br i1 %101, label %112, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %100, i64 0, i32 5
  %104 = bitcast %"class.rx::ProgramImpl"** %103 to %"class.rx::ProgramVk"**
  %105 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %104, align 8
  %106 = icmp eq %"class.rx::ProgramVk"* %105, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %105, i64 0, i32 0, i32 1
  %109 = bitcast %"class.gl::ProgramState"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.gl::ProgramState"** %95 to i64*
  store i64 %110, i64* %111, align 8
  br label %112

112:                                              ; preds = %107, %102, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx17ProgramPipelineVk4linkEPKN2gl7ContextERKNSt3__16vectorINS1_17ProgramVaryingRefENS5_9allocatorIS7_EEEERKNS1_21ProgramVaryingPackingE(%"class.rx::ProgramPipelineVk"*, %"class.gl::Context"*, %"class.std::__1::vector.1354"*, %"class.gl::ProgramVaryingPacking"* dereferenceable(2176)) unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = bitcast i32* %5 to %"struct.rx::GlslangSourceOptions"*
  %7 = alloca %"struct.rx::GlslangProgramInterfaceInfo", align 4
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %9 = bitcast %"class.rx::ContextImpl"** %8 to %"class.rx::ContextVk"**
  %10 = load %"class.rx::ContextVk"*, %"class.rx::ContextVk"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 64, i32 0, i32 1
  %12 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %12, i64 0, i32 5, i32 5
  %14 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %13, align 8
  %15 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #8
  %16 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %10, i64 0, i32 1, i32 1
  %17 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %17, i64 0, i32 7
  %19 = tail call i32 @_ZN2rx16GlslangWrapperVk19CreateSourceOptionsERKN5angle10FeaturesVkE(%"struct.angle::FeaturesVk"* dereferenceable(3672) %18) #8
  store i32 %19, i32* %5, align 4
  %20 = bitcast %"struct.rx::GlslangProgramInterfaceInfo"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %20) #8
  %21 = bitcast %"struct.rx::GlslangProgramInterfaceInfo"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %21, i8 -86, i64 32, i1 false)
  call void @_ZN2rx16GlslangWrapperVk32ResetGlslangProgramInterfaceInfoEPNS_27GlslangProgramInterfaceInfoE(%"struct.rx::GlslangProgramInterfaceInfo"* nonnull %7) #8
  %22 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  call void @_ZN2rx19ProgramExecutableVk20clearVariableInfoMapEv(%"class.rx::ProgramExecutableVk"* %22) #8
  %23 = call zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"* %14) #8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 55
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 3
  %28 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %14, i64 0, i32 2
  %29 = select i1 %26, %"class.angle::BitSetT.160"* %28, %"class.angle::BitSetT.160"* %27
  %30 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %29, i64 0, i32 0
  %31 = load i8, i8* %30, align 1, !noalias !3
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %39, label %33

33:                                               ; preds = %4
  %34 = zext i8 %31 to i32
  %35 = call i32 @llvm.cttz.i32(i32 %34, i1 true) #8, !range !6
  %36 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1, i32 15
  br label %50

37:                                               ; preds = %76
  %38 = load i8, i8* %24, align 4, !range !2
  br label %39

39:                                               ; preds = %4, %37
  %40 = phi i8 [ %38, %37 ], [ %25, %4 ]
  %41 = icmp eq i8 %40, 0
  %42 = select i1 %41, %"class.angle::BitSetT.160"* %28, %"class.angle::BitSetT.160"* %27
  %43 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %42, i64 0, i32 0
  %44 = load i8, i8* %43, align 1, !noalias !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %85, label %46

46:                                               ; preds = %39
  %47 = zext i8 %44 to i32
  %48 = call i32 @llvm.cttz.i32(i32 %47, i1 true) #8, !range !6
  %49 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1, i32 15
  br label %90

50:                                               ; preds = %82, %33
  %51 = phi i32 [ %35, %33 ], [ %84, %82 ]
  %52 = phi i8 [ %31, %33 ], [ %80, %82 ]
  %53 = zext i32 %51 to i64
  %54 = trunc i32 %51 to i8
  %55 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %12, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %53
  %56 = load %"class.gl::Program"*, %"class.gl::Program"** %55, align 8
  %57 = icmp eq %"class.gl::Program"* %56, null
  br i1 %57, label %76, label %58

58:                                               ; preds = %50
  %59 = icmp eq i8 %23, %54
  br i1 %59, label %60, label %68

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %56, i64 0, i32 4, i32 23, i32 0
  %62 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %61, align 8
  %63 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %62, i64 0, i32 26, i32 0, i32 0
  %64 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %63, align 8
  %65 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %62, i64 0, i32 26, i32 0, i32 1
  %66 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %65, align 8
  %67 = icmp ne %"struct.gl::TransformFeedbackVarying"* %64, %66
  br label %68

68:                                               ; preds = %60, %58
  %69 = phi i1 [ false, %58 ], [ %67, %60 ]
  %70 = load i8, i8* %15, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %76, label %72

72:                                               ; preds = %68
  %73 = call zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext %54) #8
  br i1 %73, label %74, label %76

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %56, i64 0, i32 4
  call void @_ZN2rx39GlslangAssignTransformFeedbackLocationsEN2gl10ShaderTypeERKNS0_12ProgramStateEbPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(i8 zeroext %54, %"class.gl::ProgramState"* dereferenceable(304) %75, i1 zeroext %69, %"struct.rx::GlslangProgramInterfaceInfo"* nonnull %7, %"class.rx::ShaderInterfaceVariableInfoMap"* %36) #8
  br label %76

76:                                               ; preds = %72, %74, %68, %50
  %77 = shl i32 1, %51
  %78 = trunc i32 %77 to i8
  %79 = xor i8 %78, -1
  %80 = and i8 %52, %79
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %37, label %82

82:                                               ; preds = %76
  %83 = zext i8 %80 to i32
  %84 = call i32 @llvm.cttz.i32(i32 %83, i1 true) #8, !range !6
  br label %50

85:                                               ; preds = %112, %39
  %86 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %16, align 8
  %87 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %86, i64 0, i32 7, i32 47, i32 4
  %88 = load i8, i8* %87, align 8, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %123, label %122

90:                                               ; preds = %119, %46
  %91 = phi i8 [ 6, %46 ], [ %113, %119 ]
  %92 = phi i8 [ %44, %46 ], [ %117, %119 ]
  %93 = phi i32 [ %48, %46 ], [ %121, %119 ]
  %94 = zext i32 %93 to i64
  %95 = trunc i32 %93 to i8
  %96 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %12, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %94
  %97 = load %"class.gl::Program"*, %"class.gl::Program"** %96, align 8
  %98 = icmp eq %"class.gl::Program"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %90
  %100 = icmp eq i8 %23, %95
  br i1 %100, label %101, label %109

101:                                              ; preds = %99
  %102 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %97, i64 0, i32 4, i32 23, i32 0
  %103 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %102, align 8
  %104 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %103, i64 0, i32 26, i32 0, i32 0
  %105 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %104, align 8
  %106 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %103, i64 0, i32 26, i32 0, i32 1
  %107 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %106, align 8
  %108 = icmp ne %"struct.gl::TransformFeedbackVarying"* %105, %107
  br label %109

109:                                              ; preds = %101, %99
  %110 = phi i1 [ false, %99 ], [ %108, %101 ]
  %111 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %97, i64 0, i32 4
  call void @_ZN2rx22GlslangAssignLocationsERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_21ProgramVaryingPackingENS3_10ShaderTypeESA_bPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* nonnull dereferenceable(4) %6, %"class.gl::ProgramState"* dereferenceable(304) %111, %"class.gl::ProgramVaryingPacking"* dereferenceable(2176) %3, i8 zeroext %95, i8 zeroext %91, i1 zeroext %110, %"struct.rx::GlslangProgramInterfaceInfo"* nonnull %7, %"class.rx::ShaderInterfaceVariableInfoMap"* %49) #8
  br label %112

112:                                              ; preds = %90, %109
  %113 = phi i8 [ %95, %109 ], [ %91, %90 ]
  %114 = shl i32 1, %93
  %115 = trunc i32 %114 to i8
  %116 = xor i8 %115, -1
  %117 = and i8 %92, %116
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %85, label %119

119:                                              ; preds = %112
  %120 = zext i8 %117 to i32
  %121 = call i32 @llvm.cttz.i32(i32 %120, i1 true) #8, !range !6
  br label %90

122:                                              ; preds = %85
  call void @_ZN2rx19ProgramExecutableVk24resolvePrecisionMismatchERKNSt3__16vectorIN2gl17ProgramVaryingRefENS1_9allocatorIS4_EEEE(%"class.rx::ProgramExecutableVk"* %22, %"class.std::__1::vector.1354"* %2) #8
  br label %123

123:                                              ; preds = %85, %122
  %124 = call i32 @_ZN2rx19ProgramExecutableVk20createPipelineLayoutEPKN2gl7ContextEPNSt3__15arrayINS_2vk11TextureUnitELm96EEE(%"class.rx::ProgramExecutableVk"* %22, %"class.gl::Context"* %1, %"struct.std::__1::array.871"* null) #8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %20) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #8
  ret i32 %124
}

declare i32 @_ZN2rx16GlslangWrapperVk19CreateSourceOptionsERKN5angle10FeaturesVkE(%"struct.angle::FeaturesVk"* dereferenceable(3672)) local_unnamed_addr #1

declare void @_ZN2rx16GlslangWrapperVk32ResetGlslangProgramInterfaceInfoEPNS_27GlslangProgramInterfaceInfoE(%"struct.rx::GlslangProgramInterfaceInfo"*) local_unnamed_addr #1

declare void @_ZN2rx19ProgramExecutableVk20clearVariableInfoMapEv(%"class.rx::ProgramExecutableVk"*) local_unnamed_addr #1

declare zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare zeroext i1 @_ZN2gl35ShaderTypeSupportsTransformFeedbackENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #1

declare void @_ZN2rx39GlslangAssignTransformFeedbackLocationsEN2gl10ShaderTypeERKNS0_12ProgramStateEbPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(i8 zeroext, %"class.gl::ProgramState"* dereferenceable(304), i1 zeroext, %"struct.rx::GlslangProgramInterfaceInfo"*, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #1

declare void @_ZN2rx22GlslangAssignLocationsERKNS_20GlslangSourceOptionsERKN2gl12ProgramStateERKNS3_21ProgramVaryingPackingENS3_10ShaderTypeESA_bPNS_27GlslangProgramInterfaceInfoEPNS_30ShaderInterfaceVariableInfoMapE(%"struct.rx::GlslangSourceOptions"* dereferenceable(4), %"class.gl::ProgramState"* dereferenceable(304), %"class.gl::ProgramVaryingPacking"* dereferenceable(2176), i8 zeroext, i8 zeroext, i1 zeroext, %"struct.rx::GlslangProgramInterfaceInfo"*, %"class.rx::ShaderInterfaceVariableInfoMap"*) local_unnamed_addr #1

declare void @_ZN2rx19ProgramExecutableVk24resolvePrecisionMismatchERKNSt3__16vectorIN2gl17ProgramVaryingRefENS1_9allocatorIS4_EEEE(%"class.rx::ProgramExecutableVk"*, %"class.std::__1::vector.1354"*) local_unnamed_addr #1

declare i32 @_ZN2rx19ProgramExecutableVk20createPipelineLayoutEPKN2gl7ContextEPNSt3__15arrayINS_2vk11TextureUnitELm96EEE(%"class.rx::ProgramExecutableVk"*, %"class.gl::Context"*, %"struct.std::__1::array.871"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2rx17ProgramPipelineVk30calcUniformUpdateRequiredSpaceEPNS_9ContextVkERKN2gl17ProgramExecutableERKNS3_5StateEPN5angle13PackedEnumMapINS3_10ShaderTypeEmLm6EEE(%"class.rx::ProgramPipelineVk"* nocapture readnone, %"class.rx::ContextVk"* nocapture readonly, %"class.gl::ProgramExecutable"* nocapture readonly dereferenceable(1728), %"class.gl::State"* nocapture readonly dereferenceable(12296), %"class.angle::PackedEnumMap.1382"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 55
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = icmp eq i8 %7, 0
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 3
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %2, i64 0, i32 2
  %11 = select i1 %8, %"class.angle::BitSetT.160"* %10, %"class.angle::BitSetT.160"* %9
  %12 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %11, i64 0, i32 0
  %13 = load i8, i8* %12, align 1, !noalias !10
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %20, label %15

15:                                               ; preds = %5
  %16 = zext i8 %13 to i32
  %17 = tail call i32 @llvm.cttz.i32(i32 %16, i1 true) #8, !range !6
  %18 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %3, i64 0, i32 64, i32 0, i32 1
  %19 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  br label %22

20:                                               ; preds = %55, %5
  %21 = phi i64 [ 0, %5 ], [ %56, %55 ]
  ret i64 %21

22:                                               ; preds = %60, %15
  %23 = phi i64 [ 0, %15 ], [ %56, %60 ]
  %24 = phi i32 [ %17, %15 ], [ %62, %60 ]
  %25 = phi i8 [ %13, %15 ], [ %58, %60 ]
  %26 = zext i32 %24 to i64
  %27 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %18, align 8
  %28 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %27, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %26
  %29 = load %"class.gl::Program"*, %"class.gl::Program"** %28, align 8
  %30 = icmp eq %"class.gl::Program"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %22
  %32 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %29, i64 0, i32 5
  %33 = bitcast %"class.rx::ProgramImpl"** %32 to %"class.rx::ProgramVk"**
  %34 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %33, align 8
  br label %35

35:                                               ; preds = %22, %31
  %36 = phi %"class.rx::ProgramVk"* [ %34, %31 ], [ null, %22 ]
  %37 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %36, i64 0, i32 2, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = shl i32 1, %24
  %40 = trunc i32 %39 to i8
  %41 = and i8 %38, %40
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.angle::PackedEnumMap.1382", %"class.angle::PackedEnumMap.1382"* %4, i64 0, i32 0, i32 0, i64 %26
  store i64 %23, i64* %44, align 8
  %45 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %19, align 8
  %46 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %45, i64 0, i32 16, i32 7, i32 68
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %36, i64 0, i32 1, i32 0, i32 0, i64 %26, i32 1, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %47, -1
  %51 = add i64 %50, %49
  %52 = urem i64 %51, %47
  %53 = sub i64 %23, %52
  %54 = add i64 %53, %51
  br label %55

55:                                               ; preds = %35, %43
  %56 = phi i64 [ %54, %43 ], [ %23, %35 ]
  %57 = xor i8 %40, -1
  %58 = and i8 %25, %57
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %20, label %60

60:                                               ; preds = %55
  %61 = zext i8 %58 to i32
  %62 = tail call i32 @llvm.cttz.i32(i32 %61, i1 true) #8, !range !6
  br label %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx17ProgramPipelineVk14updateUniformsEPNS_9ContextVkE(%"class.rx::ProgramPipelineVk"*, %"class.rx::ContextVk"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i8*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.angle::PackedEnumMap.1382", align 8
  %7 = alloca %"class.rx::vk::UniformsAndXfbDescriptorDesc", align 4
  %8 = alloca i8, align 1
  %9 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %10 = load %"class.gl::State"*, %"class.gl::State"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 65
  %12 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %11, align 8
  %13 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 81
  %14 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  store i8* null, i8** %3, align 8
  %15 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #8
  store i64 0, i64* %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %16 = bitcast %"class.angle::PackedEnumMap.1382"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %16) #8
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 55
  %18 = bitcast %"class.angle::PackedEnumMap.1382"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 48, i1 false)
  %19 = load i8, i8* %17, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 3
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 2
  %23 = select i1 %20, %"class.angle::BitSetT.160"* %22, %"class.angle::BitSetT.160"* %21
  %24 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %23, i64 0, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !13
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %73, label %27

27:                                               ; preds = %2
  %28 = zext i8 %25 to i32
  %29 = tail call i32 @llvm.cttz.i32(i32 %28, i1 true) #8, !range !6
  %30 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 64, i32 0, i32 1
  %31 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %32 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %30, align 8
  br label %33

33:                                               ; preds = %70, %27
  %34 = phi i64 [ 0, %27 ], [ %66, %70 ]
  %35 = phi i32 [ %29, %27 ], [ %72, %70 ]
  %36 = phi i8 [ %25, %27 ], [ %68, %70 ]
  %37 = zext i32 %35 to i64
  %38 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %32, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %37
  %39 = load %"class.gl::Program"*, %"class.gl::Program"** %38, align 8
  %40 = icmp eq %"class.gl::Program"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %33
  %42 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %39, i64 0, i32 5
  %43 = bitcast %"class.rx::ProgramImpl"** %42 to %"class.rx::ProgramVk"**
  %44 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %43, align 8
  br label %45

45:                                               ; preds = %41, %33
  %46 = phi %"class.rx::ProgramVk"* [ %44, %41 ], [ null, %33 ]
  %47 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %46, i64 0, i32 2, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = shl i32 1, %35
  %50 = trunc i32 %49 to i8
  %51 = and i8 %48, %50
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %65, label %53

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"class.angle::PackedEnumMap.1382", %"class.angle::PackedEnumMap.1382"* %6, i64 0, i32 0, i32 0, i64 %37
  store i64 %34, i64* %54, align 8
  %55 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %31, align 8
  %56 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %55, i64 0, i32 16, i32 7, i32 68
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %46, i64 0, i32 1, i32 0, i32 0, i64 %37, i32 1, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %57, -1
  %61 = add i64 %60, %59
  %62 = urem i64 %61, %57
  %63 = sub i64 %34, %62
  %64 = add i64 %63, %61
  br label %65

65:                                               ; preds = %53, %45
  %66 = phi i64 [ %64, %53 ], [ %34, %45 ]
  %67 = xor i8 %50, -1
  %68 = and i8 %36, %67
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %65
  %71 = zext i8 %68 to i32
  %72 = tail call i32 @llvm.cttz.i32(i32 %71, i1 true) #8, !range !6
  br label %33

73:                                               ; preds = %65, %2
  %74 = phi i64 [ 0, %2 ], [ %66, %65 ]
  %75 = call zeroext i1 @_ZN2rx2vk13DynamicBuffer25allocateFromCurrentBufferEmPPhPm(%"class.rx::vk::DynamicBuffer"* %13, i64 %74, i8** nonnull %3, i64* nonnull %4) #8
  br i1 %75, label %183, label %76

76:                                               ; preds = %73
  %77 = load %"class.gl::State"*, %"class.gl::State"** %9, align 8
  %78 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %77, i64 0, i32 65
  %79 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %78, align 8
  %80 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %79, i64 0, i32 55
  %81 = load i8, i8* %80, align 4, !range !2
  %82 = icmp eq i8 %81, 0
  %83 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %79, i64 0, i32 3
  %84 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %79, i64 0, i32 2
  %85 = select i1 %82, %"class.angle::BitSetT.160"* %84, %"class.angle::BitSetT.160"* %83
  %86 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %85, i64 0, i32 0
  %87 = load i8, i8* %86, align 1, !noalias !16
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %124, label %89

89:                                               ; preds = %76
  %90 = zext i8 %87 to i32
  %91 = call i32 @llvm.cttz.i32(i32 %90, i1 true) #8, !range !6
  %92 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %77, i64 0, i32 64, i32 0, i32 1
  br label %93

93:                                               ; preds = %121, %89
  %94 = phi i32 [ %91, %89 ], [ %123, %121 ]
  %95 = phi i8 [ %87, %89 ], [ %119, %121 ]
  %96 = zext i32 %94 to i64
  %97 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %92, align 8
  %98 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %97, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %96
  %99 = load %"class.gl::Program"*, %"class.gl::Program"** %98, align 8
  %100 = icmp eq %"class.gl::Program"* %99, null
  br i1 %100, label %105, label %101

101:                                              ; preds = %93
  %102 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %99, i64 0, i32 5
  %103 = bitcast %"class.rx::ProgramImpl"** %102 to %"class.rx::ProgramVk"**
  %104 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %103, align 8
  br label %105

105:                                              ; preds = %101, %93
  %106 = phi %"class.rx::ProgramVk"* [ %104, %101 ], [ null, %93 ]
  %107 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %106, i64 0, i32 1, i32 0, i32 0, i64 %96, i32 1, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = icmp eq i64 %108, 0
  %110 = shl i32 1, %94
  %111 = trunc i32 %110 to i8
  br i1 %109, label %117, label %112

112:                                              ; preds = %105
  %113 = and i8 %111, 63
  %114 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %106, i64 0, i32 2, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = or i8 %115, %113
  store i8 %116, i8* %114, align 1
  br label %117

117:                                              ; preds = %112, %105
  %118 = xor i8 %111, -1
  %119 = and i8 %95, %118
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %124, label %121

121:                                              ; preds = %117
  %122 = zext i8 %119 to i32
  %123 = call i32 @llvm.cttz.i32(i32 %122, i1 true) #8, !range !6
  br label %93

124:                                              ; preds = %117, %76
  %125 = load i8, i8* %17, align 4, !range !2
  %126 = icmp eq i8 %125, 0
  %127 = select i1 %126, %"class.angle::BitSetT.160"* %22, %"class.angle::BitSetT.160"* %21
  %128 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %127, i64 0, i32 0
  %129 = load i8, i8* %128, align 1, !noalias !19
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %177, label %131

131:                                              ; preds = %124
  %132 = zext i8 %129 to i32
  %133 = call i32 @llvm.cttz.i32(i32 %132, i1 true) #8, !range !6
  %134 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 64, i32 0, i32 1
  %135 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 1, i32 1
  %136 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %134, align 8
  br label %137

137:                                              ; preds = %174, %131
  %138 = phi i64 [ 0, %131 ], [ %170, %174 ]
  %139 = phi i32 [ %133, %131 ], [ %176, %174 ]
  %140 = phi i8 [ %129, %131 ], [ %172, %174 ]
  %141 = zext i32 %139 to i64
  %142 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %136, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %141
  %143 = load %"class.gl::Program"*, %"class.gl::Program"** %142, align 8
  %144 = icmp eq %"class.gl::Program"* %143, null
  br i1 %144, label %149, label %145

145:                                              ; preds = %137
  %146 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %143, i64 0, i32 5
  %147 = bitcast %"class.rx::ProgramImpl"** %146 to %"class.rx::ProgramVk"**
  %148 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %147, align 8
  br label %149

149:                                              ; preds = %145, %137
  %150 = phi %"class.rx::ProgramVk"* [ %148, %145 ], [ null, %137 ]
  %151 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %150, i64 0, i32 2, i32 0
  %152 = load i8, i8* %151, align 1
  %153 = shl i32 1, %139
  %154 = trunc i32 %153 to i8
  %155 = and i8 %152, %154
  %156 = icmp eq i8 %155, 0
  br i1 %156, label %169, label %157

157:                                              ; preds = %149
  %158 = getelementptr inbounds %"class.angle::PackedEnumMap.1382", %"class.angle::PackedEnumMap.1382"* %6, i64 0, i32 0, i32 0, i64 %141
  store i64 %138, i64* %158, align 8
  %159 = load %"class.rx::RendererVk"*, %"class.rx::RendererVk"** %135, align 8
  %160 = getelementptr inbounds %"class.rx::RendererVk", %"class.rx::RendererVk"* %159, i64 0, i32 16, i32 7, i32 68
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %150, i64 0, i32 1, i32 0, i32 0, i64 %141, i32 1, i32 0
  %163 = load i64, i64* %162, align 8
  %164 = add i64 %161, -1
  %165 = add i64 %164, %163
  %166 = urem i64 %165, %161
  %167 = sub i64 %138, %166
  %168 = add i64 %167, %165
  br label %169

169:                                              ; preds = %157, %149
  %170 = phi i64 [ %168, %157 ], [ %138, %149 ]
  %171 = xor i8 %154, -1
  %172 = and i8 %140, %171
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %177, label %174

174:                                              ; preds = %169
  %175 = zext i8 %172 to i32
  %176 = call i32 @llvm.cttz.i32(i32 %175, i1 true) #8, !range !6
  br label %137

177:                                              ; preds = %169, %124
  %178 = phi i64 [ 0, %124 ], [ %170, %169 ]
  %179 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 81, i32 8
  %180 = load i64, i64* %179, align 8
  %181 = call i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"* %13, %"class.rx::ContextVk"* %1, i64 %178, i64 %180, i8** nonnull %3, %struct.VkBuffer_T** null, i64* nonnull %4, i8* nonnull %5) #8
  %182 = icmp eq i32 %181, 1
  br i1 %182, label %324, label %183

183:                                              ; preds = %177, %73
  %184 = load i8, i8* %17, align 4, !range !2
  %185 = icmp eq i8 %184, 0
  %186 = select i1 %185, %"class.angle::BitSetT.160"* %22, %"class.angle::BitSetT.160"* %21
  %187 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %186, i64 0, i32 0
  %188 = load i8, i8* %187, align 1, !noalias !22
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %194, label %190

190:                                              ; preds = %183
  %191 = zext i8 %188 to i32
  %192 = call i32 @llvm.cttz.i32(i32 %191, i1 true) #8, !range !6
  %193 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 64, i32 0, i32 1
  br label %197

194:                                              ; preds = %237, %183
  %195 = call i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"* %13, %"class.rx::ContextVk"* %1) #8
  %196 = icmp eq i32 %195, 1
  br i1 %196, label %324, label %245

197:                                              ; preds = %241, %190
  %198 = phi i32 [ 0, %190 ], [ %242, %241 ]
  %199 = phi i32 [ %192, %190 ], [ %244, %241 ]
  %200 = phi i8 [ %188, %190 ], [ %239, %241 ]
  %201 = zext i32 %199 to i64
  %202 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %193, align 8
  %203 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %202, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %201
  %204 = load %"class.gl::Program"*, %"class.gl::Program"** %203, align 8
  %205 = icmp eq %"class.gl::Program"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %197
  %207 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %204, i64 0, i32 5
  %208 = bitcast %"class.rx::ProgramImpl"** %207 to %"class.rx::ProgramVk"**
  %209 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %208, align 8
  br label %210

210:                                              ; preds = %197, %206
  %211 = phi %"class.rx::ProgramVk"* [ %209, %206 ], [ null, %197 ]
  %212 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %211, i64 0, i32 2, i32 0
  %213 = load i8, i8* %212, align 1
  %214 = shl i32 1, %199
  %215 = trunc i32 %214 to i8
  %216 = and i8 %213, %215
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %210
  %219 = xor i8 %215, -1
  br label %237

220:                                              ; preds = %210
  %221 = load i8*, i8** %3, align 8
  %222 = getelementptr inbounds %"class.angle::PackedEnumMap.1382", %"class.angle::PackedEnumMap.1382"* %6, i64 0, i32 0, i32 0, i64 %201
  %223 = load i64, i64* %222, align 8
  %224 = getelementptr inbounds i8, i8* %221, i64 %223
  %225 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %211, i64 0, i32 1, i32 0, i32 0, i64 %201, i32 1, i32 1
  %226 = load i8*, i8** %225, align 8
  %227 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %211, i64 0, i32 1, i32 0, i32 0, i64 %201, i32 1, i32 0
  %228 = load i64, i64* %227, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %224, i8* align 1 %226, i64 %228, i1 false)
  %229 = load i64, i64* %4, align 8
  %230 = add i64 %229, %223
  %231 = trunc i64 %230 to i32
  %232 = zext i32 %198 to i64
  %233 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1, i32 13, i32 0, i32 0, i64 %232
  store i32 %231, i32* %233, align 4
  %234 = xor i8 %215, -1
  %235 = load i8, i8* %212, align 1
  %236 = and i8 %235, %234
  store i8 %236, i8* %212, align 1
  br label %237

237:                                              ; preds = %218, %220
  %238 = phi i8 [ %219, %218 ], [ %234, %220 ]
  %239 = and i8 %200, %238
  %240 = icmp eq i8 %239, 0
  br i1 %240, label %194, label %241

241:                                              ; preds = %237
  %242 = add i32 %198, 1
  %243 = zext i8 %239 to i32
  %244 = call i32 @llvm.cttz.i32(i32 %243, i1 true) #8, !range !6
  br label %197

245:                                              ; preds = %194
  %246 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 81, i32 4, i32 0, i32 0, i32 0
  %247 = load %"class.rx::vk::BufferHelper"*, %"class.rx::vk::BufferHelper"** %246, align 8
  %248 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1
  %249 = getelementptr inbounds %"class.rx::ProgramPipelineVk", %"class.rx::ProgramPipelineVk"* %0, i64 0, i32 1, i32 4, i32 0
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %"class.rx::vk::BufferHelper", %"class.rx::vk::BufferHelper"* %247, i64 0, i32 10, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = icmp eq i32 %250, %252
  br i1 %253, label %324, label %254

254:                                              ; preds = %245
  %255 = bitcast %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %255) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %255, i8 -86, i64 40, i1 false)
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull %7) #8
  %256 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 26, i32 0, i32 0
  %257 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %256, align 8
  %258 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %12, i64 0, i32 26, i32 0, i32 1
  %259 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %258, align 8
  %260 = icmp eq %"struct.gl::TransformFeedbackVarying"* %257, %259
  br i1 %260, label %270, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 86, i32 0, i32 1
  %263 = load %"class.gl::TransformFeedback"*, %"class.gl::TransformFeedback"** %262, align 8
  %264 = call %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"* %263) #8
  %265 = getelementptr inbounds %"class.rx::TransformFeedbackImpl", %"class.rx::TransformFeedbackImpl"* %264, i64 39, i32 1
  %266 = bitcast %"class.gl::TransformFeedbackState"** %265 to %"class.rx::vk::UniformsAndXfbDescriptorDesc"*
  %267 = load i32, i32* %251, align 4
  %268 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %266, i64 0, i32 1, i32 0, i64 0, i32 0
  store i32 %267, i32* %268, align 4
  %269 = bitcast %"class.gl::TransformFeedbackState"** %265 to i32*
  br label %274

270:                                              ; preds = %254
  %271 = load i32, i32* %251, align 4
  %272 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %7, i64 0, i32 1, i32 0, i64 0, i32 0
  store i32 %271, i32* %272, align 4
  %273 = getelementptr inbounds %"class.rx::vk::UniformsAndXfbDescriptorDesc", %"class.rx::vk::UniformsAndXfbDescriptorDesc"* %7, i64 0, i32 0
  br label %274

274:                                              ; preds = %270, %261
  %275 = phi i32* [ %273, %270 ], [ %269, %261 ]
  %276 = phi %"class.rx::vk::UniformsAndXfbDescriptorDesc"* [ %7, %270 ], [ %266, %261 ]
  %277 = load i32, i32* %275, align 4
  %278 = icmp eq i32 %277, 0
  %279 = select i1 %278, i32 1, i32 %277
  store i32 %279, i32* %275, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 -86, i8* %8, align 1
  %280 = call i32 @_ZN2rx19ProgramExecutableVk31allocUniformAndXfbDescriptorSetEPNS_9ContextVkERKNS_2vk28UniformsAndXfbDescriptorDescEPb(%"class.rx::ProgramExecutableVk"* %248, %"class.rx::ContextVk"* %1, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40) %276, i8* nonnull %8) #8
  %281 = icmp eq i32 %280, 1
  br i1 %281, label %323, label %282

282:                                              ; preds = %274
  %283 = load i8, i8* %8, align 1, !range !2
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %322, label %285

285:                                              ; preds = %282
  %286 = load i8, i8* %17, align 4, !range !2
  %287 = icmp eq i8 %286, 0
  %288 = select i1 %287, %"class.angle::BitSetT.160"* %22, %"class.angle::BitSetT.160"* %21
  %289 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %288, i64 0, i32 0
  %290 = load i8, i8* %289, align 1, !noalias !25
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %322, label %292

292:                                              ; preds = %285
  %293 = zext i8 %290 to i32
  %294 = call i32 @llvm.cttz.i32(i32 %293, i1 true) #8, !range !6
  %295 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %10, i64 0, i32 64, i32 0, i32 1
  br label %296

296:                                              ; preds = %319, %292
  %297 = phi i8 [ %290, %292 ], [ %317, %319 ]
  %298 = phi i32 [ %294, %292 ], [ %321, %319 ]
  %299 = zext i32 %298 to i64
  %300 = trunc i32 %298 to i8
  %301 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %295, align 8
  %302 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %301, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %299
  %303 = load %"class.gl::Program"*, %"class.gl::Program"** %302, align 8
  %304 = icmp eq %"class.gl::Program"* %303, null
  br i1 %304, label %309, label %305

305:                                              ; preds = %296
  %306 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %303, i64 0, i32 5
  %307 = bitcast %"class.rx::ProgramImpl"** %306 to %"class.rx::ProgramVk"**
  %308 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %307, align 8
  br label %309

309:                                              ; preds = %296, %305
  %310 = phi %"class.rx::ProgramVk"* [ %308, %305 ], [ null, %296 ]
  %311 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %310, i64 0, i32 1, i32 0, i32 0, i64 %299
  call void @_ZN2rx19ProgramExecutableVk34updateDefaultUniformsDescriptorSetEN2gl10ShaderTypeERKNS_19DefaultUniformBlockEPNS_2vk12BufferHelperEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %248, i8 zeroext %300, %"struct.rx::DefaultUniformBlock"* dereferenceable(48) %311, %"class.rx::vk::BufferHelper"* %247, %"class.rx::ContextVk"* %1) #8
  %312 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %310, i64 0, i32 0, i32 1
  %313 = load %"class.gl::ProgramState"*, %"class.gl::ProgramState"** %312, align 8
  call void @_ZN2rx19ProgramExecutableVk40updateTransformFeedbackDescriptorSetImplERKN2gl12ProgramStateEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"* %248, %"class.gl::ProgramState"* dereferenceable(304) %313, %"class.rx::ContextVk"* %1) #8
  %314 = shl i32 1, %298
  %315 = trunc i32 %314 to i8
  %316 = xor i8 %315, -1
  %317 = and i8 %297, %316
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %322, label %319

319:                                              ; preds = %309
  %320 = zext i8 %317 to i32
  %321 = call i32 @llvm.cttz.i32(i32 %320, i1 true) #8, !range !6
  br label %296

322:                                              ; preds = %309, %285, %282
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %255) #8
  br label %324

323:                                              ; preds = %274
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  call void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %255) #8
  br label %324

324:                                              ; preds = %245, %322, %323, %194, %177
  %325 = phi i32 [ 1, %194 ], [ 1, %177 ], [ 1, %323 ], [ 0, %322 ], [ 0, %245 ]
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  ret i32 %325
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare zeroext i1 @_ZN2rx2vk13DynamicBuffer25allocateFromCurrentBufferEmPPhPm(%"class.rx::vk::DynamicBuffer"*, i64, i8**, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVk26setAllDefaultUniformsDirtyERKN2gl5StateE(%"class.rx::ProgramPipelineVk"* nocapture readnone, %"class.gl::State"* nocapture readonly dereferenceable(12296)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %1, i64 0, i32 65
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 55
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 3
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 2
  %10 = select i1 %7, %"class.angle::BitSetT.160"* %9, %"class.angle::BitSetT.160"* %8
  %11 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %10, i64 0, i32 0
  %12 = load i8, i8* %11, align 1, !noalias !28
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = zext i8 %12 to i32
  %16 = tail call i32 @llvm.cttz.i32(i32 %15, i1 true) #8, !range !6
  %17 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %1, i64 0, i32 64, i32 0, i32 1
  br label %19

18:                                               ; preds = %43, %2
  ret void

19:                                               ; preds = %47, %14
  %20 = phi i32 [ %16, %14 ], [ %49, %47 ]
  %21 = phi i8 [ %12, %14 ], [ %45, %47 ]
  %22 = zext i32 %20 to i64
  %23 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %17, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %23, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %22
  %25 = load %"class.gl::Program"*, %"class.gl::Program"** %24, align 8
  %26 = icmp eq %"class.gl::Program"* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %25, i64 0, i32 5
  %29 = bitcast %"class.rx::ProgramImpl"** %28 to %"class.rx::ProgramVk"**
  %30 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %29, align 8
  br label %31

31:                                               ; preds = %19, %27
  %32 = phi %"class.rx::ProgramVk"* [ %30, %27 ], [ null, %19 ]
  %33 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %32, i64 0, i32 1, i32 0, i32 0, i64 %22, i32 1, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  %36 = shl i32 1, %20
  %37 = trunc i32 %36 to i8
  br i1 %35, label %43, label %38

38:                                               ; preds = %31
  %39 = and i8 %37, 63
  %40 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %32, i64 0, i32 2, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = or i8 %41, %39
  store i8 %42, i8* %40, align 1
  br label %43

43:                                               ; preds = %31, %38
  %44 = xor i8 %37, -1
  %45 = and i8 %21, %44
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %18, label %47

47:                                               ; preds = %43
  %48 = zext i8 %45 to i32
  %49 = tail call i32 @llvm.cttz.i32(i32 %48, i1 true) #8, !range !6
  br label %19
}

declare i32 @_ZN2rx2vk13DynamicBuffer5flushEPNS_9ContextVkE(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescC1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) unnamed_addr #1

declare i32 @_ZN2rx19ProgramExecutableVk31allocUniformAndXfbDescriptorSetEPNS_9ContextVkERKNS_2vk28UniformsAndXfbDescriptorDescEPb(%"class.rx::ProgramExecutableVk"*, %"class.rx::ContextVk"*, %"class.rx::vk::UniformsAndXfbDescriptorDesc"* dereferenceable(40), i8*) local_unnamed_addr #1

declare void @_ZN2rx19ProgramExecutableVk34updateDefaultUniformsDescriptorSetEN2gl10ShaderTypeERKNS_19DefaultUniformBlockEPNS_2vk12BufferHelperEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, i8 zeroext, %"struct.rx::DefaultUniformBlock"* dereferenceable(48), %"class.rx::vk::BufferHelper"*, %"class.rx::ContextVk"*) local_unnamed_addr #1

declare void @_ZN2rx19ProgramExecutableVk40updateTransformFeedbackDescriptorSetImplERKN2gl12ProgramStateEPNS_9ContextVkE(%"class.rx::ProgramExecutableVk"*, %"class.gl::ProgramState"* dereferenceable(304), %"class.rx::ContextVk"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2rx2vk28UniformsAndXfbDescriptorDescD1Ev(%"class.rx::vk::UniformsAndXfbDescriptorDesc"*) unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2rx17ProgramPipelineVk13dirtyUniformsERKN2gl5StateE(%"class.rx::ProgramPipelineVk"* nocapture readnone, %"class.gl::State"* nocapture readonly dereferenceable(12296)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %1, i64 0, i32 64, i32 0, i32 1
  %4 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 0
  %6 = load %"class.gl::Program"*, %"class.gl::Program"** %5, align 8
  %7 = icmp eq %"class.gl::Program"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %6, i64 0, i32 5
  %10 = bitcast %"class.rx::ProgramImpl"** %9 to %"class.rx::ProgramVk"**
  %11 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %10, align 8
  %12 = icmp eq %"class.rx::ProgramVk"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %11, i64 0, i32 2, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %13, %2, %8
  %18 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 1
  %19 = load %"class.gl::Program"*, %"class.gl::Program"** %18, align 8
  %20 = icmp eq %"class.gl::Program"* %19, null
  br i1 %20, label %32, label %23

21:                                               ; preds = %84, %80, %67, %54, %41, %28, %13
  %22 = phi i1 [ true, %13 ], [ true, %28 ], [ true, %41 ], [ true, %54 ], [ true, %67 ], [ true, %80 ], [ false, %84 ]
  ret i1 %22

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %19, i64 0, i32 5
  %25 = bitcast %"class.rx::ProgramImpl"** %24 to %"class.rx::ProgramVk"**
  %26 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %25, align 8
  %27 = icmp eq %"class.rx::ProgramVk"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %26, i64 0, i32 2, i32 0
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %21

32:                                               ; preds = %28, %23, %17
  %33 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 2
  %34 = load %"class.gl::Program"*, %"class.gl::Program"** %33, align 8
  %35 = icmp eq %"class.gl::Program"* %34, null
  br i1 %35, label %45, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %34, i64 0, i32 5
  %38 = bitcast %"class.rx::ProgramImpl"** %37 to %"class.rx::ProgramVk"**
  %39 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %38, align 8
  %40 = icmp eq %"class.rx::ProgramVk"* %39, null
  br i1 %40, label %45, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %39, i64 0, i32 2, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %21

45:                                               ; preds = %41, %36, %32
  %46 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 3
  %47 = load %"class.gl::Program"*, %"class.gl::Program"** %46, align 8
  %48 = icmp eq %"class.gl::Program"* %47, null
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %47, i64 0, i32 5
  %51 = bitcast %"class.rx::ProgramImpl"** %50 to %"class.rx::ProgramVk"**
  %52 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %51, align 8
  %53 = icmp eq %"class.rx::ProgramVk"* %52, null
  br i1 %53, label %58, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %52, i64 0, i32 2, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %21

58:                                               ; preds = %54, %49, %45
  %59 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 4
  %60 = load %"class.gl::Program"*, %"class.gl::Program"** %59, align 8
  %61 = icmp eq %"class.gl::Program"* %60, null
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %60, i64 0, i32 5
  %64 = bitcast %"class.rx::ProgramImpl"** %63 to %"class.rx::ProgramVk"**
  %65 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %64, align 8
  %66 = icmp eq %"class.rx::ProgramVk"* %65, null
  br i1 %66, label %71, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %65, i64 0, i32 2, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %21

71:                                               ; preds = %67, %62, %58
  %72 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %4, i64 0, i32 5, i32 2, i32 0, i32 0, i64 5
  %73 = load %"class.gl::Program"*, %"class.gl::Program"** %72, align 8
  %74 = icmp eq %"class.gl::Program"* %73, null
  br i1 %74, label %84, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %73, i64 0, i32 5
  %77 = bitcast %"class.rx::ProgramImpl"** %76 to %"class.rx::ProgramVk"**
  %78 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %77, align 8
  %79 = icmp eq %"class.rx::ProgramVk"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %78, i64 0, i32 2, i32 0
  %82 = load i8, i8* %81, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %21

84:                                               ; preds = %80, %75, %71
  br label %21
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2rx17ProgramPipelineVk13onProgramBindEPNS_9ContextVkE(%"class.rx::ProgramPipelineVk"* nocapture readnone, %"class.rx::ContextVk"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextVk", %"class.rx::ContextVk"* %1, i64 0, i32 0, i32 1
  %4 = load %"class.gl::State"*, %"class.gl::State"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %4, i64 0, i32 65
  %6 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 55
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %6, i64 0, i32 2
  %12 = select i1 %9, %"class.angle::BitSetT.160"* %11, %"class.angle::BitSetT.160"* %10
  %13 = getelementptr inbounds %"class.angle::BitSetT.160", %"class.angle::BitSetT.160"* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 1, !noalias !31
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %51, label %16

16:                                               ; preds = %2
  %17 = zext i8 %14 to i32
  %18 = tail call i32 @llvm.cttz.i32(i32 %17, i1 true) #8, !range !6
  %19 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %4, i64 0, i32 64, i32 0, i32 1
  br label %20

20:                                               ; preds = %48, %16
  %21 = phi i32 [ %18, %16 ], [ %50, %48 ]
  %22 = phi i8 [ %14, %16 ], [ %46, %48 ]
  %23 = zext i32 %21 to i64
  %24 = load %"class.gl::ProgramPipeline"*, %"class.gl::ProgramPipeline"** %19, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramPipeline", %"class.gl::ProgramPipeline"* %24, i64 0, i32 5, i32 2, i32 0, i32 0, i64 %23
  %26 = load %"class.gl::Program"*, %"class.gl::Program"** %25, align 8
  %27 = icmp eq %"class.gl::Program"* %26, null
  br i1 %27, label %32, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %26, i64 0, i32 5
  %30 = bitcast %"class.rx::ProgramImpl"** %29 to %"class.rx::ProgramVk"**
  %31 = load %"class.rx::ProgramVk"*, %"class.rx::ProgramVk"** %30, align 8
  br label %32

32:                                               ; preds = %28, %20
  %33 = phi %"class.rx::ProgramVk"* [ %31, %28 ], [ null, %20 ]
  %34 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %33, i64 0, i32 1, i32 0, i32 0, i64 %23, i32 1, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  %37 = shl i32 1, %21
  %38 = trunc i32 %37 to i8
  br i1 %36, label %44, label %39

39:                                               ; preds = %32
  %40 = and i8 %38, 63
  %41 = getelementptr inbounds %"class.rx::ProgramVk", %"class.rx::ProgramVk"* %33, i64 0, i32 2, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = or i8 %42, %40
  store i8 %43, i8* %41, align 1
  br label %44

44:                                               ; preds = %39, %32
  %45 = xor i8 %38, -1
  %46 = and i8 %22, %45
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = zext i8 %46 to i32
  %50 = tail call i32 @llvm.cttz.i32(i32 %49, i1 true) #8, !range !6
  br label %20

51:                                               ; preds = %44, %2
  ret void
}

declare i32 @_ZN2rx2vk13DynamicBuffer21allocateWithAlignmentEPNS_9ContextVkEmmPPhPP10VkBuffer_TPmPb(%"class.rx::vk::DynamicBuffer"*, %"class.rx::ContextVk"*, i64, i64, i8**, %struct.VkBuffer_T**, i64*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #7

declare %"class.rx::TransformFeedbackImpl"* @_ZNK2gl17TransformFeedback17getImplementationEv(%"class.gl::TransformFeedback"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!6 = !{i32 0, i32 33}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!24 = distinct !{!24, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!27 = distinct !{!27, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
