; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_database.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_database.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.137", %"class.std::__1::unique_ptr.143", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.161", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.167", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.53", %"class.std::__1::unique_ptr.60", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.88", %"class.std::__1::unique_ptr.111", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.35" }
%"struct.std::__1::__atomic_base.35" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"class.blink::Worklist.42"* }
%"class.blink::Worklist.42" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::Worklist.49"* }
%"class.blink::Worklist.49" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.53" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.blink::Worklist.56"* }
%"class.blink::Worklist.56" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.60" = type { %"class.std::__1::__compressed_pair.61" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.62" }
%"struct.std::__1::__compressed_pair_elem.62" = type { %"class.blink::Worklist.63"* }
%"class.blink::Worklist.63" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::Worklist.70"* }
%"class.blink::Worklist.70" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::Worklist.77"* }
%"class.blink::Worklist.77" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.blink::Worklist.84"* }
%"class.blink::Worklist.84" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.91", %"class.std::__1::__compressed_pair.98", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.105", [4 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93", %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64 }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { float }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.114", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.114" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.135" }
%"class.WTF::VectorBuffer.135" = type { %"class.WTF::VectorBufferBase.136" }
%"class.WTF::VectorBufferBase.136" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.149" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.42"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.49"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.56"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.63"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.70"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.171" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.161" = type { %"class.std::__1::__compressed_pair.162" }
%"class.std::__1::__compressed_pair.162" = type { %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.167" = type { %"struct.std::__1::__atomic_base.168" }
%"struct.std::__1::__atomic_base.168" = type { %"struct.std::__1::__cxx_atomic_impl.169" }
%"struct.std::__1::__cxx_atomic_impl.169" = type { %"struct.std::__1::__cxx_atomic_base_impl.170" }
%"struct.std::__1::__cxx_atomic_base_impl.170" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"struct.blink::bindings::IDLMemberInstaller::AttributeConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i16, [6 x i8] }>
%"class.base::span.181" = type { %"struct.base::internal::ExtentStorage", %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* }
%"struct.blink::bindings::IDLMemberInstaller::OperationConfig" = type <{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, [3 x i8], [5 x i8] }>
%"class.v8::FunctionTemplate" = type { i8 }
%"class.v8::ObjectTemplate" = type { i8 }
%"class.v8::Signature" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.blink::Database" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.184, %class.scoped_refptr.184, %"class.blink::Member", %class.scoped_refptr.186, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, %"struct.std::__1::atomic.167", i8, %"class.blink::DatabaseAuthorizer", %"class.blink::SQLiteDatabase", %"class.WTF::Deque.203", %"class.WTF::Mutex", i8, i8, %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" }
%class.scoped_refptr.184 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.297", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.299", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.184 }
%"class.WTF::RefCounted.297" = type { %"class.base::RefCounted.298" }
%"class.base::RefCounted.298" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.299" = type { %"class.absl::optional_internal::optional_data.300" }
%"class.absl::optional_internal::optional_data.300" = type { %"class.absl::optional_internal::optional_data_base.301" }
%"class.absl::optional_internal::optional_data_base.301" = type { %"class.absl::optional_internal::optional_data_dtor_base.302" }
%"class.absl::optional_internal::optional_data_dtor_base.302" = type { i8, %union.anon.303 }
%union.anon.303 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::Member" = type { %"class.blink::MemberBase.185" }
%"class.blink::MemberBase.185" = type { %"class.blink::DatabaseContext"* }
%"class.blink::DatabaseContext" = type opaque
%class.scoped_refptr.186 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.187" }
%"struct.std::__1::atomic.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__cxx_atomic_impl.190" }
%"struct.std::__1::__cxx_atomic_impl.190" = type { %"struct.std::__1::__cxx_atomic_base_impl.191" }
%"struct.std::__1::__cxx_atomic_base_impl.191" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.192 }
%class.scoped_refptr.192 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.193" }
%"struct.std::__1::atomic.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i32 }
%"class.blink::DatabaseAuthorizer" = type { i32, i8, %"class.WTF::String" }
%"class.blink::SQLiteDatabase" = type <{ %struct.sqlite3*, i32, i8, [3 x i8], %"class.WTF::Mutex", %"class.blink::DatabaseAuthorizer"*, i32, [4 x i8], %"class.WTF::Mutex", i32, [4 x i8], %"class.std::__1::basic_string", i32, [4 x i8] }>
%struct.sqlite3 = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::Deque.203" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLTransactionBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.blink::CrossThreadPersistent"*, i32, i32 }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.208" }
%"class.blink::PersistentBase.208" = type { %"class.blink::SQLTransactionBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransactionBackend" = type { %"class.blink::SQLTransactionStateMachine", %"class.blink::CrossThreadPersistent.211", %"class.blink::CrossThreadPersistent.241", %"class.blink::CrossThreadPersistent.273", %"class.blink::Member.275", %"class.std::__1::unique_ptr.230", i8, i8, i8, i8, i8, i8, i8, i8, %"class.WTF::Mutex", %"class.WTF::Deque.279", %"class.std::__1::unique_ptr.284" }
%"class.blink::SQLTransactionStateMachine" = type { i32 (...)**, i32, i32 }
%"class.blink::CrossThreadPersistent.211" = type { %"class.blink::PersistentBase.212" }
%"class.blink::PersistentBase.212" = type { %"class.blink::SQLTransaction"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLTransaction" = type <{ %"class.blink::ScriptWrappable", %"class.blink::SQLTransactionStateMachine.213", %"class.blink::Member.214", %"class.blink::Member.216", %"class.blink::Member.218", %"class.blink::Member.222", %"class.blink::Member.226", i8, [7 x i8], %"class.std::__1::unique_ptr.230", %"class.blink::probe::AsyncTaskId", i8, [7 x i8] }>
%"class.blink::SQLTransactionStateMachine.213" = type { i32 (...)**, i32, i32 }
%"class.blink::Member.214" = type { %"class.blink::MemberBase.215" }
%"class.blink::MemberBase.215" = type { %"class.blink::Database"* }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::SQLTransactionBackend"* }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::SQLTransaction::OnProcessCallback"* }
%"class.blink::SQLTransaction::OnProcessCallback" = type { i32 (...)** }
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::SQLTransaction::OnSuccessCallback"* }
%"class.blink::SQLTransaction::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::SQLTransaction::OnErrorCallback"* }
%"class.blink::SQLTransaction::OnErrorCallback" = type { i32 (...)** }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.236 }
%union.anon.236 = type { i64 }
%"class.blink::CrossThreadPersistent.241" = type { %"class.blink::PersistentBase.242" }
%"class.blink::PersistentBase.242" = type { %"class.blink::SQLStatementBackend"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::SQLStatementBackend" = type <{ %"class.blink::Member.245", %"class.WTF::String", %"class.WTF::Vector.259", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.230", %"class.blink::Member.264", i32, [4 x i8] }>
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::SQLStatement"* }
%"class.blink::SQLStatement" = type { %"class.blink::Member.249", %"class.blink::Member.251", %"class.blink::Member.255", %"class.blink::probe::AsyncTaskId" }
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::SQLStatementBackend"* }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::SQLStatement::OnSuccessCallback"* }
%"class.blink::SQLStatement::OnSuccessCallback" = type { i32 (...)** }
%"class.blink::Member.255" = type { %"class.blink::MemberBase.256" }
%"class.blink::MemberBase.256" = type { %"class.blink::SQLStatement::OnErrorCallback"* }
%"class.blink::SQLStatement::OnErrorCallback" = type { i32 (...)** }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.blink::SQLValue"*, i32, i32 }
%"class.blink::SQLValue" = type { i32, double, %"class.WTF::String" }
%"class.blink::Member.264" = type { %"class.blink::MemberBase.265" }
%"class.blink::MemberBase.265" = type { %"class.blink::SQLResultSet"* }
%"class.blink::SQLResultSet" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.266", i64, i32, i8, i8, [2 x i8] }>
%"class.blink::Member.266" = type { %"class.blink::MemberBase.267" }
%"class.blink::MemberBase.267" = type { %"class.blink::SQLResultSetRowList"* }
%"class.blink::SQLResultSetRowList" = type { %"class.blink::ScriptWrappable", %"class.WTF::Vector.268", %"class.WTF::Vector.259" }
%"class.WTF::Vector.268" = type { %"class.WTF::VectorBuffer.269" }
%"class.WTF::VectorBuffer.269" = type { %"class.WTF::VectorBufferBase.270" }
%"class.WTF::VectorBufferBase.270" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::CrossThreadPersistent.273" = type { %"class.blink::PersistentBase.274" }
%"class.blink::PersistentBase.274" = type { %"class.blink::Database"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::Member.275" = type { %"class.blink::MemberBase.276" }
%"class.blink::MemberBase.276" = type { %"class.blink::SQLTransactionWrapper"* }
%"class.blink::SQLTransactionWrapper" = type { i32 (...)** }
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.blink::SQLErrorData"* }
%"class.blink::SQLErrorData" = type opaque
%"class.WTF::Deque.279" = type { %"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CrossThreadPersistent<blink::SQLStatementBackend>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.282" }
%"class.WTF::VectorBuffer.282" = type { %"class.WTF::VectorBufferBase.283" }
%"class.WTF::VectorBufferBase.283" = type { %"class.blink::CrossThreadPersistent.241"*, i32, i32 }
%"class.std::__1::unique_ptr.284" = type { %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.blink::SQLiteTransaction"* }
%"class.blink::SQLiteTransaction" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.237" }
%"struct.std::__1::atomic.237" = type { %"struct.std::__1::__atomic_base.238" }
%"struct.std::__1::__atomic_base.238" = type { %"struct.std::__1::__cxx_atomic_impl.239" }
%"struct.std::__1::__cxx_atomic_impl.239" = type { %"struct.std::__1::__cxx_atomic_base_impl.240" }
%"struct.std::__1::__cxx_atomic_base_impl.240" = type { %"class.blink::PersistentNode"* }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.290 }
%class.scoped_refptr.290 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.291", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.291" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.292" }
%"struct.std::__1::atomic.292" = type { %"struct.std::__1::__atomic_base.293" }
%"struct.std::__1::__atomic_base.293" = type { %"struct.std::__1::__atomic_base.294" }
%"struct.std::__1::__atomic_base.294" = type { %"struct.std::__1::__cxx_atomic_impl.295" }
%"struct.std::__1::__cxx_atomic_impl.295" = type { %"struct.std::__1::__cxx_atomic_base_impl.296" }
%"struct.std::__1::__cxx_atomic_base_impl.296" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.322", %"class.WTF::HashMap.322", %"class.WTF::HashMap.327", %"class.std::__1::unique_ptr.332", %"class.std::__1::unique_ptr.379", %"class.blink::Persistent.390", i8, i8, i8, %"class.WTF::Vector.392", %"class.std::__1::unique_ptr.397", %"class.blink::Persistent.403", %"class.blink::Persistent.407", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.304", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", i32, i32 }
%"class.std::__1::unique_ptr.304" = type { %"class.std::__1::__compressed_pair.305" }
%"class.std::__1::__compressed_pair.305" = type { %"struct.std::__1::__compressed_pair_elem.306" }
%"struct.std::__1::__compressed_pair_elem.306" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.322" = type { %"class.WTF::HashTable.323" }
%"class.WTF::HashTable.323" = type <{ %"struct.WTF::KeyValuePair.326"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.326" = type opaque
%"class.WTF::HashMap.327" = type { %"class.WTF::HashTable.328" }
%"class.WTF::HashTable.328" = type <{ %"struct.WTF::KeyValuePair.331"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.331" = type opaque
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.340", %class.scoped_refptr.192 }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.335", i8* }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.339" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.340" = type { %"class.v8::PersistentValueMapBase.341" }
%"class.v8::PersistentValueMapBase.341" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.342", i8* }
%"class.WTF::HashMap.342" = type { %"class.WTF::HashTable.343" }
%"class.WTF::HashTable.343" = type <{ %"struct.WTF::KeyValuePair.346"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.346" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted.347", %"class.WTF::String", %"class.std::__1::unique_ptr.349" }
%"class.WTF::RefCounted.347" = type { %"class.base::RefCounted.348" }
%"class.base::RefCounted.348" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.352", %"class.std::__1::unique_ptr.363", %"class.WTF::Vector.369", i8, i32 }
%"class.std::__1::unique_ptr.352" = type { %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.WTF::Vector.355"* }
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.369" = type { %"class.WTF::VectorBuffer.370" }
%"class.WTF::VectorBuffer.370" = type { %"class.WTF::VectorBufferBase.357", [32 x i8] }
%"class.std::__1::unique_ptr.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.381" }
%"struct.std::__1::__compressed_pair_elem.381" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type { %"class.blink::ScopedPersistent", %"class.WTF::HashMap.382" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Private"* }
%"class.v8::Private" = type { i8 }
%"class.WTF::HashMap.382" = type { %"class.WTF::HashTable.383" }
%"class.WTF::HashTable.383" = type <{ %"struct.WTF::KeyValuePair.386"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.386" = type opaque
%"class.blink::Persistent.390" = type { %"class.blink::PersistentBase.391" }
%"class.blink::PersistentBase.391" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent.423", %class.scoped_refptr.426, %"class.blink::Member.427", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent.423" = type { %"class.v8::Persistent.424" }
%"class.v8::Persistent.424" = type { %"class.v8::PersistentBase.425" }
%"class.v8::PersistentBase.425" = type { %"class.v8::Context"* }
%class.scoped_refptr.426 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.390" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.397" = type { %"class.std::__1::__compressed_pair.398" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.399" }
%"struct.std::__1::__compressed_pair_elem.399" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.403" = type { %"class.blink::PersistentBase.404" }
%"class.blink::PersistentBase.404" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.407" = type { %"class.blink::PersistentBase.408" }
%"class.blink::PersistentBase.408" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.413" }
%"class.WTF::Vector.413" = type { %"class.WTF::VectorBuffer.414" }
%"class.WTF::VectorBuffer.414" = type { %"class.WTF::VectorBufferBase.415" }
%"class.WTF::VectorBufferBase.415" = type { %"struct.std::__1::pair.416"*, i32, i32 }
%"struct.std::__1::pair.416" = type { %"class.blink::UntracedMember", %"class.blink::Member.418" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.503" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.503" = type { %"class.v8::TracedReference.504" }
%"class.v8::TracedReference.504" = type { %"class.v8::BasicTracedReference.505" }
%"class.v8::BasicTracedReference.505" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::bindings::NativeValueTraitsStringAdapter" = type { %"class.v8::Local.183", %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local.183" = type { %"class.v8::String"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.506" }
%"class.std::__1::unique_ptr.506" = type { %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { i8* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.472", i32, i8, [3 x i8], %"class.blink::HeapVector.474", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.482", %"class.blink::Member.484", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.493", %"class.blink::Member.499", %"class.blink::Member.501", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.429" }
%"class.blink::HeapHashMap.429" = type { %"class.WTF::HashMap.432" }
%"class.WTF::HashMap.432" = type { %"class.WTF::HashTable.433" }
%"class.WTF::HashTable.433" = type <{ %"struct.WTF::KeyValuePair.435"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.435" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.441" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.438" }
%"class.WTF::HashTable.438" = type <{ %"class.blink::WeakMember.440"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.440" = type opaque
%"class.blink::Supplementable.441" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.442" }
%"class.blink::HeapHashMap.442" = type { %"class.WTF::HashMap.445" }
%"class.WTF::HashMap.445" = type { %"class.WTF::HashTable.446" }
%"class.WTF::HashTable.446" = type <{ %"struct.WTF::KeyValuePair.448"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.448" = type { i8*, %"class.blink::Member.449" }
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.451" }
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.453, %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460", %"class.blink::Member.466", i32, [4 x i8], %"class.WTF::HashSet.468", i32, i32 }
%class.scoped_refptr.453 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.474" = type { %"class.WTF::Vector.477" }
%"class.WTF::Vector.477" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"class.blink::Member.480"*, i32, i32 }
%"class.blink::Member.480" = type opaque
%"class.blink::Member.482" = type { %"class.blink::MemberBase.483" }
%"class.blink::MemberBase.483" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.484" = type { %"class.blink::MemberBase.485" }
%"class.blink::MemberBase.485" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.486", i32, i32 }
%"class.blink::HeapHashMap.486" = type { %"class.WTF::HashMap.489" }
%"class.WTF::HashMap.489" = type { %"class.WTF::HashTable.490" }
%"class.WTF::HashTable.490" = type <{ %"struct.WTF::KeyValuePair.492"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.492" = type opaque
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.499" = type { %"class.blink::MemberBase.500" }
%"class.blink::MemberBase.500" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::V8SQLTransactionCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::CallbackInterfaceBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", i8, %"class.blink::Member.512", %"class.blink::Member.512" }
%"class.blink::Member.512" = type { %"class.blink::MemberBase.513" }
%"class.blink::MemberBase.513" = type { %"class.blink::ScriptState"* }
%"class.blink::V8SQLTransactionErrorCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.blink::V8VoidCallback" = type { %"class.blink::CallbackInterfaceBase" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::Int32" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_24V8SQLTransactionCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_29V8SQLTransactionErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14V8VoidCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv = comdat any

$_ZN5blink17NativeValueTraitsINS_24V8SQLTransactionCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [9 x i8] c"Database\00", align 1
@_ZN5blink10V8Database18wrapper_type_info_E = hidden constant %"struct.blink::WrapperTypeInfo" { i16 1, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)* @_ZN5blink10V8Database24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)* @_ZN5blink10V8Database33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), %"struct.blink::WrapperTypeInfo"* null, i8 8 }, align 8
@_ZN5blink8Database18wrapper_type_info_E = hidden local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"* @_ZN5blink10V8Database18wrapper_type_info_E, align 8
@_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable = internal constant [1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 } { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_111v8_database27VersionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, void (%"class.v8::FunctionCallbackInfo"*)* null, i8 104, i8 0 }], align 16
@.str.1 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable = internal constant [3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }] [{ i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_111v8_database30ChangeVersionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 2, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_111v8_database32ReadTransactionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }, { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 } { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), void (%"class.v8::FunctionCallbackInfo"*)* @_ZN5blink12_GLOBAL__N_111v8_database28TransactionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE, i8 1, i8 104, i8 0 }], align 16
@.str.2 = private unnamed_addr constant [14 x i8] c"changeVersion\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"readTransaction\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"transaction\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"constructor\00", align 1
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.6 = private unnamed_addr constant [7 x i8] c"Object\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.7 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.8 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZTVN5blink24V8SQLTransactionCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink29V8SQLTransactionErrorCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8
@_ZTVN5blink14V8VoidCallbackE = external unnamed_addr constant { [6 x i8*] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8Database24InstallInterfaceTemplateEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*) #0 align 2 {
  %4 = alloca %"class.base::span", align 8
  %5 = alloca %"class.base::span.181", align 8
  %6 = bitcast %"class.v8::Template"* %2 to %"class.v8::FunctionTemplate"*
  %7 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  %8 = tail call %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"* %6) #6
  tail call void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"* %0, %"struct.blink::WrapperTypeInfo"* nonnull @_ZN5blink10V8Database18wrapper_type_info_E, %"class.v8::ObjectTemplate"* %7, %"class.v8::ObjectTemplate"* %8, %"class.v8::FunctionTemplate"* %6, %"class.v8::FunctionTemplate"* null) #6
  %9 = bitcast %"class.v8::ObjectTemplate"* %7 to %"class.v8::Template"*
  %10 = bitcast %"class.v8::ObjectTemplate"* %8 to %"class.v8::Template"*
  %11 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11)
  %12 = bitcast %"class.base::span.181"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12)
  %13 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %6) #6
  %14 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 0, i32 0
  store i64 1, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::span", %"class.base::span"* %4, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %15, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %13, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  %16 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 0, i32 0
  store i64 3, i64* %16, align 8
  %17 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %5, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %17, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %9, %"class.v8::Template"* %10, %"class.v8::Template"* %2, %"class.v8::Signature"* %13, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %5) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8Database33InstallContextDependentPropertiesEN2v85LocalINS1_7ContextEEERKNS_15DOMWrapperWorldENS2_INS1_6ObjectEEES9_S9_NS2_INS1_8TemplateEEENS_8bindings21V8InterfaceBridgeBase15FeatureSelectorE(%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"* nocapture readnone dereferenceable(32), %"class.v8::Object"* nocapture readnone, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Template"* nocapture readnone, i64) #0 align 2 {
  %8 = trunc i64 %6 to i8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %7
  %11 = tail call %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"* %0) #6
  %12 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %11, i8* nonnull getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i32 1, i32 11) #6
  %13 = icmp eq %"class.v8::String"* %12, null
  br i1 %13, label %14, label %15, !prof !2

14:                                               ; preds = %10
  tail call void @_ZN2v82V812ToLocalEmptyEv() #6
  br label %15

15:                                               ; preds = %10, %14
  %16 = bitcast %"class.v8::String"* %12 to %"class.v8::Value"*
  %17 = tail call i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* %3, %"class.v8::Context"* %0, %"class.v8::Value"* %16) #6
  %18 = trunc i16 %17 to i8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %21, !prof !2

20:                                               ; preds = %15
  tail call void @_ZN2v82V817FromJustIsNothingEv() #6
  br label %21

21:                                               ; preds = %7, %20, %15
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate16InstanceTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare %"class.v8::ObjectTemplate"* @_ZN2v816FunctionTemplate17PrototypeTemplateEv(%"class.v8::FunctionTemplate"*) local_unnamed_addr #2

declare void @_ZN5blink8bindings25SetupIDLInterfaceTemplateEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_14ObjectTemplateEEES9_NS7_INS1_16FunctionTemplateEEESB_(%"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::ObjectTemplate"*, %"class.v8::ObjectTemplate"*, %"class.v8::FunctionTemplate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::span", align 8
  %7 = alloca %"class.base::span.181", align 8
  %8 = bitcast %"class.v8::Template"* %4 to %"class.v8::FunctionTemplate"*
  %9 = tail call %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"* %0, %"class.v8::FunctionTemplate"* %8) #6
  %10 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 0, i32 0
  store i64 1, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::span", %"class.base::span"* %6, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"* bitcast ([1 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8 }]* @_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kAttributeTable to %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"*), %"struct.blink::bindings::IDLMemberInstaller::AttributeConfig"** %11, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %6) #6
  %12 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 0, i32 0
  store i64 3, i64* %12, align 8
  %13 = getelementptr inbounds %"class.base::span.181", %"class.base::span.181"* %7, i64 0, i32 1
  store %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"* bitcast ([3 x { i8*, void (%"class.v8::FunctionCallbackInfo"*)*, i8, i8, i8 }]* @_ZZN5blink10V8Database30InstallUnconditionalPropertiesEPN2v87IsolateERKNS_15DOMWrapperWorldENS1_5LocalINS1_8TemplateEEES9_S9_E15kOperationTable to %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"*), %"struct.blink::bindings::IDLMemberInstaller::OperationConfig"** %13, align 8
  tail call void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"* %0, %"class.blink::DOMWrapperWorld"* dereferenceable(32) %1, %"class.v8::Template"* %2, %"class.v8::Template"* %3, %"class.v8::Template"* %4, %"class.v8::Signature"* %9, %"class.base::span.181"* nonnull byval(%"class.base::span.181") align 8 %7) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %"class.v8::Signature"* @_ZN2v89Signature3NewEPNS_7IsolateENS_5LocalINS_16FunctionTemplateEEE(%"class.v8::Isolate"*, %"class.v8::FunctionTemplate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111v8_database27VersionAttributeGetCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %3 = load i64*, i64** %2, align 8
  %4 = getelementptr inbounds i64, i64* %3, i64 -1
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, -1
  %7 = inttoptr i64 %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = and i64 %5, -4294967296
  %10 = zext i32 %8 to i64
  %11 = or i64 %9, %10
  %12 = add i64 %11, 7
  %13 = inttoptr i64 %12 to i16*
  %14 = load i16, i16* %13, align 2
  switch i16 %14, label %19 [
    i16 1057, label %15
    i16 1056, label %15
    i16 1040, label %15
  ]

15:                                               ; preds = %1, %1, %1
  %16 = add i64 %5, 19
  %17 = inttoptr i64 %16 to i8**
  %18 = load i8*, i8** %17, align 1
  br label %22

19:                                               ; preds = %1
  %20 = bitcast i64* %4 to %"class.v8::Object"*
  %21 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %20, i32 1) #6
  br label %22

22:                                               ; preds = %15, %19
  %23 = phi i8* [ %18, %15 ], [ %21, %19 ]
  %24 = bitcast i8* %23 to %"class.blink::Database"*
  %25 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8Database7versionEv(%"class.blink::Database"* %24) #6
  %26 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %27 = load i64*, i64** %26, align 8
  %28 = getelementptr inbounds i64, i64* %27, i64 1
  %29 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %22
  %31 = load i64, i64* %28, align 8
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to %"class.blink::V8PerIsolateData"**
  %34 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %34, i64 0, i32 5, i32 0, i32 0, i32 0
  %36 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %35, align 8
  %37 = getelementptr inbounds i64, i64* %27, i64 3
  %38 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 3, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, %25
  br i1 %40, label %41, label %48

41:                                               ; preds = %30
  %42 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %36, i64 0, i32 1, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = inttoptr i64 %43 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %37, align 8
  br label %55

48:                                               ; preds = %30
  tail call void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"* %36, i64* %37, %"class.WTF::StringImpl"* nonnull %25) #6
  br label %55

49:                                               ; preds = %22
  %50 = getelementptr inbounds i64, i64* %27, i64 3
  %51 = load i64, i64* %28, align 8
  %52 = add i64 %51, 200
  %53 = inttoptr i64 %52 to i64*
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %50, align 8
  br label %68

55:                                               ; preds = %41, %45, %48
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #6
  br label %68

68:                                               ; preds = %49, %64, %67
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallAttributesEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15AttributeConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111v8_database30ChangeVersionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %5 = alloca %"class.blink::bindings::NativeValueTraitsStringAdapter", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = getelementptr inbounds i64, i64* %9, i64 1
  %11 = bitcast i64* %10 to %"class.v8::Isolate"**
  %12 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %11, align 8
  %13 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %12) #6
  %14 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %13) #6
  %15 = icmp eq %"class.blink::ExecutionContext"* %14, null
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %14, i64 0, i32 3
  %17 = icmp eq %"class.blink::UseCounter"* %16, null
  %18 = or i1 %15, %17
  br i1 %18, label %24, label %19

19:                                               ; preds = %1
  %20 = bitcast %"class.blink::UseCounter"* %16 to void (%"class.blink::UseCounter"*, i32)***
  %21 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %21, i64 3
  %23 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %22, align 8
  tail call void %23(%"class.blink::UseCounter"* nonnull %16, i32 2959) #6
  br label %24

24:                                               ; preds = %1, %19
  %25 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %25) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 56, i1 false)
  %26 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %30 = bitcast i8** %29 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0)>, <2 x i8*>* %30, align 8
  %31 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %31, align 8
  %32 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %12, %"class.v8::Isolate"** %32, align 8
  %33 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %35 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #6
  %36 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %37 = load i32, i32* %36, align 8
  %38 = icmp slt i32 %37, 2
  br i1 %38, label %39, label %59, !prof !2

39:                                               ; preds = %24
  %40 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #6
  %41 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 2, i32 %37) #6
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %42, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #6
  br label %58

58:                                               ; preds = %39, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #6
  br label %422

59:                                               ; preds = %24
  %60 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %61 = load i64*, i64** %60, align 8
  %62 = getelementptr inbounds i64, i64* %61, i64 -1
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, -1
  %65 = inttoptr i64 %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = and i64 %63, -4294967296
  %68 = zext i32 %66 to i64
  %69 = or i64 %67, %68
  %70 = add i64 %69, 7
  %71 = inttoptr i64 %70 to i16*
  %72 = load i16, i16* %71, align 2
  switch i16 %72, label %78 [
    i16 1057, label %73
    i16 1056, label %73
    i16 1040, label %73
  ]

73:                                               ; preds = %59, %59, %59
  %74 = add i64 %63, 19
  %75 = inttoptr i64 %74 to %"class.blink::Database"**
  %76 = load %"class.blink::Database"*, %"class.blink::Database"** %75, align 1
  %77 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %77) #6
  br label %91

78:                                               ; preds = %59
  %79 = bitcast i64* %62 to %"class.v8::Object"*
  %80 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %79, i32 1) #6
  %81 = load i32, i32* %36, align 8
  %82 = bitcast i8* %80 to %"class.blink::Database"*
  %83 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %83) #6
  %84 = icmp sgt i32 %81, 0
  br i1 %84, label %91, label %85

85:                                               ; preds = %78
  %86 = load i64*, i64** %8, align 8
  %87 = getelementptr inbounds i64, i64* %86, i64 1
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, 160
  %90 = inttoptr i64 %89 to %"class.v8::Value"*
  br label %96

91:                                               ; preds = %73, %78
  %92 = phi i8* [ %77, %73 ], [ %83, %78 ]
  %93 = phi %"class.blink::Database"* [ %76, %73 ], [ %82, %78 ]
  %94 = bitcast i64** %60 to %"class.v8::Value"**
  %95 = load %"class.v8::Value"*, %"class.v8::Value"** %94, align 8
  br label %96

96:                                               ; preds = %85, %91
  %97 = phi i8* [ %83, %85 ], [ %92, %91 ]
  %98 = phi %"class.blink::Database"* [ %82, %85 ], [ %93, %91 ]
  %99 = phi %"class.v8::Value"* [ %90, %85 ], [ %95, %91 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %4, %"class.v8::Isolate"* %12, %"class.v8::Value"* %99, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %100 = load i32, i32* %33, align 8
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %399

102:                                              ; preds = %96
  %103 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %103) #6
  %104 = load i32, i32* %36, align 8
  %105 = icmp sgt i32 %104, 1
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = load i64*, i64** %8, align 8
  %108 = getelementptr inbounds i64, i64* %107, i64 1
  %109 = load i64, i64* %108, align 8
  %110 = add i64 %109, 160
  %111 = inttoptr i64 %110 to %"class.v8::Value"*
  br label %116

112:                                              ; preds = %102
  %113 = load i64*, i64** %60, align 8
  %114 = getelementptr inbounds i64, i64* %113, i64 1
  %115 = bitcast i64* %114 to %"class.v8::Value"*
  br label %116

116:                                              ; preds = %106, %112
  %117 = phi %"class.v8::Value"* [ %111, %106 ], [ %115, %112 ]
  call void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* nonnull sret %5, %"class.v8::Isolate"* %12, %"class.v8::Value"* %117, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2) #6
  %118 = load i32, i32* %33, align 8
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %376

120:                                              ; preds = %116
  %121 = load i32, i32* %36, align 8
  %122 = icmp sgt i32 %121, 2
  br i1 %122, label %129, label %123

123:                                              ; preds = %120
  %124 = load i64*, i64** %8, align 8
  %125 = getelementptr inbounds i64, i64* %124, i64 1
  %126 = load i64, i64* %125, align 8
  %127 = add i64 %126, 160
  %128 = inttoptr i64 %127 to %"class.v8::Value"*
  br label %133

129:                                              ; preds = %120
  %130 = load i64*, i64** %60, align 8
  %131 = getelementptr inbounds i64, i64* %130, i64 2
  %132 = bitcast i64* %131 to %"class.v8::Value"*
  br label %133

133:                                              ; preds = %123, %129
  %134 = phi %"class.v8::Value"* [ %128, %123 ], [ %132, %129 ]
  %135 = bitcast %"class.v8::Value"* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = and i64 %136, 3
  %138 = icmp eq i64 %137, 1
  br i1 %138, label %139, label %156

139:                                              ; preds = %133
  %140 = add i64 %136, -1
  %141 = inttoptr i64 %140 to i32*
  %142 = load i32, i32* %141, align 4
  %143 = and i64 %136, -4294967296
  %144 = zext i32 %142 to i64
  %145 = or i64 %143, %144
  %146 = add i64 %145, 7
  %147 = inttoptr i64 %146 to i16*
  %148 = load i16, i16* %147, align 2
  %149 = icmp eq i16 %148, 67
  br i1 %149, label %150, label %156

150:                                              ; preds = %139
  %151 = add i64 %136, 23
  %152 = inttoptr i64 %151 to i32*
  %153 = load i32, i32* %152, align 4
  %154 = and i32 %153, -2
  %155 = icmp eq i32 %154, 10
  br i1 %155, label %174, label %156

156:                                              ; preds = %139, %133, %150
  br i1 %122, label %163, label %157

157:                                              ; preds = %156
  %158 = load i64*, i64** %8, align 8
  %159 = getelementptr inbounds i64, i64* %158, i64 1
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %160, 160
  %162 = inttoptr i64 %161 to %"class.v8::Value"*
  br label %167

163:                                              ; preds = %156
  %164 = load i64*, i64** %60, align 8
  %165 = getelementptr inbounds i64, i64* %164, i64 2
  %166 = bitcast i64* %165 to %"class.v8::Value"*
  br label %167

167:                                              ; preds = %157, %163
  %168 = phi %"class.v8::Value"* [ %162, %157 ], [ %166, %163 ]
  %169 = call %"class.blink::V8SQLTransactionCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_24V8SQLTransactionCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, i32 2, %"class.v8::Value"* %168, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %170 = load i32, i32* %33, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %172, label %376

172:                                              ; preds = %167
  %173 = load i32, i32* %36, align 8
  br label %174

174:                                              ; preds = %172, %150
  %175 = phi i32 [ %173, %172 ], [ %121, %150 ]
  %176 = phi %"class.blink::V8SQLTransactionCallback"* [ %169, %172 ], [ null, %150 ]
  %177 = icmp sgt i32 %175, 3
  br i1 %177, label %184, label %178

178:                                              ; preds = %174
  %179 = load i64*, i64** %8, align 8
  %180 = getelementptr inbounds i64, i64* %179, i64 1
  %181 = load i64, i64* %180, align 8
  %182 = add i64 %181, 160
  %183 = inttoptr i64 %182 to %"class.v8::Value"*
  br label %188

184:                                              ; preds = %174
  %185 = load i64*, i64** %60, align 8
  %186 = getelementptr inbounds i64, i64* %185, i64 3
  %187 = bitcast i64* %186 to %"class.v8::Value"*
  br label %188

188:                                              ; preds = %178, %184
  %189 = phi %"class.v8::Value"* [ %183, %178 ], [ %187, %184 ]
  %190 = bitcast %"class.v8::Value"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = and i64 %191, 3
  %193 = icmp eq i64 %192, 1
  br i1 %193, label %194, label %211

194:                                              ; preds = %188
  %195 = add i64 %191, -1
  %196 = inttoptr i64 %195 to i32*
  %197 = load i32, i32* %196, align 4
  %198 = and i64 %191, -4294967296
  %199 = zext i32 %197 to i64
  %200 = or i64 %198, %199
  %201 = add i64 %200, 7
  %202 = inttoptr i64 %201 to i16*
  %203 = load i16, i16* %202, align 2
  %204 = icmp eq i16 %203, 67
  br i1 %204, label %205, label %211

205:                                              ; preds = %194
  %206 = add i64 %191, 23
  %207 = inttoptr i64 %206 to i32*
  %208 = load i32, i32* %207, align 4
  %209 = and i32 %208, -2
  %210 = icmp eq i32 %209, 10
  br i1 %210, label %229, label %211

211:                                              ; preds = %194, %188, %205
  br i1 %177, label %218, label %212

212:                                              ; preds = %211
  %213 = load i64*, i64** %8, align 8
  %214 = getelementptr inbounds i64, i64* %213, i64 1
  %215 = load i64, i64* %214, align 8
  %216 = add i64 %215, 160
  %217 = inttoptr i64 %216 to %"class.v8::Value"*
  br label %222

218:                                              ; preds = %211
  %219 = load i64*, i64** %60, align 8
  %220 = getelementptr inbounds i64, i64* %219, i64 3
  %221 = bitcast i64* %220 to %"class.v8::Value"*
  br label %222

222:                                              ; preds = %212, %218
  %223 = phi %"class.v8::Value"* [ %217, %212 ], [ %221, %218 ]
  %224 = call %"class.blink::V8SQLTransactionErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_29V8SQLTransactionErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, i32 3, %"class.v8::Value"* %223, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %225 = load i32, i32* %33, align 8
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %376

227:                                              ; preds = %222
  %228 = load i32, i32* %36, align 8
  br label %229

229:                                              ; preds = %227, %205
  %230 = phi i32 [ %228, %227 ], [ %175, %205 ]
  %231 = phi %"class.blink::V8SQLTransactionErrorCallback"* [ %224, %227 ], [ null, %205 ]
  %232 = icmp sgt i32 %230, 4
  br i1 %232, label %239, label %233

233:                                              ; preds = %229
  %234 = load i64*, i64** %8, align 8
  %235 = getelementptr inbounds i64, i64* %234, i64 1
  %236 = load i64, i64* %235, align 8
  %237 = add i64 %236, 160
  %238 = inttoptr i64 %237 to %"class.v8::Value"*
  br label %243

239:                                              ; preds = %229
  %240 = load i64*, i64** %60, align 8
  %241 = getelementptr inbounds i64, i64* %240, i64 4
  %242 = bitcast i64* %241 to %"class.v8::Value"*
  br label %243

243:                                              ; preds = %233, %239
  %244 = phi %"class.v8::Value"* [ %238, %233 ], [ %242, %239 ]
  %245 = bitcast %"class.v8::Value"* %244 to i64*
  %246 = load i64, i64* %245, align 8
  %247 = and i64 %246, 3
  %248 = icmp eq i64 %247, 1
  br i1 %248, label %249, label %266

249:                                              ; preds = %243
  %250 = add i64 %246, -1
  %251 = inttoptr i64 %250 to i32*
  %252 = load i32, i32* %251, align 4
  %253 = and i64 %246, -4294967296
  %254 = zext i32 %252 to i64
  %255 = or i64 %253, %254
  %256 = add i64 %255, 7
  %257 = inttoptr i64 %256 to i16*
  %258 = load i16, i16* %257, align 2
  %259 = icmp eq i16 %258, 67
  br i1 %259, label %260, label %266

260:                                              ; preds = %249
  %261 = add i64 %246, 23
  %262 = inttoptr i64 %261 to i32*
  %263 = load i32, i32* %262, align 4
  %264 = and i32 %263, -2
  %265 = icmp eq i32 %264, 10
  br i1 %265, label %282, label %266

266:                                              ; preds = %249, %243, %260
  br i1 %232, label %273, label %267

267:                                              ; preds = %266
  %268 = load i64*, i64** %8, align 8
  %269 = getelementptr inbounds i64, i64* %268, i64 1
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, 160
  %272 = inttoptr i64 %271 to %"class.v8::Value"*
  br label %277

273:                                              ; preds = %266
  %274 = load i64*, i64** %60, align 8
  %275 = getelementptr inbounds i64, i64* %274, i64 4
  %276 = bitcast i64* %275 to %"class.v8::Value"*
  br label %277

277:                                              ; preds = %267, %273
  %278 = phi %"class.v8::Value"* [ %272, %267 ], [ %276, %273 ]
  %279 = call %"class.blink::V8VoidCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14V8VoidCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %12, i32 4, %"class.v8::Value"* %278, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %280 = load i32, i32* %33, align 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %376

282:                                              ; preds = %277, %260
  %283 = phi %"class.blink::V8VoidCallback"* [ %279, %277 ], [ null, %260 ]
  %284 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %284) #6
  %285 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 0, i32 0
  %286 = load %"class.v8::String"*, %"class.v8::String"** %285, align 8
  %287 = icmp eq %"class.v8::String"* %286, null
  br i1 %287, label %290, label %288, !prof !2

288:                                              ; preds = %282
  %289 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %286, i32 0) #6
  br label %311

290:                                              ; preds = %282
  %291 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %311, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %311

299:                                              ; preds = %294
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  %302 = zext i32 %301 to i33
  %303 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %302, i33 1) #6
  %304 = extractvalue { i33, i1 } %303, 1
  %305 = extractvalue { i33, i1 } %303, 0
  %306 = icmp slt i33 %305, 0
  %307 = or i1 %304, %306
  br i1 %307, label %308, label %309, !prof !2

308:                                              ; preds = %299
  call void @llvm.trap() #6
  unreachable

309:                                              ; preds = %299
  %310 = trunc i33 %305 to i32
  store i32 %310, i32* %300, align 4
  br label %311

311:                                              ; preds = %288, %290, %294, %309
  %312 = phi %"class.WTF::StringImpl"* [ %289, %288 ], [ null, %290 ], [ %292, %294 ], [ %292, %309 ]
  %313 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %312, %"class.WTF::StringImpl"** %313, align 8
  %314 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %314) #6
  %315 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 0, i32 0
  %316 = load %"class.v8::String"*, %"class.v8::String"** %315, align 8
  %317 = icmp eq %"class.v8::String"* %316, null
  br i1 %317, label %320, label %318, !prof !2

318:                                              ; preds = %311
  %319 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %316, i32 0) #6
  br label %341

320:                                              ; preds = %311
  %321 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %323, label %341, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %341

329:                                              ; preds = %324
  %330 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %331 = load i32, i32* %330, align 4
  %332 = zext i32 %331 to i33
  %333 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %332, i33 1) #6
  %334 = extractvalue { i33, i1 } %333, 1
  %335 = extractvalue { i33, i1 } %333, 0
  %336 = icmp slt i33 %335, 0
  %337 = or i1 %334, %336
  br i1 %337, label %338, label %339, !prof !2

338:                                              ; preds = %329
  call void @llvm.trap() #6
  unreachable

339:                                              ; preds = %329
  %340 = trunc i33 %335 to i32
  store i32 %340, i32* %330, align 4
  br label %341

341:                                              ; preds = %318, %320, %324, %339
  %342 = phi %"class.WTF::StringImpl"* [ %319, %318 ], [ null, %320 ], [ %322, %324 ], [ %322, %339 ]
  %343 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %342, %"class.WTF::StringImpl"** %343, align 8
  call void @_ZN5blink8Database13changeVersionERKN3WTF6StringES4_PNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"* %98, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::V8SQLTransactionCallback"* %176, %"class.blink::V8SQLTransactionErrorCallback"* %231, %"class.blink::V8VoidCallback"* %283) #6
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %359, label %346

346:                                              ; preds = %341
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %352 = load i32, i32* %351, align 4
  br i1 %350, label %353, label %355

353:                                              ; preds = %346
  %354 = add i32 %352, -1
  store i32 %354, i32* %351, align 4
  br label %355

355:                                              ; preds = %353, %346
  %356 = phi i32 [ %354, %353 ], [ %352, %346 ]
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %359

358:                                              ; preds = %355
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #6
  br label %359

359:                                              ; preds = %341, %355, %358
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %314) #6
  %360 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %313, align 8
  %361 = icmp eq %"class.WTF::StringImpl"* %360, null
  br i1 %361, label %375, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = and i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %360, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  br i1 %366, label %369, label %371

369:                                              ; preds = %362
  %370 = add i32 %368, -1
  store i32 %370, i32* %367, align 4
  br label %371

371:                                              ; preds = %369, %362
  %372 = phi i32 [ %370, %369 ], [ %368, %362 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %360) #6
  br label %375

375:                                              ; preds = %359, %371, %374
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %284) #6
  br label %376

376:                                              ; preds = %277, %222, %167, %116, %375
  %377 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %378 = load i8*, i8** %377, align 8
  store i8* null, i8** %377, align 8
  %379 = icmp eq i8* %378, null
  br i1 %379, label %381, label %380

380:                                              ; preds = %376
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %378) #6
  br label %381

381:                                              ; preds = %380, %376
  %382 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %5, i64 0, i32 1, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %381
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #6
  br label %398

398:                                              ; preds = %381, %394, %397
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %103) #6
  br label %399

399:                                              ; preds = %96, %398
  %400 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %401 = load i8*, i8** %400, align 8
  store i8* null, i8** %400, align 8
  %402 = icmp eq i8* %401, null
  br i1 %402, label %404, label %403

403:                                              ; preds = %399
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %401) #6
  br label %404

404:                                              ; preds = %403, %399
  %405 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %4, i64 0, i32 1, i32 0, i32 0
  %406 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %405, align 8
  %407 = icmp eq %"class.WTF::StringImpl"* %406, null
  br i1 %407, label %421, label %408

408:                                              ; preds = %404
  %409 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %410 = load atomic i32, i32* %409 monotonic, align 4
  %411 = and i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %406, i64 0, i32 0
  %414 = load i32, i32* %413, align 4
  br i1 %412, label %415, label %417

415:                                              ; preds = %408
  %416 = add i32 %414, -1
  store i32 %416, i32* %413, align 4
  br label %417

417:                                              ; preds = %415, %408
  %418 = phi i32 [ %416, %415 ], [ %414, %408 ]
  %419 = icmp eq i32 %418, 0
  br i1 %419, label %420, label %421

420:                                              ; preds = %417
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %406) #6
  br label %421

421:                                              ; preds = %404, %417, %420
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %97) #6
  br label %422

422:                                              ; preds = %421, %58
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %423 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %424 = load i64*, i64** %423, align 8
  %425 = icmp eq i64* %424, null
  br i1 %425, label %435, label %426

426:                                              ; preds = %422
  %427 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %32, align 8
  %428 = bitcast %"class.v8::Isolate"* %427 to %"class.v8::internal::Isolate"*
  %429 = load i64, i64* %424, align 8
  %430 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %428, i64 %429) #6
  %431 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %427) #6
  br i1 %431, label %435, label %432

432:                                              ; preds = %426
  %433 = bitcast i64* %430 to %"class.v8::Value"*
  %434 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %427, %"class.v8::Value"* %433) #6
  br label %435

435:                                              ; preds = %432, %426, %422
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %451, label %438

438:                                              ; preds = %435
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #6
  br label %451

451:                                              ; preds = %435, %447, %450
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %25) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111v8_database32ReadTransactionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 2961) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %204

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::Database"**
  %72 = load %"class.blink::Database"*, %"class.blink::Database"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::Database"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::Database"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::Database"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = call %"class.blink::V8SQLTransactionCallback"* @_ZN5blink17NativeValueTraitsINS_24V8SQLTransactionCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 0, %"class.v8::Value"* %91, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %93 = load i32, i32* %29, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %204

95:                                               ; preds = %89
  %96 = load i32, i32* %32, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %95
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %95
  %105 = load i64*, i64** %56, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = bitcast %"class.v8::Value"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 3
  %113 = icmp eq i64 %112, 1
  br i1 %113, label %114, label %131

114:                                              ; preds = %108
  %115 = add i64 %111, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = and i64 %111, -4294967296
  %119 = zext i32 %117 to i64
  %120 = or i64 %118, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 67
  br i1 %124, label %125, label %131

125:                                              ; preds = %114
  %126 = add i64 %111, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, -2
  %130 = icmp eq i32 %129, 10
  br i1 %130, label %149, label %131

131:                                              ; preds = %114, %108, %125
  br i1 %97, label %138, label %132

132:                                              ; preds = %131
  %133 = load i64*, i64** %4, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 160
  %137 = inttoptr i64 %136 to %"class.v8::Value"*
  br label %142

138:                                              ; preds = %131
  %139 = load i64*, i64** %56, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = bitcast i64* %140 to %"class.v8::Value"*
  br label %142

142:                                              ; preds = %132, %138
  %143 = phi %"class.v8::Value"* [ %137, %132 ], [ %141, %138 ]
  %144 = call %"class.blink::V8SQLTransactionErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_29V8SQLTransactionErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 1, %"class.v8::Value"* %143, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %145 = load i32, i32* %29, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %204

147:                                              ; preds = %142
  %148 = load i32, i32* %32, align 8
  br label %149

149:                                              ; preds = %147, %125
  %150 = phi i32 [ %148, %147 ], [ %96, %125 ]
  %151 = phi %"class.blink::V8SQLTransactionErrorCallback"* [ %144, %147 ], [ null, %125 ]
  %152 = icmp sgt i32 %150, 2
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = load i64*, i64** %4, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 160
  %158 = inttoptr i64 %157 to %"class.v8::Value"*
  br label %163

159:                                              ; preds = %149
  %160 = load i64*, i64** %56, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 2
  %162 = bitcast i64* %161 to %"class.v8::Value"*
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi %"class.v8::Value"* [ %158, %153 ], [ %162, %159 ]
  %165 = bitcast %"class.v8::Value"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 3
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %169, label %186

169:                                              ; preds = %163
  %170 = add i64 %166, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i64 %166, -4294967296
  %174 = zext i32 %172 to i64
  %175 = or i64 %173, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %178, 67
  br i1 %179, label %180, label %186

180:                                              ; preds = %169
  %181 = add i64 %166, 23
  %182 = inttoptr i64 %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, -2
  %185 = icmp eq i32 %184, 10
  br i1 %185, label %202, label %186

186:                                              ; preds = %169, %163, %180
  br i1 %152, label %193, label %187

187:                                              ; preds = %186
  %188 = load i64*, i64** %4, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, 160
  %192 = inttoptr i64 %191 to %"class.v8::Value"*
  br label %197

193:                                              ; preds = %186
  %194 = load i64*, i64** %56, align 8
  %195 = getelementptr inbounds i64, i64* %194, i64 2
  %196 = bitcast i64* %195 to %"class.v8::Value"*
  br label %197

197:                                              ; preds = %187, %193
  %198 = phi %"class.v8::Value"* [ %192, %187 ], [ %196, %193 ]
  %199 = call %"class.blink::V8VoidCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14V8VoidCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 2, %"class.v8::Value"* %198, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %200 = load i32, i32* %29, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197, %180
  %203 = phi %"class.blink::V8VoidCallback"* [ %199, %197 ], [ null, %180 ]
  call void @_ZN5blink8Database15readTransactionEPNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"* %90, %"class.blink::V8SQLTransactionCallback"* %92, %"class.blink::V8SQLTransactionErrorCallback"* %151, %"class.blink::V8VoidCallback"* %203) #6
  br label %204

204:                                              ; preds = %197, %142, %89, %202, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %205 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %206 = load i64*, i64** %205, align 8
  %207 = icmp eq i64* %206, null
  br i1 %207, label %217, label %208

208:                                              ; preds = %204
  %209 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %210 = bitcast %"class.v8::Isolate"* %209 to %"class.v8::internal::Isolate"*
  %211 = load i64, i64* %206, align 8
  %212 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %210, i64 %211) #6
  %213 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %209) #6
  br i1 %213, label %217, label %214

214:                                              ; preds = %208
  %215 = bitcast i64* %212 to %"class.v8::Value"*
  %216 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %209, %"class.v8::Value"* %215) #6
  br label %217

217:                                              ; preds = %214, %208, %204
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #6
  br label %233

233:                                              ; preds = %217, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_111v8_database28TransactionOperationCallbackERKN2v820FunctionCallbackInfoINS2_5ValueEEE(%"class.v8::FunctionCallbackInfo"* nocapture readonly dereferenceable(24)) #0 {
  %2 = alloca %"class.blink::ExceptionState", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = getelementptr inbounds i64, i64* %5, i64 1
  %7 = bitcast i64* %6 to %"class.v8::Isolate"**
  %8 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %7, align 8
  %9 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %8) #6
  %10 = tail call %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"* %9) #6
  %11 = icmp eq %"class.blink::ExecutionContext"* %10, null
  %12 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %10, i64 0, i32 3
  %13 = icmp eq %"class.blink::UseCounter"* %12, null
  %14 = or i1 %11, %13
  br i1 %14, label %20, label %15

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %17 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %17, i64 3
  %19 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %18, align 8
  tail call void %19(%"class.blink::UseCounter"* nonnull %12, i32 2960) #6
  br label %20

20:                                               ; preds = %1, %15
  %21 = bitcast %"class.blink::ExceptionState"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %21) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 56, i1 false)
  %22 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 0
  store i16 6, i16* %23, align 8
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 1
  store i16 0, i16* %24, align 2
  %25 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 1, i32 2
  %26 = bitcast i8** %25 to <2 x i8*>*
  store <2 x i8*> <i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)>, <2 x i8*>* %26, align 8
  %27 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 2
  store %"class.blink::ExceptionState::ContextScope"* null, %"class.blink::ExceptionState::ContextScope"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 3
  store %"class.v8::Isolate"* %8, %"class.v8::Isolate"** %28, align 8
  %29 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 5, i32 0, i32 0
  %31 = bitcast %"class.WTF::StringImpl"** %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #6
  %32 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp slt i32 %33, 1
  br i1 %34, label %35, label %55, !prof !2

35:                                               ; preds = %20
  %36 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #6
  %37 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32 1, i32 %33) #6
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %37, %"class.WTF::StringImpl"** %38, align 8
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"* nonnull %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #6
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #6
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #6
  br label %204

55:                                               ; preds = %20
  %56 = getelementptr inbounds %"class.v8::FunctionCallbackInfo", %"class.v8::FunctionCallbackInfo"* %0, i64 0, i32 1
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds i64, i64* %57, i64 -1
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, -1
  %61 = inttoptr i64 %60 to i32*
  %62 = load i32, i32* %61, align 4
  %63 = and i64 %59, -4294967296
  %64 = zext i32 %62 to i64
  %65 = or i64 %63, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load i16, i16* %67, align 2
  switch i16 %68, label %73 [
    i16 1057, label %69
    i16 1056, label %69
    i16 1040, label %69
  ]

69:                                               ; preds = %55, %55, %55
  %70 = add i64 %59, 19
  %71 = inttoptr i64 %70 to %"class.blink::Database"**
  %72 = load %"class.blink::Database"*, %"class.blink::Database"** %71, align 1
  br label %85

73:                                               ; preds = %55
  %74 = bitcast i64* %58 to %"class.v8::Object"*
  %75 = tail call i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"* %74, i32 1) #6
  %76 = load i32, i32* %32, align 8
  %77 = bitcast i8* %75 to %"class.blink::Database"*
  %78 = icmp sgt i32 %76, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = load i64*, i64** %4, align 8
  %81 = getelementptr inbounds i64, i64* %80, i64 1
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 160
  %84 = inttoptr i64 %83 to %"class.v8::Value"*
  br label %89

85:                                               ; preds = %69, %73
  %86 = phi %"class.blink::Database"* [ %72, %69 ], [ %77, %73 ]
  %87 = bitcast i64** %56 to %"class.v8::Value"**
  %88 = load %"class.v8::Value"*, %"class.v8::Value"** %87, align 8
  br label %89

89:                                               ; preds = %79, %85
  %90 = phi %"class.blink::Database"* [ %77, %79 ], [ %86, %85 ]
  %91 = phi %"class.v8::Value"* [ %84, %79 ], [ %88, %85 ]
  %92 = call %"class.blink::V8SQLTransactionCallback"* @_ZN5blink17NativeValueTraitsINS_24V8SQLTransactionCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 0, %"class.v8::Value"* %91, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %93 = load i32, i32* %29, align 8
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %204

95:                                               ; preds = %89
  %96 = load i32, i32* %32, align 8
  %97 = icmp sgt i32 %96, 1
  br i1 %97, label %104, label %98

98:                                               ; preds = %95
  %99 = load i64*, i64** %4, align 8
  %100 = getelementptr inbounds i64, i64* %99, i64 1
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %101, 160
  %103 = inttoptr i64 %102 to %"class.v8::Value"*
  br label %108

104:                                              ; preds = %95
  %105 = load i64*, i64** %56, align 8
  %106 = getelementptr inbounds i64, i64* %105, i64 1
  %107 = bitcast i64* %106 to %"class.v8::Value"*
  br label %108

108:                                              ; preds = %98, %104
  %109 = phi %"class.v8::Value"* [ %103, %98 ], [ %107, %104 ]
  %110 = bitcast %"class.v8::Value"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = and i64 %111, 3
  %113 = icmp eq i64 %112, 1
  br i1 %113, label %114, label %131

114:                                              ; preds = %108
  %115 = add i64 %111, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load i32, i32* %116, align 4
  %118 = and i64 %111, -4294967296
  %119 = zext i32 %117 to i64
  %120 = or i64 %118, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load i16, i16* %122, align 2
  %124 = icmp eq i16 %123, 67
  br i1 %124, label %125, label %131

125:                                              ; preds = %114
  %126 = add i64 %111, 23
  %127 = inttoptr i64 %126 to i32*
  %128 = load i32, i32* %127, align 4
  %129 = and i32 %128, -2
  %130 = icmp eq i32 %129, 10
  br i1 %130, label %149, label %131

131:                                              ; preds = %114, %108, %125
  br i1 %97, label %138, label %132

132:                                              ; preds = %131
  %133 = load i64*, i64** %4, align 8
  %134 = getelementptr inbounds i64, i64* %133, i64 1
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, 160
  %137 = inttoptr i64 %136 to %"class.v8::Value"*
  br label %142

138:                                              ; preds = %131
  %139 = load i64*, i64** %56, align 8
  %140 = getelementptr inbounds i64, i64* %139, i64 1
  %141 = bitcast i64* %140 to %"class.v8::Value"*
  br label %142

142:                                              ; preds = %132, %138
  %143 = phi %"class.v8::Value"* [ %137, %132 ], [ %141, %138 ]
  %144 = call %"class.blink::V8SQLTransactionErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_29V8SQLTransactionErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 1, %"class.v8::Value"* %143, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %145 = load i32, i32* %29, align 8
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %204

147:                                              ; preds = %142
  %148 = load i32, i32* %32, align 8
  br label %149

149:                                              ; preds = %147, %125
  %150 = phi i32 [ %148, %147 ], [ %96, %125 ]
  %151 = phi %"class.blink::V8SQLTransactionErrorCallback"* [ %144, %147 ], [ null, %125 ]
  %152 = icmp sgt i32 %150, 2
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = load i64*, i64** %4, align 8
  %155 = getelementptr inbounds i64, i64* %154, i64 1
  %156 = load i64, i64* %155, align 8
  %157 = add i64 %156, 160
  %158 = inttoptr i64 %157 to %"class.v8::Value"*
  br label %163

159:                                              ; preds = %149
  %160 = load i64*, i64** %56, align 8
  %161 = getelementptr inbounds i64, i64* %160, i64 2
  %162 = bitcast i64* %161 to %"class.v8::Value"*
  br label %163

163:                                              ; preds = %153, %159
  %164 = phi %"class.v8::Value"* [ %158, %153 ], [ %162, %159 ]
  %165 = bitcast %"class.v8::Value"* %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = and i64 %166, 3
  %168 = icmp eq i64 %167, 1
  br i1 %168, label %169, label %186

169:                                              ; preds = %163
  %170 = add i64 %166, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = and i64 %166, -4294967296
  %174 = zext i32 %172 to i64
  %175 = or i64 %173, %174
  %176 = add i64 %175, 7
  %177 = inttoptr i64 %176 to i16*
  %178 = load i16, i16* %177, align 2
  %179 = icmp eq i16 %178, 67
  br i1 %179, label %180, label %186

180:                                              ; preds = %169
  %181 = add i64 %166, 23
  %182 = inttoptr i64 %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = and i32 %183, -2
  %185 = icmp eq i32 %184, 10
  br i1 %185, label %202, label %186

186:                                              ; preds = %169, %163, %180
  br i1 %152, label %193, label %187

187:                                              ; preds = %186
  %188 = load i64*, i64** %4, align 8
  %189 = getelementptr inbounds i64, i64* %188, i64 1
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %190, 160
  %192 = inttoptr i64 %191 to %"class.v8::Value"*
  br label %197

193:                                              ; preds = %186
  %194 = load i64*, i64** %56, align 8
  %195 = getelementptr inbounds i64, i64* %194, i64 2
  %196 = bitcast i64* %195 to %"class.v8::Value"*
  br label %197

197:                                              ; preds = %187, %193
  %198 = phi %"class.v8::Value"* [ %192, %187 ], [ %196, %193 ]
  %199 = call %"class.blink::V8VoidCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14V8VoidCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %8, i32 2, %"class.v8::Value"* %198, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %2)
  %200 = load i32, i32* %29, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %204

202:                                              ; preds = %197, %180
  %203 = phi %"class.blink::V8VoidCallback"* [ %199, %197 ], [ null, %180 ]
  call void @_ZN5blink8Database11transactionEPNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"* %90, %"class.blink::V8SQLTransactionCallback"* %92, %"class.blink::V8SQLTransactionErrorCallback"* %151, %"class.blink::V8VoidCallback"* %203) #6
  br label %204

204:                                              ; preds = %197, %142, %89, %202, %54
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %205 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %2, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %206 = load i64*, i64** %205, align 8
  %207 = icmp eq i64* %206, null
  br i1 %207, label %217, label %208

208:                                              ; preds = %204
  %209 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %28, align 8
  %210 = bitcast %"class.v8::Isolate"* %209 to %"class.v8::internal::Isolate"*
  %211 = load i64, i64* %206, align 8
  %212 = call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %210, i64 %211) #6
  %213 = call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %209) #6
  br i1 %213, label %217, label %214

214:                                              ; preds = %208
  %215 = bitcast i64* %212 to %"class.v8::Value"*
  %216 = call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %209, %"class.v8::Value"* %215) #6
  br label %217

217:                                              ; preds = %214, %208, %204
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #6
  br label %233

233:                                              ; preds = %217, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %21) #6
  ret void
}

declare void @_ZN5blink8bindings18IDLMemberInstaller17InstallOperationsEPN2v87IsolateERKNS_15DOMWrapperWorldENS2_5LocalINS2_8TemplateEEESA_SA_NS8_INS2_9SignatureEEEN4base4spanIKNS1_15OperationConfigELm18446744073709551615EEE(%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"* dereferenceable(32), %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Template"*, %"class.v8::Signature"*, %"class.base::span.181"* byval(%"class.base::span.181") align 8) local_unnamed_addr #2

declare %"class.v8::Isolate"* @_ZN2v87Context10GetIsolateEv(%"class.v8::Context"*) local_unnamed_addr #2

declare i16 @_ZN2v86Object6DeleteENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZNK5blink8Database7versionEv(%"class.blink::Database"*) local_unnamed_addr #2

declare i8* @_ZN2v86Object38SlowGetAlignedPointerFromInternalFieldEi(%"class.v8::Object"*, i32) local_unnamed_addr #2

declare void @_ZN5blink11StringCache28SetReturnValueFromStringSlowEN2v811ReturnValueINS1_5ValueEEEPN3WTF10StringImplE(%"class.blink::StringCache"*, i64*, %"class.WTF::StringImpl"*) local_unnamed_addr #2

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.blink::ExecutionContext"* @_ZN5blink16ExecutionContext4FromEN2v85LocalINS1_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorERKN3WTF6StringE(%"class.blink::ExceptionState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages18NotEnoughArgumentsEjj(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8SQLTransactionCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_24V8SQLTransactionCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64 40) #6
  %10 = bitcast i8* %9 to %"class.blink::V8SQLTransactionCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"* %11, %"class.v8::Object"* %8, i32 1) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24V8SQLTransactionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %62

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %62
    i32 3, label %62
  ]

38:                                               ; preds = %33, %22, %17
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, i64 3
  %45 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #6
  br label %61

61:                                               ; preds = %38, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %62

62:                                               ; preds = %33, %33, %61, %7
  %63 = phi %"class.blink::V8SQLTransactionCallback"* [ %10, %7 ], [ null, %61 ], [ null, %33 ], [ null, %33 ]
  ret %"class.blink::V8SQLTransactionCallback"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8SQLTransactionErrorCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_29V8SQLTransactionErrorCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64 40) #6
  %10 = bitcast i8* %9 to %"class.blink::V8SQLTransactionErrorCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"* %11, %"class.v8::Object"* %8, i32 1) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink29V8SQLTransactionErrorCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %62

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %62
    i32 3, label %62
  ]

38:                                               ; preds = %33, %22, %17
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, i64 3
  %45 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #6
  br label %61

61:                                               ; preds = %38, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %62

62:                                               ; preds = %33, %33, %61, %7
  %63 = phi %"class.blink::V8SQLTransactionErrorCallback"* [ %10, %7 ], [ null, %61 ], [ null, %33 ], [ null, %33 ]
  ret %"class.blink::V8SQLTransactionErrorCallback"* %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8VoidCallback"* @_ZN5blink17NativeValueTraitsINS_11IDLNullableINS_14V8VoidCallbackEEEvE13ArgumentValueEPN2v87IsolateEiNS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64 40) #6
  %10 = bitcast i8* %9 to %"class.blink::V8VoidCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"* %11, %"class.v8::Object"* %8, i32 1) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink14V8VoidCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %62

17:                                               ; preds = %4
  %18 = bitcast %"class.v8::Value"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 1
  br i1 %21, label %22, label %38

22:                                               ; preds = %17
  %23 = add i64 %19, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = and i64 %19, -4294967296
  %27 = zext i32 %25 to i64
  %28 = or i64 %26, %27
  %29 = add i64 %28, 7
  %30 = inttoptr i64 %29 to i16*
  %31 = load i16, i16* %30, align 2
  %32 = icmp eq i16 %31, 67
  br i1 %32, label %33, label %38

33:                                               ; preds = %22
  %34 = add i64 %19, 23
  %35 = inttoptr i64 %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = ashr i32 %36, 1
  switch i32 %37, label %38 [
    i32 5, label %62
    i32 3, label %62
  ]

38:                                               ; preds = %33, %22, %17
  %39 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #6
  %40 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %40, %"class.WTF::StringImpl"** %41, align 8
  %42 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %43 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %43, i64 3
  %45 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %44, align 8
  call void %45(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %46 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %47 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %47, label %61, label %48

48:                                               ; preds = %38
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #6
  br label %61

61:                                               ; preds = %38, %57, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #6
  br label %62

62:                                               ; preds = %33, %33, %61, %7
  %63 = phi %"class.blink::V8VoidCallback"* [ %10, %7 ], [ null, %61 ], [ null, %33 ], [ null, %33 ]
  ret %"class.blink::V8VoidCallback"* %63
}

declare void @_ZN5blink8Database13changeVersionERKN3WTF6StringES4_PNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::V8SQLTransactionCallback"*, %"class.blink::V8SQLTransactionErrorCallback"*, %"class.blink::V8VoidCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_15IDLStringBaseV2ILNS_8bindings17IDLStringConvModeE0EEEvE11NativeValueEPN2v87IsolateENS6_5LocalINS6_5ValueEEERNS_14ExceptionStateE(%"class.blink::bindings::NativeValueTraitsStringAdapter"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = bitcast %"class.v8::Value"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %26

10:                                               ; preds = %4
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %21, label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to %"class.v8::Value"**
  store %"class.v8::Value"* %2, %"class.v8::Value"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %25 = bitcast %"class.std::__1::unique_ptr.506"* %24 to i64*
  store i64 0, i64* %25, align 8
  br label %54

26:                                               ; preds = %4, %10
  %27 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* %2) #6
  br i1 %27, label %28, label %36

28:                                               ; preds = %26
  %29 = bitcast %"class.v8::Value"* %2 to %"class.v8::Int32"*
  %30 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %29) #6
  %31 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* null, %"class.v8::String"** %31, align 8
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %30) #6
  %33 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %35 = bitcast %"class.std::__1::unique_ptr.506"* %34 to i64*
  store i64 0, i64* %35, align 8
  br label %54

36:                                               ; preds = %26
  %37 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %1) #6
  %38 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #6
  %39 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %2, %"class.v8::Context"* %38) #6
  %40 = icmp eq %"class.v8::String"* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #6
  %43 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %44 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %44, i64 5
  %46 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %45, align 8
  call void %46(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %42) #6
  %47 = bitcast %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 152, i1 false)
  br label %53

48:                                               ; preds = %36
  %49 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 0, i32 0
  store %"class.v8::String"* %39, %"class.v8::String"** %49, align 8
  %50 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::bindings::NativeValueTraitsStringAdapter", %"class.blink::bindings::NativeValueTraitsStringAdapter"* %0, i64 0, i32 2, i32 1
  %52 = bitcast %"class.std::__1::unique_ptr.506"* %51 to i64*
  store i64 0, i64* %52, align 8
  br label %53

53:                                               ; preds = %48, %41
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #6
  br label %54

54:                                               ; preds = %53, %28, %21
  ret void
}

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #2

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #2

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #6
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #6
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.193"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21CallbackInterfaceBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.193"*)) #6
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #6
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #6
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.7, i64 0, i64 0), i8* %40, i8* %41) #6
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.8, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #6
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #6
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #6
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #6
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21CallbackInterfaceBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CallbackInterfaceBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::CallbackInterfaceBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CallbackInterfaceBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_21CallbackInterfaceBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CallbackInterfaceBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::CallbackInterfaceBase"*)***
  %4 = load void (%"class.blink::CallbackInterfaceBase"*)**, void (%"class.blink::CallbackInterfaceBase"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::CallbackInterfaceBase"*)*, void (%"class.blink::CallbackInterfaceBase"*)** %4, i64 1
  %6 = load void (%"class.blink::CallbackInterfaceBase"*)*, void (%"class.blink::CallbackInterfaceBase"*)** %5, align 8
  tail call void %6(%"class.blink::CallbackInterfaceBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21CallbackInterfaceBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #6
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.193"*) local_unnamed_addr #2

declare void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"*, %"class.v8::Object"*, i32) unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #4

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #2

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #2

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::V8SQLTransactionCallback"* @_ZN5blink17NativeValueTraitsINS_24V8SQLTransactionCallbackEvE13ArgumentValueEPN2v87IsolateEiNS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, i32, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #6
  br i1 %6, label %7, label %17

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  %9 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21CallbackInterfaceBaseEEEPhm(i64 40) #6
  %10 = bitcast i8* %9 to %"class.blink::V8SQLTransactionCallback"*
  %11 = bitcast i8* %9 to %"class.blink::CallbackInterfaceBase"*
  tail call void @_ZN5blink21CallbackInterfaceBaseC2EN2v85LocalINS1_6ObjectEEENS0_20SingleOperationOrNotE(%"class.blink::CallbackInterfaceBase"* %11, %"class.v8::Object"* %8, i32 1) #6
  %12 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink24V8SQLTransactionCallbackE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %9, i64 -4
  %14 = bitcast i8* %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = or i16 %15, 1
  store atomic i16 %16, i16* %14 release, align 2
  br label %41

17:                                               ; preds = %4
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  %19 = tail call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages17ArgumentNotOfTypeEiPKc(i32 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i64 0, i64 0)) #6
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"** %20, align 8
  %21 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %22 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %22, i64 3
  %24 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %23, align 8
  call void %24(%"class.blink::ExceptionState"* %3, %"class.WTF::String"* nonnull dereferenceable(8) %5) #6
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #6
  br label %40

40:                                               ; preds = %17, %36, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %41

41:                                               ; preds = %40, %7
  %42 = phi %"class.blink::V8SQLTransactionCallback"* [ %10, %7 ], [ null, %40 ]
  ret %"class.blink::V8SQLTransactionCallback"* %42
}

declare void @_ZN5blink8Database15readTransactionEPNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"*, %"class.blink::V8SQLTransactionCallback"*, %"class.blink::V8SQLTransactionErrorCallback"*, %"class.blink::V8VoidCallback"*) local_unnamed_addr #2

declare void @_ZN5blink8Database11transactionEPNS_24V8SQLTransactionCallbackEPNS_29V8SQLTransactionErrorCallbackEPNS_14V8VoidCallbackE(%"class.blink::Database"*, %"class.blink::V8SQLTransactionCallback"*, %"class.blink::V8SQLTransactionErrorCallback"*, %"class.blink::V8VoidCallback"*) local_unnamed_addr #2

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #2

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #2

declare void @_ZN2v82V817FromJustIsNothingEv() local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
