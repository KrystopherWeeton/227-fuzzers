; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/scroll_paint_property_node.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/scroll_paint_property_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::ScrollPaintPropertyNode"* }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap", %"class.WTF::Vector" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr.4 }
%class.scoped_refptr.4 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.11 }
%union.anon.11 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.18" }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase.20" }
%"class.WTF::VectorBufferBase.20" = type { %"class.std::__1::unique_ptr.21"*, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.blink::JSONValue"* }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>

$_ZNK5blink17PaintPropertyNodeINS_23ScrollPaintPropertyNodeES1_E10ToJSONBaseEv = comdat any

$_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_ = comdat any

@_ZZN5blink23ScrollPaintPropertyNode4RootEvE4root = internal unnamed_addr global %"class.blink::ScrollPaintPropertyNode"* null, align 8
@_ZGVZN5blink23ScrollPaintPropertyNode4RootEvE4root = internal global i64 0, align 8
@.str = private unnamed_addr constant [14 x i8] c"containerRect\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"contentsSize\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"userScrollable\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"both\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"horizontal\00", align 1
@.str.5 = private unnamed_addr constant [9 x i8] c"vertical\00", align 1
@.str.6 = private unnamed_addr constant [18 x i8] c"mainThreadReasons\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"maxScrollOffsetAffectedByPageScale\00", align 1
@.str.8 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@.str.9 = private unnamed_addr constant [20 x i8] c"compositorElementId\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c"overscroll-behavior-x\00", align 1
@.str.11 = private unnamed_addr constant [22 x i8] c"overscroll-behavior-y\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"snap_container_rect\00", align 1
@.str.13 = private unnamed_addr constant [16 x i8] c"snap_area_rects\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.14 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.15 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"contain\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"parent\00", align 1
@.str.18 = private unnamed_addr constant [3 x i8] c"%p\00", align 1
@.str.19 = private unnamed_addr constant [9 x i8] c"is_alias\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"changed\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(168) %"class.blink::ScrollPaintPropertyNode"* @_ZN5blink23ScrollPaintPropertyNode4RootEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"struct.blink::ScrollPaintPropertyNode::State", align 8
  %2 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink23ScrollPaintPropertyNode4RootEvE4root to i8*) acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %41, !prof !2

4:                                                ; preds = %0
  %5 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink23ScrollPaintPropertyNode4RootEvE4root) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %41, label %7

7:                                                ; preds = %4
  %8 = tail call noalias i8* @malloc(i64 168) #9
  %9 = bitcast i8* %8 to %"class.blink::ScrollPaintPropertyNode"*
  %10 = bitcast %"struct.blink::ScrollPaintPropertyNode::State"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %10) #9
  %11 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 7, i32 0
  %12 = bitcast %"struct.blink::ScrollPaintPropertyNode::State"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 32, i1 false)
  %13 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 8, i32 0
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 8, i32 1
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 88, i1 false) #9
  %18 = bitcast i8* %8 to i32*
  store i32 1, i32* %18, align 4
  %19 = getelementptr inbounds i8, i8* %8, i64 4
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds i8, i8* %8, i64 5
  store i8 0, i8* %20, align 1
  %21 = getelementptr inbounds i8, i8* %8, i64 8
  %22 = bitcast i8* %21 to %"class.blink::ScrollPaintPropertyNode"**
  store %"class.blink::ScrollPaintPropertyNode"* null, %"class.blink::ScrollPaintPropertyNode"** %22, align 8
  %23 = getelementptr inbounds i8, i8* %8, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 -1, i32* %24, align 8
  %25 = getelementptr inbounds i8, i8* %8, i64 20
  %26 = bitcast i8* %25 to i32*
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds i8, i8* %8, i64 24
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %10, i64 48, i1 false) #9
  %28 = getelementptr inbounds i8, i8* %8, i64 72
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 96, i1 false) #9
  %29 = icmp eq i8* %8, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %7
  %31 = bitcast i8* %8 to %"class.base::subtle::RefCountedBase"*
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* nonnull %31) #9
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* nonnull %31) #9
  %32 = load i32, i32* %18, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %30
  call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %9) #9
  br label %35

35:                                               ; preds = %7, %30, %34
  %36 = load i8, i8* %16, align 8, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"struct.blink::ScrollPaintPropertyNode::State", %"struct.blink::ScrollPaintPropertyNode::State"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %39) #9
  store i8 0, i8* %16, align 8
  br label %40

40:                                               ; preds = %35, %38
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %10) #9
  store i8* %8, i8** bitcast (%"class.blink::ScrollPaintPropertyNode"** @_ZZN5blink23ScrollPaintPropertyNode4RootEvE4root to i8**), align 8
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink23ScrollPaintPropertyNode4RootEvE4root) #9
  br label %41

41:                                               ; preds = %4, %40, %0
  %42 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** @_ZZN5blink23ScrollPaintPropertyNode4RootEvE4root, align 8
  ret %"class.blink::ScrollPaintPropertyNode"* %42
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::JSONObject"* @_ZNK5blink23ScrollPaintPropertyNode6ToJSONEv(%"class.blink::ScrollPaintPropertyNode"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::String", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = alloca %"class.std::__1::basic_string", align 8
  %25 = alloca <2 x i64>, align 16
  %26 = bitcast <2 x i64>* %25 to %"class.gfx::RectF"*
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.std::__1::basic_string", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0
  %31 = tail call %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_23ScrollPaintPropertyNodeES1_E10ToJSONBaseEv(%"class.blink::PaintPropertyNode"* %30)
  %32 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 0
  %33 = bitcast %"class.blink::IntRect"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = icmp eq i32 %35, 0
  %37 = icmp ult i64 %34, 4294967296
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %47

39:                                               ; preds = %1
  %40 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 0, i32 1
  %41 = bitcast %"class.blink::IntSize"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = trunc i64 %42 to i32
  %44 = icmp ne i32 %43, 0
  %45 = icmp ugt i64 %42, 4294967295
  %46 = or i1 %45, %44
  br i1 %46, label %47, label %85

47:                                               ; preds = %39, %1
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i64 13) #9
  %49 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #9
  %50 = call %"class.WTF::StringImpl"* @_ZNK5blink7IntRect8ToStringEv(%"class.blink::IntRect"* %32) #9
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #9
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #9
  br label %67

67:                                               ; preds = %47, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #9
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #9
  br label %84

84:                                               ; preds = %67, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #9
  br label %85

85:                                               ; preds = %39, %84
  %86 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 1
  %87 = getelementptr inbounds %"class.blink::IntSize", %"class.blink::IntSize"* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 1, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %132, label %94

94:                                               ; preds = %85, %90
  %95 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i64 12) #9
  %96 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96) #9
  %97 = call %"class.WTF::StringImpl"* @_ZNK5blink7IntSize8ToStringEv(%"class.blink::IntSize"* %86) #9
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %98, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7) #9
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #9
  br label %114

114:                                              ; preds = %94, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96) #9
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #9
  br label %131

131:                                              ; preds = %114, %127, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #9
  br label %132

132:                                              ; preds = %131, %90
  %133 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 2
  %134 = load i8, i8* %133, align 8, !range !3
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %140

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 3
  %138 = load i8, i8* %137, align 1, !range !3
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %187, label %140

140:                                              ; preds = %136, %132
  %141 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i64 14) #9
  %142 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #9
  %143 = load i8, i8* %133, align 8, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %150, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 3
  %147 = load i8, i8* %146, align 1, !range !3
  %148 = icmp eq i8 %147, 0
  %149 = select i1 %148, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)
  br label %150

150:                                              ; preds = %140, %145
  %151 = phi i8* [ %149, %145 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.5, i64 0, i64 0), %140 ]
  %152 = call i64 @strlen(i8* nonnull %151) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %151, i64 %152) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9) #9
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #9
  br label %169

169:                                              ; preds = %150, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #9
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #9
  br label %186

186:                                              ; preds = %169, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #9
  br label %187

187:                                              ; preds = %136, %186
  %188 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 6
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %250, label %191

191:                                              ; preds = %187
  %192 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %192) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.6, i64 0, i64 0), i64 17) #9
  %193 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %193) #9
  %194 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %194) #9
  %195 = load i32, i32* %188, align 4
  call void @_ZN2cc25MainThreadScrollingReason6AsTextEj(%"class.std::__1::basic_string"* nonnull sret %12, i32 %195) #9
  %196 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  br i1 %199, label %200, label %204

200:                                              ; preds = %191
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load i8*, i8** %201, align 8
  %203 = icmp eq i8* %202, null
  br i1 %203, label %207, label %204

204:                                              ; preds = %191, %200
  %205 = phi i8* [ %202, %200 ], [ %194, %191 ]
  %206 = call i64 @strlen(i8* nonnull %205) #10
  br label %207

207:                                              ; preds = %200, %204
  %208 = phi i8* [ %205, %204 ], [ null, %200 ]
  %209 = phi i64 [ %206, %204 ], [ 0, %200 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %208, i64 %209) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11) #9
  %210 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %207
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #9
  br label %226

226:                                              ; preds = %207, %222, %225
  %227 = load i8, i8* %197, align 1
  %228 = icmp slt i8 %227, 0
  br i1 %228, label %229, label %232

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load i8*, i8** %230, align 8
  call void @_ZdlPv(i8* %231) #11
  br label %232

232:                                              ; preds = %226, %229
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %194) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %193) #9
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #9
  br label %249

249:                                              ; preds = %232, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %192) #9
  br label %250

250:                                              ; preds = %187, %249
  %251 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 5
  %252 = load i8, i8* %251, align 1, !range !3
  %253 = icmp eq i8 %252, 0
  br i1 %253, label %291, label %254

254:                                              ; preds = %250
  %255 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i64 34) #9
  %256 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0), i64 4) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14) #9
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #9
  br label %273

273:                                              ; preds = %254, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #9
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #9
  br label %290

290:                                              ; preds = %273, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #9
  br label %291

291:                                              ; preds = %250, %290
  %292 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 7
  %293 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %292, i64 0, i32 0
  %294 = load i64, i64* %293, align 8
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %354, label %296

296:                                              ; preds = %291
  %297 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %297) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.9, i64 0, i64 0), i64 19) #9
  %298 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #9
  %299 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %299) #9
  call void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %17, %"struct.cc::ElementId"* %292) #9
  %300 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %301 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %300, i64 0, i32 1, i32 0
  %302 = load i8, i8* %301, align 1
  %303 = icmp slt i8 %302, 0
  br i1 %303, label %304, label %308

304:                                              ; preds = %296
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = icmp eq i8* %306, null
  br i1 %307, label %311, label %308

308:                                              ; preds = %296, %304
  %309 = phi i8* [ %306, %304 ], [ %299, %296 ]
  %310 = call i64 @strlen(i8* nonnull %309) #10
  br label %311

311:                                              ; preds = %304, %308
  %312 = phi i8* [ %309, %308 ], [ null, %304 ]
  %313 = phi i64 [ %310, %308 ], [ 0, %304 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* %312, i64 %313) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16) #9
  %314 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %314, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %311
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #9
  br label %330

330:                                              ; preds = %311, %326, %329
  %331 = load i8, i8* %301, align 1
  %332 = icmp slt i8 %331, 0
  br i1 %332, label %333, label %336

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load i8*, i8** %334, align 8
  call void @_ZdlPv(i8* %335) #11
  br label %336

336:                                              ; preds = %330, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %299) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #9
  %337 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %338 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %337, align 8
  %339 = icmp eq %"class.WTF::StringImpl"* %338, null
  br i1 %339, label %353, label %340

340:                                              ; preds = %336
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %342 = load atomic i32, i32* %341 monotonic, align 4
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %338, i64 0, i32 0
  %346 = load i32, i32* %345, align 4
  br i1 %344, label %347, label %349

347:                                              ; preds = %340
  %348 = add i32 %346, -1
  store i32 %348, i32* %345, align 4
  br label %349

349:                                              ; preds = %347, %340
  %350 = phi i32 [ %348, %347 ], [ %346, %340 ]
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %353

352:                                              ; preds = %349
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %338) #9
  br label %353

353:                                              ; preds = %336, %349, %352
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %297) #9
  br label %354

354:                                              ; preds = %291, %353
  %355 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 8, i32 0
  %356 = load i32, i32* %355, align 8
  %357 = icmp eq i32 %356, 1
  br i1 %357, label %405, label %358

358:                                              ; preds = %354
  %359 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %359) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0), i64 21) #9
  %360 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #9
  %361 = load i32, i32* %355, align 8
  %362 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %362)
  switch i32 %361, label %366 [
    i32 0, label %363
    i32 1, label %364
    i32 2, label %365
  ]

363:                                              ; preds = %358
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #9
  br label %367

364:                                              ; preds = %358
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #9
  br label %367

365:                                              ; preds = %358
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7) #9
  br label %367

366:                                              ; preds = %358
  unreachable

367:                                              ; preds = %363, %364, %365
  %368 = bitcast %"class.WTF::String"* %3 to i64*
  %369 = load i64, i64* %368, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %362)
  %370 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %371 = bitcast %"class.WTF::String"* %19 to i64*
  store i64 %369, i64* %371, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %18, %"class.WTF::String"* nonnull dereferenceable(8) %19) #9
  %372 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %373 = icmp eq %"class.WTF::StringImpl"* %372, null
  br i1 %373, label %387, label %374

374:                                              ; preds = %367
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %372, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %372) #9
  br label %387

387:                                              ; preds = %367, %383, %386
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #9
  %388 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %390 = icmp eq %"class.WTF::StringImpl"* %389, null
  br i1 %390, label %404, label %391

391:                                              ; preds = %387
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %389, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %391
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %391
  %401 = phi i32 [ %399, %398 ], [ %397, %391 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %389) #9
  br label %404

404:                                              ; preds = %387, %400, %403
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %359) #9
  br label %405

405:                                              ; preds = %354, %404
  %406 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 8, i32 1
  %407 = load i32, i32* %406, align 4
  %408 = icmp eq i32 %407, 1
  br i1 %408, label %456, label %409

409:                                              ; preds = %405
  %410 = bitcast %"class.WTF::String"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %410) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %20, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.11, i64 0, i64 0), i64 21) #9
  %411 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %411) #9
  %412 = load i32, i32* %406, align 4
  %413 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %413)
  switch i32 %412, label %417 [
    i32 0, label %414
    i32 1, label %415
    i32 2, label %416
  ]

414:                                              ; preds = %409
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.14, i64 0, i64 0), i64 4) #9
  br label %418

415:                                              ; preds = %409
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.15, i64 0, i64 0), i64 4) #9
  br label %418

416:                                              ; preds = %409
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0), i64 7) #9
  br label %418

417:                                              ; preds = %409
  unreachable

418:                                              ; preds = %414, %415, %416
  %419 = bitcast %"class.WTF::String"* %2 to i64*
  %420 = load i64, i64* %419, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %413)
  %421 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %422 = bitcast %"class.WTF::String"* %21 to i64*
  store i64 %420, i64* %422, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %20, %"class.WTF::String"* nonnull dereferenceable(8) %21) #9
  %423 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %421, align 8
  %424 = icmp eq %"class.WTF::StringImpl"* %423, null
  br i1 %424, label %438, label %425

425:                                              ; preds = %418
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %427 = load atomic i32, i32* %426 monotonic, align 4
  %428 = and i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %423, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  br i1 %429, label %432, label %434

432:                                              ; preds = %425
  %433 = add i32 %431, -1
  store i32 %433, i32* %430, align 4
  br label %434

434:                                              ; preds = %432, %425
  %435 = phi i32 [ %433, %432 ], [ %431, %425 ]
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %437, label %438

437:                                              ; preds = %434
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %423) #9
  br label %438

438:                                              ; preds = %418, %434, %437
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %411) #9
  %439 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 0, i32 0, i32 0
  %440 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %439, align 8
  %441 = icmp eq %"class.WTF::StringImpl"* %440, null
  br i1 %441, label %455, label %442

442:                                              ; preds = %438
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %444 = load atomic i32, i32* %443 monotonic, align 4
  %445 = and i32 %444, 2
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %440, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  br i1 %446, label %449, label %451

449:                                              ; preds = %442
  %450 = add i32 %448, -1
  store i32 %450, i32* %447, align 4
  br label %451

451:                                              ; preds = %449, %442
  %452 = phi i32 [ %450, %449 ], [ %448, %442 ]
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %454, label %455

454:                                              ; preds = %451
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %440) #9
  br label %455

455:                                              ; preds = %438, %451, %454
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %410) #9
  br label %456

456:                                              ; preds = %405, %455
  %457 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %458 = load i8, i8* %457, align 8, !range !3
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %616, label %460

460:                                              ; preds = %456
  %461 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %461) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %22, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i64 19) #9
  %462 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %462) #9
  %463 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %463) #9
  %464 = bitcast <2 x i64>* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %464) #9
  %465 = load i8, i8* %457, align 8, !range !3
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %467, label %468, !prof !4

467:                                              ; preds = %460
  call void @llvm.trap() #9
  unreachable

468:                                              ; preds = %460
  %469 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %470 = bitcast %"class.gfx::RectF"* %469 to <2 x i64>*
  %471 = load <2 x i64>, <2 x i64>* %470, align 4
  store <2 x i64> %471, <2 x i64>* %25, align 16
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %24, %"class.gfx::RectF"* nonnull %26) #9
  %472 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %473 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %472, i64 0, i32 1, i32 0
  %474 = load i8, i8* %473, align 1
  %475 = icmp slt i8 %474, 0
  br i1 %475, label %476, label %480

476:                                              ; preds = %468
  %477 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %478 = load i8*, i8** %477, align 8
  %479 = icmp eq i8* %478, null
  br i1 %479, label %483, label %480

480:                                              ; preds = %468, %476
  %481 = phi i8* [ %478, %476 ], [ %463, %468 ]
  %482 = call i64 @strlen(i8* nonnull %481) #10
  br label %483

483:                                              ; preds = %476, %480
  %484 = phi i8* [ %481, %480 ], [ null, %476 ]
  %485 = phi i64 [ %482, %480 ], [ 0, %476 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* %484, i64 %485) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.WTF::String"* nonnull dereferenceable(8) %23) #9
  %486 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %487 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %486, align 8
  %488 = icmp eq %"class.WTF::StringImpl"* %487, null
  br i1 %488, label %502, label %489

489:                                              ; preds = %483
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = and i32 %491, 2
  %493 = icmp eq i32 %492, 0
  %494 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %487, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  br i1 %493, label %496, label %498

496:                                              ; preds = %489
  %497 = add i32 %495, -1
  store i32 %497, i32* %494, align 4
  br label %498

498:                                              ; preds = %496, %489
  %499 = phi i32 [ %497, %496 ], [ %495, %489 ]
  %500 = icmp eq i32 %499, 0
  br i1 %500, label %501, label %502

501:                                              ; preds = %498
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %487) #9
  br label %502

502:                                              ; preds = %483, %498, %501
  %503 = load i8, i8* %473, align 1
  %504 = icmp slt i8 %503, 0
  br i1 %504, label %505, label %508

505:                                              ; preds = %502
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %507 = load i8*, i8** %506, align 8
  call void @_ZdlPv(i8* %507) #11
  br label %508

508:                                              ; preds = %502, %505
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %464) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %463) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %462) #9
  %509 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  %510 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %509, align 8
  %511 = icmp eq %"class.WTF::StringImpl"* %510, null
  br i1 %511, label %525, label %512

512:                                              ; preds = %508
  %513 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %514 = load atomic i32, i32* %513 monotonic, align 4
  %515 = and i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %510, i64 0, i32 0
  %518 = load i32, i32* %517, align 4
  br i1 %516, label %519, label %521

519:                                              ; preds = %512
  %520 = add i32 %518, -1
  store i32 %520, i32* %517, align 4
  br label %521

521:                                              ; preds = %519, %512
  %522 = phi i32 [ %520, %519 ], [ %518, %512 ]
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %524, label %525

524:                                              ; preds = %521
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %510) #9
  br label %525

525:                                              ; preds = %508, %521, %524
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %461) #9
  %526 = load i8, i8* %457, align 8, !range !3
  %527 = icmp eq i8 %526, 0
  br i1 %527, label %528, label %529, !prof !4

528:                                              ; preds = %525
  call void @llvm.trap() #9
  unreachable

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4
  %531 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 4, i32 0, i32 1
  %532 = bitcast %"struct.cc::SnapAreaData"** %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = bitcast %"class.std::__1::vector"* %530 to i64*
  %535 = load i64, i64* %534, align 8
  %536 = icmp eq i64 %533, %535
  br i1 %536, label %616, label %537

537:                                              ; preds = %529
  %538 = call noalias i8* @malloc(i64 32) #9
  %539 = bitcast i8* %538 to %"class.blink::JSONArray"*
  call void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"* %539) #9
  %540 = load i8, i8* %457, align 8, !range !3
  %541 = icmp eq i8 %540, 0
  br i1 %541, label %549, label %542, !prof !4

542:                                              ; preds = %537
  %543 = bitcast %"class.WTF::String"* %27 to i8*
  %544 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %545 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %546 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %545, i64 0, i32 1, i32 0
  %547 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  br label %550

549:                                              ; preds = %612, %537
  call void @llvm.trap() #9
  unreachable

550:                                              ; preds = %542, %612
  %551 = phi i64 [ 0, %542 ], [ %613, %612 ]
  %552 = load i64, i64* %532, align 8
  %553 = load i64, i64* %534, align 8
  %554 = sub i64 %552, %553
  %555 = sdiv exact i64 %554, 40
  %556 = icmp ult i64 %551, %555
  br i1 %556, label %576, label %557

557:                                              ; preds = %550
  %558 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.13, i64 0, i64 0), i64 15) #9
  call void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"* %31, %"class.WTF::String"* nonnull dereferenceable(8) %29, %"class.blink::JSONArray"* %539) #9
  %559 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %560 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %559, align 8
  %561 = icmp eq %"class.WTF::StringImpl"* %560, null
  br i1 %561, label %575, label %562

562:                                              ; preds = %557
  %563 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %564 = load atomic i32, i32* %563 monotonic, align 4
  %565 = and i32 %564, 2
  %566 = icmp eq i32 %565, 0
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %560, i64 0, i32 0
  %568 = load i32, i32* %567, align 4
  br i1 %566, label %569, label %571

569:                                              ; preds = %562
  %570 = add i32 %568, -1
  store i32 %570, i32* %567, align 4
  br label %571

571:                                              ; preds = %569, %562
  %572 = phi i32 [ %570, %569 ], [ %568, %562 ]
  %573 = icmp eq i32 %572, 0
  br i1 %573, label %574, label %575

574:                                              ; preds = %571
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %560) #9
  br label %575

575:                                              ; preds = %574, %571, %557
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #9
  br label %616

576:                                              ; preds = %550
  %577 = inttoptr i64 %553 to %"struct.cc::SnapAreaData"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %543) #9
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #9
  %578 = shl i64 %551, 32
  %579 = ashr exact i64 %578, 32
  %580 = getelementptr inbounds %"struct.cc::SnapAreaData", %"struct.cc::SnapAreaData"* %577, i64 %579, i32 1
  call void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %28, %"class.gfx::RectF"* %580) #9
  %581 = load i8, i8* %546, align 1
  %582 = icmp slt i8 %581, 0
  br i1 %582, label %583, label %586

583:                                              ; preds = %576
  %584 = load i8*, i8** %547, align 8
  %585 = icmp eq i8* %584, null
  br i1 %585, label %589, label %586

586:                                              ; preds = %576, %583
  %587 = phi i8* [ %584, %583 ], [ %544, %576 ]
  %588 = call i64 @strlen(i8* nonnull %587) #10
  br label %589

589:                                              ; preds = %583, %586
  %590 = phi i8* [ %587, %586 ], [ null, %583 ]
  %591 = phi i64 [ %588, %586 ], [ 0, %583 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* %590, i64 %591) #9
  call void @_ZN5blink9JSONArray10PushStringERKN3WTF6StringE(%"class.blink::JSONArray"* %539, %"class.WTF::String"* nonnull dereferenceable(8) %27) #9
  %592 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %593 = icmp eq %"class.WTF::StringImpl"* %592, null
  br i1 %593, label %607, label %594

594:                                              ; preds = %589
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %596 = load atomic i32, i32* %595 monotonic, align 4
  %597 = and i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %592, i64 0, i32 0
  %600 = load i32, i32* %599, align 4
  br i1 %598, label %601, label %603

601:                                              ; preds = %594
  %602 = add i32 %600, -1
  store i32 %602, i32* %599, align 4
  br label %603

603:                                              ; preds = %601, %594
  %604 = phi i32 [ %602, %601 ], [ %600, %594 ]
  %605 = icmp eq i32 %604, 0
  br i1 %605, label %606, label %607

606:                                              ; preds = %603
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %592) #9
  br label %607

607:                                              ; preds = %589, %603, %606
  %608 = load i8, i8* %546, align 1
  %609 = icmp slt i8 %608, 0
  br i1 %609, label %610, label %612

610:                                              ; preds = %607
  %611 = load i8*, i8** %547, align 8
  call void @_ZdlPv(i8* %611) #11
  br label %612

612:                                              ; preds = %607, %610
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %544) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %543) #9
  %613 = add nuw i64 %551, 1
  %614 = load i8, i8* %457, align 8, !range !3
  %615 = icmp eq i8 %614, 0
  br i1 %615, label %549, label %550, !prof !4

616:                                              ; preds = %456, %575, %529
  ret %"class.blink::JSONObject"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::JSONObject"* @_ZNK5blink17PaintPropertyNodeINS_23ScrollPaintPropertyNodeES1_E10ToJSONBaseEv(%"class.blink::PaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = tail call noalias i8* @malloc(i64 56) #9
  %8 = bitcast i8* %7 to %"class.blink::JSONObject"*
  tail call void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"* %8) #9
  %9 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 3, i32 0
  %10 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %9, align 8
  %11 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %10, null
  br i1 %11, label %51, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i64 6) #9
  %14 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %9, align 8
  %16 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.18, i64 0, i64 0), %"class.blink::ScrollPaintPropertyNode"* %15) #9
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3) #9
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #9
  br label %33

33:                                               ; preds = %12, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #9
  br label %50

50:                                               ; preds = %33, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #9
  br label %51

51:                                               ; preds = %1, %50
  %52 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 1
  %53 = load i8, i8* %52, align 4, !range !3
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %74, label %55

55:                                               ; preds = %51
  %56 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19, i64 0, i64 0), i64 8) #9
  call void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext true) #9
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %55, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  br label %74

74:                                               ; preds = %51, %73
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %0, i64 0, i32 2
  %76 = load i8, i8* %75, align 1
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %122, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i64 0, i64 0), i64 7) #9
  %80 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  %81 = load i8, i8* %75, align 1
  %82 = call i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext %81) #9
  %83 = icmp eq i8* %82, null
  br i1 %83, label %86, label %84

84:                                               ; preds = %78
  %85 = call i64 @strlen(i8* nonnull %82) #10
  br label %86

86:                                               ; preds = %78, %84
  %87 = phi i64 [ %85, %84 ], [ 0, %78 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* %82, i64 %87) #9
  call void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #9
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #9
  br label %104

104:                                              ; preds = %86, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %106 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %108
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %108
  %118 = phi i32 [ %116, %115 ], [ %114, %108 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #9
  br label %121

121:                                              ; preds = %104, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #9
  br label %122

122:                                              ; preds = %121, %74
  ret %"class.blink::JSONObject"* %8
}

declare void @_ZN5blink10JSONObject9SetStringERKN3WTF6StringES4_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink7IntRect8ToStringEv(%"class.blink::IntRect"*) local_unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink7IntSize8ToStringEv(%"class.blink::IntSize"*) local_unnamed_addr #3

declare void @_ZN2cc25MainThreadScrollingReason6AsTextEj(%"class.std::__1::basic_string"* sret, i32) local_unnamed_addr #3

declare void @_ZNK2cc9ElementId8ToStringEv(%"class.std::__1::basic_string"* sret, %"struct.cc::ElementId"*) local_unnamed_addr #3

declare void @_ZNK3gfx5RectF8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.gfx::RectF"*) local_unnamed_addr #3

declare void @_ZN5blink9JSONArray10PushStringERKN3WTF6StringE(%"class.blink::JSONArray"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZN5blink10JSONObject8SetArrayERKN3WTF6StringENSt3__110unique_ptrINS_9JSONArrayENS5_14default_deleteIS7_EEEE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONArray"*) local_unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  %5 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %0, null
  br i1 %4, label %25, label %6

6:                                                ; preds = %1
  br i1 %5, label %44, label %7

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !3
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %12) #9
  store i8 0, i8* %8, align 8
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %15 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %14, align 8
  %16 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %18) #9
  %19 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %17
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %15) #9
  br label %23

23:                                               ; preds = %22, %17, %13
  %24 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %24) #9
  br label %44

25:                                               ; preds = %1
  br i1 %5, label %44, label %26

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 0
  %28 = load i8, i8* %27, align 8, !range !3
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 1, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"* %31) #9
  store i8 0, i8* %27, align 8
  br label %32

32:                                               ; preds = %26, %30
  %33 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %0, i64 0, i32 0, i32 3, i32 0
  %34 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %33, align 8
  %35 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #9
  %38 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %36
  tail call void @_ZN5blink33PaintPropertyNodeRefCountedTraitsINS_23ScrollPaintPropertyNodeES1_E8DestructEPKS1_(%"class.blink::ScrollPaintPropertyNode"* nonnull %34) #9
  br label %42

42:                                               ; preds = %41, %36, %32
  %43 = bitcast %"class.blink::ScrollPaintPropertyNode"* %0 to i8*
  tail call void @free(i8* %43) #9
  br label %44

44:                                               ; preds = %25, %42, %6, %23
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind
declare void @_ZN2cc17SnapContainerDataD1Ev(%"class.cc::SnapContainerData"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #3

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #3

declare void @_ZN5blink10JSONObject10SetBooleanERKN3WTF6StringEb(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #3

declare i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext) local_unnamed_addr #3

declare void @_ZN5blink10JSONObjectC1Ev(%"class.blink::JSONObject"*) unnamed_addr #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN5blink9JSONArrayC1Ev(%"class.blink::JSONArray"*) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nounwind }
attributes #10 = { nounwind readonly }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 2000}
