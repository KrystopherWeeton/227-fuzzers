; ModuleID = '../../third_party/blink/renderer/core/style/style_generated_image.cc'
source_filename = "../../third_party/blink/renderer/core/style/style_generated_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::StyleGeneratedImage" = type <{ %"class.blink::StyleImage.base", [7 x i8], %"class.blink::Member", i8, [7 x i8] }>
%"class.blink::StyleImage.base" = type <{ i32 (...)**, i8 }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSImageGeneratorValue"* }
%"class.blink::CSSImageGeneratorValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap", %"class.blink::GeneratedImageCache", %"class.blink::SelfKeepAlive" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::GeneratedImageCache" = type { %"class.WTF::HashCountedSet", %"class.WTF::HashMap.7" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.2" }
%"class.WTF::HashMap.2" = type { %"class.WTF::HashTable.3" }
%"class.WTF::HashTable.3" = type <{ %"struct.WTF::KeyValuePair.6"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.6" = type opaque
%"class.WTF::HashMap.7" = type { %"class.WTF::HashTable.8" }
%"class.WTF::HashTable.8" = type <{ %"struct.WTF::KeyValuePair.11"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.11" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CSSImageGeneratorValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.176", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.180" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.181" }
%"struct.std::__1::__compressed_pair_elem.181" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::ComputedStyle" = type opaque
%"class.blink::Document" = type opaque
%"class.blink::FloatSize" = type { float, float }
%"class.blink::ImageResourceObserver" = type opaque
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.185 }
%class.scoped_refptr.185 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.186" }
%"struct.std::__1::atomic.186" = type { %"struct.std::__1::__atomic_base.187" }
%"struct.std::__1::__atomic_base.187" = type { %"struct.std::__1::__atomic_base.188" }
%"struct.std::__1::__atomic_base.188" = type { %"struct.std::__1::__cxx_atomic_impl.189" }
%"struct.std::__1::__cxx_atomic_impl.189" = type { %"struct.std::__1::__cxx_atomic_base_impl.190" }
%"struct.std::__1::__cxx_atomic_base_impl.190" = type { i32 }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.197, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.211" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.192" }
%"struct.std::__1::atomic.192" = type { %"struct.std::__1::__atomic_base.193" }
%"struct.std::__1::__atomic_base.193" = type { %"struct.std::__1::__atomic_base.194" }
%"struct.std::__1::__atomic_base.194" = type { %"struct.std::__1::__cxx_atomic_impl.195" }
%"struct.std::__1::__cxx_atomic_impl.195" = type { %"struct.std::__1::__cxx_atomic_base_impl.196" }
%"struct.std::__1::__cxx_atomic_base_impl.196" = type { i32 }
%class.scoped_refptr.197 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted", i64, %"class.WTF::Vector.198", %"class.WTF::Vector.203" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.198" = type { %"class.WTF::VectorBuffer.199" }
%"class.WTF::VectorBuffer.199" = type { %"class.WTF::VectorBufferBase.200" }
%"class.WTF::VectorBufferBase.200" = type { i8*, i32, i32 }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"class.std::__1::unique_ptr.206"*, i32, i32 }
%"class.std::__1::unique_ptr.206" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.209" }
%"class.blink::PersistentBase.209" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.210" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr.210" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ImageResourceContent" = type opaque

$_ZN5blink10StyleImageD2Ev = comdat any

$_ZN5blink19StyleGeneratedImageD0Ev = comdat any

$_ZNK5blink10StyleImage9CanRenderEv = comdat any

$_ZNK5blink10StyleImage8IsLoadedEv = comdat any

$_ZNK5blink10StyleImage13ErrorOccurredEv = comdat any

$_ZNK5blink19StyleGeneratedImage16HasIntrinsicSizeEv = comdat any

$_ZNK5blink19StyleGeneratedImage4DataEv = comdat any

$_ZNK5blink10StyleImage16ImageScaleFactorEv = comdat any

$_ZNK5blink10StyleImage11CachedImageEv = comdat any

$_ZNK5blink10StyleImage27ForceOrientationIfNecessaryENS_27RespectImageOrientationEnumE = comdat any

$_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv = comdat any

@_ZTVN5blink19StyleGeneratedImageE = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::StyleImage"*)* @_ZN5blink10StyleImageD2Ev to i8*), i8* bitcast (void (%"class.blink::StyleGeneratedImage"*)* @_ZN5blink19StyleGeneratedImageD0Ev to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::StyleGeneratedImage"*)* @_ZNK5blink19StyleGeneratedImage8CssValueEv to i8*), i8* bitcast (%"class.blink::CSSValue"* (%"class.blink::StyleGeneratedImage"*, %"class.blink::ComputedStyle"*, i1)* @_ZNK5blink19StyleGeneratedImage16ComputedCSSValueERKNS_13ComputedStyleEb to i8*), i8* bitcast (i1 (%"class.blink::StyleImage"*)* @_ZNK5blink10StyleImage9CanRenderEv to i8*), i8* bitcast (i1 (%"class.blink::StyleImage"*)* @_ZNK5blink10StyleImage8IsLoadedEv to i8*), i8* bitcast (i1 (%"class.blink::StyleImage"*)* @_ZNK5blink10StyleImage13ErrorOccurredEv to i8*), i8* bitcast (<2 x float> (%"class.blink::StyleGeneratedImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"*, i32)* @_ZNK5blink19StyleGeneratedImage9ImageSizeERKNS_8DocumentEfRKNS_9FloatSizeENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (i1 (%"class.blink::StyleGeneratedImage"*)* @_ZNK5blink19StyleGeneratedImage16HasIntrinsicSizeEv to i8*), i8* bitcast (void (%"class.blink::StyleGeneratedImage"*, %"class.blink::ImageResourceObserver"*)* @_ZN5blink19StyleGeneratedImage9AddClientEPNS_21ImageResourceObserverE to i8*), i8* bitcast (void (%"class.blink::StyleGeneratedImage"*, %"class.blink::ImageResourceObserver"*)* @_ZN5blink19StyleGeneratedImage12RemoveClientEPNS_21ImageResourceObserverE to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::StyleGeneratedImage"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"*)* @_ZNK5blink19StyleGeneratedImage8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE to i8*), i8* bitcast (i8* (%"class.blink::StyleGeneratedImage"*)* @_ZNK5blink19StyleGeneratedImage4DataEv to i8*), i8* bitcast (float (%"class.blink::StyleImage"*)* @_ZNK5blink10StyleImage16ImageScaleFactorEv to i8*), i8* bitcast (i1 (%"class.blink::StyleGeneratedImage"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink19StyleGeneratedImage15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE to i8*), i8* bitcast (%"class.blink::ImageResourceContent"* (%"class.blink::StyleImage"*)* @_ZNK5blink10StyleImage11CachedImageEv to i8*), i8* bitcast (i32 (%"class.blink::StyleImage"*, i32)* @_ZNK5blink10StyleImage27ForceOrientationIfNecessaryENS_27RespectImageOrientationEnumE to i8*), i8* bitcast (void (%"class.blink::StyleGeneratedImage"*, %"class.blink::Visitor"*)* @_ZNK5blink19StyleGeneratedImage5TraceEPNS_7VisitorE to i8*), i8* bitcast (i1 (%"class.blink::StyleGeneratedImage"*, %"class.blink::StyleImage"*)* @_ZNK5blink19StyleGeneratedImage7IsEqualERKNS_10StyleImageE to i8*)] }, align 8

@_ZN5blink19StyleGeneratedImageC1ERKNS_22CSSImageGeneratorValueE = hidden unnamed_addr alias void (%"class.blink::StyleGeneratedImage"*, %"class.blink::CSSImageGeneratorValue"*), void (%"class.blink::StyleGeneratedImage"*, %"class.blink::CSSImageGeneratorValue"*)* @_ZN5blink19StyleGeneratedImageC2ERKNS_22CSSImageGeneratorValueE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19StyleGeneratedImageC2ERKNS_22CSSImageGeneratorValueE(%"class.blink::StyleGeneratedImage"* nocapture, %"class.blink::CSSImageGeneratorValue"* dereferenceable(96)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 0, i32 1
  %5 = load i8, i8* %4, align 8
  %6 = and i8 %5, -64
  store i8 %6, i8* %4, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN5blink19StyleGeneratedImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %7 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSImageGeneratorValue"* %1, %"class.blink::CSSImageGeneratorValue"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 3
  %9 = tail call zeroext i1 @_ZNK5blink22CSSImageGeneratorValue11IsFixedSizeEv(%"class.blink::CSSImageGeneratorValue"* %1) #6
  %10 = zext i1 %9 to i8
  store i8 %10, i8* %8, align 8
  %11 = load i8, i8* %4, align 8
  %12 = or i8 %11, 4
  store i8 %12, i8* %4, align 8
  %13 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %1, i64 0, i32 0, i32 2
  %14 = load i8, i8* %13, align 1
  %15 = icmp eq i8 %14, 20
  br i1 %15, label %16, label %18

16:                                               ; preds = %2
  %17 = or i8 %11, 20
  store i8 %17, i8* %4, align 8
  br label %18

18:                                               ; preds = %16, %2
  ret void
}

declare zeroext i1 @_ZNK5blink22CSSImageGeneratorValue11IsFixedSizeEv(%"class.blink::CSSImageGeneratorValue"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink19StyleGeneratedImage7IsEqualERKNS_10StyleImageE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::StyleImage"* nocapture readonly dereferenceable(16)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleImage", %"class.blink::StyleImage"* %1, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  %5 = and i8 %4, 4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::StyleImage", %"class.blink::StyleImage"* %1, i64 1
  %9 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %9, align 8
  %11 = bitcast %"class.blink::StyleImage"* %8 to %"class.blink::CSSImageGeneratorValue"**
  %12 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %11, align 8
  %13 = icmp eq %"class.blink::CSSImageGeneratorValue"* %10, %12
  br label %14

14:                                               ; preds = %2, %7
  %15 = phi i1 [ %13, %7 ], [ false, %2 ]
  ret i1 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink19StyleGeneratedImage8CssValueEv(%"class.blink::StyleGeneratedImage"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %3, i64 0, i32 0
  ret %"class.blink::CSSValue"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZNK5blink19StyleGeneratedImage16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::ComputedStyle"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %4, align 8
  %6 = tail call %"class.blink::CSSImageGeneratorValue"* @_ZN5blink22CSSImageGeneratorValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::CSSImageGeneratorValue"* %5, %"class.blink::ComputedStyle"* %1, i1 zeroext %2) #6
  %7 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %6, i64 0, i32 0
  ret %"class.blink::CSSValue"* %7
}

declare %"class.blink::CSSImageGeneratorValue"* @_ZN5blink22CSSImageGeneratorValue16ComputedCSSValueERKNS_13ComputedStyleEb(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ComputedStyle"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink19StyleGeneratedImage9ImageSizeERKNS_8DocumentEfRKNS_9FloatSizeENS_27RespectImageOrientationEnumE(%"class.blink::StyleGeneratedImage"*, %"class.blink::Document"*, float, %"class.blink::FloatSize"* nocapture readonly dereferenceable(8), i32) unnamed_addr #4 align 2 {
  %6 = alloca i64, align 8
  %7 = bitcast i64* %6 to %"class.blink::FloatSize"*
  %8 = alloca <2 x float>, align 8
  %9 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %33, label %12

12:                                               ; preds = %5
  %13 = bitcast <2 x float>* %8 to %"class.blink::FloatSize"*
  %14 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = bitcast i64* %6 to float*
  %16 = getelementptr inbounds %"class.blink::FloatSize", %"class.blink::FloatSize"* %7, i64 0, i32 1
  %17 = bitcast %"class.blink::FloatSize"* %3 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = fdiv float 1.000000e+00, %2
  %20 = trunc i64 %18 to i32
  %21 = bitcast i32 %20 to float
  %22 = fmul float %19, %21
  store float %22, float* %15, align 8
  %23 = lshr i64 %18, 32
  %24 = trunc i64 %23 to i32
  %25 = bitcast i32 %24 to float
  %26 = fmul float %19, %25
  store float %26, float* %16, align 4
  %27 = bitcast %"class.blink::StyleGeneratedImage"* %0 to %"class.blink::StyleImage"*
  %28 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  %29 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %30 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %29, align 8
  %31 = call <2 x float> @_ZN5blink22CSSImageGeneratorValue9FixedSizeERKNS_8DocumentERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"* %30, %"class.blink::Document"* %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %7) #6
  store <2 x float> %31, <2 x float>* %8, align 8
  %32 = call <2 x float> @_ZNK5blink10StyleImage9ApplyZoomERKNS_9FloatSizeEf(%"class.blink::StyleImage"* %27, %"class.blink::FloatSize"* nonnull dereferenceable(8) %13, float %2) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  br label %36

33:                                               ; preds = %5
  %34 = bitcast %"class.blink::FloatSize"* %3 to <2 x float>*
  %35 = load <2 x float>, <2 x float>* %34, align 4
  br label %36

36:                                               ; preds = %33, %12
  %37 = phi <2 x float> [ %32, %12 ], [ %35, %33 ]
  ret <2 x float> %37
}

declare <2 x float> @_ZNK5blink10StyleImage9ApplyZoomERKNS_9FloatSizeEf(%"class.blink::StyleImage"*, %"class.blink::FloatSize"* dereferenceable(8), float) local_unnamed_addr #1

declare <2 x float> @_ZN5blink22CSSImageGeneratorValue9FixedSizeERKNS_8DocumentERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::Document"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19StyleGeneratedImage9AddClientEPNS_21ImageResourceObserverE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::ImageResourceObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %3, align 8
  tail call void @_ZN5blink22CSSImageGeneratorValue9AddClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"* %4, %"class.blink::ImageResourceObserver"* %1) #6
  ret void
}

declare void @_ZN5blink22CSSImageGeneratorValue9AddClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19StyleGeneratedImage12RemoveClientEPNS_21ImageResourceObserverE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::ImageResourceObserver"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %3, align 8
  tail call void @_ZN5blink22CSSImageGeneratorValue12RemoveClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"* %4, %"class.blink::ImageResourceObserver"* %1) #6
  ret void
}

declare void @_ZN5blink22CSSImageGeneratorValue12RemoveClientEPKNS_21ImageResourceObserverE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19StyleGeneratedImage21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink22CSSImageGeneratorValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSImageGeneratorValue"* %5, %"class.WTF::AtomicString"* dereferenceable(8) %1, %"class.blink::Document"* %2) #6
  ret i1 %6
}

declare zeroext i1 @_ZNK5blink22CSSImageGeneratorValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSImageGeneratorValue"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZNK5blink19StyleGeneratedImage8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %6, align 8
  %8 = tail call %"class.blink::Image"* @_ZN5blink22CSSImageGeneratorValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"* %7, %"class.blink::ImageResourceObserver"* %1, %"class.blink::Document"* %2, %"class.blink::ComputedStyle"* %3, %"class.blink::FloatSize"* dereferenceable(8) %4) #6
  ret %"class.blink::Image"* %8
}

declare %"class.blink::Image"* @_ZN5blink22CSSImageGeneratorValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::ImageResourceObserver"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink19StyleGeneratedImage15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink22CSSImageGeneratorValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSImageGeneratorValue"* %5, %"class.blink::Document"* %1, %"class.blink::ComputedStyle"* %2) #6
  ret i1 %6
}

declare zeroext i1 @_ZNK5blink22CSSImageGeneratorValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSImageGeneratorValue"*, %"class.blink::Document"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink19StyleGeneratedImage5TraceEPNS_7VisitorE(%"class.blink::StyleGeneratedImage"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSImageGeneratorValue"*
  %9 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %8, i64 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv) #6
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10StyleImageD2Ev(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19StyleGeneratedImageD0Ev(%"class.blink::StyleGeneratedImage"*) unnamed_addr #5 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10StyleImage9CanRenderEv(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10StyleImage8IsLoadedEv(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10StyleImage13ErrorOccurredEv(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink19StyleGeneratedImage16HasIntrinsicSizeEv(%"class.blink::StyleGeneratedImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK5blink19StyleGeneratedImage4DataEv(%"class.blink::StyleGeneratedImage"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleGeneratedImage", %"class.blink::StyleGeneratedImage"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::CSSImageGeneratorValue"*, %"class.blink::CSSImageGeneratorValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSImageGeneratorValue", %"class.blink::CSSImageGeneratorValue"* %3, i64 0, i32 0, i32 0
  ret i8* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden float @_ZNK5blink10StyleImage16ImageScaleFactorEv(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret float 1.000000e+00
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ImageResourceContent"* @_ZNK5blink10StyleImage11CachedImageEv(%"class.blink::StyleImage"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::ImageResourceContent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink10StyleImage27ForceOrientationIfNecessaryENS_27RespectImageOrientationEnumE(%"class.blink::StyleImage"*, i32) unnamed_addr #0 comdat align 2 {
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22CSSImageGeneratorValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
