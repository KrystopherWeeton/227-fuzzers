; ModuleID = '../../ui/gfx/paint_vector_icon.cc'
source_filename = "../../ui/gfx/paint_vector_icon.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gfx::VectorIcon" = type { %"struct.gfx::VectorIconRep"*, i64, i8* }
%"struct.gfx::VectorIconRep" = type { %"struct.gfx::PathElement"*, i64 }
%"struct.gfx::PathElement" = type { %union.anon }
%union.anon = type { i32 }
%"class.base::LazyInstance" = type { i64, [24 x i8] }
%"struct.gfx::IconDescription" = type { %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"* }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.9", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.0 }
%union.anon.0 = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.8 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.8 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, [7 x i8], %union.anon.13 }
%union.anon.13 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.23", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.14, [384 x i64], %class.sk_sp.15, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.17" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.14 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.15 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%class.SkPath = type <{ %class.sk_sp.45, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp.45 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.46, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.47, %class.SkTDArray.48, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.46 = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.47 = type { i8*, i32, i32 }
%class.SkTDArray.48 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.49 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.49 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.50", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.50" = type { %"struct.std::__1::__atomic_base.51" }
%"struct.std::__1::__atomic_base.51" = type { %"struct.std::__1::__cxx_atomic_impl.52" }
%"struct.std::__1::__cxx_atomic_impl.52" = type { %"struct.std::__1::__cxx_atomic_base_impl.53" }
%"struct.std::__1::__cxx_atomic_base_impl.53" = type { i8 }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.61, %class.sk_sp.62, %class.sk_sp.97, %class.sk_sp.98, %class.sk_sp.99, %class.sk_sp.100, i32, float, float, i32, %union.anon.101, [4 x i8] }>
%class.sk_sp.61 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.62 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.63", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.69, i32, %"class.absl::optional.77", %"class.std::__1::vector.82", %"class.std::__1::vector.89", %class.sk_sp.96, %class.sk_sp.68, i32, [4 x i8] }>
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%"class.cc::PaintImage" = type { %class.sk_sp.68, %class.sk_sp.69, %"class.gfx::Rect", i32, %class.sk_sp.74, %class.sk_sp.75, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.68, %class.scoped_refptr.76 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.74 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.75 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr.76 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.69 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.70", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { i8* }
%"class.absl::optional.77" = type { %"class.absl::optional_internal::optional_data.78" }
%"class.absl::optional_internal::optional_data.78" = type { %"class.absl::optional_internal::optional_data_base.79" }
%"class.absl::optional_internal::optional_data_base.79" = type { %"class.absl::optional_internal::optional_data_dtor_base.80" }
%"class.absl::optional_internal::optional_data_dtor_base.80" = type { i8, %union.anon.81 }
%union.anon.81 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.82" = type { %"class.std::__1::__vector_base.83" }
%"class.std::__1::__vector_base.83" = type { i32*, i32*, %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { i32* }
%"class.std::__1::vector.89" = type { %"class.std::__1::__vector_base.90" }
%"class.std::__1::__vector_base.90" = type { float*, float*, %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { float* }
%class.sk_sp.96 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.50", [7 x i8] }>
%class.sk_sp.68 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.sk_sp.97 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.98 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.99 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.100 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.101 = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkPath*, %class.SkPath*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %class.SkPath* }
%"class.std::__1::vector.59" = type { %"class.std::__1::__vector_base.60" }
%"class.std::__1::__vector_base.60" = type { %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"*, %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.cc::PaintFlags"* }
%"class.gfx::ScopedCanvas" = type { i32 (...)**, %"class.gfx::Canvas"* }
%"class.gfx::ImageSkia" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.gfx::internal::ImageSkiaStorage"* }
%"class.gfx::internal::ImageSkiaStorage" = type opaque
%"class.gfx::(anonymous namespace)::VectorIconCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { i64 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"struct.gfx::IconDescription", %"class.gfx::ImageSkia" }
%"class.gfx::CanvasImageSource" = type { %"class.gfx::ImageSkiaSource", %"class.gfx::Size" }
%"class.gfx::ImageSkiaSource" = type { i32 (...)** }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.41 }
%union.anon.41 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.gfx::(anonymous namespace)::VectorIconSource" = type { %"class.gfx::CanvasImageSource", %"struct.gfx::IconDescription", %"class.std::__1::vector.123" }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"*, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.gfx::PathElement"* }
%"class.gfx::ImageSkiaRep" = type <{ %"class.cc::PaintImage", %class.sk_sp.69, i32, %"class.gfx::Size", [4 x i8], %class.SkBitmap, float, [4 x i8] }>

$_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2cc10PaintFlagsENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZN3gfx9kNoneIconE = hidden constant %"struct.gfx::VectorIcon" zeroinitializer, align 8
@_ZN3gfx12_GLOBAL__N_112g_icon_cacheE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZTVN3gfx12_GLOBAL__N_116VectorIconSourceE = internal unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gfx::(anonymous namespace)::VectorIconSource"*)* @_ZN3gfx12_GLOBAL__N_116VectorIconSourceD2Ev to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::VectorIconSource"*)* @_ZN3gfx12_GLOBAL__N_116VectorIconSourceD0Ev to i8*), i8* bitcast (void (%"class.gfx::ImageSkiaRep"*, %"class.gfx::CanvasImageSource"*, float)* @_ZN3gfx17CanvasImageSource16GetImageForScaleEf to i8*), i8* bitcast (i1 (%"class.gfx::(anonymous namespace)::VectorIconSource"*)* @_ZNK3gfx12_GLOBAL__N_116VectorIconSource28HasRepresentationAtAllScalesEv to i8*), i8* bitcast (void (%"class.gfx::(anonymous namespace)::VectorIconSource"*, %"class.gfx::Canvas"*)* @_ZN3gfx12_GLOBAL__N_116VectorIconSource4DrawEPNS_6CanvasE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [5 x i8] c"\0A ,f\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"NEW_PATH\00", align 1
@.str.5 = private unnamed_addr constant [17 x i8] c"PATH_COLOR_ALPHA\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"PATH_COLOR_ARGB\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"PATH_MODE_CLEAR\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"STROKE\00", align 1
@.str.9 = private unnamed_addr constant [11 x i8] c"CAP_SQUARE\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"MOVE_TO\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"R_MOVE_TO\00", align 1
@.str.12 = private unnamed_addr constant [7 x i8] c"ARC_TO\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"R_ARC_TO\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"LINE_TO\00", align 1
@.str.15 = private unnamed_addr constant [10 x i8] c"R_LINE_TO\00", align 1
@.str.16 = private unnamed_addr constant [10 x i8] c"H_LINE_TO\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"R_H_LINE_TO\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"V_LINE_TO\00", align 1
@.str.19 = private unnamed_addr constant [12 x i8] c"R_V_LINE_TO\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"CUBIC_TO\00", align 1
@.str.21 = private unnamed_addr constant [11 x i8] c"R_CUBIC_TO\00", align 1
@.str.22 = private unnamed_addr constant [19 x i8] c"CUBIC_TO_SHORTHAND\00", align 1
@.str.23 = private unnamed_addr constant [13 x i8] c"QUADRATIC_TO\00", align 1
@.str.24 = private unnamed_addr constant [15 x i8] c"R_QUADRATIC_TO\00", align 1
@.str.25 = private unnamed_addr constant [23 x i8] c"QUADRATIC_TO_SHORTHAND\00", align 1
@.str.26 = private unnamed_addr constant [25 x i8] c"R_QUADRATIC_TO_SHORTHAND\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"CIRCLE\00", align 1
@.str.28 = private unnamed_addr constant [5 x i8] c"OVAL\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"ROUND_RECT\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c"CLOSE\00", align 1
@.str.31 = private unnamed_addr constant [18 x i8] c"CANVAS_DIMENSIONS\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"CLIP\00", align 1
@.str.33 = private unnamed_addr constant [11 x i8] c"DISABLE_AA\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"FLIPS_IN_RTL\00", align 1
@switch.table._ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij = private unnamed_addr constant [31 x i64] [i64 1, i64 2, i64 5, i64 1, i64 2, i64 1, i64 3, i64 3, i64 8, i64 8, i64 3, i64 3, i64 2, i64 2, i64 2, i64 2, i64 7, i64 7, i64 5, i64 5, i64 5, i64 3, i64 3, i64 4, i64 5, i64 6, i64 1, i64 2, i64 5, i64 1, i64 1], align 8

@_ZN3gfx15IconDescriptionC1ERKS0_ = hidden unnamed_addr alias void (%"struct.gfx::IconDescription"*, %"struct.gfx::IconDescription"*), void (%"struct.gfx::IconDescription"*, %"struct.gfx::IconDescription"*)* @_ZN3gfx15IconDescriptionC2ERKS0_
@_ZN3gfx15IconDescriptionC1ERKNS_10VectorIconEijPS2_ = hidden unnamed_addr alias void (%"struct.gfx::IconDescription"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*), void (%"struct.gfx::IconDescription"*, %"struct.gfx::VectorIcon"*, i32, i32, %"struct.gfx::VectorIcon"*)* @_ZN3gfx15IconDescriptionC2ERKNS_10VectorIconEijPS2_
@_ZN3gfx15IconDescriptionD1Ev = hidden unnamed_addr alias void (%"struct.gfx::IconDescription"*), void (%"struct.gfx::IconDescription"*)* @_ZN3gfx15IconDescriptionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx15IconDescriptionC2ERKS0_(%"struct.gfx::IconDescription"* nocapture, %"struct.gfx::IconDescription"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.gfx::IconDescription"* %0 to i8*
  %4 = bitcast %"struct.gfx::IconDescription"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx15IconDescriptionC2ERKNS_10VectorIconEijPS2_(%"struct.gfx::IconDescription"* nocapture, %"struct.gfx::VectorIcon"* dereferenceable(24), i32, i32, %"struct.gfx::VectorIcon"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %0, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %6, align 8
  %7 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %0, i64 0, i32 2
  store i32 %3, i32* %8, align 4
  %9 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %0, i64 0, i32 3
  %10 = icmp eq %"struct.gfx::VectorIcon"* %4, null
  %11 = select i1 %10, %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"* %4
  store %"struct.gfx::VectorIcon"* %11, %"struct.gfx::VectorIcon"** %9, align 8
  %12 = icmp eq i32 %2, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  store i32 %14, i32* %7, align 8
  br label %15

15:                                               ; preds = %13, %5
  ret void
}

declare i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3gfx15IconDescriptionD2Ev(%"struct.gfx::IconDescription"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx15PaintVectorIconEPNS_6CanvasERKNS_10VectorIconEj(%"class.gfx::Canvas"*, %"struct.gfx::VectorIcon"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = sitofp i32 %4 to float
  %8 = fmul float %6, %7
  %9 = tail call float @llvm.ceil.f32(float %8) #13
  %10 = fcmp ult float %9, 0xC1E0000000000000
  %11 = fcmp ugt float %9, 0x41DFFFFFE0000000
  %12 = fcmp ogt float %9, 0xC1E0000000000000
  %13 = select i1 %12, float %9, float 0xC1E0000000000000
  %14 = fptosi float %13 to i32
  %15 = select i1 %10, i32 0, i32 2147483647
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %1, i64 0, i32 0
  %18 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %17, align 8
  %19 = icmp eq %"struct.gfx::VectorIconRep"* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %1, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %47, %20
  %25 = phi %"struct.gfx::VectorIconRep"* [ null, %20 ], [ %50, %47 ]
  %26 = phi i32 [ %23, %20 ], [ %27, %47 ]
  %27 = add i32 %26, -1
  %28 = icmp sgt i32 %27, -1
  br i1 %28, label %29, label %55

29:                                               ; preds = %24
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %18, i64 %30
  %32 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %31, i64 0, i32 0
  %33 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %32, align 8
  %34 = icmp eq %"struct.gfx::PathElement"* %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %33, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 27
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %33, i64 1, i32 0
  %41 = bitcast %union.anon* %40 to float*
  %42 = load float, float* %41, align 4
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %39, %35, %29
  %45 = phi i32 [ -1, %29 ], [ %43, %39 ], [ 48, %35 ]
  %46 = icmp eq i32 %45, %16
  br i1 %46, label %58, label %47

47:                                               ; preds = %44
  %48 = srem i32 %16, %45
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, %"struct.gfx::VectorIconRep"* %31, %"struct.gfx::VectorIconRep"* %25
  %51 = icmp sgt i32 %45, %16
  br i1 %51, label %52, label %24

52:                                               ; preds = %47
  %53 = icmp eq %"struct.gfx::VectorIconRep"* %50, null
  %54 = select i1 %53, %"struct.gfx::VectorIconRep"* %31, %"struct.gfx::VectorIconRep"* %50
  br label %58

55:                                               ; preds = %24
  %56 = icmp eq %"struct.gfx::VectorIconRep"* %25, null
  %57 = select i1 %56, %"struct.gfx::VectorIconRep"* %18, %"struct.gfx::VectorIconRep"* %25
  br label %58

58:                                               ; preds = %44, %3, %52, %55
  %59 = phi %"struct.gfx::VectorIconRep"* [ null, %3 ], [ %57, %55 ], [ %54, %52 ], [ %31, %44 ]
  %60 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %59, i64 0, i32 0
  %61 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %60, align 8
  %62 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %59, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"* %0, %"struct.gfx::PathElement"* %61, i64 %63, i32 %4, i32 %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx15PaintVectorIconEPNS_6CanvasERKNS_10VectorIconEij(%"class.gfx::Canvas"*, %"struct.gfx::VectorIcon"* nocapture readonly dereferenceable(24), i32, i32) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 1
  %6 = load float, float* %5, align 8
  %7 = sitofp i32 %2 to float
  %8 = fmul float %6, %7
  %9 = tail call float @llvm.ceil.f32(float %8) #13
  %10 = fcmp ult float %9, 0xC1E0000000000000
  %11 = fcmp ugt float %9, 0x41DFFFFFE0000000
  %12 = fcmp ogt float %9, 0xC1E0000000000000
  %13 = select i1 %12, float %9, float 0xC1E0000000000000
  %14 = fptosi float %13 to i32
  %15 = select i1 %10, i32 0, i32 2147483647
  %16 = select i1 %11, i32 %15, i32 %14
  %17 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %1, i64 0, i32 0
  %18 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %17, align 8
  %19 = icmp eq %"struct.gfx::VectorIconRep"* %18, null
  br i1 %19, label %58, label %20

20:                                               ; preds = %4
  %21 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %1, i64 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  br label %24

24:                                               ; preds = %47, %20
  %25 = phi %"struct.gfx::VectorIconRep"* [ null, %20 ], [ %50, %47 ]
  %26 = phi i32 [ %23, %20 ], [ %27, %47 ]
  %27 = add i32 %26, -1
  %28 = icmp sgt i32 %27, -1
  br i1 %28, label %29, label %55

29:                                               ; preds = %24
  %30 = sext i32 %27 to i64
  %31 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %18, i64 %30
  %32 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %31, i64 0, i32 0
  %33 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %32, align 8
  %34 = icmp eq %"struct.gfx::PathElement"* %33, null
  br i1 %34, label %44, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %33, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 27
  br i1 %38, label %39, label %44

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %33, i64 1, i32 0
  %41 = bitcast %union.anon* %40 to float*
  %42 = load float, float* %41, align 4
  %43 = fptosi float %42 to i32
  br label %44

44:                                               ; preds = %39, %35, %29
  %45 = phi i32 [ -1, %29 ], [ %43, %39 ], [ 48, %35 ]
  %46 = icmp eq i32 %45, %16
  br i1 %46, label %58, label %47

47:                                               ; preds = %44
  %48 = srem i32 %16, %45
  %49 = icmp eq i32 %48, 0
  %50 = select i1 %49, %"struct.gfx::VectorIconRep"* %31, %"struct.gfx::VectorIconRep"* %25
  %51 = icmp sgt i32 %45, %16
  br i1 %51, label %52, label %24

52:                                               ; preds = %47
  %53 = icmp eq %"struct.gfx::VectorIconRep"* %50, null
  %54 = select i1 %53, %"struct.gfx::VectorIconRep"* %31, %"struct.gfx::VectorIconRep"* %50
  br label %58

55:                                               ; preds = %24
  %56 = icmp eq %"struct.gfx::VectorIconRep"* %25, null
  %57 = select i1 %56, %"struct.gfx::VectorIconRep"* %18, %"struct.gfx::VectorIconRep"* %25
  br label %58

58:                                               ; preds = %44, %4, %52, %55
  %59 = phi %"struct.gfx::VectorIconRep"* [ null, %4 ], [ %57, %55 ], [ %54, %52 ], [ %31, %44 ]
  %60 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %59, i64 0, i32 0
  %61 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %60, align 8
  %62 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %59, i64 0, i32 1
  %63 = load i64, i64* %62, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"* %0, %"struct.gfx::PathElement"* %61, i64 %63, i32 %2, i32 %3)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"*, %"struct.gfx::PathElement"*, i64, i32, i32) unnamed_addr #4 {
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %"class.cc::PaintFlags", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca %"class.std::__1::vector.59", align 8
  %10 = alloca %struct.SkRect, align 8
  %11 = alloca %struct.SkPoint, align 4
  %12 = alloca %struct.SkPoint, align 4
  %13 = alloca %struct.SkPoint, align 4
  %14 = alloca { <2 x float>, <2 x float> }, align 8
  %15 = bitcast { <2 x float>, <2 x float> }* %14 to %struct.SkRect*
  %16 = alloca { <2 x float>, <2 x float> }, align 8
  %17 = bitcast { <2 x float>, <2 x float> }* %16 to %struct.SkRect*
  %18 = alloca %"class.gfx::ScopedCanvas", align 8
  %19 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  %20 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %23 = bitcast %"class.std::__1::vector.59"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #13
  %24 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %9, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %9, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #13
  %27 = bitcast %struct.SkRect* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 16, i1 false)
  %28 = icmp eq i64 %2, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %5
  %30 = bitcast %class.SkPath* %6 to i8*
  %31 = bitcast %class.SkPath** %21 to i64*
  %32 = bitcast %"class.cc::PaintFlags"* %7 to i8*
  %33 = bitcast %"class.cc::PaintFlags"** %25 to i64*
  %34 = bitcast %struct.SkRect* %10 to <2 x float>*
  %35 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %36 = bitcast float* %35 to <2 x float>*
  %37 = bitcast { <2 x float>, <2 x float> }* %16 to i8*
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 0
  %39 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %16, i64 0, i32 1
  %40 = bitcast { <2 x float>, <2 x float> }* %14 to i8*
  %41 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 0
  %42 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %14, i64 0, i32 1
  %43 = bitcast %struct.SkPoint* %13 to i8*
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 0
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  %46 = bitcast %struct.SkPoint* %12 to i8*
  %47 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 1
  %49 = bitcast %struct.SkPoint* %11 to i8*
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 0
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  br label %58

52:                                               ; preds = %532, %5
  %53 = phi i8 [ 0, %5 ], [ %524, %532 ]
  %54 = phi i32 [ 48, %5 ], [ %525, %532 ]
  %55 = bitcast %"class.gfx::ScopedCanvas"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #13
  %56 = bitcast %"class.gfx::ScopedCanvas"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 16, i1 false)
  call void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"* nonnull %18, %"class.gfx::Canvas"* %0) #13
  %57 = icmp eq i32 %54, %3
  br i1 %57, label %549, label %539

58:                                               ; preds = %536, %29
  %59 = phi %class.SkPath* [ null, %29 ], [ %538, %536 ]
  %60 = phi %class.SkPath* [ null, %29 ], [ %537, %536 ]
  %61 = phi i32 [ 48, %29 ], [ %525, %536 ]
  %62 = phi i8 [ 0, %29 ], [ %524, %536 ]
  %63 = phi i32 [ 0, %29 ], [ %66, %536 ]
  %64 = phi i64 [ 0, %29 ], [ %534, %536 ]
  %65 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq %class.SkPath* %60, %59
  %68 = icmp eq i32 %66, 0
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %106

70:                                               ; preds = %58
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #13
  call void @_ZN6SkPathC1Ev(%class.SkPath* nonnull %6) #13
  %71 = load %class.SkPath*, %class.SkPath** %21, align 8
  %72 = load %class.SkPath*, %class.SkPath** %22, align 8
  %73 = icmp ult %class.SkPath* %71, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  call void @_ZN6SkPathC1ERKS_(%class.SkPath* %71, %class.SkPath* nonnull dereferenceable(16) %6) #13
  %75 = getelementptr inbounds %class.SkPath, %class.SkPath* %71, i64 1
  %76 = ptrtoint %class.SkPath* %75 to i64
  store i64 %76, i64* %31, align 8
  br label %78

77:                                               ; preds = %70
  call void @_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"* nonnull %8, %class.SkPath* nonnull dereferenceable(16) %6) #13
  br label %78

78:                                               ; preds = %74, %77
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #13
  %79 = load %class.SkPath*, %class.SkPath** %21, align 8
  %80 = getelementptr inbounds %class.SkPath, %class.SkPath* %79, i64 -1, i32 4
  %81 = load i8, i8* %80, align 2
  %82 = and i8 %81, -4
  %83 = or i8 %82, 1
  store i8 %83, i8* %80, align 2
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %32) #13
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %7) #13
  %84 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  %85 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %26, align 8
  %86 = icmp ult %"class.cc::PaintFlags"* %84, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %78
  call void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"* %84, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7) #13
  %88 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %84, i64 1
  %89 = ptrtoint %"class.cc::PaintFlags"* %88 to i64
  store i64 %89, i64* %33, align 8
  br label %91

90:                                               ; preds = %78
  call void @_ZNSt3__16vectorIN2cc10PaintFlagsENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.59"* nonnull %9, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %7) #13
  br label %91

91:                                               ; preds = %87, %90
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %32) #13
  %92 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  %93 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %92, i64 -1, i32 6
  store i32 %4, i32* %93, align 8
  %94 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  %95 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %94, i64 -1, i32 10
  %96 = bitcast %union.anon.101* %95 to i16*
  %97 = load i16, i16* %96, align 8
  %98 = or i16 %97, 1
  store i16 %98, i16* %96, align 8
  %99 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  %100 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %99, i64 -1, i32 10
  %101 = bitcast %union.anon.101* %100 to i16*
  %102 = load i16, i16* %101, align 8
  %103 = and i16 %102, -13
  %104 = or i16 %103, 4
  store i16 %104, i16* %101, align 8
  %105 = load %class.SkPath*, %class.SkPath** %21, align 8
  br label %106

106:                                              ; preds = %58, %91
  %107 = phi %class.SkPath* [ %59, %58 ], [ %105, %91 ]
  %108 = getelementptr inbounds %class.SkPath, %class.SkPath* %107, i64 -1
  %109 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  switch i32 %66, label %523 [
    i32 30, label %522
    i32 1, label %110
    i32 2, label %126
    i32 3, label %174
    i32 4, label %176
    i32 5, label %187
    i32 6, label %193
    i32 7, label %203
    i32 8, label %217
    i32 9, label %217
    i32 10, label %255
    i32 11, label %265
    i32 12, label %275
    i32 13, label %283
    i32 14, label %289
    i32 15, label %297
    i32 16, label %303
    i32 17, label %329
    i32 18, label %355
    i32 21, label %355
    i32 22, label %355
    i32 19, label %418
    i32 20, label %436
    i32 24, label %454
    i32 23, label %466
    i32 25, label %480
    i32 26, label %495
    i32 27, label %497
    i32 28, label %507
    i32 29, label %517
  ]

110:                                              ; preds = %106
  %111 = add nuw i64 %64, 1
  %112 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %111, i32 0
  %113 = bitcast %union.anon* %112 to float*
  %114 = load float, float* %113, align 4
  %115 = call float @llvm.floor.f32(float %114)
  %116 = fcmp olt float %115, 0x41DFFFFFE0000000
  %117 = select i1 %116, float %115, float 0x41DFFFFFE0000000
  %118 = fcmp ogt float %117, 0xC1DFFFFFE0000000
  %119 = select i1 %118, float %117, float 0xC1DFFFFFE0000000
  %120 = fptosi float %119 to i32
  %121 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 6
  %122 = load i32, i32* %121, align 8
  %123 = shl i32 %120, 24
  %124 = and i32 %122, 16777215
  %125 = or i32 %124, %123
  store i32 %125, i32* %121, align 8
  br label %523

126:                                              ; preds = %106
  %127 = add nuw i64 %64, 1
  %128 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %127, i32 0
  %129 = bitcast %union.anon* %128 to float*
  %130 = load float, float* %129, align 4
  %131 = call float @llvm.floor.f32(float %130)
  %132 = fcmp olt float %131, 0x41DFFFFFE0000000
  %133 = select i1 %132, float %131, float 0x41DFFFFFE0000000
  %134 = fcmp ogt float %133, 0xC1DFFFFFE0000000
  %135 = select i1 %134, float %133, float 0xC1DFFFFFE0000000
  %136 = fptosi float %135 to i32
  %137 = add i64 %64, 2
  %138 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %137, i32 0
  %139 = bitcast %union.anon* %138 to float*
  %140 = load float, float* %139, align 4
  %141 = call float @llvm.floor.f32(float %140)
  %142 = fcmp olt float %141, 0x41DFFFFFE0000000
  %143 = select i1 %142, float %141, float 0x41DFFFFFE0000000
  %144 = fcmp ogt float %143, 0xC1DFFFFFE0000000
  %145 = select i1 %144, float %143, float 0xC1DFFFFFE0000000
  %146 = fptosi float %145 to i32
  %147 = add i64 %64, 3
  %148 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %147, i32 0
  %149 = bitcast %union.anon* %148 to float*
  %150 = load float, float* %149, align 4
  %151 = call float @llvm.floor.f32(float %150)
  %152 = fcmp olt float %151, 0x41DFFFFFE0000000
  %153 = select i1 %152, float %151, float 0x41DFFFFFE0000000
  %154 = fcmp ogt float %153, 0xC1DFFFFFE0000000
  %155 = select i1 %154, float %153, float 0xC1DFFFFFE0000000
  %156 = fptosi float %155 to i32
  %157 = add i64 %64, 4
  %158 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %157, i32 0
  %159 = bitcast %union.anon* %158 to float*
  %160 = load float, float* %159, align 4
  %161 = call float @llvm.floor.f32(float %160)
  %162 = fcmp olt float %161, 0x41DFFFFFE0000000
  %163 = select i1 %162, float %161, float 0x41DFFFFFE0000000
  %164 = fcmp ogt float %163, 0xC1DFFFFFE0000000
  %165 = select i1 %164, float %163, float 0xC1DFFFFFE0000000
  %166 = fptosi float %165 to i32
  %167 = shl i32 %136, 24
  %168 = shl i32 %146, 16
  %169 = or i32 %168, %167
  %170 = shl i32 %156, 8
  %171 = or i32 %169, %170
  %172 = or i32 %171, %166
  %173 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 6
  store i32 %172, i32* %173, align 8
  br label %523

174:                                              ; preds = %106
  %175 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 9
  store i32 0, i32* %175, align 4
  br label %523

176:                                              ; preds = %106
  %177 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 10
  %178 = bitcast %union.anon.101* %177 to i16*
  %179 = load i16, i16* %178, align 8
  %180 = and i16 %179, -193
  %181 = or i16 %180, 64
  store i16 %181, i16* %178, align 8
  %182 = add nuw i64 %64, 1
  %183 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %182, i32 0, i32 0
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 7
  %186 = bitcast float* %185 to i32*
  store i32 %184, i32* %186, align 4
  br label %523

187:                                              ; preds = %106
  %188 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 10
  %189 = bitcast %union.anon.101* %188 to i16*
  %190 = load i16, i16* %189, align 8
  %191 = and i16 %190, -13
  %192 = or i16 %191, 8
  store i16 %192, i16* %189, align 8
  br label %523

193:                                              ; preds = %106
  %194 = add nuw i64 %64, 1
  %195 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %194, i32 0
  %196 = bitcast %union.anon* %195 to float*
  %197 = load float, float* %196, align 4
  %198 = add i64 %64, 2
  %199 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %198, i32 0
  %200 = bitcast %union.anon* %199 to float*
  %201 = load float, float* %200, align 4
  %202 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath* %108, float %197, float %201) #13
  br label %523

203:                                              ; preds = %106
  %204 = icmp eq i32 %63, 26
  br i1 %204, label %205, label %207

205:                                              ; preds = %203
  %206 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath* %108, float 0.000000e+00, float 0.000000e+00) #13
  br label %207

207:                                              ; preds = %205, %203
  %208 = add nuw i64 %64, 1
  %209 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %208, i32 0
  %210 = bitcast %union.anon* %209 to float*
  %211 = load float, float* %210, align 4
  %212 = add i64 %64, 2
  %213 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %212, i32 0
  %214 = bitcast %union.anon* %213 to float*
  %215 = load float, float* %214, align 4
  %216 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rMoveToEff(%class.SkPath* %108, float %211, float %215) #13
  br label %523

217:                                              ; preds = %106, %106
  %218 = add nuw i64 %64, 1
  %219 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %218, i32 0
  %220 = bitcast %union.anon* %219 to float*
  %221 = load float, float* %220, align 4
  %222 = add i64 %64, 2
  %223 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %222, i32 0
  %224 = bitcast %union.anon* %223 to float*
  %225 = load float, float* %224, align 4
  %226 = add i64 %64, 3
  %227 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %226, i32 0
  %228 = bitcast %union.anon* %227 to float*
  %229 = load float, float* %228, align 4
  %230 = add i64 %64, 4
  %231 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %230, i32 0
  %232 = bitcast %union.anon* %231 to float*
  %233 = load float, float* %232, align 4
  %234 = add i64 %64, 5
  %235 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %234, i32 0
  %236 = bitcast %union.anon* %235 to float*
  %237 = load float, float* %236, align 4
  %238 = add i64 %64, 6
  %239 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %238, i32 0
  %240 = bitcast %union.anon* %239 to float*
  %241 = load float, float* %240, align 4
  %242 = add i64 %64, 7
  %243 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %242, i32 0
  %244 = bitcast %union.anon* %243 to float*
  %245 = load float, float* %244, align 4
  %246 = fcmp une float %233, 0.000000e+00
  %247 = zext i1 %246 to i32
  %248 = fcmp oeq float %237, 0.000000e+00
  %249 = zext i1 %248 to i32
  %250 = icmp eq i32 %66, 8
  br i1 %250, label %251, label %253

251:                                              ; preds = %217
  %252 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %108, float %221, float %225, float %229, i32 %247, i32 %249, float %241, float %245) #13
  br label %523

253:                                              ; preds = %217
  %254 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6rArcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath* %108, float %221, float %225, float %229, i32 %247, i32 %249, float %241, float %245) #13
  br label %523

255:                                              ; preds = %106
  %256 = add nuw i64 %64, 1
  %257 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %256, i32 0
  %258 = bitcast %union.anon* %257 to float*
  %259 = load float, float* %258, align 4
  %260 = add i64 %64, 2
  %261 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %260, i32 0
  %262 = bitcast %union.anon* %261 to float*
  %263 = load float, float* %262, align 4
  %264 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %108, float %259, float %263) #13
  br label %523

265:                                              ; preds = %106
  %266 = add nuw i64 %64, 1
  %267 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %266, i32 0
  %268 = bitcast %union.anon* %267 to float*
  %269 = load float, float* %268, align 4
  %270 = add i64 %64, 2
  %271 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %270, i32 0
  %272 = bitcast %union.anon* %271 to float*
  %273 = load float, float* %272, align 4
  %274 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath* %108, float %269, float %273) #13
  br label %523

275:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  store float 0xFFFFFFFFE0000000, float* %50, align 4
  store float 0xFFFFFFFFE0000000, float* %51, align 4
  %276 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %108, %struct.SkPoint* nonnull %11) #13
  %277 = add nuw i64 %64, 1
  %278 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %277, i32 0
  %279 = bitcast %union.anon* %278 to float*
  %280 = load float, float* %279, align 4
  %281 = load float, float* %51, align 4
  %282 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %108, float %280, float %281) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %523

283:                                              ; preds = %106
  %284 = add nuw i64 %64, 1
  %285 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %284, i32 0
  %286 = bitcast %union.anon* %285 to float*
  %287 = load float, float* %286, align 4
  %288 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath* %108, float %287, float 0.000000e+00) #13
  br label %523

289:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #13
  store float 0xFFFFFFFFE0000000, float* %47, align 4
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %290 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %108, %struct.SkPoint* nonnull %12) #13
  %291 = load float, float* %47, align 4
  %292 = add nuw i64 %64, 1
  %293 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %292, i32 0
  %294 = bitcast %union.anon* %293 to float*
  %295 = load float, float* %294, align 4
  %296 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %108, float %291, float %295) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #13
  br label %523

297:                                              ; preds = %106
  %298 = add nuw i64 %64, 1
  %299 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %298, i32 0
  %300 = bitcast %union.anon* %299 to float*
  %301 = load float, float* %300, align 4
  %302 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath* %108, float 0.000000e+00, float %301) #13
  br label %523

303:                                              ; preds = %106
  %304 = add nuw i64 %64, 1
  %305 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %304, i32 0
  %306 = bitcast %union.anon* %305 to float*
  %307 = load float, float* %306, align 4
  %308 = add i64 %64, 2
  %309 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %308, i32 0
  %310 = bitcast %union.anon* %309 to float*
  %311 = load float, float* %310, align 4
  %312 = add i64 %64, 3
  %313 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %312, i32 0
  %314 = bitcast %union.anon* %313 to float*
  %315 = load float, float* %314, align 4
  %316 = add i64 %64, 4
  %317 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %316, i32 0
  %318 = bitcast %union.anon* %317 to float*
  %319 = load float, float* %318, align 4
  %320 = add i64 %64, 5
  %321 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %320, i32 0
  %322 = bitcast %union.anon* %321 to float*
  %323 = load float, float* %322, align 4
  %324 = add i64 %64, 6
  %325 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %324, i32 0
  %326 = bitcast %union.anon* %325 to float*
  %327 = load float, float* %326, align 4
  %328 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %108, float %307, float %311, float %315, float %319, float %323, float %327) #13
  br label %523

329:                                              ; preds = %106
  %330 = add nuw i64 %64, 1
  %331 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %330, i32 0
  %332 = bitcast %union.anon* %331 to float*
  %333 = load float, float* %332, align 4
  %334 = add i64 %64, 2
  %335 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %334, i32 0
  %336 = bitcast %union.anon* %335 to float*
  %337 = load float, float* %336, align 4
  %338 = add i64 %64, 3
  %339 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %338, i32 0
  %340 = bitcast %union.anon* %339 to float*
  %341 = load float, float* %340, align 4
  %342 = add i64 %64, 4
  %343 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %342, i32 0
  %344 = bitcast %union.anon* %343 to float*
  %345 = load float, float* %344, align 4
  %346 = add i64 %64, 5
  %347 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %346, i32 0
  %348 = bitcast %union.anon* %347 to float*
  %349 = load float, float* %348, align 4
  %350 = add i64 %64, 6
  %351 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %350, i32 0
  %352 = bitcast %union.anon* %351 to float*
  %353 = load float, float* %352, align 4
  %354 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath8rCubicToEffffff(%class.SkPath* %108, float %333, float %337, float %341, float %345, float %349, float %353) #13
  br label %523

355:                                              ; preds = %106, %106, %106
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #13
  store float 0xFFFFFFFFE0000000, float* %44, align 4
  store float 0xFFFFFFFFE0000000, float* %45, align 4
  %356 = call zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath* %108, %struct.SkPoint* nonnull %13) #13
  %357 = add i32 %63, -16
  %358 = icmp ult i32 %357, 7
  br i1 %358, label %362, label %359

359:                                              ; preds = %355
  %360 = load float, float* %44, align 4
  %361 = load float, float* %45, align 4
  br label %372

362:                                              ; preds = %355
  %363 = call i32 @_ZNK6SkPath11countPointsEv(%class.SkPath* %108) #13
  %364 = add nsw i32 %363, -2
  %365 = call <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath* %108, i32 %364) #13
  %366 = load float, float* %44, align 4
  %367 = extractelement <2 x float> %365, i32 0
  %368 = fsub float %366, %367
  %369 = load float, float* %45, align 4
  %370 = extractelement <2 x float> %365, i32 1
  %371 = fsub float %369, %370
  br label %372

372:                                              ; preds = %359, %362
  %373 = phi float [ %369, %362 ], [ %361, %359 ]
  %374 = phi float [ %366, %362 ], [ %360, %359 ]
  %375 = phi float [ %368, %362 ], [ 0.000000e+00, %359 ]
  %376 = phi float [ %371, %362 ], [ 0.000000e+00, %359 ]
  %377 = fadd float %375, %374
  %378 = fadd float %376, %373
  switch i32 %66, label %417 [
    i32 18, label %379
    i32 21, label %397
    i32 22, label %407
  ]

379:                                              ; preds = %372
  %380 = add nuw i64 %64, 1
  %381 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %380, i32 0
  %382 = bitcast %union.anon* %381 to float*
  %383 = load float, float* %382, align 4
  %384 = add i64 %64, 2
  %385 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %384, i32 0
  %386 = bitcast %union.anon* %385 to float*
  %387 = load float, float* %386, align 4
  %388 = add i64 %64, 3
  %389 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %388, i32 0
  %390 = bitcast %union.anon* %389 to float*
  %391 = load float, float* %390, align 4
  %392 = add i64 %64, 4
  %393 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %392, i32 0
  %394 = bitcast %union.anon* %393 to float*
  %395 = load float, float* %394, align 4
  %396 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath* %108, float %377, float %378, float %383, float %387, float %391, float %395) #13
  br label %417

397:                                              ; preds = %372
  %398 = add nuw i64 %64, 1
  %399 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %398, i32 0
  %400 = bitcast %union.anon* %399 to float*
  %401 = load float, float* %400, align 4
  %402 = add i64 %64, 2
  %403 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %402, i32 0
  %404 = bitcast %union.anon* %403 to float*
  %405 = load float, float* %404, align 4
  %406 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %108, float %377, float %378, float %401, float %405) #13
  br label %417

407:                                              ; preds = %372
  %408 = add nuw i64 %64, 1
  %409 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %408, i32 0
  %410 = bitcast %union.anon* %409 to float*
  %411 = load float, float* %410, align 4
  %412 = add i64 %64, 2
  %413 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %412, i32 0
  %414 = bitcast %union.anon* %413 to float*
  %415 = load float, float* %414, align 4
  %416 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rQuadToEffff(%class.SkPath* %108, float %377, float %378, float %411, float %415) #13
  br label %417

417:                                              ; preds = %372, %397, %407, %379
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #13
  br label %523

418:                                              ; preds = %106
  %419 = add nuw i64 %64, 1
  %420 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %419, i32 0
  %421 = bitcast %union.anon* %420 to float*
  %422 = load float, float* %421, align 4
  %423 = add i64 %64, 2
  %424 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %423, i32 0
  %425 = bitcast %union.anon* %424 to float*
  %426 = load float, float* %425, align 4
  %427 = add i64 %64, 3
  %428 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %427, i32 0
  %429 = bitcast %union.anon* %428 to float*
  %430 = load float, float* %429, align 4
  %431 = add i64 %64, 4
  %432 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %431, i32 0
  %433 = bitcast %union.anon* %432 to float*
  %434 = load float, float* %433, align 4
  %435 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath* %108, float %422, float %426, float %430, float %434) #13
  br label %523

436:                                              ; preds = %106
  %437 = add nuw i64 %64, 1
  %438 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %437, i32 0
  %439 = bitcast %union.anon* %438 to float*
  %440 = load float, float* %439, align 4
  %441 = add i64 %64, 2
  %442 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %441, i32 0
  %443 = bitcast %union.anon* %442 to float*
  %444 = load float, float* %443, align 4
  %445 = add i64 %64, 3
  %446 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %445, i32 0
  %447 = bitcast %union.anon* %446 to float*
  %448 = load float, float* %447, align 4
  %449 = add i64 %64, 4
  %450 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %449, i32 0
  %451 = bitcast %union.anon* %450 to float*
  %452 = load float, float* %451, align 4
  %453 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7rQuadToEffff(%class.SkPath* %108, float %440, float %444, float %448, float %452) #13
  br label %523

454:                                              ; preds = %106
  %455 = add nuw i64 %64, 1
  %456 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %455, i32 0
  %457 = bitcast %union.anon* %456 to <2 x float>*
  %458 = load <2 x float>, <2 x float>* %457, align 4
  %459 = add i64 %64, 3
  %460 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %459, i32 0
  %461 = bitcast %union.anon* %460 to <2 x float>*
  %462 = load <2 x float>, <2 x float>* %461, align 4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #13
  %463 = fsub <2 x float> %458, %462
  %464 = fadd <2 x float> %458, %462
  store <2 x float> %463, <2 x float>* %41, align 8
  store <2 x float> %464, <2 x float>* %42, align 8
  %465 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirection(%class.SkPath* %108, %struct.SkRect* nonnull dereferenceable(16) %15, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #13
  br label %523

466:                                              ; preds = %106
  %467 = add nuw i64 %64, 1
  %468 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %467, i32 0
  %469 = bitcast %union.anon* %468 to float*
  %470 = load float, float* %469, align 4
  %471 = add i64 %64, 2
  %472 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %471, i32 0
  %473 = bitcast %union.anon* %472 to float*
  %474 = load float, float* %473, align 4
  %475 = add i64 %64, 3
  %476 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %475, i32 0
  %477 = bitcast %union.anon* %476 to float*
  %478 = load float, float* %477, align 4
  %479 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath* %108, float %470, float %474, float %478, i32 0) #13
  br label %523

480:                                              ; preds = %106
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #13
  %481 = add nuw i64 %64, 1
  %482 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %481, i32 0
  %483 = bitcast %union.anon* %482 to <2 x float>*
  %484 = load <2 x float>, <2 x float>* %483, align 4
  %485 = add i64 %64, 3
  %486 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %485, i32 0
  %487 = bitcast %union.anon* %486 to <2 x float>*
  %488 = load <2 x float>, <2 x float>* %487, align 4
  %489 = fadd <2 x float> %484, %488
  store <2 x float> %484, <2 x float>* %38, align 8
  store <2 x float> %489, <2 x float>* %39, align 8
  %490 = add i64 %64, 5
  %491 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %490, i32 0
  %492 = bitcast %union.anon* %491 to float*
  %493 = load float, float* %492, align 4
  %494 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectff15SkPathDirection(%class.SkPath* %108, %struct.SkRect* nonnull dereferenceable(16) %17, float %493, float %493, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #13
  br label %523

495:                                              ; preds = %106
  %496 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath* %108) #13
  br label %523

497:                                              ; preds = %106
  %498 = add nuw i64 %64, 1
  %499 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %498, i32 0
  %500 = bitcast %union.anon* %499 to float*
  %501 = load float, float* %500, align 4
  %502 = fcmp olt float %501, 0x41DFFFFFE0000000
  %503 = select i1 %502, float %501, float 0x41DFFFFFE0000000
  %504 = fcmp ogt float %503, 0xC1DFFFFFE0000000
  %505 = select i1 %504, float %503, float 0xC1DFFFFFE0000000
  %506 = fptosi float %505 to i32
  br label %523

507:                                              ; preds = %106
  %508 = add nuw i64 %64, 1
  %509 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %508, i32 0
  %510 = bitcast %union.anon* %509 to <2 x float>*
  %511 = load <2 x float>, <2 x float>* %510, align 4
  %512 = add i64 %64, 3
  %513 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %1, i64 %512, i32 0
  %514 = bitcast %union.anon* %513 to <2 x float>*
  %515 = load <2 x float>, <2 x float>* %514, align 4
  %516 = fadd <2 x float> %511, %515
  store <2 x float> %511, <2 x float>* %34, align 8
  store <2 x float> %516, <2 x float>* %36, align 8
  br label %523

517:                                              ; preds = %106
  %518 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %109, i64 -1, i32 10
  %519 = bitcast %union.anon.101* %518 to i16*
  %520 = load i16, i16* %519, align 8
  %521 = and i16 %520, -2
  store i16 %521, i16* %519, align 8
  br label %523

522:                                              ; preds = %106
  br label %523

523:                                              ; preds = %251, %253, %106, %522, %517, %507, %497, %495, %480, %466, %454, %436, %418, %417, %329, %303, %297, %289, %283, %275, %265, %255, %207, %193, %187, %176, %174, %126, %110
  %524 = phi i8 [ %62, %106 ], [ %62, %517 ], [ %62, %507 ], [ %62, %497 ], [ %62, %495 ], [ %62, %480 ], [ %62, %466 ], [ %62, %454 ], [ %62, %436 ], [ %62, %418 ], [ %62, %417 ], [ %62, %329 ], [ %62, %303 ], [ %62, %297 ], [ %62, %289 ], [ %62, %283 ], [ %62, %275 ], [ %62, %265 ], [ %62, %255 ], [ %62, %207 ], [ %62, %193 ], [ %62, %187 ], [ %62, %176 ], [ %62, %174 ], [ %62, %126 ], [ %62, %110 ], [ 1, %522 ], [ %62, %253 ], [ %62, %251 ]
  %525 = phi i32 [ %61, %106 ], [ %61, %517 ], [ %61, %507 ], [ %506, %497 ], [ %61, %495 ], [ %61, %480 ], [ %61, %466 ], [ %61, %454 ], [ %61, %436 ], [ %61, %418 ], [ %61, %417 ], [ %61, %329 ], [ %61, %303 ], [ %61, %297 ], [ %61, %289 ], [ %61, %283 ], [ %61, %275 ], [ %61, %265 ], [ %61, %255 ], [ %61, %207 ], [ %61, %193 ], [ %61, %187 ], [ %61, %176 ], [ %61, %174 ], [ %61, %126 ], [ %61, %110 ], [ %61, %522 ], [ %61, %253 ], [ %61, %251 ]
  %526 = load i32, i32* %65, align 4
  %527 = icmp ult i32 %526, 31
  br i1 %527, label %528, label %532

528:                                              ; preds = %523
  %529 = sext i32 %526 to i64
  %530 = getelementptr inbounds [31 x i64], [31 x i64]* @switch.table._ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij, i64 0, i64 %529
  %531 = load i64, i64* %530, align 8
  br label %532

532:                                              ; preds = %523, %528
  %533 = phi i64 [ %531, %528 ], [ 1, %523 ]
  %534 = add i64 %533, %64
  %535 = icmp ult i64 %534, %2
  br i1 %535, label %536, label %52

536:                                              ; preds = %532
  %537 = load %class.SkPath*, %class.SkPath** %20, align 8
  %538 = load %class.SkPath*, %class.SkPath** %21, align 8
  br label %58

539:                                              ; preds = %52
  %540 = sitofp i32 %3 to float
  %541 = sitofp i32 %54 to float
  %542 = fdiv float %540, %541
  %543 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %544 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %543, align 8
  %545 = bitcast %"class.cc::PaintCanvas"* %544 to void (%"class.cc::PaintCanvas"*, float, float)***
  %546 = load void (%"class.cc::PaintCanvas"*, float, float)**, void (%"class.cc::PaintCanvas"*, float, float)*** %545, align 8
  %547 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %546, i64 12
  %548 = load void (%"class.cc::PaintCanvas"*, float, float)*, void (%"class.cc::PaintCanvas"*, float, float)** %547, align 8
  call void %548(%"class.cc::PaintCanvas"* %544, float %542, float %542) #13
  br label %549

549:                                              ; preds = %52, %539
  %550 = and i8 %53, 1
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %553, label %552

552:                                              ; preds = %549
  call void @_ZN3gfx12ScopedCanvas9FlipIfRTLEi(%"class.gfx::ScopedCanvas"* nonnull %18, i32 %54) #13
  br label %553

553:                                              ; preds = %549, %552
  %554 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 0
  %555 = load float, float* %554, align 8
  %556 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 2
  %557 = load float, float* %556, align 8
  %558 = fcmp olt float %555, %557
  br i1 %558, label %559, label %572

559:                                              ; preds = %553
  %560 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 1
  %561 = load float, float* %560, align 4
  %562 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %10, i64 0, i32 3
  %563 = load float, float* %562, align 4
  %564 = fcmp uge float %561, %563
  br i1 %564, label %572, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %0, i64 0, i32 4
  %567 = load %"class.cc::PaintCanvas"*, %"class.cc::PaintCanvas"** %566, align 8
  %568 = bitcast %"class.cc::PaintCanvas"* %567 to void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)***
  %569 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)**, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*** %568, align 8
  %570 = getelementptr inbounds void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %569, i64 18
  %571 = load void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)*, void (%"class.cc::PaintCanvas"*, %struct.SkRect*, i32, i1)** %570, align 8
  call void %571(%"class.cc::PaintCanvas"* %567, %struct.SkRect* nonnull dereferenceable(16) %10, i32 1, i1 zeroext false) #13
  br label %572

572:                                              ; preds = %553, %565, %559
  %573 = bitcast %class.SkPath** %21 to i64*
  %574 = load i64, i64* %573, align 8
  %575 = bitcast %"class.std::__1::vector"* %8 to i64*
  %576 = load i64, i64* %575, align 8
  %577 = icmp eq i64 %574, %576
  br i1 %577, label %578, label %611

578:                                              ; preds = %611, %572
  call void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #13
  %579 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %24, align 8
  %580 = icmp eq %"class.cc::PaintFlags"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %578
  %582 = bitcast %"class.cc::PaintFlags"* %579 to i8*
  %583 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %25, align 8
  %584 = icmp eq %"class.cc::PaintFlags"* %583, %579
  br i1 %584, label %592, label %585

585:                                              ; preds = %581, %585
  %586 = phi %"class.cc::PaintFlags"* [ %587, %585 ], [ %583, %581 ]
  %587 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %586, i64 -1
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %587) #13
  %588 = icmp eq %"class.cc::PaintFlags"* %587, %579
  br i1 %588, label %589, label %585

589:                                              ; preds = %585
  %590 = bitcast %"class.std::__1::vector.59"* %9 to i8**
  %591 = load i8*, i8** %590, align 8
  br label %592

592:                                              ; preds = %589, %581
  %593 = phi i8* [ %591, %589 ], [ %582, %581 ]
  store %"class.cc::PaintFlags"* %579, %"class.cc::PaintFlags"** %25, align 8
  call void @_ZdlPv(i8* %593) #14
  br label %594

594:                                              ; preds = %578, %592
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #13
  %595 = load %class.SkPath*, %class.SkPath** %20, align 8
  %596 = icmp eq %class.SkPath* %595, null
  br i1 %596, label %610, label %597

597:                                              ; preds = %594
  %598 = bitcast %class.SkPath* %595 to i8*
  %599 = load %class.SkPath*, %class.SkPath** %21, align 8
  %600 = icmp eq %class.SkPath* %599, %595
  br i1 %600, label %608, label %601

601:                                              ; preds = %597, %601
  %602 = phi %class.SkPath* [ %603, %601 ], [ %599, %597 ]
  %603 = getelementptr inbounds %class.SkPath, %class.SkPath* %602, i64 -1
  call void @_ZN6SkPathD1Ev(%class.SkPath* %603) #13
  %604 = icmp eq %class.SkPath* %603, %595
  br i1 %604, label %605, label %601

605:                                              ; preds = %601
  %606 = bitcast %"class.std::__1::vector"* %8 to i8**
  %607 = load i8*, i8** %606, align 8
  br label %608

608:                                              ; preds = %605, %597
  %609 = phi i8* [ %607, %605 ], [ %598, %597 ]
  store %class.SkPath* %595, %class.SkPath** %21, align 8
  call void @_ZdlPv(i8* %609) #14
  br label %610

610:                                              ; preds = %594, %608
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  ret void

611:                                              ; preds = %572, %611
  %612 = phi i64 [ %620, %611 ], [ %576, %572 ]
  %613 = phi i64 [ %618, %611 ], [ 0, %572 ]
  %614 = inttoptr i64 %612 to %class.SkPath*
  %615 = getelementptr inbounds %class.SkPath, %class.SkPath* %614, i64 %613
  %616 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %24, align 8
  %617 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %616, i64 %613
  call void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %0, %class.SkPath* dereferenceable(16) %615, %"class.cc::PaintFlags"* dereferenceable(72) %617) #13
  %618 = add nuw i64 %613, 1
  %619 = load i64, i64* %573, align 8
  %620 = load i64, i64* %575, align 8
  %621 = sub i64 %619, %620
  %622 = ashr exact i64 %621, 4
  %623 = icmp ult i64 %618, %622
  br i1 %623, label %611, label %578
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16CreateVectorIconERKNS_15IconDescriptionE(%"class.gfx::ImageSkia"* noalias sret, %"struct.gfx::IconDescription"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.gfx::Size", align 4
  %4 = alloca %"class.gfx::ImageSkia", align 8
  %5 = alloca %"class.gfx::Size", align 4
  %6 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 0
  %7 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8
  %8 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %7, i64 0, i32 0
  %9 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %8, align 8
  %10 = icmp eq %"struct.gfx::VectorIconRep"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  tail call void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"* %0) #13
  br label %219

12:                                               ; preds = %2
  %13 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 0) acquire, align 8
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %20, label %15

15:                                               ; preds = %12
  %16 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 0)) #13
  br i1 %16, label %17, label %18

17:                                               ; preds = %15
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 1, i64 8), i8 0, i64 16, i1 false) #13
  store i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 1, i64 8), i8** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 1, i64 0) to i8**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* nonnull @_ZN4base12LazyInstanceIN3gfx12_GLOBAL__N_115VectorIconCacheENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv, i8* bitcast (%"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE to i8*)) #13
  br label %20

18:                                               ; preds = %15
  %19 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 0) acquire, align 8
  br label %20

20:                                               ; preds = %12, %17, %18
  %21 = phi i64 [ %13, %12 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN3gfx12_GLOBAL__N_112g_icon_cacheE, i64 0, i32 1, i64 0) to i64), %17 ], [ %19, %18 ]
  %22 = inttoptr i64 %21 to %"class.gfx::(anonymous namespace)::VectorIconCache"*
  %23 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_end_node"* %23 to %"class.std::__1::__tree_node"**
  %25 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8, !noalias !2
  %26 = icmp eq %"class.std::__1::__tree_node"* %25, null
  br i1 %26, label %27, label %30

27:                                               ; preds = %20
  %28 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 1
  %29 = load i32, i32* %28, align 8, !noalias !2
  br label %106

30:                                               ; preds = %20
  %31 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8, !noalias !2
  %32 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 3
  %33 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %32, align 8, !noalias !2
  %34 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 1
  %35 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 2
  %36 = load i32, i32* %34, align 4, !noalias !2
  %37 = load i32, i32* %35, align 4, !noalias !2
  br label %38

38:                                               ; preds = %70, %30
  %39 = phi %"class.std::__1::__tree_end_node"* [ %23, %30 ], [ %72, %70 ]
  %40 = phi %"class.std::__1::__tree_node"* [ %25, %30 ], [ %73, %70 ]
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0, i32 0
  %42 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %41, align 8
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0, i32 3
  %44 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %43, align 8
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 1, i32 0, i32 0, i32 2
  %47 = icmp ult %"struct.gfx::VectorIcon"* %42, %31
  br i1 %47, label %58, label %48

48:                                               ; preds = %38
  %49 = icmp ult %"struct.gfx::VectorIcon"* %31, %42
  br i1 %49, label %67, label %50

50:                                               ; preds = %48
  %51 = load i32, i32* %45, align 4
  %52 = icmp slt i32 %51, %36
  br i1 %52, label %58, label %53

53:                                               ; preds = %50
  %54 = icmp slt i32 %36, %51
  br i1 %54, label %67, label %55

55:                                               ; preds = %53
  %56 = load i32, i32* %46, align 4
  %57 = icmp ult i32 %56, %37
  br i1 %57, label %58, label %61

58:                                               ; preds = %55, %50, %38
  %59 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::__tree_node_base"** %59 to %"class.std::__1::__tree_node"**
  br label %70

61:                                               ; preds = %55
  %62 = icmp uge i32 %37, %56
  %63 = icmp ult %"struct.gfx::VectorIcon"* %44, %33
  %64 = and i1 %63, %62
  %65 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 1
  %66 = bitcast %"class.std::__1::__tree_node_base"** %65 to %"class.std::__1::__tree_node"**
  br i1 %64, label %70, label %67

67:                                               ; preds = %61, %53, %48
  %68 = bitcast %"class.std::__1::__tree_node"* %40 to %"class.std::__1::__tree_node"**
  %69 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %40, i64 0, i32 0, i32 0
  br label %70

70:                                               ; preds = %67, %61, %58
  %71 = phi %"class.std::__1::__tree_node"** [ %68, %67 ], [ %60, %58 ], [ %66, %61 ]
  %72 = phi %"class.std::__1::__tree_end_node"* [ %69, %67 ], [ %39, %58 ], [ %39, %61 ]
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %71, align 8
  %74 = icmp eq %"class.std::__1::__tree_node"* %73, null
  br i1 %74, label %75, label %38

75:                                               ; preds = %70
  %76 = icmp eq %"class.std::__1::__tree_end_node"* %72, %23
  br i1 %76, label %106, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 4
  %79 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"struct.std::__1::__value_type"*
  %80 = bitcast %"class.std::__1::__tree_end_node"* %78 to %"struct.gfx::VectorIcon"**
  %81 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %80, align 8
  %82 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 6
  %83 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"struct.gfx::VectorIcon"**
  %84 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %83, align 8
  %85 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 5
  %86 = bitcast %"class.std::__1::__tree_end_node"* %85 to i32*
  %87 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %79, i64 0, i32 0, i32 0, i32 2
  %88 = icmp ult %"struct.gfx::VectorIcon"* %31, %81
  br i1 %88, label %106, label %89

89:                                               ; preds = %77
  %90 = icmp ult %"struct.gfx::VectorIcon"* %81, %31
  br i1 %90, label %103, label %91

91:                                               ; preds = %89
  %92 = load i32, i32* %86, align 4
  %93 = icmp slt i32 %36, %92
  br i1 %93, label %106, label %94

94:                                               ; preds = %91
  %95 = icmp slt i32 %92, %36
  br i1 %95, label %103, label %96

96:                                               ; preds = %94
  %97 = load i32, i32* %87, align 4
  %98 = icmp ult i32 %37, %97
  br i1 %98, label %106, label %99

99:                                               ; preds = %96
  %100 = icmp ult i32 %97, %37
  %101 = icmp uge %"struct.gfx::VectorIcon"* %33, %84
  %102 = or i1 %101, %100
  br i1 %102, label %103, label %106

103:                                              ; preds = %99, %94, %89
  %104 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %72, i64 7
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.gfx::ImageSkia"*
  tail call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %0, %"class.gfx::ImageSkia"* dereferenceable(8) %105) #13
  br label %219

106:                                              ; preds = %99, %96, %91, %77, %75, %27
  %107 = phi i32 [ %29, %27 ], [ %36, %99 ], [ %36, %96 ], [ %36, %91 ], [ %36, %77 ], [ %36, %75 ]
  %108 = bitcast %"class.gfx::ImageSkia"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #13, !noalias !2
  %109 = getelementptr inbounds %"class.gfx::ImageSkia", %"class.gfx::ImageSkia"* %4, i64 0, i32 0, i32 0
  store %"class.gfx::internal::ImageSkiaStorage"* inttoptr (i64 -6148914691236517206 to %"class.gfx::internal::ImageSkiaStorage"*), %"class.gfx::internal::ImageSkiaStorage"** %109, align 8, !noalias !2
  %110 = tail call i8* @_Znwm(i64 64) #14
  %111 = bitcast i8* %110 to %"class.gfx::CanvasImageSource"*
  %112 = bitcast %"class.gfx::Size"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #13, !noalias !2
  %113 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 1
  %114 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %115 = icmp sgt i32 %107, 0
  %116 = select i1 %115, i32 %107, i32 0
  store i32 %116, i32* %114, align 4, !noalias !2
  %117 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  store i32 %116, i32* %117, align 4, !noalias !2
  call void @_ZN3gfx17CanvasImageSourceC2ERKNS_4SizeE(%"class.gfx::CanvasImageSource"* nonnull %111, %"class.gfx::Size"* nonnull dereferenceable(8) %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #13, !noalias !2
  %118 = bitcast i8* %110 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_116VectorIconSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %118, align 8, !noalias !2
  %119 = getelementptr inbounds i8, i8* %110, i64 16
  %120 = bitcast %"struct.gfx::IconDescription"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %119, i8* align 8 %120, i64 24, i1 false) #13, !noalias !2
  %121 = getelementptr inbounds i8, i8* %110, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %121, i8 0, i64 24, i1 false) #13, !noalias !2
  %122 = bitcast %"class.gfx::Size"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #13, !noalias !2
  %123 = load i32, i32* %113, align 8, !noalias !2
  %124 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 0
  %125 = icmp sgt i32 %123, 0
  %126 = select i1 %125, i32 %123, i32 0
  store i32 %126, i32* %124, align 4, !noalias !2
  %127 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %5, i64 0, i32 1
  store i32 %126, i32* %127, align 4, !noalias !2
  %128 = bitcast i8* %110 to %"class.gfx::ImageSkiaSource"*
  call void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"* nonnull %4, %"class.gfx::ImageSkiaSource"* nonnull %128, %"class.gfx::Size"* nonnull dereferenceable(8) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #13, !noalias !2
  %129 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8, !noalias !2
  %130 = icmp eq %"class.std::__1::__tree_node"* %129, null
  br i1 %130, label %185, label %131

131:                                              ; preds = %106
  %132 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %133 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %6, align 8, !noalias !2
  %134 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 3
  %135 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %134, align 8, !noalias !2
  %136 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %1, i64 0, i32 2
  %137 = load i32, i32* %113, align 4, !noalias !2
  %138 = load i32, i32* %136, align 4, !noalias !2
  br label %139

139:                                              ; preds = %181, %131
  %140 = phi %"class.std::__1::__tree_node"* [ %184, %181 ], [ %129, %131 ]
  %141 = phi %"class.std::__1::__tree_node_base"** [ %183, %181 ], [ %132, %131 ]
  %142 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0, i32 0
  %143 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %142, align 8
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0, i32 3
  %145 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %144, align 8
  %146 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0, i32 1
  %147 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0, i32 2
  %148 = icmp ult %"struct.gfx::VectorIcon"* %133, %143
  br i1 %148, label %163, label %149

149:                                              ; preds = %139
  %150 = icmp ult %"struct.gfx::VectorIcon"* %143, %133
  br i1 %150, label %173, label %151

151:                                              ; preds = %149
  %152 = load i32, i32* %146, align 4
  %153 = icmp slt i32 %137, %152
  br i1 %153, label %163, label %154

154:                                              ; preds = %151
  %155 = icmp slt i32 %152, %137
  br i1 %155, label %173, label %156

156:                                              ; preds = %154
  %157 = load i32, i32* %147, align 4
  %158 = icmp ult i32 %138, %157
  br i1 %158, label %163, label %159

159:                                              ; preds = %156
  %160 = icmp uge i32 %157, %138
  %161 = icmp ult %"struct.gfx::VectorIcon"* %135, %145
  %162 = and i1 %161, %160
  br i1 %162, label %163, label %169

163:                                              ; preds = %159, %156, %151, %139
  %164 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %164, align 8
  %166 = icmp eq %"class.std::__1::__tree_node_base"* %165, null
  br i1 %166, label %167, label %181

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %187

169:                                              ; preds = %159
  %170 = icmp ult i32 %157, %138
  %171 = icmp ult %"struct.gfx::VectorIcon"* %145, %135
  %172 = or i1 %171, %170
  br i1 %172, label %173, label %179

173:                                              ; preds = %169, %154, %149
  %174 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %177, label %181

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %187

179:                                              ; preds = %169
  %180 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 0, i32 0
  br label %187

181:                                              ; preds = %173, %163
  %182 = phi %"class.std::__1::__tree_node_base"* [ %165, %163 ], [ %175, %173 ]
  %183 = phi %"class.std::__1::__tree_node_base"** [ %164, %163 ], [ %174, %173 ]
  %184 = bitcast %"class.std::__1::__tree_node_base"* %182 to %"class.std::__1::__tree_node"*
  br label %139

185:                                              ; preds = %106
  %186 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %23, i64 0, i32 0
  br label %187

187:                                              ; preds = %185, %179, %177, %167
  %188 = phi %"class.std::__1::__tree_end_node"* [ %23, %185 ], [ %168, %167 ], [ %178, %177 ], [ %180, %179 ]
  %189 = phi %"class.std::__1::__tree_node_base"** [ %186, %185 ], [ %164, %167 ], [ %174, %177 ], [ %141, %179 ]
  %190 = bitcast %"class.std::__1::__tree_node_base"** %189 to %"class.std::__1::__tree_node"**
  %191 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %190, align 8
  %192 = icmp eq %"class.std::__1::__tree_node"* %191, null
  br i1 %192, label %193, label %218

193:                                              ; preds = %187
  %194 = call i8* @_Znwm(i64 64) #14, !noalias !5
  %195 = getelementptr inbounds i8, i8* %194, i64 32
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %195, i8* align 8 %120, i64 24, i1 false) #13, !noalias !8
  %196 = getelementptr inbounds i8, i8* %194, i64 56
  %197 = bitcast i8* %196 to %"class.gfx::ImageSkia"*
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %197, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #13, !noalias !5
  %198 = bitcast i8* %194 to %"class.std::__1::__tree_node_base"*
  %199 = getelementptr inbounds i8, i8* %194, i64 16
  %200 = bitcast i8* %199 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %194, i8 0, i64 16, i1 false) #13, !noalias !2
  store %"class.std::__1::__tree_end_node"* %188, %"class.std::__1::__tree_end_node"** %200, align 8, !noalias !2
  %201 = bitcast %"class.std::__1::__tree_node_base"** %189 to i8**
  store i8* %194, i8** %201, align 8
  %202 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %22, i64 0, i32 0, i32 0, i32 0
  %203 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %202, align 8, !noalias !2
  %204 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %203, i64 0, i32 0
  %205 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %204, align 8
  %206 = icmp eq %"class.std::__1::__tree_node_base"* %205, null
  br i1 %206, label %211, label %207

207:                                              ; preds = %193
  %208 = ptrtoint %"class.std::__1::__tree_node_base"* %205 to i64
  %209 = inttoptr i64 %21 to i64*
  store i64 %208, i64* %209, align 8, !noalias !2
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %189, align 8
  br label %211

211:                                              ; preds = %207, %193
  %212 = phi %"class.std::__1::__tree_node_base"* [ %198, %193 ], [ %210, %207 ]
  %213 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %22, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %214 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %213, align 8, !noalias !2
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %214, %"class.std::__1::__tree_node_base"* %212) #13
  %215 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %22, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %216 = load i64, i64* %215, align 8, !noalias !2
  %217 = add i64 %216, 1
  store i64 %217, i64* %215, align 8, !noalias !2
  br label %218

218:                                              ; preds = %211, %187
  call void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"* %0, %"class.gfx::ImageSkia"* nonnull dereferenceable(8) %4) #13
  call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #13, !noalias !2
  br label %219

219:                                              ; preds = %218, %103, %11
  ret void
}

declare void @_ZN3gfx9ImageSkiaC1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEj(%"class.gfx::ImageSkia"* noalias sret, %"struct.gfx::VectorIcon"* dereferenceable(24), i32) local_unnamed_addr #0 {
  %4 = alloca %"struct.gfx::IconDescription", align 8
  %5 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  %6 = bitcast %"struct.gfx::IconDescription"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13, !noalias !9
  %7 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %4, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %7, align 8, !noalias !9
  %8 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %4, i64 0, i32 1
  store i32 %5, i32* %8, align 8, !noalias !9
  %9 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %4, i64 0, i32 2
  store i32 %2, i32* %9, align 4, !noalias !9
  %10 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %4, i64 0, i32 3
  store %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"** %10, align 8, !noalias !9
  %11 = icmp eq i32 %5, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  store i32 %13, i32* %8, align 8, !noalias !9
  br label %14

14:                                               ; preds = %3, %12
  call void @_ZN3gfx16CreateVectorIconERKNS_15IconDescriptionE(%"class.gfx::ImageSkia"* sret %0, %"struct.gfx::IconDescription"* nonnull dereferenceable(24) %4) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13, !noalias !9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij(%"class.gfx::ImageSkia"* noalias sret, %"struct.gfx::VectorIcon"* dereferenceable(24), i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"struct.gfx::IconDescription", align 8
  %6 = bitcast %"struct.gfx::IconDescription"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %5, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %7, align 8
  %8 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %5, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %5, i64 0, i32 2
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %5, i64 0, i32 3
  store %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"** %10, align 8
  %11 = icmp eq i32 %2, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %4
  %13 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  store i32 %13, i32* %8, align 8
  br label %14

14:                                               ; preds = %4, %12
  call void @_ZN3gfx16CreateVectorIconERKNS_15IconDescriptionE(%"class.gfx::ImageSkia"* sret %0, %"struct.gfx::IconDescription"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx25CreateVectorIconWithBadgeERKNS_10VectorIconEijS2_(%"class.gfx::ImageSkia"* noalias sret, %"struct.gfx::VectorIcon"* dereferenceable(24), i32, i32, %"struct.gfx::VectorIcon"* dereferenceable(24)) local_unnamed_addr #0 {
  %6 = alloca %"struct.gfx::IconDescription", align 8
  %7 = bitcast %"struct.gfx::IconDescription"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #13
  %8 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %6, i64 0, i32 0
  store %"struct.gfx::VectorIcon"* %1, %"struct.gfx::VectorIcon"** %8, align 8
  %9 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %6, i64 0, i32 1
  store i32 %2, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %6, i64 0, i32 2
  store i32 %3, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.gfx::IconDescription", %"struct.gfx::IconDescription"* %6, i64 0, i32 3
  %12 = icmp eq %"struct.gfx::VectorIcon"* %4, null
  %13 = select i1 %12, %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"* %4
  store %"struct.gfx::VectorIcon"* %13, %"struct.gfx::VectorIcon"** %11, align 8
  %14 = icmp eq i32 %2, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = tail call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* dereferenceable(24) %1) #13
  store i32 %16, i32* %9, align 8
  br label %17

17:                                               ; preds = %5, %15
  call void @_ZN3gfx16CreateVectorIconERKNS_15IconDescriptionE(%"class.gfx::ImageSkia"* sret %0, %"struct.gfx::IconDescription"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gfx26CreateVectorIconFromSourceERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEij(%"class.gfx::ImageSkia"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24), i32, i32) local_unnamed_addr #0 {
  %5 = alloca %"class.std::__1::vector.155", align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.gfx::Size", align 4
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"class.gfx::Size"*
  %11 = tail call i8* @_Znwm(i64 64) #14, !noalias !12
  %12 = bitcast i8* %11 to %"class.gfx::CanvasImageSource"*
  %13 = bitcast %"class.gfx::Size"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13, !noalias !12
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 0
  %15 = icmp sgt i32 %2, 0
  %16 = select i1 %15, i32 %2, i32 0
  store i32 %16, i32* %14, align 4, !noalias !12
  %17 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %8, i64 0, i32 1
  store i32 %16, i32* %17, align 4, !noalias !12
  call void @_ZN3gfx17CanvasImageSourceC2ERKNS_4SizeE(%"class.gfx::CanvasImageSource"* nonnull %12, %"class.gfx::Size"* nonnull dereferenceable(8) %8) #13, !noalias !12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13, !noalias !12
  %18 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_116VectorIconSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8, !noalias !12
  %19 = getelementptr inbounds i8, i8* %11, i64 16
  %20 = bitcast i8* %19 to %"struct.gfx::VectorIcon"**
  store %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"** %20, align 8, !noalias !12
  %21 = getelementptr inbounds i8, i8* %11, i64 24
  %22 = bitcast i8* %21 to i32*
  store i32 %2, i32* %22, align 8, !noalias !12
  %23 = getelementptr inbounds i8, i8* %11, i64 28
  %24 = bitcast i8* %23 to i32*
  store i32 %3, i32* %24, align 4, !noalias !12
  %25 = getelementptr inbounds i8, i8* %11, i64 32
  %26 = bitcast i8* %25 to %"struct.gfx::VectorIcon"**
  store %"struct.gfx::VectorIcon"* @_ZN3gfx9kNoneIconE, %"struct.gfx::VectorIcon"** %26, align 8, !noalias !12
  %27 = icmp eq i32 %2, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %4
  %29 = call i32 @_ZN3gfx26GetDefaultSizeOfVectorIconERKNS_10VectorIconE(%"struct.gfx::VectorIcon"* nonnull dereferenceable(24) @_ZN3gfx9kNoneIconE) #13
  store i32 %29, i32* %22, align 8, !noalias !12
  br label %30

30:                                               ; preds = %28, %4
  %31 = getelementptr inbounds i8, i8* %11, i64 40
  %32 = getelementptr inbounds i8, i8* %11, i64 48
  %33 = bitcast i8* %32 to %"struct.gfx::PathElement"**
  %34 = getelementptr inbounds i8, i8* %11, i64 56
  %35 = bitcast i8* %34 to %"struct.gfx::PathElement"**
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #13, !alias.scope !15, !noalias !12
  %36 = bitcast %"class.std::__1::vector.155"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #13, !noalias !18
  %37 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %5, i64 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.std::__1::vector.155", %"class.std::__1::vector.155"* %5, i64 0, i32 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 24, i1 false) #13, !noalias !18
  %41 = load i8, i8* %40, align 1, !noalias !18
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8, !noalias !18
  %45 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %46 = select i1 %42, i8* %44, i8* %45
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8, !noalias !18
  %49 = zext i8 %41 to i64
  %50 = select i1 %42, i64 %48, i64 %49
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.155"* nonnull sret %5, i8* %46, i64 %50, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4, i32 1, i32 1) #13, !noalias !18
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8, !noalias !18
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8, !noalias !18
  %53 = icmp eq %"class.std::__1::basic_string"* %51, %52
  br i1 %53, label %62, label %54

54:                                               ; preds = %30
  %55 = bitcast double* %6 to i8*
  %56 = bitcast i32* %7 to i8*
  %57 = bitcast i8* %32 to i64*
  %58 = bitcast i8* %31 to i64*
  %59 = bitcast i8* %34 to i64*
  br label %86

60:                                               ; preds = %705
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %37, align 8, !noalias !18
  br label %62

62:                                               ; preds = %60, %30
  %63 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %51, %30 ]
  %64 = icmp eq %"class.std::__1::basic_string"* %63, null
  br i1 %64, label %708, label %65

65:                                               ; preds = %62
  %66 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %67 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %38, align 8, !noalias !18
  %68 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %68, label %84, label %69

69:                                               ; preds = %65, %79
  %70 = phi %"class.std::__1::basic_string"* [ %71, %79 ], [ %67, %65 ]
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %70, i64 -1
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #14
  br label %79

79:                                               ; preds = %76, %69
  %80 = icmp eq %"class.std::__1::basic_string"* %71, %63
  br i1 %80, label %81, label %69

81:                                               ; preds = %79
  %82 = bitcast %"class.std::__1::vector.155"* %5 to i8**
  %83 = load i8*, i8** %82, align 8, !noalias !18
  br label %84

84:                                               ; preds = %81, %65
  %85 = phi i8* [ %83, %81 ], [ %66, %65 ]
  store %"class.std::__1::basic_string"* %63, %"class.std::__1::basic_string"** %38, align 8, !noalias !18
  call void @_ZdlPv(i8* %85) #14
  br label %708

86:                                               ; preds = %705, %54
  %87 = phi %"class.std::__1::basic_string"* [ %51, %54 ], [ %706, %705 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #13, !noalias !18
  store double 0.000000e+00, double* %6, align 8, !noalias !18
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #13, !noalias !18
  store i32 0, i32* %7, align 4, !noalias !18
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1, !noalias !15
  %91 = icmp slt i8 %90, 0
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8, !noalias !15
  %94 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  %95 = select i1 %91, i8* %93, i8* %94
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8, !noalias !15
  %98 = zext i8 %90 to i64
  %99 = select i1 %91, i64 %97, i64 %98
  %100 = call zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8* %95, i64 %99, double* nonnull %6) #13, !noalias !15
  br i1 %100, label %101, label %156

101:                                              ; preds = %86
  %102 = load double, double* %6, align 8, !noalias !18
  %103 = fptrunc double %102 to float
  %104 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %33, align 8, !alias.scope !15, !noalias !12
  %105 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %35, align 8, !alias.scope !15, !noalias !12
  %106 = icmp ult %"struct.gfx::PathElement"* %104, %105
  %107 = ptrtoint %"struct.gfx::PathElement"* %105 to i64
  br i1 %106, label %108, label %112

108:                                              ; preds = %101
  %109 = bitcast %"struct.gfx::PathElement"* %104 to float*
  store float %103, float* %109, align 4
  %110 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %104, i64 1
  %111 = ptrtoint %"struct.gfx::PathElement"* %110 to i64
  store i64 %111, i64* %57, align 8, !alias.scope !15, !noalias !12
  br label %705

112:                                              ; preds = %101
  %113 = ptrtoint %"struct.gfx::PathElement"* %104 to i64
  %114 = load i64, i64* %58, align 8, !alias.scope !15, !noalias !12
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 2
  %117 = add nsw i64 %116, 1
  %118 = icmp ugt i64 %117, 4611686018427387903
  br i1 %118, label %119, label %121

119:                                              ; preds = %112
  %120 = bitcast i8* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %120) #15
  unreachable

121:                                              ; preds = %112
  %122 = sub i64 %107, %114
  %123 = ashr exact i64 %122, 2
  %124 = icmp ult i64 %123, 2305843009213693951
  br i1 %124, label %125, label %133

125:                                              ; preds = %121
  %126 = ashr exact i64 %122, 1
  %127 = icmp ult i64 %126, %117
  %128 = select i1 %127, i64 %117, i64 %126
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %138, label %130

130:                                              ; preds = %125
  %131 = icmp ugt i64 %128, 4611686018427387903
  br i1 %131, label %132, label %133

132:                                              ; preds = %130
  call void @abort() #15
  unreachable

133:                                              ; preds = %130, %121
  %134 = phi i64 [ %128, %130 ], [ 4611686018427387903, %121 ]
  %135 = shl i64 %134, 2
  %136 = call i8* @_Znwm(i64 %135) #14
  %137 = bitcast i8* %136 to %"struct.gfx::PathElement"*
  br label %138

138:                                              ; preds = %133, %125
  %139 = phi i64 [ %134, %133 ], [ 0, %125 ]
  %140 = phi i8* [ %136, %133 ], [ null, %125 ]
  %141 = phi %"struct.gfx::PathElement"* [ %137, %133 ], [ null, %125 ]
  %142 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %141, i64 %116
  %143 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %141, i64 %139
  %144 = ptrtoint %"struct.gfx::PathElement"* %143 to i64
  %145 = bitcast %"struct.gfx::PathElement"* %142 to float*
  store float %103, float* %145, align 4, !noalias !18
  %146 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %142, i64 1
  %147 = ptrtoint %"struct.gfx::PathElement"* %146 to i64
  %148 = ptrtoint %"struct.gfx::PathElement"* %141 to i64
  %149 = icmp sgt i64 %115, 0
  br i1 %149, label %150, label %152

150:                                              ; preds = %138
  %151 = inttoptr i64 %114 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %151, i64 %115, i1 false) #13
  br label %152

152:                                              ; preds = %150, %138
  store i64 %148, i64* %58, align 8, !alias.scope !15, !noalias !12
  store i64 %147, i64* %57, align 8, !alias.scope !15, !noalias !12
  store i64 %144, i64* %59, align 8, !alias.scope !15, !noalias !12
  %153 = icmp eq i64 %114, 0
  br i1 %153, label %705, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %114 to i8*
  call void @_ZdlPv(i8* %155) #14
  br label %705

156:                                              ; preds = %86
  %157 = load i8, i8* %89, align 1
  %158 = icmp slt i8 %157, 0
  %159 = load i8*, i8** %92, align 8
  %160 = select i1 %158, i8* %159, i8* %94
  %161 = load i64, i64* %96, align 8
  %162 = zext i8 %157 to i64
  %163 = select i1 %158, i64 %161, i64 %162
  %164 = call zeroext i1 @_ZN4base14HexStringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8* %160, i64 %163, i32* nonnull %7) #13
  br i1 %164, label %165, label %220

165:                                              ; preds = %156
  %166 = load i32, i32* %7, align 4, !noalias !18
  %167 = sitofp i32 %166 to float
  %168 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %33, align 8, !alias.scope !15, !noalias !12
  %169 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %35, align 8, !alias.scope !15, !noalias !12
  %170 = icmp ult %"struct.gfx::PathElement"* %168, %169
  %171 = ptrtoint %"struct.gfx::PathElement"* %169 to i64
  br i1 %170, label %172, label %176

172:                                              ; preds = %165
  %173 = bitcast %"struct.gfx::PathElement"* %168 to float*
  store float %167, float* %173, align 4
  %174 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %168, i64 1
  %175 = ptrtoint %"struct.gfx::PathElement"* %174 to i64
  store i64 %175, i64* %57, align 8, !alias.scope !15, !noalias !12
  br label %705

176:                                              ; preds = %165
  %177 = ptrtoint %"struct.gfx::PathElement"* %168 to i64
  %178 = load i64, i64* %58, align 8, !alias.scope !15, !noalias !12
  %179 = sub i64 %177, %178
  %180 = ashr exact i64 %179, 2
  %181 = add nsw i64 %180, 1
  %182 = icmp ugt i64 %181, 4611686018427387903
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = bitcast i8* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %184) #15
  unreachable

185:                                              ; preds = %176
  %186 = sub i64 %171, %178
  %187 = ashr exact i64 %186, 2
  %188 = icmp ult i64 %187, 2305843009213693951
  br i1 %188, label %189, label %197

189:                                              ; preds = %185
  %190 = ashr exact i64 %186, 1
  %191 = icmp ult i64 %190, %181
  %192 = select i1 %191, i64 %181, i64 %190
  %193 = icmp eq i64 %192, 0
  br i1 %193, label %202, label %194

194:                                              ; preds = %189
  %195 = icmp ugt i64 %192, 4611686018427387903
  br i1 %195, label %196, label %197

196:                                              ; preds = %194
  call void @abort() #15
  unreachable

197:                                              ; preds = %194, %185
  %198 = phi i64 [ %192, %194 ], [ 4611686018427387903, %185 ]
  %199 = shl i64 %198, 2
  %200 = call i8* @_Znwm(i64 %199) #14
  %201 = bitcast i8* %200 to %"struct.gfx::PathElement"*
  br label %202

202:                                              ; preds = %197, %189
  %203 = phi i64 [ %198, %197 ], [ 0, %189 ]
  %204 = phi i8* [ %200, %197 ], [ null, %189 ]
  %205 = phi %"struct.gfx::PathElement"* [ %201, %197 ], [ null, %189 ]
  %206 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %205, i64 %180
  %207 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %205, i64 %203
  %208 = ptrtoint %"struct.gfx::PathElement"* %207 to i64
  %209 = bitcast %"struct.gfx::PathElement"* %206 to float*
  store float %167, float* %209, align 4, !noalias !18
  %210 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %206, i64 1
  %211 = ptrtoint %"struct.gfx::PathElement"* %210 to i64
  %212 = ptrtoint %"struct.gfx::PathElement"* %205 to i64
  %213 = icmp sgt i64 %179, 0
  br i1 %213, label %214, label %216

214:                                              ; preds = %202
  %215 = inttoptr i64 %178 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %215, i64 %179, i1 false) #13
  br label %216

216:                                              ; preds = %214, %202
  store i64 %212, i64* %58, align 8, !alias.scope !15, !noalias !12
  store i64 %211, i64* %57, align 8, !alias.scope !15, !noalias !12
  store i64 %208, i64* %59, align 8, !alias.scope !15, !noalias !12
  %217 = icmp eq i64 %178, 0
  br i1 %217, label %705, label %218

218:                                              ; preds = %216
  %219 = inttoptr i64 %178 to i8*
  call void @_ZdlPv(i8* %219) #14
  br label %705

220:                                              ; preds = %156
  %221 = load i8, i8* %89, align 1
  %222 = icmp slt i8 %221, 0
  %223 = load i64, i64* %96, align 8
  %224 = zext i8 %221 to i64
  %225 = select i1 %222, i64 %223, i64 %224
  %226 = icmp eq i64 %225, 8
  br i1 %226, label %227, label %234

227:                                              ; preds = %220
  %228 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i64 8) #13
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %651, label %230

230:                                              ; preds = %227
  %231 = load i8, i8* %89, align 1
  %232 = load i64, i64* %96, align 8
  %233 = zext i8 %231 to i64
  br label %234

234:                                              ; preds = %230, %220
  %235 = phi i64 [ %233, %230 ], [ %224, %220 ]
  %236 = phi i64 [ %232, %230 ], [ %223, %220 ]
  %237 = phi i8 [ %231, %230 ], [ %221, %220 ]
  %238 = icmp slt i8 %237, 0
  %239 = select i1 %238, i64 %236, i64 %235
  %240 = icmp eq i64 %239, 16
  br i1 %240, label %241, label %248

241:                                              ; preds = %234
  %242 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.5, i64 0, i64 0), i64 16) #13
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %651, label %244

244:                                              ; preds = %241
  %245 = load i8, i8* %89, align 1
  %246 = load i64, i64* %96, align 8
  %247 = zext i8 %245 to i64
  br label %248

248:                                              ; preds = %244, %234
  %249 = phi i64 [ %247, %244 ], [ %235, %234 ]
  %250 = phi i64 [ %246, %244 ], [ %236, %234 ]
  %251 = phi i8 [ %245, %244 ], [ %237, %234 ]
  %252 = icmp slt i8 %251, 0
  %253 = select i1 %252, i64 %250, i64 %249
  %254 = icmp eq i64 %253, 15
  br i1 %254, label %255, label %262

255:                                              ; preds = %248
  %256 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 15) #13
  %257 = icmp eq i32 %256, 0
  br i1 %257, label %651, label %258

258:                                              ; preds = %255
  %259 = load i8, i8* %89, align 1
  %260 = load i64, i64* %96, align 8
  %261 = zext i8 %259 to i64
  br label %262

262:                                              ; preds = %258, %248
  %263 = phi i64 [ %261, %258 ], [ %249, %248 ]
  %264 = phi i64 [ %260, %258 ], [ %250, %248 ]
  %265 = phi i8 [ %259, %258 ], [ %251, %248 ]
  %266 = icmp slt i8 %265, 0
  %267 = select i1 %266, i64 %264, i64 %263
  %268 = icmp eq i64 %267, 15
  br i1 %268, label %269, label %276

269:                                              ; preds = %262
  %270 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0), i64 15) #13
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %651, label %272

272:                                              ; preds = %269
  %273 = load i8, i8* %89, align 1
  %274 = load i64, i64* %96, align 8
  %275 = zext i8 %273 to i64
  br label %276

276:                                              ; preds = %272, %262
  %277 = phi i64 [ %275, %272 ], [ %263, %262 ]
  %278 = phi i64 [ %274, %272 ], [ %264, %262 ]
  %279 = phi i8 [ %273, %272 ], [ %265, %262 ]
  %280 = icmp slt i8 %279, 0
  %281 = select i1 %280, i64 %278, i64 %277
  %282 = icmp eq i64 %281, 6
  br i1 %282, label %283, label %290

283:                                              ; preds = %276
  %284 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i64 0, i64 0), i64 6) #13
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %651, label %286

286:                                              ; preds = %283
  %287 = load i8, i8* %89, align 1
  %288 = load i64, i64* %96, align 8
  %289 = zext i8 %287 to i64
  br label %290

290:                                              ; preds = %286, %276
  %291 = phi i64 [ %289, %286 ], [ %277, %276 ]
  %292 = phi i64 [ %288, %286 ], [ %278, %276 ]
  %293 = phi i8 [ %287, %286 ], [ %279, %276 ]
  %294 = icmp slt i8 %293, 0
  %295 = select i1 %294, i64 %292, i64 %291
  %296 = icmp eq i64 %295, 10
  br i1 %296, label %297, label %304

297:                                              ; preds = %290
  %298 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i64 10) #13
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %651, label %300

300:                                              ; preds = %297
  %301 = load i8, i8* %89, align 1
  %302 = load i64, i64* %96, align 8
  %303 = zext i8 %301 to i64
  br label %304

304:                                              ; preds = %300, %290
  %305 = phi i64 [ %303, %300 ], [ %291, %290 ]
  %306 = phi i64 [ %302, %300 ], [ %292, %290 ]
  %307 = phi i8 [ %301, %300 ], [ %293, %290 ]
  %308 = icmp slt i8 %307, 0
  %309 = select i1 %308, i64 %306, i64 %305
  %310 = icmp eq i64 %309, 7
  br i1 %310, label %311, label %318

311:                                              ; preds = %304
  %312 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #13
  %313 = icmp eq i32 %312, 0
  br i1 %313, label %651, label %314

314:                                              ; preds = %311
  %315 = load i8, i8* %89, align 1
  %316 = load i64, i64* %96, align 8
  %317 = zext i8 %315 to i64
  br label %318

318:                                              ; preds = %314, %304
  %319 = phi i64 [ %317, %314 ], [ %305, %304 ]
  %320 = phi i64 [ %316, %314 ], [ %306, %304 ]
  %321 = phi i8 [ %315, %314 ], [ %307, %304 ]
  %322 = icmp slt i8 %321, 0
  %323 = select i1 %322, i64 %320, i64 %319
  %324 = icmp eq i64 %323, 9
  br i1 %324, label %325, label %332

325:                                              ; preds = %318
  %326 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #13
  %327 = icmp eq i32 %326, 0
  br i1 %327, label %651, label %328

328:                                              ; preds = %325
  %329 = load i8, i8* %89, align 1
  %330 = load i64, i64* %96, align 8
  %331 = zext i8 %329 to i64
  br label %332

332:                                              ; preds = %328, %318
  %333 = phi i64 [ %331, %328 ], [ %319, %318 ]
  %334 = phi i64 [ %330, %328 ], [ %320, %318 ]
  %335 = phi i8 [ %329, %328 ], [ %321, %318 ]
  %336 = icmp slt i8 %335, 0
  %337 = select i1 %336, i64 %334, i64 %333
  %338 = icmp eq i64 %337, 6
  br i1 %338, label %339, label %346

339:                                              ; preds = %332
  %340 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i64 0, i64 0), i64 6) #13
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %651, label %342

342:                                              ; preds = %339
  %343 = load i8, i8* %89, align 1
  %344 = load i64, i64* %96, align 8
  %345 = zext i8 %343 to i64
  br label %346

346:                                              ; preds = %342, %332
  %347 = phi i64 [ %345, %342 ], [ %333, %332 ]
  %348 = phi i64 [ %344, %342 ], [ %334, %332 ]
  %349 = phi i8 [ %343, %342 ], [ %335, %332 ]
  %350 = icmp slt i8 %349, 0
  %351 = select i1 %350, i64 %348, i64 %347
  %352 = icmp eq i64 %351, 8
  br i1 %352, label %353, label %360

353:                                              ; preds = %346
  %354 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i64 8) #13
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %651, label %356

356:                                              ; preds = %353
  %357 = load i8, i8* %89, align 1
  %358 = load i64, i64* %96, align 8
  %359 = zext i8 %357 to i64
  br label %360

360:                                              ; preds = %356, %346
  %361 = phi i64 [ %359, %356 ], [ %347, %346 ]
  %362 = phi i64 [ %358, %356 ], [ %348, %346 ]
  %363 = phi i8 [ %357, %356 ], [ %349, %346 ]
  %364 = icmp slt i8 %363, 0
  %365 = select i1 %364, i64 %362, i64 %361
  %366 = icmp eq i64 %365, 7
  br i1 %366, label %367, label %374

367:                                              ; preds = %360
  %368 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i64 7) #13
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %651, label %370

370:                                              ; preds = %367
  %371 = load i8, i8* %89, align 1
  %372 = load i64, i64* %96, align 8
  %373 = zext i8 %371 to i64
  br label %374

374:                                              ; preds = %370, %360
  %375 = phi i64 [ %373, %370 ], [ %361, %360 ]
  %376 = phi i64 [ %372, %370 ], [ %362, %360 ]
  %377 = phi i8 [ %371, %370 ], [ %363, %360 ]
  %378 = icmp slt i8 %377, 0
  %379 = select i1 %378, i64 %376, i64 %375
  %380 = icmp eq i64 %379, 9
  br i1 %380, label %381, label %388

381:                                              ; preds = %374
  %382 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i64 9) #13
  %383 = icmp eq i32 %382, 0
  br i1 %383, label %651, label %384

384:                                              ; preds = %381
  %385 = load i8, i8* %89, align 1
  %386 = load i64, i64* %96, align 8
  %387 = zext i8 %385 to i64
  br label %388

388:                                              ; preds = %384, %374
  %389 = phi i64 [ %387, %384 ], [ %375, %374 ]
  %390 = phi i64 [ %386, %384 ], [ %376, %374 ]
  %391 = phi i8 [ %385, %384 ], [ %377, %374 ]
  %392 = icmp slt i8 %391, 0
  %393 = select i1 %392, i64 %390, i64 %389
  %394 = icmp eq i64 %393, 9
  br i1 %394, label %395, label %402

395:                                              ; preds = %388
  %396 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.16, i64 0, i64 0), i64 9) #13
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %651, label %398

398:                                              ; preds = %395
  %399 = load i8, i8* %89, align 1
  %400 = load i64, i64* %96, align 8
  %401 = zext i8 %399 to i64
  br label %402

402:                                              ; preds = %398, %388
  %403 = phi i64 [ %401, %398 ], [ %389, %388 ]
  %404 = phi i64 [ %400, %398 ], [ %390, %388 ]
  %405 = phi i8 [ %399, %398 ], [ %391, %388 ]
  %406 = icmp slt i8 %405, 0
  %407 = select i1 %406, i64 %404, i64 %403
  %408 = icmp eq i64 %407, 11
  br i1 %408, label %409, label %416

409:                                              ; preds = %402
  %410 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.17, i64 0, i64 0), i64 11) #13
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %651, label %412

412:                                              ; preds = %409
  %413 = load i8, i8* %89, align 1
  %414 = load i64, i64* %96, align 8
  %415 = zext i8 %413 to i64
  br label %416

416:                                              ; preds = %412, %402
  %417 = phi i64 [ %415, %412 ], [ %403, %402 ]
  %418 = phi i64 [ %414, %412 ], [ %404, %402 ]
  %419 = phi i8 [ %413, %412 ], [ %405, %402 ]
  %420 = icmp slt i8 %419, 0
  %421 = select i1 %420, i64 %418, i64 %417
  %422 = icmp eq i64 %421, 9
  br i1 %422, label %423, label %430

423:                                              ; preds = %416
  %424 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i64 9) #13
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %651, label %426

426:                                              ; preds = %423
  %427 = load i8, i8* %89, align 1
  %428 = load i64, i64* %96, align 8
  %429 = zext i8 %427 to i64
  br label %430

430:                                              ; preds = %426, %416
  %431 = phi i64 [ %429, %426 ], [ %417, %416 ]
  %432 = phi i64 [ %428, %426 ], [ %418, %416 ]
  %433 = phi i8 [ %427, %426 ], [ %419, %416 ]
  %434 = icmp slt i8 %433, 0
  %435 = select i1 %434, i64 %432, i64 %431
  %436 = icmp eq i64 %435, 11
  br i1 %436, label %437, label %444

437:                                              ; preds = %430
  %438 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19, i64 0, i64 0), i64 11) #13
  %439 = icmp eq i32 %438, 0
  br i1 %439, label %651, label %440

440:                                              ; preds = %437
  %441 = load i8, i8* %89, align 1
  %442 = load i64, i64* %96, align 8
  %443 = zext i8 %441 to i64
  br label %444

444:                                              ; preds = %440, %430
  %445 = phi i64 [ %443, %440 ], [ %431, %430 ]
  %446 = phi i64 [ %442, %440 ], [ %432, %430 ]
  %447 = phi i8 [ %441, %440 ], [ %433, %430 ]
  %448 = icmp slt i8 %447, 0
  %449 = select i1 %448, i64 %446, i64 %445
  %450 = icmp eq i64 %449, 8
  br i1 %450, label %451, label %458

451:                                              ; preds = %444
  %452 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i64 8) #13
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %651, label %454

454:                                              ; preds = %451
  %455 = load i8, i8* %89, align 1
  %456 = load i64, i64* %96, align 8
  %457 = zext i8 %455 to i64
  br label %458

458:                                              ; preds = %454, %444
  %459 = phi i64 [ %457, %454 ], [ %445, %444 ]
  %460 = phi i64 [ %456, %454 ], [ %446, %444 ]
  %461 = phi i8 [ %455, %454 ], [ %447, %444 ]
  %462 = icmp slt i8 %461, 0
  %463 = select i1 %462, i64 %460, i64 %459
  %464 = icmp eq i64 %463, 10
  br i1 %464, label %465, label %472

465:                                              ; preds = %458
  %466 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.21, i64 0, i64 0), i64 10) #13
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %651, label %468

468:                                              ; preds = %465
  %469 = load i8, i8* %89, align 1
  %470 = load i64, i64* %96, align 8
  %471 = zext i8 %469 to i64
  br label %472

472:                                              ; preds = %468, %458
  %473 = phi i64 [ %471, %468 ], [ %459, %458 ]
  %474 = phi i64 [ %470, %468 ], [ %460, %458 ]
  %475 = phi i8 [ %469, %468 ], [ %461, %458 ]
  %476 = icmp slt i8 %475, 0
  %477 = select i1 %476, i64 %474, i64 %473
  %478 = icmp eq i64 %477, 18
  br i1 %478, label %479, label %486

479:                                              ; preds = %472
  %480 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22, i64 0, i64 0), i64 18) #13
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %651, label %482

482:                                              ; preds = %479
  %483 = load i8, i8* %89, align 1
  %484 = load i64, i64* %96, align 8
  %485 = zext i8 %483 to i64
  br label %486

486:                                              ; preds = %482, %472
  %487 = phi i64 [ %485, %482 ], [ %473, %472 ]
  %488 = phi i64 [ %484, %482 ], [ %474, %472 ]
  %489 = phi i8 [ %483, %482 ], [ %475, %472 ]
  %490 = icmp slt i8 %489, 0
  %491 = select i1 %490, i64 %488, i64 %487
  %492 = icmp eq i64 %491, 12
  br i1 %492, label %493, label %500

493:                                              ; preds = %486
  %494 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23, i64 0, i64 0), i64 12) #13
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %651, label %496

496:                                              ; preds = %493
  %497 = load i8, i8* %89, align 1
  %498 = load i64, i64* %96, align 8
  %499 = zext i8 %497 to i64
  br label %500

500:                                              ; preds = %496, %486
  %501 = phi i64 [ %499, %496 ], [ %487, %486 ]
  %502 = phi i64 [ %498, %496 ], [ %488, %486 ]
  %503 = phi i8 [ %497, %496 ], [ %489, %486 ]
  %504 = icmp slt i8 %503, 0
  %505 = select i1 %504, i64 %502, i64 %501
  %506 = icmp eq i64 %505, 14
  br i1 %506, label %507, label %514

507:                                              ; preds = %500
  %508 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.24, i64 0, i64 0), i64 14) #13
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %651, label %510

510:                                              ; preds = %507
  %511 = load i8, i8* %89, align 1
  %512 = load i64, i64* %96, align 8
  %513 = zext i8 %511 to i64
  br label %514

514:                                              ; preds = %510, %500
  %515 = phi i64 [ %513, %510 ], [ %501, %500 ]
  %516 = phi i64 [ %512, %510 ], [ %502, %500 ]
  %517 = phi i8 [ %511, %510 ], [ %503, %500 ]
  %518 = icmp slt i8 %517, 0
  %519 = select i1 %518, i64 %516, i64 %515
  %520 = icmp eq i64 %519, 22
  br i1 %520, label %521, label %528

521:                                              ; preds = %514
  %522 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.25, i64 0, i64 0), i64 22) #13
  %523 = icmp eq i32 %522, 0
  br i1 %523, label %651, label %524

524:                                              ; preds = %521
  %525 = load i8, i8* %89, align 1
  %526 = load i64, i64* %96, align 8
  %527 = zext i8 %525 to i64
  br label %528

528:                                              ; preds = %524, %514
  %529 = phi i64 [ %527, %524 ], [ %515, %514 ]
  %530 = phi i64 [ %526, %524 ], [ %516, %514 ]
  %531 = phi i8 [ %525, %524 ], [ %517, %514 ]
  %532 = icmp slt i8 %531, 0
  %533 = select i1 %532, i64 %530, i64 %529
  %534 = icmp eq i64 %533, 24
  br i1 %534, label %535, label %542

535:                                              ; preds = %528
  %536 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i64 0, i64 0), i64 24) #13
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %651, label %538

538:                                              ; preds = %535
  %539 = load i8, i8* %89, align 1
  %540 = load i64, i64* %96, align 8
  %541 = zext i8 %539 to i64
  br label %542

542:                                              ; preds = %538, %528
  %543 = phi i64 [ %541, %538 ], [ %529, %528 ]
  %544 = phi i64 [ %540, %538 ], [ %530, %528 ]
  %545 = phi i8 [ %539, %538 ], [ %531, %528 ]
  %546 = icmp slt i8 %545, 0
  %547 = select i1 %546, i64 %544, i64 %543
  %548 = icmp eq i64 %547, 6
  br i1 %548, label %549, label %556

549:                                              ; preds = %542
  %550 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i64 6) #13
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %651, label %552

552:                                              ; preds = %549
  %553 = load i8, i8* %89, align 1
  %554 = load i64, i64* %96, align 8
  %555 = zext i8 %553 to i64
  br label %556

556:                                              ; preds = %552, %542
  %557 = phi i64 [ %555, %552 ], [ %543, %542 ]
  %558 = phi i64 [ %554, %552 ], [ %544, %542 ]
  %559 = phi i8 [ %553, %552 ], [ %545, %542 ]
  %560 = icmp slt i8 %559, 0
  %561 = select i1 %560, i64 %558, i64 %557
  %562 = icmp eq i64 %561, 4
  br i1 %562, label %563, label %570

563:                                              ; preds = %556
  %564 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i64 4) #13
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %651, label %566

566:                                              ; preds = %563
  %567 = load i8, i8* %89, align 1
  %568 = load i64, i64* %96, align 8
  %569 = zext i8 %567 to i64
  br label %570

570:                                              ; preds = %566, %556
  %571 = phi i64 [ %569, %566 ], [ %557, %556 ]
  %572 = phi i64 [ %568, %566 ], [ %558, %556 ]
  %573 = phi i8 [ %567, %566 ], [ %559, %556 ]
  %574 = icmp slt i8 %573, 0
  %575 = select i1 %574, i64 %572, i64 %571
  %576 = icmp eq i64 %575, 10
  br i1 %576, label %577, label %584

577:                                              ; preds = %570
  %578 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i64 0, i64 0), i64 10) #13
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %651, label %580

580:                                              ; preds = %577
  %581 = load i8, i8* %89, align 1
  %582 = load i64, i64* %96, align 8
  %583 = zext i8 %581 to i64
  br label %584

584:                                              ; preds = %580, %570
  %585 = phi i64 [ %583, %580 ], [ %571, %570 ]
  %586 = phi i64 [ %582, %580 ], [ %572, %570 ]
  %587 = phi i8 [ %581, %580 ], [ %573, %570 ]
  %588 = icmp slt i8 %587, 0
  %589 = select i1 %588, i64 %586, i64 %585
  %590 = icmp eq i64 %589, 5
  br i1 %590, label %591, label %598

591:                                              ; preds = %584
  %592 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #13
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %651, label %594

594:                                              ; preds = %591
  %595 = load i8, i8* %89, align 1
  %596 = load i64, i64* %96, align 8
  %597 = zext i8 %595 to i64
  br label %598

598:                                              ; preds = %594, %584
  %599 = phi i64 [ %597, %594 ], [ %585, %584 ]
  %600 = phi i64 [ %596, %594 ], [ %586, %584 ]
  %601 = phi i8 [ %595, %594 ], [ %587, %584 ]
  %602 = icmp slt i8 %601, 0
  %603 = select i1 %602, i64 %600, i64 %599
  %604 = icmp eq i64 %603, 17
  br i1 %604, label %605, label %612

605:                                              ; preds = %598
  %606 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i64 17) #13
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %651, label %608

608:                                              ; preds = %605
  %609 = load i8, i8* %89, align 1
  %610 = load i64, i64* %96, align 8
  %611 = zext i8 %609 to i64
  br label %612

612:                                              ; preds = %608, %598
  %613 = phi i64 [ %611, %608 ], [ %599, %598 ]
  %614 = phi i64 [ %610, %608 ], [ %600, %598 ]
  %615 = phi i8 [ %609, %608 ], [ %601, %598 ]
  %616 = icmp slt i8 %615, 0
  %617 = select i1 %616, i64 %614, i64 %613
  %618 = icmp eq i64 %617, 4
  br i1 %618, label %619, label %626

619:                                              ; preds = %612
  %620 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i64 0, i64 0), i64 4) #13
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %651, label %622

622:                                              ; preds = %619
  %623 = load i8, i8* %89, align 1
  %624 = load i64, i64* %96, align 8
  %625 = zext i8 %623 to i64
  br label %626

626:                                              ; preds = %622, %612
  %627 = phi i64 [ %625, %622 ], [ %613, %612 ]
  %628 = phi i64 [ %624, %622 ], [ %614, %612 ]
  %629 = phi i8 [ %623, %622 ], [ %615, %612 ]
  %630 = icmp slt i8 %629, 0
  %631 = select i1 %630, i64 %628, i64 %627
  %632 = icmp eq i64 %631, 10
  br i1 %632, label %633, label %640

633:                                              ; preds = %626
  %634 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.33, i64 0, i64 0), i64 10) #13
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %651, label %636

636:                                              ; preds = %633
  %637 = load i8, i8* %89, align 1
  %638 = load i64, i64* %96, align 8
  %639 = zext i8 %637 to i64
  br label %640

640:                                              ; preds = %636, %626
  %641 = phi i64 [ %639, %636 ], [ %627, %626 ]
  %642 = phi i64 [ %638, %636 ], [ %628, %626 ]
  %643 = phi i8 [ %637, %636 ], [ %629, %626 ]
  %644 = icmp slt i8 %643, 0
  %645 = select i1 %644, i64 %642, i64 %641
  %646 = icmp eq i64 %645, 12
  br i1 %646, label %647, label %651

647:                                              ; preds = %640
  %648 = call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %87, i64 0, i64 -1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i64 12) #13
  %649 = icmp eq i32 %648, 0
  %650 = select i1 %649, i32 30, i32 26
  br label %651

651:                                              ; preds = %647, %640, %633, %619, %605, %591, %577, %563, %549, %535, %521, %507, %493, %479, %465, %451, %437, %423, %409, %395, %381, %367, %353, %339, %325, %311, %297, %283, %269, %255, %241, %227
  %652 = phi i32 [ %650, %647 ], [ 0, %227 ], [ 1, %241 ], [ 2, %255 ], [ 3, %269 ], [ 4, %283 ], [ 5, %297 ], [ 6, %311 ], [ 7, %325 ], [ 8, %339 ], [ 9, %353 ], [ 10, %367 ], [ 11, %381 ], [ 12, %395 ], [ 13, %409 ], [ 14, %423 ], [ 15, %437 ], [ 16, %451 ], [ 17, %465 ], [ 18, %479 ], [ 19, %493 ], [ 20, %507 ], [ 21, %521 ], [ 22, %535 ], [ 23, %549 ], [ 24, %563 ], [ 25, %577 ], [ 26, %591 ], [ 27, %605 ], [ 28, %619 ], [ 29, %633 ], [ 26, %640 ]
  %653 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %33, align 8, !alias.scope !15, !noalias !12
  %654 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %35, align 8, !alias.scope !15, !noalias !12
  %655 = icmp ult %"struct.gfx::PathElement"* %653, %654
  %656 = ptrtoint %"struct.gfx::PathElement"* %654 to i64
  br i1 %655, label %657, label %661

657:                                              ; preds = %651
  %658 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %653, i64 0, i32 0, i32 0
  store i32 %652, i32* %658, align 4
  %659 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %653, i64 1
  %660 = ptrtoint %"struct.gfx::PathElement"* %659 to i64
  store i64 %660, i64* %57, align 8, !alias.scope !15, !noalias !12
  br label %705

661:                                              ; preds = %651
  %662 = ptrtoint %"struct.gfx::PathElement"* %653 to i64
  %663 = load i64, i64* %58, align 8, !alias.scope !15, !noalias !12
  %664 = sub i64 %662, %663
  %665 = ashr exact i64 %664, 2
  %666 = add nsw i64 %665, 1
  %667 = icmp ugt i64 %666, 4611686018427387903
  br i1 %667, label %668, label %670

668:                                              ; preds = %661
  %669 = bitcast i8* %31 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %669) #15
  unreachable

670:                                              ; preds = %661
  %671 = sub i64 %656, %663
  %672 = ashr exact i64 %671, 2
  %673 = icmp ult i64 %672, 2305843009213693951
  br i1 %673, label %674, label %682

674:                                              ; preds = %670
  %675 = ashr exact i64 %671, 1
  %676 = icmp ult i64 %675, %666
  %677 = select i1 %676, i64 %666, i64 %675
  %678 = icmp eq i64 %677, 0
  br i1 %678, label %687, label %679

679:                                              ; preds = %674
  %680 = icmp ugt i64 %677, 4611686018427387903
  br i1 %680, label %681, label %682

681:                                              ; preds = %679
  call void @abort() #15
  unreachable

682:                                              ; preds = %679, %670
  %683 = phi i64 [ %677, %679 ], [ 4611686018427387903, %670 ]
  %684 = shl i64 %683, 2
  %685 = call i8* @_Znwm(i64 %684) #14
  %686 = bitcast i8* %685 to %"struct.gfx::PathElement"*
  br label %687

687:                                              ; preds = %682, %674
  %688 = phi i64 [ %683, %682 ], [ 0, %674 ]
  %689 = phi i8* [ %685, %682 ], [ null, %674 ]
  %690 = phi %"struct.gfx::PathElement"* [ %686, %682 ], [ null, %674 ]
  %691 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %690, i64 %665
  %692 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %690, i64 %688
  %693 = ptrtoint %"struct.gfx::PathElement"* %692 to i64
  %694 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %691, i64 0, i32 0, i32 0
  store i32 %652, i32* %694, align 4, !noalias !18
  %695 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %691, i64 1
  %696 = ptrtoint %"struct.gfx::PathElement"* %695 to i64
  %697 = ptrtoint %"struct.gfx::PathElement"* %690 to i64
  %698 = icmp sgt i64 %664, 0
  br i1 %698, label %699, label %701

699:                                              ; preds = %687
  %700 = inttoptr i64 %663 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %689, i8* align 4 %700, i64 %664, i1 false) #13
  br label %701

701:                                              ; preds = %699, %687
  store i64 %697, i64* %58, align 8, !alias.scope !15, !noalias !12
  store i64 %696, i64* %57, align 8, !alias.scope !15, !noalias !12
  store i64 %693, i64* %59, align 8, !alias.scope !15, !noalias !12
  %702 = icmp eq i64 %663, 0
  br i1 %702, label %705, label %703

703:                                              ; preds = %701
  %704 = inttoptr i64 %663 to i8*
  call void @_ZdlPv(i8* %704) #14
  br label %705

705:                                              ; preds = %703, %701, %657, %218, %216, %172, %154, %152, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #13, !noalias !18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #13, !noalias !18
  %706 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 1
  %707 = icmp eq %"class.std::__1::basic_string"* %706, %52
  br i1 %707, label %60, label %86

708:                                              ; preds = %62, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #13, !noalias !18
  %709 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709) #13, !noalias !12
  %710 = getelementptr inbounds i8, i8* %11, i64 8
  %711 = bitcast i8* %710 to i64*
  %712 = load i64, i64* %711, align 4, !noalias !12
  store i64 %712, i64* %9, align 8, !noalias !12
  %713 = bitcast i8* %11 to %"class.gfx::ImageSkiaSource"*
  call void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"* %0, %"class.gfx::ImageSkiaSource"* nonnull %713, %"class.gfx::Size"* nonnull dereferenceable(8) %10) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #13, !noalias !12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #5

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6moveToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7rLineToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7rMoveToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5arcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6rArcToEfffNS_7ArcSizeE15SkPathDirectionff(%class.SkPath*, float, float, float, i32, i32, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #2

declare zeroext i1 @_ZNK6SkPath9getLastPtEP7SkPoint(%class.SkPath*, %struct.SkPoint*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7cubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath8rCubicToEffffff(%class.SkPath*, float, float, float, float, float, float) local_unnamed_addr #2

declare <2 x float> @_ZNK6SkPath8getPointEi(%class.SkPath*, i32) local_unnamed_addr #2

declare i32 @_ZNK6SkPath11countPointsEv(%class.SkPath*) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6quadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7rQuadToEffff(%class.SkPath*, float, float, float, float) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7addOvalERK6SkRect15SkPathDirection(%class.SkPath*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath9addCircleEfff15SkPathDirection(%class.SkPath*, float, float, float, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath12addRoundRectERK6SkRectff15SkPathDirection(%class.SkPath*, %struct.SkRect* dereferenceable(16), float, float, i32) local_unnamed_addr #2

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath5closeEv(%class.SkPath*) local_unnamed_addr #2

declare void @_ZN3gfx12ScopedCanvasC1EPNS_6CanvasE(%"class.gfx::ScopedCanvas"*, %"class.gfx::Canvas"*) unnamed_addr #2

declare void @_ZN3gfx12ScopedCanvas9FlipIfRTLEi(%"class.gfx::ScopedCanvas"*, i32) local_unnamed_addr #2

declare void @_ZN3gfx6Canvas8DrawPathERK6SkPathRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %class.SkPath* dereferenceable(16), %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx12ScopedCanvasD1Ev(%"class.gfx::ScopedCanvas"*) unnamed_addr #6

declare void @_ZN6SkPathC1Ev(%class.SkPath*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorI6SkPathNS_9allocatorIS1_EEE21__push_back_slow_pathIS1_EEvOT_(%"class.std::__1::vector"*, %class.SkPath* dereferenceable(16)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %class.SkPath** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %class.SkPath** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #14
  %33 = bitcast i8* %32 to %class.SkPath*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %class.SkPath* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %class.SkPath, %class.SkPath* %36, i64 %9
  %38 = getelementptr inbounds %class.SkPath, %class.SkPath* %36, i64 %35
  %39 = ptrtoint %class.SkPath* %38 to i64
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %37, %class.SkPath* dereferenceable(16) %1) #13
  %40 = getelementptr inbounds %class.SkPath, %class.SkPath* %37, i64 1
  %41 = ptrtoint %class.SkPath* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %43 = load %class.SkPath*, %class.SkPath** %42, align 8
  %44 = load %class.SkPath*, %class.SkPath** %3, align 8
  %45 = icmp eq %class.SkPath* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %class.SkPath* %43 to i64
  br label %57

48:                                               ; preds = %34, %48
  %49 = phi %class.SkPath* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %class.SkPath* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %class.SkPath, %class.SkPath* %49, i64 -1
  %52 = getelementptr inbounds %class.SkPath, %class.SkPath* %50, i64 -1
  tail call void @_ZN6SkPathC1ERKS_(%class.SkPath* %51, %class.SkPath* dereferenceable(16) %52) #13
  %53 = icmp eq %class.SkPath* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load i64, i64* %6, align 8
  %56 = load %class.SkPath*, %class.SkPath** %3, align 8
  br label %57

57:                                               ; preds = %46, %54
  %58 = phi %class.SkPath* [ %43, %46 ], [ %56, %54 ]
  %59 = phi %class.SkPath* [ %37, %46 ], [ %51, %54 ]
  %60 = phi i64 [ %47, %46 ], [ %55, %54 ]
  %61 = ptrtoint %class.SkPath* %59 to i64
  store i64 %61, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %62 = inttoptr i64 %60 to %class.SkPath*
  %63 = icmp eq %class.SkPath* %58, %62
  br i1 %63, label %68, label %64

64:                                               ; preds = %57, %64
  %65 = phi %class.SkPath* [ %66, %64 ], [ %58, %57 ]
  %66 = getelementptr inbounds %class.SkPath, %class.SkPath* %65, i64 -1
  tail call void @_ZN6SkPathD1Ev(%class.SkPath* %66) #13
  %67 = icmp eq %class.SkPath* %66, %62
  br i1 %67, label %68, label %64

68:                                               ; preds = %64, %57
  %69 = icmp eq i64 %60, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %60 to i8*
  tail call void @_ZdlPv(i8* %71) #14
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

declare void @_ZN6SkPathC1ERKS_(%class.SkPath*, %class.SkPath* dereferenceable(16)) unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2cc10PaintFlagsENS_9allocatorIS2_EEE21__push_back_slow_pathIS2_EEvOT_(%"class.std::__1::vector.59"*, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.cc::PaintFlags"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.59"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 72
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 256204778801521550
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.59"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.cc::PaintFlags"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 72
  %20 = icmp ult i64 %19, 128102389400760775
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 256204778801521550, %14 ]
  %28 = mul i64 %27, 72
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.cc::PaintFlags"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.cc::PaintFlags"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %33, i64 %9
  %35 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %33, i64 %32
  %36 = ptrtoint %"class.cc::PaintFlags"* %35 to i64
  tail call void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"* %34, %"class.cc::PaintFlags"* dereferenceable(72) %1) #13
  %37 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %34, i64 1
  %38 = ptrtoint %"class.cc::PaintFlags"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.59", %"class.std::__1::vector.59"* %0, i64 0, i32 0, i32 0
  %40 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %39, align 8
  %41 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %3, align 8
  %42 = icmp eq %"class.cc::PaintFlags"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"class.cc::PaintFlags"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"class.cc::PaintFlags"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"class.cc::PaintFlags"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %46, i64 -1
  %49 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %47, i64 -1
  tail call void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"* %48, %"class.cc::PaintFlags"* dereferenceable(72) %49) #13
  %50 = icmp eq %"class.cc::PaintFlags"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"class.cc::PaintFlags"*, %"class.cc::PaintFlags"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"class.cc::PaintFlags"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"class.cc::PaintFlags"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"class.cc::PaintFlags"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"class.cc::PaintFlags"*
  %60 = icmp eq %"class.cc::PaintFlags"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"class.cc::PaintFlags"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %62, i64 -1
  tail call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* %63) #13
  %64 = icmp eq %"class.cc::PaintFlags"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #14
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

declare void @_ZN2cc10PaintFlagsC1EOS0_(%"class.cc::PaintFlags"*, %"class.cc::PaintFlags"* dereferenceable(72)) unnamed_addr #2

declare void @_ZN3gfx9ImageSkiaC1ERKS0_(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkia"* dereferenceable(8)) unnamed_addr #2

declare void @_ZN3gfx9ImageSkiaC1ENSt3__110unique_ptrINS_15ImageSkiaSourceENS1_14default_deleteIS3_EEEERKNS_4SizeE(%"class.gfx::ImageSkia"*, %"class.gfx::ImageSkiaSource"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"*) unnamed_addr #6

declare void @_ZN3gfx17CanvasImageSourceC2ERKNS_4SizeE(%"class.gfx::CanvasImageSource"*, %"class.gfx::Size"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_116VectorIconSourceD2Ev(%"class.gfx::(anonymous namespace)::VectorIconSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_116VectorIconSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %3, align 8
  %5 = icmp eq %"struct.gfx::PathElement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.gfx::PathElement"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.gfx::PathElement"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.gfx::PathElement"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %12) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_116VectorIconSourceD0Ev(%"class.gfx::(anonymous namespace)::VectorIconSource"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3gfx12_GLOBAL__N_116VectorIconSourceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %3, align 8
  %5 = icmp eq %"struct.gfx::PathElement"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"struct.gfx::PathElement"* %4 to i64
  %8 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 1
  %9 = bitcast %"struct.gfx::PathElement"** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"struct.gfx::PathElement"* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #14
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"* %12) #13
  %13 = bitcast %"class.gfx::(anonymous namespace)::VectorIconSource"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #14
  ret void
}

declare void @_ZN3gfx17CanvasImageSource16GetImageForScaleEf(%"class.gfx::ImageSkiaRep"* sret, %"class.gfx::CanvasImageSource"*, float) unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i1 @_ZNK3gfx12_GLOBAL__N_116VectorIconSource28HasRepresentationAtAllScalesEv(%"class.gfx::(anonymous namespace)::VectorIconSource"* nocapture readonly) unnamed_addr #12 align 2 {
  %2 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 1, i32 0
  %3 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %2, align 8
  %4 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %3, i64 0, i32 0
  %5 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %4, align 8
  %6 = icmp ne %"struct.gfx::VectorIconRep"* %5, null
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gfx12_GLOBAL__N_116VectorIconSource4DrawEPNS_6CanvasE(%"class.gfx::(anonymous namespace)::VectorIconSource"* nocapture readonly, %"class.gfx::Canvas"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %3, align 8
  %5 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 2, i32 0, i32 1
  %6 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %5, align 8
  %7 = icmp eq %"struct.gfx::PathElement"* %4, %6
  br i1 %7, label %8, label %136

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 1, i32 0
  %10 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %9, align 8
  %11 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 1, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Canvas", %"class.gfx::Canvas"* %1, i64 0, i32 1
  %16 = load float, float* %15, align 8
  %17 = sitofp i32 %12 to float
  %18 = fmul float %16, %17
  %19 = tail call float @llvm.ceil.f32(float %18) #13
  %20 = fcmp ult float %19, 0xC1E0000000000000
  %21 = fcmp ugt float %19, 0x41DFFFFFE0000000
  %22 = fcmp ogt float %19, 0xC1E0000000000000
  %23 = select i1 %22, float %19, float 0xC1E0000000000000
  %24 = fptosi float %23 to i32
  %25 = select i1 %20, i32 0, i32 2147483647
  %26 = select i1 %21, i32 %25, i32 %24
  %27 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %10, i64 0, i32 0
  %28 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %27, align 8
  %29 = icmp eq %"struct.gfx::VectorIconRep"* %28, null
  br i1 %29, label %68, label %30

30:                                               ; preds = %8
  %31 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %10, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  br label %34

34:                                               ; preds = %57, %30
  %35 = phi %"struct.gfx::VectorIconRep"* [ null, %30 ], [ %60, %57 ]
  %36 = phi i32 [ %33, %30 ], [ %37, %57 ]
  %37 = add i32 %36, -1
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %39, label %65

39:                                               ; preds = %34
  %40 = sext i32 %37 to i64
  %41 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %28, i64 %40
  %42 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %41, i64 0, i32 0
  %43 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %42, align 8
  %44 = icmp eq %"struct.gfx::PathElement"* %43, null
  br i1 %44, label %54, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %43, i64 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 27
  br i1 %48, label %49, label %54

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %43, i64 1, i32 0
  %51 = bitcast %union.anon* %50 to float*
  %52 = load float, float* %51, align 4
  %53 = fptosi float %52 to i32
  br label %54

54:                                               ; preds = %49, %45, %39
  %55 = phi i32 [ -1, %39 ], [ %53, %49 ], [ 48, %45 ]
  %56 = icmp eq i32 %55, %26
  br i1 %56, label %68, label %57

57:                                               ; preds = %54
  %58 = srem i32 %26, %55
  %59 = icmp eq i32 %58, 0
  %60 = select i1 %59, %"struct.gfx::VectorIconRep"* %41, %"struct.gfx::VectorIconRep"* %35
  %61 = icmp sgt i32 %55, %26
  br i1 %61, label %62, label %34

62:                                               ; preds = %57
  %63 = icmp eq %"struct.gfx::VectorIconRep"* %60, null
  %64 = select i1 %63, %"struct.gfx::VectorIconRep"* %41, %"struct.gfx::VectorIconRep"* %60
  br label %68

65:                                               ; preds = %34
  %66 = icmp eq %"struct.gfx::VectorIconRep"* %35, null
  %67 = select i1 %66, %"struct.gfx::VectorIconRep"* %28, %"struct.gfx::VectorIconRep"* %35
  br label %68

68:                                               ; preds = %54, %8, %62, %65
  %69 = phi %"struct.gfx::VectorIconRep"* [ null, %8 ], [ %67, %65 ], [ %64, %62 ], [ %41, %54 ]
  %70 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %69, i64 0, i32 0
  %71 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %70, align 8
  %72 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %69, i64 0, i32 1
  %73 = load i64, i64* %72, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"* %1, %"struct.gfx::PathElement"* %71, i64 %73, i32 %12, i32 %14) #13
  %74 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 1, i32 3
  %75 = load %"struct.gfx::VectorIcon"*, %"struct.gfx::VectorIcon"** %74, align 8
  %76 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %75, i64 0, i32 0
  %77 = load %"struct.gfx::VectorIconRep"*, %"struct.gfx::VectorIconRep"** %76, align 8
  %78 = icmp eq %"struct.gfx::VectorIconRep"* %77, null
  br i1 %78, label %145, label %79

79:                                               ; preds = %68
  %80 = load i32, i32* %11, align 4
  %81 = load i32, i32* %13, align 4
  %82 = load float, float* %15, align 8
  %83 = sitofp i32 %80 to float
  %84 = fmul float %82, %83
  %85 = tail call float @llvm.ceil.f32(float %84) #13
  %86 = fcmp ult float %85, 0xC1E0000000000000
  %87 = fcmp ugt float %85, 0x41DFFFFFE0000000
  %88 = fcmp ogt float %85, 0xC1E0000000000000
  %89 = select i1 %88, float %85, float 0xC1E0000000000000
  %90 = fptosi float %89 to i32
  %91 = select i1 %86, i32 0, i32 2147483647
  %92 = select i1 %87, i32 %91, i32 %90
  %93 = getelementptr inbounds %"struct.gfx::VectorIcon", %"struct.gfx::VectorIcon"* %75, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = trunc i64 %94 to i32
  br label %96

96:                                               ; preds = %119, %79
  %97 = phi %"struct.gfx::VectorIconRep"* [ null, %79 ], [ %122, %119 ]
  %98 = phi i32 [ %95, %79 ], [ %99, %119 ]
  %99 = add i32 %98, -1
  %100 = icmp sgt i32 %99, -1
  br i1 %100, label %101, label %127

101:                                              ; preds = %96
  %102 = sext i32 %99 to i64
  %103 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %77, i64 %102
  %104 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %103, i64 0, i32 0
  %105 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %104, align 8
  %106 = icmp eq %"struct.gfx::PathElement"* %105, null
  br i1 %106, label %116, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %105, i64 0, i32 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 27
  br i1 %110, label %111, label %116

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.gfx::PathElement", %"struct.gfx::PathElement"* %105, i64 1, i32 0
  %113 = bitcast %union.anon* %112 to float*
  %114 = load float, float* %113, align 4
  %115 = fptosi float %114 to i32
  br label %116

116:                                              ; preds = %111, %107, %101
  %117 = phi i32 [ -1, %101 ], [ %115, %111 ], [ 48, %107 ]
  %118 = icmp eq i32 %117, %92
  br i1 %118, label %130, label %119

119:                                              ; preds = %116
  %120 = srem i32 %92, %117
  %121 = icmp eq i32 %120, 0
  %122 = select i1 %121, %"struct.gfx::VectorIconRep"* %103, %"struct.gfx::VectorIconRep"* %97
  %123 = icmp sgt i32 %117, %92
  br i1 %123, label %124, label %96

124:                                              ; preds = %119
  %125 = icmp eq %"struct.gfx::VectorIconRep"* %122, null
  %126 = select i1 %125, %"struct.gfx::VectorIconRep"* %103, %"struct.gfx::VectorIconRep"* %122
  br label %130

127:                                              ; preds = %96
  %128 = icmp eq %"struct.gfx::VectorIconRep"* %97, null
  %129 = select i1 %128, %"struct.gfx::VectorIconRep"* %77, %"struct.gfx::VectorIconRep"* %97
  br label %130

130:                                              ; preds = %116, %124, %127
  %131 = phi %"struct.gfx::VectorIconRep"* [ %129, %127 ], [ %126, %124 ], [ %103, %116 ]
  %132 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %131, i64 0, i32 0
  %133 = load %"struct.gfx::PathElement"*, %"struct.gfx::PathElement"** %132, align 8
  %134 = getelementptr inbounds %"struct.gfx::VectorIconRep", %"struct.gfx::VectorIconRep"* %131, i64 0, i32 1
  %135 = load i64, i64* %134, align 8
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"* %1, %"struct.gfx::PathElement"* %133, i64 %135, i32 %80, i32 %81) #13
  br label %145

136:                                              ; preds = %2
  %137 = ptrtoint %"struct.gfx::PathElement"* %4 to i64
  %138 = ptrtoint %"struct.gfx::PathElement"* %6 to i64
  %139 = sub i64 %138, %137
  %140 = ashr exact i64 %139, 2
  %141 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 0, i32 1, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconSource", %"class.gfx::(anonymous namespace)::VectorIconSource"* %0, i64 0, i32 1, i32 2
  %144 = load i32, i32* %143, align 4
  tail call fastcc void @_ZN3gfx12_GLOBAL__N_19PaintPathEPNS_6CanvasEPKNS_11PathElementEmij(%"class.gfx::Canvas"* %1, %"struct.gfx::PathElement"* %4, i64 %140, i32 %142, i32 %144)
  br label %145

145:                                              ; preds = %68, %130, %136
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gfx15ImageSkiaSourceD2Ev(%"class.gfx::ImageSkiaSource"*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !19
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !19
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !19
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #5

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12LazyInstanceIN3gfx12_GLOBAL__N_115VectorIconCacheENS_8internal34DestructorAtExitLazyInstanceTraitsIS3_EEE6OnExitEPv(i8*) #0 align 2 {
  %2 = bitcast i8* %0 to i64*
  %3 = load atomic i64, i64* %2 monotonic, align 8
  %4 = inttoptr i64 %3 to %"class.gfx::(anonymous namespace)::VectorIconCache"*
  %5 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %4, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.gfx::(anonymous namespace)::VectorIconCache", %"class.gfx::(anonymous namespace)::VectorIconCache"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_end_node"* %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %5, %"class.std::__1::__tree_node"* %8) #13
  store atomic volatile i64 0, i64* %2 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* readnone, %"class.std::__1::__tree_node"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #13
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call fastcc void @_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #13
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN3gfx9ImageSkiaD1Ev(%"class.gfx::ImageSkia"* %10) #13
  %11 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %11) #14
  ret void

12:                                               ; preds = %2
  ret void
}

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.155"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14StringToDoubleENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPd(i8*, i64, double*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base14HexStringToIntENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPi(i8*, i64, i32*) local_unnamed_addr #2

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gfx12_GLOBAL__N_115VectorIconCache15GetOrCreateIconERKNS_15IconDescriptionE: argument 0"}
!4 = distinct !{!4, !"_ZN3gfx12_GLOBAL__N_115VectorIconCache15GetOrCreateIconERKNS_15IconDescriptionE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKS3_RS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISK_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIN3gfx15IconDescriptionENS2_9ImageSkiaEEENS_19__map_value_compareIS3_S5_NS2_12_GLOBAL__N_122CompareIconDescriptionELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKS3_RS4_EEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISK_EEEEEEDpOT_"}
!8 = !{!6, !3}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij: argument 0"}
!11 = distinct !{!11, !"_ZN3gfx16CreateVectorIconERKNS_10VectorIconEij"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3gfx17CanvasImageSource13MakeImageSkiaINS_12_GLOBAL__N_116VectorIconSourceEJRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERiRjEEENS_9ImageSkiaEDpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN3gfx17CanvasImageSource13MakeImageSkiaINS_12_GLOBAL__N_116VectorIconSourceEJRKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEERiRjEEENS_9ImageSkiaEDpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN3gfx12_GLOBAL__N_114PathFromSourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE: argument 0"}
!17 = distinct !{!17, !"_ZN3gfx12_GLOBAL__N_114PathFromSourceERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"}
!18 = !{!16, !13}
!19 = !{i8 0, i8 2}
