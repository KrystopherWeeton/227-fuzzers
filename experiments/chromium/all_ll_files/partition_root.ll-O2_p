; ModuleID = '../../base/allocator/partition_allocator/partition_root.cc'
source_filename = "../../base/allocator/partition_allocator/partition_root.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.base::internal::PCScan" = type <{ %"class.base::internal::PCScanScheduler", %"struct.std::__1::atomic.24", i8, [6 x i8] }>
%"class.base::internal::PCScanScheduler" = type { %"struct.base::internal::QuarantineData", %"class.base::internal::LimitBackend", %"class.base::internal::PCScanSchedulingBackend"* }
%"struct.base::internal::QuarantineData" = type { %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i64 }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i64 }
%"class.base::internal::LimitBackend" = type { %"class.base::internal::PCScanSchedulingBackend" }
%"class.base::internal::PCScanSchedulingBackend" = type { i32 (...)**, %"class.base::internal::PCScanScheduler"* }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i8 }
%"struct.base::PartitionRoot" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock", [4 x i8], [128 x %"struct.base::internal::PartitionBucket"], %"struct.base::internal::PartitionBucket", i8, [7 x i8], %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionSuperPageExtentEntry"*, %"struct.base::internal::PartitionDirectMapExtent"*, [16 x %"struct.base::internal::SlotSpanMetadata"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock" = type { %"class.base::internal::SpinningMutex" }
%"class.base::internal::SpinningMutex" = type { %"struct.std::__1::atomic" }
%"struct.base::internal::PartitionBucket" = type { %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::PartitionBucket"*, i16, i16, i8, i8 }>
%"class.base::internal::PartitionFreelistEntry" = type { %"struct.base::internal::EncodedPartitionFreelistEntry"*, i64 }
%"struct.base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8], [8 x i8] }
%"struct.base::internal::PartitionSuperPageExtentEntry" = type { %"struct.base::PartitionRoot"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry"* }
%"struct.base::internal::PartitionDirectMapExtent" = type { %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionBucket"*, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::PartitionRoot.16" = type <{ i8, i8, i8, i8, i8, i8, i8, %"class.base::internal::MaybeSpinLock.17", [5 x i8], [128 x %"struct.base::internal::PartitionBucket.18"], %"struct.base::internal::PartitionBucket.18", i8, [7 x i8], %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", %"struct.std::__1::atomic.1", i8*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry.20"*, %"struct.base::internal::PartitionSuperPageExtentEntry.20"*, %"struct.base::internal::PartitionDirectMapExtent.21"*, [16 x %"struct.base::internal::SlotSpanMetadata.19"*], i16, [6 x i8], i64, %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::internal::MaybeSpinLock.17" = type { [4 x i8] }
%"struct.base::internal::PartitionBucket.18" = type { %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"*, i32, i32, i64 }
%"struct.base::internal::SlotSpanMetadata.19" = type <{ %"class.base::internal::PartitionFreelistEntry"*, %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::PartitionBucket.18"*, i16, i16, i8, i8 }>
%"struct.base::internal::PartitionSuperPageExtentEntry.20" = type { %"struct.base::PartitionRoot.16"*, i8*, i8*, %"struct.base::internal::PartitionSuperPageExtentEntry.20"* }
%"struct.base::internal::PartitionDirectMapExtent.21" = type { %"struct.base::internal::PartitionDirectMapExtent.21"*, %"struct.base::internal::PartitionDirectMapExtent.21"*, %"struct.base::internal::PartitionBucket.18"*, i64 }
%"class.base::internal::ThreadCache" = type { [89 x %"struct.base::internal::ThreadCache::Bucket"], i64, %"struct.std::__1::atomic.11", %"struct.base::ThreadCacheStats", %"struct.base::PartitionRoot"*, %"class.base::internal::ThreadCache"*, %"class.base::internal::ThreadCache"* }
%"struct.base::internal::ThreadCache::Bucket" = type <{ %"class.base::internal::PartitionFreelistEntry"*, i8, %"struct.std::__1::atomic.6", i16, [4 x i8] }>
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i8 }
%"struct.base::ThreadCacheStats" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [129 x i64], [129 x i64] }
%"struct.base::internal::PartitionPage" = type { %union.anon, i8, i8 }
%union.anon = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>
%"struct.base::internal::SubsequentPageMetadata" = type { i64 }
%"struct.base::internal::DeferredUnmap" = type { i8*, i64 }
%"class.base::internal::ObjectBitmap" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [2048 x i64] }
%"class.base::PartitionStatsDumper" = type { i32 (...)** }
%"struct.base::PartitionBucketMemoryStats" = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.base::PartitionMemoryStats" = type { i64, i64, i64, i64, i64, i64, i8, %"struct.base::ThreadCacheStats", %"struct.base::ThreadCacheStats" }
%"class.base::internal::ThreadCacheRegistry" = type <{ %"class.base::internal::MaybeSpinLock", [4 x i8], %"class.base::internal::ThreadCache"*, %"class.base::TimeDelta", i8, [7 x i8] }>
%"class.base::TimeDelta" = type { i64 }
%"struct.base::internal::PartitionPage.37" = type { %union.anon.38, i8, i8 }
%union.anon.38 = type <{ %"struct.base::internal::SubsequentPageMetadata", [22 x i8] }>

$_ZN4base13PartitionRootILb1EEC5ENS_16PartitionOptionsE = comdat any

$_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE = comdat any

$_ZN4base13PartitionRootILb1EED5Ev = comdat any

$_ZN4base13PartitionRootILb1EE19ConfigureLazyCommitEv = comdat any

$_ZN4base13PartitionRootILb1EE15IsValidSlotSpanEPNS_8internal16SlotSpanMetadataILb1EEE = comdat any

$_ZN4base13PartitionRootILb1EE12FromSlotSpanEPNS_8internal16SlotSpanMetadataILb1EEE = comdat any

$_ZN4base13PartitionRootILb1EE13FromSuperPageEPc = comdat any

$_ZN4base13PartitionRootILb1EE26FromPointerInNormalBucketsEPc = comdat any

$_ZN4base13PartitionRootILb1EE22IncreaseCommittedPagesEm = comdat any

$_ZN4base13PartitionRootILb1EE22DecreaseCommittedPagesEm = comdat any

$_ZN4base13PartitionRootILb1EE26DecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb1EE26RecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb1EE29TryRecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb1EE11OutOfMemoryEm = comdat any

$_ZN4base13PartitionRootILb1EE17AlignedAllocFlagsEimm = comdat any

$_ZNK4base13PartitionRootILb1EE22AdjustSizeForExtrasAddEm = comdat any

$_ZNK4base13PartitionRootILb1EE27AdjustSizeForExtrasSubtractEm = comdat any

$_ZN4base13PartitionRootILb1EE17AllocFlagsNoHooksEimm = comdat any

$_ZN4base13PartitionRootILb1EE18AllocFlagsInternalEimmPKc = comdat any

$_ZN4base13PartitionRootILb1EE5AllocEmPKc = comdat any

$_ZN4base13PartitionRootILb1EE10AllocFlagsEimPKc = comdat any

$_ZN4base13PartitionRootILb1EE17SizeToBucketIndexEm = comdat any

$_ZNK4base13PartitionRootILb1EE19IsQuarantineEnabledEv = comdat any

$_ZN4base13PartitionRootILb1EE8RawAllocEPNS_8internal15PartitionBucketILb1EEEimmPmPb = comdat any

$_ZNK4base13PartitionRootILb1EE25AdjustPointerForExtrasAddEPv = comdat any

$_ZN4base13PartitionRootILb1EE7ReallocEPvmPKc = comdat any

$_ZN4base13PartitionRootILb1EE12ReallocFlagsEiPvmPKc = comdat any

$_ZN4base13PartitionRootILb1EE10TryReallocEPvmPKc = comdat any

$_ZN4base13PartitionRootILb1EE4FreeEPv = comdat any

$_ZN4base13PartitionRootILb1EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb1EEEm = comdat any

$_ZN4base13PartitionRootILb1EE17TryReallocInPlaceEPvPNS_8internal16SlotSpanMetadataILb1EEEm = comdat any

$_ZN4base13PartitionRootILb1EE11FreeNoHooksEPv = comdat any

$_ZNK4base13PartitionRootILb1EE20IsDirectMappedBucketEPNS_8internal15PartitionBucketILb1EEE = comdat any

$_ZN4base13PartitionRootILb1EE20FreeNoHooksImmediateEPvPNS_8internal16SlotSpanMetadataILb1EEE = comdat any

$_ZNK4base13PartitionRootILb1EE30AdjustPointerForExtrasSubtractEPv = comdat any

$_ZN4base13PartitionRootILb1EE22RawFreeWithThreadCacheEPvPNS_8internal16SlotSpanMetadataILb1EEE = comdat any

$_ZN4base13PartitionRootILb1EE13GetUsableSizeEPv = comdat any

$_ZNK4base13PartitionRootILb1EE25AllocationCapacityFromPtrEPv = comdat any

$_ZNK4base13PartitionRootILb1EE35AllocationCapacityFromRequestedSizeEm = comdat any

$_ZNK4base13PartitionRootILb1EE9bucket_atEm = comdat any

$_ZN4base13PartitionRootILb1EE20GetDirectMapSlotSizeEm = comdat any

$_ZN4base13PartitionRootILb1EE11PurgeMemoryEi = comdat any

$_ZN4base13PartitionRootILb1EE22DecommitEmptySlotSpansEv = comdat any

$_ZN4base13PartitionRootILb1EE9DumpStatsEPKcbPNS_20PartitionStatsDumperE = comdat any

$_ZN4base13PartitionRootILb1EE7RawFreeEPv = comdat any

$_ZN4base13PartitionRootILb1EE7RawFreeEPvPNS_8internal16SlotSpanMetadataILb1EEE = comdat any

$_ZNK4base13PartitionRootILb1EE24thread_cache_for_testingEv = comdat any

$_ZNK4base13PartitionRootILb1EE33get_total_size_of_committed_pagesEv = comdat any

$_ZNK4base13PartitionRootILb1EE10UseBRPPoolEv = comdat any

$_ZNK4base13PartitionRootILb1EE19IsQuarantineAllowedEv = comdat any

$_ZNK4base13PartitionRootILb1EE13IsScanEnabledEv = comdat any

$_ZN4base13PartitionRootILb1EE37GetDirectMapMetadataAndGuardPagesSizeEv = comdat any

$_ZN4base13PartitionRootILb1EE24GetDirectMapReservedSizeEm = comdat any

$_ZNK4base13PartitionRootILb1EE19AdjustSize0IfNeededEm = comdat any

$_ZN4base13PartitionRootILb1EE15AllocFromBucketEPNS_8internal15PartitionBucketILb1EEEimmPmPb = comdat any

$_ZN4base13PartitionRootILb1EE13RawFreeLockedEPv = comdat any

$_ZN4base13PartitionRootILb0EEC5ENS_16PartitionOptionsE = comdat any

$_ZN4base13PartitionRootILb0EE4InitENS_16PartitionOptionsE = comdat any

$_ZN4base13PartitionRootILb0EED5Ev = comdat any

$_ZN4base13PartitionRootILb0EE19ConfigureLazyCommitEv = comdat any

$_ZN4base13PartitionRootILb0EE15IsValidSlotSpanEPNS_8internal16SlotSpanMetadataILb0EEE = comdat any

$_ZN4base13PartitionRootILb0EE12FromSlotSpanEPNS_8internal16SlotSpanMetadataILb0EEE = comdat any

$_ZN4base13PartitionRootILb0EE13FromSuperPageEPc = comdat any

$_ZN4base13PartitionRootILb0EE26FromPointerInNormalBucketsEPc = comdat any

$_ZN4base13PartitionRootILb0EE22IncreaseCommittedPagesEm = comdat any

$_ZN4base13PartitionRootILb0EE22DecreaseCommittedPagesEm = comdat any

$_ZN4base13PartitionRootILb0EE26DecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb0EE26RecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb0EE29TryRecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE = comdat any

$_ZN4base13PartitionRootILb0EE11OutOfMemoryEm = comdat any

$_ZN4base13PartitionRootILb0EE17AlignedAllocFlagsEimm = comdat any

$_ZNK4base13PartitionRootILb0EE22AdjustSizeForExtrasAddEm = comdat any

$_ZNK4base13PartitionRootILb0EE27AdjustSizeForExtrasSubtractEm = comdat any

$_ZN4base13PartitionRootILb0EE17AllocFlagsNoHooksEimm = comdat any

$_ZN4base13PartitionRootILb0EE18AllocFlagsInternalEimmPKc = comdat any

$_ZN4base13PartitionRootILb0EE5AllocEmPKc = comdat any

$_ZN4base13PartitionRootILb0EE10AllocFlagsEimPKc = comdat any

$_ZN4base13PartitionRootILb0EE17SizeToBucketIndexEm = comdat any

$_ZNK4base13PartitionRootILb0EE19IsQuarantineEnabledEv = comdat any

$_ZN4base13PartitionRootILb0EE8RawAllocEPNS_8internal15PartitionBucketILb0EEEimmPmPb = comdat any

$_ZNK4base13PartitionRootILb0EE25AdjustPointerForExtrasAddEPv = comdat any

$_ZN4base13PartitionRootILb0EE7ReallocEPvmPKc = comdat any

$_ZN4base13PartitionRootILb0EE12ReallocFlagsEiPvmPKc = comdat any

$_ZN4base13PartitionRootILb0EE10TryReallocEPvmPKc = comdat any

$_ZN4base13PartitionRootILb0EE4FreeEPv = comdat any

$_ZN4base13PartitionRootILb0EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb0EEEm = comdat any

$_ZN4base13PartitionRootILb0EE17TryReallocInPlaceEPvPNS_8internal16SlotSpanMetadataILb0EEEm = comdat any

$_ZN4base13PartitionRootILb0EE11FreeNoHooksEPv = comdat any

$_ZNK4base13PartitionRootILb0EE20IsDirectMappedBucketEPNS_8internal15PartitionBucketILb0EEE = comdat any

$_ZN4base13PartitionRootILb0EE20FreeNoHooksImmediateEPvPNS_8internal16SlotSpanMetadataILb0EEE = comdat any

$_ZNK4base13PartitionRootILb0EE30AdjustPointerForExtrasSubtractEPv = comdat any

$_ZN4base13PartitionRootILb0EE22RawFreeWithThreadCacheEPvPNS_8internal16SlotSpanMetadataILb0EEE = comdat any

$_ZN4base13PartitionRootILb0EE13GetUsableSizeEPv = comdat any

$_ZNK4base13PartitionRootILb0EE25AllocationCapacityFromPtrEPv = comdat any

$_ZNK4base13PartitionRootILb0EE35AllocationCapacityFromRequestedSizeEm = comdat any

$_ZNK4base13PartitionRootILb0EE9bucket_atEm = comdat any

$_ZN4base13PartitionRootILb0EE20GetDirectMapSlotSizeEm = comdat any

$_ZN4base13PartitionRootILb0EE11PurgeMemoryEi = comdat any

$_ZN4base13PartitionRootILb0EE22DecommitEmptySlotSpansEv = comdat any

$_ZN4base13PartitionRootILb0EE9DumpStatsEPKcbPNS_20PartitionStatsDumperE = comdat any

$_ZN4base13PartitionRootILb0EE7RawFreeEPv = comdat any

$_ZN4base13PartitionRootILb0EE7RawFreeEPvPNS_8internal16SlotSpanMetadataILb0EEE = comdat any

$_ZNK4base13PartitionRootILb0EE24thread_cache_for_testingEv = comdat any

$_ZNK4base13PartitionRootILb0EE33get_total_size_of_committed_pagesEv = comdat any

$_ZNK4base13PartitionRootILb0EE10UseBRPPoolEv = comdat any

$_ZNK4base13PartitionRootILb0EE19IsQuarantineAllowedEv = comdat any

$_ZNK4base13PartitionRootILb0EE13IsScanEnabledEv = comdat any

$_ZN4base13PartitionRootILb0EE37GetDirectMapMetadataAndGuardPagesSizeEv = comdat any

$_ZN4base13PartitionRootILb0EE24GetDirectMapReservedSizeEm = comdat any

$_ZNK4base13PartitionRootILb0EE19AdjustSize0IfNeededEm = comdat any

$_ZN4base13PartitionRootILb0EE15AllocFromBucketEPNS_8internal15PartitionBucketILb0EEEimmPmPb = comdat any

$_ZN4base13PartitionRootILb0EE13RawFreeLockedEPv = comdat any

@.str = private unnamed_addr constant [97 x i8] c"../../base/allocator/partition_allocator/partition_root.cc(587) Check failed: !with_thread_cache\00", align 1
@_ZN4base8internal23g_oom_handling_functionE = external local_unnamed_addr global void (i64)*, align 8
@.str.2 = private unnamed_addr constant [114 x i8] c"../../base/allocator/partition_allocator/partition_root.h(1603) Check failed: base::bits::IsPowerOfTwo(alignment)\00", align 1
@.str.3 = private unnamed_addr constant [114 x i8] c"../../base/allocator/partition_allocator/partition_root.h(1605) Check failed: alignment <= kMaxSupportedAlignment\00", align 1
@.str.4 = private unnamed_addr constant [139 x i8] c"../../base/allocator/partition_allocator/partition_root.h(1608) Check failed: alignment <= PartitionPageSize() || raw_size <= kMaxBucketed\00", align 1
@.str.5 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.6 = private unnamed_addr constant [132 x i8] c"../../base/allocator/partition_allocator/partition_root.h(1653) Check failed: !(reinterpret_cast<uintptr_t>(ptr) & (alignment - 1))\00", align 1
@.str.8 = private unnamed_addr constant [119 x i8] c"../../base/allocator/partition_allocator/partition_root.cc(996) Check failed: before < std::numeric_limits<int>::max()\00", align 1
@_ZN4base19PartitionAllocHooks14hooks_enabled_E = external local_unnamed_addr global %"struct.std::__1::atomic.11", align 1
@_ZN4base8internal6PCScan9instance_E = external global %"class.base::internal::PCScan", align 8
@_ZN4base8internal18g_thread_cache_keyE = external local_unnamed_addr global i32, align 4
@_ZN4base8internal11ThreadCache28largest_active_bucket_index_E = external local_unnamed_addr global i16, align 2
@_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup = internal unnamed_addr constant { [128 x i64], [521 x i16] } { [128 x i64] [i64 16, i64 18, i64 20, i64 22, i64 24, i64 26, i64 28, i64 30, i64 32, i64 36, i64 40, i64 44, i64 48, i64 52, i64 56, i64 60, i64 64, i64 72, i64 80, i64 88, i64 96, i64 104, i64 112, i64 120, i64 128, i64 144, i64 160, i64 176, i64 192, i64 208, i64 224, i64 240, i64 256, i64 288, i64 320, i64 352, i64 384, i64 416, i64 448, i64 480, i64 512, i64 576, i64 640, i64 704, i64 768, i64 832, i64 896, i64 960, i64 1024, i64 1152, i64 1280, i64 1408, i64 1536, i64 1664, i64 1792, i64 1920, i64 2048, i64 2304, i64 2560, i64 2816, i64 3072, i64 3328, i64 3584, i64 3840, i64 4096, i64 4608, i64 5120, i64 5632, i64 6144, i64 6656, i64 7168, i64 7680, i64 8192, i64 9216, i64 10240, i64 11264, i64 12288, i64 13312, i64 14336, i64 15360, i64 16384, i64 18432, i64 20480, i64 22528, i64 24576, i64 26624, i64 28672, i64 30720, i64 32768, i64 36864, i64 40960, i64 45056, i64 49152, i64 53248, i64 57344, i64 61440, i64 65536, i64 73728, i64 81920, i64 90112, i64 98304, i64 106496, i64 114688, i64 122880, i64 131072, i64 147456, i64 163840, i64 180224, i64 196608, i64 212992, i64 229376, i64 245760, i64 262144, i64 294912, i64 327680, i64 360448, i64 393216, i64 425984, i64 458752, i64 491520, i64 524288, i64 589824, i64 655360, i64 720896, i64 786432, i64 851968, i64 917504, i64 983040], [521 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 8, i16 12, i16 12, i16 12, i16 12, i16 16, i16 16, i16 16, i16 16, i16 18, i16 18, i16 20, i16 20, i16 22, i16 22, i16 24, i16 24, i16 25, i16 26, i16 27, i16 28, i16 29, i16 30, i16 31, i16 32, i16 33, i16 34, i16 35, i16 36, i16 37, i16 38, i16 39, i16 40, i16 41, i16 42, i16 43, i16 44, i16 45, i16 46, i16 47, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 58, i16 59, i16 60, i16 61, i16 62, i16 63, i16 64, i16 65, i16 66, i16 67, i16 68, i16 69, i16 70, i16 71, i16 72, i16 73, i16 74, i16 75, i16 76, i16 77, i16 78, i16 79, i16 80, i16 81, i16 82, i16 83, i16 84, i16 85, i16 86, i16 87, i16 88, i16 89, i16 90, i16 91, i16 92, i16 93, i16 94, i16 95, i16 96, i16 97, i16 98, i16 99, i16 100, i16 101, i16 102, i16 103, i16 104, i16 105, i16 106, i16 107, i16 108, i16 109, i16 110, i16 111, i16 112, i16 113, i16 114, i16 115, i16 116, i16 117, i16 118, i16 119, i16 120, i16 121, i16 122, i16 123, i16 124, i16 125, i16 126, i16 127, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128, i16 128] }, align 8
@_ZN4base12_GLOBAL__N_116kOrderIndexShiftE = internal unnamed_addr constant [65 x i8] c"\00\00\00\00\00\01\02\03\04\05\06\07\08\09\0A\0B\0C\0D\0E\0F\10\11\12\13\14\15\16\17\18\19\1A\1B\1C\1D\1E\1F !\22#$%&'()*+,-./0123456789:;<", align 16
@_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE = internal unnamed_addr constant [65 x i64] [i64 0, i64 0, i64 0, i64 0, i64 0, i64 1, i64 3, i64 7, i64 15, i64 31, i64 63, i64 127, i64 255, i64 511, i64 1023, i64 2047, i64 4095, i64 8191, i64 16383, i64 32767, i64 65535, i64 131071, i64 262143, i64 524287, i64 1048575, i64 2097151, i64 4194303, i64 8388607, i64 16777215, i64 33554431, i64 67108863, i64 134217727, i64 268435455, i64 536870911, i64 1073741823, i64 2147483647, i64 4294967295, i64 8589934591, i64 17179869183, i64 34359738367, i64 68719476735, i64 137438953471, i64 274877906943, i64 549755813887, i64 1099511627775, i64 2199023255551, i64 4398046511103, i64 8796093022207, i64 17592186044415, i64 35184372088831, i64 70368744177663, i64 140737488355327, i64 281474976710655, i64 562949953421311, i64 1125899906842623, i64 2251799813685247, i64 4503599627370495, i64 9007199254740991, i64 18014398509481983, i64 36028797018963967, i64 72057594037927935, i64 144115188075855871, i64 288230376151711743, i64 576460752303423487, i64 1152921504606846975], align 16
@_ZN4base12_GLOBAL__N_120g_global_init_calledE = internal global %"struct.std::__1::atomic.11" zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [87 x i8] c"../../base/allocator/partition_allocator/partition_root.cc(129) Check failed: err == 0\00", align 1
@.str.10 = private unnamed_addr constant [105 x i8] c"../../base/allocator/partition_allocator/partition_page.h(549) Check failed: slot_start != freelist_head\00", align 1

@_ZN4base13PartitionRootILb1EEC1ENS_16PartitionOptionsE = weak_odr hidden unnamed_addr alias void (%"struct.base::PartitionRoot"*, i40), void (%"struct.base::PartitionRoot"*, i40)* @_ZN4base13PartitionRootILb1EEC2ENS_16PartitionOptionsE
@_ZN4base13PartitionRootILb1EED1Ev = weak_odr hidden unnamed_addr alias void (%"struct.base::PartitionRoot"*), void (%"struct.base::PartitionRoot"*)* @_ZN4base13PartitionRootILb1EED2Ev
@_ZN4base13PartitionRootILb0EEC1ENS_16PartitionOptionsE = weak_odr hidden unnamed_addr alias void (%"struct.base::PartitionRoot.16"*, i40), void (%"struct.base::PartitionRoot.16"*, i40)* @_ZN4base13PartitionRootILb0EEC2ENS_16PartitionOptionsE
@_ZN4base13PartitionRootILb0EED1Ev = weak_odr hidden unnamed_addr alias void (%"struct.base::PartitionRoot.16"*), void (%"struct.base::PartitionRoot.16"*)* @_ZN4base13PartitionRootILb0EED2Ev

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EEC2ENS_16PartitionOptionsE(%"struct.base::PartitionRoot"*, i40) unnamed_addr #0 comdat($_ZN4base13PartitionRootILb1EEC5ENS_16PartitionOptionsE) align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  store i8 0, i8* %3, align 8
  %4 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  store i8 0, i8* %5, align 2
  %6 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 3
  store i8 1, i8* %6, align 1
  %7 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 4
  %8 = getelementptr %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  %9 = bitcast %"struct.base::internal::PartitionBucket"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 5120, i1 false)
  %10 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 12
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 26
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %13, align 4
  %14 = bitcast i64* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 202, i1 false)
  tail call void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"* %0, i40 %1)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot"*, i40) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %18, %2
  %7 = phi i32 [ 0, %2 ], [ %19, %18 ]
  %8 = phi i32 [ 1, %2 ], [ %22, %18 ]
  %9 = load atomic i32, i32* %5 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14, !prof !2

11:                                               ; preds = %6
  %12 = cmpxchg weak i32* %5, i32 0, i32 1 acquire monotonic
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %29, label %14, !prof !3

14:                                               ; preds = %11, %6
  %15 = icmp sgt i32 %8, 0
  br i1 %15, label %24, label %18

16:                                               ; preds = %24
  %17 = add i32 %8, %7
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i32 [ %7, %14 ], [ %17, %16 ]
  %20 = shl i32 %8, 1
  %21 = icmp slt i32 %20, 64
  %22 = select i1 %21, i32 %20, i32 64
  %23 = icmp slt i32 %19, 1000
  br i1 %23, label %6, label %28

24:                                               ; preds = %14, %24
  %25 = phi i32 [ %26, %24 ], [ 0, %14 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %26 = add nuw nsw i32 %25, 1
  %27 = icmp eq i32 %26, %8
  br i1 %27, label %16, label %24

28:                                               ; preds = %18
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %4) #12
  br label %29

29:                                               ; preds = %11, %28
  %30 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 12
  %31 = load i8, i8* %30, align 8, !range !5
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %91

33:                                               ; preds = %29
  %34 = trunc i40 %1 to i8
  tail call void @_ZN4base8internal21PartitionAddressSpace4InitEv() #12
  %35 = icmp eq i8 %34, 1
  %36 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 4
  %37 = zext i1 %35 to i8
  store i8 %37, i8* %36, align 4
  %38 = and i40 %1, 4278190080
  %39 = icmp eq i40 %38, 16777216
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 5
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 1
  %42 = and i40 %1, -4294967296
  %43 = icmp eq i40 %42, 4294967296
  %44 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 6
  %45 = zext i1 %43 to i8
  store i8 %45, i8* %44, align 2
  %46 = and i40 %1, 16711680
  %47 = icmp ne i40 %46, 0
  %48 = zext i1 %47 to i8
  %49 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  store i8 %48, i8* %49, align 8
  %50 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 11
  %51 = bitcast %"struct.base::internal::PartitionBucket"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 40, i1 false)
  %52 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #12
  %53 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %50, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* %52, %"struct.base::internal::SlotSpanMetadata"** %53, align 8
  %54 = ptrtoint %"struct.base::PartitionRoot"* %0 to i64
  %55 = xor i64 %54, -1
  %56 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 26
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  br label %58

58:                                               ; preds = %146, %33
  %59 = phi %"struct.base::internal::PartitionBucket"* [ %57, %33 ], [ %148, %146 ]
  %60 = phi i64 [ 2, %33 ], [ %149, %146 ]
  %61 = phi i64 [ 16, %33 ], [ %147, %146 ]
  %62 = phi i64 [ 0, %33 ], [ %150, %146 ]
  %63 = trunc i64 %61 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %59, i32 %63) #12
  %64 = and i64 %61, 15
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %68, label %66

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %67, align 8
  br label %68

68:                                               ; preds = %58, %66
  %69 = add i64 %61, %60
  %70 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 1
  %71 = trunc i64 %69 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %70, i32 %71) #12
  %72 = and i64 %69, 15
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %98, label %96

74:                                               ; preds = %146
  tail call void @_ZN4base8internal11ThreadCache35EnsureThreadSpecificDataInitializedEv() #12
  %75 = and i40 %1, 65280
  %76 = icmp eq i40 %75, 256
  %77 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %78 = zext i1 %76 to i8
  store i8 %78, i8* %77, align 2
  br i1 %76, label %79, label %80

79:                                               ; preds = %74
  tail call void @_ZN4base8internal11ThreadCache4InitEPNS_13PartitionRootILb1EEE(%"struct.base::PartitionRoot"* %0) #12
  br label %80

80:                                               ; preds = %79, %74
  store i8 1, i8* %30, align 8
  %81 = atomicrmw xchg i32* %5, i32 0 release
  %82 = icmp eq i32 %81, 2
  br i1 %82, label %83, label %84, !prof !6

83:                                               ; preds = %80
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %4) #12
  br label %84

84:                                               ; preds = %80, %83
  %85 = cmpxchg i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base12_GLOBAL__N_120g_global_init_calledE, i64 0, i32 0, i32 0, i32 0, i32 0), i8 0, i8 1 seq_cst seq_cst
  %86 = extractvalue { i8, i1 } %85, 1
  br i1 %86, label %87, label %95

87:                                               ; preds = %84
  %88 = tail call i32 @pthread_atfork(void ()* nonnull @_ZN4base12_GLOBAL__N_118BeforeForkInParentEv, void ()* nonnull @_ZN4base12_GLOBAL__N_117AfterForkInParentEv, void ()* nonnull @_ZN4base12_GLOBAL__N_116AfterForkInChildEv) #12
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %95, label %90, !prof !3

90:                                               ; preds = %87
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %95

91:                                               ; preds = %29
  %92 = atomicrmw xchg i32* %5, i32 0 release
  %93 = icmp eq i32 %92, 2
  br i1 %93, label %94, label %95, !prof !6

94:                                               ; preds = %91
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %4) #12
  br label %95

95:                                               ; preds = %94, %91, %90, %87, %84
  ret void

96:                                               ; preds = %68
  %97 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %70, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %97, align 8
  br label %98

98:                                               ; preds = %96, %68
  %99 = add i64 %69, %60
  %100 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 2
  %101 = trunc i64 %99 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %100, i32 %101) #12
  %102 = and i64 %99, 15
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %106, label %104

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %100, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %105, align 8
  br label %106

106:                                              ; preds = %104, %98
  %107 = add i64 %99, %60
  %108 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 3
  %109 = trunc i64 %107 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %108, i32 %109) #12
  %110 = and i64 %107, 15
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %114, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %108, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %113, align 8
  br label %114

114:                                              ; preds = %112, %106
  %115 = add i64 %107, %60
  %116 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 4
  %117 = trunc i64 %115 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %116, i32 %117) #12
  %118 = and i64 %115, 15
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %116, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %121, align 8
  br label %122

122:                                              ; preds = %120, %114
  %123 = add i64 %115, %60
  %124 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 5
  %125 = trunc i64 %123 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %124, i32 %125) #12
  %126 = and i64 %123, 15
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %124, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %129, align 8
  br label %130

130:                                              ; preds = %128, %122
  %131 = add i64 %123, %60
  %132 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 6
  %133 = trunc i64 %131 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %132, i32 %133) #12
  %134 = and i64 %131, 15
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %138, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %132, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %137, align 8
  br label %138

138:                                              ; preds = %136, %130
  %139 = add i64 %131, %60
  %140 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 7
  %141 = trunc i64 %139 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"* %140, i32 %141) #12
  %142 = and i64 %139, 15
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %140, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %145, align 8
  br label %146

146:                                              ; preds = %144, %138
  %147 = add i64 %139, %60
  %148 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %59, i64 8
  %149 = shl i64 %60, 1
  %150 = add nuw nsw i64 %62, 1
  %151 = icmp eq i64 %150, 16
  br i1 %151, label %74, label %58
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EED2Ev(%"struct.base::PartitionRoot"*) unnamed_addr #0 comdat($_ZN4base13PartitionRootILb1EED5Ev) align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str, i64 0, i64 0)) #12
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN7logging8RawCheckEPKc(i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8internal21PartitionAddressSpace4InitEv() local_unnamed_addr #2

declare %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() local_unnamed_addr #2

declare void @_ZN4base8internal15PartitionBucketILb1EE4InitEj(%"struct.base::internal::PartitionBucket"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache35EnsureThreadSpecificDataInitializedEv() local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache4InitEPNS_13PartitionRootILb1EEE(%"struct.base::PartitionRoot"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE19ConfigureLazyCommitEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb1EE15IsValidSlotSpanEPNS_8internal16SlotSpanMetadataILb1EEE(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %0 to i64
  %3 = and i64 %2, -4096
  %4 = inttoptr i64 %3 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %5 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %4, i64 0, i32 0
  %6 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %5, align 4096
  %7 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %6, i64 0, i32 26
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.base::PartitionRoot"* %6 to i64
  %10 = xor i64 %9, -1
  %11 = icmp eq i64 %8, %10
  ret i1 %11
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot"* @_ZN4base13PartitionRootILb1EE12FromSlotSpanEPNS_8internal16SlotSpanMetadataILb1EEE(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %0 to i64
  %3 = and i64 %2, -4096
  %4 = inttoptr i64 %3 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %5 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %4, i64 0, i32 0
  %6 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %5, align 4096
  ret %"struct.base::PartitionRoot"* %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot"* @_ZN4base13PartitionRootILb1EE13FromSuperPageEPc(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = add i64 %2, 4096
  %4 = inttoptr i64 %3 to %"struct.base::PartitionRoot"**
  %5 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %4, align 8
  ret %"struct.base::PartitionRoot"* %5
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot"* @_ZN4base13PartitionRootILb1EE26FromPointerInNormalBucketsEPc(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -2097152
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"struct.base::PartitionRoot"**
  %6 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %5, align 4096
  ret %"struct.base::PartitionRoot"* %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE22IncreaseCommittedPagesEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i64* %3, i64 %1 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE22DecreaseCommittedPagesEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i64* %3, i64 %1 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE26DecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 %3) #12
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i64* %5, i64 %2 monotonic
  ret void
}

declare void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE26RecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 2, i32 %3) #12
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i64* %5, i64 %2 monotonic
  ret void
}

declare void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb1EE29TryRecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 2, i32 %3) #12
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 %2 monotonic
  br label %9

9:                                                ; preds = %6, %4
  ret i1 %5
}

declare zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: noinline noreturn nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE11OutOfMemoryEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = load void (i64)*, void (i64)** @_ZN4base8internal23g_oom_handling_functionE, align 8
  %4 = icmp eq void (i64)* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void %3(i64 %1) #12
  br label %6

6:                                                ; preds = %2, %5
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #13
  unreachable
}

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64) unnamed_addr #4 {
  tail call void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() #12
  tail call void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64 %0) #12
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !7
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !8
  unreachable
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE17AlignedAllocFlagsEimm(%"struct.base::PartitionRoot"*, i32, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i8, align 1
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = tail call i64 @llvm.ctpop.i64(i64 %2) #12, !range !9
  %11 = icmp eq i64 %10, 1
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %4
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %13

13:                                               ; preds = %4, %12
  %14 = icmp ugt i64 %2, 1048576
  br i1 %14, label %15, label %16, !prof !6

15:                                               ; preds = %13
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %16

16:                                               ; preds = %13, %15
  %17 = icmp ugt i64 %2, 16384
  %18 = icmp ugt i64 %3, 983040
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %21, !prof !6

20:                                               ; preds = %16
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %21

21:                                               ; preds = %16, %20
  br i1 %17, label %36, label %22

22:                                               ; preds = %21
  %23 = icmp ult i64 %3, %2
  br i1 %23, label %29, label %24, !prof !6

24:                                               ; preds = %22
  %25 = add i64 %3, -1
  %26 = tail call i64 @llvm.ctlz.i64(i64 %25, i1 false) #12, !range !9
  %27 = sub nuw nsw i64 64, %26
  %28 = shl i64 1, %27
  br label %29

29:                                               ; preds = %22, %24
  %30 = phi i64 [ %28, %24 ], [ %2, %22 ]
  %31 = icmp ult i64 %30, %3
  br i1 %31, label %32, label %36, !prof !6

32:                                               ; preds = %29
  %33 = and i32 %1, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %567

35:                                               ; preds = %32
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

36:                                               ; preds = %21, %29
  %37 = phi i64 [ %30, %29 ], [ %3, %21 ]
  %38 = select i1 %17, i64 %2, i64 16384
  %39 = and i32 %1, 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %294, label %41

41:                                               ; preds = %36
  %42 = tail call i64 @llvm.ctlz.i64(i64 %37, i1 false) #12, !range !9
  %43 = sub nuw nsw i64 64, %42
  %44 = and i64 %43, 255
  %45 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %44
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i64
  %48 = lshr i64 %37, %47
  %49 = and i64 %48, 7
  %50 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %44
  %51 = load i64, i64* %50, align 8
  %52 = and i64 %51, %37
  %53 = shl nuw nsw i64 %44, 3
  %54 = or i64 %49, %53
  %55 = icmp ne i64 %52, 0
  %56 = zext i1 %55 to i64
  %57 = add nuw nsw i64 %54, %56
  %58 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %57
  %59 = load i16, i16* %58, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %60 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %61 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %62 = load i8, i8* %61, align 8
  %63 = icmp eq i8 %62, 2
  br i1 %63, label %64, label %68

64:                                               ; preds = %41
  %65 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %66 = icmp eq i8 %65, 2
  br i1 %66, label %67, label %68, !prof !6

67:                                               ; preds = %64
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %68

68:                                               ; preds = %67, %64, %41
  %69 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %70 = load i8, i8* %69, align 2, !range !5
  %71 = icmp ne i8 %70, 0
  %72 = icmp ult i64 %38, 16385
  %73 = and i1 %72, %71
  br i1 %73, label %74, label %220, !prof !10

74:                                               ; preds = %68
  %75 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %76 = tail call i8* @pthread_getspecific(i32 %75) #12
  %77 = bitcast i8* %76 to %"class.base::internal::ThreadCache"*
  %78 = icmp ugt i8* %76, inttoptr (i64 1 to i8*)
  br i1 %78, label %79, label %147, !prof !3

79:                                               ; preds = %74
  %80 = zext i16 %59 to i64
  %81 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 3, i32 12, i64 %80
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  %84 = getelementptr inbounds i8, i8* %76, i64 1440
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  %88 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %89 = icmp ult i16 %88, %59
  br i1 %89, label %90, label %99, !prof !6

90:                                               ; preds = %79
  %91 = getelementptr inbounds i8, i8* %76, i64 1472
  %92 = bitcast i8* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %92, align 8
  %95 = getelementptr inbounds i8, i8* %76, i64 1456
  %96 = bitcast i8* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %96, align 8
  br label %154

99:                                               ; preds = %79
  %100 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 0
  %101 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %102 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %101, null
  br i1 %102, label %108, label %103, !prof !6

103:                                              ; preds = %99
  %104 = getelementptr inbounds i8, i8* %76, i64 1448
  %105 = bitcast i8* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, 1
  store i64 %107, i64* %105, align 8
  br label %116

108:                                              ; preds = %99
  %109 = getelementptr inbounds i8, i8* %76, i64 1456
  %110 = bitcast i8* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8
  %112 = add <2 x i64> %111, <i64 1, i64 1>
  %113 = bitcast i8* %109 to <2 x i64>*
  store <2 x i64> %112, <2 x i64>* %113, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %77, i64 %80) #12
  %114 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %115 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %114, null
  br i1 %115, label %154, label %116, !prof !6

116:                                              ; preds = %108, %103
  %117 = phi %"class.base::internal::PartitionFreelistEntry"* [ %114, %108 ], [ %101, %103 ]
  %118 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %117, i64 0, i32 0
  %119 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %118, align 8
  %120 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %119, null
  %121 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %119 to i64
  br i1 %120, label %122, label %124

122:                                              ; preds = %116
  %123 = tail call i64 @llvm.bswap.i64(i64 %121) #12
  br label %133

124:                                              ; preds = %116
  %125 = xor i64 %121, -1
  %126 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %117, i64 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp eq i64 %127, %125
  br i1 %128, label %130, label %129, !prof !3

129:                                              ; preds = %124
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

130:                                              ; preds = %124
  %131 = tail call i64 @llvm.bswap.i64(i64 %121) #12
  %132 = inttoptr i64 %131 to i8*
  tail call void @llvm.prefetch(i8* nonnull %132, i32 0, i32 3, i32 1) #12
  br label %133

133:                                              ; preds = %130, %122
  %134 = phi i64 [ %123, %122 ], [ %131, %130 ]
  %135 = inttoptr i64 %134 to %"class.base::internal::PartitionFreelistEntry"*
  %136 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 1
  %137 = load i8, i8* %136, align 8
  %138 = add i8 %137, -1
  store i8 %138, i8* %136, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %135, %"class.base::internal::PartitionFreelistEntry"** %100, align 8
  %139 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %77, i64 0, i32 0, i64 %80, i32 3
  %140 = load i16, i16* %139, align 2
  %141 = zext i16 %140 to i64
  store i64 %141, i64* %6, align 8
  %142 = getelementptr inbounds i8, i8* %76, i64 1424
  %143 = bitcast i8* %142 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 %144, %141
  store i64 %145, i64* %143, align 8
  %146 = bitcast %"class.base::internal::PartitionFreelistEntry"* %117 to i8*
  br label %149

147:                                              ; preds = %74
  %148 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %59, i64* nonnull %6) #12
  br label %149

149:                                              ; preds = %147, %133
  %150 = phi i8* [ %148, %147 ], [ %146, %133 ]
  %151 = icmp eq i8* %150, null
  br i1 %151, label %152, label %290, !prof !6

152:                                              ; preds = %149
  %153 = zext i16 %59 to i64
  br label %154

154:                                              ; preds = %152, %108, %90
  %155 = phi i64 [ %153, %152 ], [ %80, %108 ], [ %80, %90 ]
  %156 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %155
  %157 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %158 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %157, i64 0, i32 0
  %159 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %160

160:                                              ; preds = %172, %154
  %161 = phi i32 [ 0, %154 ], [ %173, %172 ]
  %162 = phi i32 [ 1, %154 ], [ %176, %172 ]
  %163 = load atomic i32, i32* %159 monotonic, align 4
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %168, !prof !2

165:                                              ; preds = %160
  %166 = cmpxchg weak i32* %159, i32 0, i32 1 acquire monotonic
  %167 = extractvalue { i32, i1 } %166, 1
  br i1 %167, label %183, label %168, !prof !3

168:                                              ; preds = %165, %160
  %169 = icmp sgt i32 %162, 0
  br i1 %169, label %178, label %172

170:                                              ; preds = %178
  %171 = add i32 %162, %161
  br label %172

172:                                              ; preds = %170, %168
  %173 = phi i32 [ %161, %168 ], [ %171, %170 ]
  %174 = shl i32 %162, 1
  %175 = icmp slt i32 %174, 64
  %176 = select i1 %175, i32 %174, i32 64
  %177 = icmp slt i32 %173, 1000
  br i1 %177, label %160, label %182

178:                                              ; preds = %168, %178
  %179 = phi i32 [ %180, %178 ], [ 0, %168 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %180 = add nuw nsw i32 %179, 1
  %181 = icmp eq i32 %180, %162
  br i1 %181, label %170, label %178

182:                                              ; preds = %172
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %158) #12
  br label %183

183:                                              ; preds = %165, %182
  %184 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %156, i64 0, i32 0
  %185 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %184, align 8
  %186 = bitcast %"struct.base::internal::SlotSpanMetadata"* %185 to i8**
  %187 = load i8*, i8** %186, align 1
  %188 = icmp eq i8* %187, null
  br i1 %188, label %213, label %189, !prof !6

189:                                              ; preds = %183
  %190 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %185, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %191 = bitcast i8* %187 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %192 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %191, align 8
  %193 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %192, null
  %194 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %192 to i64
  br i1 %193, label %195, label %197

195:                                              ; preds = %189
  %196 = tail call i64 @llvm.bswap.i64(i64 %194) #12
  br label %207

197:                                              ; preds = %189
  %198 = xor i64 %194, -1
  %199 = getelementptr inbounds i8, i8* %187, i64 8
  %200 = bitcast i8* %199 to i64*
  %201 = load i64, i64* %200, align 8
  %202 = icmp eq i64 %201, %198
  br i1 %202, label %204, label %203, !prof !3

203:                                              ; preds = %197
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

204:                                              ; preds = %197
  %205 = tail call i64 @llvm.bswap.i64(i64 %194) #12
  %206 = inttoptr i64 %205 to i8*
  tail call void @llvm.prefetch(i8* nonnull %206, i32 0, i32 3, i32 1) #12
  br label %207

207:                                              ; preds = %204, %195
  %208 = phi i64 [ %196, %195 ], [ %205, %204 ]
  %209 = inttoptr i64 %208 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %209, %"class.base::internal::PartitionFreelistEntry"** %190, align 1
  %210 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %185, i64 0, i32 3
  %211 = load i16, i16* %210, align 1
  %212 = add i16 %211, 1
  store i16 %212, i16* %210, align 1
  br label %215

213:                                              ; preds = %183
  %214 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %156, %"struct.base::PartitionRoot"* %0, i32 0, i64 %37, i64 %38, i8* nonnull %5) #12
  br label %215

215:                                              ; preds = %213, %207
  %216 = phi i8* [ %187, %207 ], [ %214, %213 ]
  %217 = atomicrmw xchg i32* %159, i32 0 release
  %218 = icmp eq i32 %217, 2
  br i1 %218, label %219, label %287, !prof !6

219:                                              ; preds = %215
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %158) #12
  br label %287

220:                                              ; preds = %68
  %221 = zext i16 %59 to i64
  %222 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %221
  %223 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %224 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %223, i64 0, i32 0
  %225 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %226

226:                                              ; preds = %238, %220
  %227 = phi i32 [ 0, %220 ], [ %239, %238 ]
  %228 = phi i32 [ 1, %220 ], [ %242, %238 ]
  %229 = load atomic i32, i32* %225 monotonic, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %234, !prof !2

231:                                              ; preds = %226
  %232 = cmpxchg weak i32* %225, i32 0, i32 1 acquire monotonic
  %233 = extractvalue { i32, i1 } %232, 1
  br i1 %233, label %249, label %234, !prof !3

234:                                              ; preds = %231, %226
  %235 = icmp sgt i32 %228, 0
  br i1 %235, label %244, label %238

236:                                              ; preds = %244
  %237 = add i32 %228, %227
  br label %238

238:                                              ; preds = %236, %234
  %239 = phi i32 [ %227, %234 ], [ %237, %236 ]
  %240 = shl i32 %228, 1
  %241 = icmp slt i32 %240, 64
  %242 = select i1 %241, i32 %240, i32 64
  %243 = icmp slt i32 %239, 1000
  br i1 %243, label %226, label %248

244:                                              ; preds = %234, %244
  %245 = phi i32 [ %246, %244 ], [ 0, %234 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %246 = add nuw nsw i32 %245, 1
  %247 = icmp eq i32 %246, %228
  br i1 %247, label %236, label %244

248:                                              ; preds = %238
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %224) #12
  br label %249

249:                                              ; preds = %231, %248
  %250 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %222, i64 0, i32 0
  %251 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %250, align 8
  %252 = bitcast %"struct.base::internal::SlotSpanMetadata"* %251 to i8**
  %253 = load i8*, i8** %252, align 1
  %254 = icmp ne i8* %253, null
  %255 = and i1 %72, %254
  br i1 %255, label %256, label %280, !prof !3

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %251, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %258 = bitcast i8* %253 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %259 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %258, align 8
  %260 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %259, null
  %261 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %259 to i64
  br i1 %260, label %262, label %264

262:                                              ; preds = %256
  %263 = tail call i64 @llvm.bswap.i64(i64 %261) #12
  br label %274

264:                                              ; preds = %256
  %265 = xor i64 %261, -1
  %266 = getelementptr inbounds i8, i8* %253, i64 8
  %267 = bitcast i8* %266 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = icmp eq i64 %268, %265
  br i1 %269, label %271, label %270, !prof !3

270:                                              ; preds = %264
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

271:                                              ; preds = %264
  %272 = tail call i64 @llvm.bswap.i64(i64 %261) #12
  %273 = inttoptr i64 %272 to i8*
  tail call void @llvm.prefetch(i8* nonnull %273, i32 0, i32 3, i32 1) #12
  br label %274

274:                                              ; preds = %271, %262
  %275 = phi i64 [ %263, %262 ], [ %272, %271 ]
  %276 = inttoptr i64 %275 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %276, %"class.base::internal::PartitionFreelistEntry"** %257, align 1
  %277 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %251, i64 0, i32 3
  %278 = load i16, i16* %277, align 1
  %279 = add i16 %278, 1
  store i16 %279, i16* %277, align 1
  br label %282

280:                                              ; preds = %249
  %281 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %222, %"struct.base::PartitionRoot"* %0, i32 0, i64 %37, i64 %38, i8* nonnull %5) #12
  br label %282

282:                                              ; preds = %280, %274
  %283 = phi i8* [ %253, %274 ], [ %281, %280 ]
  %284 = atomicrmw xchg i32* %225, i32 0 release
  %285 = icmp eq i32 %284, 2
  br i1 %285, label %286, label %287, !prof !6

286:                                              ; preds = %282
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %224) #12
  br label %287

287:                                              ; preds = %286, %282, %219, %215
  %288 = phi i8* [ %216, %215 ], [ %216, %219 ], [ %283, %282 ], [ %283, %286 ]
  %289 = icmp eq i8* %288, null
  br i1 %289, label %292, label %290, !prof !6

290:                                              ; preds = %149, %287
  %291 = phi i8* [ %288, %287 ], [ %150, %149 ]
  br label %292

292:                                              ; preds = %287, %290
  %293 = phi i8* [ null, %287 ], [ %291, %290 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  br label %560

294:                                              ; preds = %36
  %295 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %295) #12
  store i8* null, i8** %9, align 8
  %296 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %297 = and i8 %296, 1
  %298 = icmp ne i8 %297, 0
  br i1 %298, label %299, label %303, !prof !6

299:                                              ; preds = %294
  %300 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %9, i32 0, i64 %37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)) #12
  br i1 %300, label %301, label %303

301:                                              ; preds = %299
  %302 = load i8*, i8** %9, align 8
  br label %556

303:                                              ; preds = %299, %294
  %304 = call i64 @llvm.ctlz.i64(i64 %37, i1 false) #12, !range !9
  %305 = sub nuw nsw i64 64, %304
  %306 = and i64 %305, 255
  %307 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i64
  %310 = lshr i64 %37, %309
  %311 = and i64 %310, 7
  %312 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %306
  %313 = load i64, i64* %312, align 8
  %314 = and i64 %313, %37
  %315 = shl nuw nsw i64 %306, 3
  %316 = or i64 %311, %315
  %317 = icmp ne i64 %314, 0
  %318 = zext i1 %317 to i64
  %319 = add nuw nsw i64 %316, %318
  %320 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %319
  %321 = load i16, i16* %320, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %7) #12
  store i8 0, i8* %7, align 1
  %322 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %322) #12
  store i64 -6148914691236517206, i64* %8, align 8
  %323 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %324 = load i8, i8* %323, align 8
  %325 = icmp eq i8 %324, 2
  br i1 %325, label %326, label %330

326:                                              ; preds = %303
  %327 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %328 = icmp eq i8 %327, 2
  br i1 %328, label %329, label %330, !prof !6

329:                                              ; preds = %326
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %330

330:                                              ; preds = %329, %326, %303
  %331 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %332 = load i8, i8* %331, align 2, !range !5
  %333 = icmp ne i8 %332, 0
  %334 = icmp ult i64 %38, 16385
  %335 = and i1 %334, %333
  br i1 %335, label %336, label %482, !prof !10

336:                                              ; preds = %330
  %337 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %338 = call i8* @pthread_getspecific(i32 %337) #12
  %339 = bitcast i8* %338 to %"class.base::internal::ThreadCache"*
  %340 = icmp ugt i8* %338, inttoptr (i64 1 to i8*)
  br i1 %340, label %341, label %409, !prof !3

341:                                              ; preds = %336
  %342 = zext i16 %321 to i64
  %343 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %339, i64 0, i32 3, i32 12, i64 %342
  %344 = load i64, i64* %343, align 8
  %345 = add i64 %344, 1
  store i64 %345, i64* %343, align 8
  %346 = getelementptr inbounds i8, i8* %338, i64 1440
  %347 = bitcast i8* %346 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = add i64 %348, 1
  store i64 %349, i64* %347, align 8
  %350 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %351 = icmp ult i16 %350, %321
  br i1 %351, label %352, label %361, !prof !6

352:                                              ; preds = %341
  %353 = getelementptr inbounds i8, i8* %338, i64 1472
  %354 = bitcast i8* %353 to i64*
  %355 = load i64, i64* %354, align 8
  %356 = add i64 %355, 1
  store i64 %356, i64* %354, align 8
  %357 = getelementptr inbounds i8, i8* %338, i64 1456
  %358 = bitcast i8* %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = add i64 %359, 1
  store i64 %360, i64* %358, align 8
  br label %416

361:                                              ; preds = %341
  %362 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %339, i64 0, i32 0, i64 %342, i32 0
  %363 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %362, align 8
  %364 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %363, null
  br i1 %364, label %370, label %365, !prof !6

365:                                              ; preds = %361
  %366 = getelementptr inbounds i8, i8* %338, i64 1448
  %367 = bitcast i8* %366 to i64*
  %368 = load i64, i64* %367, align 8
  %369 = add i64 %368, 1
  store i64 %369, i64* %367, align 8
  br label %378

370:                                              ; preds = %361
  %371 = getelementptr inbounds i8, i8* %338, i64 1456
  %372 = bitcast i8* %371 to <2 x i64>*
  %373 = load <2 x i64>, <2 x i64>* %372, align 8
  %374 = add <2 x i64> %373, <i64 1, i64 1>
  %375 = bitcast i8* %371 to <2 x i64>*
  store <2 x i64> %374, <2 x i64>* %375, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %339, i64 %342) #12
  %376 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %362, align 8
  %377 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %376, null
  br i1 %377, label %416, label %378, !prof !6

378:                                              ; preds = %370, %365
  %379 = phi %"class.base::internal::PartitionFreelistEntry"* [ %376, %370 ], [ %363, %365 ]
  %380 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %379, i64 0, i32 0
  %381 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %380, align 8
  %382 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %381, null
  %383 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %381 to i64
  br i1 %382, label %384, label %386

384:                                              ; preds = %378
  %385 = call i64 @llvm.bswap.i64(i64 %383) #12
  br label %395

386:                                              ; preds = %378
  %387 = xor i64 %383, -1
  %388 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %379, i64 0, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = icmp eq i64 %389, %387
  br i1 %390, label %392, label %391, !prof !3

391:                                              ; preds = %386
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

392:                                              ; preds = %386
  %393 = call i64 @llvm.bswap.i64(i64 %383) #12
  %394 = inttoptr i64 %393 to i8*
  call void @llvm.prefetch(i8* nonnull %394, i32 0, i32 3, i32 1) #12
  br label %395

395:                                              ; preds = %392, %384
  %396 = phi i64 [ %385, %384 ], [ %393, %392 ]
  %397 = inttoptr i64 %396 to %"class.base::internal::PartitionFreelistEntry"*
  %398 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %339, i64 0, i32 0, i64 %342, i32 1
  %399 = load i8, i8* %398, align 8
  %400 = add i8 %399, -1
  store i8 %400, i8* %398, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %397, %"class.base::internal::PartitionFreelistEntry"** %362, align 8
  %401 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %339, i64 0, i32 0, i64 %342, i32 3
  %402 = load i16, i16* %401, align 2
  %403 = zext i16 %402 to i64
  store i64 %403, i64* %8, align 8
  %404 = getelementptr inbounds i8, i8* %338, i64 1424
  %405 = bitcast i8* %404 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = sub i64 %406, %403
  store i64 %407, i64* %405, align 8
  %408 = bitcast %"class.base::internal::PartitionFreelistEntry"* %379 to i8*
  br label %411

409:                                              ; preds = %336
  %410 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %321, i64* nonnull %8) #12
  br label %411

411:                                              ; preds = %409, %395
  %412 = phi i8* [ %410, %409 ], [ %408, %395 ]
  %413 = icmp eq i8* %412, null
  br i1 %413, label %414, label %552, !prof !6

414:                                              ; preds = %411
  %415 = zext i16 %321 to i64
  br label %416

416:                                              ; preds = %414, %370, %352
  %417 = phi i64 [ %415, %414 ], [ %342, %370 ], [ %342, %352 ]
  %418 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %417
  %419 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %420 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %419, i64 0, i32 0
  %421 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %419, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %422

422:                                              ; preds = %434, %416
  %423 = phi i32 [ 0, %416 ], [ %435, %434 ]
  %424 = phi i32 [ 1, %416 ], [ %438, %434 ]
  %425 = load atomic i32, i32* %421 monotonic, align 4
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %430, !prof !2

427:                                              ; preds = %422
  %428 = cmpxchg weak i32* %421, i32 0, i32 1 acquire monotonic
  %429 = extractvalue { i32, i1 } %428, 1
  br i1 %429, label %445, label %430, !prof !3

430:                                              ; preds = %427, %422
  %431 = icmp sgt i32 %424, 0
  br i1 %431, label %440, label %434

432:                                              ; preds = %440
  %433 = add i32 %424, %423
  br label %434

434:                                              ; preds = %432, %430
  %435 = phi i32 [ %423, %430 ], [ %433, %432 ]
  %436 = shl i32 %424, 1
  %437 = icmp slt i32 %436, 64
  %438 = select i1 %437, i32 %436, i32 64
  %439 = icmp slt i32 %435, 1000
  br i1 %439, label %422, label %444

440:                                              ; preds = %430, %440
  %441 = phi i32 [ %442, %440 ], [ 0, %430 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %442 = add nuw nsw i32 %441, 1
  %443 = icmp eq i32 %442, %424
  br i1 %443, label %432, label %440

444:                                              ; preds = %434
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %420) #12
  br label %445

445:                                              ; preds = %427, %444
  %446 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %418, i64 0, i32 0
  %447 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %446, align 8
  %448 = bitcast %"struct.base::internal::SlotSpanMetadata"* %447 to i8**
  %449 = load i8*, i8** %448, align 1
  %450 = icmp eq i8* %449, null
  br i1 %450, label %475, label %451, !prof !6

451:                                              ; preds = %445
  %452 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %447, i64 0, i32 0
  store i8 0, i8* %7, align 1
  %453 = bitcast i8* %449 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %454 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %453, align 8
  %455 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %454, null
  %456 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %454 to i64
  br i1 %455, label %457, label %459

457:                                              ; preds = %451
  %458 = call i64 @llvm.bswap.i64(i64 %456) #12
  br label %469

459:                                              ; preds = %451
  %460 = xor i64 %456, -1
  %461 = getelementptr inbounds i8, i8* %449, i64 8
  %462 = bitcast i8* %461 to i64*
  %463 = load i64, i64* %462, align 8
  %464 = icmp eq i64 %463, %460
  br i1 %464, label %466, label %465, !prof !3

465:                                              ; preds = %459
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

466:                                              ; preds = %459
  %467 = call i64 @llvm.bswap.i64(i64 %456) #12
  %468 = inttoptr i64 %467 to i8*
  call void @llvm.prefetch(i8* nonnull %468, i32 0, i32 3, i32 1) #12
  br label %469

469:                                              ; preds = %466, %457
  %470 = phi i64 [ %458, %457 ], [ %467, %466 ]
  %471 = inttoptr i64 %470 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %471, %"class.base::internal::PartitionFreelistEntry"** %452, align 1
  %472 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %447, i64 0, i32 3
  %473 = load i16, i16* %472, align 1
  %474 = add i16 %473, 1
  store i16 %474, i16* %472, align 1
  br label %477

475:                                              ; preds = %445
  %476 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %418, %"struct.base::PartitionRoot"* %0, i32 0, i64 %37, i64 %38, i8* nonnull %7) #12
  br label %477

477:                                              ; preds = %475, %469
  %478 = phi i8* [ %449, %469 ], [ %476, %475 ]
  %479 = atomicrmw xchg i32* %421, i32 0 release
  %480 = icmp eq i32 %479, 2
  br i1 %480, label %481, label %549, !prof !6

481:                                              ; preds = %477
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %420) #12
  br label %549

482:                                              ; preds = %330
  %483 = zext i16 %321 to i64
  %484 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %483
  %485 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %486 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %485, i64 0, i32 0
  %487 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %485, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %488

488:                                              ; preds = %500, %482
  %489 = phi i32 [ 0, %482 ], [ %501, %500 ]
  %490 = phi i32 [ 1, %482 ], [ %504, %500 ]
  %491 = load atomic i32, i32* %487 monotonic, align 4
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %496, !prof !2

493:                                              ; preds = %488
  %494 = cmpxchg weak i32* %487, i32 0, i32 1 acquire monotonic
  %495 = extractvalue { i32, i1 } %494, 1
  br i1 %495, label %511, label %496, !prof !3

496:                                              ; preds = %493, %488
  %497 = icmp sgt i32 %490, 0
  br i1 %497, label %506, label %500

498:                                              ; preds = %506
  %499 = add i32 %490, %489
  br label %500

500:                                              ; preds = %498, %496
  %501 = phi i32 [ %489, %496 ], [ %499, %498 ]
  %502 = shl i32 %490, 1
  %503 = icmp slt i32 %502, 64
  %504 = select i1 %503, i32 %502, i32 64
  %505 = icmp slt i32 %501, 1000
  br i1 %505, label %488, label %510

506:                                              ; preds = %496, %506
  %507 = phi i32 [ %508, %506 ], [ 0, %496 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %508 = add nuw nsw i32 %507, 1
  %509 = icmp eq i32 %508, %490
  br i1 %509, label %498, label %506

510:                                              ; preds = %500
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %486) #12
  br label %511

511:                                              ; preds = %493, %510
  %512 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %484, i64 0, i32 0
  %513 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %512, align 8
  %514 = bitcast %"struct.base::internal::SlotSpanMetadata"* %513 to i8**
  %515 = load i8*, i8** %514, align 1
  %516 = icmp ne i8* %515, null
  %517 = and i1 %334, %516
  br i1 %517, label %518, label %542, !prof !3

518:                                              ; preds = %511
  %519 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %513, i64 0, i32 0
  store i8 0, i8* %7, align 1
  %520 = bitcast i8* %515 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %521 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %520, align 8
  %522 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %521, null
  %523 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %521 to i64
  br i1 %522, label %524, label %526

524:                                              ; preds = %518
  %525 = call i64 @llvm.bswap.i64(i64 %523) #12
  br label %536

526:                                              ; preds = %518
  %527 = xor i64 %523, -1
  %528 = getelementptr inbounds i8, i8* %515, i64 8
  %529 = bitcast i8* %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = icmp eq i64 %530, %527
  br i1 %531, label %533, label %532, !prof !3

532:                                              ; preds = %526
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

533:                                              ; preds = %526
  %534 = call i64 @llvm.bswap.i64(i64 %523) #12
  %535 = inttoptr i64 %534 to i8*
  call void @llvm.prefetch(i8* nonnull %535, i32 0, i32 3, i32 1) #12
  br label %536

536:                                              ; preds = %533, %524
  %537 = phi i64 [ %525, %524 ], [ %534, %533 ]
  %538 = inttoptr i64 %537 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %538, %"class.base::internal::PartitionFreelistEntry"** %519, align 1
  %539 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %513, i64 0, i32 3
  %540 = load i16, i16* %539, align 1
  %541 = add i16 %540, 1
  store i16 %541, i16* %539, align 1
  br label %544

542:                                              ; preds = %511
  %543 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %484, %"struct.base::PartitionRoot"* %0, i32 0, i64 %37, i64 %38, i8* nonnull %7) #12
  br label %544

544:                                              ; preds = %542, %536
  %545 = phi i8* [ %515, %536 ], [ %543, %542 ]
  %546 = atomicrmw xchg i32* %487, i32 0 release
  %547 = icmp eq i32 %546, 2
  br i1 %547, label %548, label %549, !prof !6

548:                                              ; preds = %544
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %486) #12
  br label %549

549:                                              ; preds = %548, %544, %481, %477
  %550 = phi i8* [ %478, %477 ], [ %478, %481 ], [ %545, %544 ], [ %545, %548 ]
  %551 = icmp eq i8* %550, null
  br i1 %551, label %554, label %552, !prof !6

552:                                              ; preds = %411, %549
  %553 = phi i8* [ %550, %549 ], [ %412, %411 ]
  br label %554

554:                                              ; preds = %552, %549
  %555 = phi i8* [ null, %549 ], [ %553, %552 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %322) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %7) #12
  store i8* %555, i8** %9, align 8
  br i1 %298, label %556, label %558

556:                                              ; preds = %554, %301
  %557 = phi i8* [ %302, %301 ], [ %555, %554 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %557, i64 %37, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %558

558:                                              ; preds = %556, %554
  %559 = load i8*, i8** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #12
  br label %560

560:                                              ; preds = %558, %292
  %561 = phi i8* [ %293, %292 ], [ %559, %558 ]
  %562 = ptrtoint i8* %561 to i64
  %563 = add i64 %2, -1
  %564 = and i64 %563, %562
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %567, label %566, !prof !3

566:                                              ; preds = %560
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %567

567:                                              ; preds = %566, %560, %32
  %568 = phi i8* [ null, %32 ], [ %561, %560 ], [ %561, %566 ]
  ret i8* %568
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE22AdjustSizeForExtrasAddEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE27AdjustSizeForExtrasSubtractEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: noreturn
declare void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64) local_unnamed_addr #5

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE17AllocFlagsNoHooksEimm(%"struct.base::PartitionRoot"*, i32, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %8 = sub nuw nsw i64 64, %7
  %9 = and i64 %8, 255
  %10 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %9
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = lshr i64 %2, %12
  %14 = and i64 %13, 7
  %15 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %9
  %16 = load i64, i64* %15, align 8
  %17 = and i64 %16, %2
  %18 = shl nuw nsw i64 %9, 3
  %19 = or i64 %14, %18
  %20 = icmp ne i64 %17, 0
  %21 = zext i1 %20 to i64
  %22 = add nuw nsw i64 %19, %21
  %23 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %22
  %24 = load i16, i16* %23, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %25 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = icmp eq i8 %27, 2
  br i1 %28, label %29, label %33

29:                                               ; preds = %4
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %31 = icmp eq i8 %30, 2
  br i1 %31, label %32, label %33, !prof !6

32:                                               ; preds = %29
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %33

33:                                               ; preds = %32, %29, %4
  %34 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %35 = load i8, i8* %34, align 2, !range !5
  %36 = icmp ne i8 %35, 0
  %37 = icmp ult i64 %3, 16385
  %38 = and i1 %37, %36
  br i1 %38, label %39, label %220, !prof !10

39:                                               ; preds = %33
  %40 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %41 = tail call i8* @pthread_getspecific(i32 %40) #12
  %42 = bitcast i8* %41 to %"class.base::internal::ThreadCache"*
  %43 = icmp ugt i8* %41, inttoptr (i64 1 to i8*)
  br i1 %43, label %44, label %112, !prof !3

44:                                               ; preds = %39
  %45 = zext i16 %24 to i64
  %46 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %42, i64 0, i32 3, i32 12, i64 %45
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  %49 = getelementptr inbounds i8, i8* %41, i64 1440
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = add i64 %51, 1
  store i64 %52, i64* %50, align 8
  %53 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %54 = icmp ult i16 %53, %24
  br i1 %54, label %55, label %64, !prof !6

55:                                               ; preds = %44
  %56 = getelementptr inbounds i8, i8* %41, i64 1472
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  %60 = getelementptr inbounds i8, i8* %41, i64 1456
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  br label %121

64:                                               ; preds = %44
  %65 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %42, i64 0, i32 0, i64 %45, i32 0
  %66 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %65, align 8
  %67 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %66, null
  br i1 %67, label %73, label %68, !prof !6

68:                                               ; preds = %64
  %69 = getelementptr inbounds i8, i8* %41, i64 1448
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = add i64 %71, 1
  store i64 %72, i64* %70, align 8
  br label %81

73:                                               ; preds = %64
  %74 = getelementptr inbounds i8, i8* %41, i64 1456
  %75 = bitcast i8* %74 to <2 x i64>*
  %76 = load <2 x i64>, <2 x i64>* %75, align 8
  %77 = add <2 x i64> %76, <i64 1, i64 1>
  %78 = bitcast i8* %74 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %42, i64 %45) #12
  %79 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %65, align 8
  %80 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %79, null
  br i1 %80, label %121, label %81, !prof !6

81:                                               ; preds = %73, %68
  %82 = phi %"class.base::internal::PartitionFreelistEntry"* [ %79, %73 ], [ %66, %68 ]
  %83 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %82, i64 0, i32 0
  %84 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %83, align 8
  %85 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %84, null
  %86 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %84 to i64
  br i1 %85, label %87, label %89

87:                                               ; preds = %81
  %88 = tail call i64 @llvm.bswap.i64(i64 %86) #12
  br label %98

89:                                               ; preds = %81
  %90 = xor i64 %86, -1
  %91 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %82, i64 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = icmp eq i64 %92, %90
  br i1 %93, label %95, label %94, !prof !3

94:                                               ; preds = %89
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

95:                                               ; preds = %89
  %96 = tail call i64 @llvm.bswap.i64(i64 %86) #12
  %97 = inttoptr i64 %96 to i8*
  tail call void @llvm.prefetch(i8* nonnull %97, i32 0, i32 3, i32 1) #12
  br label %98

98:                                               ; preds = %95, %87
  %99 = phi i64 [ %88, %87 ], [ %96, %95 ]
  %100 = inttoptr i64 %99 to %"class.base::internal::PartitionFreelistEntry"*
  %101 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %42, i64 0, i32 0, i64 %45, i32 1
  %102 = load i8, i8* %101, align 8
  %103 = add i8 %102, -1
  store i8 %103, i8* %101, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %100, %"class.base::internal::PartitionFreelistEntry"** %65, align 8
  %104 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %42, i64 0, i32 0, i64 %45, i32 3
  %105 = load i16, i16* %104, align 2
  %106 = zext i16 %105 to i64
  store i64 %106, i64* %6, align 8
  %107 = getelementptr inbounds i8, i8* %41, i64 1424
  %108 = bitcast i8* %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = sub i64 %109, %106
  store i64 %110, i64* %108, align 8
  %111 = bitcast %"class.base::internal::PartitionFreelistEntry"* %82 to i8*
  br label %114

112:                                              ; preds = %39
  %113 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %24, i64* nonnull %6)
  br label %114

114:                                              ; preds = %98, %112
  %115 = phi i8* [ %113, %112 ], [ %111, %98 ]
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !6

117:                                              ; preds = %114
  %118 = zext i16 %24 to i64
  br label %121

119:                                              ; preds = %114
  %120 = load i64, i64* %6, align 8
  br label %324

121:                                              ; preds = %117, %73, %55
  %122 = phi i64 [ %118, %117 ], [ %45, %73 ], [ %45, %55 ]
  %123 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %122
  %124 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %125 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %124, i64 0, i32 0
  %126 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %124, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %127

127:                                              ; preds = %139, %121
  %128 = phi i32 [ 0, %121 ], [ %140, %139 ]
  %129 = phi i32 [ 1, %121 ], [ %143, %139 ]
  %130 = load atomic i32, i32* %126 monotonic, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %135, !prof !2

132:                                              ; preds = %127
  %133 = cmpxchg weak i32* %126, i32 0, i32 1 acquire monotonic
  %134 = extractvalue { i32, i1 } %133, 1
  br i1 %134, label %150, label %135, !prof !3

135:                                              ; preds = %132, %127
  %136 = icmp sgt i32 %129, 0
  br i1 %136, label %145, label %139

137:                                              ; preds = %145
  %138 = add i32 %129, %128
  br label %139

139:                                              ; preds = %137, %135
  %140 = phi i32 [ %128, %135 ], [ %138, %137 ]
  %141 = shl i32 %129, 1
  %142 = icmp slt i32 %141, 64
  %143 = select i1 %142, i32 %141, i32 64
  %144 = icmp slt i32 %140, 1000
  br i1 %144, label %127, label %149

145:                                              ; preds = %135, %145
  %146 = phi i32 [ %147, %145 ], [ 0, %135 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %147 = add nuw nsw i32 %146, 1
  %148 = icmp eq i32 %147, %129
  br i1 %148, label %137, label %145

149:                                              ; preds = %139
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %125) #12
  br label %150

150:                                              ; preds = %132, %149
  %151 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %123, i64 0, i32 0
  %152 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %151, align 8
  %153 = bitcast %"struct.base::internal::SlotSpanMetadata"* %152 to i8**
  %154 = load i8*, i8** %153, align 1
  %155 = icmp eq i8* %154, null
  br i1 %155, label %183, label %156, !prof !6

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %152, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %158 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %122, i32 3
  %159 = load i32, i32* %158, align 8
  %160 = zext i32 %159 to i64
  %161 = bitcast i8* %154 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %162 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %161, align 8
  %163 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %162, null
  %164 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %162 to i64
  br i1 %163, label %165, label %167

165:                                              ; preds = %156
  %166 = tail call i64 @llvm.bswap.i64(i64 %164) #12
  br label %177

167:                                              ; preds = %156
  %168 = xor i64 %164, -1
  %169 = getelementptr inbounds i8, i8* %154, i64 8
  %170 = bitcast i8* %169 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %171, %168
  br i1 %172, label %174, label %173, !prof !3

173:                                              ; preds = %167
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

174:                                              ; preds = %167
  %175 = tail call i64 @llvm.bswap.i64(i64 %164) #12
  %176 = inttoptr i64 %175 to i8*
  tail call void @llvm.prefetch(i8* nonnull %176, i32 0, i32 3, i32 1) #12
  br label %177

177:                                              ; preds = %174, %165
  %178 = phi i64 [ %166, %165 ], [ %175, %174 ]
  %179 = inttoptr i64 %178 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %179, %"class.base::internal::PartitionFreelistEntry"** %157, align 1
  %180 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %152, i64 0, i32 3
  %181 = load i16, i16* %180, align 1
  %182 = add i16 %181, 1
  store i16 %182, i16* %180, align 1
  br label %214

183:                                              ; preds = %150
  %184 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %123, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %5) #12
  %185 = icmp eq i8* %184, null
  br i1 %185, label %214, label %186, !prof !6

186:                                              ; preds = %183
  %187 = ptrtoint i8* %184 to i64
  %188 = and i64 %187, -2097152
  %189 = or i64 %188, 4096
  %190 = inttoptr i64 %189 to i8*
  %191 = lshr i64 %187, 9
  %192 = and i64 %191, 4064
  %193 = getelementptr inbounds i8, i8* %190, i64 %192
  %194 = bitcast i8* %193 to %"struct.base::internal::PartitionPage"*
  %195 = getelementptr inbounds i8, i8* %193, i64 30
  %196 = load i8, i8* %195, align 2
  %197 = zext i8 %196 to i64
  %198 = sub nsw i64 0, %197
  %199 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %194, i64 %198, i32 0, i32 1, i64 21
  %200 = load i8, i8* %199, align 1, !range !5
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %202, label %209, !prof !3

202:                                              ; preds = %186
  %203 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %194, i64 %198, i32 0, i32 1, i64 8
  %204 = bitcast i8* %203 to %"struct.base::internal::PartitionBucket"**
  %205 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %204, align 1
  %206 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %205, i64 0, i32 3
  %207 = load i32, i32* %206, align 8
  %208 = zext i32 %207 to i64
  br label %214

209:                                              ; preds = %186
  %210 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %194, i64 %198, i32 0
  %211 = bitcast %union.anon* %210 to %"struct.base::internal::PartitionPage"*
  %212 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %211, i64 1, i32 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 1
  br label %214

214:                                              ; preds = %202, %209, %183, %177
  %215 = phi i64 [ %160, %177 ], [ -6148914691236517206, %183 ], [ %208, %202 ], [ %213, %209 ]
  %216 = phi i8* [ %154, %177 ], [ null, %183 ], [ %184, %202 ], [ %184, %209 ]
  %217 = atomicrmw xchg i32* %126, i32 0 release
  %218 = icmp eq i32 %217, 2
  br i1 %218, label %219, label %320, !prof !6

219:                                              ; preds = %214
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %125) #12
  br label %320

220:                                              ; preds = %33
  %221 = zext i16 %24 to i64
  %222 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %221
  %223 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %224 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %223, i64 0, i32 0
  %225 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %223, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %226

226:                                              ; preds = %238, %220
  %227 = phi i32 [ 0, %220 ], [ %239, %238 ]
  %228 = phi i32 [ 1, %220 ], [ %242, %238 ]
  %229 = load atomic i32, i32* %225 monotonic, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %234, !prof !2

231:                                              ; preds = %226
  %232 = cmpxchg weak i32* %225, i32 0, i32 1 acquire monotonic
  %233 = extractvalue { i32, i1 } %232, 1
  br i1 %233, label %249, label %234, !prof !3

234:                                              ; preds = %231, %226
  %235 = icmp sgt i32 %228, 0
  br i1 %235, label %244, label %238

236:                                              ; preds = %244
  %237 = add i32 %228, %227
  br label %238

238:                                              ; preds = %236, %234
  %239 = phi i32 [ %227, %234 ], [ %237, %236 ]
  %240 = shl i32 %228, 1
  %241 = icmp slt i32 %240, 64
  %242 = select i1 %241, i32 %240, i32 64
  %243 = icmp slt i32 %239, 1000
  br i1 %243, label %226, label %248

244:                                              ; preds = %234, %244
  %245 = phi i32 [ %246, %244 ], [ 0, %234 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %246 = add nuw nsw i32 %245, 1
  %247 = icmp eq i32 %246, %228
  br i1 %247, label %236, label %244

248:                                              ; preds = %238
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %224) #12
  br label %249

249:                                              ; preds = %231, %248
  %250 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %222, i64 0, i32 0
  %251 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %250, align 8
  %252 = bitcast %"struct.base::internal::SlotSpanMetadata"* %251 to i8**
  %253 = load i8*, i8** %252, align 1
  %254 = icmp ne i8* %253, null
  %255 = and i1 %37, %254
  br i1 %255, label %256, label %283, !prof !3

256:                                              ; preds = %249
  %257 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %251, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %258 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %221, i32 3
  %259 = load i32, i32* %258, align 8
  %260 = zext i32 %259 to i64
  %261 = bitcast i8* %253 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %262 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %261, align 8
  %263 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %262, null
  %264 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %262 to i64
  br i1 %263, label %265, label %267

265:                                              ; preds = %256
  %266 = tail call i64 @llvm.bswap.i64(i64 %264) #12
  br label %277

267:                                              ; preds = %256
  %268 = xor i64 %264, -1
  %269 = getelementptr inbounds i8, i8* %253, i64 8
  %270 = bitcast i8* %269 to i64*
  %271 = load i64, i64* %270, align 8
  %272 = icmp eq i64 %271, %268
  br i1 %272, label %274, label %273, !prof !3

273:                                              ; preds = %267
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

274:                                              ; preds = %267
  %275 = tail call i64 @llvm.bswap.i64(i64 %264) #12
  %276 = inttoptr i64 %275 to i8*
  tail call void @llvm.prefetch(i8* nonnull %276, i32 0, i32 3, i32 1) #12
  br label %277

277:                                              ; preds = %274, %265
  %278 = phi i64 [ %266, %265 ], [ %275, %274 ]
  %279 = inttoptr i64 %278 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %279, %"class.base::internal::PartitionFreelistEntry"** %257, align 1
  %280 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %251, i64 0, i32 3
  %281 = load i16, i16* %280, align 1
  %282 = add i16 %281, 1
  store i16 %282, i16* %280, align 1
  br label %314

283:                                              ; preds = %249
  %284 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %222, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %5) #12
  %285 = icmp eq i8* %284, null
  br i1 %285, label %314, label %286, !prof !6

286:                                              ; preds = %283
  %287 = ptrtoint i8* %284 to i64
  %288 = and i64 %287, -2097152
  %289 = or i64 %288, 4096
  %290 = inttoptr i64 %289 to i8*
  %291 = lshr i64 %287, 9
  %292 = and i64 %291, 4064
  %293 = getelementptr inbounds i8, i8* %290, i64 %292
  %294 = bitcast i8* %293 to %"struct.base::internal::PartitionPage"*
  %295 = getelementptr inbounds i8, i8* %293, i64 30
  %296 = load i8, i8* %295, align 2
  %297 = zext i8 %296 to i64
  %298 = sub nsw i64 0, %297
  %299 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %294, i64 %298, i32 0, i32 1, i64 21
  %300 = load i8, i8* %299, align 1, !range !5
  %301 = icmp eq i8 %300, 0
  br i1 %301, label %302, label %309, !prof !3

302:                                              ; preds = %286
  %303 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %294, i64 %298, i32 0, i32 1, i64 8
  %304 = bitcast i8* %303 to %"struct.base::internal::PartitionBucket"**
  %305 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %304, align 1
  %306 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %305, i64 0, i32 3
  %307 = load i32, i32* %306, align 8
  %308 = zext i32 %307 to i64
  br label %314

309:                                              ; preds = %286
  %310 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %294, i64 %298, i32 0
  %311 = bitcast %union.anon* %310 to %"struct.base::internal::PartitionPage"*
  %312 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %311, i64 1, i32 0, i32 0, i32 0
  %313 = load i64, i64* %312, align 1
  br label %314

314:                                              ; preds = %302, %309, %283, %277
  %315 = phi i64 [ %260, %277 ], [ -6148914691236517206, %283 ], [ %308, %302 ], [ %313, %309 ]
  %316 = phi i8* [ %253, %277 ], [ null, %283 ], [ %284, %302 ], [ %284, %309 ]
  %317 = atomicrmw xchg i32* %225, i32 0 release
  %318 = icmp eq i32 %317, 2
  br i1 %318, label %319, label %320, !prof !6

319:                                              ; preds = %314
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %224) #12
  br label %320

320:                                              ; preds = %319, %314, %219, %214
  %321 = phi i64 [ %215, %214 ], [ %215, %219 ], [ %315, %314 ], [ %315, %319 ]
  %322 = phi i8* [ %216, %214 ], [ %216, %219 ], [ %316, %314 ], [ %316, %319 ]
  %323 = icmp eq i8* %322, null
  br i1 %323, label %333, label %324, !prof !6

324:                                              ; preds = %119, %320
  %325 = phi i8* [ %115, %119 ], [ %322, %320 ]
  %326 = phi i64 [ %120, %119 ], [ %321, %320 ]
  %327 = and i32 %1, 2
  %328 = icmp ne i32 %327, 0
  %329 = load i8, i8* %5, align 1
  %330 = icmp eq i8 %329, 0
  %331 = and i1 %328, %330
  br i1 %331, label %332, label %333, !prof !11

332:                                              ; preds = %324
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %325, i8 0, i64 %326, i1 false)
  br label %333

333:                                              ; preds = %332, %324, %320
  %334 = phi i8* [ null, %320 ], [ %325, %324 ], [ %325, %332 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret i8* %334
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE18AllocFlagsInternalEimmPKc(%"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  store i8* null, i8** %8, align 8
  %10 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %11 = and i8 %10, 1
  %12 = icmp ne i8 %11, 0
  br i1 %12, label %13, label %17, !prof !6

13:                                               ; preds = %5
  %14 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %8, i32 %1, i64 %2, i8* %4) #12
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  %16 = load i8*, i8** %8, align 8
  br label %346

17:                                               ; preds = %13, %5
  %18 = call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %19 = sub nuw nsw i64 64, %18
  %20 = and i64 %19, 255
  %21 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = lshr i64 %2, %23
  %25 = and i64 %24, 7
  %26 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %20
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, %2
  %29 = shl nuw nsw i64 %20, 3
  %30 = or i64 %25, %29
  %31 = icmp ne i64 %28, 0
  %32 = zext i1 %31 to i64
  %33 = add nuw nsw i64 %30, %32
  %34 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %33
  %35 = load i16, i16* %34, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %36 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %37 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 2
  br i1 %39, label %40, label %44

40:                                               ; preds = %17
  %41 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %42 = icmp eq i8 %41, 2
  br i1 %42, label %43, label %44, !prof !6

43:                                               ; preds = %40
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %44

44:                                               ; preds = %43, %40, %17
  %45 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %46 = load i8, i8* %45, align 2, !range !5
  %47 = icmp ne i8 %46, 0
  %48 = icmp ult i64 %3, 16385
  %49 = and i1 %48, %47
  br i1 %49, label %50, label %231, !prof !10

50:                                               ; preds = %44
  %51 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %52 = call i8* @pthread_getspecific(i32 %51) #12
  %53 = bitcast i8* %52 to %"class.base::internal::ThreadCache"*
  %54 = icmp ugt i8* %52, inttoptr (i64 1 to i8*)
  br i1 %54, label %55, label %123, !prof !3

55:                                               ; preds = %50
  %56 = zext i16 %35 to i64
  %57 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %53, i64 0, i32 3, i32 12, i64 %56
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  %60 = getelementptr inbounds i8, i8* %52, i64 1440
  %61 = bitcast i8* %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %65 = icmp ult i16 %64, %35
  br i1 %65, label %66, label %75, !prof !6

66:                                               ; preds = %55
  %67 = getelementptr inbounds i8, i8* %52, i64 1472
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  %71 = getelementptr inbounds i8, i8* %52, i64 1456
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  br label %132

75:                                               ; preds = %55
  %76 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %53, i64 0, i32 0, i64 %56, i32 0
  %77 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %76, align 8
  %78 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %77, null
  br i1 %78, label %84, label %79, !prof !6

79:                                               ; preds = %75
  %80 = getelementptr inbounds i8, i8* %52, i64 1448
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, 1
  store i64 %83, i64* %81, align 8
  br label %92

84:                                               ; preds = %75
  %85 = getelementptr inbounds i8, i8* %52, i64 1456
  %86 = bitcast i8* %85 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  %88 = add <2 x i64> %87, <i64 1, i64 1>
  %89 = bitcast i8* %85 to <2 x i64>*
  store <2 x i64> %88, <2 x i64>* %89, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %53, i64 %56) #12
  %90 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %76, align 8
  %91 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %90, null
  br i1 %91, label %132, label %92, !prof !6

92:                                               ; preds = %84, %79
  %93 = phi %"class.base::internal::PartitionFreelistEntry"* [ %90, %84 ], [ %77, %79 ]
  %94 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %93, i64 0, i32 0
  %95 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %94, align 8
  %96 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %95, null
  %97 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %95 to i64
  br i1 %96, label %98, label %100

98:                                               ; preds = %92
  %99 = call i64 @llvm.bswap.i64(i64 %97) #12
  br label %109

100:                                              ; preds = %92
  %101 = xor i64 %97, -1
  %102 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %93, i64 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = icmp eq i64 %103, %101
  br i1 %104, label %106, label %105, !prof !3

105:                                              ; preds = %100
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

106:                                              ; preds = %100
  %107 = call i64 @llvm.bswap.i64(i64 %97) #12
  %108 = inttoptr i64 %107 to i8*
  call void @llvm.prefetch(i8* nonnull %108, i32 0, i32 3, i32 1) #12
  br label %109

109:                                              ; preds = %106, %98
  %110 = phi i64 [ %99, %98 ], [ %107, %106 ]
  %111 = inttoptr i64 %110 to %"class.base::internal::PartitionFreelistEntry"*
  %112 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %53, i64 0, i32 0, i64 %56, i32 1
  %113 = load i8, i8* %112, align 8
  %114 = add i8 %113, -1
  store i8 %114, i8* %112, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %111, %"class.base::internal::PartitionFreelistEntry"** %76, align 8
  %115 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %53, i64 0, i32 0, i64 %56, i32 3
  %116 = load i16, i16* %115, align 2
  %117 = zext i16 %116 to i64
  store i64 %117, i64* %7, align 8
  %118 = getelementptr inbounds i8, i8* %52, i64 1424
  %119 = bitcast i8* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = sub i64 %120, %117
  store i64 %121, i64* %119, align 8
  %122 = bitcast %"class.base::internal::PartitionFreelistEntry"* %93 to i8*
  br label %125

123:                                              ; preds = %50
  %124 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %35, i64* nonnull %7) #12
  br label %125

125:                                              ; preds = %123, %109
  %126 = phi i8* [ %124, %123 ], [ %122, %109 ]
  %127 = icmp eq i8* %126, null
  br i1 %127, label %128, label %130, !prof !6

128:                                              ; preds = %125
  %129 = zext i16 %35 to i64
  br label %132

130:                                              ; preds = %125
  %131 = load i64, i64* %7, align 8
  br label %335

132:                                              ; preds = %128, %84, %66
  %133 = phi i64 [ %129, %128 ], [ %56, %84 ], [ %56, %66 ]
  %134 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %133
  %135 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %136 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %135, i64 0, i32 0
  %137 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %135, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %138

138:                                              ; preds = %150, %132
  %139 = phi i32 [ 0, %132 ], [ %151, %150 ]
  %140 = phi i32 [ 1, %132 ], [ %154, %150 ]
  %141 = load atomic i32, i32* %137 monotonic, align 4
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %143, label %146, !prof !2

143:                                              ; preds = %138
  %144 = cmpxchg weak i32* %137, i32 0, i32 1 acquire monotonic
  %145 = extractvalue { i32, i1 } %144, 1
  br i1 %145, label %161, label %146, !prof !3

146:                                              ; preds = %143, %138
  %147 = icmp sgt i32 %140, 0
  br i1 %147, label %156, label %150

148:                                              ; preds = %156
  %149 = add i32 %140, %139
  br label %150

150:                                              ; preds = %148, %146
  %151 = phi i32 [ %139, %146 ], [ %149, %148 ]
  %152 = shl i32 %140, 1
  %153 = icmp slt i32 %152, 64
  %154 = select i1 %153, i32 %152, i32 64
  %155 = icmp slt i32 %151, 1000
  br i1 %155, label %138, label %160

156:                                              ; preds = %146, %156
  %157 = phi i32 [ %158, %156 ], [ 0, %146 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %158 = add nuw nsw i32 %157, 1
  %159 = icmp eq i32 %158, %140
  br i1 %159, label %148, label %156

160:                                              ; preds = %150
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %136) #12
  br label %161

161:                                              ; preds = %143, %160
  %162 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %134, i64 0, i32 0
  %163 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %162, align 8
  %164 = bitcast %"struct.base::internal::SlotSpanMetadata"* %163 to i8**
  %165 = load i8*, i8** %164, align 1
  %166 = icmp eq i8* %165, null
  br i1 %166, label %194, label %167, !prof !6

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %163, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %169 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %133, i32 3
  %170 = load i32, i32* %169, align 8
  %171 = zext i32 %170 to i64
  %172 = bitcast i8* %165 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %173 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %172, align 8
  %174 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %173, null
  %175 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %173 to i64
  br i1 %174, label %176, label %178

176:                                              ; preds = %167
  %177 = call i64 @llvm.bswap.i64(i64 %175) #12
  br label %188

178:                                              ; preds = %167
  %179 = xor i64 %175, -1
  %180 = getelementptr inbounds i8, i8* %165, i64 8
  %181 = bitcast i8* %180 to i64*
  %182 = load i64, i64* %181, align 8
  %183 = icmp eq i64 %182, %179
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %178
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

185:                                              ; preds = %178
  %186 = call i64 @llvm.bswap.i64(i64 %175) #12
  %187 = inttoptr i64 %186 to i8*
  call void @llvm.prefetch(i8* nonnull %187, i32 0, i32 3, i32 1) #12
  br label %188

188:                                              ; preds = %185, %176
  %189 = phi i64 [ %177, %176 ], [ %186, %185 ]
  %190 = inttoptr i64 %189 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %190, %"class.base::internal::PartitionFreelistEntry"** %168, align 1
  %191 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %163, i64 0, i32 3
  %192 = load i16, i16* %191, align 1
  %193 = add i16 %192, 1
  store i16 %193, i16* %191, align 1
  br label %225

194:                                              ; preds = %161
  %195 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %134, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %6) #12
  %196 = icmp eq i8* %195, null
  br i1 %196, label %225, label %197, !prof !6

197:                                              ; preds = %194
  %198 = ptrtoint i8* %195 to i64
  %199 = and i64 %198, -2097152
  %200 = or i64 %199, 4096
  %201 = inttoptr i64 %200 to i8*
  %202 = lshr i64 %198, 9
  %203 = and i64 %202, 4064
  %204 = getelementptr inbounds i8, i8* %201, i64 %203
  %205 = bitcast i8* %204 to %"struct.base::internal::PartitionPage"*
  %206 = getelementptr inbounds i8, i8* %204, i64 30
  %207 = load i8, i8* %206, align 2
  %208 = zext i8 %207 to i64
  %209 = sub nsw i64 0, %208
  %210 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %205, i64 %209, i32 0, i32 1, i64 21
  %211 = load i8, i8* %210, align 1, !range !5
  %212 = icmp eq i8 %211, 0
  br i1 %212, label %213, label %220, !prof !3

213:                                              ; preds = %197
  %214 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %205, i64 %209, i32 0, i32 1, i64 8
  %215 = bitcast i8* %214 to %"struct.base::internal::PartitionBucket"**
  %216 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %215, align 1
  %217 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %216, i64 0, i32 3
  %218 = load i32, i32* %217, align 8
  %219 = zext i32 %218 to i64
  br label %225

220:                                              ; preds = %197
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %205, i64 %209, i32 0
  %222 = bitcast %union.anon* %221 to %"struct.base::internal::PartitionPage"*
  %223 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %222, i64 1, i32 0, i32 0, i32 0
  %224 = load i64, i64* %223, align 1
  br label %225

225:                                              ; preds = %220, %213, %194, %188
  %226 = phi i64 [ %171, %188 ], [ -6148914691236517206, %194 ], [ %219, %213 ], [ %224, %220 ]
  %227 = phi i8* [ %165, %188 ], [ null, %194 ], [ %195, %213 ], [ %195, %220 ]
  %228 = atomicrmw xchg i32* %137, i32 0 release
  %229 = icmp eq i32 %228, 2
  br i1 %229, label %230, label %331, !prof !6

230:                                              ; preds = %225
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %136) #12
  br label %331

231:                                              ; preds = %44
  %232 = zext i16 %35 to i64
  %233 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %232
  %234 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %235 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %234, i64 0, i32 0
  %236 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %237

237:                                              ; preds = %249, %231
  %238 = phi i32 [ 0, %231 ], [ %250, %249 ]
  %239 = phi i32 [ 1, %231 ], [ %253, %249 ]
  %240 = load atomic i32, i32* %236 monotonic, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %245, !prof !2

242:                                              ; preds = %237
  %243 = cmpxchg weak i32* %236, i32 0, i32 1 acquire monotonic
  %244 = extractvalue { i32, i1 } %243, 1
  br i1 %244, label %260, label %245, !prof !3

245:                                              ; preds = %242, %237
  %246 = icmp sgt i32 %239, 0
  br i1 %246, label %255, label %249

247:                                              ; preds = %255
  %248 = add i32 %239, %238
  br label %249

249:                                              ; preds = %247, %245
  %250 = phi i32 [ %238, %245 ], [ %248, %247 ]
  %251 = shl i32 %239, 1
  %252 = icmp slt i32 %251, 64
  %253 = select i1 %252, i32 %251, i32 64
  %254 = icmp slt i32 %250, 1000
  br i1 %254, label %237, label %259

255:                                              ; preds = %245, %255
  %256 = phi i32 [ %257, %255 ], [ 0, %245 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %257 = add nuw nsw i32 %256, 1
  %258 = icmp eq i32 %257, %239
  br i1 %258, label %247, label %255

259:                                              ; preds = %249
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %235) #12
  br label %260

260:                                              ; preds = %242, %259
  %261 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %233, i64 0, i32 0
  %262 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %261, align 8
  %263 = bitcast %"struct.base::internal::SlotSpanMetadata"* %262 to i8**
  %264 = load i8*, i8** %263, align 1
  %265 = icmp ne i8* %264, null
  %266 = and i1 %48, %265
  br i1 %266, label %267, label %294, !prof !3

267:                                              ; preds = %260
  %268 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %262, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %269 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %232, i32 3
  %270 = load i32, i32* %269, align 8
  %271 = zext i32 %270 to i64
  %272 = bitcast i8* %264 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %273 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %272, align 8
  %274 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %273, null
  %275 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %273 to i64
  br i1 %274, label %276, label %278

276:                                              ; preds = %267
  %277 = call i64 @llvm.bswap.i64(i64 %275) #12
  br label %288

278:                                              ; preds = %267
  %279 = xor i64 %275, -1
  %280 = getelementptr inbounds i8, i8* %264, i64 8
  %281 = bitcast i8* %280 to i64*
  %282 = load i64, i64* %281, align 8
  %283 = icmp eq i64 %282, %279
  br i1 %283, label %285, label %284, !prof !3

284:                                              ; preds = %278
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

285:                                              ; preds = %278
  %286 = call i64 @llvm.bswap.i64(i64 %275) #12
  %287 = inttoptr i64 %286 to i8*
  call void @llvm.prefetch(i8* nonnull %287, i32 0, i32 3, i32 1) #12
  br label %288

288:                                              ; preds = %285, %276
  %289 = phi i64 [ %277, %276 ], [ %286, %285 ]
  %290 = inttoptr i64 %289 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %290, %"class.base::internal::PartitionFreelistEntry"** %268, align 1
  %291 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %262, i64 0, i32 3
  %292 = load i16, i16* %291, align 1
  %293 = add i16 %292, 1
  store i16 %293, i16* %291, align 1
  br label %325

294:                                              ; preds = %260
  %295 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %233, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %6) #12
  %296 = icmp eq i8* %295, null
  br i1 %296, label %325, label %297, !prof !6

297:                                              ; preds = %294
  %298 = ptrtoint i8* %295 to i64
  %299 = and i64 %298, -2097152
  %300 = or i64 %299, 4096
  %301 = inttoptr i64 %300 to i8*
  %302 = lshr i64 %298, 9
  %303 = and i64 %302, 4064
  %304 = getelementptr inbounds i8, i8* %301, i64 %303
  %305 = bitcast i8* %304 to %"struct.base::internal::PartitionPage"*
  %306 = getelementptr inbounds i8, i8* %304, i64 30
  %307 = load i8, i8* %306, align 2
  %308 = zext i8 %307 to i64
  %309 = sub nsw i64 0, %308
  %310 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %305, i64 %309, i32 0, i32 1, i64 21
  %311 = load i8, i8* %310, align 1, !range !5
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %313, label %320, !prof !3

313:                                              ; preds = %297
  %314 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %305, i64 %309, i32 0, i32 1, i64 8
  %315 = bitcast i8* %314 to %"struct.base::internal::PartitionBucket"**
  %316 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %315, align 1
  %317 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %316, i64 0, i32 3
  %318 = load i32, i32* %317, align 8
  %319 = zext i32 %318 to i64
  br label %325

320:                                              ; preds = %297
  %321 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %305, i64 %309, i32 0
  %322 = bitcast %union.anon* %321 to %"struct.base::internal::PartitionPage"*
  %323 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %322, i64 1, i32 0, i32 0, i32 0
  %324 = load i64, i64* %323, align 1
  br label %325

325:                                              ; preds = %320, %313, %294, %288
  %326 = phi i64 [ %271, %288 ], [ -6148914691236517206, %294 ], [ %319, %313 ], [ %324, %320 ]
  %327 = phi i8* [ %264, %288 ], [ null, %294 ], [ %295, %313 ], [ %295, %320 ]
  %328 = atomicrmw xchg i32* %236, i32 0 release
  %329 = icmp eq i32 %328, 2
  br i1 %329, label %330, label %331, !prof !6

330:                                              ; preds = %325
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %235) #12
  br label %331

331:                                              ; preds = %330, %325, %230, %225
  %332 = phi i64 [ %226, %225 ], [ %226, %230 ], [ %326, %325 ], [ %326, %330 ]
  %333 = phi i8* [ %227, %225 ], [ %227, %230 ], [ %327, %325 ], [ %327, %330 ]
  %334 = icmp eq i8* %333, null
  br i1 %334, label %344, label %335, !prof !6

335:                                              ; preds = %331, %130
  %336 = phi i8* [ %126, %130 ], [ %333, %331 ]
  %337 = phi i64 [ %131, %130 ], [ %332, %331 ]
  %338 = and i32 %1, 2
  %339 = icmp ne i32 %338, 0
  %340 = load i8, i8* %6, align 1
  %341 = icmp eq i8 %340, 0
  %342 = and i1 %339, %341
  br i1 %342, label %343, label %344, !prof !11

343:                                              ; preds = %335
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %336, i8 0, i64 %337, i1 false) #12
  br label %344

344:                                              ; preds = %331, %335, %343
  %345 = phi i8* [ null, %331 ], [ %336, %335 ], [ %336, %343 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  store i8* %345, i8** %8, align 8
  br i1 %12, label %346, label %348

346:                                              ; preds = %344, %15
  %347 = phi i8* [ %16, %15 ], [ %345, %344 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %347, i64 %2, i8* %4) #12
  br label %348

348:                                              ; preds = %346, %344
  %349 = load i8*, i8** %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  ret i8* %349
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE5AllocEmPKc(%"struct.base::PartitionRoot"*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* null, i8** %6, align 8
  %8 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %9 = and i8 %8, 1
  %10 = icmp ne i8 %9, 0
  br i1 %10, label %11, label %15, !prof !6

11:                                               ; preds = %3
  %12 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %6, i32 0, i64 %1, i8* %2) #12
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = load i8*, i8** %6, align 8
  br label %265

15:                                               ; preds = %11, %3
  %16 = call i64 @llvm.ctlz.i64(i64 %1, i1 false) #12, !range !9
  %17 = sub nuw nsw i64 64, %16
  %18 = and i64 %17, 255
  %19 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = lshr i64 %1, %21
  %23 = and i64 %22, 7
  %24 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %18
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, %1
  %27 = shl nuw nsw i64 %18, 3
  %28 = or i64 %23, %27
  %29 = icmp ne i64 %26, 0
  %30 = zext i1 %29 to i64
  %31 = add nuw nsw i64 %28, %30
  %32 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %31
  %33 = load i16, i16* %32, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %34 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i64 -6148914691236517206, i64* %5, align 8
  %35 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %42

38:                                               ; preds = %15
  %39 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %42, !prof !6

41:                                               ; preds = %38
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %42

42:                                               ; preds = %41, %38, %15
  %43 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %44 = load i8, i8* %43, align 2, !range !5
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %192, label %46, !prof !12

46:                                               ; preds = %42
  %47 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %48 = call i8* @pthread_getspecific(i32 %47) #12
  %49 = bitcast i8* %48 to %"class.base::internal::ThreadCache"*
  %50 = icmp ugt i8* %48, inttoptr (i64 1 to i8*)
  br i1 %50, label %51, label %119, !prof !3

51:                                               ; preds = %46
  %52 = zext i16 %33 to i64
  %53 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %49, i64 0, i32 3, i32 12, i64 %52
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = getelementptr inbounds i8, i8* %48, i64 1440
  %57 = bitcast i8* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = add i64 %58, 1
  store i64 %59, i64* %57, align 8
  %60 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %61 = icmp ult i16 %60, %33
  br i1 %61, label %62, label %71, !prof !6

62:                                               ; preds = %51
  %63 = getelementptr inbounds i8, i8* %48, i64 1472
  %64 = bitcast i8* %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  %67 = getelementptr inbounds i8, i8* %48, i64 1456
  %68 = bitcast i8* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  br label %126

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %49, i64 0, i32 0, i64 %52, i32 0
  %73 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %72, align 8
  %74 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %73, null
  br i1 %74, label %80, label %75, !prof !6

75:                                               ; preds = %71
  %76 = getelementptr inbounds i8, i8* %48, i64 1448
  %77 = bitcast i8* %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  store i64 %79, i64* %77, align 8
  br label %88

80:                                               ; preds = %71
  %81 = getelementptr inbounds i8, i8* %48, i64 1456
  %82 = bitcast i8* %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = add <2 x i64> %83, <i64 1, i64 1>
  %85 = bitcast i8* %81 to <2 x i64>*
  store <2 x i64> %84, <2 x i64>* %85, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %49, i64 %52) #12
  %86 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %72, align 8
  %87 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %86, null
  br i1 %87, label %126, label %88, !prof !6

88:                                               ; preds = %80, %75
  %89 = phi %"class.base::internal::PartitionFreelistEntry"* [ %86, %80 ], [ %73, %75 ]
  %90 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %89, i64 0, i32 0
  %91 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %90, align 8
  %92 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %91, null
  %93 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %91 to i64
  br i1 %92, label %94, label %96

94:                                               ; preds = %88
  %95 = call i64 @llvm.bswap.i64(i64 %93) #12
  br label %105

96:                                               ; preds = %88
  %97 = xor i64 %93, -1
  %98 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %89, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %99, %97
  br i1 %100, label %102, label %101, !prof !3

101:                                              ; preds = %96
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

102:                                              ; preds = %96
  %103 = call i64 @llvm.bswap.i64(i64 %93) #12
  %104 = inttoptr i64 %103 to i8*
  call void @llvm.prefetch(i8* nonnull %104, i32 0, i32 3, i32 1) #12
  br label %105

105:                                              ; preds = %102, %94
  %106 = phi i64 [ %95, %94 ], [ %103, %102 ]
  %107 = inttoptr i64 %106 to %"class.base::internal::PartitionFreelistEntry"*
  %108 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %49, i64 0, i32 0, i64 %52, i32 1
  %109 = load i8, i8* %108, align 8
  %110 = add i8 %109, -1
  store i8 %110, i8* %108, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %107, %"class.base::internal::PartitionFreelistEntry"** %72, align 8
  %111 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %49, i64 0, i32 0, i64 %52, i32 3
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i64
  store i64 %113, i64* %5, align 8
  %114 = getelementptr inbounds i8, i8* %48, i64 1424
  %115 = bitcast i8* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %116, %113
  store i64 %117, i64* %115, align 8
  %118 = bitcast %"class.base::internal::PartitionFreelistEntry"* %89 to i8*
  br label %121

119:                                              ; preds = %46
  %120 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %33, i64* nonnull %5) #12
  br label %121

121:                                              ; preds = %119, %105
  %122 = phi i8* [ %120, %119 ], [ %118, %105 ]
  %123 = icmp eq i8* %122, null
  br i1 %123, label %124, label %261, !prof !6

124:                                              ; preds = %121
  %125 = zext i16 %33 to i64
  br label %126

126:                                              ; preds = %124, %80, %62
  %127 = phi i64 [ %125, %124 ], [ %52, %80 ], [ %52, %62 ]
  %128 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %127
  %129 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %130 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %129, i64 0, i32 0
  %131 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %129, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %132

132:                                              ; preds = %144, %126
  %133 = phi i32 [ 0, %126 ], [ %145, %144 ]
  %134 = phi i32 [ 1, %126 ], [ %148, %144 ]
  %135 = load atomic i32, i32* %131 monotonic, align 4
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %140, !prof !2

137:                                              ; preds = %132
  %138 = cmpxchg weak i32* %131, i32 0, i32 1 acquire monotonic
  %139 = extractvalue { i32, i1 } %138, 1
  br i1 %139, label %155, label %140, !prof !3

140:                                              ; preds = %137, %132
  %141 = icmp sgt i32 %134, 0
  br i1 %141, label %150, label %144

142:                                              ; preds = %150
  %143 = add i32 %134, %133
  br label %144

144:                                              ; preds = %142, %140
  %145 = phi i32 [ %133, %140 ], [ %143, %142 ]
  %146 = shl i32 %134, 1
  %147 = icmp slt i32 %146, 64
  %148 = select i1 %147, i32 %146, i32 64
  %149 = icmp slt i32 %145, 1000
  br i1 %149, label %132, label %154

150:                                              ; preds = %140, %150
  %151 = phi i32 [ %152, %150 ], [ 0, %140 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %152 = add nuw nsw i32 %151, 1
  %153 = icmp eq i32 %152, %134
  br i1 %153, label %142, label %150

154:                                              ; preds = %144
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %130) #12
  br label %155

155:                                              ; preds = %137, %154
  %156 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %128, i64 0, i32 0
  %157 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %156, align 8
  %158 = bitcast %"struct.base::internal::SlotSpanMetadata"* %157 to i8**
  %159 = load i8*, i8** %158, align 1
  %160 = icmp eq i8* %159, null
  br i1 %160, label %185, label %161, !prof !6

161:                                              ; preds = %155
  %162 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %157, i64 0, i32 0
  store i8 0, i8* %4, align 1
  %163 = bitcast i8* %159 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %164 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %163, align 8
  %165 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %164, null
  %166 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %164 to i64
  br i1 %165, label %167, label %169

167:                                              ; preds = %161
  %168 = call i64 @llvm.bswap.i64(i64 %166) #12
  br label %179

169:                                              ; preds = %161
  %170 = xor i64 %166, -1
  %171 = getelementptr inbounds i8, i8* %159, i64 8
  %172 = bitcast i8* %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = icmp eq i64 %173, %170
  br i1 %174, label %176, label %175, !prof !3

175:                                              ; preds = %169
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

176:                                              ; preds = %169
  %177 = call i64 @llvm.bswap.i64(i64 %166) #12
  %178 = inttoptr i64 %177 to i8*
  call void @llvm.prefetch(i8* nonnull %178, i32 0, i32 3, i32 1) #12
  br label %179

179:                                              ; preds = %176, %167
  %180 = phi i64 [ %168, %167 ], [ %177, %176 ]
  %181 = inttoptr i64 %180 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %181, %"class.base::internal::PartitionFreelistEntry"** %162, align 1
  %182 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %157, i64 0, i32 3
  %183 = load i16, i16* %182, align 1
  %184 = add i16 %183, 1
  store i16 %184, i16* %182, align 1
  br label %187

185:                                              ; preds = %155
  %186 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %128, %"struct.base::PartitionRoot"* %0, i32 0, i64 %1, i64 16384, i8* nonnull %4) #12
  br label %187

187:                                              ; preds = %185, %179
  %188 = phi i8* [ %159, %179 ], [ %186, %185 ]
  %189 = atomicrmw xchg i32* %131, i32 0 release
  %190 = icmp eq i32 %189, 2
  br i1 %190, label %191, label %258, !prof !6

191:                                              ; preds = %187
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %130) #12
  br label %258

192:                                              ; preds = %42
  %193 = zext i16 %33 to i64
  %194 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %193
  %195 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %196 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %195, i64 0, i32 0
  %197 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %198

198:                                              ; preds = %210, %192
  %199 = phi i32 [ 0, %192 ], [ %211, %210 ]
  %200 = phi i32 [ 1, %192 ], [ %214, %210 ]
  %201 = load atomic i32, i32* %197 monotonic, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %206, !prof !2

203:                                              ; preds = %198
  %204 = cmpxchg weak i32* %197, i32 0, i32 1 acquire monotonic
  %205 = extractvalue { i32, i1 } %204, 1
  br i1 %205, label %221, label %206, !prof !3

206:                                              ; preds = %203, %198
  %207 = icmp sgt i32 %200, 0
  br i1 %207, label %216, label %210

208:                                              ; preds = %216
  %209 = add i32 %200, %199
  br label %210

210:                                              ; preds = %208, %206
  %211 = phi i32 [ %199, %206 ], [ %209, %208 ]
  %212 = shl i32 %200, 1
  %213 = icmp slt i32 %212, 64
  %214 = select i1 %213, i32 %212, i32 64
  %215 = icmp slt i32 %211, 1000
  br i1 %215, label %198, label %220

216:                                              ; preds = %206, %216
  %217 = phi i32 [ %218, %216 ], [ 0, %206 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %218 = add nuw nsw i32 %217, 1
  %219 = icmp eq i32 %218, %200
  br i1 %219, label %208, label %216

220:                                              ; preds = %210
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %196) #12
  br label %221

221:                                              ; preds = %203, %220
  %222 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %194, i64 0, i32 0
  %223 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %222, align 8
  %224 = bitcast %"struct.base::internal::SlotSpanMetadata"* %223 to i8**
  %225 = load i8*, i8** %224, align 1
  %226 = icmp eq i8* %225, null
  br i1 %226, label %251, label %227, !prof !6

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %223, i64 0, i32 0
  store i8 0, i8* %4, align 1
  %229 = bitcast i8* %225 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %230 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %229, align 8
  %231 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %230, null
  %232 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %230 to i64
  br i1 %231, label %233, label %235

233:                                              ; preds = %227
  %234 = call i64 @llvm.bswap.i64(i64 %232) #12
  br label %245

235:                                              ; preds = %227
  %236 = xor i64 %232, -1
  %237 = getelementptr inbounds i8, i8* %225, i64 8
  %238 = bitcast i8* %237 to i64*
  %239 = load i64, i64* %238, align 8
  %240 = icmp eq i64 %239, %236
  br i1 %240, label %242, label %241, !prof !3

241:                                              ; preds = %235
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

242:                                              ; preds = %235
  %243 = call i64 @llvm.bswap.i64(i64 %232) #12
  %244 = inttoptr i64 %243 to i8*
  call void @llvm.prefetch(i8* nonnull %244, i32 0, i32 3, i32 1) #12
  br label %245

245:                                              ; preds = %242, %233
  %246 = phi i64 [ %234, %233 ], [ %243, %242 ]
  %247 = inttoptr i64 %246 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %247, %"class.base::internal::PartitionFreelistEntry"** %228, align 1
  %248 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %223, i64 0, i32 3
  %249 = load i16, i16* %248, align 1
  %250 = add i16 %249, 1
  store i16 %250, i16* %248, align 1
  br label %253

251:                                              ; preds = %221
  %252 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %194, %"struct.base::PartitionRoot"* %0, i32 0, i64 %1, i64 16384, i8* nonnull %4) #12
  br label %253

253:                                              ; preds = %251, %245
  %254 = phi i8* [ %225, %245 ], [ %252, %251 ]
  %255 = atomicrmw xchg i32* %197, i32 0 release
  %256 = icmp eq i32 %255, 2
  br i1 %256, label %257, label %258, !prof !6

257:                                              ; preds = %253
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %196) #12
  br label %258

258:                                              ; preds = %257, %253, %191, %187
  %259 = phi i8* [ %188, %187 ], [ %188, %191 ], [ %254, %253 ], [ %254, %257 ]
  %260 = icmp eq i8* %259, null
  br i1 %260, label %263, label %261, !prof !6

261:                                              ; preds = %121, %258
  %262 = phi i8* [ %259, %258 ], [ %122, %121 ]
  br label %263

263:                                              ; preds = %261, %258
  %264 = phi i8* [ null, %258 ], [ %262, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  store i8* %264, i8** %6, align 8
  br i1 %10, label %265, label %267

265:                                              ; preds = %263, %13
  %266 = phi i8* [ %14, %13 ], [ %264, %263 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %266, i64 %1, i8* %2) #12
  br label %267

267:                                              ; preds = %265, %263
  %268 = load i8*, i8** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i8* %268
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE10AllocFlagsEimPKc(%"struct.base::PartitionRoot"*, i32, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  store i8* null, i8** %7, align 8
  %9 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %10 = and i8 %9, 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %16, !prof !6

12:                                               ; preds = %4
  %13 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %7, i32 %1, i64 %2, i8* %3) #12
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load i8*, i8** %7, align 8
  br label %342

16:                                               ; preds = %12, %4
  %17 = call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %18 = sub nuw nsw i64 64, %17
  %19 = and i64 %18, 255
  %20 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = lshr i64 %2, %22
  %24 = and i64 %23, 7
  %25 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %19
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, %2
  %28 = shl nuw nsw i64 %19, 3
  %29 = or i64 %24, %28
  %30 = icmp ne i64 %27, 0
  %31 = zext i1 %30 to i64
  %32 = add nuw nsw i64 %29, %31
  %33 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %32
  %34 = load i16, i16* %33, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %35 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #12
  store i64 -6148914691236517206, i64* %6, align 8
  %36 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %37 = load i8, i8* %36, align 8
  %38 = icmp eq i8 %37, 2
  br i1 %38, label %39, label %43

39:                                               ; preds = %16
  %40 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %41 = icmp eq i8 %40, 2
  br i1 %41, label %42, label %43, !prof !6

42:                                               ; preds = %39
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %43

43:                                               ; preds = %42, %39, %16
  %44 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %45 = load i8, i8* %44, align 2, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %228, label %47, !prof !12

47:                                               ; preds = %43
  %48 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %49 = call i8* @pthread_getspecific(i32 %48) #12
  %50 = bitcast i8* %49 to %"class.base::internal::ThreadCache"*
  %51 = icmp ugt i8* %49, inttoptr (i64 1 to i8*)
  br i1 %51, label %52, label %120, !prof !3

52:                                               ; preds = %47
  %53 = zext i16 %34 to i64
  %54 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %50, i64 0, i32 3, i32 12, i64 %53
  %55 = load i64, i64* %54, align 8
  %56 = add i64 %55, 1
  store i64 %56, i64* %54, align 8
  %57 = getelementptr inbounds i8, i8* %49, i64 1440
  %58 = bitcast i8* %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %58, align 8
  %61 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %62 = icmp ult i16 %61, %34
  br i1 %62, label %63, label %72, !prof !6

63:                                               ; preds = %52
  %64 = getelementptr inbounds i8, i8* %49, i64 1472
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  %68 = getelementptr inbounds i8, i8* %49, i64 1456
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %129

72:                                               ; preds = %52
  %73 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %50, i64 0, i32 0, i64 %53, i32 0
  %74 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %73, align 8
  %75 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %74, null
  br i1 %75, label %81, label %76, !prof !6

76:                                               ; preds = %72
  %77 = getelementptr inbounds i8, i8* %49, i64 1448
  %78 = bitcast i8* %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %78, align 8
  br label %89

81:                                               ; preds = %72
  %82 = getelementptr inbounds i8, i8* %49, i64 1456
  %83 = bitcast i8* %82 to <2 x i64>*
  %84 = load <2 x i64>, <2 x i64>* %83, align 8
  %85 = add <2 x i64> %84, <i64 1, i64 1>
  %86 = bitcast i8* %82 to <2 x i64>*
  store <2 x i64> %85, <2 x i64>* %86, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %50, i64 %53) #12
  %87 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %73, align 8
  %88 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %87, null
  br i1 %88, label %129, label %89, !prof !6

89:                                               ; preds = %81, %76
  %90 = phi %"class.base::internal::PartitionFreelistEntry"* [ %87, %81 ], [ %74, %76 ]
  %91 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %90, i64 0, i32 0
  %92 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %91, align 8
  %93 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %92, null
  %94 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %92 to i64
  br i1 %93, label %95, label %97

95:                                               ; preds = %89
  %96 = call i64 @llvm.bswap.i64(i64 %94) #12
  br label %106

97:                                               ; preds = %89
  %98 = xor i64 %94, -1
  %99 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %90, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = icmp eq i64 %100, %98
  br i1 %101, label %103, label %102, !prof !3

102:                                              ; preds = %97
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

103:                                              ; preds = %97
  %104 = call i64 @llvm.bswap.i64(i64 %94) #12
  %105 = inttoptr i64 %104 to i8*
  call void @llvm.prefetch(i8* nonnull %105, i32 0, i32 3, i32 1) #12
  br label %106

106:                                              ; preds = %103, %95
  %107 = phi i64 [ %96, %95 ], [ %104, %103 ]
  %108 = inttoptr i64 %107 to %"class.base::internal::PartitionFreelistEntry"*
  %109 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %50, i64 0, i32 0, i64 %53, i32 1
  %110 = load i8, i8* %109, align 8
  %111 = add i8 %110, -1
  store i8 %111, i8* %109, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %108, %"class.base::internal::PartitionFreelistEntry"** %73, align 8
  %112 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %50, i64 0, i32 0, i64 %53, i32 3
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i64
  store i64 %114, i64* %6, align 8
  %115 = getelementptr inbounds i8, i8* %49, i64 1424
  %116 = bitcast i8* %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 %117, %114
  store i64 %118, i64* %116, align 8
  %119 = bitcast %"class.base::internal::PartitionFreelistEntry"* %90 to i8*
  br label %122

120:                                              ; preds = %47
  %121 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %34, i64* nonnull %6) #12
  br label %122

122:                                              ; preds = %120, %106
  %123 = phi i8* [ %121, %120 ], [ %119, %106 ]
  %124 = icmp eq i8* %123, null
  br i1 %124, label %125, label %127, !prof !6

125:                                              ; preds = %122
  %126 = zext i16 %34 to i64
  br label %129

127:                                              ; preds = %122
  %128 = load i64, i64* %6, align 8
  br label %331

129:                                              ; preds = %125, %81, %63
  %130 = phi i64 [ %126, %125 ], [ %53, %81 ], [ %53, %63 ]
  %131 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %130
  %132 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %133 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %132, i64 0, i32 0
  %134 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %132, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %135

135:                                              ; preds = %147, %129
  %136 = phi i32 [ 0, %129 ], [ %148, %147 ]
  %137 = phi i32 [ 1, %129 ], [ %151, %147 ]
  %138 = load atomic i32, i32* %134 monotonic, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %143, !prof !2

140:                                              ; preds = %135
  %141 = cmpxchg weak i32* %134, i32 0, i32 1 acquire monotonic
  %142 = extractvalue { i32, i1 } %141, 1
  br i1 %142, label %158, label %143, !prof !3

143:                                              ; preds = %140, %135
  %144 = icmp sgt i32 %137, 0
  br i1 %144, label %153, label %147

145:                                              ; preds = %153
  %146 = add i32 %137, %136
  br label %147

147:                                              ; preds = %145, %143
  %148 = phi i32 [ %136, %143 ], [ %146, %145 ]
  %149 = shl i32 %137, 1
  %150 = icmp slt i32 %149, 64
  %151 = select i1 %150, i32 %149, i32 64
  %152 = icmp slt i32 %148, 1000
  br i1 %152, label %135, label %157

153:                                              ; preds = %143, %153
  %154 = phi i32 [ %155, %153 ], [ 0, %143 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %155 = add nuw nsw i32 %154, 1
  %156 = icmp eq i32 %155, %137
  br i1 %156, label %145, label %153

157:                                              ; preds = %147
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %133) #12
  br label %158

158:                                              ; preds = %140, %157
  %159 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %131, i64 0, i32 0
  %160 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %159, align 8
  %161 = bitcast %"struct.base::internal::SlotSpanMetadata"* %160 to i8**
  %162 = load i8*, i8** %161, align 1
  %163 = icmp eq i8* %162, null
  br i1 %163, label %191, label %164, !prof !6

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %160, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %166 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %130, i32 3
  %167 = load i32, i32* %166, align 8
  %168 = zext i32 %167 to i64
  %169 = bitcast i8* %162 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %170 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %169, align 8
  %171 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %170, null
  %172 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %170 to i64
  br i1 %171, label %173, label %175

173:                                              ; preds = %164
  %174 = call i64 @llvm.bswap.i64(i64 %172) #12
  br label %185

175:                                              ; preds = %164
  %176 = xor i64 %172, -1
  %177 = getelementptr inbounds i8, i8* %162, i64 8
  %178 = bitcast i8* %177 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = icmp eq i64 %179, %176
  br i1 %180, label %182, label %181, !prof !3

181:                                              ; preds = %175
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

182:                                              ; preds = %175
  %183 = call i64 @llvm.bswap.i64(i64 %172) #12
  %184 = inttoptr i64 %183 to i8*
  call void @llvm.prefetch(i8* nonnull %184, i32 0, i32 3, i32 1) #12
  br label %185

185:                                              ; preds = %182, %173
  %186 = phi i64 [ %174, %173 ], [ %183, %182 ]
  %187 = inttoptr i64 %186 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %187, %"class.base::internal::PartitionFreelistEntry"** %165, align 1
  %188 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %160, i64 0, i32 3
  %189 = load i16, i16* %188, align 1
  %190 = add i16 %189, 1
  store i16 %190, i16* %188, align 1
  br label %222

191:                                              ; preds = %158
  %192 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %131, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 16384, i8* nonnull %5) #12
  %193 = icmp eq i8* %192, null
  br i1 %193, label %222, label %194, !prof !6

194:                                              ; preds = %191
  %195 = ptrtoint i8* %192 to i64
  %196 = and i64 %195, -2097152
  %197 = or i64 %196, 4096
  %198 = inttoptr i64 %197 to i8*
  %199 = lshr i64 %195, 9
  %200 = and i64 %199, 4064
  %201 = getelementptr inbounds i8, i8* %198, i64 %200
  %202 = bitcast i8* %201 to %"struct.base::internal::PartitionPage"*
  %203 = getelementptr inbounds i8, i8* %201, i64 30
  %204 = load i8, i8* %203, align 2
  %205 = zext i8 %204 to i64
  %206 = sub nsw i64 0, %205
  %207 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %202, i64 %206, i32 0, i32 1, i64 21
  %208 = load i8, i8* %207, align 1, !range !5
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %217, !prof !3

210:                                              ; preds = %194
  %211 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %202, i64 %206, i32 0, i32 1, i64 8
  %212 = bitcast i8* %211 to %"struct.base::internal::PartitionBucket"**
  %213 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %212, align 1
  %214 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %213, i64 0, i32 3
  %215 = load i32, i32* %214, align 8
  %216 = zext i32 %215 to i64
  br label %222

217:                                              ; preds = %194
  %218 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %202, i64 %206, i32 0
  %219 = bitcast %union.anon* %218 to %"struct.base::internal::PartitionPage"*
  %220 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %219, i64 1, i32 0, i32 0, i32 0
  %221 = load i64, i64* %220, align 1
  br label %222

222:                                              ; preds = %217, %210, %191, %185
  %223 = phi i64 [ %168, %185 ], [ -6148914691236517206, %191 ], [ %216, %210 ], [ %221, %217 ]
  %224 = phi i8* [ %162, %185 ], [ null, %191 ], [ %192, %210 ], [ %192, %217 ]
  %225 = atomicrmw xchg i32* %134, i32 0 release
  %226 = icmp eq i32 %225, 2
  br i1 %226, label %227, label %327, !prof !6

227:                                              ; preds = %222
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %133) #12
  br label %327

228:                                              ; preds = %43
  %229 = zext i16 %34 to i64
  %230 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %229
  %231 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %232 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %231, i64 0, i32 0
  %233 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %231, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %234

234:                                              ; preds = %246, %228
  %235 = phi i32 [ 0, %228 ], [ %247, %246 ]
  %236 = phi i32 [ 1, %228 ], [ %250, %246 ]
  %237 = load atomic i32, i32* %233 monotonic, align 4
  %238 = icmp eq i32 %237, 0
  br i1 %238, label %239, label %242, !prof !2

239:                                              ; preds = %234
  %240 = cmpxchg weak i32* %233, i32 0, i32 1 acquire monotonic
  %241 = extractvalue { i32, i1 } %240, 1
  br i1 %241, label %257, label %242, !prof !3

242:                                              ; preds = %239, %234
  %243 = icmp sgt i32 %236, 0
  br i1 %243, label %252, label %246

244:                                              ; preds = %252
  %245 = add i32 %236, %235
  br label %246

246:                                              ; preds = %244, %242
  %247 = phi i32 [ %235, %242 ], [ %245, %244 ]
  %248 = shl i32 %236, 1
  %249 = icmp slt i32 %248, 64
  %250 = select i1 %249, i32 %248, i32 64
  %251 = icmp slt i32 %247, 1000
  br i1 %251, label %234, label %256

252:                                              ; preds = %242, %252
  %253 = phi i32 [ %254, %252 ], [ 0, %242 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %254 = add nuw nsw i32 %253, 1
  %255 = icmp eq i32 %254, %236
  br i1 %255, label %244, label %252

256:                                              ; preds = %246
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %232) #12
  br label %257

257:                                              ; preds = %239, %256
  %258 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %230, i64 0, i32 0
  %259 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %258, align 8
  %260 = bitcast %"struct.base::internal::SlotSpanMetadata"* %259 to i8**
  %261 = load i8*, i8** %260, align 1
  %262 = icmp eq i8* %261, null
  br i1 %262, label %290, label %263, !prof !6

263:                                              ; preds = %257
  %264 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %259, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %265 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %229, i32 3
  %266 = load i32, i32* %265, align 8
  %267 = zext i32 %266 to i64
  %268 = bitcast i8* %261 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %269 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %268, align 8
  %270 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %269, null
  %271 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %269 to i64
  br i1 %270, label %272, label %274

272:                                              ; preds = %263
  %273 = call i64 @llvm.bswap.i64(i64 %271) #12
  br label %284

274:                                              ; preds = %263
  %275 = xor i64 %271, -1
  %276 = getelementptr inbounds i8, i8* %261, i64 8
  %277 = bitcast i8* %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = icmp eq i64 %278, %275
  br i1 %279, label %281, label %280, !prof !3

280:                                              ; preds = %274
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

281:                                              ; preds = %274
  %282 = call i64 @llvm.bswap.i64(i64 %271) #12
  %283 = inttoptr i64 %282 to i8*
  call void @llvm.prefetch(i8* nonnull %283, i32 0, i32 3, i32 1) #12
  br label %284

284:                                              ; preds = %281, %272
  %285 = phi i64 [ %273, %272 ], [ %282, %281 ]
  %286 = inttoptr i64 %285 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %286, %"class.base::internal::PartitionFreelistEntry"** %264, align 1
  %287 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %259, i64 0, i32 3
  %288 = load i16, i16* %287, align 1
  %289 = add i16 %288, 1
  store i16 %289, i16* %287, align 1
  br label %321

290:                                              ; preds = %257
  %291 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %230, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %2, i64 16384, i8* nonnull %5) #12
  %292 = icmp eq i8* %291, null
  br i1 %292, label %321, label %293, !prof !6

293:                                              ; preds = %290
  %294 = ptrtoint i8* %291 to i64
  %295 = and i64 %294, -2097152
  %296 = or i64 %295, 4096
  %297 = inttoptr i64 %296 to i8*
  %298 = lshr i64 %294, 9
  %299 = and i64 %298, 4064
  %300 = getelementptr inbounds i8, i8* %297, i64 %299
  %301 = bitcast i8* %300 to %"struct.base::internal::PartitionPage"*
  %302 = getelementptr inbounds i8, i8* %300, i64 30
  %303 = load i8, i8* %302, align 2
  %304 = zext i8 %303 to i64
  %305 = sub nsw i64 0, %304
  %306 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %301, i64 %305, i32 0, i32 1, i64 21
  %307 = load i8, i8* %306, align 1, !range !5
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %309, label %316, !prof !3

309:                                              ; preds = %293
  %310 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %301, i64 %305, i32 0, i32 1, i64 8
  %311 = bitcast i8* %310 to %"struct.base::internal::PartitionBucket"**
  %312 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %311, align 1
  %313 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %312, i64 0, i32 3
  %314 = load i32, i32* %313, align 8
  %315 = zext i32 %314 to i64
  br label %321

316:                                              ; preds = %293
  %317 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %301, i64 %305, i32 0
  %318 = bitcast %union.anon* %317 to %"struct.base::internal::PartitionPage"*
  %319 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %318, i64 1, i32 0, i32 0, i32 0
  %320 = load i64, i64* %319, align 1
  br label %321

321:                                              ; preds = %316, %309, %290, %284
  %322 = phi i64 [ %267, %284 ], [ -6148914691236517206, %290 ], [ %315, %309 ], [ %320, %316 ]
  %323 = phi i8* [ %261, %284 ], [ null, %290 ], [ %291, %309 ], [ %291, %316 ]
  %324 = atomicrmw xchg i32* %233, i32 0 release
  %325 = icmp eq i32 %324, 2
  br i1 %325, label %326, label %327, !prof !6

326:                                              ; preds = %321
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %232) #12
  br label %327

327:                                              ; preds = %326, %321, %227, %222
  %328 = phi i64 [ %223, %222 ], [ %223, %227 ], [ %322, %321 ], [ %322, %326 ]
  %329 = phi i8* [ %224, %222 ], [ %224, %227 ], [ %323, %321 ], [ %323, %326 ]
  %330 = icmp eq i8* %329, null
  br i1 %330, label %340, label %331, !prof !6

331:                                              ; preds = %327, %127
  %332 = phi i8* [ %123, %127 ], [ %329, %327 ]
  %333 = phi i64 [ %128, %127 ], [ %328, %327 ]
  %334 = and i32 %1, 2
  %335 = icmp ne i32 %334, 0
  %336 = load i8, i8* %5, align 1
  %337 = icmp eq i8 %336, 0
  %338 = and i1 %335, %337
  br i1 %338, label %339, label %340, !prof !11

339:                                              ; preds = %331
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %332, i8 0, i64 %333, i1 false) #12
  br label %340

340:                                              ; preds = %339, %331, %327
  %341 = phi i8* [ null, %327 ], [ %332, %331 ], [ %332, %339 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  store i8* %341, i8** %7, align 8
  br i1 %11, label %342, label %344

342:                                              ; preds = %340, %14
  %343 = phi i8* [ %15, %14 ], [ %341, %340 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %343, i64 %2, i8* %3) #12
  br label %344

344:                                              ; preds = %342, %340
  %345 = load i8*, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i8* %345
}

declare zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #2

declare void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZN4base13PartitionRootILb1EE17SizeToBucketIndexEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = tail call i64 @llvm.ctlz.i64(i64 %0, i1 false) #12, !range !9
  %3 = sub nuw nsw i64 64, %2
  %4 = and i64 %3, 255
  %5 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = lshr i64 %0, %7
  %9 = and i64 %8, 7
  %10 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %4
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, %0
  %13 = shl nuw nsw i64 %4, 3
  %14 = or i64 %9, %13
  %15 = icmp ne i64 %12, 0
  %16 = zext i1 %15 to i64
  %17 = add nuw nsw i64 %14, %16
  %18 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %17
  %19 = load i16, i16* %18, align 2
  ret i16 %19
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb1EE19IsQuarantineEnabledEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"*, i16 zeroext, i64* nocapture) local_unnamed_addr #0 align 2 {
  %4 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %5 = tail call i8* @pthread_getspecific(i32 %4) #12
  %6 = icmp eq i8* %5, inttoptr (i64 1 to i8*)
  br i1 %6, label %82, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 27, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %82

11:                                               ; preds = %7
  %12 = atomicrmw add i32* %8, i32 1 monotonic
  %13 = icmp eq i32 %12, 2147483647
  br i1 %13, label %14, label %15, !prof !6

14:                                               ; preds = %11
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([119 x i8], [119 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %15

15:                                               ; preds = %11, %14
  %16 = tail call %"class.base::internal::ThreadCache"* @_ZN4base8internal11ThreadCache6CreateEPNS_13PartitionRootILb1EEE(%"struct.base::PartitionRoot"* %0) #12
  %17 = atomicrmw sub i32* %8, i32 1 monotonic
  %18 = zext i16 %1 to i64
  %19 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 12, i64 %18
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = add i64 %23, 1
  store i64 %24, i64* %22, align 8
  %25 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %26 = icmp ult i16 %25, %1
  br i1 %26, label %27, label %34, !prof !6

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 4
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 2
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %32, 1
  store i64 %33, i64* %31, align 8
  br label %82

34:                                               ; preds = %15
  %35 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 0, i64 %18, i32 0
  %36 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %35, align 8
  %37 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %36, null
  br i1 %37, label %42, label %38, !prof !6

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %39, align 8
  br label %50

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 3, i32 2
  %44 = bitcast i64* %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = add <2 x i64> %45, <i64 1, i64 1>
  %47 = bitcast i64* %43 to <2 x i64>*
  store <2 x i64> %46, <2 x i64>* %47, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %16, i64 %18) #12
  %48 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %35, align 8
  %49 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %48, null
  br i1 %49, label %82, label %50, !prof !6

50:                                               ; preds = %42, %38
  %51 = phi %"class.base::internal::PartitionFreelistEntry"* [ %48, %42 ], [ %36, %38 ]
  %52 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %51, i64 0, i32 0
  %53 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %52, align 8
  %54 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %53, null
  %55 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %53 to i64
  br i1 %54, label %56, label %58

56:                                               ; preds = %50
  %57 = tail call i64 @llvm.bswap.i64(i64 %55) #12
  br label %67

58:                                               ; preds = %50
  %59 = xor i64 %55, -1
  %60 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %51, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %59
  br i1 %62, label %64, label %63, !prof !3

63:                                               ; preds = %58
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

64:                                               ; preds = %58
  %65 = tail call i64 @llvm.bswap.i64(i64 %55) #12
  %66 = inttoptr i64 %65 to i8*
  tail call void @llvm.prefetch(i8* nonnull %66, i32 0, i32 3, i32 1) #12
  br label %67

67:                                               ; preds = %64, %56
  %68 = phi i64 [ %57, %56 ], [ %65, %64 ]
  %69 = inttoptr i64 %68 to %"class.base::internal::PartitionFreelistEntry"*
  %70 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 0, i64 %18, i32 1
  %71 = load i8, i8* %70, align 8
  %72 = add i8 %71, -1
  store i8 %72, i8* %70, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %69, %"class.base::internal::PartitionFreelistEntry"** %35, align 8
  %73 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 0, i64 %18, i32 3
  %74 = load i16, i16* %73, align 2
  %75 = zext i16 %74 to i64
  store i64 %75, i64* %2, align 8
  %76 = load i16, i16* %73, align 2
  %77 = zext i16 %76 to i64
  %78 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %16, i64 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = sub i64 %79, %77
  store i64 %80, i64* %78, align 8
  %81 = bitcast %"class.base::internal::PartitionFreelistEntry"* %51 to i8*
  br label %82

82:                                               ; preds = %67, %42, %27, %3, %7
  %83 = phi i8* [ null, %7 ], [ null, %3 ], [ null, %27 ], [ %81, %67 ], [ null, %42 ]
  ret i8* %83
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE8RawAllocEPNS_8internal15PartitionBucketILb1EEEimmPmPb(%"struct.base::PartitionRoot"*, %"struct.base::internal::PartitionBucket"*, i32, i64, i64, i64*, i8*) local_unnamed_addr #3 comdat align 2 {
  %8 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %23, %7
  %12 = phi i32 [ 0, %7 ], [ %24, %23 ]
  %13 = phi i32 [ 1, %7 ], [ %27, %23 ]
  %14 = load atomic i32, i32* %10 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19, !prof !2

16:                                               ; preds = %11
  %17 = cmpxchg weak i32* %10, i32 0, i32 1 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %34, label %19, !prof !3

19:                                               ; preds = %16, %11
  %20 = icmp sgt i32 %13, 0
  br i1 %20, label %29, label %23

21:                                               ; preds = %29
  %22 = add i32 %13, %12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %12, %19 ], [ %22, %21 ]
  %25 = shl i32 %13, 1
  %26 = icmp slt i32 %25, 64
  %27 = select i1 %26, i32 %25, i32 64
  %28 = icmp slt i32 %24, 1000
  br i1 %28, label %11, label %33

29:                                               ; preds = %19, %29
  %30 = phi i32 [ %31, %29 ], [ 0, %19 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %31 = add nuw nsw i32 %30, 1
  %32 = icmp eq i32 %31, %13
  br i1 %32, label %21, label %29

33:                                               ; preds = %23
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %9) #12
  br label %34

34:                                               ; preds = %16, %33
  %35 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1, i64 0, i32 0
  %36 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %35, align 8
  %37 = bitcast %"struct.base::internal::SlotSpanMetadata"* %36 to i8**
  %38 = load i8*, i8** %37, align 1
  %39 = icmp ult i64 %4, 16385
  %40 = icmp ne i8* %38, null
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %69, !prof !3

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %36, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %44 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = zext i32 %45 to i64
  store i64 %46, i64* %5, align 8
  %47 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %43, align 1
  %48 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %47, i64 0, i32 0
  %49 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %48, align 8
  %50 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %49, null
  %51 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %49 to i64
  br i1 %50, label %52, label %54

52:                                               ; preds = %42
  %53 = tail call i64 @llvm.bswap.i64(i64 %51) #12
  br label %63

54:                                               ; preds = %42
  %55 = xor i64 %51, -1
  %56 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %47, i64 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = icmp eq i64 %57, %55
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %54
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

60:                                               ; preds = %54
  %61 = tail call i64 @llvm.bswap.i64(i64 %51) #12
  %62 = inttoptr i64 %61 to i8*
  tail call void @llvm.prefetch(i8* nonnull %62, i32 0, i32 3, i32 1) #12
  br label %63

63:                                               ; preds = %60, %52
  %64 = phi i64 [ %53, %52 ], [ %61, %60 ]
  %65 = inttoptr i64 %64 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %65, %"class.base::internal::PartitionFreelistEntry"** %43, align 1
  %66 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %36, i64 0, i32 3
  %67 = load i16, i16* %66, align 1
  %68 = add i16 %67, 1
  store i16 %68, i16* %66, align 1
  br label %102

69:                                               ; preds = %34
  %70 = tail call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1, %"struct.base::PartitionRoot"* %0, i32 %2, i64 %3, i64 %4, i8* %6) #12
  %71 = icmp eq i8* %70, null
  br i1 %71, label %102, label %72, !prof !6

72:                                               ; preds = %69
  %73 = ptrtoint i8* %70 to i64
  %74 = and i64 %73, -2097152
  %75 = or i64 %74, 4096
  %76 = inttoptr i64 %75 to i8*
  %77 = lshr i64 %73, 9
  %78 = and i64 %77, 4064
  %79 = getelementptr inbounds i8, i8* %76, i64 %78
  %80 = bitcast i8* %79 to %"struct.base::internal::PartitionPage"*
  %81 = getelementptr inbounds i8, i8* %79, i64 30
  %82 = load i8, i8* %81, align 2
  %83 = zext i8 %82 to i64
  %84 = sub nsw i64 0, %83
  %85 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %80, i64 %84, i32 0, i32 1, i64 21
  %86 = load i8, i8* %85, align 1, !range !5
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %95, !prof !3

88:                                               ; preds = %72
  %89 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %80, i64 %84, i32 0, i32 1, i64 8
  %90 = bitcast i8* %89 to %"struct.base::internal::PartitionBucket"**
  %91 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %90, align 1
  %92 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %91, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = zext i32 %93 to i64
  br label %100

95:                                               ; preds = %72
  %96 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %80, i64 %84, i32 0
  %97 = bitcast %union.anon* %96 to %"struct.base::internal::PartitionPage"*
  %98 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %97, i64 1, i32 0, i32 0, i32 0
  %99 = load i64, i64* %98, align 1
  br label %100

100:                                              ; preds = %95, %88
  %101 = phi i64 [ %94, %88 ], [ %99, %95 ]
  store i64 %101, i64* %5, align 8
  br label %102

102:                                              ; preds = %63, %69, %100
  %103 = phi i8* [ null, %69 ], [ %38, %63 ], [ %70, %100 ]
  %104 = atomicrmw xchg i32* %10, i32 0 release
  %105 = icmp eq i32 %104, 2
  br i1 %105, label %106, label %107, !prof !6

106:                                              ; preds = %102
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %9) #12
  br label %107

107:                                              ; preds = %102, %106
  ret i8* %103
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK4base13PartitionRootILb1EE25AdjustPointerForExtrasAddEPv(%"struct.base::PartitionRoot"*, i8*) local_unnamed_addr #3 comdat align 2 {
  ret i8* %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE7ReallocEPvmPKc(%"struct.base::PartitionRoot"*, i8*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call i8* @_ZN4base13PartitionRootILb1EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot"* %0, i32 0, i8* %1, i64 %2, i8* %3)
  ret i8* %5
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot"*, i32, i8*, i64, i8*) local_unnamed_addr #6 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  %9 = alloca i8, align 1
  %10 = alloca i64, align 8
  %11 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %12 = alloca i8, align 1
  %13 = alloca i64, align 8
  %14 = alloca i8*, align 8
  %15 = alloca i8, align 1
  %16 = alloca i64, align 8
  %17 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %18 = alloca i64, align 8
  %19 = and i32 %1, 4
  %20 = icmp ne i32 %19, 0
  %21 = icmp eq i8* %2, null
  br i1 %21, label %22, label %688, !prof !6

22:                                               ; preds = %5
  br i1 %20, label %23, label %349

23:                                               ; preds = %22
  %24 = tail call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %25 = sub nuw nsw i64 64, %24
  %26 = and i64 %25, 255
  %27 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = zext i8 %28 to i64
  %30 = lshr i64 %3, %29
  %31 = and i64 %30, 7
  %32 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %26
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, %3
  %35 = shl nuw nsw i64 %26, 3
  %36 = or i64 %31, %35
  %37 = icmp ne i64 %34, 0
  %38 = zext i1 %37 to i64
  %39 = add nuw nsw i64 %36, %38
  %40 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %39
  %41 = load i16, i16* %40, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #12
  store i8 0, i8* %15, align 1
  %42 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #12
  store i64 -6148914691236517206, i64* %16, align 8
  %43 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %44 = load i8, i8* %43, align 8
  %45 = icmp eq i8 %44, 2
  br i1 %45, label %46, label %50

46:                                               ; preds = %23
  %47 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %48 = icmp eq i8 %47, 2
  br i1 %48, label %49, label %50, !prof !6

49:                                               ; preds = %46
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %50

50:                                               ; preds = %49, %46, %23
  %51 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %52 = load i8, i8* %51, align 2, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %235, label %54, !prof !12

54:                                               ; preds = %50
  %55 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %56 = tail call i8* @pthread_getspecific(i32 %55) #12
  %57 = bitcast i8* %56 to %"class.base::internal::ThreadCache"*
  %58 = icmp ugt i8* %56, inttoptr (i64 1 to i8*)
  br i1 %58, label %59, label %127, !prof !3

59:                                               ; preds = %54
  %60 = zext i16 %41 to i64
  %61 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %57, i64 0, i32 3, i32 12, i64 %60
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, 1
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds i8, i8* %56, i64 1440
  %65 = bitcast i8* %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, 1
  store i64 %67, i64* %65, align 8
  %68 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %69 = icmp ult i16 %68, %41
  br i1 %69, label %70, label %79, !prof !6

70:                                               ; preds = %59
  %71 = getelementptr inbounds i8, i8* %56, i64 1472
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = getelementptr inbounds i8, i8* %56, i64 1456
  %76 = bitcast i8* %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  store i64 %78, i64* %76, align 8
  br label %136

79:                                               ; preds = %59
  %80 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %57, i64 0, i32 0, i64 %60, i32 0
  %81 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %80, align 8
  %82 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %81, null
  br i1 %82, label %88, label %83, !prof !6

83:                                               ; preds = %79
  %84 = getelementptr inbounds i8, i8* %56, i64 1448
  %85 = bitcast i8* %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %85, align 8
  br label %96

88:                                               ; preds = %79
  %89 = getelementptr inbounds i8, i8* %56, i64 1456
  %90 = bitcast i8* %89 to <2 x i64>*
  %91 = load <2 x i64>, <2 x i64>* %90, align 8
  %92 = add <2 x i64> %91, <i64 1, i64 1>
  %93 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %93, align 8
  tail call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %57, i64 %60) #12
  %94 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %80, align 8
  %95 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %94, null
  br i1 %95, label %136, label %96, !prof !6

96:                                               ; preds = %88, %83
  %97 = phi %"class.base::internal::PartitionFreelistEntry"* [ %94, %88 ], [ %81, %83 ]
  %98 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %97, i64 0, i32 0
  %99 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %98, align 8
  %100 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %99, null
  %101 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %99 to i64
  br i1 %100, label %102, label %104

102:                                              ; preds = %96
  %103 = tail call i64 @llvm.bswap.i64(i64 %101) #12
  br label %113

104:                                              ; preds = %96
  %105 = xor i64 %101, -1
  %106 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %97, i64 0, i32 1
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %105
  br i1 %108, label %110, label %109, !prof !3

109:                                              ; preds = %104
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

110:                                              ; preds = %104
  %111 = tail call i64 @llvm.bswap.i64(i64 %101) #12
  %112 = inttoptr i64 %111 to i8*
  tail call void @llvm.prefetch(i8* nonnull %112, i32 0, i32 3, i32 1) #12
  br label %113

113:                                              ; preds = %110, %102
  %114 = phi i64 [ %103, %102 ], [ %111, %110 ]
  %115 = inttoptr i64 %114 to %"class.base::internal::PartitionFreelistEntry"*
  %116 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %57, i64 0, i32 0, i64 %60, i32 1
  %117 = load i8, i8* %116, align 8
  %118 = add i8 %117, -1
  store i8 %118, i8* %116, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %115, %"class.base::internal::PartitionFreelistEntry"** %80, align 8
  %119 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %57, i64 0, i32 0, i64 %60, i32 3
  %120 = load i16, i16* %119, align 2
  %121 = zext i16 %120 to i64
  store i64 %121, i64* %16, align 8
  %122 = getelementptr inbounds i8, i8* %56, i64 1424
  %123 = bitcast i8* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = sub i64 %124, %121
  store i64 %125, i64* %123, align 8
  %126 = bitcast %"class.base::internal::PartitionFreelistEntry"* %97 to i8*
  br label %129

127:                                              ; preds = %54
  %128 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %41, i64* nonnull %16) #12
  br label %129

129:                                              ; preds = %127, %113
  %130 = phi i8* [ %128, %127 ], [ %126, %113 ]
  %131 = icmp eq i8* %130, null
  br i1 %131, label %132, label %134, !prof !6

132:                                              ; preds = %129
  %133 = zext i16 %41 to i64
  br label %136

134:                                              ; preds = %129
  %135 = load i64, i64* %16, align 8
  br label %338

136:                                              ; preds = %132, %88, %70
  %137 = phi i64 [ %133, %132 ], [ %60, %88 ], [ %60, %70 ]
  %138 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %137
  %139 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %140 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %139, i64 0, i32 0
  %141 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %139, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %142

142:                                              ; preds = %154, %136
  %143 = phi i32 [ 0, %136 ], [ %155, %154 ]
  %144 = phi i32 [ 1, %136 ], [ %158, %154 ]
  %145 = load atomic i32, i32* %141 monotonic, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %150, !prof !2

147:                                              ; preds = %142
  %148 = cmpxchg weak i32* %141, i32 0, i32 1 acquire monotonic
  %149 = extractvalue { i32, i1 } %148, 1
  br i1 %149, label %165, label %150, !prof !3

150:                                              ; preds = %147, %142
  %151 = icmp sgt i32 %144, 0
  br i1 %151, label %160, label %154

152:                                              ; preds = %160
  %153 = add i32 %144, %143
  br label %154

154:                                              ; preds = %152, %150
  %155 = phi i32 [ %143, %150 ], [ %153, %152 ]
  %156 = shl i32 %144, 1
  %157 = icmp slt i32 %156, 64
  %158 = select i1 %157, i32 %156, i32 64
  %159 = icmp slt i32 %155, 1000
  br i1 %159, label %142, label %164

160:                                              ; preds = %150, %160
  %161 = phi i32 [ %162, %160 ], [ 0, %150 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %162 = add nuw nsw i32 %161, 1
  %163 = icmp eq i32 %162, %144
  br i1 %163, label %152, label %160

164:                                              ; preds = %154
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %140) #12
  br label %165

165:                                              ; preds = %147, %164
  %166 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %138, i64 0, i32 0
  %167 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %166, align 8
  %168 = bitcast %"struct.base::internal::SlotSpanMetadata"* %167 to i8**
  %169 = load i8*, i8** %168, align 1
  %170 = icmp eq i8* %169, null
  br i1 %170, label %198, label %171, !prof !6

171:                                              ; preds = %165
  %172 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %167, i64 0, i32 0
  store i8 0, i8* %15, align 1
  %173 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %137, i32 3
  %174 = load i32, i32* %173, align 8
  %175 = zext i32 %174 to i64
  %176 = bitcast i8* %169 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %177 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %176, align 8
  %178 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %177, null
  %179 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %177 to i64
  br i1 %178, label %180, label %182

180:                                              ; preds = %171
  %181 = tail call i64 @llvm.bswap.i64(i64 %179) #12
  br label %192

182:                                              ; preds = %171
  %183 = xor i64 %179, -1
  %184 = getelementptr inbounds i8, i8* %169, i64 8
  %185 = bitcast i8* %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = icmp eq i64 %186, %183
  br i1 %187, label %189, label %188, !prof !3

188:                                              ; preds = %182
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

189:                                              ; preds = %182
  %190 = tail call i64 @llvm.bswap.i64(i64 %179) #12
  %191 = inttoptr i64 %190 to i8*
  tail call void @llvm.prefetch(i8* nonnull %191, i32 0, i32 3, i32 1) #12
  br label %192

192:                                              ; preds = %189, %180
  %193 = phi i64 [ %181, %180 ], [ %190, %189 ]
  %194 = inttoptr i64 %193 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %194, %"class.base::internal::PartitionFreelistEntry"** %172, align 1
  %195 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %167, i64 0, i32 3
  %196 = load i16, i16* %195, align 1
  %197 = add i16 %196, 1
  store i16 %197, i16* %195, align 1
  br label %229

198:                                              ; preds = %165
  %199 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %138, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %15) #12
  %200 = icmp eq i8* %199, null
  br i1 %200, label %229, label %201, !prof !6

201:                                              ; preds = %198
  %202 = ptrtoint i8* %199 to i64
  %203 = and i64 %202, -2097152
  %204 = or i64 %203, 4096
  %205 = inttoptr i64 %204 to i8*
  %206 = lshr i64 %202, 9
  %207 = and i64 %206, 4064
  %208 = getelementptr inbounds i8, i8* %205, i64 %207
  %209 = bitcast i8* %208 to %"struct.base::internal::PartitionPage"*
  %210 = getelementptr inbounds i8, i8* %208, i64 30
  %211 = load i8, i8* %210, align 2
  %212 = zext i8 %211 to i64
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %209, i64 %213, i32 0, i32 1, i64 21
  %215 = load i8, i8* %214, align 1, !range !5
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %224, !prof !3

217:                                              ; preds = %201
  %218 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %209, i64 %213, i32 0, i32 1, i64 8
  %219 = bitcast i8* %218 to %"struct.base::internal::PartitionBucket"**
  %220 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %219, align 1
  %221 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %220, i64 0, i32 3
  %222 = load i32, i32* %221, align 8
  %223 = zext i32 %222 to i64
  br label %229

224:                                              ; preds = %201
  %225 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %209, i64 %213, i32 0
  %226 = bitcast %union.anon* %225 to %"struct.base::internal::PartitionPage"*
  %227 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %226, i64 1, i32 0, i32 0, i32 0
  %228 = load i64, i64* %227, align 1
  br label %229

229:                                              ; preds = %224, %217, %198, %192
  %230 = phi i64 [ %175, %192 ], [ -6148914691236517206, %198 ], [ %223, %217 ], [ %228, %224 ]
  %231 = phi i8* [ %169, %192 ], [ null, %198 ], [ %199, %217 ], [ %199, %224 ]
  %232 = atomicrmw xchg i32* %141, i32 0 release
  %233 = icmp eq i32 %232, 2
  br i1 %233, label %234, label %334, !prof !6

234:                                              ; preds = %229
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %140) #12
  br label %334

235:                                              ; preds = %50
  %236 = zext i16 %41 to i64
  %237 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %236
  %238 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %239 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %238, i64 0, i32 0
  %240 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %238, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %241

241:                                              ; preds = %253, %235
  %242 = phi i32 [ 0, %235 ], [ %254, %253 ]
  %243 = phi i32 [ 1, %235 ], [ %257, %253 ]
  %244 = load atomic i32, i32* %240 monotonic, align 4
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %249, !prof !2

246:                                              ; preds = %241
  %247 = cmpxchg weak i32* %240, i32 0, i32 1 acquire monotonic
  %248 = extractvalue { i32, i1 } %247, 1
  br i1 %248, label %264, label %249, !prof !3

249:                                              ; preds = %246, %241
  %250 = icmp sgt i32 %243, 0
  br i1 %250, label %259, label %253

251:                                              ; preds = %259
  %252 = add i32 %243, %242
  br label %253

253:                                              ; preds = %251, %249
  %254 = phi i32 [ %242, %249 ], [ %252, %251 ]
  %255 = shl i32 %243, 1
  %256 = icmp slt i32 %255, 64
  %257 = select i1 %256, i32 %255, i32 64
  %258 = icmp slt i32 %254, 1000
  br i1 %258, label %241, label %263

259:                                              ; preds = %249, %259
  %260 = phi i32 [ %261, %259 ], [ 0, %249 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %261 = add nuw nsw i32 %260, 1
  %262 = icmp eq i32 %261, %243
  br i1 %262, label %251, label %259

263:                                              ; preds = %253
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %239) #12
  br label %264

264:                                              ; preds = %246, %263
  %265 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %237, i64 0, i32 0
  %266 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %265, align 8
  %267 = bitcast %"struct.base::internal::SlotSpanMetadata"* %266 to i8**
  %268 = load i8*, i8** %267, align 1
  %269 = icmp eq i8* %268, null
  br i1 %269, label %297, label %270, !prof !6

270:                                              ; preds = %264
  %271 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %266, i64 0, i32 0
  store i8 0, i8* %15, align 1
  %272 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %236, i32 3
  %273 = load i32, i32* %272, align 8
  %274 = zext i32 %273 to i64
  %275 = bitcast i8* %268 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %276 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %275, align 8
  %277 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %276, null
  %278 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %276 to i64
  br i1 %277, label %279, label %281

279:                                              ; preds = %270
  %280 = tail call i64 @llvm.bswap.i64(i64 %278) #12
  br label %291

281:                                              ; preds = %270
  %282 = xor i64 %278, -1
  %283 = getelementptr inbounds i8, i8* %268, i64 8
  %284 = bitcast i8* %283 to i64*
  %285 = load i64, i64* %284, align 8
  %286 = icmp eq i64 %285, %282
  br i1 %286, label %288, label %287, !prof !3

287:                                              ; preds = %281
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

288:                                              ; preds = %281
  %289 = tail call i64 @llvm.bswap.i64(i64 %278) #12
  %290 = inttoptr i64 %289 to i8*
  tail call void @llvm.prefetch(i8* nonnull %290, i32 0, i32 3, i32 1) #12
  br label %291

291:                                              ; preds = %288, %279
  %292 = phi i64 [ %280, %279 ], [ %289, %288 ]
  %293 = inttoptr i64 %292 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %293, %"class.base::internal::PartitionFreelistEntry"** %271, align 1
  %294 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %266, i64 0, i32 3
  %295 = load i16, i16* %294, align 1
  %296 = add i16 %295, 1
  store i16 %296, i16* %294, align 1
  br label %328

297:                                              ; preds = %264
  %298 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %237, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %15) #12
  %299 = icmp eq i8* %298, null
  br i1 %299, label %328, label %300, !prof !6

300:                                              ; preds = %297
  %301 = ptrtoint i8* %298 to i64
  %302 = and i64 %301, -2097152
  %303 = or i64 %302, 4096
  %304 = inttoptr i64 %303 to i8*
  %305 = lshr i64 %301, 9
  %306 = and i64 %305, 4064
  %307 = getelementptr inbounds i8, i8* %304, i64 %306
  %308 = bitcast i8* %307 to %"struct.base::internal::PartitionPage"*
  %309 = getelementptr inbounds i8, i8* %307, i64 30
  %310 = load i8, i8* %309, align 2
  %311 = zext i8 %310 to i64
  %312 = sub nsw i64 0, %311
  %313 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %308, i64 %312, i32 0, i32 1, i64 21
  %314 = load i8, i8* %313, align 1, !range !5
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %316, label %323, !prof !3

316:                                              ; preds = %300
  %317 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %308, i64 %312, i32 0, i32 1, i64 8
  %318 = bitcast i8* %317 to %"struct.base::internal::PartitionBucket"**
  %319 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %318, align 1
  %320 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %319, i64 0, i32 3
  %321 = load i32, i32* %320, align 8
  %322 = zext i32 %321 to i64
  br label %328

323:                                              ; preds = %300
  %324 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %308, i64 %312, i32 0
  %325 = bitcast %union.anon* %324 to %"struct.base::internal::PartitionPage"*
  %326 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %325, i64 1, i32 0, i32 0, i32 0
  %327 = load i64, i64* %326, align 1
  br label %328

328:                                              ; preds = %323, %316, %297, %291
  %329 = phi i64 [ %274, %291 ], [ -6148914691236517206, %297 ], [ %322, %316 ], [ %327, %323 ]
  %330 = phi i8* [ %268, %291 ], [ null, %297 ], [ %298, %316 ], [ %298, %323 ]
  %331 = atomicrmw xchg i32* %240, i32 0 release
  %332 = icmp eq i32 %331, 2
  br i1 %332, label %333, label %334, !prof !6

333:                                              ; preds = %328
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %239) #12
  br label %334

334:                                              ; preds = %333, %328, %234, %229
  %335 = phi i64 [ %230, %229 ], [ %230, %234 ], [ %329, %328 ], [ %329, %333 ]
  %336 = phi i8* [ %231, %229 ], [ %231, %234 ], [ %330, %328 ], [ %330, %333 ]
  %337 = icmp eq i8* %336, null
  br i1 %337, label %347, label %338, !prof !6

338:                                              ; preds = %334, %134
  %339 = phi i8* [ %130, %134 ], [ %336, %334 ]
  %340 = phi i64 [ %135, %134 ], [ %335, %334 ]
  %341 = and i32 %1, 2
  %342 = icmp ne i32 %341, 0
  %343 = load i8, i8* %15, align 1
  %344 = icmp eq i8 %343, 0
  %345 = and i1 %342, %344
  br i1 %345, label %346, label %347, !prof !11

346:                                              ; preds = %338
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %339, i8 0, i64 %340, i1 false) #12
  br label %347

347:                                              ; preds = %334, %338, %346
  %348 = phi i8* [ null, %334 ], [ %339, %338 ], [ %339, %346 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #12
  br label %1990

349:                                              ; preds = %22
  %350 = bitcast i8** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %350) #12
  store i8* null, i8** %14, align 8
  %351 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %352 = and i8 %351, 1
  %353 = icmp ne i8 %352, 0
  br i1 %353, label %354, label %358, !prof !6

354:                                              ; preds = %349
  %355 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %14, i32 %1, i64 %3, i8* %4) #12
  br i1 %355, label %356, label %358

356:                                              ; preds = %354
  %357 = load i8*, i8** %14, align 8
  br label %684

358:                                              ; preds = %354, %349
  %359 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %360 = sub nuw nsw i64 64, %359
  %361 = and i64 %360, 255
  %362 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %361
  %363 = load i8, i8* %362, align 1
  %364 = zext i8 %363 to i64
  %365 = lshr i64 %3, %364
  %366 = and i64 %365, 7
  %367 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %361
  %368 = load i64, i64* %367, align 8
  %369 = and i64 %368, %3
  %370 = shl nuw nsw i64 %361, 3
  %371 = or i64 %366, %370
  %372 = icmp ne i64 %369, 0
  %373 = zext i1 %372 to i64
  %374 = add nuw nsw i64 %371, %373
  %375 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %374
  %376 = load i16, i16* %375, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  store i8 0, i8* %12, align 1
  %377 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #12
  store i64 -6148914691236517206, i64* %13, align 8
  %378 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %379 = load i8, i8* %378, align 8
  %380 = icmp eq i8 %379, 2
  br i1 %380, label %381, label %385

381:                                              ; preds = %358
  %382 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %383 = icmp eq i8 %382, 2
  br i1 %383, label %384, label %385, !prof !6

384:                                              ; preds = %381
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %385

385:                                              ; preds = %384, %381, %358
  %386 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %387 = load i8, i8* %386, align 2, !range !5
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %570, label %389, !prof !12

389:                                              ; preds = %385
  %390 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %391 = call i8* @pthread_getspecific(i32 %390) #12
  %392 = bitcast i8* %391 to %"class.base::internal::ThreadCache"*
  %393 = icmp ugt i8* %391, inttoptr (i64 1 to i8*)
  br i1 %393, label %394, label %462, !prof !3

394:                                              ; preds = %389
  %395 = zext i16 %376 to i64
  %396 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %392, i64 0, i32 3, i32 12, i64 %395
  %397 = load i64, i64* %396, align 8
  %398 = add i64 %397, 1
  store i64 %398, i64* %396, align 8
  %399 = getelementptr inbounds i8, i8* %391, i64 1440
  %400 = bitcast i8* %399 to i64*
  %401 = load i64, i64* %400, align 8
  %402 = add i64 %401, 1
  store i64 %402, i64* %400, align 8
  %403 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %404 = icmp ult i16 %403, %376
  br i1 %404, label %405, label %414, !prof !6

405:                                              ; preds = %394
  %406 = getelementptr inbounds i8, i8* %391, i64 1472
  %407 = bitcast i8* %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = add i64 %408, 1
  store i64 %409, i64* %407, align 8
  %410 = getelementptr inbounds i8, i8* %391, i64 1456
  %411 = bitcast i8* %410 to i64*
  %412 = load i64, i64* %411, align 8
  %413 = add i64 %412, 1
  store i64 %413, i64* %411, align 8
  br label %471

414:                                              ; preds = %394
  %415 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %392, i64 0, i32 0, i64 %395, i32 0
  %416 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %415, align 8
  %417 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %416, null
  br i1 %417, label %423, label %418, !prof !6

418:                                              ; preds = %414
  %419 = getelementptr inbounds i8, i8* %391, i64 1448
  %420 = bitcast i8* %419 to i64*
  %421 = load i64, i64* %420, align 8
  %422 = add i64 %421, 1
  store i64 %422, i64* %420, align 8
  br label %431

423:                                              ; preds = %414
  %424 = getelementptr inbounds i8, i8* %391, i64 1456
  %425 = bitcast i8* %424 to <2 x i64>*
  %426 = load <2 x i64>, <2 x i64>* %425, align 8
  %427 = add <2 x i64> %426, <i64 1, i64 1>
  %428 = bitcast i8* %424 to <2 x i64>*
  store <2 x i64> %427, <2 x i64>* %428, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %392, i64 %395) #12
  %429 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %415, align 8
  %430 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %429, null
  br i1 %430, label %471, label %431, !prof !6

431:                                              ; preds = %423, %418
  %432 = phi %"class.base::internal::PartitionFreelistEntry"* [ %429, %423 ], [ %416, %418 ]
  %433 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %432, i64 0, i32 0
  %434 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %433, align 8
  %435 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %434, null
  %436 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %434 to i64
  br i1 %435, label %437, label %439

437:                                              ; preds = %431
  %438 = call i64 @llvm.bswap.i64(i64 %436) #12
  br label %448

439:                                              ; preds = %431
  %440 = xor i64 %436, -1
  %441 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %432, i64 0, i32 1
  %442 = load i64, i64* %441, align 8
  %443 = icmp eq i64 %442, %440
  br i1 %443, label %445, label %444, !prof !3

444:                                              ; preds = %439
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

445:                                              ; preds = %439
  %446 = call i64 @llvm.bswap.i64(i64 %436) #12
  %447 = inttoptr i64 %446 to i8*
  call void @llvm.prefetch(i8* nonnull %447, i32 0, i32 3, i32 1) #12
  br label %448

448:                                              ; preds = %445, %437
  %449 = phi i64 [ %438, %437 ], [ %446, %445 ]
  %450 = inttoptr i64 %449 to %"class.base::internal::PartitionFreelistEntry"*
  %451 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %392, i64 0, i32 0, i64 %395, i32 1
  %452 = load i8, i8* %451, align 8
  %453 = add i8 %452, -1
  store i8 %453, i8* %451, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %450, %"class.base::internal::PartitionFreelistEntry"** %415, align 8
  %454 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %392, i64 0, i32 0, i64 %395, i32 3
  %455 = load i16, i16* %454, align 2
  %456 = zext i16 %455 to i64
  store i64 %456, i64* %13, align 8
  %457 = getelementptr inbounds i8, i8* %391, i64 1424
  %458 = bitcast i8* %457 to i64*
  %459 = load i64, i64* %458, align 8
  %460 = sub i64 %459, %456
  store i64 %460, i64* %458, align 8
  %461 = bitcast %"class.base::internal::PartitionFreelistEntry"* %432 to i8*
  br label %464

462:                                              ; preds = %389
  %463 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %376, i64* nonnull %13) #12
  br label %464

464:                                              ; preds = %462, %448
  %465 = phi i8* [ %463, %462 ], [ %461, %448 ]
  %466 = icmp eq i8* %465, null
  br i1 %466, label %467, label %469, !prof !6

467:                                              ; preds = %464
  %468 = zext i16 %376 to i64
  br label %471

469:                                              ; preds = %464
  %470 = load i64, i64* %13, align 8
  br label %673

471:                                              ; preds = %467, %423, %405
  %472 = phi i64 [ %468, %467 ], [ %395, %423 ], [ %395, %405 ]
  %473 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %472
  %474 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %475 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %474, i64 0, i32 0
  %476 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %474, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %477

477:                                              ; preds = %489, %471
  %478 = phi i32 [ 0, %471 ], [ %490, %489 ]
  %479 = phi i32 [ 1, %471 ], [ %493, %489 ]
  %480 = load atomic i32, i32* %476 monotonic, align 4
  %481 = icmp eq i32 %480, 0
  br i1 %481, label %482, label %485, !prof !2

482:                                              ; preds = %477
  %483 = cmpxchg weak i32* %476, i32 0, i32 1 acquire monotonic
  %484 = extractvalue { i32, i1 } %483, 1
  br i1 %484, label %500, label %485, !prof !3

485:                                              ; preds = %482, %477
  %486 = icmp sgt i32 %479, 0
  br i1 %486, label %495, label %489

487:                                              ; preds = %495
  %488 = add i32 %479, %478
  br label %489

489:                                              ; preds = %487, %485
  %490 = phi i32 [ %478, %485 ], [ %488, %487 ]
  %491 = shl i32 %479, 1
  %492 = icmp slt i32 %491, 64
  %493 = select i1 %492, i32 %491, i32 64
  %494 = icmp slt i32 %490, 1000
  br i1 %494, label %477, label %499

495:                                              ; preds = %485, %495
  %496 = phi i32 [ %497, %495 ], [ 0, %485 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %497 = add nuw nsw i32 %496, 1
  %498 = icmp eq i32 %497, %479
  br i1 %498, label %487, label %495

499:                                              ; preds = %489
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %475) #12
  br label %500

500:                                              ; preds = %482, %499
  %501 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %473, i64 0, i32 0
  %502 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %501, align 8
  %503 = bitcast %"struct.base::internal::SlotSpanMetadata"* %502 to i8**
  %504 = load i8*, i8** %503, align 1
  %505 = icmp eq i8* %504, null
  br i1 %505, label %533, label %506, !prof !6

506:                                              ; preds = %500
  %507 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %502, i64 0, i32 0
  store i8 0, i8* %12, align 1
  %508 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %472, i32 3
  %509 = load i32, i32* %508, align 8
  %510 = zext i32 %509 to i64
  %511 = bitcast i8* %504 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %512 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %511, align 8
  %513 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %512, null
  %514 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %512 to i64
  br i1 %513, label %515, label %517

515:                                              ; preds = %506
  %516 = call i64 @llvm.bswap.i64(i64 %514) #12
  br label %527

517:                                              ; preds = %506
  %518 = xor i64 %514, -1
  %519 = getelementptr inbounds i8, i8* %504, i64 8
  %520 = bitcast i8* %519 to i64*
  %521 = load i64, i64* %520, align 8
  %522 = icmp eq i64 %521, %518
  br i1 %522, label %524, label %523, !prof !3

523:                                              ; preds = %517
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

524:                                              ; preds = %517
  %525 = call i64 @llvm.bswap.i64(i64 %514) #12
  %526 = inttoptr i64 %525 to i8*
  call void @llvm.prefetch(i8* nonnull %526, i32 0, i32 3, i32 1) #12
  br label %527

527:                                              ; preds = %524, %515
  %528 = phi i64 [ %516, %515 ], [ %525, %524 ]
  %529 = inttoptr i64 %528 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %529, %"class.base::internal::PartitionFreelistEntry"** %507, align 1
  %530 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %502, i64 0, i32 3
  %531 = load i16, i16* %530, align 1
  %532 = add i16 %531, 1
  store i16 %532, i16* %530, align 1
  br label %564

533:                                              ; preds = %500
  %534 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %473, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %12) #12
  %535 = icmp eq i8* %534, null
  br i1 %535, label %564, label %536, !prof !6

536:                                              ; preds = %533
  %537 = ptrtoint i8* %534 to i64
  %538 = and i64 %537, -2097152
  %539 = or i64 %538, 4096
  %540 = inttoptr i64 %539 to i8*
  %541 = lshr i64 %537, 9
  %542 = and i64 %541, 4064
  %543 = getelementptr inbounds i8, i8* %540, i64 %542
  %544 = bitcast i8* %543 to %"struct.base::internal::PartitionPage"*
  %545 = getelementptr inbounds i8, i8* %543, i64 30
  %546 = load i8, i8* %545, align 2
  %547 = zext i8 %546 to i64
  %548 = sub nsw i64 0, %547
  %549 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %544, i64 %548, i32 0, i32 1, i64 21
  %550 = load i8, i8* %549, align 1, !range !5
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %552, label %559, !prof !3

552:                                              ; preds = %536
  %553 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %544, i64 %548, i32 0, i32 1, i64 8
  %554 = bitcast i8* %553 to %"struct.base::internal::PartitionBucket"**
  %555 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %554, align 1
  %556 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %555, i64 0, i32 3
  %557 = load i32, i32* %556, align 8
  %558 = zext i32 %557 to i64
  br label %564

559:                                              ; preds = %536
  %560 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %544, i64 %548, i32 0
  %561 = bitcast %union.anon* %560 to %"struct.base::internal::PartitionPage"*
  %562 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %561, i64 1, i32 0, i32 0, i32 0
  %563 = load i64, i64* %562, align 1
  br label %564

564:                                              ; preds = %559, %552, %533, %527
  %565 = phi i64 [ %510, %527 ], [ -6148914691236517206, %533 ], [ %558, %552 ], [ %563, %559 ]
  %566 = phi i8* [ %504, %527 ], [ null, %533 ], [ %534, %552 ], [ %534, %559 ]
  %567 = atomicrmw xchg i32* %476, i32 0 release
  %568 = icmp eq i32 %567, 2
  br i1 %568, label %569, label %669, !prof !6

569:                                              ; preds = %564
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %475) #12
  br label %669

570:                                              ; preds = %385
  %571 = zext i16 %376 to i64
  %572 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %571
  %573 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %574 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %573, i64 0, i32 0
  %575 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %573, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %576

576:                                              ; preds = %588, %570
  %577 = phi i32 [ 0, %570 ], [ %589, %588 ]
  %578 = phi i32 [ 1, %570 ], [ %592, %588 ]
  %579 = load atomic i32, i32* %575 monotonic, align 4
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %584, !prof !2

581:                                              ; preds = %576
  %582 = cmpxchg weak i32* %575, i32 0, i32 1 acquire monotonic
  %583 = extractvalue { i32, i1 } %582, 1
  br i1 %583, label %599, label %584, !prof !3

584:                                              ; preds = %581, %576
  %585 = icmp sgt i32 %578, 0
  br i1 %585, label %594, label %588

586:                                              ; preds = %594
  %587 = add i32 %578, %577
  br label %588

588:                                              ; preds = %586, %584
  %589 = phi i32 [ %577, %584 ], [ %587, %586 ]
  %590 = shl i32 %578, 1
  %591 = icmp slt i32 %590, 64
  %592 = select i1 %591, i32 %590, i32 64
  %593 = icmp slt i32 %589, 1000
  br i1 %593, label %576, label %598

594:                                              ; preds = %584, %594
  %595 = phi i32 [ %596, %594 ], [ 0, %584 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %596 = add nuw nsw i32 %595, 1
  %597 = icmp eq i32 %596, %578
  br i1 %597, label %586, label %594

598:                                              ; preds = %588
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %574) #12
  br label %599

599:                                              ; preds = %581, %598
  %600 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %572, i64 0, i32 0
  %601 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %600, align 8
  %602 = bitcast %"struct.base::internal::SlotSpanMetadata"* %601 to i8**
  %603 = load i8*, i8** %602, align 1
  %604 = icmp eq i8* %603, null
  br i1 %604, label %632, label %605, !prof !6

605:                                              ; preds = %599
  %606 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %601, i64 0, i32 0
  store i8 0, i8* %12, align 1
  %607 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %571, i32 3
  %608 = load i32, i32* %607, align 8
  %609 = zext i32 %608 to i64
  %610 = bitcast i8* %603 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %611 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %610, align 8
  %612 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %611, null
  %613 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %611 to i64
  br i1 %612, label %614, label %616

614:                                              ; preds = %605
  %615 = call i64 @llvm.bswap.i64(i64 %613) #12
  br label %626

616:                                              ; preds = %605
  %617 = xor i64 %613, -1
  %618 = getelementptr inbounds i8, i8* %603, i64 8
  %619 = bitcast i8* %618 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = icmp eq i64 %620, %617
  br i1 %621, label %623, label %622, !prof !3

622:                                              ; preds = %616
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

623:                                              ; preds = %616
  %624 = call i64 @llvm.bswap.i64(i64 %613) #12
  %625 = inttoptr i64 %624 to i8*
  call void @llvm.prefetch(i8* nonnull %625, i32 0, i32 3, i32 1) #12
  br label %626

626:                                              ; preds = %623, %614
  %627 = phi i64 [ %615, %614 ], [ %624, %623 ]
  %628 = inttoptr i64 %627 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %628, %"class.base::internal::PartitionFreelistEntry"** %606, align 1
  %629 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %601, i64 0, i32 3
  %630 = load i16, i16* %629, align 1
  %631 = add i16 %630, 1
  store i16 %631, i16* %629, align 1
  br label %663

632:                                              ; preds = %599
  %633 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %572, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %12) #12
  %634 = icmp eq i8* %633, null
  br i1 %634, label %663, label %635, !prof !6

635:                                              ; preds = %632
  %636 = ptrtoint i8* %633 to i64
  %637 = and i64 %636, -2097152
  %638 = or i64 %637, 4096
  %639 = inttoptr i64 %638 to i8*
  %640 = lshr i64 %636, 9
  %641 = and i64 %640, 4064
  %642 = getelementptr inbounds i8, i8* %639, i64 %641
  %643 = bitcast i8* %642 to %"struct.base::internal::PartitionPage"*
  %644 = getelementptr inbounds i8, i8* %642, i64 30
  %645 = load i8, i8* %644, align 2
  %646 = zext i8 %645 to i64
  %647 = sub nsw i64 0, %646
  %648 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %643, i64 %647, i32 0, i32 1, i64 21
  %649 = load i8, i8* %648, align 1, !range !5
  %650 = icmp eq i8 %649, 0
  br i1 %650, label %651, label %658, !prof !3

651:                                              ; preds = %635
  %652 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %643, i64 %647, i32 0, i32 1, i64 8
  %653 = bitcast i8* %652 to %"struct.base::internal::PartitionBucket"**
  %654 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %653, align 1
  %655 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %654, i64 0, i32 3
  %656 = load i32, i32* %655, align 8
  %657 = zext i32 %656 to i64
  br label %663

658:                                              ; preds = %635
  %659 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %643, i64 %647, i32 0
  %660 = bitcast %union.anon* %659 to %"struct.base::internal::PartitionPage"*
  %661 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %660, i64 1, i32 0, i32 0, i32 0
  %662 = load i64, i64* %661, align 1
  br label %663

663:                                              ; preds = %658, %651, %632, %626
  %664 = phi i64 [ %609, %626 ], [ -6148914691236517206, %632 ], [ %657, %651 ], [ %662, %658 ]
  %665 = phi i8* [ %603, %626 ], [ null, %632 ], [ %633, %651 ], [ %633, %658 ]
  %666 = atomicrmw xchg i32* %575, i32 0 release
  %667 = icmp eq i32 %666, 2
  br i1 %667, label %668, label %669, !prof !6

668:                                              ; preds = %663
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %574) #12
  br label %669

669:                                              ; preds = %668, %663, %569, %564
  %670 = phi i64 [ %565, %564 ], [ %565, %569 ], [ %664, %663 ], [ %664, %668 ]
  %671 = phi i8* [ %566, %564 ], [ %566, %569 ], [ %665, %663 ], [ %665, %668 ]
  %672 = icmp eq i8* %671, null
  br i1 %672, label %682, label %673, !prof !6

673:                                              ; preds = %669, %469
  %674 = phi i8* [ %465, %469 ], [ %671, %669 ]
  %675 = phi i64 [ %470, %469 ], [ %670, %669 ]
  %676 = and i32 %1, 2
  %677 = icmp ne i32 %676, 0
  %678 = load i8, i8* %12, align 1
  %679 = icmp eq i8 %678, 0
  %680 = and i1 %677, %679
  br i1 %680, label %681, label %682, !prof !11

681:                                              ; preds = %673
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %674, i8 0, i64 %675, i1 false) #12
  br label %682

682:                                              ; preds = %681, %673, %669
  %683 = phi i8* [ null, %669 ], [ %674, %673 ], [ %674, %681 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  store i8* %683, i8** %14, align 8
  br i1 %353, label %684, label %686

684:                                              ; preds = %682, %356
  %685 = phi i8* [ %357, %356 ], [ %683, %682 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %685, i64 %3, i8* %4) #12
  br label %686

686:                                              ; preds = %684, %682
  %687 = load i8*, i8** %14, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %350) #12
  br label %1990

688:                                              ; preds = %5
  %689 = icmp eq i64 %3, 0
  br i1 %689, label %690, label %928, !prof !6

690:                                              ; preds = %688
  %691 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %692 = and i8 %691, 1
  %693 = icmp eq i8 %692, 0
  br i1 %693, label %696, label %694

694:                                              ; preds = %690
  tail call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %2) #12
  %695 = tail call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %2) #12
  br i1 %695, label %1990, label %696

696:                                              ; preds = %694, %690
  tail call void @llvm.prefetch(i8* nonnull %2, i32 0, i32 3, i32 1) #12
  %697 = ptrtoint i8* %2 to i64
  %698 = and i64 %697, -2097152
  %699 = or i64 %698, 4096
  %700 = inttoptr i64 %699 to i8*
  %701 = lshr i64 %697, 9
  %702 = and i64 %701, 4064
  %703 = getelementptr inbounds i8, i8* %700, i64 %702
  %704 = bitcast i8* %703 to %"struct.base::internal::PartitionPage"*
  %705 = getelementptr inbounds i8, i8* %703, i64 30
  %706 = load i8, i8* %705, align 2
  %707 = zext i8 %706 to i64
  %708 = sub nsw i64 0, %707
  %709 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %704, i64 %708, i32 0
  %710 = bitcast %union.anon* %709 to %"struct.base::internal::SlotSpanMetadata"*
  %711 = bitcast %union.anon* %709 to i8*
  tail call void @llvm.prefetch(i8* %711, i32 0, i32 3, i32 1) #12
  %712 = ptrtoint %union.anon* %709 to i64
  %713 = and i64 %712, -4096
  %714 = inttoptr i64 %713 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %715 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %714, i64 0, i32 0
  %716 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %715, align 4096
  %717 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 0
  %718 = load i8, i8* %717, align 8
  %719 = icmp eq i8 %718, 2
  br i1 %719, label %720, label %789, !prof !6

720:                                              ; preds = %696
  %721 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %722 = icmp eq i8 %721, 2
  br i1 %722, label %723, label %724, !prof !6

723:                                              ; preds = %720
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %724

724:                                              ; preds = %723, %720
  %725 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %704, i64 %708, i32 0, i32 1, i64 8
  %726 = bitcast i8* %725 to %"struct.base::internal::PartitionBucket"**
  %727 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %726, align 1
  %728 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 10, i64 0
  %729 = icmp ugt %"struct.base::internal::PartitionBucket"* %728, %727
  %730 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 11
  %731 = icmp ult %"struct.base::internal::PartitionBucket"* %730, %727
  %732 = or i1 %729, %731
  br i1 %732, label %789, label %733, !prof !6

733:                                              ; preds = %724
  %734 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %704, i64 %708, i32 0, i32 1, i64 21
  %735 = load i8, i8* %734, align 1, !range !5
  %736 = icmp eq i8 %735, 0
  br i1 %736, label %737, label %741, !prof !3

737:                                              ; preds = %733
  %738 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %727, i64 0, i32 3
  %739 = load i32, i32* %738, align 8
  %740 = zext i32 %739 to i64
  br label %748

741:                                              ; preds = %733
  %742 = bitcast %union.anon* %709 to %"struct.base::internal::PartitionPage"*
  %743 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %742, i64 1, i32 0, i32 0, i32 0
  %744 = load i64, i64* %743, align 1
  %745 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %727, i64 0, i32 3
  %746 = load i32, i32* %745, align 8
  %747 = zext i32 %746 to i64
  br label %748

748:                                              ; preds = %741, %737
  %749 = phi i64 [ %740, %737 ], [ %747, %741 ]
  %750 = phi i64 [ %740, %737 ], [ %744, %741 ]
  %751 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %752 = inttoptr i64 %698 to i8*
  %753 = and i64 %751, 1
  %754 = icmp eq i64 %753, 0
  %755 = select i1 %754, i64 16384, i64 32768
  %756 = getelementptr inbounds i8, i8* %752, i64 %755
  %757 = bitcast i8* %756 to %"class.base::internal::ObjectBitmap"*
  %758 = lshr i64 %697, 4
  %759 = lshr i64 %697, 10
  %760 = and i64 %759, 2047
  %761 = and i64 %758, 63
  %762 = shl i64 1, %761
  %763 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %757, i64 0, i32 0, i32 0, i64 %760
  %764 = atomicrmw or i64* %763, i64 %762 monotonic
  %765 = and i64 %764, %762
  %766 = icmp eq i64 %765, 0
  br i1 %766, label %768, label %767, !prof !3

767:                                              ; preds = %748
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

768:                                              ; preds = %748
  %769 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %749 monotonic
  %770 = add i64 %769, %749
  %771 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %772 = icmp ugt i64 %770, %771
  br i1 %772, label %773, label %779

773:                                              ; preds = %768
  %774 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %775 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %774 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %776 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %775, align 8
  %777 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %776, align 8
  %778 = tail call zeroext i1 %777(%"class.base::internal::PCScanSchedulingBackend"* %774) #12
  br label %779

779:                                              ; preds = %773, %768
  %780 = phi i1 [ false, %768 ], [ %778, %773 ]
  %781 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %782 = icmp eq i8 %781, 1
  br i1 %782, label %783, label %784

783:                                              ; preds = %779
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 %750, i1 false) #12
  br label %784

784:                                              ; preds = %783, %779
  br i1 %780, label %785, label %1990, !prof !6

785:                                              ; preds = %784
  %786 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %787 = icmp eq i8 %786, 0
  br i1 %787, label %788, label %1990

788:                                              ; preds = %785
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %1990

789:                                              ; preds = %724, %696
  %790 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 2
  %791 = load i8, i8* %790, align 2, !range !5
  %792 = icmp eq i8 %791, 0
  br i1 %792, label %861, label %793, !prof !6

793:                                              ; preds = %789
  %794 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %704, i64 %708, i32 0, i32 1, i64 8
  %795 = bitcast i8* %794 to %"struct.base::internal::PartitionBucket"**
  %796 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %795, align 1
  %797 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 10, i64 0
  %798 = icmp ule %"struct.base::internal::PartitionBucket"* %797, %796
  %799 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 11
  %800 = icmp uge %"struct.base::internal::PartitionBucket"* %799, %796
  %801 = and i1 %800, %798
  %802 = ptrtoint %"struct.base::internal::PartitionBucket"* %796 to i64
  br i1 %801, label %803, label %861, !prof !3

803:                                              ; preds = %793
  %804 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %805 = tail call i8* @pthread_getspecific(i32 %804) #12
  %806 = bitcast i8* %805 to %"class.base::internal::ThreadCache"*
  %807 = icmp ugt i8* %805, inttoptr (i64 1 to i8*)
  br i1 %807, label %808, label %861, !prof !3

808:                                              ; preds = %803
  %809 = ptrtoint %"struct.base::internal::PartitionBucket"* %797 to i64
  %810 = sub i64 %802, %809
  %811 = sdiv exact i64 %810, 40
  %812 = getelementptr inbounds i8, i8* %805, i64 1480
  %813 = bitcast i8* %812 to i64*
  %814 = load i64, i64* %813, align 8
  %815 = add i64 %814, 1
  store i64 %815, i64* %813, align 8
  %816 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %817 = zext i16 %816 to i64
  %818 = icmp ugt i64 %811, %817
  br i1 %818, label %819, label %824, !prof !6

819:                                              ; preds = %808
  %820 = getelementptr inbounds i8, i8* %805, i64 1496
  %821 = bitcast i8* %820 to i64*
  %822 = load i64, i64* %821, align 8
  %823 = add i64 %822, 1
  store i64 %823, i64* %821, align 8
  br label %861

824:                                              ; preds = %808
  %825 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %806, i64 0, i32 0, i64 %811
  %826 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %825 to i64*
  %827 = load i64, i64* %826, align 8
  %828 = tail call i64 @llvm.bswap.i64(i64 %827) #12
  %829 = inttoptr i64 %828 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %830 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %829, %"struct.base::internal::EncodedPartitionFreelistEntry"** %830, align 8
  %831 = xor i64 %828, -1
  %832 = getelementptr inbounds i8, i8* %2, i64 8
  %833 = bitcast i8* %832 to i64*
  store i64 %831, i64* %833, align 8
  %834 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %825 to i8**
  store i8* %2, i8** %834, align 8
  %835 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %806, i64 0, i32 0, i64 %811, i32 1
  %836 = load i8, i8* %835, align 8
  %837 = add i8 %836, 1
  store i8 %837, i8* %835, align 8
  %838 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %806, i64 0, i32 0, i64 %811, i32 3
  %839 = load i16, i16* %838, align 2
  %840 = zext i16 %839 to i64
  %841 = getelementptr inbounds i8, i8* %805, i64 1424
  %842 = bitcast i8* %841 to i64*
  %843 = load i64, i64* %842, align 8
  %844 = add i64 %843, %840
  store i64 %844, i64* %842, align 8
  %845 = getelementptr inbounds i8, i8* %805, i64 1488
  %846 = bitcast i8* %845 to i64*
  %847 = load i64, i64* %846, align 8
  %848 = add i64 %847, 1
  store i64 %848, i64* %846, align 8
  %849 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %806, i64 0, i32 0, i64 %811, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %850 = load atomic i8, i8* %849 monotonic, align 1
  %851 = icmp ugt i8 %837, %850
  br i1 %851, label %852, label %855, !prof !6

852:                                              ; preds = %824
  %853 = lshr i8 %850, 1
  %854 = zext i8 %853 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %806, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %825, i64 %854) #12
  br label %855

855:                                              ; preds = %852, %824
  %856 = getelementptr inbounds i8, i8* %805, i64 1432
  %857 = load atomic i8, i8* %856 monotonic, align 1
  %858 = and i8 %857, 1
  %859 = icmp eq i8 %858, 0
  br i1 %859, label %1990, label %860, !prof !3

860:                                              ; preds = %855
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %806) #12
  br label %1990

861:                                              ; preds = %819, %803, %793, %789
  %862 = bitcast %"struct.base::internal::DeferredUnmap"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %862) #12
  %863 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %11, i64 0, i32 0
  %864 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %11, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %862, i8 0, i64 16, i1 false) #12
  %865 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %716, i64 0, i32 8
  %866 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %865, i64 0, i32 0
  %867 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %865, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %868

868:                                              ; preds = %880, %861
  %869 = phi i32 [ 0, %861 ], [ %881, %880 ]
  %870 = phi i32 [ 1, %861 ], [ %884, %880 ]
  %871 = load atomic i32, i32* %867 monotonic, align 4
  %872 = icmp eq i32 %871, 0
  br i1 %872, label %873, label %876, !prof !2

873:                                              ; preds = %868
  %874 = cmpxchg weak i32* %867, i32 0, i32 1 acquire monotonic
  %875 = extractvalue { i32, i1 } %874, 1
  br i1 %875, label %891, label %876, !prof !3

876:                                              ; preds = %873, %868
  %877 = icmp sgt i32 %870, 0
  br i1 %877, label %886, label %880

878:                                              ; preds = %886
  %879 = add i32 %870, %869
  br label %880

880:                                              ; preds = %878, %876
  %881 = phi i32 [ %869, %876 ], [ %879, %878 ]
  %882 = shl i32 %870, 1
  %883 = icmp slt i32 %882, 64
  %884 = select i1 %883, i32 %882, i32 64
  %885 = icmp slt i32 %881, 1000
  br i1 %885, label %868, label %890

886:                                              ; preds = %876, %886
  %887 = phi i32 [ %888, %886 ], [ 0, %876 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %888 = add nuw nsw i32 %887, 1
  %889 = icmp eq i32 %888, %870
  br i1 %889, label %878, label %886

890:                                              ; preds = %880
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %866) #12
  br label %891

891:                                              ; preds = %873, %890
  %892 = bitcast %union.anon* %709 to i8**
  %893 = load i8*, i8** %892, align 1
  %894 = icmp eq i8* %893, %2
  br i1 %894, label %897, label %895, !prof !6

895:                                              ; preds = %891
  %896 = ptrtoint i8* %893 to i64
  br label %900

897:                                              ; preds = %891
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %898 = getelementptr inbounds %union.anon, %union.anon* %709, i64 0, i32 0, i32 0
  %899 = load i64, i64* %898, align 1
  br label %900

900:                                              ; preds = %897, %895
  %901 = phi i64 [ %896, %895 ], [ %899, %897 ]
  %902 = tail call i64 @llvm.bswap.i64(i64 %901) #12
  %903 = inttoptr i64 %902 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %904 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %903, %"struct.base::internal::EncodedPartitionFreelistEntry"** %904, align 8
  %905 = xor i64 %902, -1
  %906 = getelementptr inbounds i8, i8* %2, i64 8
  %907 = bitcast i8* %906 to i64*
  store i64 %905, i64* %907, align 8
  store i8* %2, i8** %892, align 1
  %908 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %704, i64 %708, i32 0, i32 1, i64 16
  %909 = bitcast i8* %908 to i16*
  %910 = load i16, i16* %909, align 1
  %911 = add i16 %910, -1
  store i16 %911, i16* %909, align 1
  %912 = icmp slt i16 %911, 1
  br i1 %912, label %913, label %917, !prof !6

913:                                              ; preds = %900
  %914 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %710) #12
  %915 = extractvalue { i8*, i64 } %914, 0
  %916 = extractvalue { i8*, i64 } %914, 1
  br label %917

917:                                              ; preds = %913, %900
  %918 = phi i8* [ %915, %913 ], [ null, %900 ]
  %919 = phi i64 [ %916, %913 ], [ 0, %900 ]
  store i8* %918, i8** %863, align 8
  store i64 %919, i64* %864, align 8
  %920 = atomicrmw xchg i32* %867, i32 0 release
  %921 = icmp eq i32 %920, 2
  br i1 %921, label %922, label %923, !prof !6

922:                                              ; preds = %917
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %866) #12
  br label %923

923:                                              ; preds = %922, %917
  %924 = load i8*, i8** %863, align 8
  %925 = icmp eq i8* %924, null
  br i1 %925, label %927, label %926, !prof !3

926:                                              ; preds = %923
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %11) #12
  br label %927

927:                                              ; preds = %926, %923
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %862) #12
  br label %1990

928:                                              ; preds = %688
  %929 = icmp ugt i64 %3, 2145386496
  br i1 %929, label %930, label %934

930:                                              ; preds = %928
  %931 = and i32 %1, 1
  %932 = icmp eq i32 %931, 0
  br i1 %932, label %933, label %1990

933:                                              ; preds = %930
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

934:                                              ; preds = %928
  %935 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %936 = and i8 %935, 1
  %937 = icmp ne i8 %936, 0
  %938 = bitcast i64* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %938) #12
  store i64 -6148914691236517206, i64* %18, align 8
  %939 = xor i1 %20, true
  %940 = and i1 %937, %939
  br i1 %940, label %941, label %943, !prof !6

941:                                              ; preds = %934
  %942 = call zeroext i1 @_ZN4base19PartitionAllocHooks28ReallocOverrideHookIfEnabledEPmPv(i64* nonnull %18, i8* nonnull %2) #12
  br i1 %942, label %1074, label %943, !prof !6

943:                                              ; preds = %941, %934
  %944 = ptrtoint i8* %2 to i64
  %945 = and i64 %944, -2097152
  %946 = or i64 %945, 4096
  %947 = inttoptr i64 %946 to i8*
  %948 = lshr i64 %944, 9
  %949 = and i64 %948, 4064
  %950 = getelementptr inbounds i8, i8* %947, i64 %949
  %951 = bitcast i8* %950 to %"struct.base::internal::PartitionPage"*
  %952 = getelementptr inbounds i8, i8* %950, i64 30
  %953 = load i8, i8* %952, align 2
  %954 = zext i8 %953 to i64
  %955 = sub nsw i64 0, %954
  %956 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %951, i64 %955, i32 0
  %957 = bitcast %union.anon* %956 to %"struct.base::internal::SlotSpanMetadata"*
  %958 = ptrtoint %union.anon* %956 to i64
  %959 = and i64 %958, -4096
  %960 = inttoptr i64 %959 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %961 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %960, i64 0, i32 0
  %962 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %961, align 4096
  %963 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %962, i64 0, i32 8
  %964 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %963, i64 0, i32 0
  %965 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %963, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %966

966:                                              ; preds = %978, %943
  %967 = phi i32 [ 0, %943 ], [ %979, %978 ]
  %968 = phi i32 [ 1, %943 ], [ %982, %978 ]
  %969 = load atomic i32, i32* %965 monotonic, align 4
  %970 = icmp eq i32 %969, 0
  br i1 %970, label %971, label %974, !prof !2

971:                                              ; preds = %966
  %972 = cmpxchg weak i32* %965, i32 0, i32 1 acquire monotonic
  %973 = extractvalue { i32, i1 } %972, 1
  br i1 %973, label %989, label %974, !prof !3

974:                                              ; preds = %971, %966
  %975 = icmp sgt i32 %968, 0
  br i1 %975, label %984, label %978

976:                                              ; preds = %984
  %977 = add i32 %968, %967
  br label %978

978:                                              ; preds = %976, %974
  %979 = phi i32 [ %967, %974 ], [ %977, %976 ]
  %980 = shl i32 %968, 1
  %981 = icmp slt i32 %980, 64
  %982 = select i1 %981, i32 %980, i32 64
  %983 = icmp slt i32 %979, 1000
  br i1 %983, label %966, label %988

984:                                              ; preds = %974, %984
  %985 = phi i32 [ %986, %984 ], [ 0, %974 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %986 = add nuw nsw i32 %985, 1
  %987 = icmp eq i32 %986, %968
  br i1 %987, label %976, label %984

988:                                              ; preds = %978
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %964) #12
  br label %989

989:                                              ; preds = %971, %988
  %990 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %951, i64 %955, i32 0, i32 1, i64 21
  %991 = load i8, i8* %990, align 1, !range !5
  %992 = icmp eq i8 %991, 0
  br i1 %992, label %993, label %1000, !prof !3

993:                                              ; preds = %989
  %994 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %951, i64 %955, i32 0, i32 1, i64 8
  %995 = bitcast i8* %994 to %"struct.base::internal::PartitionBucket"**
  %996 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %995, align 1
  %997 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %996, i64 0, i32 3
  %998 = load i32, i32* %997, align 8
  %999 = zext i32 %998 to i64
  br label %1004

1000:                                             ; preds = %989
  %1001 = bitcast %union.anon* %956 to %"struct.base::internal::PartitionPage"*
  %1002 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1001, i64 1, i32 0, i32 0, i32 0
  %1003 = load i64, i64* %1002, align 1
  br label %1004

1004:                                             ; preds = %993, %1000
  %1005 = phi i64 [ %999, %993 ], [ %1003, %1000 ]
  store i64 %1005, i64* %18, align 8
  %1006 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %951, i64 %955, i32 0, i32 1, i64 8
  %1007 = bitcast i8* %1006 to %"struct.base::internal::PartitionBucket"**
  %1008 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1007, align 1
  %1009 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1008, i64 0, i32 4
  %1010 = load i32, i32* %1009, align 4
  %1011 = and i32 %1010, 255
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %1021, !prof !6

1013:                                             ; preds = %1004
  %1014 = call zeroext i1 @_ZN4base13PartitionRootILb1EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb1EEEm(%"struct.base::PartitionRoot"* %962, %"struct.base::internal::SlotSpanMetadata"* %957, i64 %3)
  %1015 = atomicrmw xchg i32* %965, i32 0 release
  %1016 = icmp eq i32 %1015, 2
  br i1 %1016, label %1017, label %1018, !prof !6

1017:                                             ; preds = %1013
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %964) #12
  br label %1018

1018:                                             ; preds = %1013, %1017
  br i1 %1014, label %1019, label %1025

1019:                                             ; preds = %1018
  br i1 %940, label %1020, label %1988

1020:                                             ; preds = %1019
  call void @_ZN4base19PartitionAllocHooks28ReallocObserverHookIfEnabledEPvS1_mPKc(i8* nonnull %2, i8* nonnull %2, i64 %3, i8* %4) #12
  br label %1988

1021:                                             ; preds = %1004
  %1022 = atomicrmw xchg i32* %965, i32 0 release
  %1023 = icmp eq i32 %1022, 2
  br i1 %1023, label %1024, label %1025, !prof !6

1024:                                             ; preds = %1021
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %964) #12
  br label %1025

1025:                                             ; preds = %1024, %1021, %1018
  %1026 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %1027 = sub nuw nsw i64 64, %1026
  %1028 = and i64 %1027, 255
  %1029 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %1028
  %1030 = load i8, i8* %1029, align 1
  %1031 = zext i8 %1030 to i64
  %1032 = lshr i64 %3, %1031
  %1033 = and i64 %1032, 7
  %1034 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %1028
  %1035 = load i64, i64* %1034, align 8
  %1036 = and i64 %1035, %3
  %1037 = shl nuw nsw i64 %1028, 3
  %1038 = or i64 %1033, %1037
  %1039 = icmp ne i64 %1036, 0
  %1040 = zext i1 %1039 to i64
  %1041 = add nuw nsw i64 %1038, %1040
  %1042 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %1041
  %1043 = load i16, i16* %1042, align 2
  %1044 = zext i16 %1043 to i64
  %1045 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %962, i64 0, i32 10, i64 %1044, i32 4
  %1046 = load i32, i32* %1045, align 4
  %1047 = and i32 %1046, 255
  %1048 = icmp eq i32 %1047, 0
  br i1 %1048, label %1053, label %1049, !prof !6

1049:                                             ; preds = %1025
  %1050 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %962, i64 0, i32 10, i64 %1044, i32 3
  %1051 = load i32, i32* %1050, align 8
  %1052 = zext i32 %1051 to i64
  br label %1056

1053:                                             ; preds = %1025
  %1054 = add nuw nsw i64 %3, 4095
  %1055 = and i64 %1054, -4096
  br label %1056

1056:                                             ; preds = %1053, %1049
  %1057 = phi i64 [ %1052, %1049 ], [ %1055, %1053 ]
  %1058 = load i8, i8* %952, align 2
  %1059 = zext i8 %1058 to i64
  %1060 = sub nsw i64 0, %1059
  %1061 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %951, i64 %1060, i32 0, i32 1, i64 8
  %1062 = bitcast i8* %1061 to %"struct.base::internal::PartitionBucket"**
  %1063 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1062, align 1
  %1064 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1063, i64 0, i32 3
  %1065 = load i32, i32* %1064, align 8
  %1066 = zext i32 %1065 to i64
  %1067 = icmp eq i64 %1057, %1066
  br i1 %1067, label %1068, label %1074

1068:                                             ; preds = %1056
  %1069 = load i8, i8* %990, align 1, !range !5
  %1070 = icmp eq i8 %1069, 0
  br i1 %1070, label %1988, label %1071

1071:                                             ; preds = %1068
  %1072 = bitcast %union.anon* %956 to %"struct.base::internal::PartitionPage"*
  %1073 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1072, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %1073, align 1
  br label %1988

1074:                                             ; preds = %941, %1056
  br i1 %20, label %1075, label %1401

1075:                                             ; preds = %1074
  %1076 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %1077 = sub nuw nsw i64 64, %1076
  %1078 = and i64 %1077, 255
  %1079 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %1078
  %1080 = load i8, i8* %1079, align 1
  %1081 = zext i8 %1080 to i64
  %1082 = lshr i64 %3, %1081
  %1083 = and i64 %1082, 7
  %1084 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %1078
  %1085 = load i64, i64* %1084, align 8
  %1086 = and i64 %1085, %3
  %1087 = shl nuw nsw i64 %1078, 3
  %1088 = or i64 %1083, %1087
  %1089 = icmp ne i64 %1086, 0
  %1090 = zext i1 %1089 to i64
  %1091 = add nuw nsw i64 %1088, %1090
  %1092 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %1091
  %1093 = load i16, i16* %1092, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #12
  store i8 0, i8* %9, align 1
  %1094 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1094) #12
  store i64 -6148914691236517206, i64* %10, align 8
  %1095 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %1096 = load i8, i8* %1095, align 8
  %1097 = icmp eq i8 %1096, 2
  br i1 %1097, label %1098, label %1102

1098:                                             ; preds = %1075
  %1099 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %1100 = icmp eq i8 %1099, 2
  br i1 %1100, label %1101, label %1102, !prof !6

1101:                                             ; preds = %1098
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %1102

1102:                                             ; preds = %1101, %1098, %1075
  %1103 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %1104 = load i8, i8* %1103, align 2, !range !5
  %1105 = icmp eq i8 %1104, 0
  br i1 %1105, label %1287, label %1106, !prof !12

1106:                                             ; preds = %1102
  %1107 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %1108 = call i8* @pthread_getspecific(i32 %1107) #12
  %1109 = bitcast i8* %1108 to %"class.base::internal::ThreadCache"*
  %1110 = icmp ugt i8* %1108, inttoptr (i64 1 to i8*)
  br i1 %1110, label %1111, label %1179, !prof !3

1111:                                             ; preds = %1106
  %1112 = zext i16 %1093 to i64
  %1113 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1109, i64 0, i32 3, i32 12, i64 %1112
  %1114 = load i64, i64* %1113, align 8
  %1115 = add i64 %1114, 1
  store i64 %1115, i64* %1113, align 8
  %1116 = getelementptr inbounds i8, i8* %1108, i64 1440
  %1117 = bitcast i8* %1116 to i64*
  %1118 = load i64, i64* %1117, align 8
  %1119 = add i64 %1118, 1
  store i64 %1119, i64* %1117, align 8
  %1120 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %1121 = icmp ult i16 %1120, %1093
  br i1 %1121, label %1122, label %1131, !prof !6

1122:                                             ; preds = %1111
  %1123 = getelementptr inbounds i8, i8* %1108, i64 1472
  %1124 = bitcast i8* %1123 to i64*
  %1125 = load i64, i64* %1124, align 8
  %1126 = add i64 %1125, 1
  store i64 %1126, i64* %1124, align 8
  %1127 = getelementptr inbounds i8, i8* %1108, i64 1456
  %1128 = bitcast i8* %1127 to i64*
  %1129 = load i64, i64* %1128, align 8
  %1130 = add i64 %1129, 1
  store i64 %1130, i64* %1128, align 8
  br label %1188

1131:                                             ; preds = %1111
  %1132 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1109, i64 0, i32 0, i64 %1112, i32 0
  %1133 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %1132, align 8
  %1134 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %1133, null
  br i1 %1134, label %1140, label %1135, !prof !6

1135:                                             ; preds = %1131
  %1136 = getelementptr inbounds i8, i8* %1108, i64 1448
  %1137 = bitcast i8* %1136 to i64*
  %1138 = load i64, i64* %1137, align 8
  %1139 = add i64 %1138, 1
  store i64 %1139, i64* %1137, align 8
  br label %1148

1140:                                             ; preds = %1131
  %1141 = getelementptr inbounds i8, i8* %1108, i64 1456
  %1142 = bitcast i8* %1141 to <2 x i64>*
  %1143 = load <2 x i64>, <2 x i64>* %1142, align 8
  %1144 = add <2 x i64> %1143, <i64 1, i64 1>
  %1145 = bitcast i8* %1141 to <2 x i64>*
  store <2 x i64> %1144, <2 x i64>* %1145, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %1109, i64 %1112) #12
  %1146 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %1132, align 8
  %1147 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %1146, null
  br i1 %1147, label %1188, label %1148, !prof !6

1148:                                             ; preds = %1140, %1135
  %1149 = phi %"class.base::internal::PartitionFreelistEntry"* [ %1146, %1140 ], [ %1133, %1135 ]
  %1150 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %1149, i64 0, i32 0
  %1151 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1150, align 8
  %1152 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1151, null
  %1153 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1151 to i64
  br i1 %1152, label %1154, label %1156

1154:                                             ; preds = %1148
  %1155 = call i64 @llvm.bswap.i64(i64 %1153) #12
  br label %1165

1156:                                             ; preds = %1148
  %1157 = xor i64 %1153, -1
  %1158 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %1149, i64 0, i32 1
  %1159 = load i64, i64* %1158, align 8
  %1160 = icmp eq i64 %1159, %1157
  br i1 %1160, label %1162, label %1161, !prof !3

1161:                                             ; preds = %1156
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1162:                                             ; preds = %1156
  %1163 = call i64 @llvm.bswap.i64(i64 %1153) #12
  %1164 = inttoptr i64 %1163 to i8*
  call void @llvm.prefetch(i8* nonnull %1164, i32 0, i32 3, i32 1) #12
  br label %1165

1165:                                             ; preds = %1162, %1154
  %1166 = phi i64 [ %1155, %1154 ], [ %1163, %1162 ]
  %1167 = inttoptr i64 %1166 to %"class.base::internal::PartitionFreelistEntry"*
  %1168 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1109, i64 0, i32 0, i64 %1112, i32 1
  %1169 = load i8, i8* %1168, align 8
  %1170 = add i8 %1169, -1
  store i8 %1170, i8* %1168, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %1167, %"class.base::internal::PartitionFreelistEntry"** %1132, align 8
  %1171 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1109, i64 0, i32 0, i64 %1112, i32 3
  %1172 = load i16, i16* %1171, align 2
  %1173 = zext i16 %1172 to i64
  store i64 %1173, i64* %10, align 8
  %1174 = getelementptr inbounds i8, i8* %1108, i64 1424
  %1175 = bitcast i8* %1174 to i64*
  %1176 = load i64, i64* %1175, align 8
  %1177 = sub i64 %1176, %1173
  store i64 %1177, i64* %1175, align 8
  %1178 = bitcast %"class.base::internal::PartitionFreelistEntry"* %1149 to i8*
  br label %1181

1179:                                             ; preds = %1106
  %1180 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %1093, i64* nonnull %10) #12
  br label %1181

1181:                                             ; preds = %1179, %1165
  %1182 = phi i8* [ %1180, %1179 ], [ %1178, %1165 ]
  %1183 = icmp eq i8* %1182, null
  br i1 %1183, label %1184, label %1186, !prof !6

1184:                                             ; preds = %1181
  %1185 = zext i16 %1093 to i64
  br label %1188

1186:                                             ; preds = %1181
  %1187 = load i64, i64* %10, align 8
  br label %1390

1188:                                             ; preds = %1184, %1140, %1122
  %1189 = phi i64 [ %1185, %1184 ], [ %1112, %1140 ], [ %1112, %1122 ]
  %1190 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1189
  %1191 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %1192 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1191, i64 0, i32 0
  %1193 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1191, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1194

1194:                                             ; preds = %1206, %1188
  %1195 = phi i32 [ 0, %1188 ], [ %1207, %1206 ]
  %1196 = phi i32 [ 1, %1188 ], [ %1210, %1206 ]
  %1197 = load atomic i32, i32* %1193 monotonic, align 4
  %1198 = icmp eq i32 %1197, 0
  br i1 %1198, label %1199, label %1202, !prof !2

1199:                                             ; preds = %1194
  %1200 = cmpxchg weak i32* %1193, i32 0, i32 1 acquire monotonic
  %1201 = extractvalue { i32, i1 } %1200, 1
  br i1 %1201, label %1217, label %1202, !prof !3

1202:                                             ; preds = %1199, %1194
  %1203 = icmp sgt i32 %1196, 0
  br i1 %1203, label %1212, label %1206

1204:                                             ; preds = %1212
  %1205 = add i32 %1196, %1195
  br label %1206

1206:                                             ; preds = %1204, %1202
  %1207 = phi i32 [ %1195, %1202 ], [ %1205, %1204 ]
  %1208 = shl i32 %1196, 1
  %1209 = icmp slt i32 %1208, 64
  %1210 = select i1 %1209, i32 %1208, i32 64
  %1211 = icmp slt i32 %1207, 1000
  br i1 %1211, label %1194, label %1216

1212:                                             ; preds = %1202, %1212
  %1213 = phi i32 [ %1214, %1212 ], [ 0, %1202 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %1214 = add nuw nsw i32 %1213, 1
  %1215 = icmp eq i32 %1214, %1196
  br i1 %1215, label %1204, label %1212

1216:                                             ; preds = %1206
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %1192) #12
  br label %1217

1217:                                             ; preds = %1199, %1216
  %1218 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1190, i64 0, i32 0
  %1219 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %1218, align 8
  %1220 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1219 to i8**
  %1221 = load i8*, i8** %1220, align 1
  %1222 = icmp eq i8* %1221, null
  br i1 %1222, label %1250, label %1223, !prof !6

1223:                                             ; preds = %1217
  %1224 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1219, i64 0, i32 0
  store i8 0, i8* %9, align 1
  %1225 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1189, i32 3
  %1226 = load i32, i32* %1225, align 8
  %1227 = zext i32 %1226 to i64
  %1228 = bitcast i8* %1221 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %1229 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1228, align 8
  %1230 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1229, null
  %1231 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1229 to i64
  br i1 %1230, label %1232, label %1234

1232:                                             ; preds = %1223
  %1233 = call i64 @llvm.bswap.i64(i64 %1231) #12
  br label %1244

1234:                                             ; preds = %1223
  %1235 = xor i64 %1231, -1
  %1236 = getelementptr inbounds i8, i8* %1221, i64 8
  %1237 = bitcast i8* %1236 to i64*
  %1238 = load i64, i64* %1237, align 8
  %1239 = icmp eq i64 %1238, %1235
  br i1 %1239, label %1241, label %1240, !prof !3

1240:                                             ; preds = %1234
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1241:                                             ; preds = %1234
  %1242 = call i64 @llvm.bswap.i64(i64 %1231) #12
  %1243 = inttoptr i64 %1242 to i8*
  call void @llvm.prefetch(i8* nonnull %1243, i32 0, i32 3, i32 1) #12
  br label %1244

1244:                                             ; preds = %1241, %1232
  %1245 = phi i64 [ %1233, %1232 ], [ %1242, %1241 ]
  %1246 = inttoptr i64 %1245 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %1246, %"class.base::internal::PartitionFreelistEntry"** %1224, align 1
  %1247 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1219, i64 0, i32 3
  %1248 = load i16, i16* %1247, align 1
  %1249 = add i16 %1248, 1
  store i16 %1249, i16* %1247, align 1
  br label %1281

1250:                                             ; preds = %1217
  %1251 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1190, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %9) #12
  %1252 = icmp eq i8* %1251, null
  br i1 %1252, label %1281, label %1253, !prof !6

1253:                                             ; preds = %1250
  %1254 = ptrtoint i8* %1251 to i64
  %1255 = and i64 %1254, -2097152
  %1256 = or i64 %1255, 4096
  %1257 = inttoptr i64 %1256 to i8*
  %1258 = lshr i64 %1254, 9
  %1259 = and i64 %1258, 4064
  %1260 = getelementptr inbounds i8, i8* %1257, i64 %1259
  %1261 = bitcast i8* %1260 to %"struct.base::internal::PartitionPage"*
  %1262 = getelementptr inbounds i8, i8* %1260, i64 30
  %1263 = load i8, i8* %1262, align 2
  %1264 = zext i8 %1263 to i64
  %1265 = sub nsw i64 0, %1264
  %1266 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1261, i64 %1265, i32 0, i32 1, i64 21
  %1267 = load i8, i8* %1266, align 1, !range !5
  %1268 = icmp eq i8 %1267, 0
  br i1 %1268, label %1269, label %1276, !prof !3

1269:                                             ; preds = %1253
  %1270 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1261, i64 %1265, i32 0, i32 1, i64 8
  %1271 = bitcast i8* %1270 to %"struct.base::internal::PartitionBucket"**
  %1272 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1271, align 1
  %1273 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1272, i64 0, i32 3
  %1274 = load i32, i32* %1273, align 8
  %1275 = zext i32 %1274 to i64
  br label %1281

1276:                                             ; preds = %1253
  %1277 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1261, i64 %1265, i32 0
  %1278 = bitcast %union.anon* %1277 to %"struct.base::internal::PartitionPage"*
  %1279 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1278, i64 1, i32 0, i32 0, i32 0
  %1280 = load i64, i64* %1279, align 1
  br label %1281

1281:                                             ; preds = %1276, %1269, %1250, %1244
  %1282 = phi i64 [ %1227, %1244 ], [ -6148914691236517206, %1250 ], [ %1275, %1269 ], [ %1280, %1276 ]
  %1283 = phi i8* [ %1221, %1244 ], [ null, %1250 ], [ %1251, %1269 ], [ %1251, %1276 ]
  %1284 = atomicrmw xchg i32* %1193, i32 0 release
  %1285 = icmp eq i32 %1284, 2
  br i1 %1285, label %1286, label %1386, !prof !6

1286:                                             ; preds = %1281
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %1192) #12
  br label %1386

1287:                                             ; preds = %1102
  %1288 = zext i16 %1093 to i64
  %1289 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1288
  %1290 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %1291 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1290, i64 0, i32 0
  %1292 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1293

1293:                                             ; preds = %1305, %1287
  %1294 = phi i32 [ 0, %1287 ], [ %1306, %1305 ]
  %1295 = phi i32 [ 1, %1287 ], [ %1309, %1305 ]
  %1296 = load atomic i32, i32* %1292 monotonic, align 4
  %1297 = icmp eq i32 %1296, 0
  br i1 %1297, label %1298, label %1301, !prof !2

1298:                                             ; preds = %1293
  %1299 = cmpxchg weak i32* %1292, i32 0, i32 1 acquire monotonic
  %1300 = extractvalue { i32, i1 } %1299, 1
  br i1 %1300, label %1316, label %1301, !prof !3

1301:                                             ; preds = %1298, %1293
  %1302 = icmp sgt i32 %1295, 0
  br i1 %1302, label %1311, label %1305

1303:                                             ; preds = %1311
  %1304 = add i32 %1295, %1294
  br label %1305

1305:                                             ; preds = %1303, %1301
  %1306 = phi i32 [ %1294, %1301 ], [ %1304, %1303 ]
  %1307 = shl i32 %1295, 1
  %1308 = icmp slt i32 %1307, 64
  %1309 = select i1 %1308, i32 %1307, i32 64
  %1310 = icmp slt i32 %1306, 1000
  br i1 %1310, label %1293, label %1315

1311:                                             ; preds = %1301, %1311
  %1312 = phi i32 [ %1313, %1311 ], [ 0, %1301 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %1313 = add nuw nsw i32 %1312, 1
  %1314 = icmp eq i32 %1313, %1295
  br i1 %1314, label %1303, label %1311

1315:                                             ; preds = %1305
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %1291) #12
  br label %1316

1316:                                             ; preds = %1298, %1315
  %1317 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1289, i64 0, i32 0
  %1318 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %1317, align 8
  %1319 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1318 to i8**
  %1320 = load i8*, i8** %1319, align 1
  %1321 = icmp eq i8* %1320, null
  br i1 %1321, label %1349, label %1322, !prof !6

1322:                                             ; preds = %1316
  %1323 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1318, i64 0, i32 0
  store i8 0, i8* %9, align 1
  %1324 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1288, i32 3
  %1325 = load i32, i32* %1324, align 8
  %1326 = zext i32 %1325 to i64
  %1327 = bitcast i8* %1320 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %1328 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1327, align 8
  %1329 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1328, null
  %1330 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1328 to i64
  br i1 %1329, label %1331, label %1333

1331:                                             ; preds = %1322
  %1332 = call i64 @llvm.bswap.i64(i64 %1330) #12
  br label %1343

1333:                                             ; preds = %1322
  %1334 = xor i64 %1330, -1
  %1335 = getelementptr inbounds i8, i8* %1320, i64 8
  %1336 = bitcast i8* %1335 to i64*
  %1337 = load i64, i64* %1336, align 8
  %1338 = icmp eq i64 %1337, %1334
  br i1 %1338, label %1340, label %1339, !prof !3

1339:                                             ; preds = %1333
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1340:                                             ; preds = %1333
  %1341 = call i64 @llvm.bswap.i64(i64 %1330) #12
  %1342 = inttoptr i64 %1341 to i8*
  call void @llvm.prefetch(i8* nonnull %1342, i32 0, i32 3, i32 1) #12
  br label %1343

1343:                                             ; preds = %1340, %1331
  %1344 = phi i64 [ %1332, %1331 ], [ %1341, %1340 ]
  %1345 = inttoptr i64 %1344 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %1345, %"class.base::internal::PartitionFreelistEntry"** %1323, align 1
  %1346 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1318, i64 0, i32 3
  %1347 = load i16, i16* %1346, align 1
  %1348 = add i16 %1347, 1
  store i16 %1348, i16* %1346, align 1
  br label %1380

1349:                                             ; preds = %1316
  %1350 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1289, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %9) #12
  %1351 = icmp eq i8* %1350, null
  br i1 %1351, label %1380, label %1352, !prof !6

1352:                                             ; preds = %1349
  %1353 = ptrtoint i8* %1350 to i64
  %1354 = and i64 %1353, -2097152
  %1355 = or i64 %1354, 4096
  %1356 = inttoptr i64 %1355 to i8*
  %1357 = lshr i64 %1353, 9
  %1358 = and i64 %1357, 4064
  %1359 = getelementptr inbounds i8, i8* %1356, i64 %1358
  %1360 = bitcast i8* %1359 to %"struct.base::internal::PartitionPage"*
  %1361 = getelementptr inbounds i8, i8* %1359, i64 30
  %1362 = load i8, i8* %1361, align 2
  %1363 = zext i8 %1362 to i64
  %1364 = sub nsw i64 0, %1363
  %1365 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1360, i64 %1364, i32 0, i32 1, i64 21
  %1366 = load i8, i8* %1365, align 1, !range !5
  %1367 = icmp eq i8 %1366, 0
  br i1 %1367, label %1368, label %1375, !prof !3

1368:                                             ; preds = %1352
  %1369 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1360, i64 %1364, i32 0, i32 1, i64 8
  %1370 = bitcast i8* %1369 to %"struct.base::internal::PartitionBucket"**
  %1371 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1370, align 1
  %1372 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1371, i64 0, i32 3
  %1373 = load i32, i32* %1372, align 8
  %1374 = zext i32 %1373 to i64
  br label %1380

1375:                                             ; preds = %1352
  %1376 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1360, i64 %1364, i32 0
  %1377 = bitcast %union.anon* %1376 to %"struct.base::internal::PartitionPage"*
  %1378 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1377, i64 1, i32 0, i32 0, i32 0
  %1379 = load i64, i64* %1378, align 1
  br label %1380

1380:                                             ; preds = %1375, %1368, %1349, %1343
  %1381 = phi i64 [ %1326, %1343 ], [ -6148914691236517206, %1349 ], [ %1374, %1368 ], [ %1379, %1375 ]
  %1382 = phi i8* [ %1320, %1343 ], [ null, %1349 ], [ %1350, %1368 ], [ %1350, %1375 ]
  %1383 = atomicrmw xchg i32* %1292, i32 0 release
  %1384 = icmp eq i32 %1383, 2
  br i1 %1384, label %1385, label %1386, !prof !6

1385:                                             ; preds = %1380
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %1291) #12
  br label %1386

1386:                                             ; preds = %1385, %1380, %1286, %1281
  %1387 = phi i64 [ %1282, %1281 ], [ %1282, %1286 ], [ %1381, %1380 ], [ %1381, %1385 ]
  %1388 = phi i8* [ %1283, %1281 ], [ %1283, %1286 ], [ %1382, %1380 ], [ %1382, %1385 ]
  %1389 = icmp eq i8* %1388, null
  br i1 %1389, label %1399, label %1390, !prof !6

1390:                                             ; preds = %1386, %1186
  %1391 = phi i8* [ %1182, %1186 ], [ %1388, %1386 ]
  %1392 = phi i64 [ %1187, %1186 ], [ %1387, %1386 ]
  %1393 = and i32 %1, 2
  %1394 = icmp ne i32 %1393, 0
  %1395 = load i8, i8* %9, align 1
  %1396 = icmp eq i8 %1395, 0
  %1397 = and i1 %1394, %1396
  br i1 %1397, label %1398, label %1399, !prof !11

1398:                                             ; preds = %1390
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1391, i8 0, i64 %1392, i1 false) #12
  br label %1399

1399:                                             ; preds = %1386, %1390, %1398
  %1400 = phi i8* [ null, %1386 ], [ %1391, %1390 ], [ %1391, %1398 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1094) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #12
  br label %1740

1401:                                             ; preds = %1074
  %1402 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1402) #12
  store i8* null, i8** %8, align 8
  %1403 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %1404 = and i8 %1403, 1
  %1405 = icmp ne i8 %1404, 0
  br i1 %1405, label %1406, label %1410, !prof !6

1406:                                             ; preds = %1401
  %1407 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %8, i32 %1, i64 %3, i8* %4) #12
  br i1 %1407, label %1408, label %1410

1408:                                             ; preds = %1406
  %1409 = load i8*, i8** %8, align 8
  br label %1736

1410:                                             ; preds = %1406, %1401
  %1411 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %1412 = sub nuw nsw i64 64, %1411
  %1413 = and i64 %1412, 255
  %1414 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %1413
  %1415 = load i8, i8* %1414, align 1
  %1416 = zext i8 %1415 to i64
  %1417 = lshr i64 %3, %1416
  %1418 = and i64 %1417, 7
  %1419 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %1413
  %1420 = load i64, i64* %1419, align 8
  %1421 = and i64 %1420, %3
  %1422 = shl nuw nsw i64 %1413, 3
  %1423 = or i64 %1418, %1422
  %1424 = icmp ne i64 %1421, 0
  %1425 = zext i1 %1424 to i64
  %1426 = add nuw nsw i64 %1423, %1425
  %1427 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %1426
  %1428 = load i16, i16* %1427, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %1429 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1429) #12
  store i64 -6148914691236517206, i64* %7, align 8
  %1430 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %1431 = load i8, i8* %1430, align 8
  %1432 = icmp eq i8 %1431, 2
  br i1 %1432, label %1433, label %1437

1433:                                             ; preds = %1410
  %1434 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %1435 = icmp eq i8 %1434, 2
  br i1 %1435, label %1436, label %1437, !prof !6

1436:                                             ; preds = %1433
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %1437

1437:                                             ; preds = %1436, %1433, %1410
  %1438 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %1439 = load i8, i8* %1438, align 2, !range !5
  %1440 = icmp eq i8 %1439, 0
  br i1 %1440, label %1622, label %1441, !prof !12

1441:                                             ; preds = %1437
  %1442 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %1443 = call i8* @pthread_getspecific(i32 %1442) #12
  %1444 = bitcast i8* %1443 to %"class.base::internal::ThreadCache"*
  %1445 = icmp ugt i8* %1443, inttoptr (i64 1 to i8*)
  br i1 %1445, label %1446, label %1514, !prof !3

1446:                                             ; preds = %1441
  %1447 = zext i16 %1428 to i64
  %1448 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1444, i64 0, i32 3, i32 12, i64 %1447
  %1449 = load i64, i64* %1448, align 8
  %1450 = add i64 %1449, 1
  store i64 %1450, i64* %1448, align 8
  %1451 = getelementptr inbounds i8, i8* %1443, i64 1440
  %1452 = bitcast i8* %1451 to i64*
  %1453 = load i64, i64* %1452, align 8
  %1454 = add i64 %1453, 1
  store i64 %1454, i64* %1452, align 8
  %1455 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %1456 = icmp ult i16 %1455, %1428
  br i1 %1456, label %1457, label %1466, !prof !6

1457:                                             ; preds = %1446
  %1458 = getelementptr inbounds i8, i8* %1443, i64 1472
  %1459 = bitcast i8* %1458 to i64*
  %1460 = load i64, i64* %1459, align 8
  %1461 = add i64 %1460, 1
  store i64 %1461, i64* %1459, align 8
  %1462 = getelementptr inbounds i8, i8* %1443, i64 1456
  %1463 = bitcast i8* %1462 to i64*
  %1464 = load i64, i64* %1463, align 8
  %1465 = add i64 %1464, 1
  store i64 %1465, i64* %1463, align 8
  br label %1523

1466:                                             ; preds = %1446
  %1467 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1444, i64 0, i32 0, i64 %1447, i32 0
  %1468 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %1467, align 8
  %1469 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %1468, null
  br i1 %1469, label %1475, label %1470, !prof !6

1470:                                             ; preds = %1466
  %1471 = getelementptr inbounds i8, i8* %1443, i64 1448
  %1472 = bitcast i8* %1471 to i64*
  %1473 = load i64, i64* %1472, align 8
  %1474 = add i64 %1473, 1
  store i64 %1474, i64* %1472, align 8
  br label %1483

1475:                                             ; preds = %1466
  %1476 = getelementptr inbounds i8, i8* %1443, i64 1456
  %1477 = bitcast i8* %1476 to <2 x i64>*
  %1478 = load <2 x i64>, <2 x i64>* %1477, align 8
  %1479 = add <2 x i64> %1478, <i64 1, i64 1>
  %1480 = bitcast i8* %1476 to <2 x i64>*
  store <2 x i64> %1479, <2 x i64>* %1480, align 8
  call void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"* %1444, i64 %1447) #12
  %1481 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %1467, align 8
  %1482 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %1481, null
  br i1 %1482, label %1523, label %1483, !prof !6

1483:                                             ; preds = %1475, %1470
  %1484 = phi %"class.base::internal::PartitionFreelistEntry"* [ %1481, %1475 ], [ %1468, %1470 ]
  %1485 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %1484, i64 0, i32 0
  %1486 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1485, align 8
  %1487 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1486, null
  %1488 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1486 to i64
  br i1 %1487, label %1489, label %1491

1489:                                             ; preds = %1483
  %1490 = call i64 @llvm.bswap.i64(i64 %1488) #12
  br label %1500

1491:                                             ; preds = %1483
  %1492 = xor i64 %1488, -1
  %1493 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %1484, i64 0, i32 1
  %1494 = load i64, i64* %1493, align 8
  %1495 = icmp eq i64 %1494, %1492
  br i1 %1495, label %1497, label %1496, !prof !3

1496:                                             ; preds = %1491
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1497:                                             ; preds = %1491
  %1498 = call i64 @llvm.bswap.i64(i64 %1488) #12
  %1499 = inttoptr i64 %1498 to i8*
  call void @llvm.prefetch(i8* nonnull %1499, i32 0, i32 3, i32 1) #12
  br label %1500

1500:                                             ; preds = %1497, %1489
  %1501 = phi i64 [ %1490, %1489 ], [ %1498, %1497 ]
  %1502 = inttoptr i64 %1501 to %"class.base::internal::PartitionFreelistEntry"*
  %1503 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1444, i64 0, i32 0, i64 %1447, i32 1
  %1504 = load i8, i8* %1503, align 8
  %1505 = add i8 %1504, -1
  store i8 %1505, i8* %1503, align 8
  store %"class.base::internal::PartitionFreelistEntry"* %1502, %"class.base::internal::PartitionFreelistEntry"** %1467, align 8
  %1506 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1444, i64 0, i32 0, i64 %1447, i32 3
  %1507 = load i16, i16* %1506, align 2
  %1508 = zext i16 %1507 to i64
  store i64 %1508, i64* %7, align 8
  %1509 = getelementptr inbounds i8, i8* %1443, i64 1424
  %1510 = bitcast i8* %1509 to i64*
  %1511 = load i64, i64* %1510, align 8
  %1512 = sub i64 %1511, %1508
  store i64 %1512, i64* %1510, align 8
  %1513 = bitcast %"class.base::internal::PartitionFreelistEntry"* %1484 to i8*
  br label %1516

1514:                                             ; preds = %1441
  %1515 = call i8* @_ZN4base13PartitionRootILb1EE28MaybeInitThreadCacheAndAllocEtPm(%"struct.base::PartitionRoot"* %0, i16 zeroext %1428, i64* nonnull %7) #12
  br label %1516

1516:                                             ; preds = %1514, %1500
  %1517 = phi i8* [ %1515, %1514 ], [ %1513, %1500 ]
  %1518 = icmp eq i8* %1517, null
  br i1 %1518, label %1519, label %1521, !prof !6

1519:                                             ; preds = %1516
  %1520 = zext i16 %1428 to i64
  br label %1523

1521:                                             ; preds = %1516
  %1522 = load i64, i64* %7, align 8
  br label %1725

1523:                                             ; preds = %1519, %1475, %1457
  %1524 = phi i64 [ %1520, %1519 ], [ %1447, %1475 ], [ %1447, %1457 ]
  %1525 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1524
  %1526 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %1527 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1526, i64 0, i32 0
  %1528 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1526, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1529

1529:                                             ; preds = %1541, %1523
  %1530 = phi i32 [ 0, %1523 ], [ %1542, %1541 ]
  %1531 = phi i32 [ 1, %1523 ], [ %1545, %1541 ]
  %1532 = load atomic i32, i32* %1528 monotonic, align 4
  %1533 = icmp eq i32 %1532, 0
  br i1 %1533, label %1534, label %1537, !prof !2

1534:                                             ; preds = %1529
  %1535 = cmpxchg weak i32* %1528, i32 0, i32 1 acquire monotonic
  %1536 = extractvalue { i32, i1 } %1535, 1
  br i1 %1536, label %1552, label %1537, !prof !3

1537:                                             ; preds = %1534, %1529
  %1538 = icmp sgt i32 %1531, 0
  br i1 %1538, label %1547, label %1541

1539:                                             ; preds = %1547
  %1540 = add i32 %1531, %1530
  br label %1541

1541:                                             ; preds = %1539, %1537
  %1542 = phi i32 [ %1530, %1537 ], [ %1540, %1539 ]
  %1543 = shl i32 %1531, 1
  %1544 = icmp slt i32 %1543, 64
  %1545 = select i1 %1544, i32 %1543, i32 64
  %1546 = icmp slt i32 %1542, 1000
  br i1 %1546, label %1529, label %1551

1547:                                             ; preds = %1537, %1547
  %1548 = phi i32 [ %1549, %1547 ], [ 0, %1537 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %1549 = add nuw nsw i32 %1548, 1
  %1550 = icmp eq i32 %1549, %1531
  br i1 %1550, label %1539, label %1547

1551:                                             ; preds = %1541
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %1527) #12
  br label %1552

1552:                                             ; preds = %1534, %1551
  %1553 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1525, i64 0, i32 0
  %1554 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %1553, align 8
  %1555 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1554 to i8**
  %1556 = load i8*, i8** %1555, align 1
  %1557 = icmp eq i8* %1556, null
  br i1 %1557, label %1585, label %1558, !prof !6

1558:                                             ; preds = %1552
  %1559 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1554, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %1560 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1524, i32 3
  %1561 = load i32, i32* %1560, align 8
  %1562 = zext i32 %1561 to i64
  %1563 = bitcast i8* %1556 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %1564 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1563, align 8
  %1565 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1564, null
  %1566 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1564 to i64
  br i1 %1565, label %1567, label %1569

1567:                                             ; preds = %1558
  %1568 = call i64 @llvm.bswap.i64(i64 %1566) #12
  br label %1579

1569:                                             ; preds = %1558
  %1570 = xor i64 %1566, -1
  %1571 = getelementptr inbounds i8, i8* %1556, i64 8
  %1572 = bitcast i8* %1571 to i64*
  %1573 = load i64, i64* %1572, align 8
  %1574 = icmp eq i64 %1573, %1570
  br i1 %1574, label %1576, label %1575, !prof !3

1575:                                             ; preds = %1569
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1576:                                             ; preds = %1569
  %1577 = call i64 @llvm.bswap.i64(i64 %1566) #12
  %1578 = inttoptr i64 %1577 to i8*
  call void @llvm.prefetch(i8* nonnull %1578, i32 0, i32 3, i32 1) #12
  br label %1579

1579:                                             ; preds = %1576, %1567
  %1580 = phi i64 [ %1568, %1567 ], [ %1577, %1576 ]
  %1581 = inttoptr i64 %1580 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %1581, %"class.base::internal::PartitionFreelistEntry"** %1559, align 1
  %1582 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1554, i64 0, i32 3
  %1583 = load i16, i16* %1582, align 1
  %1584 = add i16 %1583, 1
  store i16 %1584, i16* %1582, align 1
  br label %1616

1585:                                             ; preds = %1552
  %1586 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1525, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %6) #12
  %1587 = icmp eq i8* %1586, null
  br i1 %1587, label %1616, label %1588, !prof !6

1588:                                             ; preds = %1585
  %1589 = ptrtoint i8* %1586 to i64
  %1590 = and i64 %1589, -2097152
  %1591 = or i64 %1590, 4096
  %1592 = inttoptr i64 %1591 to i8*
  %1593 = lshr i64 %1589, 9
  %1594 = and i64 %1593, 4064
  %1595 = getelementptr inbounds i8, i8* %1592, i64 %1594
  %1596 = bitcast i8* %1595 to %"struct.base::internal::PartitionPage"*
  %1597 = getelementptr inbounds i8, i8* %1595, i64 30
  %1598 = load i8, i8* %1597, align 2
  %1599 = zext i8 %1598 to i64
  %1600 = sub nsw i64 0, %1599
  %1601 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1596, i64 %1600, i32 0, i32 1, i64 21
  %1602 = load i8, i8* %1601, align 1, !range !5
  %1603 = icmp eq i8 %1602, 0
  br i1 %1603, label %1604, label %1611, !prof !3

1604:                                             ; preds = %1588
  %1605 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1596, i64 %1600, i32 0, i32 1, i64 8
  %1606 = bitcast i8* %1605 to %"struct.base::internal::PartitionBucket"**
  %1607 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1606, align 1
  %1608 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1607, i64 0, i32 3
  %1609 = load i32, i32* %1608, align 8
  %1610 = zext i32 %1609 to i64
  br label %1616

1611:                                             ; preds = %1588
  %1612 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1596, i64 %1600, i32 0
  %1613 = bitcast %union.anon* %1612 to %"struct.base::internal::PartitionPage"*
  %1614 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1613, i64 1, i32 0, i32 0, i32 0
  %1615 = load i64, i64* %1614, align 1
  br label %1616

1616:                                             ; preds = %1611, %1604, %1585, %1579
  %1617 = phi i64 [ %1562, %1579 ], [ -6148914691236517206, %1585 ], [ %1610, %1604 ], [ %1615, %1611 ]
  %1618 = phi i8* [ %1556, %1579 ], [ null, %1585 ], [ %1586, %1604 ], [ %1586, %1611 ]
  %1619 = atomicrmw xchg i32* %1528, i32 0 release
  %1620 = icmp eq i32 %1619, 2
  br i1 %1620, label %1621, label %1721, !prof !6

1621:                                             ; preds = %1616
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %1527) #12
  br label %1721

1622:                                             ; preds = %1437
  %1623 = zext i16 %1428 to i64
  %1624 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1623
  %1625 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %1626 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1625, i64 0, i32 0
  %1627 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1625, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1628

1628:                                             ; preds = %1640, %1622
  %1629 = phi i32 [ 0, %1622 ], [ %1641, %1640 ]
  %1630 = phi i32 [ 1, %1622 ], [ %1644, %1640 ]
  %1631 = load atomic i32, i32* %1627 monotonic, align 4
  %1632 = icmp eq i32 %1631, 0
  br i1 %1632, label %1633, label %1636, !prof !2

1633:                                             ; preds = %1628
  %1634 = cmpxchg weak i32* %1627, i32 0, i32 1 acquire monotonic
  %1635 = extractvalue { i32, i1 } %1634, 1
  br i1 %1635, label %1651, label %1636, !prof !3

1636:                                             ; preds = %1633, %1628
  %1637 = icmp sgt i32 %1630, 0
  br i1 %1637, label %1646, label %1640

1638:                                             ; preds = %1646
  %1639 = add i32 %1630, %1629
  br label %1640

1640:                                             ; preds = %1638, %1636
  %1641 = phi i32 [ %1629, %1636 ], [ %1639, %1638 ]
  %1642 = shl i32 %1630, 1
  %1643 = icmp slt i32 %1642, 64
  %1644 = select i1 %1643, i32 %1642, i32 64
  %1645 = icmp slt i32 %1641, 1000
  br i1 %1645, label %1628, label %1650

1646:                                             ; preds = %1636, %1646
  %1647 = phi i32 [ %1648, %1646 ], [ 0, %1636 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %1648 = add nuw nsw i32 %1647, 1
  %1649 = icmp eq i32 %1648, %1630
  br i1 %1649, label %1638, label %1646

1650:                                             ; preds = %1640
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %1626) #12
  br label %1651

1651:                                             ; preds = %1633, %1650
  %1652 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1624, i64 0, i32 0
  %1653 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %1652, align 8
  %1654 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1653 to i8**
  %1655 = load i8*, i8** %1654, align 1
  %1656 = icmp eq i8* %1655, null
  br i1 %1656, label %1684, label %1657, !prof !6

1657:                                             ; preds = %1651
  %1658 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1653, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %1659 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1623, i32 3
  %1660 = load i32, i32* %1659, align 8
  %1661 = zext i32 %1660 to i64
  %1662 = bitcast i8* %1655 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %1663 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1662, align 8
  %1664 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %1663, null
  %1665 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %1663 to i64
  br i1 %1664, label %1666, label %1668

1666:                                             ; preds = %1657
  %1667 = call i64 @llvm.bswap.i64(i64 %1665) #12
  br label %1678

1668:                                             ; preds = %1657
  %1669 = xor i64 %1665, -1
  %1670 = getelementptr inbounds i8, i8* %1655, i64 8
  %1671 = bitcast i8* %1670 to i64*
  %1672 = load i64, i64* %1671, align 8
  %1673 = icmp eq i64 %1672, %1669
  br i1 %1673, label %1675, label %1674, !prof !3

1674:                                             ; preds = %1668
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

1675:                                             ; preds = %1668
  %1676 = call i64 @llvm.bswap.i64(i64 %1665) #12
  %1677 = inttoptr i64 %1676 to i8*
  call void @llvm.prefetch(i8* nonnull %1677, i32 0, i32 3, i32 1) #12
  br label %1678

1678:                                             ; preds = %1675, %1666
  %1679 = phi i64 [ %1667, %1666 ], [ %1676, %1675 ]
  %1680 = inttoptr i64 %1679 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %1680, %"class.base::internal::PartitionFreelistEntry"** %1658, align 1
  %1681 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1653, i64 0, i32 3
  %1682 = load i16, i16* %1681, align 1
  %1683 = add i16 %1682, 1
  store i16 %1683, i16* %1681, align 1
  br label %1715

1684:                                             ; preds = %1651
  %1685 = call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1624, %"struct.base::PartitionRoot"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %6) #12
  %1686 = icmp eq i8* %1685, null
  br i1 %1686, label %1715, label %1687, !prof !6

1687:                                             ; preds = %1684
  %1688 = ptrtoint i8* %1685 to i64
  %1689 = and i64 %1688, -2097152
  %1690 = or i64 %1689, 4096
  %1691 = inttoptr i64 %1690 to i8*
  %1692 = lshr i64 %1688, 9
  %1693 = and i64 %1692, 4064
  %1694 = getelementptr inbounds i8, i8* %1691, i64 %1693
  %1695 = bitcast i8* %1694 to %"struct.base::internal::PartitionPage"*
  %1696 = getelementptr inbounds i8, i8* %1694, i64 30
  %1697 = load i8, i8* %1696, align 2
  %1698 = zext i8 %1697 to i64
  %1699 = sub nsw i64 0, %1698
  %1700 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1695, i64 %1699, i32 0, i32 1, i64 21
  %1701 = load i8, i8* %1700, align 1, !range !5
  %1702 = icmp eq i8 %1701, 0
  br i1 %1702, label %1703, label %1710, !prof !3

1703:                                             ; preds = %1687
  %1704 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1695, i64 %1699, i32 0, i32 1, i64 8
  %1705 = bitcast i8* %1704 to %"struct.base::internal::PartitionBucket"**
  %1706 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1705, align 1
  %1707 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1706, i64 0, i32 3
  %1708 = load i32, i32* %1707, align 8
  %1709 = zext i32 %1708 to i64
  br label %1715

1710:                                             ; preds = %1687
  %1711 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1695, i64 %1699, i32 0
  %1712 = bitcast %union.anon* %1711 to %"struct.base::internal::PartitionPage"*
  %1713 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1712, i64 1, i32 0, i32 0, i32 0
  %1714 = load i64, i64* %1713, align 1
  br label %1715

1715:                                             ; preds = %1710, %1703, %1684, %1678
  %1716 = phi i64 [ %1661, %1678 ], [ -6148914691236517206, %1684 ], [ %1709, %1703 ], [ %1714, %1710 ]
  %1717 = phi i8* [ %1655, %1678 ], [ null, %1684 ], [ %1685, %1703 ], [ %1685, %1710 ]
  %1718 = atomicrmw xchg i32* %1627, i32 0 release
  %1719 = icmp eq i32 %1718, 2
  br i1 %1719, label %1720, label %1721, !prof !6

1720:                                             ; preds = %1715
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %1626) #12
  br label %1721

1721:                                             ; preds = %1720, %1715, %1621, %1616
  %1722 = phi i64 [ %1617, %1616 ], [ %1617, %1621 ], [ %1716, %1715 ], [ %1716, %1720 ]
  %1723 = phi i8* [ %1618, %1616 ], [ %1618, %1621 ], [ %1717, %1715 ], [ %1717, %1720 ]
  %1724 = icmp eq i8* %1723, null
  br i1 %1724, label %1734, label %1725, !prof !6

1725:                                             ; preds = %1721, %1521
  %1726 = phi i8* [ %1517, %1521 ], [ %1723, %1721 ]
  %1727 = phi i64 [ %1522, %1521 ], [ %1722, %1721 ]
  %1728 = and i32 %1, 2
  %1729 = icmp ne i32 %1728, 0
  %1730 = load i8, i8* %6, align 1
  %1731 = icmp eq i8 %1730, 0
  %1732 = and i1 %1729, %1731
  br i1 %1732, label %1733, label %1734, !prof !11

1733:                                             ; preds = %1725
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %1726, i8 0, i64 %1727, i1 false) #12
  br label %1734

1734:                                             ; preds = %1733, %1725, %1721
  %1735 = phi i8* [ null, %1721 ], [ %1726, %1725 ], [ %1726, %1733 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1429) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  store i8* %1735, i8** %8, align 8
  br i1 %1405, label %1736, label %1738

1736:                                             ; preds = %1734, %1408
  %1737 = phi i8* [ %1409, %1408 ], [ %1735, %1734 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %1737, i64 %3, i8* %4) #12
  br label %1738

1738:                                             ; preds = %1736, %1734
  %1739 = load i8*, i8** %8, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1402) #12
  br label %1740

1740:                                             ; preds = %1738, %1399
  %1741 = phi i8* [ %1400, %1399 ], [ %1739, %1738 ]
  %1742 = icmp eq i8* %1741, null
  br i1 %1742, label %1743, label %1747

1743:                                             ; preds = %1740
  %1744 = and i32 %1, 1
  %1745 = icmp eq i32 %1744, 0
  br i1 %1745, label %1746, label %1988

1746:                                             ; preds = %1743
  call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

1747:                                             ; preds = %1740
  %1748 = load i64, i64* %18, align 8
  %1749 = icmp ugt i64 %1748, %3
  %1750 = select i1 %1749, i64 %3, i64 %1748
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %1741, i8* nonnull align 1 %2, i64 %1750, i1 false)
  %1751 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %1752 = and i8 %1751, 1
  %1753 = icmp eq i8 %1752, 0
  br i1 %1753, label %1756, label %1754

1754:                                             ; preds = %1747
  call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %2) #12
  %1755 = call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %2) #12
  br i1 %1755, label %1988, label %1756

1756:                                             ; preds = %1754, %1747
  call void @llvm.prefetch(i8* nonnull %2, i32 0, i32 3, i32 1) #12
  %1757 = ptrtoint i8* %2 to i64
  %1758 = and i64 %1757, -2097152
  %1759 = or i64 %1758, 4096
  %1760 = inttoptr i64 %1759 to i8*
  %1761 = lshr i64 %1757, 9
  %1762 = and i64 %1761, 4064
  %1763 = getelementptr inbounds i8, i8* %1760, i64 %1762
  %1764 = bitcast i8* %1763 to %"struct.base::internal::PartitionPage"*
  %1765 = getelementptr inbounds i8, i8* %1763, i64 30
  %1766 = load i8, i8* %1765, align 2
  %1767 = zext i8 %1766 to i64
  %1768 = sub nsw i64 0, %1767
  %1769 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1764, i64 %1768, i32 0
  %1770 = bitcast %union.anon* %1769 to %"struct.base::internal::SlotSpanMetadata"*
  %1771 = bitcast %union.anon* %1769 to i8*
  call void @llvm.prefetch(i8* %1771, i32 0, i32 3, i32 1) #12
  %1772 = ptrtoint %union.anon* %1769 to i64
  %1773 = and i64 %1772, -4096
  %1774 = inttoptr i64 %1773 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %1775 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %1774, i64 0, i32 0
  %1776 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %1775, align 4096
  %1777 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 0
  %1778 = load i8, i8* %1777, align 8
  %1779 = icmp eq i8 %1778, 2
  br i1 %1779, label %1780, label %1849, !prof !6

1780:                                             ; preds = %1756
  %1781 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %1782 = icmp eq i8 %1781, 2
  br i1 %1782, label %1783, label %1784, !prof !6

1783:                                             ; preds = %1780
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %1784

1784:                                             ; preds = %1783, %1780
  %1785 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1764, i64 %1768, i32 0, i32 1, i64 8
  %1786 = bitcast i8* %1785 to %"struct.base::internal::PartitionBucket"**
  %1787 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1786, align 1
  %1788 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 10, i64 0
  %1789 = icmp ugt %"struct.base::internal::PartitionBucket"* %1788, %1787
  %1790 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 11
  %1791 = icmp ult %"struct.base::internal::PartitionBucket"* %1790, %1787
  %1792 = or i1 %1789, %1791
  br i1 %1792, label %1849, label %1793, !prof !6

1793:                                             ; preds = %1784
  %1794 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1764, i64 %1768, i32 0, i32 1, i64 21
  %1795 = load i8, i8* %1794, align 1, !range !5
  %1796 = icmp eq i8 %1795, 0
  br i1 %1796, label %1797, label %1801, !prof !3

1797:                                             ; preds = %1793
  %1798 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1787, i64 0, i32 3
  %1799 = load i32, i32* %1798, align 8
  %1800 = zext i32 %1799 to i64
  br label %1808

1801:                                             ; preds = %1793
  %1802 = bitcast %union.anon* %1769 to %"struct.base::internal::PartitionPage"*
  %1803 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1802, i64 1, i32 0, i32 0, i32 0
  %1804 = load i64, i64* %1803, align 1
  %1805 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1787, i64 0, i32 3
  %1806 = load i32, i32* %1805, align 8
  %1807 = zext i32 %1806 to i64
  br label %1808

1808:                                             ; preds = %1801, %1797
  %1809 = phi i64 [ %1800, %1797 ], [ %1807, %1801 ]
  %1810 = phi i64 [ %1800, %1797 ], [ %1804, %1801 ]
  %1811 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %1812 = inttoptr i64 %1758 to i8*
  %1813 = and i64 %1811, 1
  %1814 = icmp eq i64 %1813, 0
  %1815 = select i1 %1814, i64 16384, i64 32768
  %1816 = getelementptr inbounds i8, i8* %1812, i64 %1815
  %1817 = bitcast i8* %1816 to %"class.base::internal::ObjectBitmap"*
  %1818 = lshr i64 %1757, 4
  %1819 = lshr i64 %1757, 10
  %1820 = and i64 %1819, 2047
  %1821 = and i64 %1818, 63
  %1822 = shl i64 1, %1821
  %1823 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %1817, i64 0, i32 0, i32 0, i64 %1820
  %1824 = atomicrmw or i64* %1823, i64 %1822 monotonic
  %1825 = and i64 %1824, %1822
  %1826 = icmp eq i64 %1825, 0
  br i1 %1826, label %1828, label %1827, !prof !3

1827:                                             ; preds = %1808
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

1828:                                             ; preds = %1808
  %1829 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %1809 monotonic
  %1830 = add i64 %1829, %1809
  %1831 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %1832 = icmp ugt i64 %1830, %1831
  br i1 %1832, label %1833, label %1839

1833:                                             ; preds = %1828
  %1834 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %1835 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %1834 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %1836 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %1835, align 8
  %1837 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %1836, align 8
  %1838 = call zeroext i1 %1837(%"class.base::internal::PCScanSchedulingBackend"* %1834) #12
  br label %1839

1839:                                             ; preds = %1833, %1828
  %1840 = phi i1 [ false, %1828 ], [ %1838, %1833 ]
  %1841 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %1842 = icmp eq i8 %1841, 1
  br i1 %1842, label %1843, label %1844

1843:                                             ; preds = %1839
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 %1810, i1 false) #12
  br label %1844

1844:                                             ; preds = %1843, %1839
  br i1 %1840, label %1845, label %1988, !prof !6

1845:                                             ; preds = %1844
  %1846 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %1847 = icmp eq i8 %1846, 0
  br i1 %1847, label %1848, label %1988

1848:                                             ; preds = %1845
  call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %1988

1849:                                             ; preds = %1784, %1756
  %1850 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 2
  %1851 = load i8, i8* %1850, align 2, !range !5
  %1852 = icmp eq i8 %1851, 0
  br i1 %1852, label %1921, label %1853, !prof !6

1853:                                             ; preds = %1849
  %1854 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1764, i64 %1768, i32 0, i32 1, i64 8
  %1855 = bitcast i8* %1854 to %"struct.base::internal::PartitionBucket"**
  %1856 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %1855, align 1
  %1857 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 10, i64 0
  %1858 = icmp ule %"struct.base::internal::PartitionBucket"* %1857, %1856
  %1859 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 11
  %1860 = icmp uge %"struct.base::internal::PartitionBucket"* %1859, %1856
  %1861 = and i1 %1860, %1858
  %1862 = ptrtoint %"struct.base::internal::PartitionBucket"* %1856 to i64
  br i1 %1861, label %1863, label %1921, !prof !3

1863:                                             ; preds = %1853
  %1864 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %1865 = call i8* @pthread_getspecific(i32 %1864) #12
  %1866 = bitcast i8* %1865 to %"class.base::internal::ThreadCache"*
  %1867 = icmp ugt i8* %1865, inttoptr (i64 1 to i8*)
  br i1 %1867, label %1868, label %1921, !prof !3

1868:                                             ; preds = %1863
  %1869 = ptrtoint %"struct.base::internal::PartitionBucket"* %1857 to i64
  %1870 = sub i64 %1862, %1869
  %1871 = sdiv exact i64 %1870, 40
  %1872 = getelementptr inbounds i8, i8* %1865, i64 1480
  %1873 = bitcast i8* %1872 to i64*
  %1874 = load i64, i64* %1873, align 8
  %1875 = add i64 %1874, 1
  store i64 %1875, i64* %1873, align 8
  %1876 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %1877 = zext i16 %1876 to i64
  %1878 = icmp ugt i64 %1871, %1877
  br i1 %1878, label %1879, label %1884, !prof !6

1879:                                             ; preds = %1868
  %1880 = getelementptr inbounds i8, i8* %1865, i64 1496
  %1881 = bitcast i8* %1880 to i64*
  %1882 = load i64, i64* %1881, align 8
  %1883 = add i64 %1882, 1
  store i64 %1883, i64* %1881, align 8
  br label %1921

1884:                                             ; preds = %1868
  %1885 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1866, i64 0, i32 0, i64 %1871
  %1886 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %1885 to i64*
  %1887 = load i64, i64* %1886, align 8
  %1888 = call i64 @llvm.bswap.i64(i64 %1887) #12
  %1889 = inttoptr i64 %1888 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %1890 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %1889, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1890, align 8
  %1891 = xor i64 %1888, -1
  %1892 = getelementptr inbounds i8, i8* %2, i64 8
  %1893 = bitcast i8* %1892 to i64*
  store i64 %1891, i64* %1893, align 8
  %1894 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %1885 to i8**
  store i8* %2, i8** %1894, align 8
  %1895 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1866, i64 0, i32 0, i64 %1871, i32 1
  %1896 = load i8, i8* %1895, align 8
  %1897 = add i8 %1896, 1
  store i8 %1897, i8* %1895, align 8
  %1898 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1866, i64 0, i32 0, i64 %1871, i32 3
  %1899 = load i16, i16* %1898, align 2
  %1900 = zext i16 %1899 to i64
  %1901 = getelementptr inbounds i8, i8* %1865, i64 1424
  %1902 = bitcast i8* %1901 to i64*
  %1903 = load i64, i64* %1902, align 8
  %1904 = add i64 %1903, %1900
  store i64 %1904, i64* %1902, align 8
  %1905 = getelementptr inbounds i8, i8* %1865, i64 1488
  %1906 = bitcast i8* %1905 to i64*
  %1907 = load i64, i64* %1906, align 8
  %1908 = add i64 %1907, 1
  store i64 %1908, i64* %1906, align 8
  %1909 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %1866, i64 0, i32 0, i64 %1871, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1910 = load atomic i8, i8* %1909 monotonic, align 1
  %1911 = icmp ugt i8 %1897, %1910
  br i1 %1911, label %1912, label %1915, !prof !6

1912:                                             ; preds = %1884
  %1913 = lshr i8 %1910, 1
  %1914 = zext i8 %1913 to i64
  call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %1866, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %1885, i64 %1914) #12
  br label %1915

1915:                                             ; preds = %1912, %1884
  %1916 = getelementptr inbounds i8, i8* %1865, i64 1432
  %1917 = load atomic i8, i8* %1916 monotonic, align 1
  %1918 = and i8 %1917, 1
  %1919 = icmp eq i8 %1918, 0
  br i1 %1919, label %1988, label %1920, !prof !3

1920:                                             ; preds = %1915
  call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %1866) #12
  br label %1988

1921:                                             ; preds = %1879, %1863, %1853, %1849
  %1922 = bitcast %"struct.base::internal::DeferredUnmap"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1922) #12
  %1923 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %17, i64 0, i32 0
  %1924 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %17, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1922, i8 0, i64 16, i1 false) #12
  %1925 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1776, i64 0, i32 8
  %1926 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1925, i64 0, i32 0
  %1927 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %1925, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %1928

1928:                                             ; preds = %1940, %1921
  %1929 = phi i32 [ 0, %1921 ], [ %1941, %1940 ]
  %1930 = phi i32 [ 1, %1921 ], [ %1944, %1940 ]
  %1931 = load atomic i32, i32* %1927 monotonic, align 4
  %1932 = icmp eq i32 %1931, 0
  br i1 %1932, label %1933, label %1936, !prof !2

1933:                                             ; preds = %1928
  %1934 = cmpxchg weak i32* %1927, i32 0, i32 1 acquire monotonic
  %1935 = extractvalue { i32, i1 } %1934, 1
  br i1 %1935, label %1951, label %1936, !prof !3

1936:                                             ; preds = %1933, %1928
  %1937 = icmp sgt i32 %1930, 0
  br i1 %1937, label %1946, label %1940

1938:                                             ; preds = %1946
  %1939 = add i32 %1930, %1929
  br label %1940

1940:                                             ; preds = %1938, %1936
  %1941 = phi i32 [ %1929, %1936 ], [ %1939, %1938 ]
  %1942 = shl i32 %1930, 1
  %1943 = icmp slt i32 %1942, 64
  %1944 = select i1 %1943, i32 %1942, i32 64
  %1945 = icmp slt i32 %1941, 1000
  br i1 %1945, label %1928, label %1950

1946:                                             ; preds = %1936, %1946
  %1947 = phi i32 [ %1948, %1946 ], [ 0, %1936 ]
  call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %1948 = add nuw nsw i32 %1947, 1
  %1949 = icmp eq i32 %1948, %1930
  br i1 %1949, label %1938, label %1946

1950:                                             ; preds = %1940
  call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %1926) #12
  br label %1951

1951:                                             ; preds = %1933, %1950
  %1952 = bitcast %union.anon* %1769 to i8**
  %1953 = load i8*, i8** %1952, align 1
  %1954 = icmp eq i8* %1953, %2
  br i1 %1954, label %1957, label %1955, !prof !6

1955:                                             ; preds = %1951
  %1956 = ptrtoint i8* %1953 to i64
  br label %1960

1957:                                             ; preds = %1951
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %1958 = getelementptr inbounds %union.anon, %union.anon* %1769, i64 0, i32 0, i32 0
  %1959 = load i64, i64* %1958, align 1
  br label %1960

1960:                                             ; preds = %1957, %1955
  %1961 = phi i64 [ %1956, %1955 ], [ %1959, %1957 ]
  %1962 = call i64 @llvm.bswap.i64(i64 %1961) #12
  %1963 = inttoptr i64 %1962 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %1964 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %1963, %"struct.base::internal::EncodedPartitionFreelistEntry"** %1964, align 8
  %1965 = xor i64 %1962, -1
  %1966 = getelementptr inbounds i8, i8* %2, i64 8
  %1967 = bitcast i8* %1966 to i64*
  store i64 %1965, i64* %1967, align 8
  store i8* %2, i8** %1952, align 1
  %1968 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %1764, i64 %1768, i32 0, i32 1, i64 16
  %1969 = bitcast i8* %1968 to i16*
  %1970 = load i16, i16* %1969, align 1
  %1971 = add i16 %1970, -1
  store i16 %1971, i16* %1969, align 1
  %1972 = icmp slt i16 %1971, 1
  br i1 %1972, label %1973, label %1977, !prof !6

1973:                                             ; preds = %1960
  %1974 = call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %1770) #12
  %1975 = extractvalue { i8*, i64 } %1974, 0
  %1976 = extractvalue { i8*, i64 } %1974, 1
  br label %1977

1977:                                             ; preds = %1973, %1960
  %1978 = phi i8* [ %1975, %1973 ], [ null, %1960 ]
  %1979 = phi i64 [ %1976, %1973 ], [ 0, %1960 ]
  store i8* %1978, i8** %1923, align 8
  store i64 %1979, i64* %1924, align 8
  %1980 = atomicrmw xchg i32* %1927, i32 0 release
  %1981 = icmp eq i32 %1980, 2
  br i1 %1981, label %1982, label %1983, !prof !6

1982:                                             ; preds = %1977
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %1926) #12
  br label %1983

1983:                                             ; preds = %1982, %1977
  %1984 = load i8*, i8** %1923, align 8
  %1985 = icmp eq i8* %1984, null
  br i1 %1985, label %1987, label %1986, !prof !3

1986:                                             ; preds = %1983
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %17) #12
  br label %1987

1987:                                             ; preds = %1986, %1983
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1922) #12
  br label %1988

1988:                                             ; preds = %1071, %1068, %1987, %1920, %1915, %1848, %1845, %1844, %1754, %1019, %1743, %1020
  %1989 = phi i8* [ %2, %1020 ], [ null, %1743 ], [ %2, %1019 ], [ %1741, %1754 ], [ %1741, %1844 ], [ %1741, %1845 ], [ %1741, %1848 ], [ %1741, %1915 ], [ %1741, %1920 ], [ %1741, %1987 ], [ %2, %1068 ], [ %2, %1071 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %938) #12
  br label %1990

1990:                                             ; preds = %927, %860, %855, %788, %785, %784, %694, %930, %347, %686, %1988
  %1991 = phi i8* [ %1989, %1988 ], [ %348, %347 ], [ %687, %686 ], [ null, %930 ], [ null, %694 ], [ null, %784 ], [ null, %785 ], [ null, %788 ], [ null, %855 ], [ null, %860 ], [ null, %927 ]
  ret i8* %1991
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE10TryReallocEPvmPKc(%"struct.base::PartitionRoot"*, i8*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call i8* @_ZN4base13PartitionRootILb1EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot"* %0, i32 1, i8* %1, i64 %2, i8* %3)
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE4FreeEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %242, label %4, !prof !6

4:                                                ; preds = %1
  %5 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %0) #12
  %9 = tail call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %0) #12
  br i1 %9, label %242, label %10

10:                                               ; preds = %4, %8
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1) #12
  %11 = ptrtoint i8* %0 to i64
  %12 = and i64 %11, -2097152
  %13 = or i64 %12, 4096
  %14 = inttoptr i64 %13 to i8*
  %15 = lshr i64 %11, 9
  %16 = and i64 %15, 4064
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = bitcast i8* %17 to %"struct.base::internal::PartitionPage"*
  %19 = getelementptr inbounds i8, i8* %17, i64 30
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i64
  %22 = sub nsw i64 0, %21
  %23 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0
  %24 = bitcast %union.anon* %23 to %"struct.base::internal::SlotSpanMetadata"*
  %25 = bitcast %union.anon* %23 to i8*
  tail call void @llvm.prefetch(i8* %25, i32 0, i32 3, i32 1) #12
  %26 = ptrtoint %union.anon* %23 to i64
  %27 = and i64 %26, -4096
  %28 = inttoptr i64 %27 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %29 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %28, i64 0, i32 0
  %30 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %29, align 4096
  %31 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 2
  br i1 %33, label %34, label %103, !prof !6

34:                                               ; preds = %10
  %35 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %37, label %38, !prof !6

37:                                               ; preds = %34
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %38

38:                                               ; preds = %37, %34
  %39 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 8
  %40 = bitcast i8* %39 to %"struct.base::internal::PartitionBucket"**
  %41 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %40, align 1
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 10, i64 0
  %43 = icmp ugt %"struct.base::internal::PartitionBucket"* %42, %41
  %44 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 11
  %45 = icmp ult %"struct.base::internal::PartitionBucket"* %44, %41
  %46 = or i1 %43, %45
  br i1 %46, label %103, label %47, !prof !6

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 21
  %49 = load i8, i8* %48, align 1, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55, !prof !3

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %41, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  br label %62

55:                                               ; preds = %47
  %56 = bitcast %union.anon* %23 to %"struct.base::internal::PartitionPage"*
  %57 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %56, i64 1, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 1
  %59 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %41, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %55, %51
  %63 = phi i64 [ %54, %51 ], [ %61, %55 ]
  %64 = phi i64 [ %54, %51 ], [ %58, %55 ]
  %65 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %66 = inttoptr i64 %12 to i8*
  %67 = and i64 %65, 1
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, i64 16384, i64 32768
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = bitcast i8* %70 to %"class.base::internal::ObjectBitmap"*
  %72 = lshr i64 %11, 4
  %73 = lshr i64 %11, 10
  %74 = and i64 %73, 2047
  %75 = and i64 %72, 63
  %76 = shl i64 1, %75
  %77 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %71, i64 0, i32 0, i32 0, i64 %74
  %78 = atomicrmw or i64* %77, i64 %76 monotonic
  %79 = and i64 %78, %76
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %62
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

82:                                               ; preds = %62
  %83 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %63 monotonic
  %84 = add i64 %83, %63
  %85 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %82
  %88 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %89 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %88 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %90 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %89, align 8
  %91 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.base::internal::PCScanSchedulingBackend"* %88) #12
  br label %93

93:                                               ; preds = %87, %82
  %94 = phi i1 [ false, %82 ], [ %92, %87 ]
  %95 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %64, i1 false) #12
  br label %98

98:                                               ; preds = %97, %93
  br i1 %94, label %99, label %242, !prof !6

99:                                               ; preds = %98
  %100 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %242

102:                                              ; preds = %99
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %242

103:                                              ; preds = %38, %10
  %104 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 2
  %105 = load i8, i8* %104, align 2, !range !5
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %175, label %107, !prof !6

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 8
  %109 = bitcast i8* %108 to %"struct.base::internal::PartitionBucket"**
  %110 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %109, align 1
  %111 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 10, i64 0
  %112 = icmp ule %"struct.base::internal::PartitionBucket"* %111, %110
  %113 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 11
  %114 = icmp uge %"struct.base::internal::PartitionBucket"* %113, %110
  %115 = and i1 %114, %112
  %116 = ptrtoint %"struct.base::internal::PartitionBucket"* %110 to i64
  br i1 %115, label %117, label %175, !prof !3

117:                                              ; preds = %107
  %118 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %119 = tail call i8* @pthread_getspecific(i32 %118) #12
  %120 = bitcast i8* %119 to %"class.base::internal::ThreadCache"*
  %121 = icmp ugt i8* %119, inttoptr (i64 1 to i8*)
  br i1 %121, label %122, label %175, !prof !3

122:                                              ; preds = %117
  %123 = ptrtoint %"struct.base::internal::PartitionBucket"* %111 to i64
  %124 = sub i64 %116, %123
  %125 = sdiv exact i64 %124, 40
  %126 = getelementptr inbounds i8, i8* %119, i64 1480
  %127 = bitcast i8* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %131 = zext i16 %130 to i64
  %132 = icmp ugt i64 %125, %131
  br i1 %132, label %133, label %138, !prof !6

133:                                              ; preds = %122
  %134 = getelementptr inbounds i8, i8* %119, i64 1496
  %135 = bitcast i8* %134 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %136, 1
  store i64 %137, i64* %135, align 8
  br label %175

138:                                              ; preds = %122
  %139 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %120, i64 0, i32 0, i64 %125
  %140 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = tail call i64 @llvm.bswap.i64(i64 %141) #12
  %143 = inttoptr i64 %142 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %144 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %143, %"struct.base::internal::EncodedPartitionFreelistEntry"** %144, align 8
  %145 = xor i64 %142, -1
  %146 = getelementptr inbounds i8, i8* %0, i64 8
  %147 = bitcast i8* %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %139 to i8**
  store i8* %0, i8** %148, align 8
  %149 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %120, i64 0, i32 0, i64 %125, i32 1
  %150 = load i8, i8* %149, align 8
  %151 = add i8 %150, 1
  store i8 %151, i8* %149, align 8
  %152 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %120, i64 0, i32 0, i64 %125, i32 3
  %153 = load i16, i16* %152, align 2
  %154 = zext i16 %153 to i64
  %155 = getelementptr inbounds i8, i8* %119, i64 1424
  %156 = bitcast i8* %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %157, %154
  store i64 %158, i64* %156, align 8
  %159 = getelementptr inbounds i8, i8* %119, i64 1488
  %160 = bitcast i8* %159 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, 1
  store i64 %162, i64* %160, align 8
  %163 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %120, i64 0, i32 0, i64 %125, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i8, i8* %163 monotonic, align 1
  %165 = icmp ugt i8 %151, %164
  br i1 %165, label %166, label %169, !prof !6

166:                                              ; preds = %138
  %167 = lshr i8 %164, 1
  %168 = zext i8 %167 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %120, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %139, i64 %168) #12
  br label %169

169:                                              ; preds = %166, %138
  %170 = getelementptr inbounds i8, i8* %119, i64 1432
  %171 = load atomic i8, i8* %170 monotonic, align 1
  %172 = and i8 %171, 1
  %173 = icmp eq i8 %172, 0
  br i1 %173, label %242, label %174, !prof !3

174:                                              ; preds = %169
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %120) #12
  br label %242

175:                                              ; preds = %133, %117, %107, %103
  %176 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #12
  %177 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %178 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 16, i1 false) #12
  %179 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %30, i64 0, i32 8
  %180 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %179, i64 0, i32 0
  %181 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %179, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %182

182:                                              ; preds = %194, %175
  %183 = phi i32 [ 0, %175 ], [ %195, %194 ]
  %184 = phi i32 [ 1, %175 ], [ %198, %194 ]
  %185 = load atomic i32, i32* %181 monotonic, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %190, !prof !2

187:                                              ; preds = %182
  %188 = cmpxchg weak i32* %181, i32 0, i32 1 acquire monotonic
  %189 = extractvalue { i32, i1 } %188, 1
  br i1 %189, label %205, label %190, !prof !3

190:                                              ; preds = %187, %182
  %191 = icmp sgt i32 %184, 0
  br i1 %191, label %200, label %194

192:                                              ; preds = %200
  %193 = add i32 %184, %183
  br label %194

194:                                              ; preds = %192, %190
  %195 = phi i32 [ %183, %190 ], [ %193, %192 ]
  %196 = shl i32 %184, 1
  %197 = icmp slt i32 %196, 64
  %198 = select i1 %197, i32 %196, i32 64
  %199 = icmp slt i32 %195, 1000
  br i1 %199, label %182, label %204

200:                                              ; preds = %190, %200
  %201 = phi i32 [ %202, %200 ], [ 0, %190 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %202 = add nuw nsw i32 %201, 1
  %203 = icmp eq i32 %202, %184
  br i1 %203, label %192, label %200

204:                                              ; preds = %194
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %180) #12
  br label %205

205:                                              ; preds = %187, %204
  %206 = bitcast %union.anon* %23 to i8**
  %207 = load i8*, i8** %206, align 1
  %208 = icmp eq i8* %207, %0
  br i1 %208, label %211, label %209, !prof !6

209:                                              ; preds = %205
  %210 = ptrtoint i8* %207 to i64
  br label %214

211:                                              ; preds = %205
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %212 = getelementptr inbounds %union.anon, %union.anon* %23, i64 0, i32 0, i32 0
  %213 = load i64, i64* %212, align 1
  br label %214

214:                                              ; preds = %211, %209
  %215 = phi i64 [ %210, %209 ], [ %213, %211 ]
  %216 = tail call i64 @llvm.bswap.i64(i64 %215) #12
  %217 = inttoptr i64 %216 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %218 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %217, %"struct.base::internal::EncodedPartitionFreelistEntry"** %218, align 8
  %219 = xor i64 %216, -1
  %220 = getelementptr inbounds i8, i8* %0, i64 8
  %221 = bitcast i8* %220 to i64*
  store i64 %219, i64* %221, align 8
  store i8* %0, i8** %206, align 1
  %222 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %18, i64 %22, i32 0, i32 1, i64 16
  %223 = bitcast i8* %222 to i16*
  %224 = load i16, i16* %223, align 1
  %225 = add i16 %224, -1
  store i16 %225, i16* %223, align 1
  %226 = icmp slt i16 %225, 1
  br i1 %226, label %227, label %231, !prof !6

227:                                              ; preds = %214
  %228 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %24) #12
  %229 = extractvalue { i8*, i64 } %228, 0
  %230 = extractvalue { i8*, i64 } %228, 1
  br label %231

231:                                              ; preds = %227, %214
  %232 = phi i8* [ %229, %227 ], [ null, %214 ]
  %233 = phi i64 [ %230, %227 ], [ 0, %214 ]
  store i8* %232, i8** %177, align 8
  store i64 %233, i64* %178, align 8
  %234 = atomicrmw xchg i32* %181, i32 0 release
  %235 = icmp eq i32 %234, 2
  br i1 %235, label %236, label %237, !prof !6

236:                                              ; preds = %231
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %180) #12
  br label %237

237:                                              ; preds = %236, %231
  %238 = load i8*, i8** %177, align 8
  %239 = icmp eq i8* %238, null
  br i1 %239, label %241, label %240, !prof !3

240:                                              ; preds = %237
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #12
  br label %241

241:                                              ; preds = %240, %237
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #12
  br label %242

242:                                              ; preds = %241, %174, %169, %102, %99, %98, %8, %1
  ret void
}

declare zeroext i1 @_ZN4base19PartitionAllocHooks28ReallocOverrideHookIfEnabledEPmPv(i64*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb1EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb1EEEm(%"struct.base::PartitionRoot"*, %"struct.base::internal::SlotSpanMetadata"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4095
  %5 = and i64 %4, -4096
  %6 = icmp ult i64 %5, 983041
  br i1 %6, label %55, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 2
  %9 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %8, align 1
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %1 to i64
  %14 = and i64 %13, 2097151
  %15 = add nuw nsw i64 %14, 36028797018959872
  %16 = lshr i64 %15, 5
  %17 = and i64 %13, -2097152
  %18 = shl i64 %16, 14
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %5, %12
  br i1 %21, label %49, label %22

22:                                               ; preds = %7
  %23 = icmp ult i64 %5, %12
  %24 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 -2, i32 5
  %25 = getelementptr inbounds i8, i8* %24, i64 160
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  br i1 %23, label %28, label %42

28:                                               ; preds = %22
  %29 = add i64 %2, 2117631
  %30 = and i64 %29, -2097152
  %31 = add i64 %30, -20480
  %32 = lshr exact i64 %31, 12
  %33 = mul nuw nsw i64 %32, 5
  %34 = lshr i64 %27, 12
  %35 = shl nuw nsw i64 %34, 2
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %55, label %37

37:                                               ; preds = %28
  %38 = sub i64 %12, %5
  %39 = getelementptr inbounds i8, i8* %20, i64 %5
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %39, i64 %38, i32 0) #12
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i64* %40, i64 %38 monotonic
  br label %49

42:                                               ; preds = %22
  %43 = icmp ugt i64 %5, %27
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = sub i64 %5, %12
  %46 = getelementptr inbounds i8, i8* %20, i64 %12
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %46, i64 %45, i32 2, i32 0) #12
  %47 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i64* %47, i64 %45 monotonic
  br label %49

49:                                               ; preds = %37, %44, %7
  %50 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1 to %"struct.base::internal::PartitionPage"*
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 1, i32 0, i32 0, i32 0
  store i64 %2, i64* %51, align 1
  %52 = trunc i64 %5 to i32
  %53 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %8, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %53, i64 0, i32 3
  store i32 %52, i32* %54, align 8
  br label %55

55:                                               ; preds = %49, %28, %42, %3
  %56 = phi i1 [ false, %3 ], [ true, %49 ], [ false, %28 ], [ false, %42 ]
  ret i1 %56
}

declare void @_ZN4base19PartitionAllocHooks28ReallocObserverHookIfEnabledEPvS1_mPKc(i8*, i8*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb1EE17TryReallocInPlaceEPvPNS_8internal16SlotSpanMetadataILb1EEEm(%"struct.base::PartitionRoot"*, i8*, %"struct.base::internal::SlotSpanMetadata"*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %6 = sub nuw nsw i64 64, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = lshr i64 %3, %10
  %12 = and i64 %11, 7
  %13 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %7
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, %3
  %16 = shl nuw nsw i64 %7, 3
  %17 = or i64 %12, %16
  %18 = icmp ne i64 %15, 0
  %19 = zext i1 %18 to i64
  %20 = add nuw nsw i64 %17, %19
  %21 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %23, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 255
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28, !prof !6

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %23, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  br label %37

32:                                               ; preds = %4
  %33 = icmp ugt i64 %3, 2145386496
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = add nuw nsw i64 %3, 4095
  %36 = and i64 %35, -4096
  br label %37

37:                                               ; preds = %28, %32, %34
  %38 = phi i64 [ %31, %28 ], [ %3, %32 ], [ %36, %34 ]
  %39 = ptrtoint i8* %1 to i64
  %40 = and i64 %39, -2097152
  %41 = or i64 %40, 4096
  %42 = inttoptr i64 %41 to i8*
  %43 = lshr i64 %39, 9
  %44 = and i64 %43, 4064
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = bitcast i8* %45 to %"struct.base::internal::PartitionPage"*
  %47 = getelementptr inbounds i8, i8* %45, i64 30
  %48 = load i8, i8* %47, align 2
  %49 = zext i8 %48 to i64
  %50 = sub nsw i64 0, %49
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %46, i64 %50, i32 0, i32 1, i64 8
  %52 = bitcast i8* %51 to %"struct.base::internal::PartitionBucket"**
  %53 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %52, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = icmp eq i64 %38, %56
  br i1 %57, label %58, label %67

58:                                               ; preds = %37
  %59 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 6
  %60 = load i8, i8* %59, align 1, !range !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to %"struct.base::internal::PartitionPage"*
  %64 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %63, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %64, align 1
  br label %65

65:                                               ; preds = %58, %62
  %66 = icmp ne i8* %1, null
  br label %67

67:                                               ; preds = %37, %65
  %68 = phi i1 [ %66, %65 ], [ false, %37 ]
  ret i1 %68
}

declare void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #2

declare zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE11FreeNoHooksEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %236, label %4, !prof !6

4:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1)
  %5 = ptrtoint i8* %0 to i64
  %6 = and i64 %5, -2097152
  %7 = or i64 %6, 4096
  %8 = inttoptr i64 %7 to i8*
  %9 = lshr i64 %5, 9
  %10 = and i64 %9, 4064
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = bitcast i8* %11 to %"struct.base::internal::PartitionPage"*
  %13 = getelementptr inbounds i8, i8* %11, i64 30
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %12, i64 %16, i32 0
  %18 = bitcast %union.anon* %17 to %"struct.base::internal::SlotSpanMetadata"*
  %19 = bitcast %union.anon* %17 to i8*
  tail call void @llvm.prefetch(i8* %19, i32 0, i32 3, i32 1)
  %20 = ptrtoint %union.anon* %17 to i64
  %21 = and i64 %20, -4096
  %22 = inttoptr i64 %21 to %"struct.base::internal::PartitionSuperPageExtentEntry"*
  %23 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry", %"struct.base::internal::PartitionSuperPageExtentEntry"* %22, i64 0, i32 0
  %24 = load %"struct.base::PartitionRoot"*, %"struct.base::PartitionRoot"** %23, align 4096
  %25 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %97, !prof !6

28:                                               ; preds = %4
  %29 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %30 = icmp eq i8 %29, 2
  br i1 %30, label %31, label %32, !prof !6

31:                                               ; preds = %28
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %32

32:                                               ; preds = %28, %31
  %33 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %12, i64 %16, i32 0, i32 1, i64 8
  %34 = bitcast i8* %33 to %"struct.base::internal::PartitionBucket"**
  %35 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %34, align 1
  %36 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 10, i64 0
  %37 = icmp ugt %"struct.base::internal::PartitionBucket"* %36, %35
  %38 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 11
  %39 = icmp ult %"struct.base::internal::PartitionBucket"* %38, %35
  %40 = or i1 %37, %39
  br i1 %40, label %97, label %41, !prof !6

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %12, i64 %16, i32 0, i32 1, i64 21
  %43 = load i8, i8* %42, align 1, !range !5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %35, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  br label %56

49:                                               ; preds = %41
  %50 = bitcast %union.anon* %17 to %"struct.base::internal::PartitionPage"*
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %50, i64 1, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 1
  %53 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %35, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %45, %49
  %57 = phi i64 [ %48, %45 ], [ %55, %49 ]
  %58 = phi i64 [ %48, %45 ], [ %52, %49 ]
  %59 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %60 = inttoptr i64 %6 to i8*
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  %63 = select i1 %62, i64 16384, i64 32768
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = bitcast i8* %64 to %"class.base::internal::ObjectBitmap"*
  %66 = lshr i64 %5, 4
  %67 = lshr i64 %5, 10
  %68 = and i64 %67, 2047
  %69 = and i64 %66, 63
  %70 = shl i64 1, %69
  %71 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %65, i64 0, i32 0, i32 0, i64 %68
  %72 = atomicrmw or i64* %71, i64 %70 monotonic
  %73 = and i64 %72, %70
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %56
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

76:                                               ; preds = %56
  %77 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %57 monotonic
  %78 = add i64 %77, %57
  %79 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %83 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %82 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %84 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %83, align 8
  %85 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.base::internal::PCScanSchedulingBackend"* %82) #12
  br label %87

87:                                               ; preds = %81, %76
  %88 = phi i1 [ false, %76 ], [ %86, %81 ]
  %89 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %58, i1 false) #12
  br label %92

92:                                               ; preds = %91, %87
  br i1 %88, label %93, label %236, !prof !6

93:                                               ; preds = %92
  %94 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %236

96:                                               ; preds = %93
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %236

97:                                               ; preds = %32, %4
  %98 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 2
  %99 = load i8, i8* %98, align 2, !range !5
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %169, label %101, !prof !6

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %12, i64 %16, i32 0, i32 1, i64 8
  %103 = bitcast i8* %102 to %"struct.base::internal::PartitionBucket"**
  %104 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %103, align 1
  %105 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 10, i64 0
  %106 = icmp ule %"struct.base::internal::PartitionBucket"* %105, %104
  %107 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 11
  %108 = icmp uge %"struct.base::internal::PartitionBucket"* %107, %104
  %109 = and i1 %108, %106
  %110 = ptrtoint %"struct.base::internal::PartitionBucket"* %104 to i64
  br i1 %109, label %111, label %169, !prof !3

111:                                              ; preds = %101
  %112 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %113 = tail call i8* @pthread_getspecific(i32 %112) #12
  %114 = bitcast i8* %113 to %"class.base::internal::ThreadCache"*
  %115 = icmp ugt i8* %113, inttoptr (i64 1 to i8*)
  br i1 %115, label %116, label %169, !prof !3

116:                                              ; preds = %111
  %117 = ptrtoint %"struct.base::internal::PartitionBucket"* %105 to i64
  %118 = sub i64 %110, %117
  %119 = sdiv exact i64 %118, 40
  %120 = getelementptr inbounds i8, i8* %113, i64 1480
  %121 = bitcast i8* %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = add i64 %122, 1
  store i64 %123, i64* %121, align 8
  %124 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %125 = zext i16 %124 to i64
  %126 = icmp ugt i64 %119, %125
  br i1 %126, label %127, label %132, !prof !6

127:                                              ; preds = %116
  %128 = getelementptr inbounds i8, i8* %113, i64 1496
  %129 = bitcast i8* %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = add i64 %130, 1
  store i64 %131, i64* %129, align 8
  br label %169

132:                                              ; preds = %116
  %133 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %114, i64 0, i32 0, i64 %119
  %134 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.bswap.i64(i64 %135) #12
  %137 = inttoptr i64 %136 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %138 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %137, %"struct.base::internal::EncodedPartitionFreelistEntry"** %138, align 8
  %139 = xor i64 %136, -1
  %140 = getelementptr inbounds i8, i8* %0, i64 8
  %141 = bitcast i8* %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %133 to i8**
  store i8* %0, i8** %142, align 8
  %143 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %114, i64 0, i32 0, i64 %119, i32 1
  %144 = load i8, i8* %143, align 8
  %145 = add i8 %144, 1
  store i8 %145, i8* %143, align 8
  %146 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %114, i64 0, i32 0, i64 %119, i32 3
  %147 = load i16, i16* %146, align 2
  %148 = zext i16 %147 to i64
  %149 = getelementptr inbounds i8, i8* %113, i64 1424
  %150 = bitcast i8* %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = add i64 %151, %148
  store i64 %152, i64* %150, align 8
  %153 = getelementptr inbounds i8, i8* %113, i64 1488
  %154 = bitcast i8* %153 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %154, align 8
  %157 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %114, i64 0, i32 0, i64 %119, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i8, i8* %157 monotonic, align 1
  %159 = icmp ugt i8 %145, %158
  br i1 %159, label %160, label %163, !prof !6

160:                                              ; preds = %132
  %161 = lshr i8 %158, 1
  %162 = zext i8 %161 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %114, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %133, i64 %162) #12
  br label %163

163:                                              ; preds = %160, %132
  %164 = getelementptr inbounds i8, i8* %113, i64 1432
  %165 = load atomic i8, i8* %164 monotonic, align 1
  %166 = and i8 %165, 1
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %236, label %168, !prof !3

168:                                              ; preds = %163
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %114) #12
  br label %236

169:                                              ; preds = %127, %111, %101, %97
  %170 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %170) #12
  %171 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %172 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 16, i1 false) #12
  %173 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %24, i64 0, i32 8
  %174 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %173, i64 0, i32 0
  %175 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %176

176:                                              ; preds = %188, %169
  %177 = phi i32 [ 0, %169 ], [ %189, %188 ]
  %178 = phi i32 [ 1, %169 ], [ %192, %188 ]
  %179 = load atomic i32, i32* %175 monotonic, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %184, !prof !2

181:                                              ; preds = %176
  %182 = cmpxchg weak i32* %175, i32 0, i32 1 acquire monotonic
  %183 = extractvalue { i32, i1 } %182, 1
  br i1 %183, label %199, label %184, !prof !3

184:                                              ; preds = %181, %176
  %185 = icmp sgt i32 %178, 0
  br i1 %185, label %194, label %188

186:                                              ; preds = %194
  %187 = add i32 %178, %177
  br label %188

188:                                              ; preds = %186, %184
  %189 = phi i32 [ %177, %184 ], [ %187, %186 ]
  %190 = shl i32 %178, 1
  %191 = icmp slt i32 %190, 64
  %192 = select i1 %191, i32 %190, i32 64
  %193 = icmp slt i32 %189, 1000
  br i1 %193, label %176, label %198

194:                                              ; preds = %184, %194
  %195 = phi i32 [ %196, %194 ], [ 0, %184 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %196 = add nuw nsw i32 %195, 1
  %197 = icmp eq i32 %196, %178
  br i1 %197, label %186, label %194

198:                                              ; preds = %188
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %174) #12
  br label %199

199:                                              ; preds = %181, %198
  %200 = bitcast %union.anon* %17 to i8**
  %201 = load i8*, i8** %200, align 1
  %202 = icmp eq i8* %201, %0
  br i1 %202, label %205, label %203, !prof !6

203:                                              ; preds = %199
  %204 = ptrtoint i8* %201 to i64
  br label %208

205:                                              ; preds = %199
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %206 = getelementptr inbounds %union.anon, %union.anon* %17, i64 0, i32 0, i32 0
  %207 = load i64, i64* %206, align 1
  br label %208

208:                                              ; preds = %205, %203
  %209 = phi i64 [ %204, %203 ], [ %207, %205 ]
  %210 = tail call i64 @llvm.bswap.i64(i64 %209) #12
  %211 = inttoptr i64 %210 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %212 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %211, %"struct.base::internal::EncodedPartitionFreelistEntry"** %212, align 8
  %213 = xor i64 %210, -1
  %214 = getelementptr inbounds i8, i8* %0, i64 8
  %215 = bitcast i8* %214 to i64*
  store i64 %213, i64* %215, align 8
  store i8* %0, i8** %200, align 1
  %216 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %12, i64 %16, i32 0, i32 1, i64 16
  %217 = bitcast i8* %216 to i16*
  %218 = load i16, i16* %217, align 1
  %219 = add i16 %218, -1
  store i16 %219, i16* %217, align 1
  %220 = icmp slt i16 %219, 1
  br i1 %220, label %221, label %225, !prof !6

221:                                              ; preds = %208
  %222 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %18) #12
  %223 = extractvalue { i8*, i64 } %222, 0
  %224 = extractvalue { i8*, i64 } %222, 1
  br label %225

225:                                              ; preds = %221, %208
  %226 = phi i8* [ %223, %221 ], [ null, %208 ]
  %227 = phi i64 [ %224, %221 ], [ 0, %208 ]
  store i8* %226, i8** %171, align 8
  store i64 %227, i64* %172, align 8
  %228 = atomicrmw xchg i32* %175, i32 0 release
  %229 = icmp eq i32 %228, 2
  br i1 %229, label %230, label %231, !prof !6

230:                                              ; preds = %225
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %174) #12
  br label %231

231:                                              ; preds = %230, %225
  %232 = load i8*, i8** %171, align 8
  %233 = icmp eq i8* %232, null
  br i1 %233, label %235, label %234, !prof !3

234:                                              ; preds = %231
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #12
  br label %235

235:                                              ; preds = %234, %231
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %170) #12
  br label %236

236:                                              ; preds = %235, %168, %163, %96, %93, %92, %1
  ret void
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb1EE20IsDirectMappedBucketEPNS_8internal15PartitionBucketILb1EEE(%"struct.base::PartitionRoot"*, %"struct.base::internal::PartitionBucket"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  %4 = icmp ugt %"struct.base::internal::PartitionBucket"* %3, %1
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 11
  %6 = icmp ult %"struct.base::internal::PartitionBucket"* %5, %1
  %7 = or i1 %4, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE20FreeNoHooksImmediateEPvPNS_8internal16SlotSpanMetadataILb1EEE(%"struct.base::PartitionRoot"*, i8*, %"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 2, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %75, label %8, !prof !6

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 2
  %10 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %9, align 1
  %11 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  %12 = icmp ule %"struct.base::internal::PartitionBucket"* %11, %10
  %13 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 11
  %14 = icmp uge %"struct.base::internal::PartitionBucket"* %13, %10
  %15 = and i1 %14, %12
  %16 = ptrtoint %"struct.base::internal::PartitionBucket"* %10 to i64
  br i1 %15, label %17, label %75, !prof !3

17:                                               ; preds = %8
  %18 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %19 = tail call i8* @pthread_getspecific(i32 %18) #12
  %20 = bitcast i8* %19 to %"class.base::internal::ThreadCache"*
  %21 = icmp ugt i8* %19, inttoptr (i64 1 to i8*)
  br i1 %21, label %22, label %75, !prof !3

22:                                               ; preds = %17
  %23 = ptrtoint %"struct.base::internal::PartitionBucket"* %11 to i64
  %24 = sub i64 %16, %23
  %25 = sdiv exact i64 %24, 40
  %26 = getelementptr inbounds i8, i8* %19, i64 1480
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  %30 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %31 = zext i16 %30 to i64
  %32 = icmp ugt i64 %25, %31
  br i1 %32, label %33, label %38, !prof !6

33:                                               ; preds = %22
  %34 = getelementptr inbounds i8, i8* %19, i64 1496
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  br label %75

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25
  %40 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = tail call i64 @llvm.bswap.i64(i64 %41) #12
  %43 = inttoptr i64 %42 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %44 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %43, %"struct.base::internal::EncodedPartitionFreelistEntry"** %44, align 8
  %45 = xor i64 %42, -1
  %46 = getelementptr inbounds i8, i8* %1, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %39 to i8**
  store i8* %1, i8** %48, align 8
  %49 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 1
  %50 = load i8, i8* %49, align 8
  %51 = add i8 %50, 1
  store i8 %51, i8* %49, align 8
  %52 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 3
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds i8, i8* %19, i64 1424
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %54
  store i64 %58, i64* %56, align 8
  %59 = getelementptr inbounds i8, i8* %19, i64 1488
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = icmp ugt i8 %51, %64
  br i1 %65, label %66, label %69, !prof !6

66:                                               ; preds = %38
  %67 = lshr i8 %64, 1
  %68 = zext i8 %67 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %20, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %39, i64 %68) #12
  br label %69

69:                                               ; preds = %66, %38
  %70 = getelementptr inbounds i8, i8* %19, i64 1432
  %71 = load atomic i8, i8* %70 monotonic, align 1
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %141, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %20) #12
  br label %141

75:                                               ; preds = %33, %17, %8, %3
  %76 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %80 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %79, i64 0, i32 0
  %81 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %82

82:                                               ; preds = %94, %75
  %83 = phi i32 [ 0, %75 ], [ %95, %94 ]
  %84 = phi i32 [ 1, %75 ], [ %98, %94 ]
  %85 = load atomic i32, i32* %81 monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90, !prof !2

87:                                               ; preds = %82
  %88 = cmpxchg weak i32* %81, i32 0, i32 1 acquire monotonic
  %89 = extractvalue { i32, i1 } %88, 1
  br i1 %89, label %105, label %90, !prof !3

90:                                               ; preds = %87, %82
  %91 = icmp sgt i32 %84, 0
  br i1 %91, label %100, label %94

92:                                               ; preds = %100
  %93 = add i32 %84, %83
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i32 [ %83, %90 ], [ %93, %92 ]
  %96 = shl i32 %84, 1
  %97 = icmp slt i32 %96, 64
  %98 = select i1 %97, i32 %96, i32 64
  %99 = icmp slt i32 %95, 1000
  br i1 %99, label %82, label %104

100:                                              ; preds = %90, %100
  %101 = phi i32 [ %102, %100 ], [ 0, %90 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %102 = add nuw nsw i32 %101, 1
  %103 = icmp eq i32 %102, %84
  br i1 %103, label %92, label %100

104:                                              ; preds = %94
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %80) #12
  br label %105

105:                                              ; preds = %87, %104
  %106 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i8**
  %107 = load i8*, i8** %106, align 1
  %108 = icmp eq i8* %107, %1
  br i1 %108, label %111, label %109, !prof !6

109:                                              ; preds = %105
  %110 = ptrtoint i8* %107 to i64
  br label %114

111:                                              ; preds = %105
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %112 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i64*
  %113 = load i64, i64* %112, align 1
  br label %114

114:                                              ; preds = %111, %109
  %115 = phi i64 [ %110, %109 ], [ %113, %111 ]
  %116 = tail call i64 @llvm.bswap.i64(i64 %115) #12
  %117 = inttoptr i64 %116 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %118 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %117, %"struct.base::internal::EncodedPartitionFreelistEntry"** %118, align 8
  %119 = xor i64 %116, -1
  %120 = getelementptr inbounds i8, i8* %1, i64 8
  %121 = bitcast i8* %120 to i64*
  store i64 %119, i64* %121, align 8
  store i8* %1, i8** %106, align 1
  %122 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 3
  %123 = load i16, i16* %122, align 1
  %124 = add i16 %123, -1
  store i16 %124, i16* %122, align 1
  %125 = icmp slt i16 %124, 1
  br i1 %125, label %126, label %130, !prof !6

126:                                              ; preds = %114
  %127 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %2) #12
  %128 = extractvalue { i8*, i64 } %127, 0
  %129 = extractvalue { i8*, i64 } %127, 1
  br label %130

130:                                              ; preds = %126, %114
  %131 = phi i8* [ %128, %126 ], [ null, %114 ]
  %132 = phi i64 [ %129, %126 ], [ 0, %114 ]
  store i8* %131, i8** %77, align 8
  store i64 %132, i64* %78, align 8
  %133 = atomicrmw xchg i32* %81, i32 0 release
  %134 = icmp eq i32 %133, 2
  br i1 %134, label %135, label %136, !prof !6

135:                                              ; preds = %130
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %80) #12
  br label %136

136:                                              ; preds = %135, %130
  %137 = load i8*, i8** %77, align 8
  %138 = icmp eq i8* %137, null
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %136
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %140

140:                                              ; preds = %139, %136
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #12
  br label %141

141:                                              ; preds = %69, %74, %140
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK4base13PartitionRootILb1EE30AdjustPointerForExtrasSubtractEPv(%"struct.base::PartitionRoot"*, i8*) local_unnamed_addr #3 comdat align 2 {
  ret i8* %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE22RawFreeWithThreadCacheEPvPNS_8internal16SlotSpanMetadataILb1EEE(%"struct.base::PartitionRoot"*, i8*, %"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 2, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %75, label %8, !prof !6

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 2
  %10 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %9, align 1
  %11 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  %12 = icmp ule %"struct.base::internal::PartitionBucket"* %11, %10
  %13 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 11
  %14 = icmp uge %"struct.base::internal::PartitionBucket"* %13, %10
  %15 = and i1 %14, %12
  %16 = ptrtoint %"struct.base::internal::PartitionBucket"* %10 to i64
  br i1 %15, label %17, label %75, !prof !3

17:                                               ; preds = %8
  %18 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %19 = tail call i8* @pthread_getspecific(i32 %18) #12
  %20 = bitcast i8* %19 to %"class.base::internal::ThreadCache"*
  %21 = icmp ugt i8* %19, inttoptr (i64 1 to i8*)
  br i1 %21, label %22, label %75, !prof !3

22:                                               ; preds = %17
  %23 = ptrtoint %"struct.base::internal::PartitionBucket"* %11 to i64
  %24 = sub i64 %16, %23
  %25 = sdiv exact i64 %24, 40
  %26 = getelementptr inbounds i8, i8* %19, i64 1480
  %27 = bitcast i8* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  %30 = load i16, i16* @_ZN4base8internal11ThreadCache28largest_active_bucket_index_E, align 2
  %31 = zext i16 %30 to i64
  %32 = icmp ugt i64 %25, %31
  br i1 %32, label %33, label %38, !prof !6

33:                                               ; preds = %22
  %34 = getelementptr inbounds i8, i8* %19, i64 1496
  %35 = bitcast i8* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  br label %75

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25
  %40 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = tail call i64 @llvm.bswap.i64(i64 %41) #12
  %43 = inttoptr i64 %42 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %44 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %43, %"struct.base::internal::EncodedPartitionFreelistEntry"** %44, align 8
  %45 = xor i64 %42, -1
  %46 = getelementptr inbounds i8, i8* %1, i64 8
  %47 = bitcast i8* %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"struct.base::internal::ThreadCache::Bucket"* %39 to i8**
  store i8* %1, i8** %48, align 8
  %49 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 1
  %50 = load i8, i8* %49, align 8
  %51 = add i8 %50, 1
  store i8 %51, i8* %49, align 8
  %52 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 3
  %53 = load i16, i16* %52, align 2
  %54 = zext i16 %53 to i64
  %55 = getelementptr inbounds i8, i8* %19, i64 1424
  %56 = bitcast i8* %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = add i64 %57, %54
  store i64 %58, i64* %56, align 8
  %59 = getelementptr inbounds i8, i8* %19, i64 1488
  %60 = bitcast i8* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  %63 = getelementptr inbounds %"class.base::internal::ThreadCache", %"class.base::internal::ThreadCache"* %20, i64 0, i32 0, i64 %25, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i8, i8* %63 monotonic, align 1
  %65 = icmp ugt i8 %51, %64
  br i1 %65, label %66, label %69, !prof !6

66:                                               ; preds = %38
  %67 = lshr i8 %64, 1
  %68 = zext i8 %67 to i64
  tail call void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"* %20, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16) %39, i64 %68) #12
  br label %69

69:                                               ; preds = %66, %38
  %70 = getelementptr inbounds i8, i8* %19, i64 1432
  %71 = load atomic i8, i8* %70 monotonic, align 1
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %141, label %74, !prof !3

74:                                               ; preds = %69
  tail call void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"* %20) #12
  br label %141

75:                                               ; preds = %17, %33, %3, %8
  %76 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #12
  %77 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %78 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 0, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %80 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %79, i64 0, i32 0
  %81 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %82

82:                                               ; preds = %94, %75
  %83 = phi i32 [ 0, %75 ], [ %95, %94 ]
  %84 = phi i32 [ 1, %75 ], [ %98, %94 ]
  %85 = load atomic i32, i32* %81 monotonic, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %90, !prof !2

87:                                               ; preds = %82
  %88 = cmpxchg weak i32* %81, i32 0, i32 1 acquire monotonic
  %89 = extractvalue { i32, i1 } %88, 1
  br i1 %89, label %105, label %90, !prof !3

90:                                               ; preds = %87, %82
  %91 = icmp sgt i32 %84, 0
  br i1 %91, label %100, label %94

92:                                               ; preds = %100
  %93 = add i32 %84, %83
  br label %94

94:                                               ; preds = %92, %90
  %95 = phi i32 [ %83, %90 ], [ %93, %92 ]
  %96 = shl i32 %84, 1
  %97 = icmp slt i32 %96, 64
  %98 = select i1 %97, i32 %96, i32 64
  %99 = icmp slt i32 %95, 1000
  br i1 %99, label %82, label %104

100:                                              ; preds = %90, %100
  %101 = phi i32 [ %102, %100 ], [ 0, %90 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %102 = add nuw nsw i32 %101, 1
  %103 = icmp eq i32 %102, %84
  br i1 %103, label %92, label %100

104:                                              ; preds = %94
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %80) #12
  br label %105

105:                                              ; preds = %87, %104
  %106 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i8**
  %107 = load i8*, i8** %106, align 1
  %108 = icmp eq i8* %107, %1
  br i1 %108, label %111, label %109, !prof !6

109:                                              ; preds = %105
  %110 = ptrtoint i8* %107 to i64
  br label %114

111:                                              ; preds = %105
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %112 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i64*
  %113 = load i64, i64* %112, align 1
  br label %114

114:                                              ; preds = %111, %109
  %115 = phi i64 [ %110, %109 ], [ %113, %111 ]
  %116 = tail call i64 @llvm.bswap.i64(i64 %115) #12
  %117 = inttoptr i64 %116 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %118 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %117, %"struct.base::internal::EncodedPartitionFreelistEntry"** %118, align 8
  %119 = xor i64 %116, -1
  %120 = getelementptr inbounds i8, i8* %1, i64 8
  %121 = bitcast i8* %120 to i64*
  store i64 %119, i64* %121, align 8
  store i8* %1, i8** %106, align 1
  %122 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 3
  %123 = load i16, i16* %122, align 1
  %124 = add i16 %123, -1
  store i16 %124, i16* %122, align 1
  %125 = icmp slt i16 %124, 1
  br i1 %125, label %126, label %130, !prof !6

126:                                              ; preds = %114
  %127 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %2) #12
  %128 = extractvalue { i8*, i64 } %127, 0
  %129 = extractvalue { i8*, i64 } %127, 1
  br label %130

130:                                              ; preds = %126, %114
  %131 = phi i8* [ %128, %126 ], [ null, %114 ]
  %132 = phi i64 [ %129, %126 ], [ 0, %114 ]
  store i8* %131, i8** %77, align 8
  store i64 %132, i64* %78, align 8
  %133 = atomicrmw xchg i32* %81, i32 0 release
  %134 = icmp eq i32 %133, 2
  br i1 %134, label %135, label %136, !prof !6

135:                                              ; preds = %130
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %80) #12
  br label %136

136:                                              ; preds = %135, %130
  %137 = load i8*, i8** %77, align 8
  %138 = icmp eq i8* %137, null
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %136
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %140

140:                                              ; preds = %136, %139
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #12
  br label %141

141:                                              ; preds = %74, %69, %140
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb1EE13GetUsableSizeEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -2097152
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to i8*
  %6 = lshr i64 %2, 9
  %7 = and i64 %6, 4064
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = bitcast i8* %8 to %"struct.base::internal::PartitionPage"*
  %10 = getelementptr inbounds i8, i8* %8, i64 30
  %11 = load i8, i8* %10, align 2
  %12 = zext i8 %11 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %9, i64 %13, i32 0, i32 1, i64 21
  %15 = load i8, i8* %14, align 1, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %24, !prof !3

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %9, i64 %13, i32 0, i32 1, i64 8
  %19 = bitcast i8* %18 to %"struct.base::internal::PartitionBucket"**
  %20 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %19, align 1
  %21 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  br label %29

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %9, i64 %13, i32 0
  %26 = bitcast %union.anon* %25 to %"struct.base::internal::PartitionPage"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %26, i64 1, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 1
  br label %29

29:                                               ; preds = %17, %24
  %30 = phi i64 [ %23, %17 ], [ %28, %24 ]
  ret i64 %30
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE25AllocationCapacityFromPtrEPv(%"struct.base::PartitionRoot"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = and i64 %3, -2097152
  %5 = or i64 %4, 4096
  %6 = inttoptr i64 %5 to i8*
  %7 = lshr i64 %3, 9
  %8 = and i64 %7, 4064
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = bitcast i8* %9 to %"struct.base::internal::PartitionPage"*
  %11 = getelementptr inbounds i8, i8* %9, i64 30
  %12 = load i8, i8* %11, align 2
  %13 = zext i8 %12 to i64
  %14 = sub nsw i64 0, %13
  %15 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %10, i64 %14, i32 0, i32 1, i64 8
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionBucket"**
  %17 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %16, align 1
  %18 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  ret i64 %20
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE35AllocationCapacityFromRequestedSizeEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = tail call i64 @llvm.ctlz.i64(i64 %1, i1 false) #12, !range !9
  %4 = sub nuw nsw i64 64, %3
  %5 = and i64 %4, 255
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = lshr i64 %1, %8
  %10 = and i64 %9, 7
  %11 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %5
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, %1
  %14 = shl nuw nsw i64 %5, 3
  %15 = or i64 %10, %14
  %16 = icmp ne i64 %13, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %15, %17
  %19 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %21, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26, !prof !6

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %21, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  br label %35

30:                                               ; preds = %2
  %31 = icmp ugt i64 %1, 2145386496
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = add nuw nsw i64 %1, 4095
  %34 = and i64 %33, -4096
  br label %35

35:                                               ; preds = %32, %30, %26
  %36 = phi i64 [ %29, %26 ], [ %1, %30 ], [ %34, %32 ]
  ret i64 %36
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden dereferenceable(40) %"struct.base::internal::PartitionBucket"* @_ZNK4base13PartitionRootILb1EE9bucket_atEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %1
  ret %"struct.base::internal::PartitionBucket"* %3
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb1EE20GetDirectMapSlotSizeEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = add i64 %0, 4095
  %3 = and i64 %2, -4096
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE11PurgeMemoryEi(%"struct.base::PartitionRoot"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %4 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %3, i64 0, i32 0
  %5 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %6

6:                                                ; preds = %18, %2
  %7 = phi i32 [ 0, %2 ], [ %19, %18 ]
  %8 = phi i32 [ 1, %2 ], [ %22, %18 ]
  %9 = load atomic i32, i32* %5 monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %14, !prof !2

11:                                               ; preds = %6
  %12 = cmpxchg weak i32* %5, i32 0, i32 1 acquire monotonic
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %29, label %14, !prof !3

14:                                               ; preds = %11, %6
  %15 = icmp sgt i32 %8, 0
  br i1 %15, label %24, label %18

16:                                               ; preds = %24
  %17 = add i32 %8, %7
  br label %18

18:                                               ; preds = %16, %14
  %19 = phi i32 [ %7, %14 ], [ %17, %16 ]
  %20 = shl i32 %8, 1
  %21 = icmp slt i32 %20, 64
  %22 = select i1 %21, i32 %20, i32 64
  %23 = icmp slt i32 %19, 1000
  br i1 %23, label %6, label %28

24:                                               ; preds = %14, %24
  %25 = phi i32 [ %26, %24 ], [ 0, %14 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %26 = add nuw nsw i32 %25, 1
  %27 = icmp eq i32 %26, %8
  br i1 %27, label %16, label %24

28:                                               ; preds = %18
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %4) #12
  br label %29

29:                                               ; preds = %11, %28
  %30 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %64

32:                                               ; preds = %29
  %33 = and i32 %1, 1
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %32
  tail call void @_ZN4base13PartitionRootILb1EE22DecommitEmptySlotSpansEv(%"struct.base::PartitionRoot"* %0)
  br label %36

36:                                               ; preds = %32, %35
  %37 = and i32 %1, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %64, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 0
  %41 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 128
  br label %42

42:                                               ; preds = %39, %61
  %43 = phi %"struct.base::internal::PartitionBucket"* [ %40, %39 ], [ %62, %61 ]
  %44 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %43, i64 0, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = icmp ult i32 %45, 4096
  br i1 %46, label %61, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %43, i64 0, i32 0
  %49 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %48, align 8
  %50 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #12
  %51 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %49, %50
  br i1 %51, label %61, label %52

52:                                               ; preds = %47
  %53 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %48, align 1
  %54 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %53, null
  br i1 %54, label %61, label %55

55:                                               ; preds = %52, %55
  %56 = phi %"struct.base::internal::SlotSpanMetadata"* [ %59, %55 ], [ %53, %52 ]
  %57 = tail call fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb1EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata"* nonnull %56, i1 zeroext true) #12
  %58 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %56, i64 0, i32 1
  %59 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %58, align 1
  %60 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %59, null
  br i1 %60, label %61, label %55

61:                                               ; preds = %55, %52, %47, %42
  %62 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %43, i64 1
  %63 = icmp eq %"struct.base::internal::PartitionBucket"* %62, %41
  br i1 %63, label %64, label %42

64:                                               ; preds = %61, %29, %36
  %65 = atomicrmw xchg i32* %5, i32 0 release
  %66 = icmp eq i32 %65, 2
  br i1 %66, label %67, label %68, !prof !6

67:                                               ; preds = %64
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %4) #12
  br label %68

68:                                               ; preds = %64, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE22DecommitEmptySlotSpansEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 0
  %3 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %2, align 8
  %4 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %3, %"struct.base::PartitionRoot"* %0) #12
  br label %6

6:                                                ; preds = %1, %5
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %2, align 8
  %7 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 1
  %8 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %7, align 8
  %9 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %8, %"struct.base::PartitionRoot"* %0) #12
  br label %11

11:                                               ; preds = %10, %6
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %7, align 8
  %12 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 2
  %13 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %12, align 8
  %14 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %13, %"struct.base::PartitionRoot"* %0) #12
  br label %16

16:                                               ; preds = %15, %11
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %12, align 8
  %17 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 3
  %18 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %17, align 8
  %19 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %18, %"struct.base::PartitionRoot"* %0) #12
  br label %21

21:                                               ; preds = %20, %16
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %17, align 8
  %22 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 4
  %23 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %22, align 8
  %24 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %23, %"struct.base::PartitionRoot"* %0) #12
  br label %26

26:                                               ; preds = %25, %21
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %22, align 8
  %27 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 5
  %28 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %27, align 8
  %29 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %28, %"struct.base::PartitionRoot"* %0) #12
  br label %31

31:                                               ; preds = %30, %26
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %27, align 8
  %32 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 6
  %33 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %32, align 8
  %34 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %33, %"struct.base::PartitionRoot"* %0) #12
  br label %36

36:                                               ; preds = %35, %31
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %32, align 8
  %37 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 7
  %38 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %37, align 8
  %39 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %38, %"struct.base::PartitionRoot"* %0) #12
  br label %41

41:                                               ; preds = %40, %36
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %37, align 8
  %42 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 8
  %43 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %42, align 8
  %44 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %43, %"struct.base::PartitionRoot"* %0) #12
  br label %46

46:                                               ; preds = %45, %41
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %42, align 8
  %47 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 9
  %48 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %47, align 8
  %49 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %48, %"struct.base::PartitionRoot"* %0) #12
  br label %51

51:                                               ; preds = %50, %46
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %47, align 8
  %52 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 10
  %53 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %52, align 8
  %54 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %53, %"struct.base::PartitionRoot"* %0) #12
  br label %56

56:                                               ; preds = %55, %51
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %52, align 8
  %57 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 11
  %58 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %57, align 8
  %59 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %58, %"struct.base::PartitionRoot"* %0) #12
  br label %61

61:                                               ; preds = %60, %56
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %57, align 8
  %62 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 12
  %63 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %62, align 8
  %64 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %63, %"struct.base::PartitionRoot"* %0) #12
  br label %66

66:                                               ; preds = %65, %61
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %62, align 8
  %67 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 13
  %68 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %67, align 8
  %69 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %68, %"struct.base::PartitionRoot"* %0) #12
  br label %71

71:                                               ; preds = %70, %66
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %67, align 8
  %72 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 14
  %73 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %72, align 8
  %74 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %73, %"struct.base::PartitionRoot"* %0) #12
  br label %76

76:                                               ; preds = %75, %71
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %72, align 8
  %77 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 23, i64 15
  %78 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %77, align 8
  %79 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"* nonnull %78, %"struct.base::PartitionRoot"* %0) #12
  br label %81

81:                                               ; preds = %80, %76
  store %"struct.base::internal::SlotSpanMetadata"* null, %"struct.base::internal::SlotSpanMetadata"** %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE9DumpStatsEPKcbPNS_20PartitionStatsDumperE(%"struct.base::PartitionRoot"*, i8*, i1 zeroext, %"class.base::PartitionStatsDumper"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [128 x %"struct.base::PartitionBucketMemoryStats"], align 16
  %6 = alloca %"struct.base::PartitionMemoryStats", align 8
  %7 = alloca %"struct.base::PartitionBucketMemoryStats", align 4
  br i1 %2, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znam(i64 16384) #15
  %10 = bitcast i8* %9 to i32*
  br label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ null, %4 ], [ %9, %8 ]
  %13 = phi i32* [ null, %4 ], [ %10, %8 ]
  %14 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 5632, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 5632, i1 false)
  %15 = bitcast %"struct.base::PartitionMemoryStats"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4360, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 4360, i1 false)
  %16 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %17 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %16, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %19

19:                                               ; preds = %31, %11
  %20 = phi i32 [ 0, %11 ], [ %32, %31 ]
  %21 = phi i32 [ 1, %11 ], [ %35, %31 ]
  %22 = load atomic i32, i32* %18 monotonic, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27, !prof !2

24:                                               ; preds = %19
  %25 = cmpxchg weak i32* %18, i32 0, i32 1 acquire monotonic
  %26 = extractvalue { i32, i1 } %25, 1
  br i1 %26, label %42, label %27, !prof !3

27:                                               ; preds = %24, %19
  %28 = icmp sgt i32 %21, 0
  br i1 %28, label %37, label %31

29:                                               ; preds = %37
  %30 = add i32 %21, %20
  br label %31

31:                                               ; preds = %29, %27
  %32 = phi i32 [ %20, %27 ], [ %30, %29 ]
  %33 = shl i32 %21, 1
  %34 = icmp slt i32 %33, 64
  %35 = select i1 %34, i32 %33, i32 64
  %36 = icmp slt i32 %32, 1000
  br i1 %36, label %19, label %41

37:                                               ; preds = %27, %37
  %38 = phi i32 [ %39, %37 ], [ 0, %27 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %39 = add nuw nsw i32 %38, 1
  %40 = icmp eq i32 %39, %21
  br i1 %40, label %29, label %37

41:                                               ; preds = %31
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %17) #12
  br label %42

42:                                               ; preds = %24, %41
  %43 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i64, i64* %43 monotonic, align 8
  %45 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i64, i64* %45 monotonic, align 8
  %47 = add i64 %46, %44
  %48 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 0
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i64, i64* %49 monotonic, align 8
  %51 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 1
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 2
  %53 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 4
  %54 = bitcast i64* %52 to <2 x i64>*
  %55 = bitcast i64* %52 to <2 x i64>*
  %56 = bitcast i64* %53 to <2 x i64>*
  %57 = bitcast i64* %53 to <2 x i64>*
  br label %62

58:                                               ; preds = %150
  %59 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 22
  %60 = load %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionDirectMapExtent"** %59, align 8
  %61 = icmp eq %"struct.base::internal::PartitionDirectMapExtent"* %60, null
  br i1 %61, label %153, label %166

62:                                               ; preds = %150, %42
  %63 = phi i64 [ 0, %42 ], [ %151, %150 ]
  %64 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 0
  %65 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %64, align 8
  %66 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %65, null
  %67 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63
  %68 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %67, i64 0, i32 0
  store i8 0, i8* %68, align 4
  br i1 %66, label %150, label %69

69:                                               ; preds = %62
  %70 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #12
  %71 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %65, %70
  %72 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 1
  br i1 %71, label %75, label %73

73:                                               ; preds = %69
  %74 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %72, align 1
  br label %86

75:                                               ; preds = %69
  %76 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %72, align 8
  %77 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %76, null
  br i1 %77, label %78, label %86

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 2
  %80 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %79, align 8
  %81 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %80, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 4
  %84 = load i32, i32* %83, align 4
  %85 = icmp ugt i32 %84, 255
  br i1 %85, label %86, label %133

86:                                               ; preds = %73, %82, %78, %75
  %87 = phi %"struct.base::internal::SlotSpanMetadata"* [ %74, %73 ], [ null, %82 ], [ null, %78 ], [ %76, %75 ]
  call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 44, i1 false) #12
  store i8 1, i8* %68, align 4
  %88 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 1
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 4
  %90 = load i32, i32* %89, align 4
  %91 = lshr i32 %90, 8
  %92 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 8
  store i32 %91, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 2
  store i32 %94, i32* %95, align 4
  %96 = shl i32 %90, 12
  %97 = and i32 %96, 1044480
  %98 = udiv i32 %97, %94
  %99 = and i32 %98, 65535
  %100 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 3
  store i32 %97, i32* %100, align 4
  %101 = mul i32 %94, %91
  %102 = mul i32 %101, %99
  %103 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 4
  store i32 %102, i32* %103, align 4
  %104 = mul i32 %97, %91
  %105 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 5
  store i32 %104, i32* %105, align 4
  %106 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %87, null
  br i1 %106, label %107, label %111

107:                                              ; preds = %111, %86
  %108 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 10, i64 %63, i32 2
  %109 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %108, align 1
  %110 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %109, null
  br i1 %110, label %116, label %123

111:                                              ; preds = %86, %111
  %112 = phi %"struct.base::internal::SlotSpanMetadata"* [ %114, %111 ], [ %87, %86 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb1EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %67, %"struct.base::internal::SlotSpanMetadata"* nonnull %112) #12
  %113 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %112, i64 0, i32 1
  %114 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %113, align 1
  %115 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %114, null
  br i1 %115, label %107, label %111

116:                                              ; preds = %123, %107
  %117 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %64, align 8
  %118 = tail call %"struct.base::internal::SlotSpanMetadata"* @_ZN4base8internal16SlotSpanMetadataILb1EE22get_sentinel_slot_spanEv() #12
  %119 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %117, %118
  br i1 %119, label %133, label %120

120:                                              ; preds = %116
  %121 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %64, align 1
  %122 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %121, null
  br i1 %122, label %133, label %128

123:                                              ; preds = %107, %123
  %124 = phi %"struct.base::internal::SlotSpanMetadata"* [ %126, %123 ], [ %109, %107 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb1EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %67, %"struct.base::internal::SlotSpanMetadata"* nonnull %124) #12
  %125 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %124, i64 0, i32 1
  %126 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %125, align 1
  %127 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %126, null
  br i1 %127, label %116, label %123

128:                                              ; preds = %120, %128
  %129 = phi %"struct.base::internal::SlotSpanMetadata"* [ %131, %128 ], [ %121, %120 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb1EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %67, %"struct.base::internal::SlotSpanMetadata"* nonnull %129) #12
  %130 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %129, i64 0, i32 1
  %131 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %130, align 1
  %132 = icmp eq %"struct.base::internal::SlotSpanMetadata"* %131, null
  br i1 %132, label %133, label %128

133:                                              ; preds = %128, %120, %116, %82
  %134 = load i8, i8* %68, align 4
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %150, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 4
  %138 = bitcast i32* %137 to <2 x i32>*
  %139 = load <2 x i32>, <2 x i32>* %138, align 4
  %140 = shufflevector <2 x i32> %139, <2 x i32> undef, <2 x i32> <i32 1, i32 0>
  %141 = zext <2 x i32> %140 to <2 x i64>
  %142 = load <2 x i64>, <2 x i64>* %54, align 8
  %143 = add <2 x i64> %142, %141
  store <2 x i64> %143, <2 x i64>* %55, align 8
  %144 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %63, i32 6
  %145 = bitcast i32* %144 to <2 x i32>*
  %146 = load <2 x i32>, <2 x i32>* %145, align 4
  %147 = zext <2 x i32> %146 to <2 x i64>
  %148 = load <2 x i64>, <2 x i64>* %56, align 8
  %149 = add <2 x i64> %148, %147
  store <2 x i64> %149, <2 x i64>* %57, align 8
  br label %150

150:                                              ; preds = %62, %133, %136
  %151 = add nuw nsw i64 %63, 1
  %152 = icmp eq i64 %151, 128
  br i1 %152, label %58, label %62

153:                                              ; preds = %178, %58
  %154 = phi i64 [ 0, %58 ], [ %175, %178 ]
  %155 = phi i64 [ 0, %58 ], [ %180, %178 ]
  %156 = bitcast i64* %52 to <2 x i64>*
  %157 = load <2 x i64>, <2 x i64>* %156, align 8
  %158 = insertelement <2 x i64> undef, i64 %154, i32 0
  %159 = shufflevector <2 x i64> %158, <2 x i64> undef, <2 x i32> zeroinitializer
  %160 = add <2 x i64> %157, %159
  %161 = bitcast i64* %52 to <2 x i64>*
  store <2 x i64> %160, <2 x i64>* %161, align 8
  %162 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %163 = load i8, i8* %162, align 2, !range !5
  %164 = icmp eq i8 %163, 0
  %165 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 6
  store i8 %163, i8* %165, align 8
  br i1 %164, label %190, label %185

166:                                              ; preds = %58, %178
  %167 = phi %"struct.base::internal::PartitionDirectMapExtent"* [ %181, %178 ], [ %60, %58 ]
  %168 = phi i64 [ %180, %178 ], [ 0, %58 ]
  %169 = phi i64 [ %175, %178 ], [ 0, %58 ]
  %170 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent", %"struct.base::internal::PartitionDirectMapExtent"* %167, i64 0, i32 2
  %171 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %170, align 8
  %172 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %171, i64 0, i32 3
  %173 = load i32, i32* %172, align 8
  %174 = zext i32 %173 to i64
  %175 = add i64 %169, %174
  br i1 %2, label %178, label %176

176:                                              ; preds = %166
  %177 = getelementptr inbounds i32, i32* %13, i64 %168
  store i32 %173, i32* %177, align 4
  br label %178

178:                                              ; preds = %166, %176
  %179 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent", %"struct.base::internal::PartitionDirectMapExtent"* %167, i64 0, i32 0
  %180 = add nuw nsw i64 %168, 1
  %181 = load %"struct.base::internal::PartitionDirectMapExtent"*, %"struct.base::internal::PartitionDirectMapExtent"** %179, align 8
  %182 = icmp ne %"struct.base::internal::PartitionDirectMapExtent"* %181, null
  %183 = icmp ult i64 %180, 4096
  %184 = and i1 %183, %182
  br i1 %184, label %166, label %153

185:                                              ; preds = %153
  %186 = tail call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %187 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 7
  call void @_ZN4base8internal19ThreadCacheRegistry9DumpStatsEbPNS_16ThreadCacheStatsE(%"class.base::internal::ThreadCacheRegistry"* %186, i1 zeroext true, %"struct.base::ThreadCacheStats"* %187) #12
  %188 = call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %189 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 8
  call void @_ZN4base8internal19ThreadCacheRegistry9DumpStatsEbPNS_16ThreadCacheStatsE(%"class.base::internal::ThreadCacheRegistry"* %188, i1 zeroext false, %"struct.base::ThreadCacheStats"* %189) #12
  br label %190

190:                                              ; preds = %153, %185
  %191 = atomicrmw xchg i32* %18, i32 0 release
  %192 = icmp eq i32 %191, 2
  br i1 %192, label %193, label %194, !prof !6

193:                                              ; preds = %190
  call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %17) #12
  br label %194

194:                                              ; preds = %190, %193
  br i1 %2, label %230, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 0
  %197 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 128
  %198 = bitcast %"class.base::PartitionStatsDumper"* %3 to void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)***
  br label %207

199:                                              ; preds = %216
  %200 = icmp eq i64 %155, 0
  br i1 %200, label %230, label %201

201:                                              ; preds = %199
  %202 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 0
  %203 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 1
  %204 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 8
  %205 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 2
  %206 = bitcast i32* %205 to <4 x i32>*
  br label %219

207:                                              ; preds = %195, %216
  %208 = phi %"struct.base::PartitionBucketMemoryStats"* [ %196, %195 ], [ %217, %216 ]
  %209 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %208, i64 0, i32 0
  %210 = load i8, i8* %209, align 4, !range !5
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %216, label %212

212:                                              ; preds = %207
  %213 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*** %198, align 8
  %214 = getelementptr inbounds void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %213, i64 1
  %215 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %214, align 8
  call void %215(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionBucketMemoryStats"* %208) #12
  br label %216

216:                                              ; preds = %207, %212
  %217 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %208, i64 1
  %218 = icmp eq %"struct.base::PartitionBucketMemoryStats"* %217, %197
  br i1 %218, label %199, label %207

219:                                              ; preds = %219, %201
  %220 = phi i64 [ 0, %201 ], [ %228, %219 ]
  %221 = getelementptr inbounds i32, i32* %13, i64 %220
  %222 = load i32, i32* %221, align 4
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %202) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %202, i8 0, i64 44, i1 false)
  store i8 1, i8* %202, align 4
  store i8 1, i8* %203, align 1
  store i32 1, i32* %204, align 4
  %223 = insertelement <4 x i32> undef, i32 %222, i32 0
  %224 = shufflevector <4 x i32> %223, <4 x i32> undef, <4 x i32> zeroinitializer
  store <4 x i32> %224, <4 x i32>* %206, align 4
  %225 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*** %198, align 8
  %226 = getelementptr inbounds void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %225, i64 1
  %227 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %226, align 8
  call void %227(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionBucketMemoryStats"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %202) #12
  %228 = add nuw nsw i64 %220, 1
  %229 = icmp eq i64 %228, %155
  br i1 %229, label %230, label %219

230:                                              ; preds = %219, %199, %194
  %231 = bitcast %"class.base::PartitionStatsDumper"* %3 to void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)***
  %232 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)*** %231, align 8
  %233 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)** %232, align 8
  call void %233(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionMemoryStats"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4360, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 5632, i8* nonnull %14) #12
  %234 = icmp eq i32* %13, null
  br i1 %234, label %236, label %235

235:                                              ; preds = %230
  call void @_ZdaPv(i8* %12) #15
  br label %236

236:                                              ; preds = %230, %235
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

declare dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() local_unnamed_addr #2

declare void @_ZN4base8internal19ThreadCacheRegistry9DumpStatsEbPNS_16ThreadCacheStatsE(%"class.base::internal::ThreadCacheRegistry"*, i1 zeroext, %"struct.base::ThreadCacheStats"*) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE7RawFreeEPv(%"struct.base::PartitionRoot"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, -2097152
  %6 = or i64 %5, 4096
  %7 = inttoptr i64 %6 to i8*
  %8 = lshr i64 %4, 9
  %9 = and i64 %8, 4064
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = bitcast i8* %10 to %"struct.base::internal::PartitionPage"*
  %12 = getelementptr inbounds i8, i8* %10, i64 30
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %11, i64 %15, i32 0
  %17 = bitcast %union.anon* %16 to %"struct.base::internal::SlotSpanMetadata"*
  %18 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #12
  %21 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %22 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %21, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %24

24:                                               ; preds = %36, %2
  %25 = phi i32 [ 0, %2 ], [ %37, %36 ]
  %26 = phi i32 [ 1, %2 ], [ %40, %36 ]
  %27 = load atomic i32, i32* %23 monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32, !prof !2

29:                                               ; preds = %24
  %30 = cmpxchg weak i32* %23, i32 0, i32 1 acquire monotonic
  %31 = extractvalue { i32, i1 } %30, 1
  br i1 %31, label %47, label %32, !prof !3

32:                                               ; preds = %29, %24
  %33 = icmp sgt i32 %26, 0
  br i1 %33, label %42, label %36

34:                                               ; preds = %42
  %35 = add i32 %26, %25
  br label %36

36:                                               ; preds = %34, %32
  %37 = phi i32 [ %25, %32 ], [ %35, %34 ]
  %38 = shl i32 %26, 1
  %39 = icmp slt i32 %38, 64
  %40 = select i1 %39, i32 %38, i32 64
  %41 = icmp slt i32 %37, 1000
  br i1 %41, label %24, label %46

42:                                               ; preds = %32, %42
  %43 = phi i32 [ %44, %42 ], [ 0, %32 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %44 = add nuw nsw i32 %43, 1
  %45 = icmp eq i32 %44, %26
  br i1 %45, label %34, label %42

46:                                               ; preds = %36
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %22) #12
  br label %47

47:                                               ; preds = %29, %46
  %48 = bitcast %union.anon* %16 to i8**
  %49 = load i8*, i8** %48, align 1
  %50 = icmp eq i8* %49, %1
  br i1 %50, label %53, label %51, !prof !6

51:                                               ; preds = %47
  %52 = ptrtoint i8* %49 to i64
  br label %56

53:                                               ; preds = %47
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %54 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0, i32 0
  %55 = load i64, i64* %54, align 1
  br label %56

56:                                               ; preds = %53, %51
  %57 = phi i64 [ %52, %51 ], [ %55, %53 ]
  %58 = tail call i64 @llvm.bswap.i64(i64 %57) #12
  %59 = inttoptr i64 %58 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %60 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %59, %"struct.base::internal::EncodedPartitionFreelistEntry"** %60, align 8
  %61 = xor i64 %58, -1
  %62 = getelementptr inbounds i8, i8* %1, i64 8
  %63 = bitcast i8* %62 to i64*
  store i64 %61, i64* %63, align 8
  store i8* %1, i8** %48, align 1
  %64 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %11, i64 %15, i32 0, i32 1, i64 16
  %65 = bitcast i8* %64 to i16*
  %66 = load i16, i16* %65, align 1
  %67 = add i16 %66, -1
  store i16 %67, i16* %65, align 1
  %68 = icmp slt i16 %67, 1
  br i1 %68, label %69, label %73, !prof !6

69:                                               ; preds = %56
  %70 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %17) #12
  %71 = extractvalue { i8*, i64 } %70, 0
  %72 = extractvalue { i8*, i64 } %70, 1
  br label %73

73:                                               ; preds = %69, %56
  %74 = phi i8* [ %71, %69 ], [ null, %56 ]
  %75 = phi i64 [ %72, %69 ], [ 0, %56 ]
  store i8* %74, i8** %19, align 8
  store i64 %75, i64* %20, align 8
  %76 = atomicrmw xchg i32* %23, i32 0 release
  %77 = icmp eq i32 %76, 2
  br i1 %77, label %78, label %79, !prof !6

78:                                               ; preds = %73
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %22) #12
  br label %79

79:                                               ; preds = %78, %73
  %80 = load i8*, i8** %19, align 8
  %81 = icmp eq i8* %80, null
  br i1 %81, label %83, label %82, !prof !3

82:                                               ; preds = %79
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %3) #12
  br label %83

83:                                               ; preds = %79, %82
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE7RawFreeEPvPNS_8internal16SlotSpanMetadataILb1EEE(%"struct.base::PartitionRoot"*, i8*, %"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  %8 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 8
  %9 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %11

11:                                               ; preds = %23, %3
  %12 = phi i32 [ 0, %3 ], [ %24, %23 ]
  %13 = phi i32 [ 1, %3 ], [ %27, %23 ]
  %14 = load atomic i32, i32* %10 monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19, !prof !2

16:                                               ; preds = %11
  %17 = cmpxchg weak i32* %10, i32 0, i32 1 acquire monotonic
  %18 = extractvalue { i32, i1 } %17, 1
  br i1 %18, label %34, label %19, !prof !3

19:                                               ; preds = %16, %11
  %20 = icmp sgt i32 %13, 0
  br i1 %20, label %29, label %23

21:                                               ; preds = %29
  %22 = add i32 %13, %12
  br label %23

23:                                               ; preds = %21, %19
  %24 = phi i32 [ %12, %19 ], [ %22, %21 ]
  %25 = shl i32 %13, 1
  %26 = icmp slt i32 %25, 64
  %27 = select i1 %26, i32 %25, i32 64
  %28 = icmp slt i32 %24, 1000
  br i1 %28, label %11, label %33

29:                                               ; preds = %19, %29
  %30 = phi i32 [ %31, %29 ], [ 0, %19 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %31 = add nuw nsw i32 %30, 1
  %32 = icmp eq i32 %31, %13
  br i1 %32, label %21, label %29

33:                                               ; preds = %23
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %9) #12
  br label %34

34:                                               ; preds = %16, %33
  %35 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i8**
  %36 = load i8*, i8** %35, align 1
  %37 = icmp eq i8* %36, %1
  br i1 %37, label %40, label %38, !prof !6

38:                                               ; preds = %34
  %39 = ptrtoint i8* %36 to i64
  br label %43

40:                                               ; preds = %34
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %41 = bitcast %"struct.base::internal::SlotSpanMetadata"* %2 to i64*
  %42 = load i64, i64* %41, align 1
  br label %43

43:                                               ; preds = %40, %38
  %44 = phi i64 [ %39, %38 ], [ %42, %40 ]
  %45 = tail call i64 @llvm.bswap.i64(i64 %44) #12
  %46 = inttoptr i64 %45 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %47 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %46, %"struct.base::internal::EncodedPartitionFreelistEntry"** %47, align 8
  %48 = xor i64 %45, -1
  %49 = getelementptr inbounds i8, i8* %1, i64 8
  %50 = bitcast i8* %49 to i64*
  store i64 %48, i64* %50, align 8
  store i8* %1, i8** %35, align 1
  %51 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %2, i64 0, i32 3
  %52 = load i16, i16* %51, align 1
  %53 = add i16 %52, -1
  store i16 %53, i16* %51, align 1
  %54 = icmp slt i16 %53, 1
  br i1 %54, label %55, label %59, !prof !6

55:                                               ; preds = %43
  %56 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %2) #12
  %57 = extractvalue { i8*, i64 } %56, 0
  %58 = extractvalue { i8*, i64 } %56, 1
  br label %59

59:                                               ; preds = %43, %55
  %60 = phi i8* [ %57, %55 ], [ null, %43 ]
  %61 = phi i64 [ %58, %55 ], [ 0, %43 ]
  store i8* %60, i8** %6, align 8
  store i64 %61, i64* %7, align 8
  %62 = atomicrmw xchg i32* %10, i32 0 release
  %63 = icmp eq i32 %62, 2
  br i1 %63, label %64, label %65, !prof !6

64:                                               ; preds = %59
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %9) #12
  br label %65

65:                                               ; preds = %59, %64
  %66 = load i8*, i8** %6, align 8
  %67 = icmp eq i8* %66, null
  br i1 %67, label %69, label %68, !prof !3

68:                                               ; preds = %65
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %69

69:                                               ; preds = %65, %68
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.base::internal::ThreadCache"* @_ZNK4base13PartitionRootILb1EE24thread_cache_for_testingEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %7 = tail call i8* @pthread_getspecific(i32 %6) #12
  %8 = bitcast i8* %7 to %"class.base::internal::ThreadCache"*
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.base::internal::ThreadCache"* [ %8, %5 ], [ null, %1 ]
  ret %"class.base::internal::ThreadCache"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE33get_total_size_of_committed_pagesEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb1EE10UseBRPPoolEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb1EE19IsQuarantineAllowedEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb1EE13IsScanEnabledEv(%"struct.base::PartitionRoot"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb1EE37GetDirectMapMetadataAndGuardPagesSizeEv() local_unnamed_addr #3 comdat align 2 {
  ret i64 20480
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb1EE24GetDirectMapReservedSizeEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = add i64 %0, 2117631
  %3 = and i64 %2, -2097152
  ret i64 %3
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb1EE19AdjustSize0IfNeededEm(%"struct.base::PartitionRoot"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb1EE15AllocFromBucketEPNS_8internal15PartitionBucketILb1EEEimmPmPb(%"struct.base::PartitionRoot"*, %"struct.base::internal::PartitionBucket"*, i32, i64, i64, i64*, i8*) local_unnamed_addr #3 comdat align 2 {
  %8 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1, i64 0, i32 0
  %9 = load %"struct.base::internal::SlotSpanMetadata"*, %"struct.base::internal::SlotSpanMetadata"** %8, align 8
  %10 = bitcast %"struct.base::internal::SlotSpanMetadata"* %9 to i8**
  %11 = load i8*, i8** %10, align 1
  %12 = icmp ult i64 %4, 16385
  %13 = icmp ne i8* %11, null
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %42, !prof !3

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %9, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %17 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %5, align 8
  %20 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %21 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 0
  %22 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %21, align 8
  %23 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %22, null
  %24 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %22 to i64
  br i1 %23, label %25, label %27

25:                                               ; preds = %15
  %26 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  br label %36

27:                                               ; preds = %15
  %28 = xor i64 %24, -1
  %29 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %28
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %27
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

33:                                               ; preds = %27
  %34 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  %35 = inttoptr i64 %34 to i8*
  tail call void @llvm.prefetch(i8* nonnull %35, i32 0, i32 3, i32 1) #12
  br label %36

36:                                               ; preds = %25, %33
  %37 = phi i64 [ %26, %25 ], [ %34, %33 ]
  %38 = inttoptr i64 %37 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %38, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %39 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %9, i64 0, i32 3
  %40 = load i16, i16* %39, align 1
  %41 = add i16 %40, 1
  store i16 %41, i16* %39, align 1
  br label %75

42:                                               ; preds = %7
  %43 = tail call i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"* %1, %"struct.base::PartitionRoot"* %0, i32 %2, i64 %3, i64 %4, i8* %6) #12
  %44 = icmp eq i8* %43, null
  br i1 %44, label %75, label %45, !prof !6

45:                                               ; preds = %42
  %46 = ptrtoint i8* %43 to i64
  %47 = and i64 %46, -2097152
  %48 = or i64 %47, 4096
  %49 = inttoptr i64 %48 to i8*
  %50 = lshr i64 %46, 9
  %51 = and i64 %50, 4064
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = bitcast i8* %52 to %"struct.base::internal::PartitionPage"*
  %54 = getelementptr inbounds i8, i8* %52, i64 30
  %55 = load i8, i8* %54, align 2
  %56 = zext i8 %55 to i64
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %53, i64 %57, i32 0, i32 1, i64 21
  %59 = load i8, i8* %58, align 1, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %68, !prof !3

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %53, i64 %57, i32 0, i32 1, i64 8
  %63 = bitcast i8* %62 to %"struct.base::internal::PartitionBucket"**
  %64 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %63, align 1
  %65 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  br label %73

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %53, i64 %57, i32 0
  %70 = bitcast %union.anon* %69 to %"struct.base::internal::PartitionPage"*
  %71 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %70, i64 1, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 1
  br label %73

73:                                               ; preds = %61, %68
  %74 = phi i64 [ %67, %61 ], [ %72, %68 ]
  store i64 %74, i64* %5, align 8
  br label %75

75:                                               ; preds = %36, %73, %42
  %76 = phi i8* [ null, %42 ], [ %11, %36 ], [ %43, %73 ]
  ret i8* %76
}

declare i8* @_ZN4base8internal15PartitionBucketILb1EE13SlowPathAllocEPNS_13PartitionRootILb1EEEimmPb(%"struct.base::internal::PartitionBucket"*, %"struct.base::PartitionRoot"*, i32, i64, i64, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal16SlotSpanMetadataILb1EE18DecommitIfPossibleEPNS_13PartitionRootILb1EEE(%"struct.base::internal::SlotSpanMetadata"*, %"struct.base::PartitionRoot"*) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb1EE13RawFreeLockedEPv(%"struct.base::PartitionRoot"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, -2097152
  %6 = or i64 %5, 4096
  %7 = inttoptr i64 %6 to i8*
  %8 = lshr i64 %4, 9
  %9 = and i64 %8, 4064
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = bitcast i8* %10 to %"struct.base::internal::PartitionPage"*
  %12 = getelementptr inbounds i8, i8* %10, i64 30
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %11, i64 %15, i32 0
  %17 = bitcast %union.anon* %16 to %"struct.base::internal::SlotSpanMetadata"*
  %18 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 1
  %21 = bitcast %union.anon* %16 to i8**
  %22 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i8*, i8** %21, align 1
  %24 = icmp eq i8* %23, %1
  br i1 %24, label %27, label %25, !prof !6

25:                                               ; preds = %2
  %26 = ptrtoint i8* %23 to i64
  br label %30

27:                                               ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %28 = getelementptr inbounds %union.anon, %union.anon* %16, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 1
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i64 [ %26, %25 ], [ %29, %27 ]
  %32 = tail call i64 @llvm.bswap.i64(i64 %31) #12
  %33 = inttoptr i64 %32 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %34 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %33, %"struct.base::internal::EncodedPartitionFreelistEntry"** %34, align 8
  %35 = xor i64 %32, -1
  %36 = getelementptr inbounds i8, i8* %1, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %35, i64* %37, align 8
  store i8* %1, i8** %21, align 1
  %38 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %11, i64 %15, i32 0, i32 1, i64 16
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = add i16 %40, -1
  store i16 %41, i16* %39, align 1
  %42 = icmp slt i16 %41, 1
  br i1 %42, label %45, label %43, !prof !6

43:                                               ; preds = %30
  %44 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false)
  br label %51

45:                                               ; preds = %30
  %46 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"* %17) #12
  %47 = extractvalue { i8*, i64 } %46, 0
  %48 = extractvalue { i8*, i64 } %46, 1
  store i8* %47, i8** %19, align 8
  store i64 %48, i64* %20, align 8
  %49 = icmp eq i8* %47, null
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %45
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %3) #12
  br label %51

51:                                               ; preds = %43, %45, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EEC2ENS_16PartitionOptionsE(%"struct.base::PartitionRoot.16"*, i40) unnamed_addr #0 comdat($_ZN4base13PartitionRootILb0EEC5ENS_16PartitionOptionsE) align 2 {
  %3 = getelementptr %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 0
  %4 = bitcast %"struct.base::internal::PartitionBucket.18"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 5120, i1 false)
  %5 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 11
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 25
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 26, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %8, align 4
  %9 = bitcast %"struct.base::PartitionRoot.16"* %0 to i32*
  store i32 0, i32* %9, align 8
  %10 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 202, i1 false)
  tail call void @_ZN4base13PartitionRootILb0EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot.16"* %0, i40 %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE4InitENS_16PartitionOptionsE(%"struct.base::PartitionRoot.16"*, i40) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 11
  %4 = load i8, i8* %3, align 8, !range !5
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %60

6:                                                ; preds = %2
  %7 = trunc i40 %1 to i8
  tail call void @_ZN4base8internal21PartitionAddressSpace4InitEv() #12
  %8 = icmp eq i8 %7, 1
  %9 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 4
  %10 = zext i1 %8 to i8
  store i8 %10, i8* %9, align 4
  %11 = and i40 %1, 4278190080
  %12 = icmp eq i40 %11, 16777216
  %13 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 5
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  %15 = and i40 %1, -4294967296
  %16 = icmp eq i40 %15, 4294967296
  %17 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 6
  %18 = zext i1 %16 to i8
  store i8 %18, i8* %17, align 2
  %19 = and i40 %1, 16711680
  %20 = icmp ne i40 %19, 0
  %21 = zext i1 %20 to i8
  %22 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  store i8 %21, i8* %22, align 8
  %23 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 10
  %24 = bitcast %"struct.base::internal::PartitionBucket.18"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 40, i1 false)
  %25 = tail call %"struct.base::internal::SlotSpanMetadata.19"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #12
  %26 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %23, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* %25, %"struct.base::internal::SlotSpanMetadata.19"** %26, align 8
  %27 = ptrtoint %"struct.base::PartitionRoot.16"* %0 to i64
  %28 = xor i64 %27, -1
  %29 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 25
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 0
  br label %31

31:                                               ; preds = %111, %6
  %32 = phi %"struct.base::internal::PartitionBucket.18"* [ %30, %6 ], [ %113, %111 ]
  %33 = phi i64 [ 2, %6 ], [ %114, %111 ]
  %34 = phi i64 [ 16, %6 ], [ %112, %111 ]
  %35 = phi i64 [ 0, %6 ], [ %115, %111 ]
  %36 = trunc i64 %34 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %32, i32 %36) #12
  %37 = and i64 %34, 15
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %41, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %40, align 8
  br label %41

41:                                               ; preds = %31, %39
  %42 = add i64 %34, %33
  %43 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 1
  %44 = trunc i64 %42 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %43, i32 %44) #12
  %45 = and i64 %42, 15
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %63, label %61

47:                                               ; preds = %111
  tail call void @_ZN4base8internal11ThreadCache35EnsureThreadSpecificDataInitializedEv() #12
  %48 = and i40 %1, 65280
  %49 = icmp eq i40 %48, 256
  %50 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 2
  %51 = zext i1 %49 to i8
  store i8 %51, i8* %50, align 2
  br i1 %49, label %52, label %53

52:                                               ; preds = %47
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !13
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !14
  unreachable

53:                                               ; preds = %47
  store i8 1, i8* %3, align 8
  %54 = cmpxchg i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base12_GLOBAL__N_120g_global_init_calledE, i64 0, i32 0, i32 0, i32 0, i32 0), i8 0, i8 1 seq_cst seq_cst
  %55 = extractvalue { i8, i1 } %54, 1
  br i1 %55, label %56, label %60

56:                                               ; preds = %53
  %57 = tail call i32 @pthread_atfork(void ()* nonnull @_ZN4base12_GLOBAL__N_118BeforeForkInParentEv, void ()* nonnull @_ZN4base12_GLOBAL__N_117AfterForkInParentEv, void ()* nonnull @_ZN4base12_GLOBAL__N_116AfterForkInChildEv) #12
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !3

59:                                               ; preds = %56
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.9, i64 0, i64 0)) #12
  br label %60

60:                                               ; preds = %2, %59, %56, %53
  ret void

61:                                               ; preds = %41
  %62 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %43, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %62, align 8
  br label %63

63:                                               ; preds = %61, %41
  %64 = add i64 %42, %33
  %65 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 2
  %66 = trunc i64 %64 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %65, i32 %66) #12
  %67 = and i64 %64, 15
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %71, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %65, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %70, align 8
  br label %71

71:                                               ; preds = %69, %63
  %72 = add i64 %64, %33
  %73 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 3
  %74 = trunc i64 %72 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %73, i32 %74) #12
  %75 = and i64 %72, 15
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %73, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %78, align 8
  br label %79

79:                                               ; preds = %77, %71
  %80 = add i64 %72, %33
  %81 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 4
  %82 = trunc i64 %80 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %81, i32 %82) #12
  %83 = and i64 %80, 15
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %81, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %86, align 8
  br label %87

87:                                               ; preds = %85, %79
  %88 = add i64 %80, %33
  %89 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 5
  %90 = trunc i64 %88 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %89, i32 %90) #12
  %91 = and i64 %88, 15
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %95, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %89, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %94, align 8
  br label %95

95:                                               ; preds = %93, %87
  %96 = add i64 %88, %33
  %97 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 6
  %98 = trunc i64 %96 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %97, i32 %98) #12
  %99 = and i64 %96, 15
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %103, label %101

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %97, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %102, align 8
  br label %103

103:                                              ; preds = %101, %95
  %104 = add i64 %96, %33
  %105 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 7
  %106 = trunc i64 %104 to i32
  tail call void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"* %105, i32 %106) #12
  %107 = and i64 %104, 15
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %105, i64 0, i32 0
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %110, align 8
  br label %111

111:                                              ; preds = %109, %103
  %112 = add i64 %104, %33
  %113 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %32, i64 8
  %114 = shl i64 %33, 1
  %115 = add nuw nsw i64 %35, 1
  %116 = icmp eq i64 %115, 16
  br i1 %116, label %47, label %31
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EED2Ev(%"struct.base::PartitionRoot.16"*) unnamed_addr #0 comdat($_ZN4base13PartitionRootILb0EED5Ev) align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5, !prof !3

5:                                                ; preds = %1
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str, i64 0, i64 0)) #12
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare %"struct.base::internal::SlotSpanMetadata.19"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() local_unnamed_addr #2

declare void @_ZN4base8internal15PartitionBucketILb0EE4InitEj(%"struct.base::internal::PartitionBucket.18"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE19ConfigureLazyCommitEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb0EE15IsValidSlotSpanEPNS_8internal16SlotSpanMetadataILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint %"struct.base::internal::SlotSpanMetadata.19"* %0 to i64
  %3 = and i64 %2, -4096
  %4 = inttoptr i64 %3 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %5 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %4, i64 0, i32 0
  %6 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %5, align 4096
  %7 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %6, i64 0, i32 25
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"struct.base::PartitionRoot.16"* %6 to i64
  %10 = xor i64 %9, -1
  %11 = icmp eq i64 %8, %10
  ret i1 %11
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot.16"* @_ZN4base13PartitionRootILb0EE12FromSlotSpanEPNS_8internal16SlotSpanMetadataILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint %"struct.base::internal::SlotSpanMetadata.19"* %0 to i64
  %3 = and i64 %2, -4096
  %4 = inttoptr i64 %3 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %5 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %4, i64 0, i32 0
  %6 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %5, align 4096
  ret %"struct.base::PartitionRoot.16"* %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot.16"* @_ZN4base13PartitionRootILb0EE13FromSuperPageEPc(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = add i64 %2, 4096
  %4 = inttoptr i64 %3 to %"struct.base::PartitionRoot.16"**
  %5 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %4, align 8
  ret %"struct.base::PartitionRoot.16"* %5
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden %"struct.base::PartitionRoot.16"* @_ZN4base13PartitionRootILb0EE26FromPointerInNormalBucketsEPc(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -2097152
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to %"struct.base::PartitionRoot.16"**
  %6 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %5, align 4096
  ret %"struct.base::PartitionRoot.16"* %6
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE22IncreaseCommittedPagesEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw add i64* %3, i64 %1 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE22DecreaseCommittedPagesEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = atomicrmw sub i64* %3, i64 %1 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE26DecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot.16"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 %3) #12
  %5 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw sub i64* %5, i64 %2 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE26RecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot.16"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 2, i32 %3) #12
  %5 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = atomicrmw add i64* %5, i64 %2 monotonic
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb0EE29TryRecommitSystemPagesForDataEPvmNS_28PageAccessibilityDispositionE(%"struct.base::PartitionRoot.16"*, i8*, i64, i32) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call zeroext i1 @_ZN4base22TryRecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %1, i64 %2, i32 2, i32 %3) #12
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i64* %7, i64 %2 monotonic
  br label %9

9:                                                ; preds = %6, %4
  ret i1 %5
}

; Function Attrs: noinline noreturn nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE11OutOfMemoryEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #4 comdat align 2 {
  %3 = load void (i64)*, void (i64)** @_ZN4base8internal23g_oom_handling_functionE, align 8
  %4 = icmp eq void (i64)* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void %3(i64 %1) #12
  br label %6

6:                                                ; preds = %2, %5
  notail call fastcc void @_ZN12_GLOBAL__N_110OnNoMemoryEm(i64 %1) #13
  unreachable
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE17AlignedAllocFlagsEimm(%"struct.base::PartitionRoot.16"*, i32, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = tail call i64 @llvm.ctpop.i64(i64 %2) #12, !range !9
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %11, label %10, !prof !3

10:                                               ; preds = %4
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.2, i64 0, i64 0)) #12
  br label %11

11:                                               ; preds = %4, %10
  %12 = icmp ugt i64 %2, 1048576
  br i1 %12, label %13, label %14, !prof !6

13:                                               ; preds = %11
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([114 x i8], [114 x i8]* @.str.3, i64 0, i64 0)) #12
  br label %14

14:                                               ; preds = %11, %13
  %15 = icmp ugt i64 %2, 16384
  %16 = icmp ugt i64 %3, 983040
  %17 = and i1 %15, %16
  br i1 %17, label %18, label %19, !prof !6

18:                                               ; preds = %14
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([139 x i8], [139 x i8]* @.str.4, i64 0, i64 0)) #12
  br label %19

19:                                               ; preds = %14, %18
  br i1 %15, label %34, label %20

20:                                               ; preds = %19
  %21 = icmp ult i64 %3, %2
  br i1 %21, label %27, label %22, !prof !6

22:                                               ; preds = %20
  %23 = add i64 %3, -1
  %24 = tail call i64 @llvm.ctlz.i64(i64 %23, i1 false) #12, !range !9
  %25 = sub nuw nsw i64 64, %24
  %26 = shl i64 1, %25
  br label %27

27:                                               ; preds = %20, %22
  %28 = phi i64 [ %26, %22 ], [ %2, %20 ]
  %29 = icmp ult i64 %28, %3
  br i1 %29, label %30, label %34, !prof !6

30:                                               ; preds = %27
  %31 = and i32 %1, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %193

33:                                               ; preds = %30
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

34:                                               ; preds = %19, %27
  %35 = phi i64 [ %28, %27 ], [ %3, %19 ]
  %36 = select i1 %15, i64 %2, i64 16384
  %37 = and i32 %1, 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %106, label %39

39:                                               ; preds = %34
  %40 = tail call i64 @llvm.ctlz.i64(i64 %35, i1 false) #12, !range !9
  %41 = sub nuw nsw i64 64, %40
  %42 = and i64 %41, 255
  %43 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %42
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = lshr i64 %35, %45
  %47 = and i64 %46, 7
  %48 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %42
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, %35
  %51 = shl nuw nsw i64 %42, 3
  %52 = or i64 %47, %51
  %53 = icmp ne i64 %50, 0
  %54 = zext i1 %53 to i64
  %55 = add nuw nsw i64 %52, %54
  %56 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %55
  %57 = load i16, i16* %56, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %58 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %59 = load i8, i8* %58, align 8
  %60 = icmp eq i8 %59, 2
  br i1 %60, label %61, label %65

61:                                               ; preds = %39
  %62 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %63 = icmp eq i8 %62, 2
  br i1 %63, label %64, label %65, !prof !6

64:                                               ; preds = %61
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %65

65:                                               ; preds = %64, %61, %39
  %66 = zext i16 %57 to i64
  %67 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %66
  %68 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %67, i64 0, i32 0
  %69 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %68, align 8
  %70 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %69 to i8**
  %71 = load i8*, i8** %70, align 1
  %72 = icmp ult i64 %36, 16385
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %99, !prof !3

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %69, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %77 = bitcast i8* %71 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %78 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %77, align 8
  %79 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %78, null
  %80 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %78 to i64
  br i1 %79, label %81, label %83

81:                                               ; preds = %75
  %82 = tail call i64 @llvm.bswap.i64(i64 %80) #12
  br label %93

83:                                               ; preds = %75
  %84 = xor i64 %80, -1
  %85 = getelementptr inbounds i8, i8* %71, i64 8
  %86 = bitcast i8* %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = icmp eq i64 %87, %84
  br i1 %88, label %90, label %89, !prof !3

89:                                               ; preds = %83
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

90:                                               ; preds = %83
  %91 = tail call i64 @llvm.bswap.i64(i64 %80) #12
  %92 = inttoptr i64 %91 to i8*
  tail call void @llvm.prefetch(i8* nonnull %92, i32 0, i32 3, i32 1) #12
  br label %93

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %82, %81 ], [ %91, %90 ]
  %95 = inttoptr i64 %94 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %95, %"class.base::internal::PartitionFreelistEntry"** %76, align 1
  %96 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %69, i64 0, i32 3
  %97 = load i16, i16* %96, align 1
  %98 = add i16 %97, 1
  store i16 %98, i16* %96, align 1
  br label %102

99:                                               ; preds = %65
  %100 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %67, %"struct.base::PartitionRoot.16"* %0, i32 0, i64 %35, i64 %36, i8* nonnull %5) #12
  %101 = icmp eq i8* %100, null
  br i1 %101, label %104, label %102, !prof !6

102:                                              ; preds = %99, %93
  %103 = phi i8* [ %71, %93 ], [ %100, %99 ]
  br label %104

104:                                              ; preds = %99, %102
  %105 = phi i8* [ %103, %102 ], [ null, %99 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  br label %186

106:                                              ; preds = %34
  %107 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #12
  store i8* null, i8** %7, align 8
  %108 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %109 = and i8 %108, 1
  %110 = icmp ne i8 %109, 0
  br i1 %110, label %111, label %115, !prof !6

111:                                              ; preds = %106
  %112 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %7, i32 0, i64 %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)) #12
  br i1 %112, label %113, label %115

113:                                              ; preds = %111
  %114 = load i8*, i8** %7, align 8
  br label %182

115:                                              ; preds = %111, %106
  %116 = call i64 @llvm.ctlz.i64(i64 %35, i1 false) #12, !range !9
  %117 = sub nuw nsw i64 64, %116
  %118 = and i64 %117, 255
  %119 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %118
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i64
  %122 = lshr i64 %35, %121
  %123 = and i64 %122, 7
  %124 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %118
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, %35
  %127 = shl nuw nsw i64 %118, 3
  %128 = or i64 %123, %127
  %129 = icmp ne i64 %126, 0
  %130 = zext i1 %129 to i64
  %131 = add nuw nsw i64 %128, %130
  %132 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %131
  %133 = load i16, i16* %132, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %134 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %135 = load i8, i8* %134, align 8
  %136 = icmp eq i8 %135, 2
  br i1 %136, label %137, label %141

137:                                              ; preds = %115
  %138 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %139 = icmp eq i8 %138, 2
  br i1 %139, label %140, label %141, !prof !6

140:                                              ; preds = %137
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %141

141:                                              ; preds = %140, %137, %115
  %142 = zext i16 %133 to i64
  %143 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %142
  %144 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %143, i64 0, i32 0
  %145 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %144, align 8
  %146 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %145 to i8**
  %147 = load i8*, i8** %146, align 1
  %148 = icmp ult i64 %36, 16385
  %149 = icmp ne i8* %147, null
  %150 = and i1 %148, %149
  br i1 %150, label %151, label %175, !prof !3

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %145, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %153 = bitcast i8* %147 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %154 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %153, align 8
  %155 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %154, null
  %156 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %154 to i64
  br i1 %155, label %157, label %159

157:                                              ; preds = %151
  %158 = call i64 @llvm.bswap.i64(i64 %156) #12
  br label %169

159:                                              ; preds = %151
  %160 = xor i64 %156, -1
  %161 = getelementptr inbounds i8, i8* %147, i64 8
  %162 = bitcast i8* %161 to i64*
  %163 = load i64, i64* %162, align 8
  %164 = icmp eq i64 %163, %160
  br i1 %164, label %166, label %165, !prof !3

165:                                              ; preds = %159
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

166:                                              ; preds = %159
  %167 = call i64 @llvm.bswap.i64(i64 %156) #12
  %168 = inttoptr i64 %167 to i8*
  call void @llvm.prefetch(i8* nonnull %168, i32 0, i32 3, i32 1) #12
  br label %169

169:                                              ; preds = %166, %157
  %170 = phi i64 [ %158, %157 ], [ %167, %166 ]
  %171 = inttoptr i64 %170 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %171, %"class.base::internal::PartitionFreelistEntry"** %152, align 1
  %172 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %145, i64 0, i32 3
  %173 = load i16, i16* %172, align 1
  %174 = add i16 %173, 1
  store i16 %174, i16* %172, align 1
  br label %178

175:                                              ; preds = %141
  %176 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %143, %"struct.base::PartitionRoot.16"* %0, i32 0, i64 %35, i64 %36, i8* nonnull %6) #12
  %177 = icmp eq i8* %176, null
  br i1 %177, label %180, label %178, !prof !6

178:                                              ; preds = %175, %169
  %179 = phi i8* [ %147, %169 ], [ %176, %175 ]
  br label %180

180:                                              ; preds = %178, %175
  %181 = phi i8* [ %179, %178 ], [ null, %175 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  store i8* %181, i8** %7, align 8
  br i1 %110, label %182, label %184

182:                                              ; preds = %180, %113
  %183 = phi i8* [ %114, %113 ], [ %181, %180 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %183, i64 %35, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.5, i64 0, i64 0)) #12
  br label %184

184:                                              ; preds = %182, %180
  %185 = load i8*, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #12
  br label %186

186:                                              ; preds = %184, %104
  %187 = phi i8* [ %105, %104 ], [ %185, %184 ]
  %188 = ptrtoint i8* %187 to i64
  %189 = add i64 %2, -1
  %190 = and i64 %189, %188
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %193, label %192, !prof !3

192:                                              ; preds = %186
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.6, i64 0, i64 0)) #12
  br label %193

193:                                              ; preds = %192, %186, %30
  %194 = phi i8* [ null, %30 ], [ %187, %186 ], [ %187, %192 ]
  ret i8* %194
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE22AdjustSizeForExtrasAddEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE27AdjustSizeForExtrasSubtractEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE17AllocFlagsNoHooksEimm(%"struct.base::PartitionRoot.16"*, i32, i64, i64) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = tail call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %7 = sub nuw nsw i64 64, %6
  %8 = and i64 %7, 255
  %9 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %8
  %10 = load i8, i8* %9, align 1
  %11 = zext i8 %10 to i64
  %12 = lshr i64 %2, %11
  %13 = and i64 %12, 7
  %14 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %8
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, %2
  %17 = shl nuw nsw i64 %8, 3
  %18 = or i64 %13, %17
  %19 = icmp ne i64 %16, 0
  %20 = zext i1 %19 to i64
  %21 = add nuw nsw i64 %18, %20
  %22 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %21
  %23 = load i16, i16* %22, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %24 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %25 = load i8, i8* %24, align 8
  %26 = icmp eq i8 %25, 2
  br i1 %26, label %27, label %31

27:                                               ; preds = %4
  %28 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %29 = icmp eq i8 %28, 2
  br i1 %29, label %30, label %31, !prof !6

30:                                               ; preds = %27
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %31

31:                                               ; preds = %30, %27, %4
  %32 = zext i16 %23 to i64
  %33 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %32
  %34 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %33, i64 0, i32 0
  %35 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %34, align 8
  %36 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %35 to i8**
  %37 = load i8*, i8** %36, align 1
  %38 = icmp ult i64 %3, 16385
  %39 = icmp ne i8* %37, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %68, !prof !3

41:                                               ; preds = %31
  %42 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %35, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %43 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %32, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = bitcast i8* %37 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %47 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %46, align 8
  %48 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %47, null
  %49 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %47 to i64
  br i1 %48, label %50, label %52

50:                                               ; preds = %41
  %51 = tail call i64 @llvm.bswap.i64(i64 %49) #12
  br label %62

52:                                               ; preds = %41
  %53 = xor i64 %49, -1
  %54 = getelementptr inbounds i8, i8* %37, i64 8
  %55 = bitcast i8* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, %53
  br i1 %57, label %59, label %58, !prof !3

58:                                               ; preds = %52
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

59:                                               ; preds = %52
  %60 = tail call i64 @llvm.bswap.i64(i64 %49) #12
  %61 = inttoptr i64 %60 to i8*
  tail call void @llvm.prefetch(i8* nonnull %61, i32 0, i32 3, i32 1) #12
  br label %62

62:                                               ; preds = %59, %50
  %63 = phi i64 [ %51, %50 ], [ %60, %59 ]
  %64 = inttoptr i64 %63 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %64, %"class.base::internal::PartitionFreelistEntry"** %42, align 1
  %65 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %35, i64 0, i32 3
  %66 = load i16, i16* %65, align 1
  %67 = add i16 %66, 1
  store i16 %67, i16* %65, align 1
  br label %99

68:                                               ; preds = %31
  %69 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %33, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %5) #12
  %70 = icmp eq i8* %69, null
  br i1 %70, label %108, label %71, !prof !6

71:                                               ; preds = %68
  %72 = ptrtoint i8* %69 to i64
  %73 = and i64 %72, -2097152
  %74 = or i64 %73, 4096
  %75 = inttoptr i64 %74 to i8*
  %76 = lshr i64 %72, 9
  %77 = and i64 %76, 4064
  %78 = getelementptr inbounds i8, i8* %75, i64 %77
  %79 = bitcast i8* %78 to %"struct.base::internal::PartitionPage.37"*
  %80 = getelementptr inbounds i8, i8* %78, i64 30
  %81 = load i8, i8* %80, align 2
  %82 = zext i8 %81 to i64
  %83 = sub nsw i64 0, %82
  %84 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %79, i64 %83, i32 0, i32 1, i64 21
  %85 = load i8, i8* %84, align 1, !range !5
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %87, label %94, !prof !3

87:                                               ; preds = %71
  %88 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %79, i64 %83, i32 0, i32 1, i64 8
  %89 = bitcast i8* %88 to %"struct.base::internal::PartitionBucket.18"**
  %90 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %89, align 1
  %91 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %90, i64 0, i32 3
  %92 = load i32, i32* %91, align 8
  %93 = zext i32 %92 to i64
  br label %99

94:                                               ; preds = %71
  %95 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %79, i64 %83, i32 0
  %96 = bitcast %union.anon.38* %95 to %"struct.base::internal::PartitionPage.37"*
  %97 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %96, i64 1, i32 0, i32 0, i32 0
  %98 = load i64, i64* %97, align 1
  br label %99

99:                                               ; preds = %62, %94, %87
  %100 = phi i64 [ %98, %94 ], [ %93, %87 ], [ %45, %62 ]
  %101 = phi i8* [ %69, %94 ], [ %69, %87 ], [ %37, %62 ]
  %102 = and i32 %1, 2
  %103 = icmp ne i32 %102, 0
  %104 = load i8, i8* %5, align 1
  %105 = icmp eq i8 %104, 0
  %106 = and i1 %103, %105
  br i1 %106, label %107, label %108, !prof !11

107:                                              ; preds = %99
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %101, i8 0, i64 %100, i1 false)
  br label %108

108:                                              ; preds = %68, %107, %99
  %109 = phi i8* [ %101, %99 ], [ %101, %107 ], [ null, %68 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  ret i8* %109
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE18AllocFlagsInternalEimmPKc(%"struct.base::PartitionRoot.16"*, i32, i64, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #12
  store i8* null, i8** %7, align 8
  %9 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %10 = and i8 %9, 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %16, !prof !6

12:                                               ; preds = %5
  %13 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %7, i32 %1, i64 %2, i8* %4) #12
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = load i8*, i8** %7, align 8
  br label %121

16:                                               ; preds = %12, %5
  %17 = call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %18 = sub nuw nsw i64 64, %17
  %19 = and i64 %18, 255
  %20 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %19
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = lshr i64 %2, %22
  %24 = and i64 %23, 7
  %25 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %19
  %26 = load i64, i64* %25, align 8
  %27 = and i64 %26, %2
  %28 = shl nuw nsw i64 %19, 3
  %29 = or i64 %24, %28
  %30 = icmp ne i64 %27, 0
  %31 = zext i1 %30 to i64
  %32 = add nuw nsw i64 %29, %31
  %33 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %32
  %34 = load i16, i16* %33, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %35 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %36 = load i8, i8* %35, align 8
  %37 = icmp eq i8 %36, 2
  br i1 %37, label %38, label %42

38:                                               ; preds = %16
  %39 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %42, !prof !6

41:                                               ; preds = %38
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %42

42:                                               ; preds = %41, %38, %16
  %43 = zext i16 %34 to i64
  %44 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %43
  %45 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %44, i64 0, i32 0
  %46 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %45, align 8
  %47 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %46 to i8**
  %48 = load i8*, i8** %47, align 1
  %49 = icmp ult i64 %3, 16385
  %50 = icmp ne i8* %48, null
  %51 = and i1 %49, %50
  br i1 %51, label %52, label %79, !prof !3

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %46, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %54 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %43, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = bitcast i8* %48 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %58 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %57, align 8
  %59 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %58, null
  %60 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %58 to i64
  br i1 %59, label %61, label %63

61:                                               ; preds = %52
  %62 = call i64 @llvm.bswap.i64(i64 %60) #12
  br label %73

63:                                               ; preds = %52
  %64 = xor i64 %60, -1
  %65 = getelementptr inbounds i8, i8* %48, i64 8
  %66 = bitcast i8* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = icmp eq i64 %67, %64
  br i1 %68, label %70, label %69, !prof !3

69:                                               ; preds = %63
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

70:                                               ; preds = %63
  %71 = call i64 @llvm.bswap.i64(i64 %60) #12
  %72 = inttoptr i64 %71 to i8*
  call void @llvm.prefetch(i8* nonnull %72, i32 0, i32 3, i32 1) #12
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i64 [ %62, %61 ], [ %71, %70 ]
  %75 = inttoptr i64 %74 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %75, %"class.base::internal::PartitionFreelistEntry"** %53, align 1
  %76 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %46, i64 0, i32 3
  %77 = load i16, i16* %76, align 1
  %78 = add i16 %77, 1
  store i16 %78, i16* %76, align 1
  br label %110

79:                                               ; preds = %42
  %80 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %44, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %2, i64 %3, i8* nonnull %6) #12
  %81 = icmp eq i8* %80, null
  br i1 %81, label %119, label %82, !prof !6

82:                                               ; preds = %79
  %83 = ptrtoint i8* %80 to i64
  %84 = and i64 %83, -2097152
  %85 = or i64 %84, 4096
  %86 = inttoptr i64 %85 to i8*
  %87 = lshr i64 %83, 9
  %88 = and i64 %87, 4064
  %89 = getelementptr inbounds i8, i8* %86, i64 %88
  %90 = bitcast i8* %89 to %"struct.base::internal::PartitionPage.37"*
  %91 = getelementptr inbounds i8, i8* %89, i64 30
  %92 = load i8, i8* %91, align 2
  %93 = zext i8 %92 to i64
  %94 = sub nsw i64 0, %93
  %95 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %90, i64 %94, i32 0, i32 1, i64 21
  %96 = load i8, i8* %95, align 1, !range !5
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %98, label %105, !prof !3

98:                                               ; preds = %82
  %99 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %90, i64 %94, i32 0, i32 1, i64 8
  %100 = bitcast i8* %99 to %"struct.base::internal::PartitionBucket.18"**
  %101 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %100, align 1
  %102 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %101, i64 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = zext i32 %103 to i64
  br label %110

105:                                              ; preds = %82
  %106 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %90, i64 %94, i32 0
  %107 = bitcast %union.anon.38* %106 to %"struct.base::internal::PartitionPage.37"*
  %108 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %107, i64 1, i32 0, i32 0, i32 0
  %109 = load i64, i64* %108, align 1
  br label %110

110:                                              ; preds = %105, %98, %73
  %111 = phi i64 [ %109, %105 ], [ %104, %98 ], [ %56, %73 ]
  %112 = phi i8* [ %80, %105 ], [ %80, %98 ], [ %48, %73 ]
  %113 = and i32 %1, 2
  %114 = icmp ne i32 %113, 0
  %115 = load i8, i8* %6, align 1
  %116 = icmp eq i8 %115, 0
  %117 = and i1 %114, %116
  br i1 %117, label %118, label %119, !prof !11

118:                                              ; preds = %110
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %112, i8 0, i64 %111, i1 false) #12
  br label %119

119:                                              ; preds = %79, %110, %118
  %120 = phi i8* [ %112, %110 ], [ %112, %118 ], [ null, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  store i8* %120, i8** %7, align 8
  br i1 %11, label %121, label %123

121:                                              ; preds = %119, %14
  %122 = phi i8* [ %15, %14 ], [ %120, %119 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %122, i64 %2, i8* %4) #12
  br label %123

123:                                              ; preds = %121, %119
  %124 = load i8*, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #12
  ret i8* %124
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE5AllocEmPKc(%"struct.base::PartitionRoot.16"*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca i8, align 1
  %5 = alloca i8*, align 8
  %6 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store i8* null, i8** %5, align 8
  %7 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %8 = and i8 %7, 1
  %9 = icmp ne i8 %8, 0
  br i1 %9, label %10, label %14, !prof !6

10:                                               ; preds = %3
  %11 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %5, i32 0, i64 %1, i8* %2) #12
  br i1 %11, label %12, label %14

12:                                               ; preds = %10
  %13 = load i8*, i8** %5, align 8
  br label %79

14:                                               ; preds = %10, %3
  %15 = call i64 @llvm.ctlz.i64(i64 %1, i1 false) #12, !range !9
  %16 = sub nuw nsw i64 64, %15
  %17 = and i64 %16, 255
  %18 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i64
  %21 = lshr i64 %1, %20
  %22 = and i64 %21, 7
  %23 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %17
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, %1
  %26 = shl nuw nsw i64 %17, 3
  %27 = or i64 %22, %26
  %28 = icmp ne i64 %25, 0
  %29 = zext i1 %28 to i64
  %30 = add nuw nsw i64 %27, %29
  %31 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %30
  %32 = load i16, i16* %31, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 0, i8* %4, align 1
  %33 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %34 = load i8, i8* %33, align 8
  %35 = icmp eq i8 %34, 2
  br i1 %35, label %36, label %40

36:                                               ; preds = %14
  %37 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %38 = icmp eq i8 %37, 2
  br i1 %38, label %39, label %40, !prof !6

39:                                               ; preds = %36
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %40

40:                                               ; preds = %39, %36, %14
  %41 = zext i16 %32 to i64
  %42 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %41
  %43 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %42, i64 0, i32 0
  %44 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %43, align 8
  %45 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %44 to i8**
  %46 = load i8*, i8** %45, align 1
  %47 = icmp eq i8* %46, null
  br i1 %47, label %72, label %48, !prof !6

48:                                               ; preds = %40
  %49 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %44, i64 0, i32 0
  store i8 0, i8* %4, align 1
  %50 = bitcast i8* %46 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %51 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %50, align 8
  %52 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %51, null
  %53 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %51 to i64
  br i1 %52, label %54, label %56

54:                                               ; preds = %48
  %55 = call i64 @llvm.bswap.i64(i64 %53) #12
  br label %66

56:                                               ; preds = %48
  %57 = xor i64 %53, -1
  %58 = getelementptr inbounds i8, i8* %46, i64 8
  %59 = bitcast i8* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, %57
  br i1 %61, label %63, label %62, !prof !3

62:                                               ; preds = %56
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

63:                                               ; preds = %56
  %64 = call i64 @llvm.bswap.i64(i64 %53) #12
  %65 = inttoptr i64 %64 to i8*
  call void @llvm.prefetch(i8* nonnull %65, i32 0, i32 3, i32 1) #12
  br label %66

66:                                               ; preds = %63, %54
  %67 = phi i64 [ %55, %54 ], [ %64, %63 ]
  %68 = inttoptr i64 %67 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %68, %"class.base::internal::PartitionFreelistEntry"** %49, align 1
  %69 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %44, i64 0, i32 3
  %70 = load i16, i16* %69, align 1
  %71 = add i16 %70, 1
  store i16 %71, i16* %69, align 1
  br label %75

72:                                               ; preds = %40
  %73 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %42, %"struct.base::PartitionRoot.16"* %0, i32 0, i64 %1, i64 16384, i8* nonnull %4) #12
  %74 = icmp eq i8* %73, null
  br i1 %74, label %77, label %75, !prof !6

75:                                               ; preds = %72, %66
  %76 = phi i8* [ %46, %66 ], [ %73, %72 ]
  br label %77

77:                                               ; preds = %75, %72
  %78 = phi i8* [ %76, %75 ], [ null, %72 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  store i8* %78, i8** %5, align 8
  br i1 %9, label %79, label %81

79:                                               ; preds = %77, %12
  %80 = phi i8* [ %13, %12 ], [ %78, %77 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %80, i64 %1, i8* %2) #12
  br label %81

81:                                               ; preds = %79, %77
  %82 = load i8*, i8** %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  ret i8* %82
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE10AllocFlagsEimPKc(%"struct.base::PartitionRoot.16"*, i32, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = alloca i8, align 1
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* null, i8** %6, align 8
  %8 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %9 = and i8 %8, 1
  %10 = icmp ne i8 %9, 0
  br i1 %10, label %11, label %15, !prof !6

11:                                               ; preds = %4
  %12 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %6, i32 %1, i64 %2, i8* %3) #12
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = load i8*, i8** %6, align 8
  br label %118

15:                                               ; preds = %11, %4
  %16 = call i64 @llvm.ctlz.i64(i64 %2, i1 false) #12, !range !9
  %17 = sub nuw nsw i64 64, %16
  %18 = and i64 %17, 255
  %19 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %18
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = lshr i64 %2, %21
  %23 = and i64 %22, 7
  %24 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %18
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, %2
  %27 = shl nuw nsw i64 %18, 3
  %28 = or i64 %23, %27
  %29 = icmp ne i64 %26, 0
  %30 = zext i1 %29 to i64
  %31 = add nuw nsw i64 %28, %30
  %32 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %31
  %33 = load i16, i16* %32, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  store i8 0, i8* %5, align 1
  %34 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %37, label %41

37:                                               ; preds = %15
  %38 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %39 = icmp eq i8 %38, 2
  br i1 %39, label %40, label %41, !prof !6

40:                                               ; preds = %37
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %41

41:                                               ; preds = %40, %37, %15
  %42 = zext i16 %33 to i64
  %43 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %42
  %44 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %43, i64 0, i32 0
  %45 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %44, align 8
  %46 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %45 to i8**
  %47 = load i8*, i8** %46, align 1
  %48 = icmp eq i8* %47, null
  br i1 %48, label %76, label %49, !prof !6

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %45, i64 0, i32 0
  store i8 0, i8* %5, align 1
  %51 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %42, i32 3
  %52 = load i32, i32* %51, align 8
  %53 = zext i32 %52 to i64
  %54 = bitcast i8* %47 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %55 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %54, align 8
  %56 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %55, null
  %57 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %55 to i64
  br i1 %56, label %58, label %60

58:                                               ; preds = %49
  %59 = call i64 @llvm.bswap.i64(i64 %57) #12
  br label %70

60:                                               ; preds = %49
  %61 = xor i64 %57, -1
  %62 = getelementptr inbounds i8, i8* %47, i64 8
  %63 = bitcast i8* %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = icmp eq i64 %64, %61
  br i1 %65, label %67, label %66, !prof !3

66:                                               ; preds = %60
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

67:                                               ; preds = %60
  %68 = call i64 @llvm.bswap.i64(i64 %57) #12
  %69 = inttoptr i64 %68 to i8*
  call void @llvm.prefetch(i8* nonnull %69, i32 0, i32 3, i32 1) #12
  br label %70

70:                                               ; preds = %67, %58
  %71 = phi i64 [ %59, %58 ], [ %68, %67 ]
  %72 = inttoptr i64 %71 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %72, %"class.base::internal::PartitionFreelistEntry"** %50, align 1
  %73 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %45, i64 0, i32 3
  %74 = load i16, i16* %73, align 1
  %75 = add i16 %74, 1
  store i16 %75, i16* %73, align 1
  br label %107

76:                                               ; preds = %41
  %77 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %43, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %2, i64 16384, i8* nonnull %5) #12
  %78 = icmp eq i8* %77, null
  br i1 %78, label %116, label %79, !prof !6

79:                                               ; preds = %76
  %80 = ptrtoint i8* %77 to i64
  %81 = and i64 %80, -2097152
  %82 = or i64 %81, 4096
  %83 = inttoptr i64 %82 to i8*
  %84 = lshr i64 %80, 9
  %85 = and i64 %84, 4064
  %86 = getelementptr inbounds i8, i8* %83, i64 %85
  %87 = bitcast i8* %86 to %"struct.base::internal::PartitionPage.37"*
  %88 = getelementptr inbounds i8, i8* %86, i64 30
  %89 = load i8, i8* %88, align 2
  %90 = zext i8 %89 to i64
  %91 = sub nsw i64 0, %90
  %92 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %87, i64 %91, i32 0, i32 1, i64 21
  %93 = load i8, i8* %92, align 1, !range !5
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %102, !prof !3

95:                                               ; preds = %79
  %96 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %87, i64 %91, i32 0, i32 1, i64 8
  %97 = bitcast i8* %96 to %"struct.base::internal::PartitionBucket.18"**
  %98 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %97, align 1
  %99 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %98, i64 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = zext i32 %100 to i64
  br label %107

102:                                              ; preds = %79
  %103 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %87, i64 %91, i32 0
  %104 = bitcast %union.anon.38* %103 to %"struct.base::internal::PartitionPage.37"*
  %105 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %104, i64 1, i32 0, i32 0, i32 0
  %106 = load i64, i64* %105, align 1
  br label %107

107:                                              ; preds = %102, %95, %70
  %108 = phi i64 [ %106, %102 ], [ %101, %95 ], [ %53, %70 ]
  %109 = phi i8* [ %77, %102 ], [ %77, %95 ], [ %47, %70 ]
  %110 = and i32 %1, 2
  %111 = icmp ne i32 %110, 0
  %112 = load i8, i8* %5, align 1
  %113 = icmp eq i8 %112, 0
  %114 = and i1 %111, %113
  br i1 %114, label %115, label %116, !prof !11

115:                                              ; preds = %107
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %109, i8 0, i64 %108, i1 false) #12
  br label %116

116:                                              ; preds = %115, %107, %76
  %117 = phi i8* [ %109, %107 ], [ %109, %115 ], [ null, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  store i8* %117, i8** %6, align 8
  br i1 %10, label %118, label %120

118:                                              ; preds = %116, %13
  %119 = phi i8* [ %14, %13 ], [ %117, %116 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %119, i64 %2, i8* %3) #12
  br label %120

120:                                              ; preds = %118, %116
  %121 = load i8*, i8** %6, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  ret i8* %121
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i16 @_ZN4base13PartitionRootILb0EE17SizeToBucketIndexEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = tail call i64 @llvm.ctlz.i64(i64 %0, i1 false) #12, !range !9
  %3 = sub nuw nsw i64 64, %2
  %4 = and i64 %3, 255
  %5 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %4
  %6 = load i8, i8* %5, align 1
  %7 = zext i8 %6 to i64
  %8 = lshr i64 %0, %7
  %9 = and i64 %8, 7
  %10 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %4
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, %0
  %13 = shl nuw nsw i64 %4, 3
  %14 = or i64 %9, %13
  %15 = icmp ne i64 %12, 0
  %16 = zext i1 %15 to i64
  %17 = add nuw nsw i64 %14, %16
  %18 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %17
  %19 = load i16, i16* %18, align 2
  ret i16 %19
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb0EE19IsQuarantineEnabledEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 2
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE8RawAllocEPNS_8internal15PartitionBucketILb0EEEimmPmPb(%"struct.base::PartitionRoot.16"*, %"struct.base::internal::PartitionBucket.18"*, i32, i64, i64, i64*, i8*) local_unnamed_addr #3 comdat align 2 {
  %8 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %1, i64 0, i32 0
  %9 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %8, align 8
  %10 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %9 to i8**
  %11 = load i8*, i8** %10, align 1
  %12 = icmp ult i64 %4, 16385
  %13 = icmp ne i8* %11, null
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %42, !prof !3

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %9, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %17 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %5, align 8
  %20 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %21 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 0
  %22 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %21, align 8
  %23 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %22, null
  %24 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %22 to i64
  br i1 %23, label %25, label %27

25:                                               ; preds = %15
  %26 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  br label %36

27:                                               ; preds = %15
  %28 = xor i64 %24, -1
  %29 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %28
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %27
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

33:                                               ; preds = %27
  %34 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  %35 = inttoptr i64 %34 to i8*
  tail call void @llvm.prefetch(i8* nonnull %35, i32 0, i32 3, i32 1) #12
  br label %36

36:                                               ; preds = %33, %25
  %37 = phi i64 [ %26, %25 ], [ %34, %33 ]
  %38 = inttoptr i64 %37 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %38, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %39 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %9, i64 0, i32 3
  %40 = load i16, i16* %39, align 1
  %41 = add i16 %40, 1
  store i16 %41, i16* %39, align 1
  br label %75

42:                                               ; preds = %7
  %43 = tail call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %1, %"struct.base::PartitionRoot.16"* %0, i32 %2, i64 %3, i64 %4, i8* %6) #12
  %44 = icmp eq i8* %43, null
  br i1 %44, label %75, label %45, !prof !6

45:                                               ; preds = %42
  %46 = ptrtoint i8* %43 to i64
  %47 = and i64 %46, -2097152
  %48 = or i64 %47, 4096
  %49 = inttoptr i64 %48 to i8*
  %50 = lshr i64 %46, 9
  %51 = and i64 %50, 4064
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = bitcast i8* %52 to %"struct.base::internal::PartitionPage.37"*
  %54 = getelementptr inbounds i8, i8* %52, i64 30
  %55 = load i8, i8* %54, align 2
  %56 = zext i8 %55 to i64
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0, i32 1, i64 21
  %59 = load i8, i8* %58, align 1, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %68, !prof !3

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0, i32 1, i64 8
  %63 = bitcast i8* %62 to %"struct.base::internal::PartitionBucket.18"**
  %64 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %63, align 1
  %65 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  br label %73

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0
  %70 = bitcast %union.anon.38* %69 to %"struct.base::internal::PartitionPage.37"*
  %71 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %70, i64 1, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 1
  br label %73

73:                                               ; preds = %68, %61
  %74 = phi i64 [ %67, %61 ], [ %72, %68 ]
  store i64 %74, i64* %5, align 8
  br label %75

75:                                               ; preds = %36, %42, %73
  %76 = phi i8* [ null, %42 ], [ %11, %36 ], [ %43, %73 ]
  ret i8* %76
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK4base13PartitionRootILb0EE25AdjustPointerForExtrasAddEPv(%"struct.base::PartitionRoot.16"*, i8*) local_unnamed_addr #3 comdat align 2 {
  ret i8* %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE7ReallocEPvmPKc(%"struct.base::PartitionRoot.16"*, i8*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call i8* @_ZN4base13PartitionRootILb0EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot.16"* %0, i32 0, i8* %1, i64 %2, i8* %3)
  ret i8* %5
}

; Function Attrs: noinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot.16"*, i32, i8*, i64, i8*) local_unnamed_addr #6 comdat align 2 {
  %6 = alloca i8, align 1
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %10 = alloca i8, align 1
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %14 = alloca i64, align 8
  %15 = and i32 %1, 4
  %16 = icmp ne i32 %15, 0
  %17 = icmp eq i8* %2, null
  br i1 %17, label %18, label %238, !prof !6

18:                                               ; preds = %5
  br i1 %16, label %19, label %122

19:                                               ; preds = %18
  %20 = tail call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %21 = sub nuw nsw i64 64, %20
  %22 = and i64 %21, 255
  %23 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i64
  %26 = lshr i64 %3, %25
  %27 = and i64 %26, 7
  %28 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %22
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, %3
  %31 = shl nuw nsw i64 %22, 3
  %32 = or i64 %27, %31
  %33 = icmp ne i64 %30, 0
  %34 = zext i1 %33 to i64
  %35 = add nuw nsw i64 %32, %34
  %36 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %35
  %37 = load i16, i16* %36, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #12
  store i8 0, i8* %12, align 1
  %38 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 2
  br i1 %40, label %41, label %45

41:                                               ; preds = %19
  %42 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %43 = icmp eq i8 %42, 2
  br i1 %43, label %44, label %45, !prof !6

44:                                               ; preds = %41
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %45

45:                                               ; preds = %44, %41, %19
  %46 = zext i16 %37 to i64
  %47 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %46
  %48 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %47, i64 0, i32 0
  %49 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %48, align 8
  %50 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %49 to i8**
  %51 = load i8*, i8** %50, align 1
  %52 = icmp eq i8* %51, null
  br i1 %52, label %80, label %53, !prof !6

53:                                               ; preds = %45
  %54 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %49, i64 0, i32 0
  store i8 0, i8* %12, align 1
  %55 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %46, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = zext i32 %56 to i64
  %58 = bitcast i8* %51 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %59 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %58, align 8
  %60 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %59, null
  %61 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %59 to i64
  br i1 %60, label %62, label %64

62:                                               ; preds = %53
  %63 = tail call i64 @llvm.bswap.i64(i64 %61) #12
  br label %74

64:                                               ; preds = %53
  %65 = xor i64 %61, -1
  %66 = getelementptr inbounds i8, i8* %51, i64 8
  %67 = bitcast i8* %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = icmp eq i64 %68, %65
  br i1 %69, label %71, label %70, !prof !3

70:                                               ; preds = %64
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

71:                                               ; preds = %64
  %72 = tail call i64 @llvm.bswap.i64(i64 %61) #12
  %73 = inttoptr i64 %72 to i8*
  tail call void @llvm.prefetch(i8* nonnull %73, i32 0, i32 3, i32 1) #12
  br label %74

74:                                               ; preds = %71, %62
  %75 = phi i64 [ %63, %62 ], [ %72, %71 ]
  %76 = inttoptr i64 %75 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %76, %"class.base::internal::PartitionFreelistEntry"** %54, align 1
  %77 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %49, i64 0, i32 3
  %78 = load i16, i16* %77, align 1
  %79 = add i16 %78, 1
  store i16 %79, i16* %77, align 1
  br label %111

80:                                               ; preds = %45
  %81 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %47, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %12) #12
  %82 = icmp eq i8* %81, null
  br i1 %82, label %120, label %83, !prof !6

83:                                               ; preds = %80
  %84 = ptrtoint i8* %81 to i64
  %85 = and i64 %84, -2097152
  %86 = or i64 %85, 4096
  %87 = inttoptr i64 %86 to i8*
  %88 = lshr i64 %84, 9
  %89 = and i64 %88, 4064
  %90 = getelementptr inbounds i8, i8* %87, i64 %89
  %91 = bitcast i8* %90 to %"struct.base::internal::PartitionPage.37"*
  %92 = getelementptr inbounds i8, i8* %90, i64 30
  %93 = load i8, i8* %92, align 2
  %94 = zext i8 %93 to i64
  %95 = sub nsw i64 0, %94
  %96 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %91, i64 %95, i32 0, i32 1, i64 21
  %97 = load i8, i8* %96, align 1, !range !5
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %106, !prof !3

99:                                               ; preds = %83
  %100 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %91, i64 %95, i32 0, i32 1, i64 8
  %101 = bitcast i8* %100 to %"struct.base::internal::PartitionBucket.18"**
  %102 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %101, align 1
  %103 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %102, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = zext i32 %104 to i64
  br label %111

106:                                              ; preds = %83
  %107 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %91, i64 %95, i32 0
  %108 = bitcast %union.anon.38* %107 to %"struct.base::internal::PartitionPage.37"*
  %109 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %108, i64 1, i32 0, i32 0, i32 0
  %110 = load i64, i64* %109, align 1
  br label %111

111:                                              ; preds = %106, %99, %74
  %112 = phi i64 [ %110, %106 ], [ %105, %99 ], [ %57, %74 ]
  %113 = phi i8* [ %81, %106 ], [ %81, %99 ], [ %51, %74 ]
  %114 = and i32 %1, 2
  %115 = icmp ne i32 %114, 0
  %116 = load i8, i8* %12, align 1
  %117 = icmp eq i8 %116, 0
  %118 = and i1 %115, %117
  br i1 %118, label %119, label %120, !prof !11

119:                                              ; preds = %111
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %113, i8 0, i64 %112, i1 false) #12
  br label %120

120:                                              ; preds = %80, %111, %119
  %121 = phi i8* [ %113, %111 ], [ %113, %119 ], [ null, %80 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #12
  br label %847

122:                                              ; preds = %18
  %123 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #12
  store i8* null, i8** %11, align 8
  %124 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %125 = and i8 %124, 1
  %126 = icmp ne i8 %125, 0
  br i1 %126, label %127, label %131, !prof !6

127:                                              ; preds = %122
  %128 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %11, i32 %1, i64 %3, i8* %4) #12
  br i1 %128, label %129, label %131

129:                                              ; preds = %127
  %130 = load i8*, i8** %11, align 8
  br label %234

131:                                              ; preds = %127, %122
  %132 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %133 = sub nuw nsw i64 64, %132
  %134 = and i64 %133, 255
  %135 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %134
  %136 = load i8, i8* %135, align 1
  %137 = zext i8 %136 to i64
  %138 = lshr i64 %3, %137
  %139 = and i64 %138, 7
  %140 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %134
  %141 = load i64, i64* %140, align 8
  %142 = and i64 %141, %3
  %143 = shl nuw nsw i64 %134, 3
  %144 = or i64 %139, %143
  %145 = icmp ne i64 %142, 0
  %146 = zext i1 %145 to i64
  %147 = add nuw nsw i64 %144, %146
  %148 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %147
  %149 = load i16, i16* %148, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #12
  store i8 0, i8* %10, align 1
  %150 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %151 = load i8, i8* %150, align 8
  %152 = icmp eq i8 %151, 2
  br i1 %152, label %153, label %157

153:                                              ; preds = %131
  %154 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %155 = icmp eq i8 %154, 2
  br i1 %155, label %156, label %157, !prof !6

156:                                              ; preds = %153
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %157

157:                                              ; preds = %156, %153, %131
  %158 = zext i16 %149 to i64
  %159 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %158
  %160 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %159, i64 0, i32 0
  %161 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %160, align 8
  %162 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %161 to i8**
  %163 = load i8*, i8** %162, align 1
  %164 = icmp eq i8* %163, null
  br i1 %164, label %192, label %165, !prof !6

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %161, i64 0, i32 0
  store i8 0, i8* %10, align 1
  %167 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %158, i32 3
  %168 = load i32, i32* %167, align 8
  %169 = zext i32 %168 to i64
  %170 = bitcast i8* %163 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %171 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %170, align 8
  %172 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %171, null
  %173 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %171 to i64
  br i1 %172, label %174, label %176

174:                                              ; preds = %165
  %175 = call i64 @llvm.bswap.i64(i64 %173) #12
  br label %186

176:                                              ; preds = %165
  %177 = xor i64 %173, -1
  %178 = getelementptr inbounds i8, i8* %163, i64 8
  %179 = bitcast i8* %178 to i64*
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, %177
  br i1 %181, label %183, label %182, !prof !3

182:                                              ; preds = %176
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

183:                                              ; preds = %176
  %184 = call i64 @llvm.bswap.i64(i64 %173) #12
  %185 = inttoptr i64 %184 to i8*
  call void @llvm.prefetch(i8* nonnull %185, i32 0, i32 3, i32 1) #12
  br label %186

186:                                              ; preds = %183, %174
  %187 = phi i64 [ %175, %174 ], [ %184, %183 ]
  %188 = inttoptr i64 %187 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %188, %"class.base::internal::PartitionFreelistEntry"** %166, align 1
  %189 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %161, i64 0, i32 3
  %190 = load i16, i16* %189, align 1
  %191 = add i16 %190, 1
  store i16 %191, i16* %189, align 1
  br label %223

192:                                              ; preds = %157
  %193 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %159, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %10) #12
  %194 = icmp eq i8* %193, null
  br i1 %194, label %232, label %195, !prof !6

195:                                              ; preds = %192
  %196 = ptrtoint i8* %193 to i64
  %197 = and i64 %196, -2097152
  %198 = or i64 %197, 4096
  %199 = inttoptr i64 %198 to i8*
  %200 = lshr i64 %196, 9
  %201 = and i64 %200, 4064
  %202 = getelementptr inbounds i8, i8* %199, i64 %201
  %203 = bitcast i8* %202 to %"struct.base::internal::PartitionPage.37"*
  %204 = getelementptr inbounds i8, i8* %202, i64 30
  %205 = load i8, i8* %204, align 2
  %206 = zext i8 %205 to i64
  %207 = sub nsw i64 0, %206
  %208 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %203, i64 %207, i32 0, i32 1, i64 21
  %209 = load i8, i8* %208, align 1, !range !5
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %211, label %218, !prof !3

211:                                              ; preds = %195
  %212 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %203, i64 %207, i32 0, i32 1, i64 8
  %213 = bitcast i8* %212 to %"struct.base::internal::PartitionBucket.18"**
  %214 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %213, align 1
  %215 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %214, i64 0, i32 3
  %216 = load i32, i32* %215, align 8
  %217 = zext i32 %216 to i64
  br label %223

218:                                              ; preds = %195
  %219 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %203, i64 %207, i32 0
  %220 = bitcast %union.anon.38* %219 to %"struct.base::internal::PartitionPage.37"*
  %221 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %220, i64 1, i32 0, i32 0, i32 0
  %222 = load i64, i64* %221, align 1
  br label %223

223:                                              ; preds = %218, %211, %186
  %224 = phi i64 [ %222, %218 ], [ %217, %211 ], [ %169, %186 ]
  %225 = phi i8* [ %193, %218 ], [ %193, %211 ], [ %163, %186 ]
  %226 = and i32 %1, 2
  %227 = icmp ne i32 %226, 0
  %228 = load i8, i8* %10, align 1
  %229 = icmp eq i8 %228, 0
  %230 = and i1 %227, %229
  br i1 %230, label %231, label %232, !prof !11

231:                                              ; preds = %223
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %225, i8 0, i64 %224, i1 false) #12
  br label %232

232:                                              ; preds = %231, %223, %192
  %233 = phi i8* [ %225, %223 ], [ %225, %231 ], [ null, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #12
  store i8* %233, i8** %11, align 8
  br i1 %126, label %234, label %236

234:                                              ; preds = %232, %129
  %235 = phi i8* [ %130, %129 ], [ %233, %232 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %235, i64 %3, i8* %4) #12
  br label %236

236:                                              ; preds = %234, %232
  %237 = load i8*, i8** %11, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #12
  br label %847

238:                                              ; preds = %5
  %239 = icmp eq i64 %3, 0
  br i1 %239, label %240, label %372, !prof !6

240:                                              ; preds = %238
  %241 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %242 = and i8 %241, 1
  %243 = icmp eq i8 %242, 0
  br i1 %243, label %246, label %244

244:                                              ; preds = %240
  tail call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %2) #12
  %245 = tail call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %2) #12
  br i1 %245, label %847, label %246

246:                                              ; preds = %244, %240
  tail call void @llvm.prefetch(i8* nonnull %2, i32 0, i32 3, i32 1) #12
  %247 = ptrtoint i8* %2 to i64
  %248 = and i64 %247, -2097152
  %249 = or i64 %248, 4096
  %250 = inttoptr i64 %249 to i8*
  %251 = lshr i64 %247, 9
  %252 = and i64 %251, 4064
  %253 = getelementptr inbounds i8, i8* %250, i64 %252
  %254 = bitcast i8* %253 to %"struct.base::internal::PartitionPage.37"*
  %255 = getelementptr inbounds i8, i8* %253, i64 30
  %256 = load i8, i8* %255, align 2
  %257 = zext i8 %256 to i64
  %258 = sub nsw i64 0, %257
  %259 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %254, i64 %258, i32 0
  %260 = bitcast %union.anon.38* %259 to %"struct.base::internal::SlotSpanMetadata.19"*
  %261 = bitcast %union.anon.38* %259 to i8*
  tail call void @llvm.prefetch(i8* %261, i32 0, i32 3, i32 1) #12
  %262 = ptrtoint %union.anon.38* %259 to i64
  %263 = and i64 %262, -4096
  %264 = inttoptr i64 %263 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %265 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %264, i64 0, i32 0
  %266 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %265, align 4096
  %267 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %266, i64 0, i32 0
  %268 = load i8, i8* %267, align 8
  %269 = icmp eq i8 %268, 2
  br i1 %269, label %270, label %339, !prof !6

270:                                              ; preds = %246
  %271 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %272 = icmp eq i8 %271, 2
  br i1 %272, label %273, label %274, !prof !6

273:                                              ; preds = %270
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %274

274:                                              ; preds = %273, %270
  %275 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %254, i64 %258, i32 0, i32 1, i64 8
  %276 = bitcast i8* %275 to %"struct.base::internal::PartitionBucket.18"**
  %277 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %276, align 1
  %278 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %266, i64 0, i32 9, i64 0
  %279 = icmp ugt %"struct.base::internal::PartitionBucket.18"* %278, %277
  %280 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %266, i64 0, i32 10
  %281 = icmp ult %"struct.base::internal::PartitionBucket.18"* %280, %277
  %282 = or i1 %279, %281
  br i1 %282, label %339, label %283, !prof !6

283:                                              ; preds = %274
  %284 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %254, i64 %258, i32 0, i32 1, i64 21
  %285 = load i8, i8* %284, align 1, !range !5
  %286 = icmp eq i8 %285, 0
  br i1 %286, label %287, label %291, !prof !3

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %277, i64 0, i32 3
  %289 = load i32, i32* %288, align 8
  %290 = zext i32 %289 to i64
  br label %298

291:                                              ; preds = %283
  %292 = bitcast %union.anon.38* %259 to %"struct.base::internal::PartitionPage.37"*
  %293 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %292, i64 1, i32 0, i32 0, i32 0
  %294 = load i64, i64* %293, align 1
  %295 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %277, i64 0, i32 3
  %296 = load i32, i32* %295, align 8
  %297 = zext i32 %296 to i64
  br label %298

298:                                              ; preds = %291, %287
  %299 = phi i64 [ %290, %287 ], [ %297, %291 ]
  %300 = phi i64 [ %290, %287 ], [ %294, %291 ]
  %301 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %302 = inttoptr i64 %248 to i8*
  %303 = and i64 %301, 1
  %304 = icmp eq i64 %303, 0
  %305 = select i1 %304, i64 16384, i64 32768
  %306 = getelementptr inbounds i8, i8* %302, i64 %305
  %307 = bitcast i8* %306 to %"class.base::internal::ObjectBitmap"*
  %308 = lshr i64 %247, 4
  %309 = lshr i64 %247, 10
  %310 = and i64 %309, 2047
  %311 = and i64 %308, 63
  %312 = shl i64 1, %311
  %313 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %307, i64 0, i32 0, i32 0, i64 %310
  %314 = atomicrmw or i64* %313, i64 %312 monotonic
  %315 = and i64 %314, %312
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %318, label %317, !prof !3

317:                                              ; preds = %298
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

318:                                              ; preds = %298
  %319 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %299 monotonic
  %320 = add i64 %319, %299
  %321 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %322 = icmp ugt i64 %320, %321
  br i1 %322, label %323, label %329

323:                                              ; preds = %318
  %324 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %325 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %324 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %326 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %325, align 8
  %327 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %326, align 8
  %328 = tail call zeroext i1 %327(%"class.base::internal::PCScanSchedulingBackend"* %324) #12
  br label %329

329:                                              ; preds = %323, %318
  %330 = phi i1 [ false, %318 ], [ %328, %323 ]
  %331 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %332 = icmp eq i8 %331, 1
  br i1 %332, label %333, label %334

333:                                              ; preds = %329
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 %300, i1 false) #12
  br label %334

334:                                              ; preds = %333, %329
  br i1 %330, label %335, label %847, !prof !6

335:                                              ; preds = %334
  %336 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %337 = icmp eq i8 %336, 0
  br i1 %337, label %338, label %847

338:                                              ; preds = %335
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %847

339:                                              ; preds = %274, %246
  %340 = bitcast %"struct.base::internal::DeferredUnmap"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %340) #12
  %341 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %9, i64 0, i32 0
  %342 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %9, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 0, i64 16, i1 false) #12
  %343 = bitcast %union.anon.38* %259 to i8**
  %344 = load i8*, i8** %343, align 1
  %345 = icmp eq i8* %344, %2
  br i1 %345, label %348, label %346, !prof !6

346:                                              ; preds = %339
  %347 = ptrtoint i8* %344 to i64
  br label %351

348:                                              ; preds = %339
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %349 = getelementptr inbounds %union.anon.38, %union.anon.38* %259, i64 0, i32 0, i32 0
  %350 = load i64, i64* %349, align 1
  br label %351

351:                                              ; preds = %348, %346
  %352 = phi i64 [ %347, %346 ], [ %350, %348 ]
  %353 = tail call i64 @llvm.bswap.i64(i64 %352) #12
  %354 = inttoptr i64 %353 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %355 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %354, %"struct.base::internal::EncodedPartitionFreelistEntry"** %355, align 8
  %356 = xor i64 %353, -1
  %357 = getelementptr inbounds i8, i8* %2, i64 8
  %358 = bitcast i8* %357 to i64*
  store i64 %356, i64* %358, align 8
  store i8* %2, i8** %343, align 1
  %359 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %254, i64 %258, i32 0, i32 1, i64 16
  %360 = bitcast i8* %359 to i16*
  %361 = load i16, i16* %360, align 1
  %362 = add i16 %361, -1
  store i16 %362, i16* %360, align 1
  %363 = icmp slt i16 %362, 1
  br i1 %363, label %365, label %364, !prof !6

364:                                              ; preds = %351
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %340, i8 0, i64 16, i1 false) #12
  br label %371

365:                                              ; preds = %351
  %366 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %260) #12
  %367 = extractvalue { i8*, i64 } %366, 0
  %368 = extractvalue { i8*, i64 } %366, 1
  store i8* %367, i8** %341, align 8
  store i64 %368, i64* %342, align 8
  %369 = icmp eq i8* %367, null
  br i1 %369, label %371, label %370, !prof !3

370:                                              ; preds = %365
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %9) #12
  br label %371

371:                                              ; preds = %370, %365, %364
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %340) #12
  br label %847

372:                                              ; preds = %238
  %373 = icmp ugt i64 %3, 2145386496
  br i1 %373, label %374, label %378

374:                                              ; preds = %372
  %375 = and i32 %1, 1
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %847

377:                                              ; preds = %374
  tail call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

378:                                              ; preds = %372
  %379 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %380 = and i8 %379, 1
  %381 = icmp ne i8 %380, 0
  %382 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %382) #12
  store i64 -6148914691236517206, i64* %14, align 8
  %383 = xor i1 %16, true
  %384 = and i1 %381, %383
  br i1 %384, label %385, label %387, !prof !6

385:                                              ; preds = %378
  %386 = call zeroext i1 @_ZN4base19PartitionAllocHooks28ReallocOverrideHookIfEnabledEPmPv(i64* nonnull %14, i8* nonnull %2) #12
  br i1 %386, label %483, label %387, !prof !6

387:                                              ; preds = %385, %378
  %388 = ptrtoint i8* %2 to i64
  %389 = and i64 %388, -2097152
  %390 = or i64 %389, 4096
  %391 = inttoptr i64 %390 to i8*
  %392 = lshr i64 %388, 9
  %393 = and i64 %392, 4064
  %394 = getelementptr inbounds i8, i8* %391, i64 %393
  %395 = bitcast i8* %394 to %"struct.base::internal::PartitionPage.37"*
  %396 = getelementptr inbounds i8, i8* %394, i64 30
  %397 = load i8, i8* %396, align 2
  %398 = zext i8 %397 to i64
  %399 = sub nsw i64 0, %398
  %400 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %395, i64 %399, i32 0
  %401 = bitcast %union.anon.38* %400 to %"struct.base::internal::SlotSpanMetadata.19"*
  %402 = ptrtoint %union.anon.38* %400 to i64
  %403 = and i64 %402, -4096
  %404 = inttoptr i64 %403 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %405 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %404, i64 0, i32 0
  %406 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %405, align 4096
  %407 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %395, i64 %399, i32 0, i32 1, i64 21
  %408 = load i8, i8* %407, align 1, !range !5
  %409 = icmp eq i8 %408, 0
  br i1 %409, label %410, label %417, !prof !3

410:                                              ; preds = %387
  %411 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %395, i64 %399, i32 0, i32 1, i64 8
  %412 = bitcast i8* %411 to %"struct.base::internal::PartitionBucket.18"**
  %413 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %412, align 1
  %414 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %413, i64 0, i32 3
  %415 = load i32, i32* %414, align 8
  %416 = zext i32 %415 to i64
  br label %421

417:                                              ; preds = %387
  %418 = bitcast %union.anon.38* %400 to %"struct.base::internal::PartitionPage.37"*
  %419 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %418, i64 1, i32 0, i32 0, i32 0
  %420 = load i64, i64* %419, align 1
  br label %421

421:                                              ; preds = %410, %417
  %422 = phi i64 [ %416, %410 ], [ %420, %417 ]
  store i64 %422, i64* %14, align 8
  %423 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %395, i64 %399, i32 0, i32 1, i64 8
  %424 = bitcast i8* %423 to %"struct.base::internal::PartitionBucket.18"**
  %425 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %424, align 1
  %426 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %425, i64 0, i32 4
  %427 = load i32, i32* %426, align 4
  %428 = and i32 %427, 255
  %429 = icmp eq i32 %428, 0
  br i1 %429, label %430, label %434, !prof !6

430:                                              ; preds = %421
  %431 = call zeroext i1 @_ZN4base13PartitionRootILb0EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb0EEEm(%"struct.base::PartitionRoot.16"* %406, %"struct.base::internal::SlotSpanMetadata.19"* %401, i64 %3)
  br i1 %431, label %432, label %434

432:                                              ; preds = %430
  br i1 %384, label %433, label %845

433:                                              ; preds = %432
  call void @_ZN4base19PartitionAllocHooks28ReallocObserverHookIfEnabledEPvS1_mPKc(i8* nonnull %2, i8* nonnull %2, i64 %3, i8* %4) #12
  br label %845

434:                                              ; preds = %421, %430
  %435 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %436 = sub nuw nsw i64 64, %435
  %437 = and i64 %436, 255
  %438 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %437
  %439 = load i8, i8* %438, align 1
  %440 = zext i8 %439 to i64
  %441 = lshr i64 %3, %440
  %442 = and i64 %441, 7
  %443 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %437
  %444 = load i64, i64* %443, align 8
  %445 = and i64 %444, %3
  %446 = shl nuw nsw i64 %437, 3
  %447 = or i64 %442, %446
  %448 = icmp ne i64 %445, 0
  %449 = zext i1 %448 to i64
  %450 = add nuw nsw i64 %447, %449
  %451 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %450
  %452 = load i16, i16* %451, align 2
  %453 = zext i16 %452 to i64
  %454 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %406, i64 0, i32 9, i64 %453, i32 4
  %455 = load i32, i32* %454, align 4
  %456 = and i32 %455, 255
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %462, label %458, !prof !6

458:                                              ; preds = %434
  %459 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %406, i64 0, i32 9, i64 %453, i32 3
  %460 = load i32, i32* %459, align 8
  %461 = zext i32 %460 to i64
  br label %465

462:                                              ; preds = %434
  %463 = add nuw nsw i64 %3, 4095
  %464 = and i64 %463, -4096
  br label %465

465:                                              ; preds = %462, %458
  %466 = phi i64 [ %461, %458 ], [ %464, %462 ]
  %467 = load i8, i8* %396, align 2
  %468 = zext i8 %467 to i64
  %469 = sub nsw i64 0, %468
  %470 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %395, i64 %469, i32 0, i32 1, i64 8
  %471 = bitcast i8* %470 to %"struct.base::internal::PartitionBucket.18"**
  %472 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %471, align 1
  %473 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %472, i64 0, i32 3
  %474 = load i32, i32* %473, align 8
  %475 = zext i32 %474 to i64
  %476 = icmp eq i64 %466, %475
  br i1 %476, label %477, label %483

477:                                              ; preds = %465
  %478 = load i8, i8* %407, align 1, !range !5
  %479 = icmp eq i8 %478, 0
  br i1 %479, label %845, label %480

480:                                              ; preds = %477
  %481 = bitcast %union.anon.38* %400 to %"struct.base::internal::PartitionPage.37"*
  %482 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %481, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %482, align 1
  br label %845

483:                                              ; preds = %385, %465
  br i1 %16, label %484, label %587

484:                                              ; preds = %483
  %485 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %486 = sub nuw nsw i64 64, %485
  %487 = and i64 %486, 255
  %488 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %487
  %489 = load i8, i8* %488, align 1
  %490 = zext i8 %489 to i64
  %491 = lshr i64 %3, %490
  %492 = and i64 %491, 7
  %493 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %487
  %494 = load i64, i64* %493, align 8
  %495 = and i64 %494, %3
  %496 = shl nuw nsw i64 %487, 3
  %497 = or i64 %492, %496
  %498 = icmp ne i64 %495, 0
  %499 = zext i1 %498 to i64
  %500 = add nuw nsw i64 %497, %499
  %501 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %500
  %502 = load i16, i16* %501, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #12
  store i8 0, i8* %8, align 1
  %503 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %504 = load i8, i8* %503, align 8
  %505 = icmp eq i8 %504, 2
  br i1 %505, label %506, label %510

506:                                              ; preds = %484
  %507 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %508 = icmp eq i8 %507, 2
  br i1 %508, label %509, label %510, !prof !6

509:                                              ; preds = %506
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %510

510:                                              ; preds = %509, %506, %484
  %511 = zext i16 %502 to i64
  %512 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %511
  %513 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %512, i64 0, i32 0
  %514 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %513, align 8
  %515 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %514 to i8**
  %516 = load i8*, i8** %515, align 1
  %517 = icmp eq i8* %516, null
  br i1 %517, label %545, label %518, !prof !6

518:                                              ; preds = %510
  %519 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %514, i64 0, i32 0
  store i8 0, i8* %8, align 1
  %520 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %511, i32 3
  %521 = load i32, i32* %520, align 8
  %522 = zext i32 %521 to i64
  %523 = bitcast i8* %516 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %524 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %523, align 8
  %525 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %524, null
  %526 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %524 to i64
  br i1 %525, label %527, label %529

527:                                              ; preds = %518
  %528 = call i64 @llvm.bswap.i64(i64 %526) #12
  br label %539

529:                                              ; preds = %518
  %530 = xor i64 %526, -1
  %531 = getelementptr inbounds i8, i8* %516, i64 8
  %532 = bitcast i8* %531 to i64*
  %533 = load i64, i64* %532, align 8
  %534 = icmp eq i64 %533, %530
  br i1 %534, label %536, label %535, !prof !3

535:                                              ; preds = %529
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

536:                                              ; preds = %529
  %537 = call i64 @llvm.bswap.i64(i64 %526) #12
  %538 = inttoptr i64 %537 to i8*
  call void @llvm.prefetch(i8* nonnull %538, i32 0, i32 3, i32 1) #12
  br label %539

539:                                              ; preds = %536, %527
  %540 = phi i64 [ %528, %527 ], [ %537, %536 ]
  %541 = inttoptr i64 %540 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %541, %"class.base::internal::PartitionFreelistEntry"** %519, align 1
  %542 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %514, i64 0, i32 3
  %543 = load i16, i16* %542, align 1
  %544 = add i16 %543, 1
  store i16 %544, i16* %542, align 1
  br label %576

545:                                              ; preds = %510
  %546 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %512, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %8) #12
  %547 = icmp eq i8* %546, null
  br i1 %547, label %585, label %548, !prof !6

548:                                              ; preds = %545
  %549 = ptrtoint i8* %546 to i64
  %550 = and i64 %549, -2097152
  %551 = or i64 %550, 4096
  %552 = inttoptr i64 %551 to i8*
  %553 = lshr i64 %549, 9
  %554 = and i64 %553, 4064
  %555 = getelementptr inbounds i8, i8* %552, i64 %554
  %556 = bitcast i8* %555 to %"struct.base::internal::PartitionPage.37"*
  %557 = getelementptr inbounds i8, i8* %555, i64 30
  %558 = load i8, i8* %557, align 2
  %559 = zext i8 %558 to i64
  %560 = sub nsw i64 0, %559
  %561 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %556, i64 %560, i32 0, i32 1, i64 21
  %562 = load i8, i8* %561, align 1, !range !5
  %563 = icmp eq i8 %562, 0
  br i1 %563, label %564, label %571, !prof !3

564:                                              ; preds = %548
  %565 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %556, i64 %560, i32 0, i32 1, i64 8
  %566 = bitcast i8* %565 to %"struct.base::internal::PartitionBucket.18"**
  %567 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %566, align 1
  %568 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %567, i64 0, i32 3
  %569 = load i32, i32* %568, align 8
  %570 = zext i32 %569 to i64
  br label %576

571:                                              ; preds = %548
  %572 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %556, i64 %560, i32 0
  %573 = bitcast %union.anon.38* %572 to %"struct.base::internal::PartitionPage.37"*
  %574 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %573, i64 1, i32 0, i32 0, i32 0
  %575 = load i64, i64* %574, align 1
  br label %576

576:                                              ; preds = %571, %564, %539
  %577 = phi i64 [ %575, %571 ], [ %570, %564 ], [ %522, %539 ]
  %578 = phi i8* [ %546, %571 ], [ %546, %564 ], [ %516, %539 ]
  %579 = and i32 %1, 2
  %580 = icmp ne i32 %579, 0
  %581 = load i8, i8* %8, align 1
  %582 = icmp eq i8 %581, 0
  %583 = and i1 %580, %582
  br i1 %583, label %584, label %585, !prof !11

584:                                              ; preds = %576
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %578, i8 0, i64 %577, i1 false) #12
  br label %585

585:                                              ; preds = %545, %576, %584
  %586 = phi i8* [ %578, %576 ], [ %578, %584 ], [ null, %545 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #12
  br label %703

587:                                              ; preds = %483
  %588 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %588) #12
  store i8* null, i8** %7, align 8
  %589 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %590 = and i8 %589, 1
  %591 = icmp ne i8 %590, 0
  br i1 %591, label %592, label %596, !prof !6

592:                                              ; preds = %587
  %593 = call zeroext i1 @_ZN4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %7, i32 %1, i64 %3, i8* %4) #12
  br i1 %593, label %594, label %596

594:                                              ; preds = %592
  %595 = load i8*, i8** %7, align 8
  br label %699

596:                                              ; preds = %592, %587
  %597 = call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %598 = sub nuw nsw i64 64, %597
  %599 = and i64 %598, 255
  %600 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %599
  %601 = load i8, i8* %600, align 1
  %602 = zext i8 %601 to i64
  %603 = lshr i64 %3, %602
  %604 = and i64 %603, 7
  %605 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %599
  %606 = load i64, i64* %605, align 8
  %607 = and i64 %606, %3
  %608 = shl nuw nsw i64 %599, 3
  %609 = or i64 %604, %608
  %610 = icmp ne i64 %607, 0
  %611 = zext i1 %610 to i64
  %612 = add nuw nsw i64 %609, %611
  %613 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %612
  %614 = load i16, i16* %613, align 2
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #12
  store i8 0, i8* %6, align 1
  %615 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %616 = load i8, i8* %615, align 8
  %617 = icmp eq i8 %616, 2
  br i1 %617, label %618, label %622

618:                                              ; preds = %596
  %619 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %620 = icmp eq i8 %619, 2
  br i1 %620, label %621, label %622, !prof !6

621:                                              ; preds = %618
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %622

622:                                              ; preds = %621, %618, %596
  %623 = zext i16 %614 to i64
  %624 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %623
  %625 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %624, i64 0, i32 0
  %626 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %625, align 8
  %627 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %626 to i8**
  %628 = load i8*, i8** %627, align 1
  %629 = icmp eq i8* %628, null
  br i1 %629, label %657, label %630, !prof !6

630:                                              ; preds = %622
  %631 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %626, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %632 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %623, i32 3
  %633 = load i32, i32* %632, align 8
  %634 = zext i32 %633 to i64
  %635 = bitcast i8* %628 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  %636 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %635, align 8
  %637 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %636, null
  %638 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %636 to i64
  br i1 %637, label %639, label %641

639:                                              ; preds = %630
  %640 = call i64 @llvm.bswap.i64(i64 %638) #12
  br label %651

641:                                              ; preds = %630
  %642 = xor i64 %638, -1
  %643 = getelementptr inbounds i8, i8* %628, i64 8
  %644 = bitcast i8* %643 to i64*
  %645 = load i64, i64* %644, align 8
  %646 = icmp eq i64 %645, %642
  br i1 %646, label %648, label %647, !prof !3

647:                                              ; preds = %641
  call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

648:                                              ; preds = %641
  %649 = call i64 @llvm.bswap.i64(i64 %638) #12
  %650 = inttoptr i64 %649 to i8*
  call void @llvm.prefetch(i8* nonnull %650, i32 0, i32 3, i32 1) #12
  br label %651

651:                                              ; preds = %648, %639
  %652 = phi i64 [ %640, %639 ], [ %649, %648 ]
  %653 = inttoptr i64 %652 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %653, %"class.base::internal::PartitionFreelistEntry"** %631, align 1
  %654 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %626, i64 0, i32 3
  %655 = load i16, i16* %654, align 1
  %656 = add i16 %655, 1
  store i16 %656, i16* %654, align 1
  br label %688

657:                                              ; preds = %622
  %658 = call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %624, %"struct.base::PartitionRoot.16"* %0, i32 %1, i64 %3, i64 16384, i8* nonnull %6) #12
  %659 = icmp eq i8* %658, null
  br i1 %659, label %697, label %660, !prof !6

660:                                              ; preds = %657
  %661 = ptrtoint i8* %658 to i64
  %662 = and i64 %661, -2097152
  %663 = or i64 %662, 4096
  %664 = inttoptr i64 %663 to i8*
  %665 = lshr i64 %661, 9
  %666 = and i64 %665, 4064
  %667 = getelementptr inbounds i8, i8* %664, i64 %666
  %668 = bitcast i8* %667 to %"struct.base::internal::PartitionPage.37"*
  %669 = getelementptr inbounds i8, i8* %667, i64 30
  %670 = load i8, i8* %669, align 2
  %671 = zext i8 %670 to i64
  %672 = sub nsw i64 0, %671
  %673 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %668, i64 %672, i32 0, i32 1, i64 21
  %674 = load i8, i8* %673, align 1, !range !5
  %675 = icmp eq i8 %674, 0
  br i1 %675, label %676, label %683, !prof !3

676:                                              ; preds = %660
  %677 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %668, i64 %672, i32 0, i32 1, i64 8
  %678 = bitcast i8* %677 to %"struct.base::internal::PartitionBucket.18"**
  %679 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %678, align 1
  %680 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %679, i64 0, i32 3
  %681 = load i32, i32* %680, align 8
  %682 = zext i32 %681 to i64
  br label %688

683:                                              ; preds = %660
  %684 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %668, i64 %672, i32 0
  %685 = bitcast %union.anon.38* %684 to %"struct.base::internal::PartitionPage.37"*
  %686 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %685, i64 1, i32 0, i32 0, i32 0
  %687 = load i64, i64* %686, align 1
  br label %688

688:                                              ; preds = %683, %676, %651
  %689 = phi i64 [ %687, %683 ], [ %682, %676 ], [ %634, %651 ]
  %690 = phi i8* [ %658, %683 ], [ %658, %676 ], [ %628, %651 ]
  %691 = and i32 %1, 2
  %692 = icmp ne i32 %691, 0
  %693 = load i8, i8* %6, align 1
  %694 = icmp eq i8 %693, 0
  %695 = and i1 %692, %694
  br i1 %695, label %696, label %697, !prof !11

696:                                              ; preds = %688
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %690, i8 0, i64 %689, i1 false) #12
  br label %697

697:                                              ; preds = %696, %688, %657
  %698 = phi i8* [ %690, %688 ], [ %690, %696 ], [ null, %657 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #12
  store i8* %698, i8** %7, align 8
  br i1 %591, label %699, label %701

699:                                              ; preds = %697, %594
  %700 = phi i8* [ %595, %594 ], [ %698, %697 ]
  call void @_ZN4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %700, i64 %3, i8* %4) #12
  br label %701

701:                                              ; preds = %699, %697
  %702 = load i8*, i8** %7, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %588) #12
  br label %703

703:                                              ; preds = %701, %585
  %704 = phi i8* [ %586, %585 ], [ %702, %701 ]
  %705 = icmp eq i8* %704, null
  br i1 %705, label %706, label %710

706:                                              ; preds = %703
  %707 = and i32 %1, 1
  %708 = icmp eq i32 %707, 0
  br i1 %708, label %709, label %845

709:                                              ; preds = %706
  call void @_ZN4base8internal32PartitionExcessiveAllocationSizeEm(i64 %3) #14
  unreachable

710:                                              ; preds = %703
  %711 = load i64, i64* %14, align 8
  %712 = icmp ugt i64 %711, %3
  %713 = select i1 %712, i64 %3, i64 %711
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %704, i8* nonnull align 1 %2, i64 %713, i1 false)
  %714 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %715 = and i8 %714, 1
  %716 = icmp eq i8 %715, 0
  br i1 %716, label %719, label %717

717:                                              ; preds = %710
  call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %2) #12
  %718 = call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %2) #12
  br i1 %718, label %845, label %719

719:                                              ; preds = %717, %710
  call void @llvm.prefetch(i8* nonnull %2, i32 0, i32 3, i32 1) #12
  %720 = ptrtoint i8* %2 to i64
  %721 = and i64 %720, -2097152
  %722 = or i64 %721, 4096
  %723 = inttoptr i64 %722 to i8*
  %724 = lshr i64 %720, 9
  %725 = and i64 %724, 4064
  %726 = getelementptr inbounds i8, i8* %723, i64 %725
  %727 = bitcast i8* %726 to %"struct.base::internal::PartitionPage.37"*
  %728 = getelementptr inbounds i8, i8* %726, i64 30
  %729 = load i8, i8* %728, align 2
  %730 = zext i8 %729 to i64
  %731 = sub nsw i64 0, %730
  %732 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %727, i64 %731, i32 0
  %733 = bitcast %union.anon.38* %732 to %"struct.base::internal::SlotSpanMetadata.19"*
  %734 = bitcast %union.anon.38* %732 to i8*
  call void @llvm.prefetch(i8* %734, i32 0, i32 3, i32 1) #12
  %735 = ptrtoint %union.anon.38* %732 to i64
  %736 = and i64 %735, -4096
  %737 = inttoptr i64 %736 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %738 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %737, i64 0, i32 0
  %739 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %738, align 4096
  %740 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %739, i64 0, i32 0
  %741 = load i8, i8* %740, align 8
  %742 = icmp eq i8 %741, 2
  br i1 %742, label %743, label %812, !prof !6

743:                                              ; preds = %719
  %744 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %745 = icmp eq i8 %744, 2
  br i1 %745, label %746, label %747, !prof !6

746:                                              ; preds = %743
  call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %747

747:                                              ; preds = %746, %743
  %748 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %727, i64 %731, i32 0, i32 1, i64 8
  %749 = bitcast i8* %748 to %"struct.base::internal::PartitionBucket.18"**
  %750 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %749, align 1
  %751 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %739, i64 0, i32 9, i64 0
  %752 = icmp ugt %"struct.base::internal::PartitionBucket.18"* %751, %750
  %753 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %739, i64 0, i32 10
  %754 = icmp ult %"struct.base::internal::PartitionBucket.18"* %753, %750
  %755 = or i1 %752, %754
  br i1 %755, label %812, label %756, !prof !6

756:                                              ; preds = %747
  %757 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %727, i64 %731, i32 0, i32 1, i64 21
  %758 = load i8, i8* %757, align 1, !range !5
  %759 = icmp eq i8 %758, 0
  br i1 %759, label %760, label %764, !prof !3

760:                                              ; preds = %756
  %761 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %750, i64 0, i32 3
  %762 = load i32, i32* %761, align 8
  %763 = zext i32 %762 to i64
  br label %771

764:                                              ; preds = %756
  %765 = bitcast %union.anon.38* %732 to %"struct.base::internal::PartitionPage.37"*
  %766 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %765, i64 1, i32 0, i32 0, i32 0
  %767 = load i64, i64* %766, align 1
  %768 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %750, i64 0, i32 3
  %769 = load i32, i32* %768, align 8
  %770 = zext i32 %769 to i64
  br label %771

771:                                              ; preds = %764, %760
  %772 = phi i64 [ %763, %760 ], [ %770, %764 ]
  %773 = phi i64 [ %763, %760 ], [ %767, %764 ]
  %774 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %775 = inttoptr i64 %721 to i8*
  %776 = and i64 %774, 1
  %777 = icmp eq i64 %776, 0
  %778 = select i1 %777, i64 16384, i64 32768
  %779 = getelementptr inbounds i8, i8* %775, i64 %778
  %780 = bitcast i8* %779 to %"class.base::internal::ObjectBitmap"*
  %781 = lshr i64 %720, 4
  %782 = lshr i64 %720, 10
  %783 = and i64 %782, 2047
  %784 = and i64 %781, 63
  %785 = shl i64 1, %784
  %786 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %780, i64 0, i32 0, i32 0, i64 %783
  %787 = atomicrmw or i64* %786, i64 %785 monotonic
  %788 = and i64 %787, %785
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %791, label %790, !prof !3

790:                                              ; preds = %771
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

791:                                              ; preds = %771
  %792 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %772 monotonic
  %793 = add i64 %792, %772
  %794 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %795 = icmp ugt i64 %793, %794
  br i1 %795, label %796, label %802

796:                                              ; preds = %791
  %797 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %798 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %797 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %799 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %798, align 8
  %800 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %799, align 8
  %801 = call zeroext i1 %800(%"class.base::internal::PCScanSchedulingBackend"* %797) #12
  br label %802

802:                                              ; preds = %796, %791
  %803 = phi i1 [ false, %791 ], [ %801, %796 ]
  %804 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %805 = icmp eq i8 %804, 1
  br i1 %805, label %806, label %807

806:                                              ; preds = %802
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %2, i8 0, i64 %773, i1 false) #12
  br label %807

807:                                              ; preds = %806, %802
  br i1 %803, label %808, label %845, !prof !6

808:                                              ; preds = %807
  %809 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %810 = icmp eq i8 %809, 0
  br i1 %810, label %811, label %845

811:                                              ; preds = %808
  call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %845

812:                                              ; preds = %747, %719
  %813 = bitcast %"struct.base::internal::DeferredUnmap"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %813) #12
  %814 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %13, i64 0, i32 0
  %815 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %13, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %813, i8 0, i64 16, i1 false) #12
  %816 = bitcast %union.anon.38* %732 to i8**
  %817 = load i8*, i8** %816, align 1
  %818 = icmp eq i8* %817, %2
  br i1 %818, label %821, label %819, !prof !6

819:                                              ; preds = %812
  %820 = ptrtoint i8* %817 to i64
  br label %824

821:                                              ; preds = %812
  call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %822 = getelementptr inbounds %union.anon.38, %union.anon.38* %732, i64 0, i32 0, i32 0
  %823 = load i64, i64* %822, align 1
  br label %824

824:                                              ; preds = %821, %819
  %825 = phi i64 [ %820, %819 ], [ %823, %821 ]
  %826 = call i64 @llvm.bswap.i64(i64 %825) #12
  %827 = inttoptr i64 %826 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %828 = bitcast i8* %2 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %827, %"struct.base::internal::EncodedPartitionFreelistEntry"** %828, align 8
  %829 = xor i64 %826, -1
  %830 = getelementptr inbounds i8, i8* %2, i64 8
  %831 = bitcast i8* %830 to i64*
  store i64 %829, i64* %831, align 8
  store i8* %2, i8** %816, align 1
  %832 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %727, i64 %731, i32 0, i32 1, i64 16
  %833 = bitcast i8* %832 to i16*
  %834 = load i16, i16* %833, align 1
  %835 = add i16 %834, -1
  store i16 %835, i16* %833, align 1
  %836 = icmp slt i16 %835, 1
  br i1 %836, label %838, label %837, !prof !6

837:                                              ; preds = %824
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %813, i8 0, i64 16, i1 false) #12
  br label %844

838:                                              ; preds = %824
  %839 = call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %733) #12
  %840 = extractvalue { i8*, i64 } %839, 0
  %841 = extractvalue { i8*, i64 } %839, 1
  store i8* %840, i8** %814, align 8
  store i64 %841, i64* %815, align 8
  %842 = icmp eq i8* %840, null
  br i1 %842, label %844, label %843, !prof !3

843:                                              ; preds = %838
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %13) #12
  br label %844

844:                                              ; preds = %843, %838, %837
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %813) #12
  br label %845

845:                                              ; preds = %477, %480, %844, %811, %808, %807, %717, %432, %706, %433
  %846 = phi i8* [ %2, %433 ], [ null, %706 ], [ %2, %432 ], [ %704, %717 ], [ %704, %807 ], [ %704, %808 ], [ %704, %811 ], [ %704, %844 ], [ %2, %480 ], [ %2, %477 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %382) #12
  br label %847

847:                                              ; preds = %371, %338, %335, %334, %244, %374, %120, %236, %845
  %848 = phi i8* [ %846, %845 ], [ %121, %120 ], [ %237, %236 ], [ null, %374 ], [ null, %244 ], [ null, %334 ], [ null, %335 ], [ null, %338 ], [ null, %371 ]
  ret i8* %848
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE10TryReallocEPvmPKc(%"struct.base::PartitionRoot.16"*, i8*, i64, i8*) local_unnamed_addr #3 comdat align 2 {
  %5 = tail call i8* @_ZN4base13PartitionRootILb0EE12ReallocFlagsEiPvmPKc(%"struct.base::PartitionRoot.16"* %0, i32 1, i8* %1, i64 %2, i8* %3)
  ret i8* %5
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE4FreeEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %136, label %4, !prof !6

4:                                                ; preds = %1
  %5 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.11", %"struct.std::__1::atomic.11"* @_ZN4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %6 = and i8 %5, 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  tail call void @_ZN4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %0) #12
  %9 = tail call zeroext i1 @_ZN4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %0) #12
  br i1 %9, label %136, label %10

10:                                               ; preds = %4, %8
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1) #12
  %11 = ptrtoint i8* %0 to i64
  %12 = and i64 %11, -2097152
  %13 = or i64 %12, 4096
  %14 = inttoptr i64 %13 to i8*
  %15 = lshr i64 %11, 9
  %16 = and i64 %15, 4064
  %17 = getelementptr inbounds i8, i8* %14, i64 %16
  %18 = bitcast i8* %17 to %"struct.base::internal::PartitionPage.37"*
  %19 = getelementptr inbounds i8, i8* %17, i64 30
  %20 = load i8, i8* %19, align 2
  %21 = zext i8 %20 to i64
  %22 = sub nsw i64 0, %21
  %23 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %18, i64 %22, i32 0
  %24 = bitcast %union.anon.38* %23 to %"struct.base::internal::SlotSpanMetadata.19"*
  %25 = bitcast %union.anon.38* %23 to i8*
  tail call void @llvm.prefetch(i8* %25, i32 0, i32 3, i32 1) #12
  %26 = ptrtoint %union.anon.38* %23 to i64
  %27 = and i64 %26, -4096
  %28 = inttoptr i64 %27 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %29 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %28, i64 0, i32 0
  %30 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %29, align 4096
  %31 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %30, i64 0, i32 0
  %32 = load i8, i8* %31, align 8
  %33 = icmp eq i8 %32, 2
  br i1 %33, label %34, label %103, !prof !6

34:                                               ; preds = %10
  %35 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %36 = icmp eq i8 %35, 2
  br i1 %36, label %37, label %38, !prof !6

37:                                               ; preds = %34
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %38

38:                                               ; preds = %37, %34
  %39 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %18, i64 %22, i32 0, i32 1, i64 8
  %40 = bitcast i8* %39 to %"struct.base::internal::PartitionBucket.18"**
  %41 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %40, align 1
  %42 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %30, i64 0, i32 9, i64 0
  %43 = icmp ugt %"struct.base::internal::PartitionBucket.18"* %42, %41
  %44 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %30, i64 0, i32 10
  %45 = icmp ult %"struct.base::internal::PartitionBucket.18"* %44, %41
  %46 = or i1 %43, %45
  br i1 %46, label %103, label %47, !prof !6

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %18, i64 %22, i32 0, i32 1, i64 21
  %49 = load i8, i8* %48, align 1, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55, !prof !3

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %41, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = zext i32 %53 to i64
  br label %62

55:                                               ; preds = %47
  %56 = bitcast %union.anon.38* %23 to %"struct.base::internal::PartitionPage.37"*
  %57 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %56, i64 1, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 1
  %59 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %41, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = zext i32 %60 to i64
  br label %62

62:                                               ; preds = %55, %51
  %63 = phi i64 [ %54, %51 ], [ %61, %55 ]
  %64 = phi i64 [ %54, %51 ], [ %58, %55 ]
  %65 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %66 = inttoptr i64 %12 to i8*
  %67 = and i64 %65, 1
  %68 = icmp eq i64 %67, 0
  %69 = select i1 %68, i64 16384, i64 32768
  %70 = getelementptr inbounds i8, i8* %66, i64 %69
  %71 = bitcast i8* %70 to %"class.base::internal::ObjectBitmap"*
  %72 = lshr i64 %11, 4
  %73 = lshr i64 %11, 10
  %74 = and i64 %73, 2047
  %75 = and i64 %72, 63
  %76 = shl i64 1, %75
  %77 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %71, i64 0, i32 0, i32 0, i64 %74
  %78 = atomicrmw or i64* %77, i64 %76 monotonic
  %79 = and i64 %78, %76
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %82, label %81, !prof !3

81:                                               ; preds = %62
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

82:                                               ; preds = %62
  %83 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %63 monotonic
  %84 = add i64 %83, %63
  %85 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %86 = icmp ugt i64 %84, %85
  br i1 %86, label %87, label %93

87:                                               ; preds = %82
  %88 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %89 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %88 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %90 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %89, align 8
  %91 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %90, align 8
  %92 = tail call zeroext i1 %91(%"class.base::internal::PCScanSchedulingBackend"* %88) #12
  br label %93

93:                                               ; preds = %87, %82
  %94 = phi i1 [ false, %82 ], [ %92, %87 ]
  %95 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %96 = icmp eq i8 %95, 1
  br i1 %96, label %97, label %98

97:                                               ; preds = %93
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %64, i1 false) #12
  br label %98

98:                                               ; preds = %97, %93
  br i1 %94, label %99, label %136, !prof !6

99:                                               ; preds = %98
  %100 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %102, label %136

102:                                              ; preds = %99
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %136

103:                                              ; preds = %38, %10
  %104 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %104) #12
  %105 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %106 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #12
  %107 = bitcast %union.anon.38* %23 to i8**
  %108 = load i8*, i8** %107, align 1
  %109 = icmp eq i8* %108, %0
  br i1 %109, label %112, label %110, !prof !6

110:                                              ; preds = %103
  %111 = ptrtoint i8* %108 to i64
  br label %115

112:                                              ; preds = %103
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %113 = getelementptr inbounds %union.anon.38, %union.anon.38* %23, i64 0, i32 0, i32 0
  %114 = load i64, i64* %113, align 1
  br label %115

115:                                              ; preds = %112, %110
  %116 = phi i64 [ %111, %110 ], [ %114, %112 ]
  %117 = tail call i64 @llvm.bswap.i64(i64 %116) #12
  %118 = inttoptr i64 %117 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %119 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %118, %"struct.base::internal::EncodedPartitionFreelistEntry"** %119, align 8
  %120 = xor i64 %117, -1
  %121 = getelementptr inbounds i8, i8* %0, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 %120, i64* %122, align 8
  store i8* %0, i8** %107, align 1
  %123 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %18, i64 %22, i32 0, i32 1, i64 16
  %124 = bitcast i8* %123 to i16*
  %125 = load i16, i16* %124, align 1
  %126 = add i16 %125, -1
  store i16 %126, i16* %124, align 1
  %127 = icmp slt i16 %126, 1
  br i1 %127, label %129, label %128, !prof !6

128:                                              ; preds = %115
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 16, i1 false) #12
  br label %135

129:                                              ; preds = %115
  %130 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %24) #12
  %131 = extractvalue { i8*, i64 } %130, 0
  %132 = extractvalue { i8*, i64 } %130, 1
  store i8* %131, i8** %105, align 8
  store i64 %132, i64* %106, align 8
  %133 = icmp eq i8* %131, null
  br i1 %133, label %135, label %134, !prof !3

134:                                              ; preds = %129
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #12
  br label %135

135:                                              ; preds = %134, %129, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %104) #12
  br label %136

136:                                              ; preds = %135, %102, %99, %98, %8, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb0EE26ReallocDirectMappedInPlaceEPNS_8internal16SlotSpanMetadataILb0EEEm(%"struct.base::PartitionRoot.16"*, %"struct.base::internal::SlotSpanMetadata.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4095
  %5 = and i64 %4, -4096
  %6 = icmp ult i64 %5, 983041
  br i1 %6, label %55, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 2
  %9 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %8, align 1
  %10 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %9, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = ptrtoint %"struct.base::internal::SlotSpanMetadata.19"* %1 to i64
  %14 = and i64 %13, 2097151
  %15 = add nuw nsw i64 %14, 36028797018959872
  %16 = lshr i64 %15, 5
  %17 = and i64 %13, -2097152
  %18 = shl i64 %16, 14
  %19 = add i64 %18, %17
  %20 = inttoptr i64 %19 to i8*
  %21 = icmp eq i64 %5, %12
  br i1 %21, label %49, label %22

22:                                               ; preds = %7
  %23 = icmp ult i64 %5, %12
  %24 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 -2, i32 5
  %25 = getelementptr inbounds i8, i8* %24, i64 160
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8
  br i1 %23, label %28, label %42

28:                                               ; preds = %22
  %29 = add i64 %2, 2117631
  %30 = and i64 %29, -2097152
  %31 = add i64 %30, -20480
  %32 = lshr exact i64 %31, 12
  %33 = mul nuw nsw i64 %32, 5
  %34 = lshr i64 %27, 12
  %35 = shl nuw nsw i64 %34, 2
  %36 = icmp ult i64 %33, %35
  br i1 %36, label %55, label %37

37:                                               ; preds = %28
  %38 = sub i64 %12, %5
  %39 = getelementptr inbounds i8, i8* %20, i64 %5
  tail call void @_ZN4base19DecommitSystemPagesEPvmNS_28PageAccessibilityDispositionE(i8* %39, i64 %38, i32 0) #12
  %40 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i64* %40, i64 %38 monotonic
  br label %49

42:                                               ; preds = %22
  %43 = icmp ugt i64 %5, %27
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = sub i64 %5, %12
  %46 = getelementptr inbounds i8, i8* %20, i64 %12
  tail call void @_ZN4base19RecommitSystemPagesEPvmNS_30PageAccessibilityConfigurationENS_28PageAccessibilityDispositionE(i8* %46, i64 %45, i32 2, i32 0) #12
  %47 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i64* %47, i64 %45 monotonic
  br label %49

49:                                               ; preds = %37, %44, %7
  %50 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %1 to %"struct.base::internal::PartitionPage.37"*
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %50, i64 1, i32 0, i32 0, i32 0
  store i64 %2, i64* %51, align 1
  %52 = trunc i64 %5 to i32
  %53 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %8, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %53, i64 0, i32 3
  store i32 %52, i32* %54, align 8
  br label %55

55:                                               ; preds = %49, %28, %42, %3
  %56 = phi i1 [ false, %3 ], [ true, %49 ], [ false, %28 ], [ false, %42 ]
  ret i1 %56
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZN4base13PartitionRootILb0EE17TryReallocInPlaceEPvPNS_8internal16SlotSpanMetadataILb0EEEm(%"struct.base::PartitionRoot.16"*, i8*, %"struct.base::internal::SlotSpanMetadata.19"*, i64) local_unnamed_addr #0 comdat align 2 {
  %5 = tail call i64 @llvm.ctlz.i64(i64 %3, i1 false) #12, !range !9
  %6 = sub nuw nsw i64 64, %5
  %7 = and i64 %6, 255
  %8 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %7
  %9 = load i8, i8* %8, align 1
  %10 = zext i8 %9 to i64
  %11 = lshr i64 %3, %10
  %12 = and i64 %11, 7
  %13 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %7
  %14 = load i64, i64* %13, align 8
  %15 = and i64 %14, %3
  %16 = shl nuw nsw i64 %7, 3
  %17 = or i64 %12, %16
  %18 = icmp ne i64 %15, 0
  %19 = zext i1 %18 to i64
  %20 = add nuw nsw i64 %17, %19
  %21 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %20
  %22 = load i16, i16* %21, align 2
  %23 = zext i16 %22 to i64
  %24 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %23, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = and i32 %25, 255
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28, !prof !6

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %23, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  br label %37

32:                                               ; preds = %4
  %33 = icmp ugt i64 %3, 2145386496
  br i1 %33, label %37, label %34

34:                                               ; preds = %32
  %35 = add nuw nsw i64 %3, 4095
  %36 = and i64 %35, -4096
  br label %37

37:                                               ; preds = %28, %32, %34
  %38 = phi i64 [ %31, %28 ], [ %3, %32 ], [ %36, %34 ]
  %39 = ptrtoint i8* %1 to i64
  %40 = and i64 %39, -2097152
  %41 = or i64 %40, 4096
  %42 = inttoptr i64 %41 to i8*
  %43 = lshr i64 %39, 9
  %44 = and i64 %43, 4064
  %45 = getelementptr inbounds i8, i8* %42, i64 %44
  %46 = bitcast i8* %45 to %"struct.base::internal::PartitionPage.37"*
  %47 = getelementptr inbounds i8, i8* %45, i64 30
  %48 = load i8, i8* %47, align 2
  %49 = zext i8 %48 to i64
  %50 = sub nsw i64 0, %49
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %46, i64 %50, i32 0, i32 1, i64 8
  %52 = bitcast i8* %51 to %"struct.base::internal::PartitionBucket.18"**
  %53 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %52, align 1
  %54 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %53, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = icmp eq i64 %38, %56
  br i1 %57, label %58, label %67

58:                                               ; preds = %37
  %59 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %2, i64 0, i32 6
  %60 = load i8, i8* %59, align 1, !range !5
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to %"struct.base::internal::PartitionPage.37"*
  %64 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %63, i64 1, i32 0, i32 0, i32 0
  store i64 %3, i64* %64, align 1
  br label %65

65:                                               ; preds = %58, %62
  %66 = icmp ne i8* %1, null
  br label %67

67:                                               ; preds = %37, %65
  %68 = phi i1 [ %66, %65 ], [ false, %37 ]
  ret i1 %68
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE11FreeNoHooksEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %3 = icmp eq i8* %0, null
  br i1 %3, label %130, label %4, !prof !6

4:                                                ; preds = %1
  tail call void @llvm.prefetch(i8* nonnull %0, i32 0, i32 3, i32 1)
  %5 = ptrtoint i8* %0 to i64
  %6 = and i64 %5, -2097152
  %7 = or i64 %6, 4096
  %8 = inttoptr i64 %7 to i8*
  %9 = lshr i64 %5, 9
  %10 = and i64 %9, 4064
  %11 = getelementptr inbounds i8, i8* %8, i64 %10
  %12 = bitcast i8* %11 to %"struct.base::internal::PartitionPage.37"*
  %13 = getelementptr inbounds i8, i8* %11, i64 30
  %14 = load i8, i8* %13, align 2
  %15 = zext i8 %14 to i64
  %16 = sub nsw i64 0, %15
  %17 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %12, i64 %16, i32 0
  %18 = bitcast %union.anon.38* %17 to %"struct.base::internal::SlotSpanMetadata.19"*
  %19 = bitcast %union.anon.38* %17 to i8*
  tail call void @llvm.prefetch(i8* %19, i32 0, i32 3, i32 1)
  %20 = ptrtoint %union.anon.38* %17 to i64
  %21 = and i64 %20, -4096
  %22 = inttoptr i64 %21 to %"struct.base::internal::PartitionSuperPageExtentEntry.20"*
  %23 = getelementptr inbounds %"struct.base::internal::PartitionSuperPageExtentEntry.20", %"struct.base::internal::PartitionSuperPageExtentEntry.20"* %22, i64 0, i32 0
  %24 = load %"struct.base::PartitionRoot.16"*, %"struct.base::PartitionRoot.16"** %23, align 4096
  %25 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %24, i64 0, i32 0
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 2
  br i1 %27, label %28, label %97, !prof !6

28:                                               ; preds = %4
  %29 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) acquire, align 8
  %30 = icmp eq i8 %29, 2
  br i1 %30, label %31, label %32, !prof !6

31:                                               ; preds = %28
  tail call void @_ZN4base8internal6PCScan8JoinScanEv() #12
  br label %32

32:                                               ; preds = %28, %31
  %33 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %12, i64 %16, i32 0, i32 1, i64 8
  %34 = bitcast i8* %33 to %"struct.base::internal::PartitionBucket.18"**
  %35 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %34, align 1
  %36 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %24, i64 0, i32 9, i64 0
  %37 = icmp ugt %"struct.base::internal::PartitionBucket.18"* %36, %35
  %38 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %24, i64 0, i32 10
  %39 = icmp ult %"struct.base::internal::PartitionBucket.18"* %38, %35
  %40 = or i1 %37, %39
  br i1 %40, label %97, label %41, !prof !6

41:                                               ; preds = %32
  %42 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %12, i64 %16, i32 0, i32 1, i64 21
  %43 = load i8, i8* %42, align 1, !range !5
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %49, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %35, i64 0, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = zext i32 %47 to i64
  br label %56

49:                                               ; preds = %41
  %50 = bitcast %union.anon.38* %17 to %"struct.base::internal::PartitionPage.37"*
  %51 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %50, i64 1, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 1
  %53 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %35, i64 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %45, %49
  %57 = phi i64 [ %48, %45 ], [ %55, %49 ]
  %58 = phi i64 [ %48, %45 ], [ %52, %49 ]
  %59 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %60 = inttoptr i64 %6 to i8*
  %61 = and i64 %59, 1
  %62 = icmp eq i64 %61, 0
  %63 = select i1 %62, i64 16384, i64 32768
  %64 = getelementptr inbounds i8, i8* %60, i64 %63
  %65 = bitcast i8* %64 to %"class.base::internal::ObjectBitmap"*
  %66 = lshr i64 %5, 4
  %67 = lshr i64 %5, 10
  %68 = and i64 %67, 2047
  %69 = and i64 %66, 63
  %70 = shl i64 1, %69
  %71 = getelementptr inbounds %"class.base::internal::ObjectBitmap", %"class.base::internal::ObjectBitmap"* %65, i64 0, i32 0, i32 0, i64 %68
  %72 = atomicrmw or i64* %71, i64 %70 monotonic
  %73 = and i64 %72, %70
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %76, label %75, !prof !3

75:                                               ; preds = %56
  notail call void @_ZN4base8internal17DoubleFreeAttemptEv() #14
  unreachable

76:                                               ; preds = %56
  %77 = atomicrmw add i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0), i64 %57 monotonic
  %78 = add i64 %77, %57
  %79 = load atomic i64, i64* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %80 = icmp ugt i64 %78, %79
  br i1 %80, label %81, label %87

81:                                               ; preds = %76
  %82 = load %"class.base::internal::PCScanSchedulingBackend"*, %"class.base::internal::PCScanSchedulingBackend"** getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 0, i32 2), align 8
  %83 = bitcast %"class.base::internal::PCScanSchedulingBackend"* %82 to i1 (%"class.base::internal::PCScanSchedulingBackend"*)***
  %84 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)**, i1 (%"class.base::internal::PCScanSchedulingBackend"*)*** %83, align 8
  %85 = load i1 (%"class.base::internal::PCScanSchedulingBackend"*)*, i1 (%"class.base::internal::PCScanSchedulingBackend"*)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.base::internal::PCScanSchedulingBackend"* %82) #12
  br label %87

87:                                               ; preds = %81, %76
  %88 = phi i1 [ false, %76 ], [ %86, %81 ]
  %89 = load i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 2), align 1
  %90 = icmp eq i8 %89, 1
  br i1 %90, label %91, label %92

91:                                               ; preds = %87
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %0, i8 0, i64 %58, i1 false) #12
  br label %92

92:                                               ; preds = %91, %87
  br i1 %88, label %93, label %130, !prof !6

93:                                               ; preds = %92
  %94 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %130

96:                                               ; preds = %93
  tail call void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"* nonnull @_ZN4base8internal6PCScan9instance_E, i32 1) #12
  br label %130

97:                                               ; preds = %32, %4
  %98 = bitcast %"struct.base::internal::DeferredUnmap"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #12
  %99 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 0
  %100 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 16, i1 false) #12
  %101 = bitcast %union.anon.38* %17 to i8**
  %102 = load i8*, i8** %101, align 1
  %103 = icmp eq i8* %102, %0
  br i1 %103, label %106, label %104, !prof !6

104:                                              ; preds = %97
  %105 = ptrtoint i8* %102 to i64
  br label %109

106:                                              ; preds = %97
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %107 = getelementptr inbounds %union.anon.38, %union.anon.38* %17, i64 0, i32 0, i32 0
  %108 = load i64, i64* %107, align 1
  br label %109

109:                                              ; preds = %106, %104
  %110 = phi i64 [ %105, %104 ], [ %108, %106 ]
  %111 = tail call i64 @llvm.bswap.i64(i64 %110) #12
  %112 = inttoptr i64 %111 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %113 = bitcast i8* %0 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %112, %"struct.base::internal::EncodedPartitionFreelistEntry"** %113, align 8
  %114 = xor i64 %111, -1
  %115 = getelementptr inbounds i8, i8* %0, i64 8
  %116 = bitcast i8* %115 to i64*
  store i64 %114, i64* %116, align 8
  store i8* %0, i8** %101, align 1
  %117 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %12, i64 %16, i32 0, i32 1, i64 16
  %118 = bitcast i8* %117 to i16*
  %119 = load i16, i16* %118, align 1
  %120 = add i16 %119, -1
  store i16 %120, i16* %118, align 1
  %121 = icmp slt i16 %120, 1
  br i1 %121, label %123, label %122, !prof !6

122:                                              ; preds = %109
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 0, i64 16, i1 false) #12
  br label %129

123:                                              ; preds = %109
  %124 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %18) #12
  %125 = extractvalue { i8*, i64 } %124, 0
  %126 = extractvalue { i8*, i64 } %124, 1
  store i8* %125, i8** %99, align 8
  store i64 %126, i64* %100, align 8
  %127 = icmp eq i8* %125, null
  br i1 %127, label %129, label %128, !prof !3

128:                                              ; preds = %123
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %2) #12
  br label %129

129:                                              ; preds = %122, %123, %128
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #12
  br label %130

130:                                              ; preds = %96, %93, %92, %129, %1
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb0EE20IsDirectMappedBucketEPNS_8internal15PartitionBucketILb0EEE(%"struct.base::PartitionRoot.16"*, %"struct.base::internal::PartitionBucket.18"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 0
  %4 = icmp ugt %"struct.base::internal::PartitionBucket.18"* %3, %1
  %5 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 10
  %6 = icmp ult %"struct.base::internal::PartitionBucket.18"* %5, %1
  %7 = or i1 %4, %6
  ret i1 %7
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE20FreeNoHooksImmediateEPvPNS_8internal16SlotSpanMetadataILb0EEE(%"struct.base::PartitionRoot.16"*, i8*, %"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  %8 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i8**
  %9 = load i8*, i8** %8, align 1
  %10 = icmp eq i8* %9, %1
  br i1 %10, label %13, label %11, !prof !6

11:                                               ; preds = %3
  %12 = ptrtoint i8* %9 to i64
  br label %16

13:                                               ; preds = %3
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %14 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i64*
  %15 = load i64, i64* %14, align 1
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i64 [ %12, %11 ], [ %15, %13 ]
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #12
  %19 = inttoptr i64 %18 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %20 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %19, %"struct.base::internal::EncodedPartitionFreelistEntry"** %20, align 8
  %21 = xor i64 %18, -1
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  store i8* %1, i8** %8, align 1
  %24 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %2, i64 0, i32 3
  %25 = load i16, i16* %24, align 1
  %26 = add i16 %25, -1
  store i16 %26, i16* %24, align 1
  %27 = icmp slt i16 %26, 1
  br i1 %27, label %29, label %28, !prof !6

28:                                               ; preds = %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  br label %35

29:                                               ; preds = %16
  %30 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %2) #12
  %31 = extractvalue { i8*, i64 } %30, 0
  %32 = extractvalue { i8*, i64 } %30, 1
  store i8* %31, i8** %6, align 8
  store i64 %32, i64* %7, align 8
  %33 = icmp eq i8* %31, null
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %29
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %35

35:                                               ; preds = %28, %29, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZNK4base13PartitionRootILb0EE30AdjustPointerForExtrasSubtractEPv(%"struct.base::PartitionRoot.16"*, i8*) local_unnamed_addr #3 comdat align 2 {
  ret i8* %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE22RawFreeWithThreadCacheEPvPNS_8internal16SlotSpanMetadataILb0EEE(%"struct.base::PartitionRoot.16"*, i8*, %"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  %8 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i8**
  %9 = load i8*, i8** %8, align 1
  %10 = icmp eq i8* %9, %1
  br i1 %10, label %13, label %11, !prof !6

11:                                               ; preds = %3
  %12 = ptrtoint i8* %9 to i64
  br label %16

13:                                               ; preds = %3
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %14 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i64*
  %15 = load i64, i64* %14, align 1
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i64 [ %12, %11 ], [ %15, %13 ]
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #12
  %19 = inttoptr i64 %18 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %20 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %19, %"struct.base::internal::EncodedPartitionFreelistEntry"** %20, align 8
  %21 = xor i64 %18, -1
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  store i8* %1, i8** %8, align 1
  %24 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %2, i64 0, i32 3
  %25 = load i16, i16* %24, align 1
  %26 = add i16 %25, -1
  store i16 %26, i16* %24, align 1
  %27 = icmp slt i16 %26, 1
  br i1 %27, label %29, label %28, !prof !6

28:                                               ; preds = %16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  br label %35

29:                                               ; preds = %16
  %30 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %2) #12
  %31 = extractvalue { i8*, i64 } %30, 0
  %32 = extractvalue { i8*, i64 } %30, 1
  store i8* %31, i8** %6, align 8
  store i64 %32, i64* %7, align 8
  %33 = icmp eq i8* %31, null
  br i1 %33, label %35, label %34, !prof !3

34:                                               ; preds = %29
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %35

35:                                               ; preds = %28, %29, %34
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb0EE13GetUsableSizeEPv(i8*) local_unnamed_addr #3 comdat align 2 {
  %2 = ptrtoint i8* %0 to i64
  %3 = and i64 %2, -2097152
  %4 = or i64 %3, 4096
  %5 = inttoptr i64 %4 to i8*
  %6 = lshr i64 %2, 9
  %7 = and i64 %6, 4064
  %8 = getelementptr inbounds i8, i8* %5, i64 %7
  %9 = bitcast i8* %8 to %"struct.base::internal::PartitionPage.37"*
  %10 = getelementptr inbounds i8, i8* %8, i64 30
  %11 = load i8, i8* %10, align 2
  %12 = zext i8 %11 to i64
  %13 = sub nsw i64 0, %12
  %14 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %9, i64 %13, i32 0, i32 1, i64 21
  %15 = load i8, i8* %14, align 1, !range !5
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %24, !prof !3

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %9, i64 %13, i32 0, i32 1, i64 8
  %19 = bitcast i8* %18 to %"struct.base::internal::PartitionBucket.18"**
  %20 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %19, align 1
  %21 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %20, i64 0, i32 3
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  br label %29

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %9, i64 %13, i32 0
  %26 = bitcast %union.anon.38* %25 to %"struct.base::internal::PartitionPage.37"*
  %27 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %26, i64 1, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 1
  br label %29

29:                                               ; preds = %17, %24
  %30 = phi i64 [ %23, %17 ], [ %28, %24 ]
  ret i64 %30
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE25AllocationCapacityFromPtrEPv(%"struct.base::PartitionRoot.16"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = ptrtoint i8* %1 to i64
  %4 = and i64 %3, -2097152
  %5 = or i64 %4, 4096
  %6 = inttoptr i64 %5 to i8*
  %7 = lshr i64 %3, 9
  %8 = and i64 %7, 4064
  %9 = getelementptr inbounds i8, i8* %6, i64 %8
  %10 = bitcast i8* %9 to %"struct.base::internal::PartitionPage.37"*
  %11 = getelementptr inbounds i8, i8* %9, i64 30
  %12 = load i8, i8* %11, align 2
  %13 = zext i8 %12 to i64
  %14 = sub nsw i64 0, %13
  %15 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %10, i64 %14, i32 0, i32 1, i64 8
  %16 = bitcast i8* %15 to %"struct.base::internal::PartitionBucket.18"**
  %17 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %16, align 1
  %18 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %17, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  ret i64 %20
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE35AllocationCapacityFromRequestedSizeEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = tail call i64 @llvm.ctlz.i64(i64 %1, i1 false) #12, !range !9
  %4 = sub nuw nsw i64 64, %3
  %5 = and i64 %4, 255
  %6 = getelementptr inbounds [65 x i8], [65 x i8]* @_ZN4base12_GLOBAL__N_116kOrderIndexShiftE, i64 0, i64 %5
  %7 = load i8, i8* %6, align 1
  %8 = zext i8 %7 to i64
  %9 = lshr i64 %1, %8
  %10 = and i64 %9, 7
  %11 = getelementptr inbounds [65 x i64], [65 x i64]* @_ZN4base12_GLOBAL__N_118kOrderSubIndexMaskE, i64 0, i64 %5
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, %1
  %14 = shl nuw nsw i64 %5, 3
  %15 = or i64 %10, %14
  %16 = icmp ne i64 %13, 0
  %17 = zext i1 %16 to i64
  %18 = add nuw nsw i64 %15, %17
  %19 = getelementptr inbounds { [128 x i64], [521 x i16] }, { [128 x i64], [521 x i16] }* @_ZZN4base8internal17BucketIndexLookup8GetIndexEmE6lookup, i64 0, i32 1, i64 %18
  %20 = load i16, i16* %19, align 2
  %21 = zext i16 %20 to i64
  %22 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %21, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 255
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %30, label %26, !prof !6

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %21, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  br label %35

30:                                               ; preds = %2
  %31 = icmp ugt i64 %1, 2145386496
  br i1 %31, label %35, label %32

32:                                               ; preds = %30
  %33 = add nuw nsw i64 %1, 4095
  %34 = and i64 %33, -4096
  br label %35

35:                                               ; preds = %32, %30, %26
  %36 = phi i64 [ %29, %26 ], [ %1, %30 ], [ %34, %32 ]
  ret i64 %36
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden dereferenceable(40) %"struct.base::internal::PartitionBucket.18"* @_ZNK4base13PartitionRootILb0EE9bucket_atEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %1
  ret %"struct.base::internal::PartitionBucket.18"* %3
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb0EE20GetDirectMapSlotSizeEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = add i64 %0, 4095
  %3 = and i64 %2, -4096
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE11PurgeMemoryEi(%"struct.base::PartitionRoot.16"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i8, i8* getelementptr inbounds (%"class.base::internal::PCScan", %"class.base::internal::PCScan"* @_ZN4base8internal6PCScan9instance_E, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0) monotonic, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %37

5:                                                ; preds = %2
  %6 = and i32 %1, 1
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @_ZN4base13PartitionRootILb0EE22DecommitEmptySlotSpansEv(%"struct.base::PartitionRoot.16"* %0)
  br label %9

9:                                                ; preds = %5, %8
  %10 = and i32 %1, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %37, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 0
  %14 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 128
  br label %15

15:                                               ; preds = %12, %34
  %16 = phi %"struct.base::internal::PartitionBucket.18"* [ %13, %12 ], [ %35, %34 ]
  %17 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %16, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = icmp ult i32 %18, 4096
  br i1 %19, label %34, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %16, i64 0, i32 0
  %22 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %21, align 8
  %23 = tail call %"struct.base::internal::SlotSpanMetadata.19"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #12
  %24 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %22, %23
  br i1 %24, label %34, label %25

25:                                               ; preds = %20
  %26 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %21, align 1
  %27 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %25, %28
  %29 = phi %"struct.base::internal::SlotSpanMetadata.19"* [ %32, %28 ], [ %26, %25 ]
  %30 = tail call fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb0EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %29, i1 zeroext true) #12
  %31 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %29, i64 0, i32 1
  %32 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %31, align 1
  %33 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %32, null
  br i1 %33, label %34, label %28

34:                                               ; preds = %28, %25, %20, %15
  %35 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %16, i64 1
  %36 = icmp eq %"struct.base::internal::PartitionBucket.18"* %35, %14
  br i1 %36, label %37, label %15

37:                                               ; preds = %34, %2, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE22DecommitEmptySlotSpansEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 0
  %3 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %2, align 8
  %4 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %3, %"struct.base::PartitionRoot.16"* %0) #12
  br label %6

6:                                                ; preds = %1, %5
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %2, align 8
  %7 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 1
  %8 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %7, align 8
  %9 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %8, null
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %8, %"struct.base::PartitionRoot.16"* %0) #12
  br label %11

11:                                               ; preds = %10, %6
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %7, align 8
  %12 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 2
  %13 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %12, align 8
  %14 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %11
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %13, %"struct.base::PartitionRoot.16"* %0) #12
  br label %16

16:                                               ; preds = %15, %11
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %12, align 8
  %17 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 3
  %18 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %17, align 8
  %19 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %18, null
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %18, %"struct.base::PartitionRoot.16"* %0) #12
  br label %21

21:                                               ; preds = %20, %16
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %17, align 8
  %22 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 4
  %23 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %22, align 8
  %24 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %23, null
  br i1 %24, label %26, label %25

25:                                               ; preds = %21
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %23, %"struct.base::PartitionRoot.16"* %0) #12
  br label %26

26:                                               ; preds = %25, %21
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %22, align 8
  %27 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 5
  %28 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %27, align 8
  %29 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %28, null
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %28, %"struct.base::PartitionRoot.16"* %0) #12
  br label %31

31:                                               ; preds = %30, %26
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %27, align 8
  %32 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 6
  %33 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %32, align 8
  %34 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %31
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %33, %"struct.base::PartitionRoot.16"* %0) #12
  br label %36

36:                                               ; preds = %35, %31
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %32, align 8
  %37 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 7
  %38 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %37, align 8
  %39 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %38, null
  br i1 %39, label %41, label %40

40:                                               ; preds = %36
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %38, %"struct.base::PartitionRoot.16"* %0) #12
  br label %41

41:                                               ; preds = %40, %36
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %37, align 8
  %42 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 8
  %43 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %42, align 8
  %44 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %43, null
  br i1 %44, label %46, label %45

45:                                               ; preds = %41
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %43, %"struct.base::PartitionRoot.16"* %0) #12
  br label %46

46:                                               ; preds = %45, %41
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %42, align 8
  %47 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 9
  %48 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %47, align 8
  %49 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %48, null
  br i1 %49, label %51, label %50

50:                                               ; preds = %46
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %48, %"struct.base::PartitionRoot.16"* %0) #12
  br label %51

51:                                               ; preds = %50, %46
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %47, align 8
  %52 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 10
  %53 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %52, align 8
  %54 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %53, null
  br i1 %54, label %56, label %55

55:                                               ; preds = %51
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %53, %"struct.base::PartitionRoot.16"* %0) #12
  br label %56

56:                                               ; preds = %55, %51
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %52, align 8
  %57 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 11
  %58 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %57, align 8
  %59 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %58, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %56
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %58, %"struct.base::PartitionRoot.16"* %0) #12
  br label %61

61:                                               ; preds = %60, %56
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %57, align 8
  %62 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 12
  %63 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %62, align 8
  %64 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %61
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %63, %"struct.base::PartitionRoot.16"* %0) #12
  br label %66

66:                                               ; preds = %65, %61
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %62, align 8
  %67 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 13
  %68 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %67, align 8
  %69 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %68, null
  br i1 %69, label %71, label %70

70:                                               ; preds = %66
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %68, %"struct.base::PartitionRoot.16"* %0) #12
  br label %71

71:                                               ; preds = %70, %66
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %67, align 8
  %72 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 14
  %73 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %72, align 8
  %74 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %71
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %73, %"struct.base::PartitionRoot.16"* %0) #12
  br label %76

76:                                               ; preds = %75, %71
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %72, align 8
  %77 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 22, i64 15
  %78 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %77, align 8
  %79 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %78, null
  br i1 %79, label %81, label %80

80:                                               ; preds = %76
  tail call void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"* nonnull %78, %"struct.base::PartitionRoot.16"* %0) #12
  br label %81

81:                                               ; preds = %80, %76
  store %"struct.base::internal::SlotSpanMetadata.19"* null, %"struct.base::internal::SlotSpanMetadata.19"** %77, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE9DumpStatsEPKcbPNS_20PartitionStatsDumperE(%"struct.base::PartitionRoot.16"*, i8*, i1 zeroext, %"class.base::PartitionStatsDumper"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca [128 x %"struct.base::PartitionBucketMemoryStats"], align 16
  %6 = alloca %"struct.base::PartitionMemoryStats", align 8
  %7 = alloca %"struct.base::PartitionBucketMemoryStats", align 4
  br i1 %2, label %11, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znam(i64 16384) #15
  %10 = bitcast i8* %9 to i32*
  br label %11

11:                                               ; preds = %8, %4
  %12 = phi i8* [ null, %4 ], [ %9, %8 ]
  %13 = phi i32* [ null, %4 ], [ %10, %8 ]
  %14 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 5632, i8* nonnull %14) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %14, i8 -86, i64 5632, i1 false)
  %15 = bitcast %"struct.base::PartitionMemoryStats"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4360, i8* nonnull %15) #12
  %16 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 2
  %17 = bitcast i64* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 4344, i1 false)
  %18 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = add i64 %21, %19
  %23 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 0
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i64, i64* %24 monotonic, align 8
  %26 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 1
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 4
  %29 = bitcast i64* %27 to <2 x i64>*
  %30 = bitcast i64* %27 to <2 x i64>*
  %31 = bitcast i64* %28 to <2 x i64>*
  %32 = bitcast i64* %28 to <2 x i64>*
  br label %37

33:                                               ; preds = %125
  %34 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 21
  %35 = load %"struct.base::internal::PartitionDirectMapExtent.21"*, %"struct.base::internal::PartitionDirectMapExtent.21"** %34, align 8
  %36 = icmp eq %"struct.base::internal::PartitionDirectMapExtent.21"* %35, null
  br i1 %36, label %128, label %141

37:                                               ; preds = %125, %11
  %38 = phi i64 [ 0, %11 ], [ %126, %125 ]
  %39 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 0
  %40 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %39, align 8
  %41 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %40, null
  %42 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38
  %43 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %42, i64 0, i32 0
  store i8 0, i8* %43, align 4
  br i1 %41, label %125, label %44

44:                                               ; preds = %37
  %45 = tail call %"struct.base::internal::SlotSpanMetadata.19"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #12
  %46 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %40, %45
  %47 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 1
  br i1 %46, label %50, label %48

48:                                               ; preds = %44
  %49 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %47, align 1
  br label %61

50:                                               ; preds = %44
  %51 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %47, align 8
  %52 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %51, null
  br i1 %52, label %53, label %61

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 2
  %55 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %54, align 8
  %56 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %55, null
  br i1 %56, label %57, label %61

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = icmp ugt i32 %59, 255
  br i1 %60, label %61, label %108

61:                                               ; preds = %48, %57, %53, %50
  %62 = phi %"struct.base::internal::SlotSpanMetadata.19"* [ %49, %48 ], [ null, %57 ], [ null, %53 ], [ %51, %50 ]
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 44, i1 false) #12
  store i8 1, i8* %43, align 4
  %63 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 4
  %65 = load i32, i32* %64, align 4
  %66 = lshr i32 %65, 8
  %67 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 8
  store i32 %66, i32* %67, align 4
  %68 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 2
  store i32 %69, i32* %70, align 4
  %71 = shl i32 %65, 12
  %72 = and i32 %71, 1044480
  %73 = udiv i32 %72, %69
  %74 = and i32 %73, 65535
  %75 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 3
  store i32 %72, i32* %75, align 4
  %76 = mul i32 %69, %66
  %77 = mul i32 %76, %74
  %78 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 4
  store i32 %77, i32* %78, align 4
  %79 = mul i32 %72, %66
  %80 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 5
  store i32 %79, i32* %80, align 4
  %81 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %62, null
  br i1 %81, label %82, label %86

82:                                               ; preds = %86, %61
  %83 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 9, i64 %38, i32 2
  %84 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %83, align 1
  %85 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %84, null
  br i1 %85, label %91, label %98

86:                                               ; preds = %61, %86
  %87 = phi %"struct.base::internal::SlotSpanMetadata.19"* [ %89, %86 ], [ %62, %61 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb0EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %42, %"struct.base::internal::SlotSpanMetadata.19"* nonnull %87) #12
  %88 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %87, i64 0, i32 1
  %89 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %88, align 1
  %90 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %89, null
  br i1 %90, label %82, label %86

91:                                               ; preds = %98, %82
  %92 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %39, align 8
  %93 = tail call %"struct.base::internal::SlotSpanMetadata.19"* @_ZN4base8internal16SlotSpanMetadataILb0EE22get_sentinel_slot_spanEv() #12
  %94 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %92, %93
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %39, align 1
  %97 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %96, null
  br i1 %97, label %108, label %103

98:                                               ; preds = %82, %98
  %99 = phi %"struct.base::internal::SlotSpanMetadata.19"* [ %101, %98 ], [ %84, %82 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb0EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %42, %"struct.base::internal::SlotSpanMetadata.19"* nonnull %99) #12
  %100 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %99, i64 0, i32 1
  %101 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %100, align 1
  %102 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %101, null
  br i1 %102, label %91, label %98

103:                                              ; preds = %95, %103
  %104 = phi %"struct.base::internal::SlotSpanMetadata.19"* [ %106, %103 ], [ %96, %95 ]
  call fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb0EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* %42, %"struct.base::internal::SlotSpanMetadata.19"* nonnull %104) #12
  %105 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %104, i64 0, i32 1
  %106 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %105, align 1
  %107 = icmp eq %"struct.base::internal::SlotSpanMetadata.19"* %106, null
  br i1 %107, label %108, label %103

108:                                              ; preds = %103, %95, %91, %57
  %109 = load i8, i8* %43, align 4
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %125, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 4
  %113 = bitcast i32* %112 to <2 x i32>*
  %114 = load <2 x i32>, <2 x i32>* %113, align 4
  %115 = shufflevector <2 x i32> %114, <2 x i32> undef, <2 x i32> <i32 1, i32 0>
  %116 = zext <2 x i32> %115 to <2 x i64>
  %117 = load <2 x i64>, <2 x i64>* %29, align 8
  %118 = add <2 x i64> %117, %116
  store <2 x i64> %118, <2 x i64>* %30, align 8
  %119 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 %38, i32 6
  %120 = bitcast i32* %119 to <2 x i32>*
  %121 = load <2 x i32>, <2 x i32>* %120, align 4
  %122 = zext <2 x i32> %121 to <2 x i64>
  %123 = load <2 x i64>, <2 x i64>* %31, align 8
  %124 = add <2 x i64> %123, %122
  store <2 x i64> %124, <2 x i64>* %32, align 8
  br label %125

125:                                              ; preds = %37, %108, %111
  %126 = add nuw nsw i64 %38, 1
  %127 = icmp eq i64 %126, 128
  br i1 %127, label %33, label %37

128:                                              ; preds = %153, %33
  %129 = phi i64 [ 0, %33 ], [ %150, %153 ]
  %130 = phi i64 [ 0, %33 ], [ %155, %153 ]
  %131 = bitcast i64* %27 to <2 x i64>*
  %132 = load <2 x i64>, <2 x i64>* %131, align 8
  %133 = insertelement <2 x i64> undef, i64 %129, i32 0
  %134 = shufflevector <2 x i64> %133, <2 x i64> undef, <2 x i32> zeroinitializer
  %135 = add <2 x i64> %132, %134
  %136 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> %135, <2 x i64>* %136, align 8
  %137 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 2
  %138 = load i8, i8* %137, align 2, !range !5
  %139 = icmp eq i8 %138, 0
  %140 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 6
  store i8 %138, i8* %140, align 8
  br i1 %139, label %165, label %160

141:                                              ; preds = %33, %153
  %142 = phi %"struct.base::internal::PartitionDirectMapExtent.21"* [ %156, %153 ], [ %35, %33 ]
  %143 = phi i64 [ %155, %153 ], [ 0, %33 ]
  %144 = phi i64 [ %150, %153 ], [ 0, %33 ]
  %145 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent.21", %"struct.base::internal::PartitionDirectMapExtent.21"* %142, i64 0, i32 2
  %146 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %145, align 8
  %147 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %146, i64 0, i32 3
  %148 = load i32, i32* %147, align 8
  %149 = zext i32 %148 to i64
  %150 = add i64 %144, %149
  br i1 %2, label %153, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds i32, i32* %13, i64 %143
  store i32 %148, i32* %152, align 4
  br label %153

153:                                              ; preds = %141, %151
  %154 = getelementptr inbounds %"struct.base::internal::PartitionDirectMapExtent.21", %"struct.base::internal::PartitionDirectMapExtent.21"* %142, i64 0, i32 0
  %155 = add nuw nsw i64 %143, 1
  %156 = load %"struct.base::internal::PartitionDirectMapExtent.21"*, %"struct.base::internal::PartitionDirectMapExtent.21"** %154, align 8
  %157 = icmp ne %"struct.base::internal::PartitionDirectMapExtent.21"* %156, null
  %158 = icmp ult i64 %155, 4096
  %159 = and i1 %158, %157
  br i1 %159, label %141, label %128

160:                                              ; preds = %128
  %161 = tail call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %162 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 7
  call void @_ZN4base8internal19ThreadCacheRegistry9DumpStatsEbPNS_16ThreadCacheStatsE(%"class.base::internal::ThreadCacheRegistry"* %161, i1 zeroext true, %"struct.base::ThreadCacheStats"* %162) #12
  %163 = call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %164 = getelementptr inbounds %"struct.base::PartitionMemoryStats", %"struct.base::PartitionMemoryStats"* %6, i64 0, i32 8
  call void @_ZN4base8internal19ThreadCacheRegistry9DumpStatsEbPNS_16ThreadCacheStatsE(%"class.base::internal::ThreadCacheRegistry"* %163, i1 zeroext false, %"struct.base::ThreadCacheStats"* %164) #12
  br label %165

165:                                              ; preds = %128, %160
  br i1 %2, label %201, label %166

166:                                              ; preds = %165
  %167 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 0
  %168 = getelementptr inbounds [128 x %"struct.base::PartitionBucketMemoryStats"], [128 x %"struct.base::PartitionBucketMemoryStats"]* %5, i64 0, i64 128
  %169 = bitcast %"class.base::PartitionStatsDumper"* %3 to void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)***
  br label %178

170:                                              ; preds = %187
  %171 = icmp eq i64 %130, 0
  br i1 %171, label %201, label %172

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 1
  %175 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 8
  %176 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %7, i64 0, i32 2
  %177 = bitcast i32* %176 to <4 x i32>*
  br label %190

178:                                              ; preds = %166, %187
  %179 = phi %"struct.base::PartitionBucketMemoryStats"* [ %167, %166 ], [ %188, %187 ]
  %180 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %179, i64 0, i32 0
  %181 = load i8, i8* %180, align 4, !range !5
  %182 = icmp eq i8 %181, 0
  br i1 %182, label %187, label %183

183:                                              ; preds = %178
  %184 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*** %169, align 8
  %185 = getelementptr inbounds void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %184, i64 1
  %186 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %185, align 8
  call void %186(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionBucketMemoryStats"* %179) #12
  br label %187

187:                                              ; preds = %178, %183
  %188 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %179, i64 1
  %189 = icmp eq %"struct.base::PartitionBucketMemoryStats"* %188, %168
  br i1 %189, label %170, label %178

190:                                              ; preds = %190, %172
  %191 = phi i64 [ 0, %172 ], [ %199, %190 ]
  %192 = getelementptr inbounds i32, i32* %13, i64 %191
  %193 = load i32, i32* %192, align 4
  call void @llvm.lifetime.start.p0i8(i64 44, i8* nonnull %173) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %173, i8 0, i64 44, i1 false)
  store i8 1, i8* %173, align 4
  store i8 1, i8* %174, align 1
  store i32 1, i32* %175, align 4
  %194 = insertelement <4 x i32> undef, i32 %193, i32 0
  %195 = shufflevector <4 x i32> %194, <4 x i32> undef, <4 x i32> zeroinitializer
  store <4 x i32> %195, <4 x i32>* %177, align 4
  %196 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*** %169, align 8
  %197 = getelementptr inbounds void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %196, i64 1
  %198 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionBucketMemoryStats"*)** %197, align 8
  call void %198(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionBucketMemoryStats"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 44, i8* nonnull %173) #12
  %199 = add nuw nsw i64 %191, 1
  %200 = icmp eq i64 %199, %130
  br i1 %200, label %201, label %190

201:                                              ; preds = %190, %170, %165
  %202 = bitcast %"class.base::PartitionStatsDumper"* %3 to void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)***
  %203 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)**, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)*** %202, align 8
  %204 = load void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)*, void (%"class.base::PartitionStatsDumper"*, i8*, %"struct.base::PartitionMemoryStats"*)** %203, align 8
  call void %204(%"class.base::PartitionStatsDumper"* %3, i8* %1, %"struct.base::PartitionMemoryStats"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4360, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 5632, i8* nonnull %14) #12
  %205 = icmp eq i32* %13, null
  br i1 %205, label %207, label %206

206:                                              ; preds = %201
  call void @_ZdaPv(i8* %12) #15
  br label %207

207:                                              ; preds = %201, %206
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE7RawFreeEPv(%"struct.base::PartitionRoot.16"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, -2097152
  %6 = or i64 %5, 4096
  %7 = inttoptr i64 %6 to i8*
  %8 = lshr i64 %4, 9
  %9 = and i64 %8, 4064
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = bitcast i8* %10 to %"struct.base::internal::PartitionPage.37"*
  %12 = getelementptr inbounds i8, i8* %10, i64 30
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %11, i64 %15, i32 0
  %17 = bitcast %union.anon.38* %16 to %"struct.base::internal::SlotSpanMetadata.19"*
  %18 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #12
  %21 = bitcast %union.anon.38* %16 to i8**
  %22 = load i8*, i8** %21, align 1
  %23 = icmp eq i8* %22, %1
  br i1 %23, label %26, label %24, !prof !6

24:                                               ; preds = %2
  %25 = ptrtoint i8* %22 to i64
  br label %29

26:                                               ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %27 = getelementptr inbounds %union.anon.38, %union.anon.38* %16, i64 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 1
  br label %29

29:                                               ; preds = %26, %24
  %30 = phi i64 [ %25, %24 ], [ %28, %26 ]
  %31 = tail call i64 @llvm.bswap.i64(i64 %30) #12
  %32 = inttoptr i64 %31 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %33 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %32, %"struct.base::internal::EncodedPartitionFreelistEntry"** %33, align 8
  %34 = xor i64 %31, -1
  %35 = getelementptr inbounds i8, i8* %1, i64 8
  %36 = bitcast i8* %35 to i64*
  store i64 %34, i64* %36, align 8
  store i8* %1, i8** %21, align 1
  %37 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %11, i64 %15, i32 0, i32 1, i64 16
  %38 = bitcast i8* %37 to i16*
  %39 = load i16, i16* %38, align 1
  %40 = add i16 %39, -1
  store i16 %40, i16* %38, align 1
  %41 = icmp slt i16 %40, 1
  br i1 %41, label %43, label %42, !prof !6

42:                                               ; preds = %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 0, i64 16, i1 false) #12
  br label %49

43:                                               ; preds = %29
  %44 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %17) #12
  %45 = extractvalue { i8*, i64 } %44, 0
  %46 = extractvalue { i8*, i64 } %44, 1
  store i8* %45, i8** %19, align 8
  store i64 %46, i64* %20, align 8
  %47 = icmp eq i8* %45, null
  br i1 %47, label %49, label %48, !prof !3

48:                                               ; preds = %43
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %3) #12
  br label %49

49:                                               ; preds = %42, %43, %48
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE7RawFreeEPvPNS_8internal16SlotSpanMetadataILb0EEE(%"struct.base::PartitionRoot.16"*, i8*, %"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #3 comdat align 2 {
  %4 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %5 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %7 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #12
  %8 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i8**
  %9 = load i8*, i8** %8, align 1
  %10 = icmp eq i8* %9, %1
  br i1 %10, label %13, label %11, !prof !6

11:                                               ; preds = %3
  %12 = ptrtoint i8* %9 to i64
  br label %16

13:                                               ; preds = %3
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %14 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %2 to i64*
  %15 = load i64, i64* %14, align 1
  br label %16

16:                                               ; preds = %13, %11
  %17 = phi i64 [ %12, %11 ], [ %15, %13 ]
  %18 = tail call i64 @llvm.bswap.i64(i64 %17) #12
  %19 = inttoptr i64 %18 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %20 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %19, %"struct.base::internal::EncodedPartitionFreelistEntry"** %20, align 8
  %21 = xor i64 %18, -1
  %22 = getelementptr inbounds i8, i8* %1, i64 8
  %23 = bitcast i8* %22 to i64*
  store i64 %21, i64* %23, align 8
  store i8* %1, i8** %8, align 1
  %24 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %2, i64 0, i32 3
  %25 = load i16, i16* %24, align 1
  %26 = add i16 %25, -1
  store i16 %26, i16* %24, align 1
  %27 = icmp slt i16 %26, 1
  br i1 %27, label %30, label %28, !prof !6

28:                                               ; preds = %16
  %29 = bitcast %"struct.base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false)
  br label %36

30:                                               ; preds = %16
  %31 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %2) #12
  %32 = extractvalue { i8*, i64 } %31, 0
  %33 = extractvalue { i8*, i64 } %31, 1
  store i8* %32, i8** %6, align 8
  store i64 %33, i64* %7, align 8
  %34 = icmp eq i8* %32, null
  br i1 %34, label %36, label %35, !prof !3

35:                                               ; preds = %30
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %4) #12
  br label %36

36:                                               ; preds = %28, %30, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.base::internal::ThreadCache"* @_ZNK4base13PartitionRootILb0EE24thread_cache_for_testingEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 2, !range !5
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = load i32, i32* @_ZN4base8internal18g_thread_cache_keyE, align 4
  %7 = tail call i8* @pthread_getspecific(i32 %6) #12
  %8 = bitcast i8* %7 to %"class.base::internal::ThreadCache"*
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi %"class.base::internal::ThreadCache"* [ %8, %5 ], [ null, %1 ]
  ret %"class.base::internal::ThreadCache"* %10
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE33get_total_size_of_committed_pagesEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load atomic i64, i64* %2 monotonic, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb0EE10UseBRPPoolEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb0EE19IsQuarantineAllowedEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 0
  %3 = load i8, i8* %2, align 8
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden zeroext i1 @_ZNK4base13PartitionRootILb0EE13IsScanEnabledEv(%"struct.base::PartitionRoot.16"*) local_unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.base::PartitionRoot.16", %"struct.base::PartitionRoot.16"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 1
  ret i1 %4
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb0EE37GetDirectMapMetadataAndGuardPagesSizeEv() local_unnamed_addr #3 comdat align 2 {
  ret i64 20480
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZN4base13PartitionRootILb0EE24GetDirectMapReservedSizeEm(i64) local_unnamed_addr #3 comdat align 2 {
  %2 = add i64 %0, 2117631
  %3 = and i64 %2, -2097152
  ret i64 %3
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i64 @_ZNK4base13PartitionRootILb0EE19AdjustSize0IfNeededEm(%"struct.base::PartitionRoot.16"*, i64) local_unnamed_addr #3 comdat align 2 {
  ret i64 %1
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden i8* @_ZN4base13PartitionRootILb0EE15AllocFromBucketEPNS_8internal15PartitionBucketILb0EEEimmPmPb(%"struct.base::PartitionRoot.16"*, %"struct.base::internal::PartitionBucket.18"*, i32, i64, i64, i64*, i8*) local_unnamed_addr #3 comdat align 2 {
  %8 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %1, i64 0, i32 0
  %9 = load %"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::internal::SlotSpanMetadata.19"** %8, align 8
  %10 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %9 to i8**
  %11 = load i8*, i8** %10, align 1
  %12 = icmp ult i64 %4, 16385
  %13 = icmp ne i8* %11, null
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %42, !prof !3

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %9, i64 0, i32 0
  store i8 0, i8* %6, align 1
  %17 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %1, i64 0, i32 3
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  store i64 %19, i64* %5, align 8
  %20 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %21 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 0
  %22 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %21, align 8
  %23 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %22, null
  %24 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %22 to i64
  br i1 %23, label %25, label %27

25:                                               ; preds = %15
  %26 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  br label %36

27:                                               ; preds = %15
  %28 = xor i64 %24, -1
  %29 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %20, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %30, %28
  br i1 %31, label %33, label %32, !prof !3

32:                                               ; preds = %27
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

33:                                               ; preds = %27
  %34 = tail call i64 @llvm.bswap.i64(i64 %24) #12
  %35 = inttoptr i64 %34 to i8*
  tail call void @llvm.prefetch(i8* nonnull %35, i32 0, i32 3, i32 1) #12
  br label %36

36:                                               ; preds = %25, %33
  %37 = phi i64 [ %26, %25 ], [ %34, %33 ]
  %38 = inttoptr i64 %37 to %"class.base::internal::PartitionFreelistEntry"*
  store %"class.base::internal::PartitionFreelistEntry"* %38, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %39 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %9, i64 0, i32 3
  %40 = load i16, i16* %39, align 1
  %41 = add i16 %40, 1
  store i16 %41, i16* %39, align 1
  br label %75

42:                                               ; preds = %7
  %43 = tail call i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"* %1, %"struct.base::PartitionRoot.16"* %0, i32 %2, i64 %3, i64 %4, i8* %6) #12
  %44 = icmp eq i8* %43, null
  br i1 %44, label %75, label %45, !prof !6

45:                                               ; preds = %42
  %46 = ptrtoint i8* %43 to i64
  %47 = and i64 %46, -2097152
  %48 = or i64 %47, 4096
  %49 = inttoptr i64 %48 to i8*
  %50 = lshr i64 %46, 9
  %51 = and i64 %50, 4064
  %52 = getelementptr inbounds i8, i8* %49, i64 %51
  %53 = bitcast i8* %52 to %"struct.base::internal::PartitionPage.37"*
  %54 = getelementptr inbounds i8, i8* %52, i64 30
  %55 = load i8, i8* %54, align 2
  %56 = zext i8 %55 to i64
  %57 = sub nsw i64 0, %56
  %58 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0, i32 1, i64 21
  %59 = load i8, i8* %58, align 1, !range !5
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %68, !prof !3

61:                                               ; preds = %45
  %62 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0, i32 1, i64 8
  %63 = bitcast i8* %62 to %"struct.base::internal::PartitionBucket.18"**
  %64 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %63, align 1
  %65 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %64, i64 0, i32 3
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  br label %73

68:                                               ; preds = %45
  %69 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %53, i64 %57, i32 0
  %70 = bitcast %union.anon.38* %69 to %"struct.base::internal::PartitionPage.37"*
  %71 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %70, i64 1, i32 0, i32 0, i32 0
  %72 = load i64, i64* %71, align 1
  br label %73

73:                                               ; preds = %61, %68
  %74 = phi i64 [ %67, %61 ], [ %72, %68 ]
  store i64 %74, i64* %5, align 8
  br label %75

75:                                               ; preds = %36, %73, %42
  %76 = phi i8* [ null, %42 ], [ %11, %36 ], [ %43, %73 ]
  ret i8* %76
}

declare i8* @_ZN4base8internal15PartitionBucketILb0EE13SlowPathAllocEPNS_13PartitionRootILb0EEEimmPb(%"struct.base::internal::PartitionBucket.18"*, %"struct.base::PartitionRoot.16"*, i32, i64, i64, i8*) local_unnamed_addr #2

declare void @_ZN4base8internal16SlotSpanMetadataILb0EE18DecommitIfPossibleEPNS_13PartitionRootILb0EEE(%"struct.base::internal::SlotSpanMetadata.19"*, %"struct.base::PartitionRoot.16"*) local_unnamed_addr #2

; Function Attrs: alwaysinline nounwind ssp uwtable
define weak_odr hidden void @_ZN4base13PartitionRootILb0EE13RawFreeLockedEPv(%"struct.base::PartitionRoot.16"*, i8*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"struct.base::internal::DeferredUnmap", align 8
  %4 = ptrtoint i8* %1 to i64
  %5 = and i64 %4, -2097152
  %6 = or i64 %5, 4096
  %7 = inttoptr i64 %6 to i8*
  %8 = lshr i64 %4, 9
  %9 = and i64 %8, 4064
  %10 = getelementptr inbounds i8, i8* %7, i64 %9
  %11 = bitcast i8* %10 to %"struct.base::internal::PartitionPage.37"*
  %12 = getelementptr inbounds i8, i8* %10, i64 30
  %13 = load i8, i8* %12, align 2
  %14 = zext i8 %13 to i64
  %15 = sub nsw i64 0, %14
  %16 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %11, i64 %15, i32 0
  %17 = bitcast %union.anon.38* %16 to %"struct.base::internal::SlotSpanMetadata.19"*
  %18 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.base::internal::DeferredUnmap", %"struct.base::internal::DeferredUnmap"* %3, i64 0, i32 1
  %21 = bitcast %union.anon.38* %16 to i8**
  %22 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = load i8*, i8** %21, align 1
  %24 = icmp eq i8* %23, %1
  br i1 %24, label %27, label %25, !prof !6

25:                                               ; preds = %2
  %26 = ptrtoint i8* %23 to i64
  br label %30

27:                                               ; preds = %2
  tail call void @_ZN7logging8RawCheckEPKc(i8* getelementptr inbounds ([105 x i8], [105 x i8]* @.str.10, i64 0, i64 0)) #12
  %28 = getelementptr inbounds %union.anon.38, %union.anon.38* %16, i64 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 1
  br label %30

30:                                               ; preds = %27, %25
  %31 = phi i64 [ %26, %25 ], [ %29, %27 ]
  %32 = tail call i64 @llvm.bswap.i64(i64 %31) #12
  %33 = inttoptr i64 %32 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %34 = bitcast i8* %1 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %33, %"struct.base::internal::EncodedPartitionFreelistEntry"** %34, align 8
  %35 = xor i64 %32, -1
  %36 = getelementptr inbounds i8, i8* %1, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %35, i64* %37, align 8
  store i8* %1, i8** %21, align 1
  %38 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %11, i64 %15, i32 0, i32 1, i64 16
  %39 = bitcast i8* %38 to i16*
  %40 = load i16, i16* %39, align 1
  %41 = add i16 %40, -1
  store i16 %41, i16* %39, align 1
  %42 = icmp slt i16 %41, 1
  br i1 %42, label %45, label %43, !prof !6

43:                                               ; preds = %30
  %44 = bitcast %"struct.base::internal::DeferredUnmap"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false)
  br label %51

45:                                               ; preds = %30
  %46 = tail call { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"* %17) #12
  %47 = extractvalue { i8*, i64 } %46, 0
  %48 = extractvalue { i8*, i64 } %46, 1
  store i8* %47, i8** %19, align 8
  store i64 %48, i64* %20, align 8
  %49 = icmp eq i8* %47, null
  br i1 %49, label %51, label %50, !prof !3

50:                                               ; preds = %45
  call void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"* nonnull %3) #12
  br label %51

51:                                               ; preds = %43, %45, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  ret void
}

declare %"class.base::internal::ThreadCache"* @_ZN4base8internal11ThreadCache6CreateEPNS_13PartitionRootILb1EEE(%"struct.base::PartitionRoot"*) local_unnamed_addr #2

declare void @_ZN4base8internal28RunPartitionAllocOomCallbackEv() local_unnamed_addr #2

declare void @_ZN4base27TerminateBecauseOutOfMemoryEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

declare void @_ZN4base8internal6PCScan8JoinScanEv() local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @pthread_getspecific(i32) local_unnamed_addr #10

declare void @_ZN4base8internal11ThreadCache10FillBucketEm(%"class.base::internal::ThreadCache"*, i64) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZN4base8internal17DoubleFreeAttemptEv() local_unnamed_addr #5

declare void @_ZN4base8internal6PCScan11PerformScanENS1_14InvocationModeE(%"class.base::internal::PCScan"*, i32) local_unnamed_addr #2

declare void @_ZN4base8internal13DeferredUnmap5UnmapEv(%"struct.base::internal::DeferredUnmap"*) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache11ClearBucketERNS1_6BucketEm(%"class.base::internal::ThreadCache"*, %"struct.base::internal::ThreadCache::Bucket"* dereferenceable(16), i64) local_unnamed_addr #2

declare void @_ZN4base8internal11ThreadCache13PurgeInternalEv(%"class.base::internal::ThreadCache"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #9

; Function Attrs: noinline noreturn nounwind ssp uwtable
define internal fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() unnamed_addr #4 {
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !15
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !16
  unreachable
}

; Function Attrs: nounwind
declare i32 @pthread_atfork(void ()*, void ()*, void ()*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_118BeforeForkInParentEv() #0 {
  %1 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc9AllocatorEv() #12
  %2 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %1, i64 0, i32 8
  %3 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %5

5:                                                ; preds = %17, %0
  %6 = phi i32 [ 0, %0 ], [ %18, %17 ]
  %7 = phi i32 [ 1, %0 ], [ %21, %17 ]
  %8 = load atomic i32, i32* %4 monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %13, !prof !2

10:                                               ; preds = %5
  %11 = cmpxchg weak i32* %4, i32 0, i32 1 acquire monotonic
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %28, label %13, !prof !3

13:                                               ; preds = %10, %5
  %14 = icmp sgt i32 %7, 0
  br i1 %14, label %23, label %17

15:                                               ; preds = %23
  %16 = add i32 %7, %6
  br label %17

17:                                               ; preds = %15, %13
  %18 = phi i32 [ %6, %13 ], [ %16, %15 ]
  %19 = shl i32 %7, 1
  %20 = icmp slt i32 %19, 64
  %21 = select i1 %20, i32 %19, i32 64
  %22 = icmp slt i32 %18, 1000
  br i1 %22, label %5, label %27

23:                                               ; preds = %13, %23
  %24 = phi i32 [ %25, %23 ], [ 0, %13 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %25 = add nuw nsw i32 %24, 1
  %26 = icmp eq i32 %25, %7
  br i1 %26, label %15, label %23

27:                                               ; preds = %17
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %3) #12
  br label %28

28:                                               ; preds = %10, %27
  %29 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc17OriginalAllocatorEv() #12
  %30 = icmp eq %"struct.base::PartitionRoot"* %29, null
  br i1 %30, label %58, label %31

31:                                               ; preds = %28
  %32 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %29, i64 0, i32 8
  %33 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %35

35:                                               ; preds = %47, %31
  %36 = phi i32 [ 0, %31 ], [ %48, %47 ]
  %37 = phi i32 [ 1, %31 ], [ %51, %47 ]
  %38 = load atomic i32, i32* %34 monotonic, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %43, !prof !2

40:                                               ; preds = %35
  %41 = cmpxchg weak i32* %34, i32 0, i32 1 acquire monotonic
  %42 = extractvalue { i32, i1 } %41, 1
  br i1 %42, label %58, label %43, !prof !3

43:                                               ; preds = %40, %35
  %44 = icmp sgt i32 %37, 0
  br i1 %44, label %53, label %47

45:                                               ; preds = %53
  %46 = add i32 %37, %36
  br label %47

47:                                               ; preds = %45, %43
  %48 = phi i32 [ %36, %43 ], [ %46, %45 ]
  %49 = shl i32 %37, 1
  %50 = icmp slt i32 %49, 64
  %51 = select i1 %50, i32 %49, i32 64
  %52 = icmp slt i32 %48, 1000
  br i1 %52, label %35, label %57

53:                                               ; preds = %43, %53
  %54 = phi i32 [ %55, %53 ], [ 0, %43 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %55 = add nuw nsw i32 %54, 1
  %56 = icmp eq i32 %55, %37
  br i1 %56, label %45, label %53

57:                                               ; preds = %47
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %33) #12
  br label %58

58:                                               ; preds = %40, %57, %28
  %59 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc16AlignedAllocatorEv() #12
  %60 = icmp eq %"struct.base::PartitionRoot"* %59, %1
  br i1 %60, label %88, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %59, i64 0, i32 8
  %63 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %62, i64 0, i32 0
  %64 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %65

65:                                               ; preds = %77, %61
  %66 = phi i32 [ 0, %61 ], [ %78, %77 ]
  %67 = phi i32 [ 1, %61 ], [ %81, %77 ]
  %68 = load atomic i32, i32* %64 monotonic, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73, !prof !2

70:                                               ; preds = %65
  %71 = cmpxchg weak i32* %64, i32 0, i32 1 acquire monotonic
  %72 = extractvalue { i32, i1 } %71, 1
  br i1 %72, label %88, label %73, !prof !3

73:                                               ; preds = %70, %65
  %74 = icmp sgt i32 %67, 0
  br i1 %74, label %83, label %77

75:                                               ; preds = %83
  %76 = add i32 %67, %66
  br label %77

77:                                               ; preds = %75, %73
  %78 = phi i32 [ %66, %73 ], [ %76, %75 ]
  %79 = shl i32 %67, 1
  %80 = icmp slt i32 %79, 64
  %81 = select i1 %80, i32 %79, i32 64
  %82 = icmp slt i32 %78, 1000
  br i1 %82, label %65, label %87

83:                                               ; preds = %73, %83
  %84 = phi i32 [ %85, %83 ], [ 0, %73 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %85 = add nuw nsw i32 %84, 1
  %86 = icmp eq i32 %85, %67
  br i1 %86, label %75, label %83

87:                                               ; preds = %77
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %63) #12
  br label %88

88:                                               ; preds = %70, %87, %58
  %89 = tail call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %90 = getelementptr inbounds %"class.base::internal::ThreadCacheRegistry", %"class.base::internal::ThreadCacheRegistry"* %89, i64 0, i32 0, i32 0
  %91 = getelementptr inbounds %"class.base::internal::ThreadCacheRegistry", %"class.base::internal::ThreadCacheRegistry"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %92

92:                                               ; preds = %104, %88
  %93 = phi i32 [ 0, %88 ], [ %105, %104 ]
  %94 = phi i32 [ 1, %88 ], [ %108, %104 ]
  %95 = load atomic i32, i32* %91 monotonic, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %100, !prof !2

97:                                               ; preds = %92
  %98 = cmpxchg weak i32* %91, i32 0, i32 1 acquire monotonic
  %99 = extractvalue { i32, i1 } %98, 1
  br i1 %99, label %115, label %100, !prof !3

100:                                              ; preds = %97, %92
  %101 = icmp sgt i32 %94, 0
  br i1 %101, label %110, label %104

102:                                              ; preds = %110
  %103 = add i32 %94, %93
  br label %104

104:                                              ; preds = %102, %100
  %105 = phi i32 [ %93, %100 ], [ %103, %102 ]
  %106 = shl i32 %94, 1
  %107 = icmp slt i32 %106, 64
  %108 = select i1 %107, i32 %106, i32 64
  %109 = icmp slt i32 %105, 1000
  br i1 %109, label %92, label %114

110:                                              ; preds = %100, %110
  %111 = phi i32 [ %112, %110 ], [ 0, %100 ]
  tail call void asm sideeffect "pause", "~{dirflag},~{fpsr},~{flags}"() #12, !srcloc !4
  %112 = add nuw nsw i32 %111, 1
  %113 = icmp eq i32 %112, %94
  br i1 %113, label %102, label %110

114:                                              ; preds = %104
  tail call void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"* %90) #12
  br label %115

115:                                              ; preds = %97, %114
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_117AfterForkInParentEv() #0 {
  tail call fastcc void @_ZN4base12_GLOBAL__N_112ReleaseLocksEv()
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base12_GLOBAL__N_116AfterForkInChildEv() #0 {
  tail call fastcc void @_ZN4base12_GLOBAL__N_112ReleaseLocksEv()
  %1 = tail call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  tail call void @_ZN4base8internal19ThreadCacheRegistry34ForcePurgeAllThreadAfterForkUnsafeEv(%"class.base::internal::ThreadCacheRegistry"* %1) #12
  ret void
}

declare %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc9AllocatorEv() local_unnamed_addr #2

declare %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc17OriginalAllocatorEv() local_unnamed_addr #2

declare %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc16AlignedAllocatorEv() local_unnamed_addr #2

declare void @_ZN4base8internal13SpinningMutex8LockSlowEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base12_GLOBAL__N_112ReleaseLocksEv() unnamed_addr #0 {
  %1 = tail call dereferenceable(32) %"class.base::internal::ThreadCacheRegistry"* @_ZN4base8internal19ThreadCacheRegistry8InstanceEv() #12
  %2 = getelementptr inbounds %"class.base::internal::ThreadCacheRegistry", %"class.base::internal::ThreadCacheRegistry"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = atomicrmw xchg i32* %2, i32 0 release
  %4 = icmp eq i32 %3, 2
  br i1 %4, label %5, label %7, !prof !6

5:                                                ; preds = %0
  %6 = getelementptr inbounds %"class.base::internal::ThreadCacheRegistry", %"class.base::internal::ThreadCacheRegistry"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %6) #12
  br label %7

7:                                                ; preds = %0, %5
  %8 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc9AllocatorEv() #12
  %9 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc16AlignedAllocatorEv() #12
  %10 = icmp eq %"struct.base::PartitionRoot"* %9, %8
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %9, i64 0, i32 8
  %13 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw xchg i32* %13, i32 0 release
  %15 = icmp eq i32 %14, 2
  br i1 %15, label %16, label %18, !prof !6

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %12, i64 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %17) #12
  br label %18

18:                                               ; preds = %16, %11, %7
  %19 = tail call %"struct.base::PartitionRoot"* @_ZN4base8internal20PartitionAllocMalloc17OriginalAllocatorEv() #12
  %20 = icmp eq %"struct.base::PartitionRoot"* %19, null
  br i1 %20, label %28, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %19, i64 0, i32 8
  %23 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw xchg i32* %23, i32 0 release
  %25 = icmp eq i32 %24, 2
  br i1 %25, label %26, label %28, !prof !6

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %22, i64 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %27) #12
  br label %28

28:                                               ; preds = %26, %21, %18
  %29 = getelementptr inbounds %"struct.base::PartitionRoot", %"struct.base::PartitionRoot"* %8, i64 0, i32 8
  %30 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw xchg i32* %30, i32 0 release
  %32 = icmp eq i32 %31, 2
  br i1 %32, label %33, label %35, !prof !6

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.base::internal::MaybeSpinLock", %"class.base::internal::MaybeSpinLock"* %29, i64 0, i32 0
  tail call void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"* %34) #12
  br label %35

35:                                               ; preds = %28, %33
  ret void
}

declare void @_ZN4base8internal13SpinningMutex9FutexWakeEv(%"class.base::internal::SpinningMutex"*) local_unnamed_addr #2

declare void @_ZN4base8internal19ThreadCacheRegistry34ForcePurgeAllThreadAfterForkUnsafeEv(%"class.base::internal::ThreadCacheRegistry"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb1EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata"*, i1 zeroext) unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %0, i64 0, i32 2
  %5 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %4, align 1
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = icmp ult i32 %7, 4096
  br i1 %9, label %192, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %0, i64 0, i32 3
  %12 = load i16, i16* %11, align 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %192, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.base::internal::SlotSpanMetadata"* %0 to %"struct.base::internal::PartitionPage"*
  %20 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %19, i64 1, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 1
  %22 = add i64 %21, 4095
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, -4096
  %25 = sub i32 %7, %24
  %26 = zext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  %28 = xor i1 %1, true
  %29 = or i1 %27, %28
  br i1 %29, label %192, label %30

30:                                               ; preds = %18
  %31 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %0 to i64
  %32 = and i64 %31, 2097151
  %33 = add nuw nsw i64 %32, 36028797018959872
  %34 = lshr i64 %33, 5
  %35 = and i64 %31, -2097152
  %36 = shl i64 %34, 14
  %37 = add i64 %36, %35
  %38 = inttoptr i64 %37 to i8*
  %39 = and i64 %22, 4294963200
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %40, i64 %26) #12
  br label %192

41:                                               ; preds = %14
  %42 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %5, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 %43, 12
  %45 = and i32 %44, 1044480
  %46 = udiv i32 %45, %7
  %47 = and i32 %46, 65535
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %0, i64 0, i32 4
  %50 = load i16, i16* %49, align 1
  %51 = zext i16 %50 to i64
  %52 = sub nsw i64 %48, %51
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 1, i64 %52, i1 false)
  %54 = ptrtoint %"struct.base::internal::SlotSpanMetadata"* %0 to i64
  %55 = and i64 %54, 2097151
  %56 = add nuw nsw i64 %55, 36028797018959872
  %57 = lshr i64 %56, 5
  %58 = and i64 %54, -2097152
  %59 = shl i64 %57, 14
  %60 = add i64 %59, %58
  %61 = inttoptr i64 %60 to i8*
  %62 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %0, i64 0, i32 0
  %63 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %62, align 1
  %64 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %88, %41
  %66 = phi i64 [ -1, %41 ], [ %71, %88 ]
  br label %92

67:                                               ; preds = %41, %88
  %68 = phi %"class.base::internal::PartitionFreelistEntry"* [ %90, %88 ], [ %63, %41 ]
  %69 = ptrtoint %"class.base::internal::PartitionFreelistEntry"* %68 to i64
  %70 = sub i64 %69, %60
  %71 = udiv i64 %70, %8
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %71
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %68, i64 0, i32 0
  %74 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %73, align 8
  %75 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %74, null
  %76 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %74 to i64
  br i1 %75, label %77, label %79

77:                                               ; preds = %67
  %78 = tail call i64 @llvm.bswap.i64(i64 %76) #12
  br label %88

79:                                               ; preds = %67
  %80 = xor i64 %76, -1
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %68, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %80
  br i1 %83, label %85, label %84, !prof !3

84:                                               ; preds = %79
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %76) #12
  %87 = inttoptr i64 %86 to i8*
  tail call void @llvm.prefetch(i8* nonnull %87, i32 0, i32 3, i32 1) #12
  br label %88

88:                                               ; preds = %77, %85
  %89 = phi i64 [ %78, %77 ], [ %86, %85 ]
  %90 = inttoptr i64 %89 to %"class.base::internal::PartitionFreelistEntry"*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %65, label %67

92:                                               ; preds = %92, %65
  %93 = phi i64 [ %95, %92 ], [ %52, %65 ]
  %94 = phi i64 [ %99, %92 ], [ 0, %65 ]
  %95 = add i64 %93, -1
  %96 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  %99 = add i64 %94, 1
  br i1 %98, label %92, label %100

100:                                              ; preds = %92
  %101 = icmp eq i64 %94, 0
  br i1 %101, label %157, label %102

102:                                              ; preds = %100
  %103 = mul i64 %93, %8
  %104 = getelementptr inbounds i8, i8* %61, i64 %103
  %105 = mul i64 %94, %8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = ptrtoint i8* %104 to i64
  %108 = add i64 %107, 4095
  %109 = and i64 %108, -4096
  %110 = inttoptr i64 %109 to i8*
  %111 = ptrtoint i8* %106 to i64
  %112 = add i64 %111, 4095
  %113 = and i64 %112, -4096
  %114 = inttoptr i64 %113 to i8*
  %115 = icmp ult i8* %110, %114
  %116 = sub i64 %113, %109
  %117 = select i1 %115, i64 %116, i64 0
  %118 = icmp eq i64 %117, 0
  %119 = xor i1 %1, true
  %120 = or i1 %118, %119
  br i1 %120, label %157, label %121

121:                                              ; preds = %102
  %122 = trunc i64 %94 to i16
  %123 = add i16 %50, %122
  store i16 %123, i16* %49, align 1
  %124 = icmp eq i64 %93, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %151, %121
  %126 = phi i64 [ %66, %121 ], [ %152, %151 ]
  %127 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %121 ], [ %153, %151 ]
  store %"class.base::internal::PartitionFreelistEntry"* %127, %"class.base::internal::PartitionFreelistEntry"** %62, align 1
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %110, i64 %117) #12
  br label %157

128:                                              ; preds = %121, %151
  %129 = phi i64 [ %155, %151 ], [ 0, %121 ]
  %130 = phi %"class.base::internal::PartitionFreelistEntry"* [ %154, %151 ], [ null, %121 ]
  %131 = phi %"class.base::internal::PartitionFreelistEntry"* [ %153, %151 ], [ null, %121 ]
  %132 = phi i64 [ %152, %151 ], [ %66, %121 ]
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %129
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %151

136:                                              ; preds = %128
  %137 = mul i64 %129, %8
  %138 = getelementptr inbounds i8, i8* %61, i64 %137
  %139 = bitcast i8* %138 to %"class.base::internal::PartitionFreelistEntry"*
  %140 = bitcast i8* %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = getelementptr inbounds i8, i8* %138, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 -1, i64* %142, align 8
  %143 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %131, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %136
  %145 = ptrtoint i8* %138 to i64
  %146 = tail call i64 @llvm.bswap.i64(i64 %145) #12
  %147 = inttoptr i64 %146 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %148 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %130, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %147, %"struct.base::internal::EncodedPartitionFreelistEntry"** %148, align 8
  %149 = xor i64 %146, -1
  %150 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %130, i64 0, i32 1
  store i64 %149, i64* %150, align 8
  br label %151

151:                                              ; preds = %144, %136, %128
  %152 = phi i64 [ %132, %128 ], [ %129, %136 ], [ %129, %144 ]
  %153 = phi %"class.base::internal::PartitionFreelistEntry"* [ %131, %128 ], [ %139, %136 ], [ %131, %144 ]
  %154 = phi %"class.base::internal::PartitionFreelistEntry"* [ %130, %128 ], [ %139, %136 ], [ %139, %144 ]
  %155 = add nuw i64 %129, 1
  %156 = icmp eq i64 %155, %93
  br i1 %156, label %125, label %128

157:                                              ; preds = %125, %102, %100
  %158 = phi i64 [ 0, %100 ], [ %117, %102 ], [ %117, %125 ]
  %159 = phi i64 [ %66, %100 ], [ %66, %102 ], [ %126, %125 ]
  %160 = icmp eq i64 %93, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %188, %157
  %162 = phi i64 [ %158, %157 ], [ %189, %188 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  br label %192

163:                                              ; preds = %157, %188
  %164 = phi i64 [ %190, %188 ], [ 0, %157 ]
  %165 = phi i64 [ %189, %188 ], [ %158, %157 ]
  %166 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %164
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %188

169:                                              ; preds = %163
  %170 = mul i64 %164, %8
  %171 = getelementptr inbounds i8, i8* %61, i64 %170
  %172 = getelementptr inbounds i8, i8* %171, i64 %8
  %173 = icmp eq i64 %164, %159
  %174 = getelementptr inbounds i8, i8* %171, i64 16
  %175 = select i1 %173, i8* %171, i8* %174
  %176 = ptrtoint i8* %175 to i64
  %177 = add i64 %176, 4095
  %178 = and i64 %177, -4096
  %179 = inttoptr i64 %178 to i8*
  %180 = ptrtoint i8* %172 to i64
  %181 = and i64 %180, -4096
  %182 = inttoptr i64 %181 to i8*
  %183 = icmp ult i8* %179, %182
  br i1 %183, label %184, label %188

184:                                              ; preds = %169
  %185 = sub i64 %181, %178
  %186 = add i64 %185, %165
  br i1 %1, label %187, label %188

187:                                              ; preds = %184
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %179, i64 %185) #12
  br label %188

188:                                              ; preds = %169, %187, %184, %163
  %189 = phi i64 [ %165, %163 ], [ %165, %169 ], [ %186, %187 ], [ %186, %184 ]
  %190 = add nuw i64 %164, 1
  %191 = icmp eq i64 %190, %93
  br i1 %191, label %161, label %163

192:                                              ; preds = %161, %18, %30, %2, %10
  %193 = phi i64 [ 0, %10 ], [ 0, %2 ], [ %162, %161 ], [ %26, %18 ], [ %26, %30 ]
  ret i64 %193
}

declare void @_ZN4base18DiscardSystemPagesEPvm(i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb1EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* nocapture, %"struct.base::internal::SlotSpanMetadata"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 2
  %4 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %3, align 1
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 12
  %8 = and i32 %7, 1044480
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %4, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = udiv i32 %8, %10
  %12 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 3
  %13 = load i16, i16* %12, align 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 0
  %17 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %18 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 11
  br label %89

21:                                               ; preds = %2, %15
  %22 = tail call fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb1EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata"* %1, i1 zeroext false)
  %23 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = trunc i64 %22 to i32
  %26 = add i32 %24, %25
  store i32 %26, i32* %23, align 4
  %27 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %21
  %31 = bitcast %"struct.base::internal::SlotSpanMetadata"* %1 to %"struct.base::internal::PartitionPage"*
  %32 = getelementptr inbounds %"struct.base::internal::PartitionPage", %"struct.base::internal::PartitionPage"* %31, i64 1, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 1
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, %34
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  br label %49

40:                                               ; preds = %21
  %41 = load i16, i16* %12, align 1
  %42 = sext i16 %41 to i32
  %43 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 %44, %42
  %46 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  store i32 %48, i32* %46, align 4
  br label %49

49:                                               ; preds = %40, %30
  %50 = phi i32 [ %44, %40 ], [ %39, %30 ]
  %51 = and i32 %11, 65535
  %52 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 4
  %53 = load i16, i16* %52, align 1
  %54 = zext i16 %53 to i32
  %55 = sub nsw i32 %51, %54
  %56 = mul i32 %55, %50
  %57 = add i32 %56, 4095
  %58 = and i32 %57, -4096
  %59 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %58, %60
  store i32 %61, i32* %59, align 4
  %62 = load i16, i16* %12, align 1
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata", %"struct.base::internal::SlotSpanMetadata"* %1, i64 0, i32 0
  %66 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %65, align 1
  %67 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 6
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, %58
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 10
  br label %89

73:                                               ; preds = %64, %49
  %74 = sext i16 %62 to i32
  %75 = load %"struct.base::internal::PartitionBucket"*, %"struct.base::internal::PartitionBucket"** %3, align 1
  %76 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %75, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = shl i32 %77, 12
  %79 = and i32 %78, 1044480
  %80 = getelementptr inbounds %"struct.base::internal::PartitionBucket", %"struct.base::internal::PartitionBucket"* %75, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = udiv i32 %79, %81
  %83 = and i32 %82, 65535
  %84 = icmp eq i32 %83, %74
  br i1 %84, label %85, label %87

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 8
  br label %89

87:                                               ; preds = %73
  %88 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 9
  br label %89

89:                                               ; preds = %68, %87, %85, %19
  %90 = phi i32* [ %72, %68 ], [ %88, %87 ], [ %86, %85 ], [ %20, %19 ]
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 4
  ret void
}

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb1EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb0EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata.19"*, i1 zeroext) unnamed_addr #0 {
  %3 = alloca [16 x i8], align 16
  %4 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %0, i64 0, i32 2
  %5 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %4, align 1
  %6 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %5, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = zext i32 %7 to i64
  %9 = icmp ult i32 %7, 4096
  br i1 %9, label %192, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %0, i64 0, i32 3
  %12 = load i16, i16* %11, align 1
  %13 = icmp eq i16 %12, 0
  br i1 %13, label %192, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %0, i64 0, i32 6
  %16 = load i8, i8* %15, align 1, !range !5
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %41, label %18

18:                                               ; preds = %14
  %19 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %0 to %"struct.base::internal::PartitionPage.37"*
  %20 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %19, i64 1, i32 0, i32 0, i32 0
  %21 = load i64, i64* %20, align 1
  %22 = add i64 %21, 4095
  %23 = trunc i64 %22 to i32
  %24 = and i32 %23, -4096
  %25 = sub i32 %7, %24
  %26 = zext i32 %25 to i64
  %27 = icmp eq i32 %25, 0
  %28 = xor i1 %1, true
  %29 = or i1 %27, %28
  br i1 %29, label %192, label %30

30:                                               ; preds = %18
  %31 = ptrtoint %"struct.base::internal::SlotSpanMetadata.19"* %0 to i64
  %32 = and i64 %31, 2097151
  %33 = add nuw nsw i64 %32, 36028797018959872
  %34 = lshr i64 %33, 5
  %35 = and i64 %31, -2097152
  %36 = shl i64 %34, 14
  %37 = add i64 %36, %35
  %38 = inttoptr i64 %37 to i8*
  %39 = and i64 %22, 4294963200
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %40, i64 %26) #12
  br label %192

41:                                               ; preds = %14
  %42 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %5, i64 0, i32 4
  %43 = load i32, i32* %42, align 4
  %44 = shl i32 %43, 12
  %45 = and i32 %44, 1044480
  %46 = udiv i32 %45, %7
  %47 = and i32 %46, 65535
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %0, i64 0, i32 4
  %50 = load i16, i16* %49, align 1
  %51 = zext i16 %50 to i64
  %52 = sub nsw i64 %48, %51
  %53 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %53, i8 1, i64 %52, i1 false)
  %54 = ptrtoint %"struct.base::internal::SlotSpanMetadata.19"* %0 to i64
  %55 = and i64 %54, 2097151
  %56 = add nuw nsw i64 %55, 36028797018959872
  %57 = lshr i64 %56, 5
  %58 = and i64 %54, -2097152
  %59 = shl i64 %57, 14
  %60 = add i64 %59, %58
  %61 = inttoptr i64 %60 to i8*
  %62 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %0, i64 0, i32 0
  %63 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %62, align 1
  %64 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %63, null
  br i1 %64, label %65, label %67

65:                                               ; preds = %88, %41
  %66 = phi i64 [ -1, %41 ], [ %71, %88 ]
  br label %92

67:                                               ; preds = %41, %88
  %68 = phi %"class.base::internal::PartitionFreelistEntry"* [ %90, %88 ], [ %63, %41 ]
  %69 = ptrtoint %"class.base::internal::PartitionFreelistEntry"* %68 to i64
  %70 = sub i64 %69, %60
  %71 = udiv i64 %70, %8
  %72 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %71
  store i8 0, i8* %72, align 1
  %73 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %68, i64 0, i32 0
  %74 = load %"struct.base::internal::EncodedPartitionFreelistEntry"*, %"struct.base::internal::EncodedPartitionFreelistEntry"** %73, align 8
  %75 = icmp eq %"struct.base::internal::EncodedPartitionFreelistEntry"* %74, null
  %76 = ptrtoint %"struct.base::internal::EncodedPartitionFreelistEntry"* %74 to i64
  br i1 %75, label %77, label %79

77:                                               ; preds = %67
  %78 = tail call i64 @llvm.bswap.i64(i64 %76) #12
  br label %88

79:                                               ; preds = %67
  %80 = xor i64 %76, -1
  %81 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %68, i64 0, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %80
  br i1 %83, label %85, label %84, !prof !3

84:                                               ; preds = %79
  tail call fastcc void @_ZN4base8internal12_GLOBAL__N_126FreelistCorruptionDetectedEv() #14
  unreachable

85:                                               ; preds = %79
  %86 = tail call i64 @llvm.bswap.i64(i64 %76) #12
  %87 = inttoptr i64 %86 to i8*
  tail call void @llvm.prefetch(i8* nonnull %87, i32 0, i32 3, i32 1) #12
  br label %88

88:                                               ; preds = %77, %85
  %89 = phi i64 [ %78, %77 ], [ %86, %85 ]
  %90 = inttoptr i64 %89 to %"class.base::internal::PartitionFreelistEntry"*
  %91 = icmp eq i64 %89, 0
  br i1 %91, label %65, label %67

92:                                               ; preds = %92, %65
  %93 = phi i64 [ %95, %92 ], [ %52, %65 ]
  %94 = phi i64 [ %99, %92 ], [ 0, %65 ]
  %95 = add i64 %93, -1
  %96 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = icmp eq i8 %97, 0
  %99 = add i64 %94, 1
  br i1 %98, label %92, label %100

100:                                              ; preds = %92
  %101 = icmp eq i64 %94, 0
  br i1 %101, label %157, label %102

102:                                              ; preds = %100
  %103 = mul i64 %93, %8
  %104 = getelementptr inbounds i8, i8* %61, i64 %103
  %105 = mul i64 %94, %8
  %106 = getelementptr inbounds i8, i8* %104, i64 %105
  %107 = ptrtoint i8* %104 to i64
  %108 = add i64 %107, 4095
  %109 = and i64 %108, -4096
  %110 = inttoptr i64 %109 to i8*
  %111 = ptrtoint i8* %106 to i64
  %112 = add i64 %111, 4095
  %113 = and i64 %112, -4096
  %114 = inttoptr i64 %113 to i8*
  %115 = icmp ult i8* %110, %114
  %116 = sub i64 %113, %109
  %117 = select i1 %115, i64 %116, i64 0
  %118 = icmp eq i64 %117, 0
  %119 = xor i1 %1, true
  %120 = or i1 %118, %119
  br i1 %120, label %157, label %121

121:                                              ; preds = %102
  %122 = trunc i64 %94 to i16
  %123 = add i16 %50, %122
  store i16 %123, i16* %49, align 1
  %124 = icmp eq i64 %93, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %151, %121
  %126 = phi i64 [ %66, %121 ], [ %152, %151 ]
  %127 = phi %"class.base::internal::PartitionFreelistEntry"* [ null, %121 ], [ %153, %151 ]
  store %"class.base::internal::PartitionFreelistEntry"* %127, %"class.base::internal::PartitionFreelistEntry"** %62, align 1
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %110, i64 %117) #12
  br label %157

128:                                              ; preds = %121, %151
  %129 = phi i64 [ %155, %151 ], [ 0, %121 ]
  %130 = phi %"class.base::internal::PartitionFreelistEntry"* [ %154, %151 ], [ null, %121 ]
  %131 = phi %"class.base::internal::PartitionFreelistEntry"* [ %153, %151 ], [ null, %121 ]
  %132 = phi i64 [ %152, %151 ], [ %66, %121 ]
  %133 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %129
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %151

136:                                              ; preds = %128
  %137 = mul i64 %129, %8
  %138 = getelementptr inbounds i8, i8* %61, i64 %137
  %139 = bitcast i8* %138 to %"class.base::internal::PartitionFreelistEntry"*
  %140 = bitcast i8* %138 to %"struct.base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* null, %"struct.base::internal::EncodedPartitionFreelistEntry"** %140, align 8
  %141 = getelementptr inbounds i8, i8* %138, i64 8
  %142 = bitcast i8* %141 to i64*
  store i64 -1, i64* %142, align 8
  %143 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %131, null
  br i1 %143, label %151, label %144

144:                                              ; preds = %136
  %145 = ptrtoint i8* %138 to i64
  %146 = tail call i64 @llvm.bswap.i64(i64 %145) #12
  %147 = inttoptr i64 %146 to %"struct.base::internal::EncodedPartitionFreelistEntry"*
  %148 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %130, i64 0, i32 0
  store %"struct.base::internal::EncodedPartitionFreelistEntry"* %147, %"struct.base::internal::EncodedPartitionFreelistEntry"** %148, align 8
  %149 = xor i64 %146, -1
  %150 = getelementptr inbounds %"class.base::internal::PartitionFreelistEntry", %"class.base::internal::PartitionFreelistEntry"* %130, i64 0, i32 1
  store i64 %149, i64* %150, align 8
  br label %151

151:                                              ; preds = %144, %136, %128
  %152 = phi i64 [ %132, %128 ], [ %129, %136 ], [ %129, %144 ]
  %153 = phi %"class.base::internal::PartitionFreelistEntry"* [ %131, %128 ], [ %139, %136 ], [ %131, %144 ]
  %154 = phi %"class.base::internal::PartitionFreelistEntry"* [ %130, %128 ], [ %139, %136 ], [ %139, %144 ]
  %155 = add nuw i64 %129, 1
  %156 = icmp eq i64 %155, %93
  br i1 %156, label %125, label %128

157:                                              ; preds = %125, %102, %100
  %158 = phi i64 [ 0, %100 ], [ %117, %102 ], [ %117, %125 ]
  %159 = phi i64 [ %66, %100 ], [ %66, %102 ], [ %126, %125 ]
  %160 = icmp eq i64 %93, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %188, %157
  %162 = phi i64 [ %158, %157 ], [ %189, %188 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #12
  br label %192

163:                                              ; preds = %157, %188
  %164 = phi i64 [ %190, %188 ], [ 0, %157 ]
  %165 = phi i64 [ %189, %188 ], [ %158, %157 ]
  %166 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 %164
  %167 = load i8, i8* %166, align 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %188

169:                                              ; preds = %163
  %170 = mul i64 %164, %8
  %171 = getelementptr inbounds i8, i8* %61, i64 %170
  %172 = getelementptr inbounds i8, i8* %171, i64 %8
  %173 = icmp eq i64 %164, %159
  %174 = getelementptr inbounds i8, i8* %171, i64 16
  %175 = select i1 %173, i8* %171, i8* %174
  %176 = ptrtoint i8* %175 to i64
  %177 = add i64 %176, 4095
  %178 = and i64 %177, -4096
  %179 = inttoptr i64 %178 to i8*
  %180 = ptrtoint i8* %172 to i64
  %181 = and i64 %180, -4096
  %182 = inttoptr i64 %181 to i8*
  %183 = icmp ult i8* %179, %182
  br i1 %183, label %184, label %188

184:                                              ; preds = %169
  %185 = sub i64 %181, %178
  %186 = add i64 %185, %165
  br i1 %1, label %187, label %188

187:                                              ; preds = %184
  tail call void @_ZN4base18DiscardSystemPagesEPvm(i8* %179, i64 %185) #12
  br label %188

188:                                              ; preds = %169, %187, %184, %163
  %189 = phi i64 [ %165, %163 ], [ %165, %169 ], [ %186, %187 ], [ %186, %184 ]
  %190 = add nuw i64 %164, 1
  %191 = icmp eq i64 %190, %93
  br i1 %191, label %161, label %163

192:                                              ; preds = %161, %18, %30, %2, %10
  %193 = phi i64 [ 0, %10 ], [ 0, %2 ], [ %162, %161 ], [ %26, %18 ], [ %26, %30 ]
  ret i64 %193
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN4base8internalL26PartitionDumpSlotSpanStatsILb0EEEvPNS_26PartitionBucketMemoryStatsEPNS0_16SlotSpanMetadataIXT_EEE(%"struct.base::PartitionBucketMemoryStats"* nocapture, %"struct.base::internal::SlotSpanMetadata.19"*) unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 2
  %4 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %3, align 1
  %5 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %4, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = shl i32 %6, 12
  %8 = and i32 %7, 1044480
  %9 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %4, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = udiv i32 %8, %10
  %12 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 3
  %13 = load i16, i16* %12, align 1
  %14 = icmp eq i16 %13, 0
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 0
  %17 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %16, align 1
  %18 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %17, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 11
  br label %89

21:                                               ; preds = %2, %15
  %22 = tail call fastcc i64 @_ZN4base8internalL22PartitionPurgeSlotSpanILb0EEEmPNS0_16SlotSpanMetadataIXT_EEEb(%"struct.base::internal::SlotSpanMetadata.19"* %1, i1 zeroext false)
  %23 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 7
  %24 = load i32, i32* %23, align 4
  %25 = trunc i64 %22 to i32
  %26 = add i32 %24, %25
  store i32 %26, i32* %23, align 4
  %27 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 6
  %28 = load i8, i8* %27, align 1, !range !5
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %40, label %30

30:                                               ; preds = %21
  %31 = bitcast %"struct.base::internal::SlotSpanMetadata.19"* %1 to %"struct.base::internal::PartitionPage.37"*
  %32 = getelementptr inbounds %"struct.base::internal::PartitionPage.37", %"struct.base::internal::PartitionPage.37"* %31, i64 1, i32 0, i32 0, i32 0
  %33 = load i64, i64* %32, align 1
  %34 = trunc i64 %33 to i32
  %35 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = add i32 %36, %34
  store i32 %37, i32* %35, align 4
  %38 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  br label %49

40:                                               ; preds = %21
  %41 = load i16, i16* %12, align 1
  %42 = sext i16 %41 to i32
  %43 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = mul i32 %44, %42
  %46 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = add i32 %47, %45
  store i32 %48, i32* %46, align 4
  br label %49

49:                                               ; preds = %40, %30
  %50 = phi i32 [ %44, %40 ], [ %39, %30 ]
  %51 = and i32 %11, 65535
  %52 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 4
  %53 = load i16, i16* %52, align 1
  %54 = zext i16 %53 to i32
  %55 = sub nsw i32 %51, %54
  %56 = mul i32 %55, %50
  %57 = add i32 %56, 4095
  %58 = and i32 %57, -4096
  %59 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 5
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %58, %60
  store i32 %61, i32* %59, align 4
  %62 = load i16, i16* %12, align 1
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %64, label %73

64:                                               ; preds = %49
  %65 = getelementptr inbounds %"struct.base::internal::SlotSpanMetadata.19", %"struct.base::internal::SlotSpanMetadata.19"* %1, i64 0, i32 0
  %66 = load %"class.base::internal::PartitionFreelistEntry"*, %"class.base::internal::PartitionFreelistEntry"** %65, align 1
  %67 = icmp eq %"class.base::internal::PartitionFreelistEntry"* %66, null
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 6
  %70 = load i32, i32* %69, align 4
  %71 = add i32 %70, %58
  store i32 %71, i32* %69, align 4
  %72 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 10
  br label %89

73:                                               ; preds = %64, %49
  %74 = sext i16 %62 to i32
  %75 = load %"struct.base::internal::PartitionBucket.18"*, %"struct.base::internal::PartitionBucket.18"** %3, align 1
  %76 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %75, i64 0, i32 4
  %77 = load i32, i32* %76, align 4
  %78 = shl i32 %77, 12
  %79 = and i32 %78, 1044480
  %80 = getelementptr inbounds %"struct.base::internal::PartitionBucket.18", %"struct.base::internal::PartitionBucket.18"* %75, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = udiv i32 %79, %81
  %83 = and i32 %82, 65535
  %84 = icmp eq i32 %83, %74
  br i1 %84, label %85, label %87

85:                                               ; preds = %73
  %86 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 8
  br label %89

87:                                               ; preds = %73
  %88 = getelementptr inbounds %"struct.base::PartitionBucketMemoryStats", %"struct.base::PartitionBucketMemoryStats"* %0, i64 0, i32 9
  br label %89

89:                                               ; preds = %68, %87, %85, %19
  %90 = phi i32* [ %72, %68 ], [ %88, %87 ], [ %86, %85 ], [ %20, %19 ]
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %91, 1
  store i32 %92, i32* %90, align 4
  ret void
}

declare { i8*, i64 } @_ZN4base8internal16SlotSpanMetadataILb0EE12FreeSlowPathEv(%"struct.base::internal::SlotSpanMetadata.19"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noinline noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inaccessiblemem_or_argmemonly nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2146410443, i32 1073205}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2142372893}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{i32 -2142044852}
!8 = !{i32 -2142044831}
!9 = !{i64 0, i64 65}
!10 = !{!"branch_weights", i32 4000000, i32 4001}
!11 = !{!"branch_weights", i32 1, i32 4001}
!12 = !{!"branch_weights", i32 4001, i32 4000000}
!13 = !{i32 -2142100494}
!14 = !{i32 -2142100473}
!15 = !{i32 -2142411466}
!16 = !{i32 -2142411445}
