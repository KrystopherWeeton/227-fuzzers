; ModuleID = '../../third_party/vulkan-deps/spirv-tools/src/source/opt/merge_return_pass.cpp'
source_filename = "../../third_party/vulkan-deps/spirv-tools/src/source/opt/merge_return_pass.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.spv_position_t = type { i64, i64, i64 }
%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.spvtools::opt::MergeReturnPass" = type { %"class.spvtools::opt::MemPass", %"class.std::__1::vector.932", %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::unordered_map.939", %"class.std::__1::unordered_map.967", %"class.std::__1::unordered_set.910" }
%"class.spvtools::opt::MemPass" = type { %"class.spvtools::opt::Pass.base", [7 x i8], %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_map.249" }
%"class.spvtools::opt::Pass.base" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8 }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)* }
%"class.spvtools::opt::IRContext" = type <{ %struct.spv_context_t*, %"class.spvtools::AssemblyGrammar", i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::function", %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.152", %"class.std::__1::unordered_map.173", %"class.std::__1::unordered_map.201", i32, [4 x i8], %"class.std::__1::unordered_map.225", %"class.std::__1::unordered_map.249", %"class.std::__1::unique_ptr.273", %"class.std::__1::map", %"class.std::__1::map.364", %"class.std::__1::unordered_map.373", %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.593", %"class.std::__1::unique_ptr.623", %"class.std::__1::unique_ptr.638", %"class.std::__1::unique_ptr.694", %"class.std::__1::unique_ptr.724", %"class.std::__1::unique_ptr.754", %"class.std::__1::unique_ptr.873", i32, i8, i8, [2 x i8] }>
%struct.spv_context_t = type { i32, %struct.spv_opcode_table_t*, %struct.spv_operand_table_t*, %struct.spv_ext_inst_table_t*, %"class.std::__1::function" }
%struct.spv_opcode_table_t = type { i32, %struct.spv_opcode_desc_t* }
%struct.spv_opcode_desc_t = type { i8*, i32, i32, i32*, i16, [16 x i32], i8, i8, i32, i32*, i32, i32 }
%struct.spv_operand_table_t = type { i32, %struct.spv_operand_desc_group_t* }
%struct.spv_operand_desc_group_t = type { i32, i32, %struct.spv_operand_desc_t* }
%struct.spv_operand_desc_t = type { i8*, i32, i32, i32*, i32, i32*, [16 x i32], i32, i32 }
%struct.spv_ext_inst_table_t = type { i32, %struct.spv_ext_inst_group_t* }
%struct.spv_ext_inst_group_t = type { i32, i32, %struct.spv_ext_inst_desc_t* }
%struct.spv_ext_inst_desc_t = type { i8*, i32, i32, i32*, [16 x i32] }
%"class.spvtools::AssemblyGrammar" = type { i32, %struct.spv_operand_table_t*, %struct.spv_opcode_table_t*, %struct.spv_ext_inst_table_t* }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.spvtools::opt::Module"* }
%"class.spvtools::opt::Module" = type <{ %"struct.spvtools::opt::ModuleHeader", [4 x i8], %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.26", %"class.std::__1::vector.14", i8, [7 x i8] }>
%"struct.spvtools::opt::ModuleHeader" = type { i32, i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.21" = type { %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.spvtools::opt::Instruction"* }
%"class.spvtools::opt::InstructionList" = type { %"class.spvtools::utils::IntrusiveList" }
%"class.spvtools::utils::IntrusiveList" = type { i32 (...)**, %"class.spvtools::opt::Instruction" }
%"class.spvtools::opt::Instruction" = type { %"class.spvtools::utils::IntrusiveNodeBase.base", %"class.spvtools::opt::IRContext"*, i32, i8, i8, i32, %"class.std::__1::vector", %"class.std::__1::vector.14", %"class.spvtools::opt::DebugScope" }
%"class.spvtools::utils::IntrusiveNodeBase.base" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8 }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"*, %"class.std::__1::__compressed_pair.9" }
%"struct.spvtools::opt::Operand" = type { i32, %"class.spvtools::utils::SmallVector" }
%"class.spvtools::utils::SmallVector" = type { i32 (...)**, i64, i32*, [2 x %"struct.std::__1::aligned_storage<4, 4>::type"], %"class.std::__1::unique_ptr.0" }
%"struct.std::__1::aligned_storage<4, 4>::type" = type { [4 x i8] }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::vector.3"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { i32*, i32*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i32* }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.spvtools::opt::Operand"* }
%"class.spvtools::opt::DebugScope" = type { i32, i32 }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.spvtools::opt::Function"* }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::unique_ptr.28"* }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.spvtools::opt::analysis::DefUseManager"* }
%"class.spvtools::opt::analysis::DefUseManager" = type { %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.std::__1::unordered_map.91" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.65", %"class.std::__1::__compressed_pair.74", %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.81", [4 x i8] }>
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67", %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.84", %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.91" = type { %"class.std::__1::__hash_table.92" }
%"class.std::__1::__hash_table.92" = type <{ %"class.std::__1::unique_ptr.93", %"class.std::__1::__compressed_pair.103", %"class.std::__1::__compressed_pair.108", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95", %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"struct.std::__1::__hash_node_base.96"** }
%"struct.std::__1::__hash_node_base.96" = type { %"struct.std::__1::__hash_node_base.96"* }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.std::__1::__bucket_list_deallocator.98" }
%"class.std::__1::__bucket_list_deallocator.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { %"struct.std::__1::__hash_node_base.96" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.spvtools::opt::analysis::DecorationManager"* }
%"class.spvtools::opt::analysis::DecorationManager" = type { %"class.std::__1::unordered_map.125", %"class.spvtools::opt::Module"* }
%"class.std::__1::unordered_map.125" = type { %"class.std::__1::__hash_table.126" }
%"class.std::__1::__hash_table.126" = type <{ %"class.std::__1::unique_ptr.127", %"class.std::__1::__compressed_pair.137", %"class.std::__1::__compressed_pair.142", %"class.std::__1::__compressed_pair.145", [4 x i8] }>
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129", %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"struct.std::__1::__hash_node_base.130"** }
%"struct.std::__1::__hash_node_base.130" = type { %"struct.std::__1::__hash_node_base.130"* }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.std::__1::__bucket_list_deallocator.132" }
%"class.std::__1::__bucket_list_deallocator.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::__hash_node_base.130" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.spvtools::opt::FeatureManager"* }
%"class.spvtools::opt::FeatureManager" = type { %"class.spvtools::AssemblyGrammar"*, %"class.spvtools::EnumSet", %"class.spvtools::EnumSet.169", i32, i32 }
%"class.spvtools::EnumSet" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.std::__1::set.158"* }
%"class.std::__1::set.158" = type { %"class.std::__1::__tree.159" }
%"class.std::__1::__tree.159" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.160", %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::EnumSet.169" = type { i64, %"class.std::__1::unique_ptr.155" }
%"class.std::__1::unordered_map.173" = type { %"class.std::__1::__hash_table.174" }
%"class.std::__1::__hash_table.174" = type <{ %"class.std::__1::unique_ptr.175", %"class.std::__1::__compressed_pair.185", %"class.std::__1::__compressed_pair.190", %"class.std::__1::__compressed_pair.195", [4 x i8] }>
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177", %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"struct.std::__1::__hash_node_base.178"** }
%"struct.std::__1::__hash_node_base.178" = type { %"struct.std::__1::__hash_node_base.178"* }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.std::__1::__bucket_list_deallocator.180" }
%"class.std::__1::__bucket_list_deallocator.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"struct.std::__1::__hash_node_base.178" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.201" = type { %"class.std::__1::__hash_table.202" }
%"class.std::__1::__hash_table.202" = type <{ %"class.std::__1::unique_ptr.203", %"class.std::__1::__compressed_pair.213", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.221", [4 x i8] }>
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205", %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.std::__1::__hash_node_base.206"** }
%"struct.std::__1::__hash_node_base.206" = type { %"struct.std::__1::__hash_node_base.206"* }
%"struct.std::__1::__compressed_pair_elem.207" = type { %"class.std::__1::__bucket_list_deallocator.208" }
%"class.std::__1::__bucket_list_deallocator.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"struct.std::__1::__hash_node_base.206" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.225" = type { %"class.std::__1::__hash_table.226" }
%"class.std::__1::__hash_table.226" = type <{ %"class.std::__1::unique_ptr.227", %"class.std::__1::__compressed_pair.237", %"class.std::__1::__compressed_pair.242", %"class.std::__1::__compressed_pair.245", [4 x i8] }>
%"class.std::__1::unique_ptr.227" = type { %"class.std::__1::__compressed_pair.228" }
%"class.std::__1::__compressed_pair.228" = type { %"struct.std::__1::__compressed_pair_elem.229", %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.229" = type { %"struct.std::__1::__hash_node_base.230"** }
%"struct.std::__1::__hash_node_base.230" = type { %"struct.std::__1::__hash_node_base.230"* }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.std::__1::__bucket_list_deallocator.232" }
%"class.std::__1::__bucket_list_deallocator.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"struct.std::__1::__hash_node_base.230" }
%"class.std::__1::__compressed_pair.242" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.spvtools::opt::CFG"* }
%"class.spvtools::opt::CFG" = type { %"class.spvtools::opt::Module"*, %"class.std::__1::unordered_map.276", %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock", %"class.std::__1::unordered_map.304", %"class.std::__1::unordered_map.328" }
%"class.std::__1::unordered_map.276" = type { %"class.std::__1::__hash_table.277" }
%"class.std::__1::__hash_table.277" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.288", %"class.std::__1::__compressed_pair.293", %"class.std::__1::__compressed_pair.298", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base.281"** }
%"struct.std::__1::__hash_node_base.281" = type { %"struct.std::__1::__hash_node_base.281"* }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.std::__1::__bucket_list_deallocator.283" }
%"class.std::__1::__bucket_list_deallocator.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"struct.std::__1::__hash_node_base.281" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::BasicBlock" = type { %"class.spvtools::opt::Function"*, %"class.std::__1::unique_ptr.21", %"class.spvtools::opt::InstructionList" }
%"class.std::__1::unordered_map.304" = type { %"class.std::__1::__hash_table.305" }
%"class.std::__1::__hash_table.305" = type <{ %"class.std::__1::unique_ptr.306", %"class.std::__1::__compressed_pair.316", %"class.std::__1::__compressed_pair.321", %"class.std::__1::__compressed_pair.324", [4 x i8] }>
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308", %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"struct.std::__1::__hash_node_base.309"** }
%"struct.std::__1::__hash_node_base.309" = type { %"struct.std::__1::__hash_node_base.309"* }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.std::__1::__bucket_list_deallocator.311" }
%"class.std::__1::__bucket_list_deallocator.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"struct.std::__1::__hash_node_base.309" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.328" = type { %"class.std::__1::__hash_table.329" }
%"class.std::__1::__hash_table.329" = type <{ %"class.std::__1::unique_ptr.330", %"class.std::__1::__compressed_pair.340", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.348", [4 x i8] }>
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332", %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"struct.std::__1::__hash_node_base.333"** }
%"struct.std::__1::__hash_node_base.333" = type { %"struct.std::__1::__hash_node_base.333"* }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"class.std::__1::__bucket_list_deallocator.335" }
%"class.std::__1::__bucket_list_deallocator.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %"struct.std::__1::__hash_node_base.333" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.355" }
%"class.std::__1::__tree.355" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.356", %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::map.364" = type { %"class.std::__1::__tree.365" }
%"class.std::__1::__tree.365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.366", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.366" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_map.373" = type { %"class.std::__1::__hash_table.374" }
%"class.std::__1::__hash_table.374" = type <{ %"class.std::__1::unique_ptr.375", %"class.std::__1::__compressed_pair.385", %"class.std::__1::__compressed_pair.390", %"class.std::__1::__compressed_pair.395", [4 x i8] }>
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377", %"struct.std::__1::__compressed_pair_elem.379" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"struct.std::__1::__hash_node_base.378"** }
%"struct.std::__1::__hash_node_base.378" = type { %"struct.std::__1::__hash_node_base.378"* }
%"struct.std::__1::__compressed_pair_elem.379" = type { %"class.std::__1::__bucket_list_deallocator.380" }
%"class.std::__1::__bucket_list_deallocator.380" = type { %"class.std::__1::__compressed_pair.381" }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.385" = type { %"struct.std::__1::__compressed_pair_elem.386" }
%"struct.std::__1::__compressed_pair_elem.386" = type { %"struct.std::__1::__hash_node_base.378" }
%"class.std::__1::__compressed_pair.390" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.400" = type { %"class.std::__1::__compressed_pair.401" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.spvtools::opt::analysis::ConstantManager"* }
%"class.spvtools::opt::analysis::ConstantManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.403", %"class.std::__1::multimap", %"class.std::__1::unordered_set", %"class.std::__1::vector.458" }
%"class.std::__1::unordered_map.403" = type { %"class.std::__1::__hash_table.404" }
%"class.std::__1::__hash_table.404" = type <{ %"class.std::__1::unique_ptr.405", %"class.std::__1::__compressed_pair.415", %"class.std::__1::__compressed_pair.420", %"class.std::__1::__compressed_pair.423", [4 x i8] }>
%"class.std::__1::unique_ptr.405" = type { %"class.std::__1::__compressed_pair.406" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407", %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"struct.std::__1::__hash_node_base.408"** }
%"struct.std::__1::__hash_node_base.408" = type { %"struct.std::__1::__hash_node_base.408"* }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.std::__1::__bucket_list_deallocator.410" }
%"class.std::__1::__bucket_list_deallocator.410" = type { %"class.std::__1::__compressed_pair.411" }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.415" = type { %"struct.std::__1::__compressed_pair_elem.416" }
%"struct.std::__1::__compressed_pair_elem.416" = type { %"struct.std::__1::__hash_node_base.408" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.427" }
%"class.std::__1::__tree.427" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.437" }
%"class.std::__1::__hash_table.437" = type <{ %"class.std::__1::unique_ptr.438", %"class.std::__1::__compressed_pair.448", %"class.std::__1::__compressed_pair.453", %"class.std::__1::__compressed_pair.455", [4 x i8] }>
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440", %"struct.std::__1::__compressed_pair_elem.442" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"struct.std::__1::__hash_node_base.441"** }
%"struct.std::__1::__hash_node_base.441" = type { %"struct.std::__1::__hash_node_base.441"* }
%"struct.std::__1::__compressed_pair_elem.442" = type { %"class.std::__1::__bucket_list_deallocator.443" }
%"class.std::__1::__bucket_list_deallocator.443" = type { %"class.std::__1::__compressed_pair.444" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"struct.std::__1::__hash_node_base.441" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.458" = type { %"class.std::__1::__vector_base.459" }
%"class.std::__1::__vector_base.459" = type { %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"*, %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.spvtools::opt::analysis::Constant"* }
%"class.spvtools::opt::analysis::Constant" = type { i32 (...)**, %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Type" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32, [4 x i8] }>
%"class.std::__1::vector.463" = type { %"class.std::__1::__vector_base.464" }
%"class.std::__1::__vector_base.464" = type { %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"*, %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.std::__1::unique_ptr.460"* }
%"class.std::__1::unique_ptr.480" = type { %"class.std::__1::__compressed_pair.481" }
%"class.std::__1::__compressed_pair.481" = type { %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.spvtools::opt::analysis::TypeManager"* }
%"class.spvtools::opt::analysis::TypeManager" = type { %"class.std::__1::function"*, %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.507", %"class.std::__1::unordered_set.531", %"class.std::__1::vector.553", %"class.std::__1::unordered_map.483", %"class.std::__1::unordered_map.566" }
%"class.std::__1::unordered_map.507" = type { %"class.std::__1::__hash_table.508" }
%"class.std::__1::__hash_table.508" = type <{ %"class.std::__1::unique_ptr.509", %"class.std::__1::__compressed_pair.519", %"class.std::__1::__compressed_pair.524", %"class.std::__1::__compressed_pair.527", [4 x i8] }>
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511", %"struct.std::__1::__compressed_pair_elem.513" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"struct.std::__1::__hash_node_base.512"** }
%"struct.std::__1::__hash_node_base.512" = type { %"struct.std::__1::__hash_node_base.512"* }
%"struct.std::__1::__compressed_pair_elem.513" = type { %"class.std::__1::__bucket_list_deallocator.514" }
%"class.std::__1::__bucket_list_deallocator.514" = type { %"class.std::__1::__compressed_pair.515" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.519" = type { %"struct.std::__1::__compressed_pair_elem.520" }
%"struct.std::__1::__compressed_pair_elem.520" = type { %"struct.std::__1::__hash_node_base.512" }
%"class.std::__1::__compressed_pair.524" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.531" = type { %"class.std::__1::__hash_table.532" }
%"class.std::__1::__hash_table.532" = type <{ %"class.std::__1::unique_ptr.533", %"class.std::__1::__compressed_pair.543", %"class.std::__1::__compressed_pair.548", %"class.std::__1::__compressed_pair.550", [4 x i8] }>
%"class.std::__1::unique_ptr.533" = type { %"class.std::__1::__compressed_pair.534" }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535", %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.std::__1::__hash_node_base.536"** }
%"struct.std::__1::__hash_node_base.536" = type { %"struct.std::__1::__hash_node_base.536"* }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.std::__1::__bucket_list_deallocator.538" }
%"class.std::__1::__bucket_list_deallocator.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"struct.std::__1::__hash_node_base.536" }
%"class.std::__1::__compressed_pair.548" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.553" = type { %"class.std::__1::__vector_base.554" }
%"class.std::__1::__vector_base.554" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.std::__1::__compressed_pair.561" }
%"class.spvtools::opt::analysis::TypeManager::UnresolvedType" = type { i32, %"class.std::__1::unique_ptr.555" }
%"class.std::__1::unique_ptr.555" = type { %"class.std::__1::__compressed_pair.556" }
%"class.std::__1::__compressed_pair.556" = type { %"struct.std::__1::__compressed_pair_elem.557" }
%"struct.std::__1::__compressed_pair_elem.557" = type { %"class.spvtools::opt::analysis::Type"* }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* }
%"class.std::__1::unordered_map.483" = type { %"class.std::__1::__hash_table.484" }
%"class.std::__1::__hash_table.484" = type <{ %"class.std::__1::unique_ptr.485", %"class.std::__1::__compressed_pair.495", %"class.std::__1::__compressed_pair.500", %"class.std::__1::__compressed_pair.503", [4 x i8] }>
%"class.std::__1::unique_ptr.485" = type { %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.487", %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.487" = type { %"struct.std::__1::__hash_node_base.488"** }
%"struct.std::__1::__hash_node_base.488" = type { %"struct.std::__1::__hash_node_base.488"* }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.std::__1::__bucket_list_deallocator.490" }
%"class.std::__1::__bucket_list_deallocator.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.495" = type { %"struct.std::__1::__compressed_pair_elem.496" }
%"struct.std::__1::__compressed_pair_elem.496" = type { %"struct.std::__1::__hash_node_base.488" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.566" = type { %"class.std::__1::__hash_table.567" }
%"class.std::__1::__hash_table.567" = type <{ %"class.std::__1::unique_ptr.568", %"class.std::__1::__compressed_pair.578", %"class.std::__1::__compressed_pair.583", %"class.std::__1::__compressed_pair.586", [4 x i8] }>
%"class.std::__1::unique_ptr.568" = type { %"class.std::__1::__compressed_pair.569" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570", %"struct.std::__1::__compressed_pair_elem.572" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.571"** }
%"struct.std::__1::__hash_node_base.571" = type { %"struct.std::__1::__hash_node_base.571"* }
%"struct.std::__1::__compressed_pair_elem.572" = type { %"class.std::__1::__bucket_list_deallocator.573" }
%"class.std::__1::__bucket_list_deallocator.573" = type { %"class.std::__1::__compressed_pair.574" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.571" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.spvtools::opt::analysis::DebugInfoManager"* }
%"class.spvtools::opt::analysis::DebugInfoManager" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.std::__1::unordered_map.596", %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::unordered_map.596" = type { %"class.std::__1::__hash_table.597" }
%"class.std::__1::__hash_table.597" = type <{ %"class.std::__1::unique_ptr.598", %"class.std::__1::__compressed_pair.608", %"class.std::__1::__compressed_pair.613", %"class.std::__1::__compressed_pair.616", [4 x i8] }>
%"class.std::__1::unique_ptr.598" = type { %"class.std::__1::__compressed_pair.599" }
%"class.std::__1::__compressed_pair.599" = type { %"struct.std::__1::__compressed_pair_elem.600", %"struct.std::__1::__compressed_pair_elem.602" }
%"struct.std::__1::__compressed_pair_elem.600" = type { %"struct.std::__1::__hash_node_base.601"** }
%"struct.std::__1::__hash_node_base.601" = type { %"struct.std::__1::__hash_node_base.601"* }
%"struct.std::__1::__compressed_pair_elem.602" = type { %"class.std::__1::__bucket_list_deallocator.603" }
%"class.std::__1::__bucket_list_deallocator.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.608" = type { %"struct.std::__1::__compressed_pair_elem.609" }
%"struct.std::__1::__compressed_pair_elem.609" = type { %"struct.std::__1::__hash_node_base.601" }
%"class.std::__1::__compressed_pair.613" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.623" = type { %"class.std::__1::__compressed_pair.624" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.625" }
%"struct.std::__1::__compressed_pair_elem.625" = type { %"class.std::__1::multimap.626"* }
%"class.std::__1::multimap.626" = type { %"class.std::__1::__tree.627" }
%"class.std::__1::__tree.627" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.628", %"class.std::__1::__compressed_pair.632" }
%"class.std::__1::__compressed_pair.628" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.632" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %"class.spvtools::opt::ScalarEvolutionAnalysis"* }
%"class.spvtools::opt::ScalarEvolutionAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::map.641", %"class.spvtools::opt::SENode"*, %"class.std::__1::unordered_set.658", %"class.std::__1::map.680" }
%"class.std::__1::map.641" = type { %"class.std::__1::__tree.642" }
%"class.std::__1::__tree.642" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.643", %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::SENode" = type <{ i32 (...)**, %"class.std::__1::vector.651", %"class.spvtools::opt::ScalarEvolutionAnalysis"*, i32, [4 x i8] }>
%"class.std::__1::vector.651" = type { %"class.std::__1::__vector_base.652" }
%"class.std::__1::__vector_base.652" = type { %"class.spvtools::opt::SENode"**, %"class.spvtools::opt::SENode"**, %"class.std::__1::__compressed_pair.653" }
%"class.std::__1::__compressed_pair.653" = type { %"struct.std::__1::__compressed_pair_elem.654" }
%"struct.std::__1::__compressed_pair_elem.654" = type { %"class.spvtools::opt::SENode"** }
%"class.std::__1::unordered_set.658" = type { %"class.std::__1::__hash_table.659" }
%"class.std::__1::__hash_table.659" = type <{ %"class.std::__1::unique_ptr.660", %"class.std::__1::__compressed_pair.670", %"class.std::__1::__compressed_pair.675", %"class.std::__1::__compressed_pair.677", [4 x i8] }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662", %"struct.std::__1::__compressed_pair_elem.664" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"struct.std::__1::__hash_node_base.663"** }
%"struct.std::__1::__hash_node_base.663" = type { %"struct.std::__1::__hash_node_base.663"* }
%"struct.std::__1::__compressed_pair_elem.664" = type { %"class.std::__1::__bucket_list_deallocator.665" }
%"class.std::__1::__bucket_list_deallocator.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"struct.std::__1::__hash_node_base.663" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.680" = type { %"class.std::__1::__tree.681" }
%"class.std::__1::__tree.681" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.682", %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unique_ptr.694" = type { %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.696" }
%"struct.std::__1::__compressed_pair_elem.696" = type { %"class.spvtools::opt::LivenessAnalysis"* }
%"class.spvtools::opt::LivenessAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.697" }
%"class.std::__1::unordered_map.697" = type { %"class.std::__1::__hash_table.698" }
%"class.std::__1::__hash_table.698" = type <{ %"class.std::__1::unique_ptr.699", %"class.std::__1::__compressed_pair.709", %"class.std::__1::__compressed_pair.714", %"class.std::__1::__compressed_pair.717", [4 x i8] }>
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701", %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.std::__1::__hash_node_base.702"** }
%"struct.std::__1::__hash_node_base.702" = type { %"struct.std::__1::__hash_node_base.702"* }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.std::__1::__bucket_list_deallocator.704" }
%"class.std::__1::__bucket_list_deallocator.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.709" = type { %"struct.std::__1::__compressed_pair_elem.710" }
%"struct.std::__1::__compressed_pair_elem.710" = type { %"struct.std::__1::__hash_node_base.702" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.spvtools::opt::ValueNumberTable"* }
%"class.spvtools::opt::ValueNumberTable" = type <{ %"class.std::__1::unordered_map.727", %"class.std::__1::unordered_map.249", %"class.spvtools::opt::IRContext"*, i32, [4 x i8] }>
%"class.std::__1::unordered_map.727" = type { %"class.std::__1::__hash_table.728" }
%"class.std::__1::__hash_table.728" = type <{ %"class.std::__1::unique_ptr.729", %"class.std::__1::__compressed_pair.739", %"class.std::__1::__compressed_pair.744", %"class.std::__1::__compressed_pair.747", [4 x i8] }>
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731", %"struct.std::__1::__compressed_pair_elem.733" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"struct.std::__1::__hash_node_base.732"** }
%"struct.std::__1::__hash_node_base.732" = type { %"struct.std::__1::__hash_node_base.732"* }
%"struct.std::__1::__compressed_pair_elem.733" = type { %"class.std::__1::__bucket_list_deallocator.734" }
%"class.std::__1::__bucket_list_deallocator.734" = type { %"class.std::__1::__compressed_pair.735" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"struct.std::__1::__hash_node_base.732" }
%"class.std::__1::__compressed_pair.744" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.747" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unique_ptr.754" = type { %"class.std::__1::__compressed_pair.755" }
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.spvtools::opt::InstructionFolder"* }
%"class.spvtools::opt::InstructionFolder" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.spvtools::opt::ConstantFoldingRules"* }
%"class.spvtools::opt::ConstantFoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.760", %"class.std::__1::map.784", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.795" }
%"class.std::__1::unordered_map.760" = type { %"class.std::__1::__hash_table.761" }
%"class.std::__1::__hash_table.761" = type <{ %"class.std::__1::unique_ptr.762", %"class.std::__1::__compressed_pair.772", %"class.std::__1::__compressed_pair.777", %"class.std::__1::__compressed_pair.780", [4 x i8] }>
%"class.std::__1::unique_ptr.762" = type { %"class.std::__1::__compressed_pair.763" }
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764", %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"struct.std::__1::__hash_node_base.765"** }
%"struct.std::__1::__hash_node_base.765" = type { %"struct.std::__1::__hash_node_base.765"* }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.std::__1::__bucket_list_deallocator.767" }
%"class.std::__1::__bucket_list_deallocator.767" = type { %"class.std::__1::__compressed_pair.768" }
%"class.std::__1::__compressed_pair.768" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"struct.std::__1::__hash_node_base.765" }
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.784" = type { %"class.std::__1::__tree.785" }
%"class.std::__1::__tree.785" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.786", %"class.std::__1::__compressed_pair.790" }
%"class.std::__1::__compressed_pair.786" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.790" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.795" = type { %"class.std::__1::__vector_base.796" }
%"class.std::__1::__vector_base.796" = type { %"class.std::__1::function.797"*, %"class.std::__1::function.797"*, %"class.std::__1::__compressed_pair.809" }
%"class.std::__1::function.797" = type { %"class.std::__1::__function::__policy_func.800" }
%"class.std::__1::__function::__policy_func.800" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.801", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.801" = type { %"class.spvtools::opt::analysis::Constant"* (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::vector.802" = type { %"class.std::__1::__vector_base.803" }
%"class.std::__1::__vector_base.803" = type { %"class.spvtools::opt::analysis::Constant"**, %"class.spvtools::opt::analysis::Constant"**, %"class.std::__1::__compressed_pair.804" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.805" }
%"struct.std::__1::__compressed_pair_elem.805" = type { %"class.spvtools::opt::analysis::Constant"** }
%"class.std::__1::__compressed_pair.809" = type { %"struct.std::__1::__compressed_pair_elem.810" }
%"struct.std::__1::__compressed_pair_elem.810" = type { %"class.std::__1::function.797"* }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"class.spvtools::opt::FoldingRules"* }
%"class.spvtools::opt::FoldingRules" = type { i32 (...)**, %"class.std::__1::unordered_map.820", %"class.std::__1::map.844", %"class.spvtools::opt::IRContext"*, %"class.std::__1::vector.855" }
%"class.std::__1::unordered_map.820" = type { %"class.std::__1::__hash_table.821" }
%"class.std::__1::__hash_table.821" = type <{ %"class.std::__1::unique_ptr.822", %"class.std::__1::__compressed_pair.832", %"class.std::__1::__compressed_pair.837", %"class.std::__1::__compressed_pair.840", [4 x i8] }>
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824", %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.std::__1::__hash_node_base.825"** }
%"struct.std::__1::__hash_node_base.825" = type { %"struct.std::__1::__hash_node_base.825"* }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.std::__1::__bucket_list_deallocator.827" }
%"class.std::__1::__bucket_list_deallocator.827" = type { %"class.std::__1::__compressed_pair.828" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.832" = type { %"struct.std::__1::__compressed_pair_elem.833" }
%"struct.std::__1::__compressed_pair_elem.833" = type { %"struct.std::__1::__hash_node_base.825" }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.840" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::map.844" = type { %"class.std::__1::__tree.845" }
%"class.std::__1::__tree.845" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.846", %"class.std::__1::__compressed_pair.850" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.850" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::vector.855" = type { %"class.std::__1::__vector_base.856" }
%"class.std::__1::__vector_base.856" = type { %"class.std::__1::function.857"*, %"class.std::__1::function.857"*, %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::function.857" = type { %"class.std::__1::__function::__policy_func.860" }
%"class.std::__1::__function::__policy_func.860" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.861", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.861" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::vector.802"*)* }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.std::__1::function.857"* }
%"class.std::__1::unique_ptr.873" = type { %"class.std::__1::__compressed_pair.874" }
%"class.std::__1::__compressed_pair.874" = type { %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.spvtools::opt::StructuredCFGAnalysis"* }
%"class.spvtools::opt::StructuredCFGAnalysis" = type { %"class.spvtools::opt::IRContext"*, %"class.std::__1::unordered_map.876", %"class.spvtools::utils::BitVector" }
%"class.std::__1::unordered_map.876" = type { %"class.std::__1::__hash_table.877" }
%"class.std::__1::__hash_table.877" = type <{ %"class.std::__1::unique_ptr.878", %"class.std::__1::__compressed_pair.888", %"class.std::__1::__compressed_pair.893", %"class.std::__1::__compressed_pair.896", [4 x i8] }>
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880", %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"struct.std::__1::__hash_node_base.881"** }
%"struct.std::__1::__hash_node_base.881" = type { %"struct.std::__1::__hash_node_base.881"* }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.std::__1::__bucket_list_deallocator.883" }
%"class.std::__1::__bucket_list_deallocator.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.881" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::utils::BitVector" = type { %"class.std::__1::vector.900" }
%"class.std::__1::vector.900" = type { %"class.std::__1::__vector_base.901" }
%"class.std::__1::__vector_base.901" = type { i64*, i64*, %"class.std::__1::__compressed_pair.902" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.903" }
%"struct.std::__1::__compressed_pair_elem.903" = type { i64* }
%"class.std::__1::unordered_map.249" = type { %"class.std::__1::__hash_table.250" }
%"class.std::__1::__hash_table.250" = type <{ %"class.std::__1::unique_ptr.251", %"class.std::__1::__compressed_pair.261", %"class.std::__1::__compressed_pair.266", %"class.std::__1::__compressed_pair.269", [4 x i8] }>
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253", %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.std::__1::__hash_node_base.254"** }
%"struct.std::__1::__hash_node_base.254" = type { %"struct.std::__1::__hash_node_base.254"* }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.std::__1::__bucket_list_deallocator.256" }
%"class.std::__1::__bucket_list_deallocator.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.254" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::vector.932" = type { %"class.std::__1::__vector_base.933" }
%"class.std::__1::__vector_base.933" = type { %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.std::__1::__compressed_pair.934" }
%"class.spvtools::opt::MergeReturnPass::StructuredControlState" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* }
%"class.spvtools::opt::Function" = type { %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31", %"class.spvtools::opt::InstructionList", %"class.std::__1::vector.38", %"class.std::__1::unique_ptr.21", %"class.std::__1::vector.31" }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.40"* }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.std::__1::unique_ptr.21"*, %"class.std::__1::unique_ptr.21"*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::unique_ptr.21"* }
%"class.std::__1::unordered_map.939" = type { %"class.std::__1::__hash_table.940" }
%"class.std::__1::__hash_table.940" = type <{ %"class.std::__1::unique_ptr.941", %"class.std::__1::__compressed_pair.951", %"class.std::__1::__compressed_pair.956", %"class.std::__1::__compressed_pair.961", [4 x i8] }>
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943", %"struct.std::__1::__compressed_pair_elem.945" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.944"** }
%"struct.std::__1::__hash_node_base.944" = type { %"struct.std::__1::__hash_node_base.944"* }
%"struct.std::__1::__compressed_pair_elem.945" = type { %"class.std::__1::__bucket_list_deallocator.946" }
%"class.std::__1::__bucket_list_deallocator.946" = type { %"class.std::__1::__compressed_pair.947" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.952" }
%"struct.std::__1::__compressed_pair_elem.952" = type { %"struct.std::__1::__hash_node_base.944" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.961" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_map.967" = type { %"class.std::__1::__hash_table.968" }
%"class.std::__1::__hash_table.968" = type <{ %"class.std::__1::unique_ptr.969", %"class.std::__1::__compressed_pair.979", %"class.std::__1::__compressed_pair.984", %"class.std::__1::__compressed_pair.987", [4 x i8] }>
%"class.std::__1::unique_ptr.969" = type { %"class.std::__1::__compressed_pair.970" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971", %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"struct.std::__1::__hash_node_base.972"** }
%"struct.std::__1::__hash_node_base.972" = type { %"struct.std::__1::__hash_node_base.972"* }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.std::__1::__bucket_list_deallocator.974" }
%"class.std::__1::__bucket_list_deallocator.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"struct.std::__1::__hash_node_base.972" }
%"class.std::__1::__compressed_pair.984" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::unordered_set.910" = type { %"class.std::__1::__hash_table.911" }
%"class.std::__1::__hash_table.911" = type <{ %"class.std::__1::unique_ptr.912", %"class.std::__1::__compressed_pair.922", %"class.std::__1::__compressed_pair.927", %"class.std::__1::__compressed_pair.929", [4 x i8] }>
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914", %"struct.std::__1::__compressed_pair_elem.916" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::__hash_node_base.915"** }
%"struct.std::__1::__hash_node_base.915" = type { %"struct.std::__1::__hash_node_base.915"* }
%"struct.std::__1::__compressed_pair_elem.916" = type { %"class.std::__1::__bucket_list_deallocator.917" }
%"class.std::__1::__bucket_list_deallocator.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.922" = type { %"struct.std::__1::__compressed_pair_elem.923" }
%"struct.std::__1::__compressed_pair_elem.923" = type { %"struct.std::__1::__hash_node_base.915" }
%"class.std::__1::__compressed_pair.927" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.929" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.std::__1::function.991" = type { %"class.std::__1::__function::__policy_func.995" }
%"class.std::__1::__function::__policy_func.995" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.996", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.996" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::vector.997" = type { %"class.std::__1::__vector_base.998" }
%"class.std::__1::__vector_base.998" = type { %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"**, %"class.std::__1::__compressed_pair.999" }
%"class.std::__1::__compressed_pair.999" = type { %"struct.std::__1::__compressed_pair_elem.1000" }
%"struct.std::__1::__compressed_pair_elem.1000" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.1009" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::unordered_set.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1032", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.spvtools::opt::BasicBlock"* }
%"class.std::__1::__tree_node.1124" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.1125" }
%"struct.std::__1::pair.1125" = type { %"class.spvtools::opt::Function"*, %"class.spvtools::opt::DominatorAnalysis" }
%"class.spvtools::opt::DominatorAnalysis" = type { %"class.spvtools::opt::DominatorAnalysisBase" }
%"class.spvtools::opt::DominatorAnalysisBase" = type { %"class.spvtools::opt::DominatorTree" }
%"class.spvtools::opt::DominatorTree" = type <{ %"class.std::__1::vector.1054", %"class.std::__1::map.1061", i8, [7 x i8] }>
%"class.std::__1::vector.1054" = type { %"class.std::__1::__vector_base.1055" }
%"class.std::__1::__vector_base.1055" = type { %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"**, %"class.std::__1::__compressed_pair.1056" }
%"struct.spvtools::opt::DominatorTreeNode" = type { %"class.spvtools::opt::BasicBlock"*, %"struct.spvtools::opt::DominatorTreeNode"*, %"class.std::__1::vector.1054", i32, i32 }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"struct.spvtools::opt::DominatorTreeNode"** }
%"class.std::__1::map.1061" = type { %"class.std::__1::__tree.1062" }
%"class.std::__1::__tree.1062" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1063", %"class.std::__1::__compressed_pair.1067" }
%"class.std::__1::__compressed_pair.1063" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1067" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::function.1108" = type { %"class.std::__1::__function::__policy_func.1112" }
%"class.std::__1::__function::__policy_func.1112" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1113", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1113" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* }
%"class.std::__1::tuple.1379" = type { %"struct.std::__1::__tuple_impl.1380" }
%"struct.std::__1::__tuple_impl.1380" = type { %"class.std::__1::__tuple_leaf.1381" }
%"class.std::__1::__tuple_leaf.1381" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::tuple.1131" = type { i8 }
%"class.std::__1::tuple.1157" = type { %"struct.std::__1::__tuple_impl.1158" }
%"struct.std::__1::__tuple_impl.1158" = type { %"class.std::__1::__tuple_leaf.1159" }
%"class.std::__1::__tuple_leaf.1159" = type { i32* }
%"class.std::__1::function.1088" = type { %"class.std::__1::__function::__policy_func.1092" }
%"class.std::__1::__function::__policy_func.1092" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1093", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1093" = type { void (%"union.std::__1::__function::__policy_storage"*, i32)* }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.spvtools::opt::Instruction"** }
%"struct.std::__1::default_delete.44" = type { i8 }
%"class.std::initializer_list" = type { %"struct.spvtools::opt::Operand"*, i64 }
%"class.std::__1::vector.1037" = type { %"class.std::__1::__vector_base.1038" }
%"class.std::__1::__vector_base.1038" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1039" }
%"class.std::__1::__compressed_pair.1039" = type { %"struct.std::__1::__compressed_pair_elem.1040" }
%"struct.std::__1::__compressed_pair_elem.1040" = type { i32* }
%"class.spvtools::utils::IntrusiveNodeBase" = type <{ i32 (...)**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"*, i8, [7 x i8] }>
%"struct.std::__1::default_delete.150" = type { i8 }
%"class.spvtools::opt::InstructionList::iterator" = type { %"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" }
%"class.spvtools::utils::IntrusiveList<spvtools::opt::Instruction>::iterator_template" = type { %"class.spvtools::opt::Instruction"* }
%"struct.std::__1::default_delete.120" = type { i8 }
%"class.spvtools::opt::analysis::Bool" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Type.base" = type <{ i32 (...)**, %"class.std::__1::vector.463", i32 }>
%"class.std::__1::tuple.1328" = type { %"struct.std::__1::__tuple_impl.1329" }
%"struct.std::__1::__tuple_impl.1329" = type { %"class.std::__1::__tuple_leaf.1330" }
%"class.std::__1::__tuple_leaf.1330" = type { %"class.spvtools::opt::BasicBlock"** }
%"class.std::__1::function.1167" = type { %"class.std::__1::__function::__policy_func.1171" }
%"class.std::__1::__function::__policy_func.1171" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1172", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1172" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::function.1047" = type { %"class.std::__1::__function::__policy_func.1051" }
%"class.std::__1::__function::__policy_func.1051" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1052", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1052" = type { void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", i32 }
%"class.std::__1::function.1184" = type { %"class.std::__1::__function::__policy_func.1188" }
%"class.std::__1::__function::__policy_func.1188" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1189", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1189" = type { i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.std::__1::vector.1070" = type { %"class.std::__1::__vector_base.1071" }
%"class.std::__1::__vector_base.1071" = type { %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"**, %"class.std::__1::__compressed_pair.1072" }
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"class.spvtools::opt::Instruction"** }
%"class.std::__1::function.1079" = type { %"class.std::__1::__function::__policy_func.1083" }
%"class.std::__1::__function::__policy_func.1083" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker.1084", %"struct.std::__1::__function::__policy"* }
%"struct.std::__1::__function::__policy_invoker.1084" = type { void (%"union.std::__1::__function::__policy_storage"*, i32*)* }
%"class.spvtools::opt::InstructionBuilder" = type <{ %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::InstructionList::iterator", i32, [4 x i8] }>
%"class.std::__1::vector.1099" = type { %"class.std::__1::__vector_base.1100" }
%"class.std::__1::__vector_base.1100" = type { %"struct.std::__1::pair.1101"*, %"struct.std::__1::pair.1101"*, %"class.std::__1::__compressed_pair.1103" }
%"struct.std::__1::pair.1101" = type <{ %"class.spvtools::utils::SmallVector", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::pair.1101"* }
%"class.std::__1::__tree_node.1126" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.1127" }
%"struct.std::__1::__value_type.1127" = type { %"struct.std::__1::pair.1128" }
%"struct.std::__1::pair.1128" = type { i32, %"struct.spvtools::opt::DominatorTreeNode" }
%"class.std::__1::__tree_node.1149" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::pair.1150" }
%"struct.std::__1::pair.1150" = type { %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* }
%class.anon.1194 = type { %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::CFG"* }
%"class.std::__1::set.1199" = type { %"class.std::__1::__tree.1200" }
%"class.std::__1::__tree.1200" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1201", %"class.std::__1::__compressed_pair.1205" }
%"class.std::__1::__compressed_pair.1201" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1205" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1004" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::unordered_set.1209" = type { %"class.std::__1::__hash_table.1210" }
%"class.std::__1::__hash_table.1210" = type <{ %"class.std::__1::unique_ptr.1211", %"class.std::__1::__compressed_pair.1221", %"class.std::__1::__compressed_pair.1226", %"class.std::__1::__compressed_pair.1230", [4 x i8] }>
%"class.std::__1::unique_ptr.1211" = type { %"class.std::__1::__compressed_pair.1212" }
%"class.std::__1::__compressed_pair.1212" = type { %"struct.std::__1::__compressed_pair_elem.1213", %"struct.std::__1::__compressed_pair_elem.1215" }
%"struct.std::__1::__compressed_pair_elem.1213" = type { %"struct.std::__1::__hash_node_base.1214"** }
%"struct.std::__1::__hash_node_base.1214" = type { %"struct.std::__1::__hash_node_base.1214"* }
%"struct.std::__1::__compressed_pair_elem.1215" = type { %"class.std::__1::__bucket_list_deallocator.1216" }
%"class.std::__1::__bucket_list_deallocator.1216" = type { %"class.std::__1::__compressed_pair.1217" }
%"class.std::__1::__compressed_pair.1217" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1221" = type { %"struct.std::__1::__compressed_pair_elem.1222" }
%"struct.std::__1::__compressed_pair_elem.1222" = type { %"struct.std::__1::__hash_node_base.1214" }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"class.spvtools::opt::analysis::Void" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Integer" = type <{ %"class.spvtools::opt::analysis::Type.base", i32, i8, [7 x i8] }>
%"class.spvtools::opt::analysis::Float" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::Vector" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Matrix" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Image" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, i32, i32, i8, i8, i32, i32, i32 }
%"class.spvtools::opt::analysis::Sampler" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::SampledImage" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Array" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"struct.spvtools::opt::analysis::Array::LengthInfo" }
%"struct.spvtools::opt::analysis::Array::LengthInfo" = type { i32, %"class.std::__1::vector.3" }
%"class.spvtools::opt::analysis::RuntimeArray" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"* }
%"class.spvtools::opt::analysis::Struct" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::vector.1235", %"class.std::__1::map.1242" }
%"class.std::__1::vector.1235" = type { %"class.std::__1::__vector_base.1236" }
%"class.std::__1::__vector_base.1236" = type { %"class.spvtools::opt::analysis::Type"**, %"class.spvtools::opt::analysis::Type"**, %"class.std::__1::__compressed_pair.1237" }
%"class.std::__1::__compressed_pair.1237" = type { %"struct.std::__1::__compressed_pair_elem.1238" }
%"struct.std::__1::__compressed_pair_elem.1238" = type { %"class.spvtools::opt::analysis::Type"** }
%"class.std::__1::map.1242" = type { %"class.std::__1::__tree.1243" }
%"class.std::__1::__tree.1243" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1244", %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"class.spvtools::opt::analysis::Opaque" = type { %"class.spvtools::opt::analysis::Type.base", %"class.std::__1::basic_string" }
%"class.spvtools::opt::analysis::Pointer" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::Function" = type { %"class.spvtools::opt::analysis::Type.base", %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.1235" }
%"class.spvtools::opt::analysis::Event" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::DeviceEvent" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::ReserveId" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Queue" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::Pipe" = type { %"class.spvtools::opt::analysis::Type.base", i32 }
%"class.spvtools::opt::analysis::ForwardPointer" = type { %"class.spvtools::opt::analysis::Type.base", i32, i32, %"class.spvtools::opt::analysis::Pointer"* }
%"class.spvtools::opt::analysis::PipeStorage" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::NamedBarrier" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::AccelerationStructureNV" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.spvtools::opt::analysis::CooperativeMatrixNV" = type <{ %"class.spvtools::opt::analysis::Type.base", [4 x i8], %"class.spvtools::opt::analysis::Type"*, i32, i32, i32, [4 x i8] }>
%"class.spvtools::opt::analysis::RayQueryKHR" = type { %"class.spvtools::opt::analysis::Type.base", [4 x i8] }
%"class.std::__1::__tree_node.1272" = type { %"class.std::__1::__tree_node_base.base", [7 x i8], %"struct.std::__1::__value_type.1273" }
%"struct.std::__1::__value_type.1273" = type { %"struct.std::__1::pair.1274" }
%"struct.std::__1::pair.1274" = type <{ %"class.spvtools::opt::analysis::Constant"*, i32, [4 x i8] }>
%"class.spvtools::opt::Pass" = type <{ i32 (...)**, %"class.std::__1::function", %"class.spvtools::opt::IRContext"*, i8, [7 x i8] }>
%"struct.std::__1::__split_buffer.1303" = type { %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::__compressed_pair.1304" }
%"class.std::__1::__compressed_pair.1304" = type { %"struct.std::__1::__compressed_pair_elem.47", %"struct.std::__1::__compressed_pair_elem.1305" }
%"struct.std::__1::__compressed_pair_elem.1305" = type { %"class.std::__1::allocator.49"* }
%"class.std::__1::allocator.49" = type { i8 }
%"class.std::__1::__function::__default_alloc_func.1319" = type { %class.anon }
%class.anon = type { i8*, i8, %"class.spvtools::opt::MergeReturnPass"* }
%"struct.std::__1::pair.1285" = type { i32, %"struct.spvtools::opt::StructuredCFGAnalysis::ConstructInfo" }
%"struct.spvtools::opt::StructuredCFGAnalysis::ConstructInfo" = type { i32, i32, i32, i8 }
%"class.std::__1::__function::__default_alloc_func.1347" = type { %class.anon.1077 }
%class.anon.1077 = type { %"class.std::__1::vector.1070"*, %"class.spvtools::opt::DominatorAnalysis"**, %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::MergeReturnPass"* }
%"class.std::__1::__function::__default_alloc_func.1352" = type { %class.anon.1085 }
%class.anon.1085 = type { %"class.spvtools::opt::DominatorAnalysis"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::MergeReturnPass"* }

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_jRjSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev = comdat any

$_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_ = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEj = comdat any

$_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE = comdat any

$_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj = comdat any

$_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj = comdat any

$_ZN8spvtools3opt11InstructionC2ERKS1_ = comdat any

$_ZN8spvtools3opt11InstructionD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddBranchEj = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj = comdat any

$_ZN8spvtools3opt15MergeReturnPassD2Ev = comdat any

$_ZN8spvtools3opt15MergeReturnPassD0Ev = comdat any

$_ZNK8spvtools3opt15MergeReturnPass4nameEv = comdat any

$_ZN8spvtools3opt15MergeReturnPass20GetPreservedAnalysesEv = comdat any

$_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE = comdat any

$_ZN8spvtools3opt3CFGD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD2Ev = comdat any

$_ZN8spvtools3opt15InstructionListD0Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZN8spvtools3opt11InstructionD0Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev = comdat any

$_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_ = comdat any

$_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_ = comdat any

$_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj = comdat any

$_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE = comdat any

$_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj = comdat any

$_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_ = comdat any

$_ZN8spvtools3opt8analysis4BoolD0Ev = comdat any

$_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE = comdat any

$_ZNK8spvtools3opt8analysis4Bool3strEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE = comdat any

$_ZN8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsVoidEv = comdat any

$_ZN8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Bool6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsIntegerEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsFloatEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsVectorEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsMatrixEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsSamplerEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsStructEv = comdat any

$_ZN8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv = comdat any

$_ZN8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type9AsPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZNK8spvtools3opt8analysis4Type10AsFunctionEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv = comdat any

$_ZN8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv = comdat any

$_ZN8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZNK8spvtools3opt8analysis4Type7AsQueueEv = comdat any

$_ZN8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsPipeEv = comdat any

$_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv = comdat any

$_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv = comdat any

$_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv = comdat any

$_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv = comdat any

$_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv = comdat any

$_ZN8spvtools3opt8analysis4TypeD0Ev = comdat any

$_ZN8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZNK8spvtools3opt8analysis4Type6AsBoolEv = comdat any

$_ZN8spvtools3opt8analysis11TypeManagerD2Ev = comdat any

$_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN8spvtools3opt8analysis15ConstantManagerD2Ev = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE = comdat any

$_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_ = comdat any

$_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_ = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_ = comdat any

$_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b = comdat any

$_ZN8spvtools3opt8analysis4TypeD2Ev = comdat any

$_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv = comdat any

$_ZN8spvtools3opt7MemPassD2Ev = comdat any

$_ZN8spvtools3opt7MemPassD0Ev = comdat any

$_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv = comdat any

$_ZN8spvtools3opt4PassD2Ev = comdat any

$_ZN8spvtools3opt4PassD0Ev = comdat any

$_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_ = comdat any

$_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_ = comdat any

$_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm = comdat any

$_ZTVN8spvtools3opt15InstructionListE = comdat any

$_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools3opt11InstructionE = comdat any

$_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = comdat any

$_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = comdat any

$_ZTVN8spvtools3opt8analysis4BoolE = comdat any

$_ZTVN8spvtools3opt8analysis4TypeE = comdat any

$_ZTVN8spvtools3opt7MemPassE = comdat any

$_ZTVN8spvtools3opt4PassE = comdat any

@.str = private unnamed_addr constant [106 x i8] c"Module contains unreachable blocks during merge return.  Run dead branch elimination before merge return.\00", align 1
@.ref.tmp = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt15MergeReturnPassE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MergeReturnPass"*)* @_ZN8spvtools3opt15MergeReturnPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MergeReturnPass"*)* @_ZN8spvtools3opt15MergeReturnPassD0Ev to i8*), i8* bitcast (i8* (%"class.spvtools::opt::MergeReturnPass"*)* @_ZNK8spvtools3opt15MergeReturnPass4nameEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::MergeReturnPass"*)* @_ZN8spvtools3opt15MergeReturnPass20GetPreservedAnalysesEv to i8*), i8* bitcast (i32 (%"class.spvtools::opt::MergeReturnPass"*)* @_ZN8spvtools3opt15MergeReturnPass7ProcessEv to i8*)] }, align 8
@_ZTVN8spvtools3opt15InstructionListE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::InstructionList"*)* @_ZN8spvtools3opt15InstructionListD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveList"*)* @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@.str.7 = private unnamed_addr constant [38 x i8] c"ID overflow. Try running compact-ids.\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.ref.tmp.9 = private constant %struct.spv_position_t zeroinitializer, align 8
@_ZTVN8spvtools3opt11InstructionE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Instruction"*)* @_ZN8spvtools3opt11InstructionD0Ev to i8*)] }, comdat, align 8
@_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::IntrusiveNodeBase"*)* @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@_ZTVN8spvtools5utils11SmallVectorIjLm2EEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev to i8*), i8* bitcast (void (%"class.spvtools::utils::SmallVector"*)* @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev to i8*)] }, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" zeroinitializer, comdat, align 8
@_ZTVN8spvtools3opt8analysis4BoolE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4BoolD0Ev to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1199"*)* @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool3strEv to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1209"*)* @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Bool"*)* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis4TypeE = linkonce_odr hidden unnamed_addr constant { [61 x i8*] } { [61 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4TypeD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Void"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Integer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Float"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Vector"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Matrix"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Image"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Sampler"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::SampledImage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Array"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RuntimeArray"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Struct"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsStructEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Opaque"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Function"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Event"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::DeviceEvent"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ReserveId"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Queue"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::Pipe"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::ForwardPointer"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::PipeStorage"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::NamedBarrier"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::AccelerationStructureNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::CooperativeMatrixNV"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (%"class.spvtools::opt::analysis::RayQueryKHR"* (%"class.spvtools::opt::analysis::Type"*)* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv to i8*), i8* bitcast (void (%"class.spvtools::opt::analysis::Type"*)* @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt8analysis7IntegerE = external unnamed_addr constant { [61 x i8*] }, align 8
@_ZTVN8spvtools3opt7MemPassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::MemPass"*)* @_ZN8spvtools3opt7MemPassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN8spvtools3opt4PassE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD2Ev to i8*), i8* bitcast (void (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4PassD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i32 (%"class.spvtools::opt::Pass"*)* @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [13 x i8] c"merge-return\00", align 1
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass14UpdatePhiNodesEPNS5_10BasicBlockES8_E3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" { i8* (i8*)* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEPvPKv", void (i8*)* @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEvPv", i8 0, %"class.std::type_info"* null }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS5_10BasicBlockEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EENS_9allocatorIS8_EEEEPNS_4listIS8_SF_EEE3$_5FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS5_8FunctionEE3$_6FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN8spvtools3opt15MergeReturnPass7ProcessEv(%"class.spvtools::opt::MergeReturnPass"*) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = alloca %"class.std::__1::function.991", align 8
  %4 = alloca [7 x i8], align 1
  %5 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  %10 = icmp eq %"class.spvtools::opt::FeatureManager"* %9, null
  br i1 %10, label %11, label %22

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 1
  %13 = tail call i8* @_Znwm(i64 48) #10
  %14 = bitcast i8* %13 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %12, %"class.spvtools::AssemblyGrammar"** %14, align 8
  %15 = getelementptr inbounds i8, i8* %13, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 40, i1 false) #11
  %16 = ptrtoint i8* %13 to i64
  %17 = bitcast %"class.std::__1::unique_ptr.152"* %7 to i64*
  store i64 %16, i64* %17, align 8
  %18 = bitcast i8* %13 to %"class.spvtools::opt::FeatureManager"*
  %19 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %19, align 8
  tail call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %18, %"class.spvtools::opt::Module"* %20) #11
  %21 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %8, align 8
  br label %22

22:                                               ; preds = %1, %11
  %23 = phi %"class.spvtools::opt::FeatureManager"* [ %9, %1 ], [ %21, %11 ]
  %24 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %23, i64 0, i32 2, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = lshr i64 %25, 1
  %27 = trunc i64 %26 to i8
  %28 = and i8 %27, 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #11
  store i8 0, i8* %2, align 1
  %29 = bitcast %"class.std::__1::function.991"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::function.991", %"class.std::__1::function.991"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::function.991", %"class.std::__1::function.991"* %3, i64 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.std::__1::function.991", %"class.std::__1::function.991"* %3, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.std::__1::function.991", %"class.std::__1::function.991"* %3, i64 0, i32 0, i32 0, i32 1, i64 0
  %34 = bitcast i8* %33 to i64*
  store i64 -6148914691236517206, i64* %34, align 8
  %35 = getelementptr inbounds [7 x i8], [7 x i8]* %4, i64 0, i64 0
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)* @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass7ProcessEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Function"*)** %31, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %32, align 8
  %36 = tail call i8* @_Znwm(i64 24) #10, !noalias !2
  %37 = bitcast i8* %36 to i8**
  store i8* %2, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 8
  store i8 %28, i8* %38, align 8
  %39 = getelementptr inbounds i8, i8* %36, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %39, i8* nonnull align 1 %35, i64 7, i1 false)
  %40 = getelementptr inbounds i8, i8* %36, i64 16
  %41 = bitcast i8* %40 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %41, align 8
  store i8* %36, i8** %30, align 8
  %42 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %43 = call zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"* %42, %"class.std::__1::function.991"* nonnull dereferenceable(32) %3) #11
  %44 = load i8, i8* %2, align 1, !range !7
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %43, i32 16, i32 17
  %47 = select i1 %45, i32 %46, i32 0
  %48 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %32, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %48, i64 0, i32 1
  %50 = load void (i8*)*, void (i8*)** %49, align 8
  %51 = icmp eq void (i8*)* %50, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %22
  %53 = load i8*, i8** %30, align 8
  call void %50(i8* %53) #11
  br label %54

54:                                               ; preds = %22, %52
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #11
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN8spvtools3opt9IRContext24ProcessReachableCallTreeERNSt3__18functionIFbPNS0_8FunctionEEEE(%"class.spvtools::opt::IRContext"*, %"class.std::__1::function.991"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass13GenerateStateEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"* %1) #11
  %4 = ptrtoint %"class.spvtools::opt::Instruction"* %3 to i64
  %5 = icmp eq %"class.spvtools::opt::Instruction"* %3, null
  br i1 %5, label %319, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 246
  br i1 %9, label %10, label %84

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %13 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %15 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %14, align 8
  %16 = icmp ult %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %13, %15
  %17 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %15 to i64
  br i1 %16, label %18, label %25

18:                                               ; preds = %10
  %19 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %13 to i64*
  store i64 %4, i64* %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %13, i64 0, i32 1
  %21 = bitcast %"class.spvtools::opt::Instruction"** %20 to i64*
  store i64 %4, i64* %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %13, i64 1
  %23 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %22 to i64
  %24 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %12 to i64*
  store i64 %23, i64* %24, align 8
  br label %319

25:                                               ; preds = %10
  %26 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %13 to i64
  %27 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %12 to i64*
  %28 = bitcast %"class.std::__1::vector.932"* %11 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %26, %29
  %31 = ashr exact i64 %30, 4
  %32 = add nsw i64 %31, 1
  %33 = icmp ugt i64 %32, 1152921504606846975
  br i1 %33, label %34, label %36

34:                                               ; preds = %25
  %35 = bitcast %"class.std::__1::vector.932"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %35) #12
  unreachable

36:                                               ; preds = %25
  %37 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %14 to i64*
  %38 = sub i64 %17, %29
  %39 = ashr exact i64 %38, 4
  %40 = icmp ult i64 %39, 576460752303423487
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = ashr exact i64 %38, 3
  %43 = icmp ult i64 %42, %32
  %44 = select i1 %43, i64 %32, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %54, label %46

46:                                               ; preds = %41
  %47 = icmp ugt i64 %44, 1152921504606846975
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

49:                                               ; preds = %46, %36
  %50 = phi i64 [ %44, %46 ], [ 1152921504606846975, %36 ]
  %51 = shl i64 %50, 4
  %52 = tail call i8* @_Znwm(i64 %51) #10
  %53 = bitcast i8* %52 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %54

54:                                               ; preds = %49, %41
  %55 = phi i64 [ %50, %49 ], [ 0, %41 ]
  %56 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %53, %49 ], [ null, %41 ]
  %57 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %56, i64 %31
  %58 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %56, i64 %55
  %59 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %58 to i64
  %60 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57 to i64*
  store i64 %4, i64* %60, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %56, i64 %31, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %4, i64* %62, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57, i64 1
  %64 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %63 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %11, i64 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %65, align 8
  %67 = load i64, i64* %27, align 8
  %68 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 4
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57, i64 %71
  %73 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %54
  %76 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %72 to i8*
  %77 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #11
  %78 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %65, align 8
  br label %79

79:                                               ; preds = %75, %54
  %80 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %66, %54 ], [ %78, %75 ]
  store i64 %73, i64* %28, align 8
  store i64 %64, i64* %27, align 8
  store i64 %59, i64* %37, align 8
  %81 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %80, null
  br i1 %81, label %319, label %82

82:                                               ; preds = %79
  %83 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %319

84:                                               ; preds = %6
  %85 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %3, i64 0, i32 0, i32 1
  %86 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %85, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %86, i64 0, i32 0, i32 3
  %88 = load i8, i8* %87, align 8, !range !7
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, %"class.spvtools::opt::Instruction"* %86, %"class.spvtools::opt::Instruction"* null
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %90, i64 0, i32 2
  %92 = load i32, i32* %91, align 8
  %93 = icmp eq i32 %92, 251
  %94 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1
  %95 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %96 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 -1, i32 0
  %98 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %97, align 8
  %99 = ptrtoint %"class.spvtools::opt::Instruction"* %98 to i64
  br i1 %93, label %100, label %248

100:                                              ; preds = %84
  %101 = icmp eq %"class.spvtools::opt::Instruction"* %98, null
  br i1 %101, label %177, label %102

102:                                              ; preds = %100
  %103 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %98, i64 0, i32 2
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 246
  br i1 %105, label %106, label %177

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %108 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %107, align 8
  %109 = icmp ult %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, %108
  %110 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %108 to i64
  br i1 %109, label %111, label %118

111:                                              ; preds = %106
  %112 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64*
  store i64 %99, i64* %112, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 0, i32 1
  %114 = bitcast %"class.spvtools::opt::Instruction"** %113 to i64*
  store i64 %4, i64* %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 1
  %116 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %115 to i64
  %117 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  store i64 %116, i64* %117, align 8
  br label %319

118:                                              ; preds = %106
  %119 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64
  %120 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  %121 = bitcast %"class.std::__1::vector.932"* %94 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %119, %122
  %124 = ashr exact i64 %123, 4
  %125 = add nsw i64 %124, 1
  %126 = icmp ugt i64 %125, 1152921504606846975
  br i1 %126, label %127, label %129

127:                                              ; preds = %118
  %128 = bitcast %"class.std::__1::vector.932"* %94 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %128) #12
  unreachable

129:                                              ; preds = %118
  %130 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %107 to i64*
  %131 = sub i64 %110, %122
  %132 = ashr exact i64 %131, 4
  %133 = icmp ult i64 %132, 576460752303423487
  br i1 %133, label %134, label %142

134:                                              ; preds = %129
  %135 = ashr exact i64 %131, 3
  %136 = icmp ult i64 %135, %125
  %137 = select i1 %136, i64 %125, i64 %135
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %147, label %139

139:                                              ; preds = %134
  %140 = icmp ugt i64 %137, 1152921504606846975
  br i1 %140, label %141, label %142

141:                                              ; preds = %139
  tail call void @abort() #12
  unreachable

142:                                              ; preds = %139, %129
  %143 = phi i64 [ %137, %139 ], [ 1152921504606846975, %129 ]
  %144 = shl i64 %143, 4
  %145 = tail call i8* @_Znwm(i64 %144) #10
  %146 = bitcast i8* %145 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %147

147:                                              ; preds = %142, %134
  %148 = phi i64 [ %143, %142 ], [ 0, %134 ]
  %149 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %146, %142 ], [ null, %134 ]
  %150 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %149, i64 %124
  %151 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %149, i64 %148
  %152 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %151 to i64
  %153 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %150 to i64*
  store i64 %99, i64* %153, align 8
  %154 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %149, i64 %124, i32 1
  %155 = bitcast %"class.spvtools::opt::Instruction"** %154 to i64*
  store i64 %4, i64* %155, align 8
  %156 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %150, i64 1
  %157 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %156 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %94, i64 0, i32 0, i32 0
  %159 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %158, align 8
  %160 = load i64, i64* %120, align 8
  %161 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %159 to i64
  %162 = sub i64 %160, %161
  %163 = ashr exact i64 %162, 4
  %164 = sub nsw i64 0, %163
  %165 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %150, i64 %164
  %166 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %165 to i64
  %167 = icmp sgt i64 %162, 0
  br i1 %167, label %168, label %172

168:                                              ; preds = %147
  %169 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %165 to i8*
  %170 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %159 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %169, i8* align 8 %170, i64 %162, i1 false) #11
  %171 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %158, align 8
  br label %172

172:                                              ; preds = %168, %147
  %173 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %159, %147 ], [ %171, %168 ]
  store i64 %166, i64* %121, align 8
  store i64 %157, i64* %120, align 8
  store i64 %152, i64* %130, align 8
  %174 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %173, null
  br i1 %174, label %319, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %173 to i8*
  tail call void @_ZdlPv(i8* %176) #10
  br label %319

177:                                              ; preds = %100, %102
  %178 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %179 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %178, align 8
  %180 = icmp ult %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, %179
  %181 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %179 to i64
  br i1 %180, label %182, label %189

182:                                              ; preds = %177
  %183 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64*
  store i64 %4, i64* %183, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 0, i32 1
  %185 = bitcast %"class.spvtools::opt::Instruction"** %184 to i64*
  store i64 %4, i64* %185, align 8
  %186 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 1
  %187 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %186 to i64
  %188 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  store i64 %187, i64* %188, align 8
  br label %319

189:                                              ; preds = %177
  %190 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64
  %191 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  %192 = bitcast %"class.std::__1::vector.932"* %94 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %190, %193
  %195 = ashr exact i64 %194, 4
  %196 = add nsw i64 %195, 1
  %197 = icmp ugt i64 %196, 1152921504606846975
  br i1 %197, label %198, label %200

198:                                              ; preds = %189
  %199 = bitcast %"class.std::__1::vector.932"* %94 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %199) #12
  unreachable

200:                                              ; preds = %189
  %201 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %178 to i64*
  %202 = sub i64 %181, %193
  %203 = ashr exact i64 %202, 4
  %204 = icmp ult i64 %203, 576460752303423487
  br i1 %204, label %205, label %213

205:                                              ; preds = %200
  %206 = ashr exact i64 %202, 3
  %207 = icmp ult i64 %206, %196
  %208 = select i1 %207, i64 %196, i64 %206
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %218, label %210

210:                                              ; preds = %205
  %211 = icmp ugt i64 %208, 1152921504606846975
  br i1 %211, label %212, label %213

212:                                              ; preds = %210
  tail call void @abort() #12
  unreachable

213:                                              ; preds = %210, %200
  %214 = phi i64 [ %208, %210 ], [ 1152921504606846975, %200 ]
  %215 = shl i64 %214, 4
  %216 = tail call i8* @_Znwm(i64 %215) #10
  %217 = bitcast i8* %216 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %218

218:                                              ; preds = %213, %205
  %219 = phi i64 [ %214, %213 ], [ 0, %205 ]
  %220 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %217, %213 ], [ null, %205 ]
  %221 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %220, i64 %195
  %222 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %220, i64 %219
  %223 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %222 to i64
  %224 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %221 to i64*
  store i64 %4, i64* %224, align 8
  %225 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %220, i64 %195, i32 1
  %226 = bitcast %"class.spvtools::opt::Instruction"** %225 to i64*
  store i64 %4, i64* %226, align 8
  %227 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %221, i64 1
  %228 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %227 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %94, i64 0, i32 0, i32 0
  %230 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %229, align 8
  %231 = load i64, i64* %191, align 8
  %232 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %230 to i64
  %233 = sub i64 %231, %232
  %234 = ashr exact i64 %233, 4
  %235 = sub nsw i64 0, %234
  %236 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %221, i64 %235
  %237 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %236 to i64
  %238 = icmp sgt i64 %233, 0
  br i1 %238, label %239, label %243

239:                                              ; preds = %218
  %240 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %236 to i8*
  %241 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %230 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %240, i8* align 8 %241, i64 %233, i1 false) #11
  %242 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %229, align 8
  br label %243

243:                                              ; preds = %239, %218
  %244 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %230, %218 ], [ %242, %239 ]
  store i64 %237, i64* %192, align 8
  store i64 %228, i64* %191, align 8
  store i64 %223, i64* %201, align 8
  %245 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %244, null
  br i1 %245, label %319, label %246

246:                                              ; preds = %243
  %247 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %244 to i8*
  tail call void @_ZdlPv(i8* %247) #10
  br label %319

248:                                              ; preds = %84
  %249 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %250 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %249, align 8
  %251 = icmp ult %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, %250
  %252 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %250 to i64
  br i1 %251, label %253, label %260

253:                                              ; preds = %248
  %254 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64*
  store i64 %99, i64* %254, align 8
  %255 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 0, i32 1
  %256 = bitcast %"class.spvtools::opt::Instruction"** %255 to i64*
  store i64 %4, i64* %256, align 8
  %257 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96, i64 1
  %258 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %257 to i64
  %259 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  store i64 %258, i64* %259, align 8
  br label %319

260:                                              ; preds = %248
  %261 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %96 to i64
  %262 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %95 to i64*
  %263 = bitcast %"class.std::__1::vector.932"* %94 to i64*
  %264 = load i64, i64* %263, align 8
  %265 = sub i64 %261, %264
  %266 = ashr exact i64 %265, 4
  %267 = add nsw i64 %266, 1
  %268 = icmp ugt i64 %267, 1152921504606846975
  br i1 %268, label %269, label %271

269:                                              ; preds = %260
  %270 = bitcast %"class.std::__1::vector.932"* %94 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %270) #12
  unreachable

271:                                              ; preds = %260
  %272 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %249 to i64*
  %273 = sub i64 %252, %264
  %274 = ashr exact i64 %273, 4
  %275 = icmp ult i64 %274, 576460752303423487
  br i1 %275, label %276, label %284

276:                                              ; preds = %271
  %277 = ashr exact i64 %273, 3
  %278 = icmp ult i64 %277, %267
  %279 = select i1 %278, i64 %267, i64 %277
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %289, label %281

281:                                              ; preds = %276
  %282 = icmp ugt i64 %279, 1152921504606846975
  br i1 %282, label %283, label %284

283:                                              ; preds = %281
  tail call void @abort() #12
  unreachable

284:                                              ; preds = %281, %271
  %285 = phi i64 [ %279, %281 ], [ 1152921504606846975, %271 ]
  %286 = shl i64 %285, 4
  %287 = tail call i8* @_Znwm(i64 %286) #10
  %288 = bitcast i8* %287 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %289

289:                                              ; preds = %284, %276
  %290 = phi i64 [ %285, %284 ], [ 0, %276 ]
  %291 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %288, %284 ], [ null, %276 ]
  %292 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %291, i64 %266
  %293 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %291, i64 %290
  %294 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %293 to i64
  %295 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %292 to i64*
  store i64 %99, i64* %295, align 8
  %296 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %291, i64 %266, i32 1
  %297 = bitcast %"class.spvtools::opt::Instruction"** %296 to i64*
  store i64 %4, i64* %297, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %292, i64 1
  %299 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %298 to i64
  %300 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %94, i64 0, i32 0, i32 0
  %301 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %300, align 8
  %302 = load i64, i64* %262, align 8
  %303 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %301 to i64
  %304 = sub i64 %302, %303
  %305 = ashr exact i64 %304, 4
  %306 = sub nsw i64 0, %305
  %307 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %292, i64 %306
  %308 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %307 to i64
  %309 = icmp sgt i64 %304, 0
  br i1 %309, label %310, label %314

310:                                              ; preds = %289
  %311 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %307 to i8*
  %312 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %301 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %311, i8* align 8 %312, i64 %304, i1 false) #11
  %313 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %300, align 8
  br label %314

314:                                              ; preds = %310, %289
  %315 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %301, %289 ], [ %313, %310 ]
  store i64 %308, i64* %263, align 8
  store i64 %299, i64* %262, align 8
  store i64 %294, i64* %272, align 8
  %316 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %315, null
  br i1 %316, label %319, label %317

317:                                              ; preds = %314
  %318 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %315 to i8*
  tail call void @_ZdlPv(i8* %318) #10
  br label %319

319:                                              ; preds = %317, %314, %253, %111, %172, %175, %182, %243, %246, %82, %79, %18, %2
  ret void
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock12GetMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15MergeReturnPass17ProcessStructuredEPNS0_8FunctionERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::Function"*, %"class.std::__1::vector.997"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::list", align 8
  %5 = alloca %"class.std::__1::unordered_set.1013", align 8
  %6 = tail call zeroext i1 @_ZN8spvtools3opt15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS0_8FunctionE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::Function"* %1)
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 2
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 2
  %11 = load i8, i8* %10, align 8, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %481

13:                                               ; preds = %7
  %14 = tail call i8* @_Znwm(i64 112) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([106 x i8], [106 x i8]* @.str, i64 0, i64 0), i64 105, i1 false) #11
  %15 = getelementptr inbounds i8, i8* %14, i64 105
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0
  %17 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  call void %17(%"union.std::__1::__function::__policy_storage"* %18, i32 2, i8* null, %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp, i8* nonnull %14) #11
  call void @_ZdlPv(i8* nonnull %14) #10
  br label %481

19:                                               ; preds = %3
  tail call void @_ZN8spvtools3opt15MergeReturnPass25RecordImmediateDominatorsEPNS0_8FunctionE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::Function"* %1)
  tail call void @_ZN8spvtools3opt15MergeReturnPass33AddSingleCaseSwitchAroundFunctionEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  %20 = bitcast %"class.std::__1::list"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %4, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %24, %"struct.std::__1::__list_node_base"** %21, align 8
  store %"struct.std::__1::__list_node_base"* %24, %"struct.std::__1::__list_node_base"** %22, align 8
  store i64 0, i64* %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %26 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 11
  %28 = load i32, i32* %27, align 8
  %29 = and i32 %28, 16
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %47

31:                                               ; preds = %19
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %32, align 8
  %34 = call i8* @_Znwm(i64 400) #10
  %35 = bitcast i8* %34 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %35, %"class.spvtools::opt::Module"* %33) #11
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 15
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %38, align 8
  %40 = bitcast %"class.std::__1::unique_ptr.273"* %37 to i64*
  store i64 %36, i64* %40, align 8
  %41 = icmp eq %"class.spvtools::opt::CFG"* %39, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %31
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %39) #11
  %43 = bitcast %"class.spvtools::opt::CFG"* %39 to i8*
  call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %31
  %45 = load i32, i32* %27, align 8
  %46 = or i32 %45, 16
  store i32 %46, i32* %27, align 8
  br label %47

47:                                               ; preds = %19, %44
  %48 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %26, i64 0, i32 15, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %48, align 8
  %50 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %51, i64 0, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %52, align 8
  call void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"* %49, %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::BasicBlock"* %53, %"class.std::__1::list"* nonnull %4) #11
  %54 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1
  %55 = bitcast %"class.std::__1::vector.932"* %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = inttoptr i64 %56 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  %60 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %61 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %60, align 8
  %62 = icmp ugt %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %61, %59
  br i1 %62, label %63, label %67

63:                                               ; preds = %47
  %64 = inttoptr i64 %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #11
  %65 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %59, i64 1
  %66 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %65 to i64
  store i64 %66, i64* %58, align 8
  br label %113

67:                                               ; preds = %47
  %68 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %61 to i64
  %69 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %60 to i64*
  %70 = sub i64 %68, %56
  %71 = ashr exact i64 %70, 4
  %72 = icmp ult i64 %71, 576460752303423487
  br i1 %72, label %73, label %81

73:                                               ; preds = %67
  %74 = ashr exact i64 %70, 3
  %75 = icmp eq i64 %70, 0
  %76 = select i1 %75, i64 1, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %86, label %78

78:                                               ; preds = %73
  %79 = icmp ugt i64 %76, 1152921504606846975
  br i1 %79, label %80, label %81

80:                                               ; preds = %78
  call void @abort() #12
  unreachable

81:                                               ; preds = %78, %67
  %82 = phi i64 [ %76, %78 ], [ 1152921504606846975, %67 ]
  %83 = shl i64 %82, 4
  %84 = call i8* @_Znwm(i64 %83) #10
  %85 = bitcast i8* %84 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %86

86:                                               ; preds = %81, %73
  %87 = phi i64 [ %82, %81 ], [ 0, %73 ]
  %88 = phi i8* [ %84, %81 ], [ null, %73 ]
  %89 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %85, %81 ], [ null, %73 ]
  %90 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %89, i64 %87
  %91 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %90 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #11
  %92 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %89, i64 1
  %93 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %92 to i64
  %94 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %54, i64 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %94, align 8
  %96 = load i64, i64* %58, align 8
  %97 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %95 to i64
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 4
  %100 = sub nsw i64 0, %99
  %101 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %89, i64 %100
  %102 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %101 to i64
  %103 = icmp sgt i64 %98, 0
  br i1 %103, label %104, label %108

104:                                              ; preds = %86
  %105 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %101 to i8*
  %106 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 %98, i1 false) #11
  %107 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %94, align 8
  br label %108

108:                                              ; preds = %104, %86
  %109 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %95, %86 ], [ %107, %104 ]
  store i64 %102, i64* %55, align 8
  store i64 %93, i64* %58, align 8
  store i64 %91, i64* %69, align 8
  %110 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %109, null
  br i1 %110, label %113, label %111

111:                                              ; preds = %108
  %112 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %109 to i8*
  call void @_ZdlPv(i8* %112) #10
  br label %113

113:                                              ; preds = %63, %108, %111
  %114 = bitcast %"struct.std::__1::__list_node_base"** %22 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = inttoptr i64 %115 to %"struct.std::__1::__list_node_base"*
  %117 = icmp eq %"struct.std::__1::__list_node_base"* %24, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 6
  br label %189

120:                                              ; preds = %287, %113
  %121 = load i64, i64* %55, align 8
  store i64 %121, i64* %58, align 8
  %122 = inttoptr i64 %121 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  %123 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %60, align 8
  %124 = icmp ugt %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %123, %122
  br i1 %124, label %125, label %129

125:                                              ; preds = %120
  %126 = inttoptr i64 %121 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 16, i1 false) #11
  %127 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %122, i64 1
  %128 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %127 to i64
  store i64 %128, i64* %58, align 8
  br label %175

129:                                              ; preds = %120
  %130 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %123 to i64
  %131 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %60 to i64*
  %132 = sub i64 %130, %121
  %133 = ashr exact i64 %132, 4
  %134 = icmp ult i64 %133, 576460752303423487
  br i1 %134, label %135, label %143

135:                                              ; preds = %129
  %136 = ashr exact i64 %132, 3
  %137 = icmp eq i64 %132, 0
  %138 = select i1 %137, i64 1, i64 %136
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %148, label %140

140:                                              ; preds = %135
  %141 = icmp ugt i64 %138, 1152921504606846975
  br i1 %141, label %142, label %143

142:                                              ; preds = %140
  call void @abort() #12
  unreachable

143:                                              ; preds = %140, %129
  %144 = phi i64 [ %138, %140 ], [ 1152921504606846975, %129 ]
  %145 = shl i64 %144, 4
  %146 = call i8* @_Znwm(i64 %145) #10
  %147 = bitcast i8* %146 to %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*
  br label %148

148:                                              ; preds = %143, %135
  %149 = phi i64 [ %144, %143 ], [ 0, %135 ]
  %150 = phi i8* [ %146, %143 ], [ null, %135 ]
  %151 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %147, %143 ], [ null, %135 ]
  %152 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %151, i64 %149
  %153 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %152 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 16, i1 false) #11
  %154 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %151, i64 1
  %155 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %154 to i64
  %156 = getelementptr inbounds %"class.std::__1::vector.932", %"class.std::__1::vector.932"* %54, i64 0, i32 0, i32 0
  %157 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %156, align 8
  %158 = load i64, i64* %58, align 8
  %159 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %157 to i64
  %160 = sub i64 %158, %159
  %161 = ashr exact i64 %160, 4
  %162 = sub nsw i64 0, %161
  %163 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %151, i64 %162
  %164 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %163 to i64
  %165 = icmp sgt i64 %160, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %148
  %167 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %163 to i8*
  %168 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %157 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 %160, i1 false) #11
  %169 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %156, align 8
  br label %170

170:                                              ; preds = %166, %148
  %171 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %157, %148 ], [ %169, %166 ]
  store i64 %164, i64* %55, align 8
  store i64 %155, i64* %58, align 8
  store i64 %153, i64* %131, align 8
  %172 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %171, null
  br i1 %172, label %175, label %173

173:                                              ; preds = %170
  %174 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %171 to i8*
  call void @_ZdlPv(i8* %174) #10
  br label %175

175:                                              ; preds = %125, %170, %173
  %176 = bitcast %"class.std::__1::unordered_set.1013"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %176) #11
  %177 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %5, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %179 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %5, i64 0, i32 0, i32 4, i64 0
  %180 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %5, i64 0, i32 0, i32 3
  %181 = bitcast %"class.std::__1::__compressed_pair.1032"* %180 to i32*
  %182 = bitcast i8* %179 to i32*
  store i32 -1431655766, i32* %182, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %176, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %181, align 8
  %183 = load i64, i64* %114, align 8
  %184 = inttoptr i64 %183 to %"struct.std::__1::__list_node_base"*
  %185 = icmp eq %"struct.std::__1::__list_node_base"* %24, %184
  br i1 %185, label %410, label %186

186:                                              ; preds = %175
  %187 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %2, i64 0, i32 0, i32 0
  %188 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %2, i64 0, i32 0, i32 1
  br label %293

189:                                              ; preds = %118, %287
  %190 = phi %"struct.std::__1::__list_node_base"* [ %116, %118 ], [ %291, %287 ]
  %191 = phi i64 [ %115, %118 ], [ %290, %287 ]
  %192 = inttoptr i64 %191 to %"struct.std::__1::__list_node"*
  %193 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %192, i64 0, i32 1
  %194 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %193, align 8
  %195 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %196 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 11
  %197 = load i32, i32* %196, align 8
  %198 = and i32 %197, 16
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %216

200:                                              ; preds = %189
  %201 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 4, i32 0, i32 0, i32 0
  %202 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %201, align 8
  %203 = call i8* @_Znwm(i64 400) #10
  %204 = bitcast i8* %203 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %204, %"class.spvtools::opt::Module"* %202) #11
  %205 = ptrtoint i8* %203 to i64
  %206 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 15
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %207, align 8
  %209 = bitcast %"class.std::__1::unique_ptr.273"* %206 to i64*
  store i64 %205, i64* %209, align 8
  %210 = icmp eq %"class.spvtools::opt::CFG"* %208, null
  br i1 %210, label %213, label %211

211:                                              ; preds = %200
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %208) #11
  %212 = bitcast %"class.spvtools::opt::CFG"* %208 to i8*
  call void @_ZdlPv(i8* %212) #10
  br label %213

213:                                              ; preds = %211, %200
  %214 = load i32, i32* %196, align 8
  %215 = or i32 %214, 16
  store i32 %215, i32* %196, align 8
  br label %216

216:                                              ; preds = %189, %213
  %217 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %195, i64 0, i32 15, i32 0, i32 0, i32 0
  %218 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %217, align 8
  %219 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %218, i64 0, i32 2
  %220 = icmp eq %"class.spvtools::opt::BasicBlock"* %219, %194
  br i1 %220, label %287, label %221

221:                                              ; preds = %216
  %222 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %223 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 11
  %224 = load i32, i32* %223, align 8
  %225 = and i32 %224, 16
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %243

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 4, i32 0, i32 0, i32 0
  %229 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %228, align 8
  %230 = call i8* @_Znwm(i64 400) #10
  %231 = bitcast i8* %230 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %231, %"class.spvtools::opt::Module"* %229) #11
  %232 = ptrtoint i8* %230 to i64
  %233 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 15
  %234 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %233, i64 0, i32 0, i32 0, i32 0
  %235 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %234, align 8
  %236 = bitcast %"class.std::__1::unique_ptr.273"* %233 to i64*
  store i64 %232, i64* %236, align 8
  %237 = icmp eq %"class.spvtools::opt::CFG"* %235, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %227
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %235) #11
  %239 = bitcast %"class.spvtools::opt::CFG"* %235 to i8*
  call void @_ZdlPv(i8* %239) #10
  br label %240

240:                                              ; preds = %238, %227
  %241 = load i32, i32* %223, align 8
  %242 = or i32 %241, 16
  store i32 %242, i32* %223, align 8
  br label %243

243:                                              ; preds = %221, %240
  %244 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 15, i32 0, i32 0, i32 0
  %245 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %244, align 8
  %246 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %245, i64 0, i32 3
  %247 = icmp eq %"class.spvtools::opt::BasicBlock"* %246, %194
  br i1 %247, label %287, label %248

248:                                              ; preds = %243
  %249 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %119, align 8
  %250 = icmp eq %"class.spvtools::opt::BasicBlock"* %194, %249
  br i1 %250, label %287, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %194, i64 0, i32 1, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %252, align 8
  %254 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 4
  %255 = load i8, i8* %254, align 1, !range !7
  %256 = icmp eq i8 %255, 0
  br i1 %256, label %262, label %257

257:                                              ; preds = %251
  %258 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %253, i64 0, i32 3
  %259 = load i8, i8* %258, align 4, !range !7
  %260 = zext i8 %259 to i32
  %261 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %253, i32 %260) #11
  br label %262

262:                                              ; preds = %251, %257
  %263 = phi i32 [ %261, %257 ], [ 0, %251 ]
  %264 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %264, i64 -1, i32 1
  %266 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %265, align 8
  %267 = icmp eq %"class.spvtools::opt::Instruction"* %266, null
  br i1 %267, label %280, label %268

268:                                              ; preds = %262
  %269 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %266, i64 0, i32 3
  %270 = load i8, i8* %269, align 4, !range !7
  %271 = icmp eq i8 %270, 0
  %272 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %266, i64 0, i32 4
  %273 = load i8, i8* %272, align 1, !range !7
  %274 = icmp eq i8 %273, 0
  %275 = select i1 %274, i32 1, i32 2
  %276 = xor i1 %274, true
  %277 = zext i1 %276 to i32
  %278 = select i1 %271, i32 %277, i32 %275
  %279 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %266, i32 %278) #11
  br label %280

280:                                              ; preds = %262, %268
  %281 = phi i32 [ %279, %268 ], [ 0, %262 ]
  %282 = icmp eq i32 %263, %281
  br i1 %282, label %283, label %286

283:                                              ; preds = %280
  %284 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  %285 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %284, i64 -1
  store %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %285, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  br label %286

286:                                              ; preds = %283, %280
  call void @_ZN8spvtools3opt15MergeReturnPass22ProcessStructuredBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %194)
  call void @_ZN8spvtools3opt15MergeReturnPass13GenerateStateEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %194)
  br label %287

287:                                              ; preds = %216, %243, %248, %286
  %288 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %190, i64 0, i32 1
  %289 = bitcast %"struct.std::__1::__list_node_base"** %288 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = inttoptr i64 %290 to %"struct.std::__1::__list_node_base"*
  %292 = icmp eq %"struct.std::__1::__list_node_base"* %24, %291
  br i1 %292, label %120, label %189

293:                                              ; preds = %186, %404
  %294 = phi %"struct.std::__1::__list_node_base"* [ %184, %186 ], [ %408, %404 ]
  %295 = phi i64 [ %183, %186 ], [ %407, %404 ]
  %296 = inttoptr i64 %295 to %"struct.std::__1::__list_node"*
  %297 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %296, i64 0, i32 1
  %298 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %297, align 8
  %299 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %299, i64 0, i32 11
  %301 = load i32, i32* %300, align 8
  %302 = and i32 %301, 16
  %303 = icmp eq i32 %302, 0
  br i1 %303, label %304, label %320

304:                                              ; preds = %293
  %305 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %299, i64 0, i32 4, i32 0, i32 0, i32 0
  %306 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %305, align 8
  %307 = call i8* @_Znwm(i64 400) #10
  %308 = bitcast i8* %307 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %308, %"class.spvtools::opt::Module"* %306) #11
  %309 = ptrtoint i8* %307 to i64
  %310 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %299, i64 0, i32 15
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %310, i64 0, i32 0, i32 0, i32 0
  %312 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %311, align 8
  %313 = bitcast %"class.std::__1::unique_ptr.273"* %310 to i64*
  store i64 %309, i64* %313, align 8
  %314 = icmp eq %"class.spvtools::opt::CFG"* %312, null
  br i1 %314, label %317, label %315

315:                                              ; preds = %304
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %312) #11
  %316 = bitcast %"class.spvtools::opt::CFG"* %312 to i8*
  call void @_ZdlPv(i8* %316) #10
  br label %317

317:                                              ; preds = %315, %304
  %318 = load i32, i32* %300, align 8
  %319 = or i32 %318, 16
  store i32 %319, i32* %300, align 8
  br label %320

320:                                              ; preds = %293, %317
  %321 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %299, i64 0, i32 15, i32 0, i32 0, i32 0
  %322 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %321, align 8
  %323 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %322, i64 0, i32 2
  %324 = icmp eq %"class.spvtools::opt::BasicBlock"* %323, %298
  br i1 %324, label %404, label %325

325:                                              ; preds = %320
  %326 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %327 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 11
  %328 = load i32, i32* %327, align 8
  %329 = and i32 %328, 16
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %347

331:                                              ; preds = %325
  %332 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 4, i32 0, i32 0, i32 0
  %333 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %332, align 8
  %334 = call i8* @_Znwm(i64 400) #10
  %335 = bitcast i8* %334 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %335, %"class.spvtools::opt::Module"* %333) #11
  %336 = ptrtoint i8* %334 to i64
  %337 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 15
  %338 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %337, i64 0, i32 0, i32 0, i32 0
  %339 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %338, align 8
  %340 = bitcast %"class.std::__1::unique_ptr.273"* %337 to i64*
  store i64 %336, i64* %340, align 8
  %341 = icmp eq %"class.spvtools::opt::CFG"* %339, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %331
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %339) #11
  %343 = bitcast %"class.spvtools::opt::CFG"* %339 to i8*
  call void @_ZdlPv(i8* %343) #10
  br label %344

344:                                              ; preds = %342, %331
  %345 = load i32, i32* %327, align 8
  %346 = or i32 %345, 16
  store i32 %346, i32* %327, align 8
  br label %347

347:                                              ; preds = %325, %344
  %348 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 15, i32 0, i32 0, i32 0
  %349 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %348, align 8
  %350 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %349, i64 0, i32 3
  %351 = icmp eq %"class.spvtools::opt::BasicBlock"* %350, %298
  br i1 %351, label %404, label %352

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %298, i64 0, i32 1, i32 0, i32 0, i32 0
  %354 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %353, align 8
  %355 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %354, i64 0, i32 4
  %356 = load i8, i8* %355, align 1, !range !7
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %363, label %358

358:                                              ; preds = %352
  %359 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %354, i64 0, i32 3
  %360 = load i8, i8* %359, align 4, !range !7
  %361 = zext i8 %360 to i32
  %362 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %354, i32 %361) #11
  br label %363

363:                                              ; preds = %352, %358
  %364 = phi i32 [ %362, %358 ], [ 0, %352 ]
  %365 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  %366 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %365, i64 -1, i32 1
  %367 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %366, align 8
  %368 = icmp eq %"class.spvtools::opt::Instruction"* %367, null
  br i1 %368, label %381, label %369

369:                                              ; preds = %363
  %370 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 3
  %371 = load i8, i8* %370, align 4, !range !7
  %372 = icmp eq i8 %371, 0
  %373 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %367, i64 0, i32 4
  %374 = load i8, i8* %373, align 1, !range !7
  %375 = icmp eq i8 %374, 0
  %376 = select i1 %375, i32 1, i32 2
  %377 = xor i1 %375, true
  %378 = zext i1 %377 to i32
  %379 = select i1 %372, i32 %378, i32 %376
  %380 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %367, i32 %379) #11
  br label %381

381:                                              ; preds = %363, %369
  %382 = phi i32 [ %380, %369 ], [ 0, %363 ]
  %383 = icmp eq i32 %364, %382
  br i1 %383, label %384, label %387

384:                                              ; preds = %381
  %385 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  %386 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %385, i64 -1
  store %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %386, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %57, align 8
  br label %387

387:                                              ; preds = %384, %381
  %388 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %187, align 8
  %389 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %188, align 8
  %390 = icmp eq %"class.spvtools::opt::BasicBlock"** %388, %389
  br i1 %390, label %398, label %391

391:                                              ; preds = %387, %395
  %392 = phi %"class.spvtools::opt::BasicBlock"** [ %396, %395 ], [ %388, %387 ]
  %393 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %392, align 8
  %394 = icmp eq %"class.spvtools::opt::BasicBlock"* %393, %298
  br i1 %394, label %398, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %392, i64 1
  %397 = icmp eq %"class.spvtools::opt::BasicBlock"** %396, %389
  br i1 %397, label %403, label %391

398:                                              ; preds = %391, %387
  %399 = phi %"class.spvtools::opt::BasicBlock"** [ %388, %387 ], [ %392, %391 ]
  %400 = icmp eq %"class.spvtools::opt::BasicBlock"** %399, %389
  br i1 %400, label %403, label %401

401:                                              ; preds = %398
  %402 = call zeroext i1 @_ZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS0_10BasicBlockEPNSt3__113unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EENS4_9allocatorIS3_EEEEPNS4_4listIS3_SB_EE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %298, %"class.std::__1::unordered_set.1013"* nonnull %5, %"class.std::__1::list"* nonnull %4)
  br i1 %402, label %403, label %441

403:                                              ; preds = %395, %398, %401
  call void @_ZN8spvtools3opt15MergeReturnPass13GenerateStateEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %298)
  br label %404

404:                                              ; preds = %320, %347, %403
  %405 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %294, i64 0, i32 1
  %406 = bitcast %"struct.std::__1::__list_node_base"** %405 to i64*
  %407 = load i64, i64* %406, align 8
  %408 = inttoptr i64 %407 to %"struct.std::__1::__list_node_base"*
  %409 = icmp eq %"struct.std::__1::__list_node_base"* %24, %408
  br i1 %409, label %410, label %293

410:                                              ; preds = %404, %175
  %411 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %25, align 8
  %412 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %411, i64 0, i32 16, i32 0
  %413 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %411, i64 0, i32 16, i32 0, i32 1, i32 0, i32 0
  %414 = bitcast %"class.std::__1::__tree_end_node"* %413 to %"class.std::__1::__tree_node.1124"**
  %415 = load %"class.std::__1::__tree_node.1124"*, %"class.std::__1::__tree_node.1124"** %414, align 8
  %416 = icmp eq %"class.std::__1::__tree_node.1124"* %415, null
  br i1 %416, label %440, label %417

417:                                              ; preds = %410, %417
  %418 = phi %"class.std::__1::__tree_end_node"* [ %428, %417 ], [ %413, %410 ]
  %419 = phi %"class.std::__1::__tree_node.1124"* [ %429, %417 ], [ %415, %410 ]
  %420 = getelementptr inbounds %"class.std::__1::__tree_node.1124", %"class.std::__1::__tree_node.1124"* %419, i64 0, i32 1, i32 0, i32 0
  %421 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %420, align 8
  %422 = icmp ult %"class.spvtools::opt::Function"* %421, %1
  %423 = getelementptr inbounds %"class.std::__1::__tree_node.1124", %"class.std::__1::__tree_node.1124"* %419, i64 0, i32 0, i32 1
  %424 = bitcast %"class.std::__1::__tree_node_base"** %423 to %"class.std::__1::__tree_node.1124"**
  %425 = getelementptr inbounds %"class.std::__1::__tree_node.1124", %"class.std::__1::__tree_node.1124"* %419, i64 0, i32 0, i32 0
  %426 = bitcast %"class.std::__1::__tree_node.1124"* %419 to %"class.std::__1::__tree_node.1124"**
  %427 = select i1 %422, %"class.std::__1::__tree_node.1124"** %424, %"class.std::__1::__tree_node.1124"** %426
  %428 = select i1 %422, %"class.std::__1::__tree_end_node"* %418, %"class.std::__1::__tree_end_node"* %425
  %429 = load %"class.std::__1::__tree_node.1124"*, %"class.std::__1::__tree_node.1124"** %427, align 8
  %430 = icmp eq %"class.std::__1::__tree_node.1124"* %429, null
  br i1 %430, label %431, label %417

431:                                              ; preds = %417
  %432 = icmp eq %"class.std::__1::__tree_end_node"* %428, %413
  br i1 %432, label %440, label %433

433:                                              ; preds = %431
  %434 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %428, i64 4
  %435 = bitcast %"class.std::__1::__tree_end_node"* %434 to %"class.spvtools::opt::Function"**
  %436 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %435, align 8
  %437 = icmp ugt %"class.spvtools::opt::Function"* %436, %1
  br i1 %437, label %440, label %438

438:                                              ; preds = %433
  %439 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree.355"* %412, %"class.std::__1::__tree_end_node"* %428) #11
  br label %440

440:                                              ; preds = %410, %431, %433, %438
  call void @_ZN8spvtools3opt15MergeReturnPass14AddNewPhiNodesEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  br label %441

441:                                              ; preds = %401, %440
  %442 = phi i1 [ true, %440 ], [ false, %401 ]
  %443 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %178, align 8
  %444 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %443, null
  br i1 %444, label %451, label %445

445:                                              ; preds = %441, %445
  %446 = phi %"struct.std::__1::__hash_node_base.1018"* [ %448, %445 ], [ %443, %441 ]
  %447 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %446, i64 0, i32 0
  %448 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %447, align 8
  %449 = bitcast %"struct.std::__1::__hash_node_base.1018"* %446 to i8*
  call void @_ZdlPv(i8* %449) #10
  %450 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %448, null
  br i1 %450, label %451, label %445

451:                                              ; preds = %445, %441
  %452 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %177, align 8
  store %"struct.std::__1::__hash_node_base.1018"** null, %"struct.std::__1::__hash_node_base.1018"*** %177, align 8
  %453 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %452, null
  br i1 %453, label %456, label %454

454:                                              ; preds = %451
  %455 = bitcast %"struct.std::__1::__hash_node_base.1018"** %452 to i8*
  call void @_ZdlPv(i8* %455) #10
  br label %456

456:                                              ; preds = %451, %454
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %176) #11
  %457 = load i64, i64* %23, align 8
  %458 = icmp eq i64 %457, 0
  br i1 %458, label %480, label %459

459:                                              ; preds = %456
  %460 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %22, align 8
  %461 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %21, align 8
  %462 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %461, i64 0, i32 1
  %463 = bitcast %"struct.std::__1::__list_node_base"** %462 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %460, i64 0, i32 0
  %466 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %465, align 8
  %467 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %466, i64 0, i32 1
  %468 = bitcast %"struct.std::__1::__list_node_base"** %467 to i64*
  store i64 %464, i64* %468, align 8
  %469 = bitcast %"struct.std::__1::__list_node_base"* %460 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = bitcast %"struct.std::__1::__list_node_base"** %462 to i64**
  %472 = load i64*, i64** %471, align 8
  store i64 %470, i64* %472, align 8
  store i64 0, i64* %23, align 8
  %473 = icmp eq %"struct.std::__1::__list_node_base"* %460, %24
  br i1 %473, label %480, label %474

474:                                              ; preds = %459, %474
  %475 = phi %"struct.std::__1::__list_node_base"* [ %477, %474 ], [ %460, %459 ]
  %476 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %475, i64 0, i32 1
  %477 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %476, align 8
  %478 = bitcast %"struct.std::__1::__list_node_base"* %475 to i8*
  call void @_ZdlPv(i8* %478) #10
  %479 = icmp eq %"struct.std::__1::__list_node_base"* %477, %24
  br i1 %479, label %480, label %474

480:                                              ; preds = %474, %456, %459
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  br label %481

481:                                              ; preds = %7, %13, %480
  %482 = phi i1 [ %442, %480 ], [ false, %13 ], [ false, %7 ]
  ret i1 %482
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS0_8FunctionE(%"class.spvtools::opt::MergeReturnPass"* nocapture readonly, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.spvtools::utils::BitVector", align 8
  %4 = alloca %"class.std::__1::function.1108", align 8
  %5 = bitcast %"class.spvtools::utils::BitVector"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %3, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %3, i64 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 128) #10
  %10 = bitcast %"class.spvtools::utils::BitVector"* %3 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 128
  %12 = bitcast i64** %8 to i8**
  store i8* %11, i8** %12, align 8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 128, i1 false) #11
  %13 = bitcast i64** %7 to i64*
  %14 = ptrtoint i8* %11 to i64
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 11
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %22, align 8
  %24 = tail call i8* @_Znwm(i64 400) #10
  %25 = bitcast i8* %24 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %25, %"class.spvtools::opt::Module"* %23) #11
  %26 = ptrtoint i8* %24 to i64
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 15
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %27, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.273"* %27 to i64*
  store i64 %26, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::CFG"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %21
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %29) #11
  %33 = bitcast %"class.spvtools::opt::CFG"* %29 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %32, %21
  %35 = load i32, i32* %17, align 8
  %36 = or i32 %35, 16
  store i32 %36, i32* %17, align 8
  br label %37

37:                                               ; preds = %2, %34
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 15, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %42, align 8
  %44 = bitcast %"class.std::__1::function.1108"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #11
  %45 = ptrtoint %"class.spvtools::utils::BitVector"* %3 to i64
  %46 = getelementptr inbounds %"class.std::__1::function.1108", %"class.std::__1::function.1108"* %4, i64 0, i32 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::function.1108", %"class.std::__1::function.1108"* %4, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS3_8FunctionEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::BasicBlock"*)** %46, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS5_8FunctionEE3$_6FvPNS5_10BasicBlockEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %47, align 8
  %48 = bitcast %"class.std::__1::function.1108"* %4 to i64*
  store i64 %45, i64* %48, align 8
  call void @_ZN8spvtools3opt3CFG23ForEachBlockInPostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"* %39, %"class.spvtools::opt::BasicBlock"* %43, %"class.std::__1::function.1108"* nonnull dereferenceable(32) %4) #11
  %49 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %47, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %49, i64 0, i32 1
  %51 = load void (i8*)*, void (i8*)** %50, align 8
  %52 = icmp eq void (i8*)* %51, null
  br i1 %52, label %56, label %53

53:                                               ; preds = %37
  %54 = getelementptr inbounds %"class.std::__1::function.1108", %"class.std::__1::function.1108"* %4, i64 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void %51(i8* %55) #11
  br label %56

56:                                               ; preds = %37, %53
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #11
  %57 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %40, align 8
  %58 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %59 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.40"* %57, %59
  br i1 %60, label %227, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.spvtools::utils::BitVector"* %3 to i64*
  br label %63

63:                                               ; preds = %61, %224
  %64 = phi %"class.std::__1::unique_ptr.40"* [ %57, %61 ], [ %225, %224 ]
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %66, i64 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 4
  %70 = load i8, i8* %69, align 1, !range !7
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %77, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 3
  %74 = load i8, i8* %73, align 4, !range !7
  %75 = zext i8 %74 to i32
  %76 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %68, i32 %75) #11
  br label %77

77:                                               ; preds = %63, %72
  %78 = phi i32 [ %76, %72 ], [ 0, %63 ]
  %79 = lshr i32 %78, 6
  %80 = zext i32 %79 to i64
  %81 = load i64, i64* %13, align 8
  %82 = load i64, i64* %62, align 8
  %83 = sub i64 %81, %82
  %84 = ashr exact i64 %83, 3
  %85 = icmp ugt i64 %84, %80
  br i1 %85, label %86, label %95

86:                                               ; preds = %77
  %87 = inttoptr i64 %82 to i64*
  %88 = and i32 %78, 63
  %89 = getelementptr inbounds i64, i64* %87, i64 %80
  %90 = load i64, i64* %89, align 8
  %91 = zext i32 %88 to i64
  %92 = shl i64 1, %91
  %93 = and i64 %90, %92
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %224

95:                                               ; preds = %86, %77
  %96 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %96, i64 0, i32 11
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, 2048
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %96) #11
  br label %102

102:                                              ; preds = %95, %101
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %96, i64 0, i32 27, i32 0, i32 0, i32 0
  %104 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %103, align 8
  %105 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 4
  %107 = load i8, i8* %106, align 1, !range !7
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %102
  %110 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 3
  %111 = load i8, i8* %110, align 4, !range !7
  %112 = zext i8 %111 to i32
  %113 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %105, i32 %112) #11
  br label %114

114:                                              ; preds = %102, %109
  %115 = phi i32 [ %113, %109 ], [ 0, %102 ]
  %116 = call zeroext i1 @_ZN8spvtools3opt21StructuredCFGAnalysis15IsContinueBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"* %104, i32 %115) #11
  br i1 %116, label %117, label %205

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %66, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8, !noalias !8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 2
  %121 = load i32, i32* %120, align 8
  %122 = icmp eq i32 %121, 249
  br i1 %122, label %123, label %227

123:                                              ; preds = %117
  %124 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 3
  %125 = load i8, i8* %124, align 4, !range !7
  %126 = icmp eq i8 %125, 0
  %127 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 4
  %128 = load i8, i8* %127, align 1, !range !7
  %129 = icmp eq i8 %128, 0
  %130 = select i1 %129, i32 1, i32 2
  %131 = xor i1 %129, true
  %132 = zext i1 %131 to i32
  %133 = select i1 %126, i32 %132, i32 %130
  %134 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %119, i32 %133) #11
  %135 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %136 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 4
  %137 = load i8, i8* %136, align 1, !range !7
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %123
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %135, i64 0, i32 3
  %141 = load i8, i8* %140, align 4, !range !7
  %142 = zext i8 %141 to i32
  %143 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %135, i32 %142) #11
  br label %144

144:                                              ; preds = %123, %139
  %145 = phi i32 [ %143, %139 ], [ 0, %123 ]
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %104, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %148 = load i64, i64* %147, align 8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %202, label %150

150:                                              ; preds = %144
  %151 = call i64 @llvm.ctpop.i64(i64 %148) #11, !range !15
  %152 = icmp ugt i64 %151, 1
  br i1 %152, label %156, label %153

153:                                              ; preds = %150
  %154 = add i64 %148, 4294967295
  %155 = and i64 %154, %146
  br label %160

156:                                              ; preds = %150
  %157 = icmp ugt i64 %148, %146
  br i1 %157, label %160, label %158

158:                                              ; preds = %156
  %159 = urem i64 %146, %148
  br label %160

160:                                              ; preds = %158, %156, %153
  %161 = phi i64 [ %155, %153 ], [ %159, %158 ], [ %146, %156 ]
  %162 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %104, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %162, align 8
  %164 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %163, i64 %161
  %165 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %164, align 8
  %166 = icmp eq %"struct.std::__1::__hash_node_base.881"* %165, null
  br i1 %166, label %202, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %165, i64 0, i32 0
  %169 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %168, align 8
  %170 = icmp eq %"struct.std::__1::__hash_node_base.881"* %169, null
  br i1 %170, label %202, label %171

171:                                              ; preds = %167
  %172 = add i64 %148, -1
  br label %173

173:                                              ; preds = %194, %171
  %174 = phi %"struct.std::__1::__hash_node_base.881"* [ %169, %171 ], [ %196, %194 ]
  %175 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %174, i64 1
  %176 = bitcast %"struct.std::__1::__hash_node_base.881"* %175 to i64*
  %177 = load i64, i64* %176, align 8
  %178 = icmp eq i64 %177, %146
  br i1 %178, label %189, label %179

179:                                              ; preds = %173
  br i1 %152, label %182, label %180

180:                                              ; preds = %179
  %181 = and i64 %177, %172
  br label %186

182:                                              ; preds = %179
  %183 = icmp ult i64 %177, %148
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = urem i64 %177, %148
  br label %186

186:                                              ; preds = %184, %182, %180
  %187 = phi i64 [ %181, %180 ], [ %185, %184 ], [ %177, %182 ]
  %188 = icmp eq i64 %187, %161
  br i1 %188, label %194, label %202

189:                                              ; preds = %173
  %190 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %174, i64 2
  %191 = bitcast %"struct.std::__1::__hash_node_base.881"* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, %145
  br i1 %193, label %198, label %194

194:                                              ; preds = %189, %186
  %195 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %174, i64 0, i32 0
  %196 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %195, align 8
  %197 = icmp eq %"struct.std::__1::__hash_node_base.881"* %196, null
  br i1 %197, label %202, label %173

198:                                              ; preds = %189
  %199 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %174, i64 3
  %200 = bitcast %"struct.std::__1::__hash_node_base.881"* %199 to i32*
  %201 = load i32, i32* %200, align 4
  br label %202

202:                                              ; preds = %186, %194, %144, %160, %167, %198
  %203 = phi i32 [ %201, %198 ], [ 0, %160 ], [ 0, %144 ], [ 0, %167 ], [ 0, %194 ], [ 0, %186 ]
  %204 = icmp eq i32 %134, %203
  br i1 %204, label %224, label %227

205:                                              ; preds = %114
  %206 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %207 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %206, i64 0, i32 4
  %208 = load i8, i8* %207, align 1, !range !7
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %215, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %206, i64 0, i32 3
  %212 = load i8, i8* %211, align 4, !range !7
  %213 = zext i8 %212 to i32
  %214 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %206, i32 %213) #11
  br label %215

215:                                              ; preds = %205, %210
  %216 = phi i32 [ %214, %210 ], [ 0, %205 ]
  %217 = call zeroext i1 @_ZN8spvtools3opt21StructuredCFGAnalysis12IsMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"* %104, i32 %216) #11
  br i1 %217, label %218, label %227

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %66, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %220 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %219, align 8, !noalias !16
  %221 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %220, i64 0, i32 2
  %222 = load i32, i32* %221, align 8
  %223 = icmp eq i32 %222, 255
  br i1 %223, label %224, label %227

224:                                              ; preds = %86, %202, %218
  %225 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %64, i64 1
  %226 = icmp eq %"class.std::__1::unique_ptr.40"* %225, %59
  br i1 %226, label %227, label %63

227:                                              ; preds = %218, %215, %117, %202, %224, %56
  %228 = phi i1 [ false, %56 ], [ false, %224 ], [ true, %202 ], [ true, %117 ], [ true, %215 ], [ true, %218 ]
  %229 = load i64*, i64** %6, align 8
  %230 = icmp eq i64* %229, null
  br i1 %230, label %234, label %231

231:                                              ; preds = %227
  %232 = ptrtoint i64* %229 to i64
  store i64 %232, i64* %13, align 8
  %233 = bitcast i64* %229 to i8*
  call void @_ZdlPv(i8* %233) #10
  br label %234

234:                                              ; preds = %227, %231
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #11
  ret i1 %228
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass25RecordImmediateDominatorsEPNS0_8FunctionE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1379", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.std::__1::tuple.1379", align 8
  %6 = alloca %"class.std::__1::tuple.1131", align 1
  %7 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %8 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %10, %"class.spvtools::opt::Function"* %1) #11
  %12 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.40"* %13, %15
  br i1 %16, label %28, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %11, i64 0, i32 0, i32 0
  %19 = bitcast %"class.spvtools::opt::BasicBlock"** %7 to i8*
  %20 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 7, i32 0
  %21 = bitcast %"class.std::__1::tuple.1379"* %3 to i8*
  %22 = getelementptr inbounds %"class.std::__1::tuple.1379", %"class.std::__1::tuple.1379"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  %24 = bitcast %"class.spvtools::opt::BasicBlock"** %8 to i8*
  %25 = bitcast %"class.std::__1::tuple.1379"* %5 to i8*
  %26 = getelementptr inbounds %"class.std::__1::tuple.1379", %"class.std::__1::tuple.1379"* %5, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %6, i64 0, i32 0
  br label %29

28:                                               ; preds = %77, %2
  ret void

29:                                               ; preds = %17, %77
  %30 = phi %"class.std::__1::unique_ptr.40"* [ %13, %17 ], [ %79, %77 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %31, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %32, null
  br i1 %33, label %72, label %34

34:                                               ; preds = %29
  %35 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt13DominatorTree18ImmediateDominatorEPKNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %18, %"class.spvtools::opt::BasicBlock"* nonnull %32) #11
  %36 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, null
  br i1 %36, label %72, label %37

37:                                               ; preds = %34
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 11
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 16
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %59

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 4, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %44, align 8
  %46 = call i8* @_Znwm(i64 400) #10
  %47 = bitcast i8* %46 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %47, %"class.spvtools::opt::Module"* %45) #11
  %48 = ptrtoint i8* %46 to i64
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 15
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %50, align 8
  %52 = bitcast %"class.std::__1::unique_ptr.273"* %49 to i64*
  store i64 %48, i64* %52, align 8
  %53 = icmp eq %"class.spvtools::opt::CFG"* %51, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %43
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %51) #11
  %55 = bitcast %"class.spvtools::opt::CFG"* %51 to i8*
  call void @_ZdlPv(i8* %55) #10
  br label %56

56:                                               ; preds = %54, %43
  %57 = load i32, i32* %39, align 8
  %58 = or i32 %57, 16
  store i32 %58, i32* %39, align 8
  br label %59

59:                                               ; preds = %37, %56
  %60 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %38, i64 0, i32 15, i32 0, i32 0, i32 0
  %61 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %60, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %61, i64 0, i32 2
  %63 = icmp eq %"class.spvtools::opt::BasicBlock"* %35, %62
  br i1 %63, label %72, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %35, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %66 = bitcast %"class.spvtools::opt::Instruction"** %65 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"class.spvtools::opt::BasicBlock"* %32, %"class.spvtools::opt::BasicBlock"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #11
  store %"class.spvtools::opt::BasicBlock"** %7, %"class.spvtools::opt::BasicBlock"*** %22, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #11
  %68 = call { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"* %20, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1379"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %69 = extractvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %68, 0
  %70 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %69, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #11
  %71 = bitcast %"struct.std::__1::__hash_node_base.944"* %70 to i64*
  store i64 %67, i64* %71, align 8
  br label %77

72:                                               ; preds = %29, %59, %34
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  store %"class.spvtools::opt::BasicBlock"* %32, %"class.spvtools::opt::BasicBlock"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #11
  store %"class.spvtools::opt::BasicBlock"** %8, %"class.spvtools::opt::BasicBlock"*** %26, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %27) #11
  %73 = call { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"* %20, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1379"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %6) #11
  %74 = extractvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %73, 0
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %74, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.944"* %75 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #11
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %76, align 8
  br label %77

77:                                               ; preds = %72, %64
  %78 = phi i8* [ %24, %72 ], [ %19, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #11
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %30, i64 1
  %80 = icmp eq %"class.std::__1::unique_ptr.40"* %79, %15
  br i1 %80, label %28, label %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass33AddSingleCaseSwitchAroundFunctionEv(%"class.spvtools::opt::MergeReturnPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple.1157", align 8
  %3 = alloca %"class.std::__1::tuple.1131", align 1
  %4 = alloca i32, align 4
  tail call void @_ZN8spvtools3opt15MergeReturnPass17CreateReturnBlockEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  %5 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 6
  %6 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  tail call void @_ZN8spvtools3opt15MergeReturnPass12CreateReturnEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %6)
  %7 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 16
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 15, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %14, align 8
  %16 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #11
  store i32 -1431655766, i32* %4, align 4
  %18 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %16, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 4
  %21 = load i8, i8* %20, align 1, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !7
  %26 = zext i8 %25 to i32
  %27 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %19, i32 %26) #11
  br label %28

28:                                               ; preds = %13, %23
  %29 = phi i32 [ %27, %23 ], [ 0, %13 ]
  store i32 %29, i32* %4, align 4
  %30 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %15, i64 0, i32 5, i32 0
  %31 = bitcast %"class.std::__1::tuple.1157"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %2, i64 0, i32 0, i32 0, i32 0
  store i32* %4, i32** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %33) #11
  %34 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %30, i32* nonnull dereferenceable(4) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1157"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %3) #11
  %35 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %34, 0
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %35, i64 3
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %33) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #11
  store %"class.spvtools::opt::BasicBlock"* %16, %"class.spvtools::opt::BasicBlock"** %37, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %15, %"class.spvtools::opt::BasicBlock"* %16) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #11
  br label %38

38:                                               ; preds = %1, %28
  %39 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  call void @_ZN8spvtools3opt15MergeReturnPass22CreateSingleCaseSwitchEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %39)
  ret void
}

declare void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Function"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass22ProcessStructuredBlockEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8, !noalias !26
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -253
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %15

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 3
  %12 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %11, align 8
  %13 = icmp eq %"class.spvtools::opt::Instruction"* %12, null
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  tail call void @_ZN8spvtools3opt15MergeReturnPass13AddReturnFlagEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  br label %17

15:                                               ; preds = %2
  %16 = icmp eq i32 %8, 2
  br i1 %16, label %17, label %52

17:                                               ; preds = %14, %10, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %19 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %19, i64 -1, i32 0
  %21 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %20, align 8
  %22 = icmp eq %"class.spvtools::opt::Instruction"* %21, null
  br i1 %22, label %35, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 3
  %25 = load i8, i8* %24, align 4, !range !7
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %21, i64 0, i32 4
  %28 = load i8, i8* %27, align 1, !range !7
  %29 = icmp eq i8 %28, 0
  %30 = select i1 %29, i32 1, i32 2
  %31 = xor i1 %29, true
  %32 = zext i1 %31 to i32
  %33 = select i1 %26, i32 %32, i32 %30
  %34 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %21, i32 %33) #11
  br label %35

35:                                               ; preds = %17, %23
  %36 = phi i32 [ %34, %23 ], [ 0, %17 ]
  tail call void @_ZN8spvtools3opt15MergeReturnPass13BranchToBlockEPNS0_10BasicBlockEj(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %1, i32 %36)
  %37 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 4
  %41 = load i8, i8* %40, align 1, !range !7
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %48, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %39, i64 0, i32 3
  %45 = load i8, i8* %44, align 4, !range !7
  %46 = zext i8 %45 to i32
  %47 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %39, i32 %46) #11
  br label %48

48:                                               ; preds = %35, %43
  %49 = phi i32 [ %47, %43 ], [ 0, %35 ]
  store i32 %49, i32* %3, align 4
  %50 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 9, i32 0
  %51 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %50, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %3) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #11
  br label %52

52:                                               ; preds = %15, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS0_10BasicBlockEPNSt3__113unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EENS4_9allocatorIS3_EEEEPNS4_4listIS3_SB_EE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::unordered_set.1013"*, %"class.std::__1::list"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %6 = alloca %"class.std::__1::function.1088", align 8
  %7 = ptrtoint %"class.spvtools::opt::BasicBlock"* %1 to i64
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %72, label %24

24:                                               ; preds = %4
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, -1
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ult i64 %20, %22
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %39, null
  br i1 %40, label %72, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %43, null
  br i1 %44, label %72, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.1018"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.1018"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %20, %51
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %72

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.1018"* %64 to %"class.spvtools::opt::BasicBlock"**
  %66 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %65, align 8
  %67 = icmp eq %"class.spvtools::opt::BasicBlock"* %66, %1
  br i1 %67, label %250, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %70, null
  br i1 %71, label %72, label %47

72:                                               ; preds = %68, %60, %34, %4, %41
  %73 = bitcast %"class.spvtools::opt::BasicBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #11
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %74 = bitcast %"class.std::__1::function.1088"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %74) #11
  %75 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %6, i64 0, i32 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %6, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS7_10BasicBlockEPNS_13unordered_setISA_NS_4hashISA_EENS_8equal_toISA_EENS_9allocatorISA_EEEEPNS_4listISA_SH_EEE3$_5S2_EEEEvPKNS0_16__policy_storageEj", void (%"union.std::__1::__function::__policy_storage"*, i32)** %75, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS5_10BasicBlockEPNS_13unordered_setIS8_NS_4hashIS8_EENS_8equal_toIS8_EENS_9allocatorIS8_EEEEPNS_4listIS8_SF_EEE3$_5FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %76, align 8
  %77 = bitcast %"class.std::__1::function.1088"* %6 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %77, align 8
  %78 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %6, i64 0, i32 0, i32 0, i32 1
  %79 = bitcast [8 x i8]* %78 to %"class.spvtools::opt::BasicBlock"***
  store %"class.spvtools::opt::BasicBlock"** %5, %"class.spvtools::opt::BasicBlock"*** %79, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.1088"* nonnull dereferenceable(32) %6) #11
  %80 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %76, align 8
  %81 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %80, i64 0, i32 1
  %82 = load void (i8*)*, void (i8*)** %81, align 8
  %83 = icmp eq void (i8*)* %82, null
  br i1 %83, label %87, label %84

84:                                               ; preds = %72
  %85 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %6, i64 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  call void %82(i8* %86) #11
  br label %87

87:                                               ; preds = %72, %84
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %74) #11
  %88 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %89 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %88, align 8
  %90 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %90, i64 0, i32 1, i32 0, i32 0, i32 0
  %92 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %91, align 8
  %93 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %92, i64 0, i32 4
  %94 = load i8, i8* %93, align 1, !range !7
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %101, label %96

96:                                               ; preds = %87
  %97 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %92, i64 0, i32 3
  %98 = load i8, i8* %97, align 4, !range !7
  %99 = zext i8 %98 to i32
  %100 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %92, i32 %99) #11
  br label %101

101:                                              ; preds = %87, %96
  %102 = phi i32 [ %100, %96 ], [ 0, %87 ]
  %103 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %89, i64 -1
  %104 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %89, i64 -1, i32 1
  %105 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %104, align 8
  %106 = icmp eq %"class.spvtools::opt::Instruction"* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %101
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 3
  %109 = load i8, i8* %108, align 4, !range !7
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %105, i64 0, i32 4
  %112 = load i8, i8* %111, align 1, !range !7
  %113 = icmp eq i8 %112, 0
  %114 = select i1 %113, i32 1, i32 2
  %115 = xor i1 %113, true
  %116 = zext i1 %115 to i32
  %117 = select i1 %110, i32 %116, i32 %114
  %118 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %105, i32 %117) #11
  br label %119

119:                                              ; preds = %101, %107
  %120 = phi i32 [ %118, %107 ], [ 0, %101 ]
  %121 = icmp eq i32 %102, %120
  br i1 %121, label %188, label %122

122:                                              ; preds = %119
  %123 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %123, i64 0, i32 1, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %124, align 8
  %126 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 4
  %127 = load i8, i8* %126, align 1, !range !7
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %125, i64 0, i32 3
  %131 = load i8, i8* %130, align 4, !range !7
  %132 = zext i8 %131 to i32
  %133 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %125, i32 %132) #11
  br label %134

134:                                              ; preds = %122, %129
  %135 = phi i32 [ %133, %129 ], [ 0, %122 ]
  %136 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %103, i64 0, i32 0
  %137 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %136, align 8
  %138 = icmp eq %"class.spvtools::opt::Instruction"* %137, null
  br i1 %138, label %151, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %137, i64 0, i32 3
  %141 = load i8, i8* %140, align 4, !range !7
  %142 = icmp eq i8 %141, 0
  %143 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %137, i64 0, i32 4
  %144 = load i8, i8* %143, align 1, !range !7
  %145 = icmp eq i8 %144, 0
  %146 = select i1 %145, i32 1, i32 2
  %147 = xor i1 %145, true
  %148 = zext i1 %147 to i32
  %149 = select i1 %142, i32 %148, i32 %146
  %150 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %137, i32 %149) #11
  br label %151

151:                                              ; preds = %134, %139
  %152 = phi i32 [ %150, %139 ], [ 0, %134 ]
  %153 = icmp eq i32 %135, %152
  br i1 %153, label %154, label %188

154:                                              ; preds = %151, %185
  %155 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %156, %185 ], [ %89, %151 ]
  %156 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %155, i64 -1
  %157 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %156, i64 0, i32 0
  %158 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %157, align 8
  %159 = icmp eq %"class.spvtools::opt::Instruction"* %158, null
  br i1 %159, label %172, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 3
  %162 = load i8, i8* %161, align 4, !range !7
  %163 = icmp eq i8 %162, 0
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %158, i64 0, i32 4
  %165 = load i8, i8* %164, align 1, !range !7
  %166 = icmp eq i8 %165, 0
  %167 = select i1 %166, i32 1, i32 2
  %168 = xor i1 %166, true
  %169 = zext i1 %168 to i32
  %170 = select i1 %163, i32 %169, i32 %167
  %171 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %158, i32 %170) #11
  br label %172

172:                                              ; preds = %154, %160
  %173 = phi i32 [ %171, %160 ], [ 0, %154 ]
  %174 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %175 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %174, i64 0, i32 1, i32 0, i32 0, i32 0
  %176 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %175, align 8
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 4
  %178 = load i8, i8* %177, align 1, !range !7
  %179 = icmp eq i8 %178, 0
  br i1 %179, label %185, label %180

180:                                              ; preds = %172
  %181 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %176, i64 0, i32 3
  %182 = load i8, i8* %181, align 4, !range !7
  %183 = zext i8 %182 to i32
  %184 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %176, i32 %183) #11
  br label %185

185:                                              ; preds = %172, %180
  %186 = phi i32 [ %184, %180 ], [ 0, %172 ]
  %187 = icmp eq i32 %173, %186
  br i1 %187, label %154, label %188

188:                                              ; preds = %185, %119, %151
  %189 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %89, %151 ], [ %103, %119 ], [ %155, %185 ]
  %190 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %191 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 6
  %192 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %2, i64 0, i32 0
  %193 = icmp eq %"class.spvtools::opt::BasicBlock"* %190, null
  br i1 %193, label %248, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  br label %196

196:                                              ; preds = %194, %244
  %197 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %189, %194 ], [ %221, %244 ]
  %198 = phi %"class.spvtools::opt::BasicBlock"* [ %190, %194 ], [ %246, %244 ]
  %199 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %191, align 8
  %200 = icmp eq %"class.spvtools::opt::BasicBlock"* %198, %199
  br i1 %200, label %248, label %201

201:                                              ; preds = %196
  %202 = call { %"struct.std::__1::__hash_node_base.1018"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1014"* %192, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5) #11
  %203 = extractvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } %202, 1
  %204 = and i8 %203, 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %248, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %197, i64 -1, i32 0
  %208 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %207, align 8
  %209 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 3
  %210 = load i8, i8* %209, align 4, !range !7
  %211 = icmp eq i8 %210, 0
  %212 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %208, i64 0, i32 4
  %213 = load i8, i8* %212, align 1, !range !7
  %214 = icmp eq i8 %213, 0
  %215 = select i1 %214, i32 1, i32 2
  %216 = xor i1 %214, true
  %217 = zext i1 %216 to i32
  %218 = select i1 %211, i32 %217, i32 %215
  %219 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %208, i32 %218) #11
  br label %220

220:                                              ; preds = %238, %206
  %221 = phi %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* [ %197, %206 ], [ %222, %238 ]
  %222 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %221, i64 -1
  %223 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass::StructuredControlState", %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %222, i64 0, i32 0
  %224 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %223, align 8
  %225 = icmp eq %"class.spvtools::opt::Instruction"* %224, null
  br i1 %225, label %238, label %226

226:                                              ; preds = %220
  %227 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %224, i64 0, i32 3
  %228 = load i8, i8* %227, align 4, !range !7
  %229 = icmp eq i8 %228, 0
  %230 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %224, i64 0, i32 4
  %231 = load i8, i8* %230, align 1, !range !7
  %232 = icmp eq i8 %231, 0
  %233 = select i1 %232, i32 1, i32 2
  %234 = xor i1 %232, true
  %235 = zext i1 %234 to i32
  %236 = select i1 %229, i32 %235, i32 %233
  %237 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %224, i32 %236) #11
  br label %238

238:                                              ; preds = %220, %226
  %239 = phi i32 [ %237, %226 ], [ 0, %220 ]
  %240 = icmp eq i32 %239, %219
  br i1 %240, label %220, label %241

241:                                              ; preds = %238
  %242 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %243 = call zeroext i1 @_ZN8spvtools3opt15MergeReturnPass18BreakFromConstructEPNS0_10BasicBlockEPNSt3__113unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EENS4_9allocatorIS3_EEEEPNS4_4listIS3_SB_EEPNS0_11InstructionE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %242, %"class.std::__1::unordered_set.1013"* %2, %"class.std::__1::list"* %3, %"class.spvtools::opt::Instruction"* %208)
  br i1 %243, label %244, label %248

244:                                              ; preds = %241
  %245 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %195, align 8
  %246 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %245, i32 %219)
  store %"class.spvtools::opt::BasicBlock"* %246, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %247 = icmp eq %"class.spvtools::opt::BasicBlock"* %246, null
  br i1 %247, label %248, label %196

248:                                              ; preds = %241, %196, %244, %201, %188
  %249 = phi i1 [ true, %188 ], [ true, %201 ], [ true, %244 ], [ true, %196 ], [ false, %241 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #11
  br label %250

250:                                              ; preds = %63, %248
  %251 = phi i1 [ %249, %248 ], [ true, %63 ]
  ret i1 %251
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass14AddNewPhiNodesEv(%"class.spvtools::opt::MergeReturnPass"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::list", align 8
  %3 = bitcast %"class.std::__1::list"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %2, i64 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %4, align 8
  store %"struct.std::__1::__list_node_base"* %7, %"struct.std::__1::__list_node_base"** %5, align 8
  store i64 0, i64* %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 11
  %11 = load i32, i32* %10, align 8
  %12 = and i32 %11, 16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %30

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %15, align 8
  %17 = call i8* @_Znwm(i64 400) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %18, %"class.spvtools::opt::Module"* %16) #11
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 15
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %21, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.273"* %20 to i64*
  store i64 %19, i64* %23, align 8
  %24 = icmp eq %"class.spvtools::opt::CFG"* %22, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %14
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %22) #11
  %26 = bitcast %"class.spvtools::opt::CFG"* %22 to i8*
  call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %25, %14
  %28 = load i32, i32* %10, align 8
  %29 = or i32 %28, 16
  store i32 %29, i32* %10, align 8
  br label %30

30:                                               ; preds = %1, %27
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %9, i64 0, i32 15, i32 0, i32 0, i32 0
  %32 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %34 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %33, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %34, i64 0, i32 3, i32 0, i32 0
  %36 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %37, align 8
  call void @_ZN8spvtools3opt3CFG22ComputeStructuredOrderEPNS0_8FunctionEPNS0_10BasicBlockEPNSt3__14listIS5_NS6_9allocatorIS5_EEEE(%"class.spvtools::opt::CFG"* %32, %"class.spvtools::opt::Function"* %34, %"class.spvtools::opt::BasicBlock"* %38, %"class.std::__1::list"* nonnull %2) #11
  %39 = bitcast %"struct.std::__1::__list_node_base"** %5 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = inttoptr i64 %40 to %"struct.std::__1::__list_node_base"*
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %7, %41
  br i1 %42, label %43, label %68

43:                                               ; preds = %68, %30
  %44 = load i64, i64* %6, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %67, label %46

46:                                               ; preds = %43
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %5, align 8
  %48 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %4, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %48, i64 0, i32 1
  %50 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %47, i64 0, i32 0
  %53 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %52, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %53, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base"* %47 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"struct.std::__1::__list_node_base"** %49 to i64**
  %59 = load i64*, i64** %58, align 8
  store i64 %57, i64* %59, align 8
  store i64 0, i64* %6, align 8
  %60 = icmp eq %"struct.std::__1::__list_node_base"* %47, %7
  br i1 %60, label %67, label %61

61:                                               ; preds = %46, %61
  %62 = phi %"struct.std::__1::__list_node_base"* [ %64, %61 ], [ %47, %46 ]
  %63 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %62, i64 0, i32 1
  %64 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %65 = bitcast %"struct.std::__1::__list_node_base"* %62 to i8*
  call void @_ZdlPv(i8* %65) #10
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %64, %7
  br i1 %66, label %67, label %61

67:                                               ; preds = %61, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #11
  ret void

68:                                               ; preds = %30, %68
  %69 = phi %"struct.std::__1::__list_node_base"* [ %77, %68 ], [ %41, %30 ]
  %70 = phi i64 [ %76, %68 ], [ %40, %30 ]
  %71 = inttoptr i64 %70 to %"struct.std::__1::__list_node"*
  %72 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %71, i64 0, i32 1
  %73 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %72, align 8
  call void @_ZN8spvtools3opt15MergeReturnPass14AddNewPhiNodesEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %73)
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %75 = bitcast %"struct.std::__1::__list_node_base"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = inttoptr i64 %76 to %"struct.std::__1::__list_node_base"*
  %78 = icmp eq %"struct.std::__1::__list_node_base"* %7, %77
  br i1 %78, label %43, label %68
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass17CreateReturnBlockEv(%"class.spvtools::opt::MergeReturnPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.40", align 8
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.std::__1::unique_ptr.40", align 8
  %8 = tail call i8* @_Znwm(i64 112) #10
  %9 = bitcast i8* %8 to %"class.spvtools::opt::Instruction"*
  %10 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %13 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %12, align 8
  %14 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %13) #11
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 2
  %18 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %17, align 8
  %19 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %18, i64 0, i32 2
  %20 = load i8, i8* %19, align 8, !range !7
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %16
  %23 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %23, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %24 = getelementptr inbounds i8, i8* %23, i64 37
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 1, i32 0
  %26 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %11, i64 0, i32 5, i32 0, i32 0
  tail call void %26(%"union.std::__1::__function::__policy_storage"* %27, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %23) #11
  tail call void @_ZdlPv(i8* nonnull %23) #10
  br label %28

28:                                               ; preds = %1, %16, %22
  %29 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %9, %"class.spvtools::opt::IRContext"* %11, i32 248, i32 0, i32 %14, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %30 = ptrtoint i8* %8 to i64
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, null
  br i1 %33, label %64, label %34

34:                                               ; preds = %28
  %35 = bitcast %"struct.spvtools::opt::Operand"* %32 to i8*
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %37 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %36, align 8
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %37, %32
  br i1 %38, label %62, label %39

39:                                               ; preds = %34, %57
  %40 = phi %"struct.spvtools::opt::Operand"* [ %41, %57 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 -1
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %44 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %45 = icmp eq %"class.std::__1::vector.3"* %44, null
  br i1 %45, label %57, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %44, i64 0, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %44, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %50, %46
  %56 = bitcast %"class.std::__1::vector.3"* %44 to i8*
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %39
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %41, %32
  br i1 %58, label %59, label %39

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector"* %6 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %34
  %63 = phi i8* [ %61, %59 ], [ %35, %34 ]
  store %"struct.spvtools::opt::Operand"* %32, %"struct.spvtools::opt::Operand"** %36, align 8
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %28, %62
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #11
  %65 = bitcast %"class.std::__1::unique_ptr.40"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #11
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %7, i64 0, i32 0, i32 0, i32 0
  %67 = call i8* @_Znwm(i64 136) #10
  %68 = bitcast i8* %67 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %68, align 8
  %69 = getelementptr inbounds i8, i8* %67, i64 8
  %70 = bitcast i8* %69 to i64*
  store i64 %30, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %67, i64 16
  %72 = bitcast i8* %71 to i32 (...)***
  %73 = getelementptr inbounds i8, i8* %67, i64 24
  %74 = bitcast i8* %73 to i32 (...)***
  %75 = getelementptr inbounds i8, i8* %67, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %74, align 8
  %76 = getelementptr inbounds i8, i8* %67, i64 56
  %77 = getelementptr inbounds i8, i8* %67, i64 72
  %78 = bitcast i8* %77 to i32*
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds i8, i8* %67, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 56, i1 false) #11
  %80 = bitcast i8* %75 to i8**
  store i8* %73, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %67, i64 40
  %82 = bitcast i8* %81 to i8**
  store i8* %73, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %67, i64 48
  store i8 1, i8* %83, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %72, align 8
  %84 = ptrtoint i8* %67 to i64
  %85 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %86 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %85, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %87 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %86, i64 0, i32 3
  %88 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %86, i64 0, i32 3, i32 0, i32 1
  %89 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %88, align 8
  store %"class.spvtools::opt::Function"* %86, %"class.spvtools::opt::Function"** %68, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #11
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  store i64 %84, i64* %92, align 8
  %93 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %87, %"class.std::__1::unique_ptr.40"* %89, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %2) #11
  %94 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %91, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %95 = icmp eq %"class.spvtools::opt::BasicBlock"* %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %64
  %97 = bitcast %"class.std::__1::unique_ptr.40"* %2 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %97, %"class.spvtools::opt::BasicBlock"* nonnull %94) #11
  br label %98

98:                                               ; preds = %64, %96
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #11
  %99 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %85, align 8
  %100 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %99, i64 0, i32 3, i32 0, i32 1
  %101 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 -1, i32 0, i32 0, i32 0
  %103 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 6
  store %"class.spvtools::opt::BasicBlock"* %103, %"class.spvtools::opt::BasicBlock"** %104, align 8
  %105 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %119, label %110

110:                                              ; preds = %98
  %111 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %103, i64 0, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 6, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %113, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %114, %"class.spvtools::opt::Instruction"* %112) #11
  %115 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %116 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %104, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %115, i64 0, i32 11
  %118 = load i32, i32* %117, align 8
  br label %119

119:                                              ; preds = %98, %110
  %120 = phi i32 [ %107, %98 ], [ %118, %110 ]
  %121 = phi %"class.spvtools::opt::BasicBlock"* [ %103, %98 ], [ %116, %110 ]
  %122 = phi %"class.spvtools::opt::IRContext"* [ %105, %98 ], [ %115, %110 ]
  %123 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %121, i64 0, i32 1, i32 0, i32 0, i32 0
  %124 = bitcast %"class.spvtools::opt::Instruction"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126)
  %127 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %125, i64* %127, align 8
  %128 = and i32 %120, 2
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %139, label %130

130:                                              ; preds = %119
  %131 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %122, i64 0, i32 9, i32 0
  %132 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #11
  %133 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %134) #11
  %135 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %131, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %136 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %135, 0
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %136, i64 3
  %138 = bitcast %"struct.std::__1::__hash_node_base.178"* %137 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #11
  store %"class.spvtools::opt::BasicBlock"* %121, %"class.spvtools::opt::BasicBlock"** %138, align 8
  br label %139

139:                                              ; preds = %119, %130
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126)
  %140 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %7 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %143, %"class.spvtools::opt::BasicBlock"* nonnull %140) #11
  br label %144

144:                                              ; preds = %142, %139
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32, i32, i32, %"class.std::__1::vector"* dereferenceable(24)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass12CreateReturnEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1131", align 1
  %8 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %9 = alloca %"class.std::__1::tuple", align 8
  %10 = alloca %"class.std::__1::tuple.1131", align 1
  %11 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %12 = alloca i32, align 4
  %13 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %"class.std::initializer_list", align 8
  %17 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %18 = alloca %"class.spvtools::utils::SmallVector", align 8
  %19 = alloca %"class.std::__1::vector.1037", align 8
  %20 = alloca %"class.spvtools::opt::IRContext"*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca %"class.std::initializer_list", align 8
  %25 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %26 = alloca %"class.spvtools::utils::SmallVector", align 8
  tail call void @_ZN8spvtools3opt15MergeReturnPass14AddReturnValueEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  %27 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 4
  %28 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %28, null
  br i1 %29, label %366, label %30

30:                                               ; preds = %2
  %31 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %31) #11
  store i32 -1431655766, i32* %12, align 4
  %32 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %34, align 8
  %36 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %35) #11
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 5, i32 0, i32 2
  %40 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %40, i64 0, i32 2
  %42 = load i8, i8* %41, align 8, !range !7
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %38
  %45 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %46 = getelementptr inbounds i8, i8* %45, i64 37
  store i8 0, i8* %46, align 1
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 5, i32 0, i32 1, i32 0
  %48 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 5, i32 0, i32 0
  tail call void %48(%"union.std::__1::__function::__policy_storage"* %49, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %45) #11
  tail call void @_ZdlPv(i8* nonnull %45) #10
  br label %50

50:                                               ; preds = %30, %38, %44
  store i32 %36, i32* %12, align 4
  %51 = bitcast %"class.spvtools::opt::IRContext"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #11
  %52 = bitcast %"class.spvtools::opt::IRContext"** %32 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.spvtools::opt::IRContext"** %13 to i64*
  store i64 %53, i64* %54, align 8
  %55 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55) #11
  store i32 61, i32* %14, align 4
  %56 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %58 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %57, align 8
  %59 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %58, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 3
  %62 = load i8, i8* %61, align 4, !range !7
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %66, label %64

64:                                               ; preds = %50
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %60, i32 0) #11
  br label %66

66:                                               ; preds = %50, %64
  %67 = phi i32 [ %65, %64 ], [ 0, %50 ]
  store i32 %67, i32* %15, align 4
  %68 = bitcast %"class.std::initializer_list"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #11
  %69 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %69) #11
  %70 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0
  %71 = bitcast %"class.spvtools::utils::SmallVector"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %71) #11
  %72 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 4
  %74 = load i8, i8* %73, align 1, !range !7
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %66
  %77 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %72, i64 0, i32 3
  %78 = load i8, i8* %77, align 4, !range !7
  %79 = zext i8 %78 to i32
  %80 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %72, i32 %79) #11
  br label %81

81:                                               ; preds = %66, %76
  %82 = phi i32 [ %80, %76 ], [ 0, %66 ]
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 2
  %86 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 3, i64 0
  %87 = bitcast i32** %85 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %86, %"struct.std::__1::aligned_storage<4, 4>::type"** %87, align 8
  %88 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4
  %89 = bitcast %"class.std::__1::unique_ptr.0"* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %86 to i32*
  store i64 1, i64* %84, align 8
  store i32 %82, i32* %90, align 8
  %91 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 0
  store i32 1, i32* %91, align 8
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %92, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %93, align 8
  %94 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 2
  %96 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 3, i64 0
  %97 = bitcast i32** %95 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %96, %"struct.std::__1::aligned_storage<4, 4>::type"** %97, align 8
  %98 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 4
  %99 = bitcast %"class.std::__1::unique_ptr.0"* %98 to i64*
  store i64 0, i64* %99, align 8
  %100 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %18) #11
  %101 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %16, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %70, %"struct.spvtools::opt::Operand"** %101, align 8
  %102 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %16, i64 0, i32 1
  store i64 1, i64* %102, align 8
  %103 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_jRjSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %13, i32* nonnull dereferenceable(4) %14, i32* nonnull dereferenceable(4) %15, i32* nonnull dereferenceable(4) %12, %"class.std::initializer_list"* nonnull dereferenceable(16) %16)
  %104 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %105 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 1
  %106 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %105, align 8
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %106, null
  br i1 %107, label %121, label %108

108:                                              ; preds = %81
  %109 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 2
  %110 = bitcast %"class.spvtools::opt::Instruction"** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %106, i64 0, i32 0, i32 2
  %113 = bitcast %"class.spvtools::opt::Instruction"** %112 to i64*
  store i64 %111, i64* %113, align 8
  %114 = bitcast %"class.spvtools::opt::Instruction"** %105 to i64*
  %115 = load i64, i64* %114, align 8
  %116 = bitcast %"class.spvtools::opt::Instruction"** %109 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %117 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %116, align 8
  %118 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %117, i64 0, i32 1
  %119 = bitcast %"class.spvtools::opt::Instruction"** %118 to i64*
  store i64 %115, i64* %119, align 8
  %120 = bitcast %"class.spvtools::opt::Instruction"** %105 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 16, i1 false) #11
  br label %121

121:                                              ; preds = %81, %108
  store %"class.spvtools::opt::Instruction"* %104, %"class.spvtools::opt::Instruction"** %105, align 8
  %122 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %123 = bitcast %"class.spvtools::opt::Instruction"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 2
  %126 = bitcast %"class.spvtools::opt::Instruction"** %125 to i64*
  store i64 %124, i64* %126, align 8
  store %"class.spvtools::opt::Instruction"* %103, %"class.spvtools::opt::Instruction"** %122, align 8
  %127 = bitcast %"class.spvtools::opt::Instruction"** %125 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %128 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %127, align 8
  %129 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %128, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %103, %"class.spvtools::opt::Instruction"** %129, align 8
  %130 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %130, align 8
  %131 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %17, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %132 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %131, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %131, align 8
  %133 = icmp eq %"class.std::__1::vector.3"* %132, null
  br i1 %133, label %145, label %134

134:                                              ; preds = %121
  %135 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 0
  %136 = load i32*, i32** %135, align 8
  %137 = icmp eq i32* %136, null
  br i1 %137, label %143, label %138

138:                                              ; preds = %134
  %139 = ptrtoint i32* %136 to i64
  %140 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %132, i64 0, i32 0, i32 1
  %141 = bitcast i32** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = bitcast i32* %136 to i8*
  call void @_ZdlPv(i8* %142) #10
  br label %143

143:                                              ; preds = %138, %134
  %144 = bitcast %"class.std::__1::vector.3"* %132 to i8*
  call void @_ZdlPv(i8* %144) #10
  br label %145

145:                                              ; preds = %121, %143
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %146 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %18, i64 0, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %160, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %145, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %69) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #11
  %161 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8, !noalias !29
  %162 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %163 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 11
  %164 = load i32, i32* %163, align 8
  %165 = and i32 %164, 1
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %173, label %167

167:                                              ; preds = %160
  %168 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %162, i64 0, i32 6, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %168, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %169, %"class.spvtools::opt::Instruction"* %161) #11
  %170 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %170, i64 0, i32 11
  %172 = load i32, i32* %171, align 8
  br label %173

173:                                              ; preds = %160, %167
  %174 = phi i32 [ %164, %160 ], [ %172, %167 ]
  %175 = phi %"class.spvtools::opt::IRContext"* [ %162, %160 ], [ %170, %167 ]
  %176 = bitcast %"class.spvtools::opt::Instruction"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176)
  store %"class.spvtools::opt::Instruction"* %161, %"class.spvtools::opt::Instruction"** %8, align 8
  %177 = and i32 %174, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %191, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %175, i64 0, i32 9, i32 0
  %181 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %181) #11
  %182 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %8, %"class.spvtools::opt::Instruction"*** %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %183) #11
  %184 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %180, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %7) #11
  %185 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %184, 0
  %186 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %185, i64 3
  %187 = bitcast %"struct.std::__1::__hash_node_base.178"* %186 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %183) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #11
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %187, align 8
  %188 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %189 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %188, i64 0, i32 11
  %190 = load i32, i32* %189, align 8
  br label %191

191:                                              ; preds = %173, %179
  %192 = phi i32 [ %174, %173 ], [ %190, %179 ]
  %193 = phi %"class.spvtools::opt::IRContext"* [ %175, %173 ], [ %188, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176)
  %194 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %193, i64 0, i32 11
  %195 = and i32 %192, 4
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %218

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %193, i64 0, i32 4, i32 0, i32 0, i32 0
  %199 = bitcast %"class.spvtools::opt::Module"** %198 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = call i8* @_Znwm(i64 48) #10
  %202 = bitcast i8* %201 to %"class.spvtools::opt::analysis::DecorationManager"*
  %203 = getelementptr inbounds i8, i8* %201, i64 32
  %204 = bitcast i8* %203 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %201, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %204, align 4
  %205 = getelementptr inbounds i8, i8* %201, i64 40
  %206 = bitcast i8* %205 to i64*
  store i64 %200, i64* %206, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %202) #11
  %207 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %193, i64 0, i32 7
  %208 = ptrtoint i8* %201 to i64
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %207, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %209, align 8
  %211 = bitcast %"class.std::__1::unique_ptr.122"* %207 to i64*
  store i64 %208, i64* %211, align 8
  %212 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %210, null
  br i1 %212, label %215, label %213

213:                                              ; preds = %197
  %214 = bitcast %"class.std::__1::unique_ptr.122"* %207 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %214, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %210) #11
  br label %215

215:                                              ; preds = %213, %197
  %216 = load i32, i32* %194, align 8
  %217 = or i32 %216, 4
  store i32 %217, i32* %194, align 8
  br label %218

218:                                              ; preds = %191, %215
  %219 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %193, i64 0, i32 7, i32 0, i32 0, i32 0
  %220 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %219, align 8
  %221 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %27, align 8
  %222 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %221, i64 0, i32 4
  %223 = load i8, i8* %222, align 1, !range !7
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %230, label %225

225:                                              ; preds = %218
  %226 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %221, i64 0, i32 3
  %227 = load i8, i8* %226, align 4, !range !7
  %228 = zext i8 %227 to i32
  %229 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %221, i32 %228) #11
  br label %230

230:                                              ; preds = %218, %225
  %231 = phi i32 [ %229, %225 ], [ 0, %218 ]
  %232 = load i32, i32* %12, align 4
  %233 = bitcast %"class.std::__1::vector.1037"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #11
  %234 = call i8* @_Znwm(i64 4) #10
  %235 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %19, i64 0, i32 0, i32 1
  %236 = bitcast %"class.std::__1::vector.1037"* %19 to i8**
  store i8* %234, i8** %236, align 8
  %237 = getelementptr inbounds i8, i8* %234, i64 4
  %238 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %19, i64 0, i32 0, i32 2, i32 0, i32 0
  %239 = bitcast i32** %238 to i8**
  store i8* %237, i8** %239, align 8
  %240 = bitcast i32** %235 to i64*
  %241 = bitcast i8* %234 to i32*
  store i32 0, i32* %241, align 4
  %242 = ptrtoint i8* %237 to i64
  store i64 %242, i64* %240, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %220, i32 %231, i32 %232, %"class.std::__1::vector.1037"* nonnull dereferenceable(24) %19) #11
  %243 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %19, i64 0, i32 0, i32 0
  %244 = load i32*, i32** %243, align 8
  %245 = icmp eq i32* %244, null
  br i1 %245, label %249, label %246

246:                                              ; preds = %230
  %247 = ptrtoint i32* %244 to i64
  store i64 %247, i64* %240, align 8
  %248 = bitcast i32* %244 to i8*
  call void @_ZdlPv(i8* %248) #10
  br label %249

249:                                              ; preds = %230, %246
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #11
  %250 = bitcast %"class.spvtools::opt::IRContext"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #11
  %251 = load i64, i64* %52, align 8
  %252 = bitcast %"class.spvtools::opt::IRContext"** %20 to i64*
  store i64 %251, i64* %252, align 8
  %253 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #11
  store i32 254, i32* %21, align 4
  %254 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %254) #11
  store i32 0, i32* %22, align 4
  %255 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #11
  store i32 0, i32* %23, align 4
  %256 = bitcast %"class.std::initializer_list"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %256) #11
  %257 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %257) #11
  %258 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0
  %259 = bitcast %"class.spvtools::utils::SmallVector"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %259) #11
  %260 = load i32, i32* %12, align 4
  %261 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %261, align 8
  %262 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 1
  %263 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 2
  %264 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 3, i64 0
  %265 = bitcast i32** %263 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %264, %"struct.std::__1::aligned_storage<4, 4>::type"** %265, align 8
  %266 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 4
  %267 = bitcast %"class.std::__1::unique_ptr.0"* %266 to i64*
  store i64 0, i64* %267, align 8
  %268 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %264 to i32*
  store i64 1, i64* %262, align 8
  store i32 %260, i32* %268, align 8
  %269 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 0
  store i32 1, i32* %269, align 8
  %270 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1
  %271 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %270, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %271, align 8
  %272 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %272, align 8
  %273 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 2
  %274 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 3, i64 0
  %275 = bitcast i32** %273 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %274, %"struct.std::__1::aligned_storage<4, 4>::type"** %275, align 8
  %276 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 4
  %277 = bitcast %"class.std::__1::unique_ptr.0"* %276 to i64*
  store i64 0, i64* %277, align 8
  %278 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %270, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %26) #11
  %279 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %24, i64 0, i32 0
  store %"struct.spvtools::opt::Operand"* %258, %"struct.spvtools::opt::Operand"** %279, align 8
  %280 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %24, i64 0, i32 1
  store i64 1, i64* %280, align 8
  %281 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** nonnull dereferenceable(8) %20, i32* nonnull dereferenceable(4) %21, i32* nonnull dereferenceable(4) %22, i32* nonnull dereferenceable(4) %23, %"class.std::initializer_list"* nonnull dereferenceable(16) %24)
  %282 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %281, i64 0, i32 0, i32 1
  %283 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %282, align 8
  %284 = icmp eq %"class.spvtools::opt::Instruction"* %283, null
  br i1 %284, label %298, label %285

285:                                              ; preds = %249
  %286 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %281, i64 0, i32 0, i32 2
  %287 = bitcast %"class.spvtools::opt::Instruction"** %286 to i64*
  %288 = load i64, i64* %287, align 8
  %289 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %283, i64 0, i32 0, i32 2
  %290 = bitcast %"class.spvtools::opt::Instruction"** %289 to i64*
  store i64 %288, i64* %290, align 8
  %291 = bitcast %"class.spvtools::opt::Instruction"** %282 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.spvtools::opt::Instruction"** %286 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %294 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %293, align 8
  %295 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %294, i64 0, i32 1
  %296 = bitcast %"class.spvtools::opt::Instruction"** %295 to i64*
  store i64 %292, i64* %296, align 8
  %297 = bitcast %"class.spvtools::opt::Instruction"** %282 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %297, i8 0, i64 16, i1 false) #11
  br label %298

298:                                              ; preds = %249, %285
  store %"class.spvtools::opt::Instruction"* %104, %"class.spvtools::opt::Instruction"** %282, align 8
  %299 = load i64, i64* %123, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %281, i64 0, i32 0, i32 2
  %301 = bitcast %"class.spvtools::opt::Instruction"** %300 to i64*
  store i64 %299, i64* %301, align 8
  store %"class.spvtools::opt::Instruction"* %281, %"class.spvtools::opt::Instruction"** %122, align 8
  %302 = bitcast %"class.spvtools::opt::Instruction"** %300 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %303 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %302, align 8
  %304 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %303, i64 0, i32 1
  store %"class.spvtools::opt::Instruction"* %281, %"class.spvtools::opt::Instruction"** %304, align 8
  %305 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %305, align 8
  %306 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %25, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %307 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %306, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %306, align 8
  %308 = icmp eq %"class.std::__1::vector.3"* %307, null
  br i1 %308, label %320, label %309

309:                                              ; preds = %298
  %310 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %307, i64 0, i32 0, i32 0
  %311 = load i32*, i32** %310, align 8
  %312 = icmp eq i32* %311, null
  br i1 %312, label %318, label %313

313:                                              ; preds = %309
  %314 = ptrtoint i32* %311 to i64
  %315 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %307, i64 0, i32 0, i32 1
  %316 = bitcast i32** %315 to i64*
  store i64 %314, i64* %316, align 8
  %317 = bitcast i32* %311 to i8*
  call void @_ZdlPv(i8* %317) #10
  br label %318

318:                                              ; preds = %313, %309
  %319 = bitcast %"class.std::__1::vector.3"* %307 to i8*
  call void @_ZdlPv(i8* %319) #10
  br label %320

320:                                              ; preds = %298, %318
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %261, align 8
  %321 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 4, i32 0, i32 0, i32 0
  %322 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %321, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %321, align 8
  %323 = icmp eq %"class.std::__1::vector.3"* %322, null
  br i1 %323, label %335, label %324

324:                                              ; preds = %320
  %325 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %322, i64 0, i32 0, i32 0
  %326 = load i32*, i32** %325, align 8
  %327 = icmp eq i32* %326, null
  br i1 %327, label %333, label %328

328:                                              ; preds = %324
  %329 = ptrtoint i32* %326 to i64
  %330 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %322, i64 0, i32 0, i32 1
  %331 = bitcast i32** %330 to i64*
  store i64 %329, i64* %331, align 8
  %332 = bitcast i32* %326 to i8*
  call void @_ZdlPv(i8* %332) #10
  br label %333

333:                                              ; preds = %328, %324
  %334 = bitcast %"class.std::__1::vector.3"* %322 to i8*
  call void @_ZdlPv(i8* %334) #10
  br label %335

335:                                              ; preds = %320, %333
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %259) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %257) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %256) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %254) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #11
  %336 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %337 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %336, i64 0, i32 11
  %338 = load i32, i32* %337, align 8
  %339 = and i32 %338, 1
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %348, label %341

341:                                              ; preds = %335
  %342 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %122, align 8, !noalias !32
  %343 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %336, i64 0, i32 6, i32 0, i32 0, i32 0
  %344 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %343, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %344, %"class.spvtools::opt::Instruction"* %342) #11
  %345 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %345, i64 0, i32 11
  %347 = load i32, i32* %346, align 8
  br label %348

348:                                              ; preds = %335, %341
  %349 = phi i32 [ %338, %335 ], [ %347, %341 ]
  %350 = phi %"class.spvtools::opt::IRContext"* [ %336, %335 ], [ %345, %341 ]
  %351 = load i64, i64* %123, align 8, !noalias !35
  %352 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352)
  %353 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %351, i64* %353, align 8
  %354 = and i32 %349, 2
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %365, label %356

356:                                              ; preds = %348
  %357 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %350, i64 0, i32 9, i32 0
  %358 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %358) #11
  %359 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %359, align 8
  %360 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %360) #11
  %361 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %357, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %362 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %361, 0
  %363 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %362, i64 3
  %364 = bitcast %"struct.std::__1::__hash_node_base.178"* %363 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %360) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %358) #11
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %364, align 8
  br label %365

365:                                              ; preds = %348, %356
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %31) #11
  br label %428

366:                                              ; preds = %2
  %367 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %368 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %367, align 8
  %369 = tail call i8* @_Znwm(i64 112) #10
  %370 = bitcast i8* %369 to %"class.spvtools::opt::Instruction"*
  tail call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_(%"class.spvtools::opt::Instruction"* nonnull %370, %"class.spvtools::opt::IRContext"* %368, i32 253) #11
  %371 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %372 = getelementptr inbounds i8, i8* %369, i64 8
  %373 = bitcast i8* %372 to %"class.spvtools::opt::Instruction"**
  %374 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %373, align 8
  %375 = icmp eq %"class.spvtools::opt::Instruction"* %374, null
  br i1 %375, label %388, label %376

376:                                              ; preds = %366
  %377 = getelementptr inbounds i8, i8* %369, i64 16
  %378 = bitcast i8* %377 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %374, i64 0, i32 0, i32 2
  %381 = bitcast %"class.spvtools::opt::Instruction"** %380 to i64*
  store i64 %379, i64* %381, align 8
  %382 = bitcast i8* %372 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast i8* %377 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %385 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %384, align 8
  %386 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %385, i64 0, i32 1
  %387 = bitcast %"class.spvtools::opt::Instruction"** %386 to i64*
  store i64 %383, i64* %387, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %372, i8 0, i64 16, i1 false) #11
  br label %388

388:                                              ; preds = %366, %376
  store %"class.spvtools::opt::Instruction"* %371, %"class.spvtools::opt::Instruction"** %373, align 8
  %389 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %390 = bitcast %"class.spvtools::opt::Instruction"** %389 to i64*
  %391 = load i64, i64* %390, align 8
  %392 = getelementptr inbounds i8, i8* %369, i64 16
  %393 = bitcast i8* %392 to i64*
  store i64 %391, i64* %393, align 8
  %394 = bitcast %"class.spvtools::opt::Instruction"** %389 to i8**
  store i8* %369, i8** %394, align 8
  %395 = inttoptr i64 %391 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %396 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %395, i64 0, i32 1
  %397 = bitcast %"class.spvtools::opt::Instruction"** %396 to i8**
  store i8* %369, i8** %397, align 8
  %398 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %367, align 8
  %399 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %398, i64 0, i32 11
  %400 = load i32, i32* %399, align 8
  %401 = and i32 %400, 1
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %410, label %403

403:                                              ; preds = %388
  %404 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %389, align 8, !noalias !38
  %405 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %398, i64 0, i32 6, i32 0, i32 0, i32 0
  %406 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %405, align 8
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %406, %"class.spvtools::opt::Instruction"* %404) #11
  %407 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %367, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %407, i64 0, i32 11
  %409 = load i32, i32* %408, align 8
  br label %410

410:                                              ; preds = %388, %403
  %411 = phi i32 [ %400, %388 ], [ %409, %403 ]
  %412 = phi %"class.spvtools::opt::IRContext"* [ %398, %388 ], [ %407, %403 ]
  %413 = load i64, i64* %390, align 8, !noalias !41
  %414 = bitcast %"class.spvtools::opt::Instruction"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %414)
  %415 = bitcast %"class.spvtools::opt::Instruction"** %11 to i64*
  store i64 %413, i64* %415, align 8
  %416 = and i32 %411, 2
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %427, label %418

418:                                              ; preds = %410
  %419 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %412, i64 0, i32 9, i32 0
  %420 = bitcast %"class.std::__1::tuple"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #11
  %421 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %11, %"class.spvtools::opt::Instruction"*** %421, align 8
  %422 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %422) #11
  %423 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %419, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %10) #11
  %424 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %423, 0
  %425 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %424, i64 3
  %426 = bitcast %"struct.std::__1::__hash_node_base.178"* %425 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %422) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #11
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %426, align 8
  br label %427

427:                                              ; preds = %410, %418
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %414)
  br label %428

428:                                              ; preds = %427, %365
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass14AddReturnValueEv(%"class.spvtools::opt::MergeReturnPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1131", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::unique_ptr.21", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %10 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %11 = alloca %"class.std::__1::vector.1037", align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 4
  %13 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %12, align 8
  %14 = icmp eq %"class.spvtools::opt::Instruction"* %13, null
  br i1 %14, label %15, label %345

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %17 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %19, i64 0, i32 3
  %21 = load i8, i8* %20, align 4, !range !7
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %15
  %24 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %19, i32 0) #11
  br label %25

25:                                               ; preds = %15, %23
  %26 = phi i32 [ %24, %23 ], [ 0, %15 ]
  %27 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %57

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %34, align 8
  %36 = tail call i8* @_Znwm(i64 104) #10
  %37 = bitcast i8* %36 to %"class.spvtools::opt::analysis::DefUseManager"*
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %39, align 4
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = getelementptr inbounds i8, i8* %36, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #11
  %42 = bitcast i8* %41 to i8**
  store i8* %40, i8** %42, align 8
  %43 = getelementptr inbounds i8, i8* %36, i64 64
  %44 = getelementptr inbounds i8, i8* %36, i64 96
  %45 = bitcast i8* %44 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %45, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %37, %"class.spvtools::opt::Module"* %35) #11
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 6
  %47 = ptrtoint i8* %36 to i64
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.62"* %46 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %49, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %33
  %53 = bitcast %"class.std::__1::unique_ptr.62"* %46 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %53, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %49) #11
  br label %54

54:                                               ; preds = %52, %33
  %55 = load i32, i32* %29, align 8
  %56 = or i32 %55, 1
  store i32 %56, i32* %29, align 8
  br label %57

57:                                               ; preds = %25, %54
  %58 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 6, i32 0, i32 0, i32 0
  %59 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %58, align 8
  %60 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %59, i32 %26) #11
  %61 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %60, i64 0, i32 2
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 19
  br i1 %63, label %345, label %64

64:                                               ; preds = %57
  %65 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %65, i64 0, i32 11
  %67 = load i32, i32* %66, align 8
  %68 = trunc i32 %67 to i16
  %69 = icmp slt i16 %68, 0
  br i1 %69, label %85, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %65, i64 0, i32 5
  %72 = tail call i8* @_Znwm(i64 240) #10
  %73 = bitcast i8* %72 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %73, %"class.std::__1::function"* dereferenceable(32) %71, %"class.spvtools::opt::IRContext"* %65) #11
  %74 = ptrtoint i8* %72 to i64
  %75 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %65, i64 0, i32 20
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %76, align 8
  %78 = bitcast %"class.std::__1::unique_ptr.480"* %75 to i64*
  store i64 %74, i64* %78, align 8
  %79 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %77, null
  br i1 %79, label %82, label %80

80:                                               ; preds = %70
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %77) #11
  %81 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %77 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %70
  %83 = load i32, i32* %66, align 8
  %84 = or i32 %83, 32768
  store i32 %84, i32* %66, align 8
  br label %85

85:                                               ; preds = %64, %82
  %86 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %65, i64 0, i32 20, i32 0, i32 0, i32 0
  %87 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %86, align 8
  %88 = tail call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %87, i32 %26, i32 7) #11
  %89 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %90 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 4, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %90, align 8
  %92 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %91) #11
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 5, i32 0, i32 2
  %96 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %95, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %96, i64 0, i32 2
  %98 = load i8, i8* %97, align 8, !range !7
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %100, label %106

100:                                              ; preds = %94
  %101 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %102 = getelementptr inbounds i8, i8* %101, i64 37
  store i8 0, i8* %102, align 1
  %103 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 5, i32 0, i32 1, i32 0
  %104 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %103, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %89, i64 0, i32 5, i32 0, i32 0
  tail call void %104(%"union.std::__1::__function::__policy_storage"* %105, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %101) #11
  tail call void @_ZdlPv(i8* nonnull %101) #10
  br label %106

106:                                              ; preds = %85, %94, %100
  %107 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #11
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %5, i64 0, i32 0, i32 0, i32 0
  %109 = tail call i8* @_Znwm(i64 112) #10
  %110 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %111 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #11
  %112 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %112) #11
  %113 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %116 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %117 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %118 = bitcast i32** %116 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %117, %"struct.std::__1::aligned_storage<4, 4>::type"** %118, align 8
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %120 = bitcast %"class.std::__1::unique_ptr.0"* %119 to i64*
  store i64 0, i64* %120, align 8
  %121 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %117 to i32*
  store i64 1, i64* %115, align 8
  store i32 7, i32* %121, align 8
  %122 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  store i32 16, i32* %122, align 8
  %123 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %124 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %123, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %124, align 8
  %125 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %125, align 8
  %126 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 3, i64 0
  %128 = bitcast i32** %126 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %127, %"struct.std::__1::aligned_storage<4, 4>::type"** %128, align 8
  %129 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4
  %130 = bitcast %"class.std::__1::unique_ptr.0"* %129 to i64*
  store i64 0, i64* %130, align 8
  %131 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %123, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %132 = call i8* @_Znwm(i64 48) #10
  %133 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %134 = bitcast %"struct.spvtools::opt::Operand"** %133 to i8**
  store i8* %132, i8** %134, align 8
  %135 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %132, i8** %135, align 8
  %136 = getelementptr inbounds i8, i8* %132, i64 48
  %137 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %138 = bitcast %"struct.spvtools::opt::Operand"** %137 to i8**
  store i8* %136, i8** %138, align 8
  %139 = bitcast i8* %132 to i32*
  %140 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 0
  %141 = load i32, i32* %140, align 8
  store i32 %141, i32* %139, align 8
  %142 = getelementptr inbounds i8, i8* %132, i64 8
  %143 = bitcast i8* %142 to %"class.spvtools::utils::SmallVector"*
  %144 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1
  %145 = bitcast i8* %142 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds i8, i8* %132, i64 16
  %147 = bitcast i8* %146 to i64*
  store i64 0, i64* %147, align 8
  %148 = getelementptr inbounds i8, i8* %132, i64 24
  %149 = getelementptr inbounds i8, i8* %132, i64 32
  %150 = bitcast i8* %148 to i8**
  store i8* %149, i8** %150, align 8
  %151 = getelementptr inbounds i8, i8* %132, i64 40
  %152 = bitcast i8* %151 to i64*
  store i64 0, i64* %152, align 8
  %153 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %143, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %144) #11
  %154 = getelementptr inbounds i8, i8* %132, i64 48
  %155 = bitcast i8* %109 to %"class.spvtools::opt::Instruction"*
  %156 = bitcast %"struct.spvtools::opt::Operand"** %133 to i64*
  %157 = ptrtoint i8* %154 to i64
  store i64 %157, i64* %156, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %155, %"class.spvtools::opt::IRContext"* %110, i32 59, i32 %88, i32 %92, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %158 = ptrtoint i8* %109 to i64
  %159 = bitcast %"class.std::__1::unique_ptr.21"* %5 to i64*
  store i64 %158, i64* %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %161 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %160, align 8
  %162 = icmp eq %"struct.spvtools::opt::Operand"* %161, null
  br i1 %162, label %191, label %163

163:                                              ; preds = %106
  %164 = bitcast %"struct.spvtools::opt::Operand"* %161 to i8*
  %165 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %133, align 8
  %166 = icmp eq %"struct.spvtools::opt::Operand"* %165, %161
  br i1 %166, label %189, label %167

167:                                              ; preds = %163, %185
  %168 = phi %"struct.spvtools::opt::Operand"* [ %169, %185 ], [ %165, %163 ]
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %168, i64 -1
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %168, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %170, align 8
  %171 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %168, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %171, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %171, align 8
  %173 = icmp eq %"class.std::__1::vector.3"* %172, null
  br i1 %173, label %185, label %174

174:                                              ; preds = %167
  %175 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 0
  %176 = load i32*, i32** %175, align 8
  %177 = icmp eq i32* %176, null
  br i1 %177, label %183, label %178

178:                                              ; preds = %174
  %179 = ptrtoint i32* %176 to i64
  %180 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %172, i64 0, i32 0, i32 1
  %181 = bitcast i32** %180 to i64*
  store i64 %179, i64* %181, align 8
  %182 = bitcast i32* %176 to i8*
  call void @_ZdlPv(i8* %182) #10
  br label %183

183:                                              ; preds = %178, %174
  %184 = bitcast %"class.std::__1::vector.3"* %172 to i8*
  call void @_ZdlPv(i8* %184) #10
  br label %185

185:                                              ; preds = %183, %167
  %186 = icmp eq %"struct.spvtools::opt::Operand"* %169, %161
  br i1 %186, label %187, label %167

187:                                              ; preds = %185
  %188 = load i8*, i8** %135, align 8
  br label %189

189:                                              ; preds = %187, %163
  %190 = phi i8* [ %188, %187 ], [ %164, %163 ]
  store %"struct.spvtools::opt::Operand"* %161, %"struct.spvtools::opt::Operand"** %133, align 8
  call void @_ZdlPv(i8* %190) #10
  br label %191

191:                                              ; preds = %106, %189
  %192 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %192, align 8
  %193 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %7, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %194 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %193, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %193, align 8
  %195 = icmp eq %"class.std::__1::vector.3"* %194, null
  br i1 %195, label %207, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %194, i64 0, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8
  %199 = icmp eq i32* %198, null
  br i1 %199, label %205, label %200

200:                                              ; preds = %196
  %201 = ptrtoint i32* %198 to i64
  %202 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %194, i64 0, i32 0, i32 1
  %203 = bitcast i32** %202 to i64*
  store i64 %201, i64* %203, align 8
  %204 = bitcast i32* %198 to i8*
  call void @_ZdlPv(i8* %204) #10
  br label %205

205:                                              ; preds = %200, %196
  %206 = bitcast %"class.std::__1::vector.3"* %194 to i8*
  call void @_ZdlPv(i8* %206) #10
  br label %207

207:                                              ; preds = %191, %205
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %208 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %209 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %208, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %208, align 8
  %210 = icmp eq %"class.std::__1::vector.3"* %209, null
  br i1 %210, label %222, label %211

211:                                              ; preds = %207
  %212 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = icmp eq i32* %213, null
  br i1 %214, label %220, label %215

215:                                              ; preds = %211
  %216 = ptrtoint i32* %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %209, i64 0, i32 0, i32 1
  %218 = bitcast i32** %217 to i64*
  store i64 %216, i64* %218, align 8
  %219 = bitcast i32* %213 to i8*
  call void @_ZdlPv(i8* %219) #10
  br label %220

220:                                              ; preds = %215, %211
  %221 = bitcast %"class.std::__1::vector.3"* %209 to i8*
  call void @_ZdlPv(i8* %221) #10
  br label %222

222:                                              ; preds = %207, %220
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %113) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #11
  %223 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #11
  %224 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %9, i64 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %224, align 8
  %225 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %226 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %225, i64 0, i32 3, i32 0, i32 0
  %227 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 0, i32 0, i32 0, i32 0
  %229 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %228, align 8
  %230 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %229, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %231 = bitcast %"class.spvtools::opt::Instruction"** %230 to i64*
  %232 = load i64, i64* %231, align 8, !noalias !44
  %233 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %9 to i64*
  store i64 %232, i64* %233, align 8, !alias.scope !51
  %234 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #11
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %10, %"class.spvtools::opt::InstructionList::iterator"* nonnull %9, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #11
  %235 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %236 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %235, i64 0, i32 3, i32 0, i32 0
  %237 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %236, align 8
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %240 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %239, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %241 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %240, align 8, !noalias !52
  store %"class.spvtools::opt::Instruction"* %241, %"class.spvtools::opt::Instruction"** %12, align 8
  %242 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %243 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 11
  %244 = load i32, i32* %243, align 8
  %245 = and i32 %244, 1
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %249

247:                                              ; preds = %222
  %248 = ptrtoint %"class.spvtools::opt::Instruction"* %241 to i64
  br label %257

249:                                              ; preds = %222
  %250 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %242, i64 0, i32 6, i32 0, i32 0, i32 0
  %251 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %250, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %251, %"class.spvtools::opt::Instruction"* %241) #11
  %252 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %253 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %254 = load i64, i64* %253, align 8
  %255 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %252, i64 0, i32 11
  %256 = load i32, i32* %255, align 8
  br label %257

257:                                              ; preds = %247, %249
  %258 = phi i32 [ %244, %247 ], [ %256, %249 ]
  %259 = phi i64 [ %248, %247 ], [ %254, %249 ]
  %260 = phi %"class.spvtools::opt::IRContext"* [ %242, %247 ], [ %252, %249 ]
  %261 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  %262 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  store i64 %259, i64* %262, align 8
  %263 = and i32 %258, 2
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %277, label %265

265:                                              ; preds = %257
  %266 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %260, i64 0, i32 9, i32 0
  %267 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %267) #11
  %268 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %268, align 8
  %269 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %269) #11
  %270 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %266, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %3) #11
  %271 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %270, 0
  %272 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %271, i64 3
  %273 = bitcast %"struct.std::__1::__hash_node_base.178"* %272 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %269) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %267) #11
  store %"class.spvtools::opt::BasicBlock"* %239, %"class.spvtools::opt::BasicBlock"** %273, align 8
  %274 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %27, align 8
  %275 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %274, i64 0, i32 11
  %276 = load i32, i32* %275, align 8
  br label %277

277:                                              ; preds = %257, %265
  %278 = phi i32 [ %258, %257 ], [ %276, %265 ]
  %279 = phi %"class.spvtools::opt::IRContext"* [ %260, %257 ], [ %274, %265 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  %280 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 11
  %281 = and i32 %278, 4
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %304

283:                                              ; preds = %277
  %284 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 4, i32 0, i32 0, i32 0
  %285 = bitcast %"class.spvtools::opt::Module"** %284 to i64*
  %286 = load i64, i64* %285, align 8
  %287 = call i8* @_Znwm(i64 48) #10
  %288 = bitcast i8* %287 to %"class.spvtools::opt::analysis::DecorationManager"*
  %289 = getelementptr inbounds i8, i8* %287, i64 32
  %290 = bitcast i8* %289 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %287, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %290, align 4
  %291 = getelementptr inbounds i8, i8* %287, i64 40
  %292 = bitcast i8* %291 to i64*
  store i64 %286, i64* %292, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"* nonnull %288) #11
  %293 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 7
  %294 = ptrtoint i8* %287 to i64
  %295 = getelementptr inbounds %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.122"* %293, i64 0, i32 0, i32 0, i32 0
  %296 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %295, align 8
  %297 = bitcast %"class.std::__1::unique_ptr.122"* %293 to i64*
  store i64 %294, i64* %297, align 8
  %298 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %296, null
  br i1 %298, label %301, label %299

299:                                              ; preds = %283
  %300 = bitcast %"class.std::__1::unique_ptr.122"* %293 to %"struct.std::__1::default_delete.150"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"* %300, %"class.spvtools::opt::analysis::DecorationManager"* nonnull %296) #11
  br label %301

301:                                              ; preds = %299, %283
  %302 = load i32, i32* %280, align 8
  %303 = or i32 %302, 4
  store i32 %303, i32* %280, align 8
  br label %304

304:                                              ; preds = %277, %301
  %305 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %279, i64 0, i32 7, i32 0, i32 0, i32 0
  %306 = load %"class.spvtools::opt::analysis::DecorationManager"*, %"class.spvtools::opt::analysis::DecorationManager"** %305, align 8
  %307 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %16, align 8
  %308 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %307, i64 0, i32 0, i32 0, i32 0, i32 0
  %309 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %308, align 8
  %310 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %309, i64 0, i32 4
  %311 = load i8, i8* %310, align 1, !range !7
  %312 = icmp eq i8 %311, 0
  br i1 %312, label %318, label %313

313:                                              ; preds = %304
  %314 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %309, i64 0, i32 3
  %315 = load i8, i8* %314, align 4, !range !7
  %316 = zext i8 %315 to i32
  %317 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %309, i32 %316) #11
  br label %318

318:                                              ; preds = %304, %313
  %319 = phi i32 [ %317, %313 ], [ 0, %304 ]
  %320 = bitcast %"class.std::__1::vector.1037"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %320) #11
  %321 = call i8* @_Znwm(i64 4) #10
  %322 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %11, i64 0, i32 0, i32 1
  %323 = bitcast %"class.std::__1::vector.1037"* %11 to i8**
  store i8* %321, i8** %323, align 8
  %324 = getelementptr inbounds i8, i8* %321, i64 4
  %325 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %326 = bitcast i32** %325 to i8**
  store i8* %324, i8** %326, align 8
  %327 = bitcast i32** %322 to i64*
  %328 = bitcast i8* %321 to i32*
  store i32 0, i32* %328, align 4
  %329 = ptrtoint i8* %324 to i64
  store i64 %329, i64* %327, align 8
  call void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"* %306, i32 %319, i32 %92, %"class.std::__1::vector.1037"* nonnull dereferenceable(24) %11) #11
  %330 = getelementptr inbounds %"class.std::__1::vector.1037", %"class.std::__1::vector.1037"* %11, i64 0, i32 0, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %336, label %333

333:                                              ; preds = %318
  %334 = ptrtoint i32* %331 to i64
  store i64 %334, i64* %327, align 8
  %335 = bitcast i32* %331 to i8*
  call void @_ZdlPv(i8* %335) #10
  br label %336

336:                                              ; preds = %318, %333
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %320) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #11
  %337 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %108, align 8
  %338 = icmp eq %"class.spvtools::opt::Instruction"* %337, null
  br i1 %338, label %344, label %339

339:                                              ; preds = %336
  %340 = bitcast %"class.spvtools::opt::Instruction"* %337 to void (%"class.spvtools::opt::Instruction"*)***
  %341 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %340, align 8
  %342 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %341, i64 1
  %343 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %342, align 8
  call void %343(%"class.spvtools::opt::Instruction"* nonnull %337) #11
  br label %344

344:                                              ; preds = %336, %339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #11
  br label %345

345:                                              ; preds = %344, %57, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_jRjSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NSA_14default_deleteISC_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #10
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #10
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #11
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret %"class.spvtools::opt::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED2Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  ret void
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager16CloneDecorationsEjjRKNSt3__16vectorI14SpvDecoration_NS3_9allocatorIS5_EEEE(%"class.spvtools::opt::analysis::DecorationManager"*, i32, i32, %"class.std::__1::vector.1037"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools10MakeUniqueINS_3opt11InstructionEJPNS1_9IRContextE6SpvOp_iiSt16initializer_listINS1_7OperandEEEEENSt3__110unique_ptrIT_NS9_14default_deleteISB_EEEEDpOT0_(%"class.spvtools::opt::IRContext"** dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.std::initializer_list"* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = tail call i8* @_Znwm(i64 112) #10
  %8 = bitcast i8* %7 to %"class.spvtools::opt::Instruction"*
  %9 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %0, align 8
  %10 = load i32, i32* %1, align 4
  %11 = load i32, i32* %2, align 4
  %12 = load i32, i32* %3, align 4
  %13 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 0
  %15 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %14, align 8
  %16 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %4, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #11
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %55, label %19

19:                                               ; preds = %5
  %20 = icmp ugt i64 %17, 384307168202282325
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %6 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %17, 48
  %25 = tail call i8* @_Znwm(i64 %24) #10
  %26 = bitcast i8* %25 to %"struct.spvtools::opt::Operand"*
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %28 = bitcast %"struct.spvtools::opt::Operand"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %6 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %26, i64 %17
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %30, %"struct.spvtools::opt::Operand"** %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %15, i64 %17
  br label %33

33:                                               ; preds = %33, %23
  %34 = phi %"struct.spvtools::opt::Operand"* [ %50, %33 ], [ %26, %23 ]
  %35 = phi %"struct.spvtools::opt::Operand"* [ %49, %33 ], [ %15, %23 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  store i32 %38, i32* %36, align 8
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 0, i32 1
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %39, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 1
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 2
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 3, i64 0
  %45 = bitcast i32** %43 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %44, %"struct.std::__1::aligned_storage<4, 4>::type"** %45, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 1, i32 4
  %47 = bitcast %"class.std::__1::unique_ptr.0"* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %39, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %40) #11
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 1
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = icmp eq %"struct.spvtools::opt::Operand"* %49, %32
  br i1 %51, label %52, label %33

52:                                               ; preds = %33
  %53 = bitcast %"struct.spvtools::opt::Operand"** %27 to i64*
  %54 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  store i64 %54, i64* %53, align 8
  br label %55

55:                                               ; preds = %5, %52
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %8, %"class.spvtools::opt::IRContext"* %9, i32 %10, i32 %11, i32 %12, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %56 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %57 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %56, align 8
  %58 = icmp eq %"struct.spvtools::opt::Operand"* %57, null
  br i1 %58, label %89, label %59

59:                                               ; preds = %55
  %60 = bitcast %"struct.spvtools::opt::Operand"* %57 to i8*
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %62 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %61, align 8
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %62, %57
  br i1 %63, label %87, label %64

64:                                               ; preds = %59, %82
  %65 = phi %"struct.spvtools::opt::Operand"* [ %66, %82 ], [ %62, %59 ]
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %65, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %68, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %68, align 8
  %70 = icmp eq %"class.std::__1::vector.3"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = icmp eq i32* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %71
  %76 = ptrtoint i32* %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %69, i64 0, i32 0, i32 1
  %78 = bitcast i32** %77 to i64*
  store i64 %76, i64* %78, align 8
  %79 = bitcast i32* %73 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %75, %71
  %81 = bitcast %"class.std::__1::vector.3"* %69 to i8*
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %64
  %83 = icmp eq %"struct.spvtools::opt::Operand"* %66, %57
  br i1 %83, label %84, label %64

84:                                               ; preds = %82
  %85 = bitcast %"class.std::__1::vector"* %6 to i8**
  %86 = load i8*, i8** %85, align 8
  br label %87

87:                                               ; preds = %84, %59
  %88 = phi i8* [ %86, %84 ], [ %60, %59 ]
  store %"struct.spvtools::opt::Operand"* %57, %"struct.spvtools::opt::Operand"** %61, align 8
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %55, %87
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #11
  ret %"class.spvtools::opt::Instruction"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass13AddReturnFlagEv(%"class.spvtools::opt::MergeReturnPass"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1131", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %6 = alloca %"class.std::__1::vector.3", align 8
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %13 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 3
  %15 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::Instruction"* %15, null
  br i1 %16, label %17, label %384

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %19 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 11
  %21 = load i32, i32* %20, align 8
  %22 = trunc i32 %21 to i16
  %23 = icmp slt i16 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 5
  %26 = tail call i8* @_Znwm(i64 240) #10
  %27 = bitcast i8* %26 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27, %"class.std::__1::function"* dereferenceable(32) %25, %"class.spvtools::opt::IRContext"* %19) #11
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 20
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.480"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %31) #11
  %35 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %31 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %34, %24
  %37 = load i32, i32* %20, align 8
  %38 = or i32 %37, 32768
  store i32 %38, i32* %20, align 8
  %39 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %39, i64 0, i32 11
  %41 = load i32, i32* %40, align 8
  br label %42

42:                                               ; preds = %17, %36
  %43 = phi i32 [ %21, %17 ], [ %41, %36 ]
  %44 = phi %"class.spvtools::opt::IRContext"* [ %19, %17 ], [ %39, %36 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %19, i64 0, i32 20, i32 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 11
  %48 = and i32 %43, 16384
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %64

50:                                               ; preds = %42
  %51 = tail call i8* @_Znwm(i64 136) #10
  %52 = bitcast i8* %51 to %"class.spvtools::opt::analysis::ConstantManager"*
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %52, %"class.spvtools::opt::IRContext"* %44) #11
  %53 = ptrtoint i8* %51 to i64
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 19
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.400"* %54 to i64*
  store i64 %53, i64* %57, align 8
  %58 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %50
  tail call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %56) #11
  %60 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %56 to i8*
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %59, %50
  %62 = load i32, i32* %47, align 8
  %63 = or i32 %62, 16384
  store i32 %63, i32* %47, align 8
  br label %64

64:                                               ; preds = %42, %61
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %44, i64 0, i32 19, i32 0, i32 0, i32 0
  %66 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %65, align 8
  %67 = bitcast %"class.spvtools::opt::analysis::Bool"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 40, i1 false)
  %68 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %5, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %5, i64 0, i32 0, i32 1
  %70 = bitcast %"class.std::__1::vector.463"* %69 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11
  %71 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %5, i64 0, i32 0, i32 2
  store i32 1, i32* %71, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %72 = bitcast %"class.spvtools::opt::analysis::Bool"* %5 to %"class.spvtools::opt::analysis::Type"*
  %73 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %46, %"class.spvtools::opt::analysis::Type"* nonnull %72) #11
  %74 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %46, i32 %73) #11
  %75 = bitcast %"class.spvtools::opt::analysis::Type"* %74 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %76 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %75, align 8
  %77 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %76, i64 8
  %78 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %77, align 8
  %79 = call %"class.spvtools::opt::analysis::Bool"* %78(%"class.spvtools::opt::analysis::Type"* %74) #11
  %80 = bitcast %"class.spvtools::opt::analysis::Bool"* %79 to %"class.spvtools::opt::analysis::Type"*
  %81 = bitcast %"class.std::__1::vector.3"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #11
  %82 = call i8* @_Znwm(i64 4) #10
  %83 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 1
  %84 = bitcast %"class.std::__1::vector.3"* %6 to i8**
  store i8* %82, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %82, i64 4
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast i32** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i32** %83 to i64*
  %89 = bitcast i8* %82 to i32*
  store i32 0, i32* %89, align 4
  %90 = ptrtoint i8* %85 to i64
  store i64 %90, i64* %88, align 8
  %91 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::analysis::Type"* %80, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %6) #11
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %6, i64 0, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = icmp eq i32* %93, null
  br i1 %94, label %98, label %95

95:                                               ; preds = %64
  %96 = ptrtoint i32* %93 to i64
  store i64 %96, i64* %88, align 8
  %97 = bitcast i32* %93 to i8*
  call void @_ZdlPv(i8* %97) #10
  br label %98

98:                                               ; preds = %64, %95
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #11
  %99 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %66, %"class.spvtools::opt::analysis::Constant"* %91, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  %100 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %99, i64 0, i32 4
  %101 = load i8, i8* %100, align 1, !range !7
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %99, i64 0, i32 3
  %105 = load i8, i8* %104, align 4, !range !7
  %106 = zext i8 %105 to i32
  %107 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %99, i32 %106) #11
  br label %108

108:                                              ; preds = %98, %103
  %109 = phi i32 [ %107, %103 ], [ 0, %98 ]
  %110 = call i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"* %46, i32 %73, i32 7) #11
  %111 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %111, i64 0, i32 4, i32 0, i32 0, i32 0
  %113 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %112, align 8
  %114 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %113) #11
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %111, i64 0, i32 5, i32 0, i32 2
  %118 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %117, align 8
  %119 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %118, i64 0, i32 2
  %120 = load i8, i8* %119, align 8, !range !7
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %122, label %128

122:                                              ; preds = %116
  %123 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %123, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %124 = getelementptr inbounds i8, i8* %123, i64 37
  store i8 0, i8* %124, align 1
  %125 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %111, i64 0, i32 5, i32 0, i32 1, i32 0
  %126 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %125, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %111, i64 0, i32 5, i32 0, i32 0
  call void %126(%"union.std::__1::__function::__policy_storage"* %127, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %123) #11
  call void @_ZdlPv(i8* nonnull %123) #10
  br label %128

128:                                              ; preds = %108, %116, %122
  %129 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #11
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %130, align 8
  %131 = call i8* @_Znwm(i64 112) #10
  %132 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %133 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #11
  %134 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %134) #11
  %135 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %135) #11
  %136 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  %137 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %138 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %139 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %140 = bitcast i32** %138 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %139, %"struct.std::__1::aligned_storage<4, 4>::type"** %140, align 8
  %141 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %142 = bitcast %"class.std::__1::unique_ptr.0"* %141 to i64*
  store i64 0, i64* %142, align 8
  %143 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %139 to i32*
  store i64 1, i64* %137, align 8
  store i32 7, i32* %143, align 8
  %144 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 16, i32* %144, align 8
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %146 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %145, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %146, align 8
  %147 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %147, align 8
  %148 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %149 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %150 = bitcast i32** %148 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %149, %"struct.std::__1::aligned_storage<4, 4>::type"** %150, align 8
  %151 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %152 = bitcast %"class.std::__1::unique_ptr.0"* %151 to i64*
  store i64 0, i64* %152, align 8
  %153 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %145, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %154 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %154) #11
  %155 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %156 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %157 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %158 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %159 = bitcast i32** %157 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %158, %"struct.std::__1::aligned_storage<4, 4>::type"** %159, align 8
  %160 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %161 = bitcast %"class.std::__1::unique_ptr.0"* %160 to i64*
  store i64 0, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %158 to i32*
  store i64 1, i64* %156, align 8
  store i32 %109, i32* %162, align 8
  %163 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %163, align 8
  %164 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %165 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %164, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %165, align 8
  %166 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %166, align 8
  %167 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %168 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %169 = bitcast i32** %167 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %168, %"struct.std::__1::aligned_storage<4, 4>::type"** %169, align 8
  %170 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %171 = bitcast %"class.std::__1::unique_ptr.0"* %170 to i64*
  store i64 0, i64* %171, align 8
  %172 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %164, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %173 = call i8* @_Znwm(i64 96) #10
  %174 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %175 = bitcast %"struct.spvtools::opt::Operand"** %174 to i8**
  store i8* %173, i8** %175, align 8
  %176 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %173, i8** %176, align 8
  %177 = getelementptr inbounds i8, i8* %173, i64 96
  %178 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %179 = bitcast %"struct.spvtools::opt::Operand"** %178 to i8**
  store i8* %177, i8** %179, align 8
  %180 = bitcast i8* %173 to i32*
  %181 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %182 = load i32, i32* %181, align 8
  store i32 %182, i32* %180, align 8
  %183 = getelementptr inbounds i8, i8* %173, i64 8
  %184 = bitcast i8* %183 to %"class.spvtools::utils::SmallVector"*
  %185 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %186 = bitcast i8* %183 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %186, align 8
  %187 = getelementptr inbounds i8, i8* %173, i64 16
  %188 = bitcast i8* %187 to i64*
  store i64 0, i64* %188, align 8
  %189 = getelementptr inbounds i8, i8* %173, i64 24
  %190 = getelementptr inbounds i8, i8* %173, i64 32
  %191 = bitcast i8* %189 to i8**
  store i8* %190, i8** %191, align 8
  %192 = getelementptr inbounds i8, i8* %173, i64 40
  %193 = bitcast i8* %192 to i64*
  store i64 0, i64* %193, align 8
  %194 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %184, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %185) #11
  %195 = getelementptr inbounds i8, i8* %173, i64 48
  %196 = bitcast i8* %195 to i32*
  %197 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %198 = load i32, i32* %197, align 8
  store i32 %198, i32* %196, align 8
  %199 = getelementptr inbounds i8, i8* %173, i64 56
  %200 = bitcast i8* %199 to %"class.spvtools::utils::SmallVector"*
  %201 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %202 = bitcast i8* %199 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %202, align 8
  %203 = getelementptr inbounds i8, i8* %173, i64 64
  %204 = bitcast i8* %203 to i64*
  store i64 0, i64* %204, align 8
  %205 = getelementptr inbounds i8, i8* %173, i64 72
  %206 = getelementptr inbounds i8, i8* %173, i64 80
  %207 = bitcast i8* %205 to i8**
  store i8* %206, i8** %207, align 8
  %208 = getelementptr inbounds i8, i8* %173, i64 88
  %209 = bitcast i8* %208 to i64*
  store i64 0, i64* %209, align 8
  %210 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %200, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %201) #11
  %211 = getelementptr inbounds i8, i8* %173, i64 96
  %212 = bitcast i8* %131 to %"class.spvtools::opt::Instruction"*
  %213 = bitcast %"struct.spvtools::opt::Operand"** %174 to i64*
  %214 = ptrtoint i8* %211 to i64
  store i64 %214, i64* %213, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %212, %"class.spvtools::opt::IRContext"* %132, i32 59, i32 %110, i32 %114, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #11
  %215 = ptrtoint i8* %131 to i64
  %216 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %215, i64* %216, align 8
  %217 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %218 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %217, align 8
  %219 = icmp eq %"struct.spvtools::opt::Operand"* %218, null
  br i1 %219, label %248, label %220

220:                                              ; preds = %128
  %221 = bitcast %"struct.spvtools::opt::Operand"* %218 to i8*
  %222 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %174, align 8
  %223 = icmp eq %"struct.spvtools::opt::Operand"* %222, %218
  br i1 %223, label %246, label %224

224:                                              ; preds = %220, %242
  %225 = phi %"struct.spvtools::opt::Operand"* [ %226, %242 ], [ %222, %220 ]
  %226 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %225, i64 -1
  %227 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %225, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %227, align 8
  %228 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %225, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %229 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %228, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %228, align 8
  %230 = icmp eq %"class.std::__1::vector.3"* %229, null
  br i1 %230, label %242, label %231

231:                                              ; preds = %224
  %232 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %229, i64 0, i32 0, i32 0
  %233 = load i32*, i32** %232, align 8
  %234 = icmp eq i32* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %231
  %236 = ptrtoint i32* %233 to i64
  %237 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %229, i64 0, i32 0, i32 1
  %238 = bitcast i32** %237 to i64*
  store i64 %236, i64* %238, align 8
  %239 = bitcast i32* %233 to i8*
  call void @_ZdlPv(i8* %239) #10
  br label %240

240:                                              ; preds = %235, %231
  %241 = bitcast %"class.std::__1::vector.3"* %229 to i8*
  call void @_ZdlPv(i8* %241) #10
  br label %242

242:                                              ; preds = %240, %224
  %243 = icmp eq %"struct.spvtools::opt::Operand"* %226, %218
  br i1 %243, label %244, label %224

244:                                              ; preds = %242
  %245 = load i8*, i8** %176, align 8
  br label %246

246:                                              ; preds = %244, %220
  %247 = phi i8* [ %245, %244 ], [ %221, %220 ]
  store %"struct.spvtools::opt::Operand"* %218, %"struct.spvtools::opt::Operand"** %174, align 8
  call void @_ZdlPv(i8* %247) #10
  br label %248

248:                                              ; preds = %128, %246
  %249 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %249, align 8
  %250 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %251 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %250, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %250, align 8
  %252 = icmp eq %"class.std::__1::vector.3"* %251, null
  br i1 %252, label %264, label %253

253:                                              ; preds = %248
  %254 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %251, i64 0, i32 0, i32 0
  %255 = load i32*, i32** %254, align 8
  %256 = icmp eq i32* %255, null
  br i1 %256, label %262, label %257

257:                                              ; preds = %253
  %258 = ptrtoint i32* %255 to i64
  %259 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %251, i64 0, i32 0, i32 1
  %260 = bitcast i32** %259 to i64*
  store i64 %258, i64* %260, align 8
  %261 = bitcast i32* %255 to i8*
  call void @_ZdlPv(i8* %261) #10
  br label %262

262:                                              ; preds = %257, %253
  %263 = bitcast %"class.std::__1::vector.3"* %251 to i8*
  call void @_ZdlPv(i8* %263) #10
  br label %264

264:                                              ; preds = %248, %262
  %265 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %265, align 8
  %266 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %267 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %266, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %266, align 8
  %268 = icmp eq %"class.std::__1::vector.3"* %267, null
  br i1 %268, label %396, label %385

269:                                              ; preds = %396
  %270 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %398, i64 0, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = icmp eq i32* %271, null
  br i1 %272, label %278, label %273

273:                                              ; preds = %269
  %274 = ptrtoint i32* %271 to i64
  %275 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %398, i64 0, i32 0, i32 1
  %276 = bitcast i32** %275 to i64*
  store i64 %274, i64* %276, align 8
  %277 = bitcast i32* %271 to i8*
  call void @_ZdlPv(i8* %277) #10
  br label %278

278:                                              ; preds = %273, %269
  %279 = bitcast %"class.std::__1::vector.3"* %398 to i8*
  call void @_ZdlPv(i8* %279) #10
  br label %280

280:                                              ; preds = %396, %278
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %154) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %136, align 8
  %281 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %282 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %281, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %281, align 8
  %283 = icmp eq %"class.std::__1::vector.3"* %282, null
  br i1 %283, label %295, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %282, i64 0, i32 0, i32 0
  %286 = load i32*, i32** %285, align 8
  %287 = icmp eq i32* %286, null
  br i1 %287, label %293, label %288

288:                                              ; preds = %284
  %289 = ptrtoint i32* %286 to i64
  %290 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %282, i64 0, i32 0, i32 1
  %291 = bitcast i32** %290 to i64*
  store i64 %289, i64* %291, align 8
  %292 = bitcast i32* %286 to i8*
  call void @_ZdlPv(i8* %292) #10
  br label %293

293:                                              ; preds = %288, %284
  %294 = bitcast %"class.std::__1::vector.3"* %282 to i8*
  call void @_ZdlPv(i8* %294) #10
  br label %295

295:                                              ; preds = %280, %293
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %135) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %134) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #11
  %296 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296) #11
  %297 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %12, i64 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %297, align 8
  %298 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %299 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %298, align 8
  %300 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %299, i64 0, i32 3, i32 0, i32 0
  %301 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %300, align 8
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %301, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %302, align 8
  %304 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %303, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %305 = bitcast %"class.spvtools::opt::Instruction"** %304 to i64*
  %306 = load i64, i64* %305, align 8, !noalias !59
  %307 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %12 to i64*
  store i64 %306, i64* %307, align 8, !alias.scope !66
  %308 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #11
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %13, %"class.spvtools::opt::InstructionList::iterator"* nonnull %12, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #11
  %309 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %298, align 8
  %310 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %309, i64 0, i32 3, i32 0, i32 0
  %311 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %310, align 8
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %311, i64 0, i32 0, i32 0, i32 0
  %313 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %312, align 8
  %314 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %313, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %315 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %314, align 8, !noalias !67
  store %"class.spvtools::opt::Instruction"* %315, %"class.spvtools::opt::Instruction"** %14, align 8
  %316 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %317 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 11
  %318 = load i32, i32* %317, align 8
  %319 = and i32 %318, 1
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %295
  %322 = ptrtoint %"class.spvtools::opt::Instruction"* %315 to i64
  br label %331

323:                                              ; preds = %295
  %324 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %316, i64 0, i32 6, i32 0, i32 0, i32 0
  %325 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %324, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %325, %"class.spvtools::opt::Instruction"* %315) #11
  %326 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %18, align 8
  %327 = bitcast %"class.spvtools::opt::Instruction"** %14 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %326, i64 0, i32 11
  %330 = load i32, i32* %329, align 8
  br label %331

331:                                              ; preds = %321, %323
  %332 = phi i32 [ %318, %321 ], [ %330, %323 ]
  %333 = phi i64 [ %322, %321 ], [ %328, %323 ]
  %334 = phi %"class.spvtools::opt::IRContext"* [ %316, %321 ], [ %326, %323 ]
  %335 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335)
  %336 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  store i64 %333, i64* %336, align 8
  %337 = and i32 %332, 2
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %348, label %339

339:                                              ; preds = %331
  %340 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %334, i64 0, i32 9, i32 0
  %341 = bitcast %"class.std::__1::tuple"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %341) #11
  %342 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %342, align 8
  %343 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %343) #11
  %344 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %340, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %3) #11
  %345 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %344, 0
  %346 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %345, i64 3
  %347 = bitcast %"struct.std::__1::__hash_node_base.178"* %346 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %343) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %341) #11
  store %"class.spvtools::opt::BasicBlock"* %313, %"class.spvtools::opt::BasicBlock"** %347, align 8
  br label %348

348:                                              ; preds = %331, %339
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296) #11
  %349 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %130, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %130, align 8
  %350 = icmp eq %"class.spvtools::opt::Instruction"* %349, null
  br i1 %350, label %356, label %351

351:                                              ; preds = %348
  %352 = bitcast %"class.spvtools::opt::Instruction"* %349 to void (%"class.spvtools::opt::Instruction"*)***
  %353 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %352, align 8
  %354 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %353, i64 1
  %355 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %354, align 8
  call void %355(%"class.spvtools::opt::Instruction"* nonnull %349) #11
  br label %356

356:                                              ; preds = %348, %351
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %68, align 8
  %357 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %69, i64 0, i32 0, i32 0
  %358 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %357, align 8
  %359 = icmp eq %"class.std::__1::vector.3"* %358, null
  br i1 %359, label %383, label %360

360:                                              ; preds = %356
  %361 = bitcast %"class.std::__1::vector.3"* %358 to i8*
  %362 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %5, i64 0, i32 0, i32 1, i32 0, i32 1
  %363 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %362, align 8
  %364 = icmp eq %"class.std::__1::vector.3"* %363, %358
  br i1 %364, label %381, label %365

365:                                              ; preds = %360, %376
  %366 = phi %"class.std::__1::vector.3"* [ %367, %376 ], [ %363, %360 ]
  %367 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %366, i64 -1
  %368 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %367, i64 0, i32 0, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %376, label %371

371:                                              ; preds = %365
  %372 = ptrtoint i32* %369 to i64
  %373 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %366, i64 -1, i32 0, i32 1
  %374 = bitcast i32** %373 to i64*
  store i64 %372, i64* %374, align 8
  %375 = bitcast i32* %369 to i8*
  call void @_ZdlPv(i8* %375) #10
  br label %376

376:                                              ; preds = %371, %365
  %377 = icmp eq %"class.std::__1::vector.3"* %367, %358
  br i1 %377, label %378, label %365

378:                                              ; preds = %376
  %379 = bitcast %"class.std::__1::vector.463"* %69 to i8**
  %380 = load i8*, i8** %379, align 8
  br label %381

381:                                              ; preds = %378, %360
  %382 = phi i8* [ %380, %378 ], [ %361, %360 ]
  store %"class.std::__1::vector.3"* %358, %"class.std::__1::vector.3"** %362, align 8
  call void @_ZdlPv(i8* %382) #10
  br label %383

383:                                              ; preds = %356, %381
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #11
  br label %384

384:                                              ; preds = %1, %383
  ret void

385:                                              ; preds = %264
  %386 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %267, i64 0, i32 0, i32 0
  %387 = load i32*, i32** %386, align 8
  %388 = icmp eq i32* %387, null
  br i1 %388, label %394, label %389

389:                                              ; preds = %385
  %390 = ptrtoint i32* %387 to i64
  %391 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %267, i64 0, i32 0, i32 1
  %392 = bitcast i32** %391 to i64*
  store i64 %390, i64* %392, align 8
  %393 = bitcast i32* %387 to i8*
  call void @_ZdlPv(i8* %393) #10
  br label %394

394:                                              ; preds = %389, %385
  %395 = bitcast %"class.std::__1::vector.3"* %267 to i8*
  call void @_ZdlPv(i8* %395) #10
  br label %396

396:                                              ; preds = %394, %264
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %155, align 8
  %397 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %398 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %397, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %397, align 8
  %399 = icmp eq %"class.std::__1::vector.3"* %398, null
  br i1 %399, label %280, label %269
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass13BranchToBlockEPNS0_10BasicBlockEj(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::tuple.1328", align 8
  %5 = alloca %"class.std::__1::tuple.1131", align 1
  %6 = alloca %"class.std::__1::function.1167", align 8
  %7 = alloca %"class.std::__1::function.1047", align 8
  %8 = alloca %"class.std::__1::tuple.1157", align 8
  %9 = alloca %"class.std::__1::tuple.1131", align 1
  %10 = alloca i32, align 4
  %11 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %16 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8, !noalias !74
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %16, i64 0, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = add i32 %18, -253
  %20 = icmp ult i32 %19, 2
  br i1 %20, label %21, label %22

21:                                               ; preds = %3
  tail call void @_ZN8spvtools3opt15MergeReturnPass14RecordReturnedEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %1)
  tail call void @_ZN8spvtools3opt15MergeReturnPass17RecordReturnValueEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %1)
  br label %22

22:                                               ; preds = %3, %21
  %23 = bitcast %"class.spvtools::opt::BasicBlock"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %25 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %26 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %25, i32 %2)
  store %"class.spvtools::opt::BasicBlock"* %26, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %27 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %26) #11
  %28 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %22
  %30 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %31 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %30, i64 0, i32 11
  %32 = load i32, i32* %31, align 8
  %33 = and i32 %32, 16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %51

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %30, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %36, align 8
  %38 = tail call i8* @_Znwm(i64 400) #10
  %39 = bitcast i8* %38 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %39, %"class.spvtools::opt::Module"* %37) #11
  %40 = ptrtoint i8* %38 to i64
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %30, i64 0, i32 15
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %42, align 8
  %44 = bitcast %"class.std::__1::unique_ptr.273"* %41 to i64*
  store i64 %40, i64* %44, align 8
  %45 = icmp eq %"class.spvtools::opt::CFG"* %43, null
  br i1 %45, label %48, label %46

46:                                               ; preds = %35
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %43) #11
  %47 = bitcast %"class.spvtools::opt::CFG"* %43 to i8*
  tail call void @_ZdlPv(i8* %47) #10
  br label %48

48:                                               ; preds = %46, %35
  %49 = load i32, i32* %31, align 8
  %50 = or i32 %49, 16
  store i32 %50, i32* %31, align 8
  br label %51

51:                                               ; preds = %29, %48
  %52 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %30, i64 0, i32 15, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %52, align 8
  %54 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %53, %"class.spvtools::opt::BasicBlock"* %26) #11
  br label %55

55:                                               ; preds = %22, %51
  %56 = bitcast %"class.std::__1::function.1047"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %56) #11
  %57 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 1, i32 0
  %58 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass14UpdatePhiNodesEPNS3_10BasicBlockESC_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %57, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass14UpdatePhiNodesEPNS5_10BasicBlockES8_E3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %58, align 8
  %59 = bitcast %"class.std::__1::function.1047"* %7 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 0, i32 1
  %61 = bitcast [8 x i8]* %60 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %61, align 8
  %62 = bitcast %"class.std::__1::function.1167"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %62) #11
  %63 = ptrtoint %"class.std::__1::function.1047"* %7 to i64
  %64 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %64, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %65, align 8
  %66 = bitcast %"class.std::__1::function.1167"* %6 to i64*
  store i64 %63, i64* %66, align 8
  %67 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %26, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %68, i64 0, i32 0, i32 3
  %70 = load i8, i8* %69, align 8, !range !7
  %71 = icmp ne i8 %70, 0
  %72 = icmp eq %"class.spvtools::opt::Instruction"* %68, null
  %73 = or i1 %72, %71
  br i1 %73, label %94, label %74

74:                                               ; preds = %55
  %75 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 0
  br label %76

76:                                               ; preds = %85, %74
  %77 = phi %"class.spvtools::opt::Instruction"* [ %89, %85 ], [ %68, %74 ]
  %78 = icmp eq %"class.spvtools::opt::Instruction"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 0, i32 1
  %81 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %80, align 8
  %82 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %77, i64 0, i32 2
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 245
  br i1 %84, label %85, label %92

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %81, i64 0, i32 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !7
  %88 = icmp eq i8 %87, 0
  %89 = select i1 %88, %"class.spvtools::opt::Instruction"* %81, %"class.spvtools::opt::Instruction"* null
  %90 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %64, align 8
  %91 = call zeroext i1 %90(%"union.std::__1::__function::__policy_storage"* nonnull %75, %"class.spvtools::opt::Instruction"* nonnull %77) #11
  br i1 %91, label %76, label %92

92:                                               ; preds = %85, %79, %76
  %93 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %65, align 8
  br label %94

94:                                               ; preds = %92, %55
  %95 = phi %"struct.std::__1::__function::__policy"* [ %93, %92 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %55 ]
  %96 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %95, i64 0, i32 1
  %97 = load void (i8*)*, void (i8*)** %96, align 8
  %98 = icmp eq void (i8*)* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 0, i32 0
  %101 = load i8*, i8** %100, align 8
  call void %97(i8* %101) #11
  br label %102

102:                                              ; preds = %99, %94
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %62) #11
  %103 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %58, align 8
  %104 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %103, i64 0, i32 1
  %105 = load void (i8*)*, void (i8*)** %104, align 8
  %106 = icmp eq void (i8*)* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 0, i32 0
  %109 = load i8*, i8** %108, align 8
  call void %105(i8* %109) #11
  br label %110

110:                                              ; preds = %102, %107
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %56) #11
  %111 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8, !noalias !77
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 2
  store i32 249, i32* %112, align 8
  %113 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %113) #11
  %114 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %114) #11
  %115 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %117 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %118 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %120 = bitcast i32** %118 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %119, %"struct.std::__1::aligned_storage<4, 4>::type"** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %122 = bitcast %"class.std::__1::unique_ptr.0"* %121 to i64*
  store i64 0, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %119 to i32*
  store i64 1, i64* %117, align 8
  store i32 %2, i32* %123, align 8
  %124 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  store i32 1, i32* %124, align 8
  %125 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %126 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %125, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %127, align 8
  %128 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 2
  %129 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 3, i64 0
  %130 = bitcast i32** %128 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %129, %"struct.std::__1::aligned_storage<4, 4>::type"** %130, align 8
  %131 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4
  %132 = bitcast %"class.std::__1::unique_ptr.0"* %131 to i64*
  store i64 0, i64* %132, align 8
  %133 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %125, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #11
  %134 = call i8* @_Znwm(i64 48) #10
  %135 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %136 = bitcast %"struct.spvtools::opt::Operand"** %135 to i8**
  store i8* %134, i8** %136, align 8
  %137 = bitcast %"class.std::__1::vector"* %12 to i8**
  store i8* %134, i8** %137, align 8
  %138 = getelementptr inbounds i8, i8* %134, i64 48
  %139 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %140 = bitcast %"struct.spvtools::opt::Operand"** %139 to i8**
  store i8* %138, i8** %140, align 8
  %141 = bitcast i8* %134 to i32*
  %142 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  %143 = load i32, i32* %142, align 8
  store i32 %143, i32* %141, align 8
  %144 = getelementptr inbounds i8, i8* %134, i64 8
  %145 = bitcast i8* %144 to %"class.spvtools::utils::SmallVector"*
  %146 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %147 = bitcast i8* %144 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %148 = getelementptr inbounds i8, i8* %134, i64 16
  %149 = bitcast i8* %148 to i64*
  store i64 0, i64* %149, align 8
  %150 = getelementptr inbounds i8, i8* %134, i64 24
  %151 = getelementptr inbounds i8, i8* %134, i64 32
  %152 = bitcast i8* %150 to i8**
  store i8* %151, i8** %152, align 8
  %153 = getelementptr inbounds i8, i8* %134, i64 40
  %154 = bitcast i8* %153 to i64*
  store i64 0, i64* %154, align 8
  %155 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %145, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %146) #11
  %156 = getelementptr inbounds i8, i8* %134, i64 48
  %157 = bitcast %"struct.spvtools::opt::Operand"** %135 to i64*
  %158 = ptrtoint i8* %156 to i64
  store i64 %158, i64* %157, align 8
  call void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"* %111, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #11
  %159 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %160 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %159, align 8
  %161 = icmp eq %"struct.spvtools::opt::Operand"* %160, null
  br i1 %161, label %190, label %162

162:                                              ; preds = %110
  %163 = bitcast %"struct.spvtools::opt::Operand"* %160 to i8*
  %164 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %135, align 8
  %165 = icmp eq %"struct.spvtools::opt::Operand"* %164, %160
  br i1 %165, label %188, label %166

166:                                              ; preds = %162, %184
  %167 = phi %"struct.spvtools::opt::Operand"* [ %168, %184 ], [ %164, %162 ]
  %168 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1
  %169 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %169, align 8
  %170 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %167, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %171 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %170, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %170, align 8
  %172 = icmp eq %"class.std::__1::vector.3"* %171, null
  br i1 %172, label %184, label %173

173:                                              ; preds = %166
  %174 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 0
  %175 = load i32*, i32** %174, align 8
  %176 = icmp eq i32* %175, null
  br i1 %176, label %182, label %177

177:                                              ; preds = %173
  %178 = ptrtoint i32* %175 to i64
  %179 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %171, i64 0, i32 0, i32 1
  %180 = bitcast i32** %179 to i64*
  store i64 %178, i64* %180, align 8
  %181 = bitcast i32* %175 to i8*
  call void @_ZdlPv(i8* %181) #10
  br label %182

182:                                              ; preds = %177, %173
  %183 = bitcast %"class.std::__1::vector.3"* %171 to i8*
  call void @_ZdlPv(i8* %183) #10
  br label %184

184:                                              ; preds = %182, %166
  %185 = icmp eq %"struct.spvtools::opt::Operand"* %168, %160
  br i1 %185, label %186, label %166

186:                                              ; preds = %184
  %187 = load i8*, i8** %137, align 8
  br label %188

188:                                              ; preds = %186, %162
  %189 = phi i8* [ %187, %186 ], [ %163, %162 ]
  store %"struct.spvtools::opt::Operand"* %160, %"struct.spvtools::opt::Operand"** %135, align 8
  call void @_ZdlPv(i8* %189) #10
  br label %190

190:                                              ; preds = %110, %188
  %191 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %191, align 8
  %192 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %193 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %192, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %192, align 8
  %194 = icmp eq %"class.std::__1::vector.3"* %193, null
  br i1 %194, label %206, label %195

195:                                              ; preds = %190
  %196 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 0
  %197 = load i32*, i32** %196, align 8
  %198 = icmp eq i32* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = ptrtoint i32* %197 to i64
  %201 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %193, i64 0, i32 0, i32 1
  %202 = bitcast i32** %201 to i64*
  store i64 %200, i64* %202, align 8
  %203 = bitcast i32* %197 to i8*
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %199, %195
  %205 = bitcast %"class.std::__1::vector.3"* %193 to i8*
  call void @_ZdlPv(i8* %205) #10
  br label %206

206:                                              ; preds = %190, %204
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %116, align 8
  %207 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %208 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %207, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %207, align 8
  %209 = icmp eq %"class.std::__1::vector.3"* %208, null
  br i1 %209, label %221, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %208, i64 0, i32 0, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = icmp eq i32* %212, null
  br i1 %213, label %219, label %214

214:                                              ; preds = %210
  %215 = ptrtoint i32* %212 to i64
  %216 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %208, i64 0, i32 0, i32 1
  %217 = bitcast i32** %216 to i64*
  store i64 %215, i64* %217, align 8
  %218 = bitcast i32* %212 to i8*
  call void @_ZdlPv(i8* %218) #10
  br label %219

219:                                              ; preds = %214, %210
  %220 = bitcast %"class.std::__1::vector.3"* %208 to i8*
  call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %206, %219
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %114) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %113) #11
  %222 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %223 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 11
  %224 = load i32, i32* %223, align 8
  %225 = and i32 %224, 1
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %251

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 4, i32 0, i32 0, i32 0
  %229 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %228, align 8
  %230 = call i8* @_Znwm(i64 104) #10
  %231 = bitcast i8* %230 to %"class.spvtools::opt::analysis::DefUseManager"*
  %232 = getelementptr inbounds i8, i8* %230, i64 32
  %233 = bitcast i8* %232 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %230, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %233, align 4
  %234 = getelementptr inbounds i8, i8* %230, i64 48
  %235 = getelementptr inbounds i8, i8* %230, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 16, i1 false) #11
  %236 = bitcast i8* %235 to i8**
  store i8* %234, i8** %236, align 8
  %237 = getelementptr inbounds i8, i8* %230, i64 64
  %238 = getelementptr inbounds i8, i8* %230, i64 96
  %239 = bitcast i8* %238 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %237, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %239, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %231, %"class.spvtools::opt::Module"* %229) #11
  %240 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 6
  %241 = ptrtoint i8* %230 to i64
  %242 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %240, i64 0, i32 0, i32 0, i32 0
  %243 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %242, align 8
  %244 = bitcast %"class.std::__1::unique_ptr.62"* %240 to i64*
  store i64 %241, i64* %244, align 8
  %245 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %243, null
  br i1 %245, label %248, label %246

246:                                              ; preds = %227
  %247 = bitcast %"class.std::__1::unique_ptr.62"* %240 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %247, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %243) #11
  br label %248

248:                                              ; preds = %246, %227
  %249 = load i32, i32* %223, align 8
  %250 = or i32 %249, 1
  store i32 %250, i32* %223, align 8
  br label %251

251:                                              ; preds = %221, %248
  %252 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %222, i64 0, i32 6, i32 0, i32 0, i32 0
  %253 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %252, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %253, %"class.spvtools::opt::Instruction"* %111) #11
  %254 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 8, i32 0
  %255 = bitcast %"class.std::__1::tuple.1328"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #11
  %256 = getelementptr inbounds %"class.std::__1::tuple.1328", %"class.std::__1::tuple.1328"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %11, %"class.spvtools::opt::BasicBlock"*** %256, align 8
  %257 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %257) #11
  %258 = call { %"struct.std::__1::__hash_node_base.972"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.968"* %254, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %11, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1328"* nonnull dereferenceable(8) %4, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %5) #11
  %259 = extractvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } %258, 0
  %260 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %259, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %257) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #11
  %261 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %262 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %261, align 8
  %263 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %262, i64 0, i32 4
  %264 = load i8, i8* %263, align 1, !range !7
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %271, label %266

266:                                              ; preds = %251
  %267 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %262, i64 0, i32 3
  %268 = load i8, i8* %267, align 4, !range !7
  %269 = zext i8 %268 to i32
  %270 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %262, i32 %269) #11
  br label %271

271:                                              ; preds = %251, %266
  %272 = phi i32 [ %270, %266 ], [ 0, %251 ]
  %273 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %259, i64 4
  %274 = bitcast %"struct.std::__1::__hash_node_base.972"* %273 to %"class.std::__1::__tree_node"**
  %275 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %274, align 8
  %276 = icmp eq %"class.std::__1::__tree_node"* %275, null
  br i1 %276, label %305, label %277

277:                                              ; preds = %271
  %278 = bitcast %"struct.std::__1::__hash_node_base.972"* %273 to %"class.std::__1::__tree_node_base"**
  br label %279

279:                                              ; preds = %301, %277
  %280 = phi %"class.std::__1::__tree_node"* [ %304, %301 ], [ %275, %277 ]
  %281 = phi %"class.std::__1::__tree_node_base"** [ %303, %301 ], [ %278, %277 ]
  %282 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 1
  %283 = load i32, i32* %282, align 4
  %284 = icmp ult i32 %272, %283
  br i1 %284, label %285, label %291

285:                                              ; preds = %279
  %286 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %289, label %301

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 0
  br label %308

291:                                              ; preds = %279
  %292 = icmp ult i32 %283, %272
  br i1 %292, label %293, label %299

293:                                              ; preds = %291
  %294 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 1
  %295 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %294, align 8
  %296 = icmp eq %"class.std::__1::__tree_node_base"* %295, null
  br i1 %296, label %297, label %301

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 0
  br label %308

299:                                              ; preds = %291
  %300 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %280, i64 0, i32 0, i32 0
  br label %308

301:                                              ; preds = %293, %285
  %302 = phi %"class.std::__1::__tree_node_base"* [ %287, %285 ], [ %295, %293 ]
  %303 = phi %"class.std::__1::__tree_node_base"** [ %286, %285 ], [ %294, %293 ]
  %304 = bitcast %"class.std::__1::__tree_node_base"* %302 to %"class.std::__1::__tree_node"*
  br label %279

305:                                              ; preds = %271
  %306 = bitcast %"struct.std::__1::__hash_node_base.972"* %273 to %"class.std::__1::__tree_end_node"*
  %307 = bitcast %"struct.std::__1::__hash_node_base.972"* %273 to %"class.std::__1::__tree_node_base"**
  br label %308

308:                                              ; preds = %305, %299, %297, %289
  %309 = phi %"class.std::__1::__tree_end_node"* [ %306, %305 ], [ %290, %289 ], [ %298, %297 ], [ %300, %299 ]
  %310 = phi %"class.std::__1::__tree_node_base"** [ %307, %305 ], [ %286, %289 ], [ %294, %297 ], [ %281, %299 ]
  %311 = bitcast %"class.std::__1::__tree_node_base"** %310 to %"class.std::__1::__tree_node"**
  %312 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %311, align 8
  %313 = icmp eq %"class.std::__1::__tree_node"* %312, null
  br i1 %313, label %314, label %339

314:                                              ; preds = %308
  %315 = call i8* @_Znwm(i64 32) #10, !noalias !80
  %316 = getelementptr inbounds i8, i8* %315, i64 28
  %317 = bitcast i8* %316 to i32*
  store i32 %272, i32* %317, align 4, !noalias !80
  %318 = bitcast i8* %315 to %"class.std::__1::__tree_node_base"*
  %319 = getelementptr inbounds i8, i8* %315, i64 16
  %320 = bitcast i8* %319 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %315, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %309, %"class.std::__1::__tree_end_node"** %320, align 8
  %321 = bitcast %"class.std::__1::__tree_node_base"** %310 to i8**
  store i8* %315, i8** %321, align 8
  %322 = bitcast %"struct.std::__1::__hash_node_base.972"* %260 to %"class.std::__1::__tree_end_node"**
  %323 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %322, align 8
  %324 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %323, i64 0, i32 0
  %325 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %324, align 8
  %326 = icmp eq %"class.std::__1::__tree_node_base"* %325, null
  br i1 %326, label %331, label %327

327:                                              ; preds = %314
  %328 = ptrtoint %"class.std::__1::__tree_node_base"* %325 to i64
  %329 = bitcast %"struct.std::__1::__hash_node_base.972"* %260 to i64*
  store i64 %328, i64* %329, align 8
  %330 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  br label %331

331:                                              ; preds = %327, %314
  %332 = phi %"class.std::__1::__tree_node_base"* [ %318, %314 ], [ %330, %327 ]
  %333 = bitcast %"struct.std::__1::__hash_node_base.972"* %273 to %"class.std::__1::__tree_node_base"**
  %334 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %333, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %334, %"class.std::__1::__tree_node_base"* %332) #11
  %335 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %259, i64 5
  %336 = bitcast %"struct.std::__1::__hash_node_base.972"* %335 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = add i64 %337, 1
  store i64 %338, i64* %336, align 8
  br label %339

339:                                              ; preds = %308, %331
  %340 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %24, align 8
  %341 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 11
  %342 = load i32, i32* %341, align 8
  %343 = and i32 %342, 16
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %361

345:                                              ; preds = %339
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 4, i32 0, i32 0, i32 0
  %347 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %346, align 8
  %348 = call i8* @_Znwm(i64 400) #10
  %349 = bitcast i8* %348 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %349, %"class.spvtools::opt::Module"* %347) #11
  %350 = ptrtoint i8* %348 to i64
  %351 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 15
  %352 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %352, align 8
  %354 = bitcast %"class.std::__1::unique_ptr.273"* %351 to i64*
  store i64 %350, i64* %354, align 8
  %355 = icmp eq %"class.spvtools::opt::CFG"* %353, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %345
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %353) #11
  %357 = bitcast %"class.spvtools::opt::CFG"* %353 to i8*
  call void @_ZdlPv(i8* %357) #10
  br label %358

358:                                              ; preds = %356, %345
  %359 = load i32, i32* %341, align 8
  %360 = or i32 %359, 16
  store i32 %360, i32* %341, align 8
  br label %361

361:                                              ; preds = %339, %358
  %362 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %340, i64 0, i32 15, i32 0, i32 0, i32 0
  %363 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %362, align 8
  %364 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %261, align 8
  %365 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %364, i64 0, i32 4
  %366 = load i8, i8* %365, align 1, !range !7
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %373, label %368

368:                                              ; preds = %361
  %369 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %364, i64 0, i32 3
  %370 = load i8, i8* %369, align 4, !range !7
  %371 = zext i8 %370 to i32
  %372 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %364, i32 %371) #11
  br label %373

373:                                              ; preds = %361, %368
  %374 = phi i32 [ %372, %368 ], [ 0, %361 ]
  %375 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %375)
  store i32 %2, i32* %10, align 4
  %376 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %363, i64 0, i32 4, i32 0
  %377 = bitcast %"class.std::__1::tuple.1157"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %377) #11
  %378 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %8, i64 0, i32 0, i32 0, i32 0
  store i32* %10, i32** %378, align 8
  %379 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %379) #11
  %380 = call { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"* %376, i32* nonnull dereferenceable(4) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1157"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %9) #11
  %381 = extractvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %380, 0
  %382 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %381, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %379) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %377) #11
  %383 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %381, i64 4
  %384 = bitcast %"struct.std::__1::__hash_node_base.309"* %383 to i32**
  %385 = load i32*, i32** %384, align 8
  %386 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %381, i64 5
  %387 = bitcast %"struct.std::__1::__hash_node_base.309"* %386 to i32**
  %388 = load i32*, i32** %387, align 8
  %389 = icmp eq i32* %385, %388
  %390 = ptrtoint i32* %388 to i64
  br i1 %389, label %395, label %391

391:                                              ; preds = %373
  store i32 %374, i32* %385, align 4
  %392 = getelementptr inbounds i32, i32* %385, i64 1
  %393 = ptrtoint i32* %392 to i64
  %394 = bitcast %"struct.std::__1::__hash_node_base.309"* %383 to i64*
  store i64 %393, i64* %394, align 8
  br label %451

395:                                              ; preds = %373
  %396 = ptrtoint i32* %385 to i64
  %397 = bitcast %"struct.std::__1::__hash_node_base.309"* %383 to i64*
  %398 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to i64*
  %399 = load i64, i64* %398, align 8
  %400 = sub i64 %396, %399
  %401 = ashr exact i64 %400, 2
  %402 = add nsw i64 %401, 1
  %403 = icmp ugt i64 %402, 4611686018427387903
  br i1 %403, label %404, label %406

404:                                              ; preds = %395
  %405 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %405) #12
  unreachable

406:                                              ; preds = %395
  %407 = bitcast %"struct.std::__1::__hash_node_base.309"* %386 to i64*
  %408 = sub i64 %390, %399
  %409 = ashr exact i64 %408, 2
  %410 = icmp ult i64 %409, 2305843009213693951
  br i1 %410, label %411, label %419

411:                                              ; preds = %406
  %412 = ashr exact i64 %408, 1
  %413 = icmp ult i64 %412, %402
  %414 = select i1 %413, i64 %402, i64 %412
  %415 = icmp eq i64 %414, 0
  br i1 %415, label %424, label %416

416:                                              ; preds = %411
  %417 = icmp ugt i64 %414, 4611686018427387903
  br i1 %417, label %418, label %419

418:                                              ; preds = %416
  call void @abort() #12
  unreachable

419:                                              ; preds = %416, %406
  %420 = phi i64 [ %414, %416 ], [ 4611686018427387903, %406 ]
  %421 = shl i64 %420, 2
  %422 = call i8* @_Znwm(i64 %421) #10
  %423 = bitcast i8* %422 to i32*
  br label %424

424:                                              ; preds = %419, %411
  %425 = phi i64 [ %420, %419 ], [ 0, %411 ]
  %426 = phi i32* [ %423, %419 ], [ null, %411 ]
  %427 = getelementptr inbounds i32, i32* %426, i64 %401
  %428 = getelementptr inbounds i32, i32* %426, i64 %425
  %429 = ptrtoint i32* %428 to i64
  store i32 %374, i32* %427, align 4
  %430 = getelementptr inbounds i32, i32* %427, i64 1
  %431 = ptrtoint i32* %430 to i64
  %432 = bitcast %"struct.std::__1::__hash_node_base.309"* %382 to i32**
  %433 = load i32*, i32** %432, align 8
  %434 = load i64, i64* %397, align 8
  %435 = ptrtoint i32* %433 to i64
  %436 = sub i64 %434, %435
  %437 = ashr exact i64 %436, 2
  %438 = sub nsw i64 0, %437
  %439 = getelementptr inbounds i32, i32* %427, i64 %438
  %440 = ptrtoint i32* %439 to i64
  %441 = icmp sgt i64 %436, 0
  br i1 %441, label %442, label %446

442:                                              ; preds = %424
  %443 = bitcast i32* %439 to i8*
  %444 = bitcast i32* %433 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %443, i8* align 4 %444, i64 %436, i1 false) #11
  %445 = load i32*, i32** %432, align 8
  br label %446

446:                                              ; preds = %442, %424
  %447 = phi i32* [ %433, %424 ], [ %445, %442 ]
  store i64 %440, i64* %398, align 8
  store i64 %431, i64* %397, align 8
  store i64 %429, i64* %407, align 8
  %448 = icmp eq i32* %447, null
  br i1 %448, label %451, label %449

449:                                              ; preds = %446
  %450 = bitcast i32* %447 to i8*
  call void @_ZdlPv(i8* %450) #10
  br label %451

451:                                              ; preds = %391, %446, %449
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %375)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass14RecordReturnedEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* nocapture, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %7 = alloca %"class.std::__1::vector.3", align 8
  %8 = alloca %"class.std::__1::unique_ptr.21", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %14 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8, !noalias !83
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add i32 %19, -253
  %21 = icmp ult i32 %20, 2
  br i1 %21, label %22, label %374

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 5
  %24 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"* %24, null
  br i1 %25, label %26, label %141

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::analysis::Bool"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false)
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %6, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %6, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::vector.463"* %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 24, i1 false) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %6, i64 0, i32 0, i32 2
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %33 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = trunc i32 %35 to i16
  %37 = icmp slt i16 %36, 0
  br i1 %37, label %53, label %38

38:                                               ; preds = %26
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 5
  %40 = tail call i8* @_Znwm(i64 240) #10
  %41 = bitcast i8* %40 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %41, %"class.std::__1::function"* dereferenceable(32) %39, %"class.spvtools::opt::IRContext"* %33) #11
  %42 = ptrtoint i8* %40 to i64
  %43 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 20
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %44, align 8
  %46 = bitcast %"class.std::__1::unique_ptr.480"* %43 to i64*
  store i64 %42, i64* %46, align 8
  %47 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %45, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %38
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %45) #11
  %49 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %45 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %38
  %51 = load i32, i32* %34, align 8
  %52 = or i32 %51, 32768
  store i32 %52, i32* %34, align 8
  br label %53

53:                                               ; preds = %26, %50
  %54 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %33, i64 0, i32 20, i32 0, i32 0, i32 0
  %55 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %54, align 8
  %56 = bitcast %"class.spvtools::opt::analysis::Bool"* %6 to %"class.spvtools::opt::analysis::Type"*
  %57 = call %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %55, %"class.spvtools::opt::analysis::Type"* nonnull %56) #11
  %58 = bitcast %"class.spvtools::opt::analysis::Type"* %57 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %59 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %59, i64 8
  %61 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %60, align 8
  %62 = call %"class.spvtools::opt::analysis::Bool"* %61(%"class.spvtools::opt::analysis::Type"* %57) #11
  %63 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 11
  %65 = load i32, i32* %64, align 8
  %66 = and i32 %65, 16384
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %82

68:                                               ; preds = %53
  %69 = call i8* @_Znwm(i64 136) #10
  %70 = bitcast i8* %69 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %70, %"class.spvtools::opt::IRContext"* %63) #11
  %71 = ptrtoint i8* %69 to i64
  %72 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 19
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %73, align 8
  %75 = bitcast %"class.std::__1::unique_ptr.400"* %72 to i64*
  store i64 %71, i64* %75, align 8
  %76 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %74, null
  br i1 %76, label %79, label %77

77:                                               ; preds = %68
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %74) #11
  %78 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %74 to i8*
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %77, %68
  %80 = load i32, i32* %64, align 8
  %81 = or i32 %80, 16384
  store i32 %81, i32* %64, align 8
  br label %82

82:                                               ; preds = %53, %79
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %63, i64 0, i32 19, i32 0, i32 0, i32 0
  %84 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %83, align 8
  %85 = bitcast %"class.spvtools::opt::analysis::Bool"* %62 to %"class.spvtools::opt::analysis::Type"*
  %86 = bitcast %"class.std::__1::vector.3"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #10
  %88 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 1
  %89 = bitcast %"class.std::__1::vector.3"* %7 to i8**
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %87, i64 4
  %91 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8
  %93 = bitcast i32** %88 to i64*
  %94 = bitcast i8* %87 to i32*
  store i32 1, i32* %94, align 4
  %95 = ptrtoint i8* %90 to i64
  store i64 %95, i64* %93, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %84, %"class.spvtools::opt::analysis::Type"* %85, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %7) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %7, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %82
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %93, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %82, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %84, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store %"class.spvtools::opt::Instruction"* %104, %"class.spvtools::opt::Instruction"** %23, align 8
  %105 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %32, align 8
  %106 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = and i32 %107, 1
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %105, i64 0, i32 6, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %111, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %112, %"class.spvtools::opt::Instruction"* %104) #11
  br label %113

113:                                              ; preds = %103, %110
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %114 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %29, i64 0, i32 0, i32 0
  %115 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %114, align 8
  %116 = icmp eq %"class.std::__1::vector.3"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %113
  %118 = bitcast %"class.std::__1::vector.3"* %115 to i8*
  %119 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %6, i64 0, i32 0, i32 1, i32 0, i32 1
  %120 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %119, align 8
  %121 = icmp eq %"class.std::__1::vector.3"* %120, %115
  br i1 %121, label %138, label %122

122:                                              ; preds = %117, %133
  %123 = phi %"class.std::__1::vector.3"* [ %124, %133 ], [ %120, %117 ]
  %124 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 -1
  %125 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %124, i64 0, i32 0, i32 0
  %126 = load i32*, i32** %125, align 8
  %127 = icmp eq i32* %126, null
  br i1 %127, label %133, label %128

128:                                              ; preds = %122
  %129 = ptrtoint i32* %126 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %123, i64 -1, i32 0, i32 1
  %131 = bitcast i32** %130 to i64*
  store i64 %129, i64* %131, align 8
  %132 = bitcast i32* %126 to i8*
  call void @_ZdlPv(i8* %132) #10
  br label %133

133:                                              ; preds = %128, %122
  %134 = icmp eq %"class.std::__1::vector.3"* %124, %115
  br i1 %134, label %135, label %122

135:                                              ; preds = %133
  %136 = bitcast %"class.std::__1::vector.463"* %29 to i8**
  %137 = load i8*, i8** %136, align 8
  br label %138

138:                                              ; preds = %135, %117
  %139 = phi i8* [ %137, %135 ], [ %118, %117 ]
  store %"class.std::__1::vector.3"* %115, %"class.std::__1::vector.3"** %119, align 8
  call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %113, %138
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  br label %141

141:                                              ; preds = %22, %140
  %142 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %143, align 8
  %144 = call i8* @_Znwm(i64 112) #10
  %145 = bitcast i8* %144 to %"class.spvtools::opt::Instruction"*
  %146 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %147 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %146, align 8
  %148 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #11
  %149 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %149) #11
  %150 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %150) #11
  %151 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 3
  %152 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %151, align 8
  %153 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %152, i64 0, i32 4
  %154 = load i8, i8* %153, align 1, !range !7
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %161, label %156

156:                                              ; preds = %141
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %152, i64 0, i32 3
  %158 = load i8, i8* %157, align 4, !range !7
  %159 = zext i8 %158 to i32
  %160 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %152, i32 %159) #11
  br label %161

161:                                              ; preds = %141, %156
  %162 = phi i32 [ %160, %156 ], [ 0, %141 ]
  %163 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %164 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %165 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %166 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %167 = bitcast i32** %165 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %166, %"struct.std::__1::aligned_storage<4, 4>::type"** %167, align 8
  %168 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %169 = bitcast %"class.std::__1::unique_ptr.0"* %168 to i64*
  store i64 0, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %166 to i32*
  store i64 1, i64* %164, align 8
  store i32 %162, i32* %170, align 8
  %171 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  store i32 1, i32* %171, align 8
  %172 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %173 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %172, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %174, align 8
  %175 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 2
  %176 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 3, i64 0
  %177 = bitcast i32** %175 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %176, %"struct.std::__1::aligned_storage<4, 4>::type"** %177, align 8
  %178 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4
  %179 = bitcast %"class.std::__1::unique_ptr.0"* %178 to i64*
  store i64 0, i64* %179, align 8
  %180 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %172, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %181 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %181) #11
  %182 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  %183 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %182, i64 0, i32 4
  %184 = load i8, i8* %183, align 1, !range !7
  %185 = icmp eq i8 %184, 0
  br i1 %185, label %191, label %186

186:                                              ; preds = %161
  %187 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %182, i64 0, i32 3
  %188 = load i8, i8* %187, align 4, !range !7
  %189 = zext i8 %188 to i32
  %190 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %182, i32 %189) #11
  br label %191

191:                                              ; preds = %161, %186
  %192 = phi i32 [ %190, %186 ], [ 0, %161 ]
  %193 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %194 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %195 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %196 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %197 = bitcast i32** %195 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %196, %"struct.std::__1::aligned_storage<4, 4>::type"** %197, align 8
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %199 = bitcast %"class.std::__1::unique_ptr.0"* %198 to i64*
  store i64 0, i64* %199, align 8
  %200 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %196 to i32*
  store i64 1, i64* %194, align 8
  store i32 %192, i32* %200, align 8
  %201 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 0
  store i32 1, i32* %201, align 8
  %202 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1
  %203 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %202, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %203, align 8
  %204 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %204, align 8
  %205 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 2
  %206 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 3, i64 0
  %207 = bitcast i32** %205 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %206, %"struct.std::__1::aligned_storage<4, 4>::type"** %207, align 8
  %208 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 4
  %209 = bitcast %"class.std::__1::unique_ptr.0"* %208 to i64*
  store i64 0, i64* %209, align 8
  %210 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %202, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  %211 = call i8* @_Znwm(i64 96) #10
  %212 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %213 = bitcast %"struct.spvtools::opt::Operand"** %212 to i8**
  store i8* %211, i8** %213, align 8
  %214 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %211, i8** %214, align 8
  %215 = getelementptr inbounds i8, i8* %211, i64 96
  %216 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %217 = bitcast %"struct.spvtools::opt::Operand"** %216 to i8**
  store i8* %215, i8** %217, align 8
  %218 = bitcast i8* %211 to i32*
  %219 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  %220 = load i32, i32* %219, align 8
  store i32 %220, i32* %218, align 8
  %221 = getelementptr inbounds i8, i8* %211, i64 8
  %222 = bitcast i8* %221 to %"class.spvtools::utils::SmallVector"*
  %223 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %224 = bitcast i8* %221 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %224, align 8
  %225 = getelementptr inbounds i8, i8* %211, i64 16
  %226 = bitcast i8* %225 to i64*
  store i64 0, i64* %226, align 8
  %227 = getelementptr inbounds i8, i8* %211, i64 24
  %228 = getelementptr inbounds i8, i8* %211, i64 32
  %229 = bitcast i8* %227 to i8**
  store i8* %228, i8** %229, align 8
  %230 = getelementptr inbounds i8, i8* %211, i64 40
  %231 = bitcast i8* %230 to i64*
  store i64 0, i64* %231, align 8
  %232 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %222, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %223) #11
  %233 = getelementptr inbounds i8, i8* %211, i64 48
  %234 = bitcast i8* %233 to i32*
  %235 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 0
  %236 = load i32, i32* %235, align 8
  store i32 %236, i32* %234, align 8
  %237 = getelementptr inbounds i8, i8* %211, i64 56
  %238 = bitcast i8* %237 to %"class.spvtools::utils::SmallVector"*
  %239 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1
  %240 = bitcast i8* %237 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %240, align 8
  %241 = getelementptr inbounds i8, i8* %211, i64 64
  %242 = bitcast i8* %241 to i64*
  store i64 0, i64* %242, align 8
  %243 = getelementptr inbounds i8, i8* %211, i64 72
  %244 = getelementptr inbounds i8, i8* %211, i64 80
  %245 = bitcast i8* %243 to i8**
  store i8* %244, i8** %245, align 8
  %246 = getelementptr inbounds i8, i8* %211, i64 88
  %247 = bitcast i8* %246 to i64*
  store i64 0, i64* %247, align 8
  %248 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %238, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %239) #11
  %249 = getelementptr inbounds i8, i8* %211, i64 96
  %250 = bitcast %"struct.spvtools::opt::Operand"** %212 to i64*
  %251 = ptrtoint i8* %249 to i64
  store i64 %251, i64* %250, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %145, %"class.spvtools::opt::IRContext"* %147, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #11
  %252 = ptrtoint i8* %144 to i64
  %253 = bitcast %"class.std::__1::unique_ptr.21"* %8 to i64*
  store i64 %252, i64* %253, align 8
  %254 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %255 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %254, align 8
  %256 = icmp eq %"struct.spvtools::opt::Operand"* %255, null
  br i1 %256, label %285, label %257

257:                                              ; preds = %191
  %258 = bitcast %"struct.spvtools::opt::Operand"* %255 to i8*
  %259 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %212, align 8
  %260 = icmp eq %"struct.spvtools::opt::Operand"* %259, %255
  br i1 %260, label %283, label %261

261:                                              ; preds = %257, %279
  %262 = phi %"struct.spvtools::opt::Operand"* [ %263, %279 ], [ %259, %257 ]
  %263 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %262, i64 -1
  %264 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %262, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %264, align 8
  %265 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %262, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %266 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %265, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %265, align 8
  %267 = icmp eq %"class.std::__1::vector.3"* %266, null
  br i1 %267, label %279, label %268

268:                                              ; preds = %261
  %269 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %266, i64 0, i32 0, i32 0
  %270 = load i32*, i32** %269, align 8
  %271 = icmp eq i32* %270, null
  br i1 %271, label %277, label %272

272:                                              ; preds = %268
  %273 = ptrtoint i32* %270 to i64
  %274 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %266, i64 0, i32 0, i32 1
  %275 = bitcast i32** %274 to i64*
  store i64 %273, i64* %275, align 8
  %276 = bitcast i32* %270 to i8*
  call void @_ZdlPv(i8* %276) #10
  br label %277

277:                                              ; preds = %272, %268
  %278 = bitcast %"class.std::__1::vector.3"* %266 to i8*
  call void @_ZdlPv(i8* %278) #10
  br label %279

279:                                              ; preds = %277, %261
  %280 = icmp eq %"struct.spvtools::opt::Operand"* %263, %255
  br i1 %280, label %281, label %261

281:                                              ; preds = %279
  %282 = load i8*, i8** %214, align 8
  br label %283

283:                                              ; preds = %281, %257
  %284 = phi i8* [ %282, %281 ], [ %258, %257 ]
  store %"struct.spvtools::opt::Operand"* %255, %"struct.spvtools::opt::Operand"** %212, align 8
  call void @_ZdlPv(i8* %284) #10
  br label %285

285:                                              ; preds = %191, %283
  %286 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %286, align 8
  %287 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %287, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %287, align 8
  %289 = icmp eq %"class.std::__1::vector.3"* %288, null
  br i1 %289, label %301, label %290

290:                                              ; preds = %285
  %291 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 0
  %292 = load i32*, i32** %291, align 8
  %293 = icmp eq i32* %292, null
  br i1 %293, label %299, label %294

294:                                              ; preds = %290
  %295 = ptrtoint i32* %292 to i64
  %296 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %288, i64 0, i32 0, i32 1
  %297 = bitcast i32** %296 to i64*
  store i64 %295, i64* %297, align 8
  %298 = bitcast i32* %292 to i8*
  call void @_ZdlPv(i8* %298) #10
  br label %299

299:                                              ; preds = %294, %290
  %300 = bitcast %"class.std::__1::vector.3"* %288 to i8*
  call void @_ZdlPv(i8* %300) #10
  br label %301

301:                                              ; preds = %285, %299
  %302 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %302, align 8
  %303 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %304 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %303, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %303, align 8
  %305 = icmp eq %"class.std::__1::vector.3"* %304, null
  br i1 %305, label %386, label %375

306:                                              ; preds = %386
  %307 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %388, i64 0, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = icmp eq i32* %308, null
  br i1 %309, label %315, label %310

310:                                              ; preds = %306
  %311 = ptrtoint i32* %308 to i64
  %312 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %388, i64 0, i32 0, i32 1
  %313 = bitcast i32** %312 to i64*
  store i64 %311, i64* %313, align 8
  %314 = bitcast i32* %308 to i8*
  call void @_ZdlPv(i8* %314) #10
  br label %315

315:                                              ; preds = %310, %306
  %316 = bitcast %"class.std::__1::vector.3"* %388 to i8*
  call void @_ZdlPv(i8* %316) #10
  br label %317

317:                                              ; preds = %386, %315
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %181) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %163, align 8
  %318 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %319 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %318, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %318, align 8
  %320 = icmp eq %"class.std::__1::vector.3"* %319, null
  br i1 %320, label %332, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %319, i64 0, i32 0, i32 0
  %323 = load i32*, i32** %322, align 8
  %324 = icmp eq i32* %323, null
  br i1 %324, label %330, label %325

325:                                              ; preds = %321
  %326 = ptrtoint i32* %323 to i64
  %327 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %319, i64 0, i32 0, i32 1
  %328 = bitcast i32** %327 to i64*
  store i64 %326, i64* %328, align 8
  %329 = bitcast i32* %323 to i8*
  call void @_ZdlPv(i8* %329) #10
  br label %330

330:                                              ; preds = %325, %321
  %331 = bitcast %"class.std::__1::vector.3"* %319 to i8*
  call void @_ZdlPv(i8* %331) #10
  br label %332

332:                                              ; preds = %317, %330
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %150) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %149) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %148) #11
  %333 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #11
  %334 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #11
  %335 = load i64, i64* %16, align 8, !noalias !86
  %336 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %14 to i64*
  store i64 %335, i64* %336, align 8, !alias.scope !86
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %13, %"class.spvtools::opt::InstructionList::iterator"* nonnull %14, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %8) #11
  %337 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %13, i64 0, i32 0, i32 0
  %338 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %337, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #11
  %339 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %146, align 8
  %340 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %340)
  store %"class.spvtools::opt::Instruction"* %338, %"class.spvtools::opt::Instruction"** %5, align 8
  %341 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %339, i64 0, i32 11
  %342 = load i32, i32* %341, align 8
  %343 = and i32 %342, 2
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %357, label %345

345:                                              ; preds = %332
  %346 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %339, i64 0, i32 9, i32 0
  %347 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %347) #11
  %348 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %348, align 8
  %349 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %349) #11
  %350 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %346, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %351 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %350, 0
  %352 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %351, i64 3
  %353 = bitcast %"struct.std::__1::__hash_node_base.178"* %352 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %349) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %347) #11
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %353, align 8
  %354 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %146, align 8
  %355 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %354, i64 0, i32 11
  %356 = load i32, i32* %355, align 8
  br label %357

357:                                              ; preds = %332, %345
  %358 = phi i32 [ %342, %332 ], [ %356, %345 ]
  %359 = phi %"class.spvtools::opt::IRContext"* [ %339, %332 ], [ %354, %345 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %340)
  %360 = and i32 %358, 1
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %365, label %362

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %359, i64 0, i32 6, i32 0, i32 0, i32 0
  %364 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %363, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %364, %"class.spvtools::opt::Instruction"* %338) #11
  br label %365

365:                                              ; preds = %357, %362
  %366 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %143, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %143, align 8
  %367 = icmp eq %"class.spvtools::opt::Instruction"* %366, null
  br i1 %367, label %373, label %368

368:                                              ; preds = %365
  %369 = bitcast %"class.spvtools::opt::Instruction"* %366 to void (%"class.spvtools::opt::Instruction"*)***
  %370 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %369, align 8
  %371 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %370, i64 1
  %372 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %371, align 8
  call void %372(%"class.spvtools::opt::Instruction"* nonnull %366) #11
  br label %373

373:                                              ; preds = %365, %368
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  br label %374

374:                                              ; preds = %2, %373
  ret void

375:                                              ; preds = %301
  %376 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 0
  %377 = load i32*, i32** %376, align 8
  %378 = icmp eq i32* %377, null
  br i1 %378, label %384, label %379

379:                                              ; preds = %375
  %380 = ptrtoint i32* %377 to i64
  %381 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %304, i64 0, i32 0, i32 1
  %382 = bitcast i32** %381 to i64*
  store i64 %380, i64* %382, align 8
  %383 = bitcast i32* %377 to i8*
  call void @_ZdlPv(i8* %383) #10
  br label %384

384:                                              ; preds = %379, %375
  %385 = bitcast %"class.std::__1::vector.3"* %304 to i8*
  call void @_ZdlPv(i8* %385) #10
  br label %386

386:                                              ; preds = %384, %301
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %193, align 8
  %387 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %388 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %387, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %387, align 8
  %389 = icmp eq %"class.std::__1::vector.3"* %388, null
  br i1 %389, label %317, label %306
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass17RecordReturnValueEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::Instruction", align 8
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %13 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %14 = bitcast %"class.spvtools::opt::Instruction"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 112, i1 false)
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %15, align 8, !noalias !89
  call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* nonnull %6, %"class.spvtools::opt::Instruction"* dereferenceable(112) %17)
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 254
  br i1 %20, label %21, label %254

21:                                               ; preds = %2
  %22 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = call i8* @_Znwm(i64 112) #10
  %25 = bitcast i8* %24 to %"class.spvtools::opt::Instruction"*
  %26 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %27 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %28 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #11
  %29 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %29) #11
  %30 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 4
  %32 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %31, align 8
  %33 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 4
  %34 = load i8, i8* %33, align 1, !range !7
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %41, label %36

36:                                               ; preds = %21
  %37 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %32, i64 0, i32 3
  %38 = load i8, i8* %37, align 4, !range !7
  %39 = zext i8 %38 to i32
  %40 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %32, i32 %39) #11
  br label %41

41:                                               ; preds = %21, %36
  %42 = phi i32 [ %40, %36 ], [ 0, %21 ]
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %47 = bitcast i32** %45 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %46, %"struct.std::__1::aligned_storage<4, 4>::type"** %47, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %49 = bitcast %"class.std::__1::unique_ptr.0"* %48 to i64*
  store i64 0, i64* %49, align 8
  %50 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %46 to i32*
  store i64 1, i64* %44, align 8
  store i32 %42, i32* %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %51, align 8
  %52 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %52, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %56 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %57 = bitcast i32** %55 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %56, %"struct.std::__1::aligned_storage<4, 4>::type"** %57, align 8
  %58 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %59 = bitcast %"class.std::__1::unique_ptr.0"* %58 to i64*
  store i64 0, i64* %59, align 8
  %60 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %52, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %61 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %61) #11
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 3
  %63 = load i8, i8* %62, align 4, !range !7
  %64 = icmp eq i8 %63, 0
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %6, i64 0, i32 4
  %66 = load i8, i8* %65, align 1, !range !7
  %67 = icmp eq i8 %66, 0
  %68 = select i1 %67, i32 1, i32 2
  %69 = xor i1 %67, true
  %70 = zext i1 %69 to i32
  %71 = select i1 %64, i32 %70, i32 %68
  %72 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* nonnull %6, i32 %71) #11
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %76 to i32*
  store i64 1, i64* %74, align 8
  store i32 %72, i32* %80, align 8
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %81, align 8
  %82 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %83 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %82, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %83, align 8
  %84 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %86 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %87 = bitcast i32** %85 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %86, %"struct.std::__1::aligned_storage<4, 4>::type"** %87, align 8
  %88 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %89 = bitcast %"class.std::__1::unique_ptr.0"* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %82, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %91 = call i8* @_Znwm(i64 96) #10
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %93 = bitcast %"struct.spvtools::opt::Operand"** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %91, i8** %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 96
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %97 = bitcast %"struct.spvtools::opt::Operand"** %96 to i8**
  store i8* %95, i8** %97, align 8
  %98 = bitcast i8* %91 to i32*
  %99 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %100 = load i32, i32* %99, align 8
  store i32 %100, i32* %98, align 8
  %101 = getelementptr inbounds i8, i8* %91, i64 8
  %102 = bitcast i8* %101 to %"class.spvtools::utils::SmallVector"*
  %103 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %104 = bitcast i8* %101 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %104, align 8
  %105 = getelementptr inbounds i8, i8* %91, i64 16
  %106 = bitcast i8* %105 to i64*
  store i64 0, i64* %106, align 8
  %107 = getelementptr inbounds i8, i8* %91, i64 24
  %108 = getelementptr inbounds i8, i8* %91, i64 32
  %109 = bitcast i8* %107 to i8**
  store i8* %108, i8** %109, align 8
  %110 = getelementptr inbounds i8, i8* %91, i64 40
  %111 = bitcast i8* %110 to i64*
  store i64 0, i64* %111, align 8
  %112 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %102, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %103) #11
  %113 = getelementptr inbounds i8, i8* %91, i64 48
  %114 = bitcast i8* %113 to i32*
  %115 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %116 = load i32, i32* %115, align 8
  store i32 %116, i32* %114, align 8
  %117 = getelementptr inbounds i8, i8* %91, i64 56
  %118 = bitcast i8* %117 to %"class.spvtools::utils::SmallVector"*
  %119 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %120 = bitcast i8* %117 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds i8, i8* %91, i64 64
  %122 = bitcast i8* %121 to i64*
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds i8, i8* %91, i64 72
  %124 = getelementptr inbounds i8, i8* %91, i64 80
  %125 = bitcast i8* %123 to i8**
  store i8* %124, i8** %125, align 8
  %126 = getelementptr inbounds i8, i8* %91, i64 88
  %127 = bitcast i8* %126 to i64*
  store i64 0, i64* %127, align 8
  %128 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %118, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %119) #11
  %129 = getelementptr inbounds i8, i8* %91, i64 96
  %130 = bitcast %"struct.spvtools::opt::Operand"** %92 to i64*
  %131 = ptrtoint i8* %129 to i64
  store i64 %131, i64* %130, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %25, %"class.spvtools::opt::IRContext"* %27, i32 62, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #11
  %132 = ptrtoint i8* %24 to i64
  %133 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %135 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %134, align 8
  %136 = icmp eq %"struct.spvtools::opt::Operand"* %135, null
  br i1 %136, label %165, label %137

137:                                              ; preds = %41
  %138 = bitcast %"struct.spvtools::opt::Operand"* %135 to i8*
  %139 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %92, align 8
  %140 = icmp eq %"struct.spvtools::opt::Operand"* %139, %135
  br i1 %140, label %163, label %141

141:                                              ; preds = %137, %159
  %142 = phi %"struct.spvtools::opt::Operand"* [ %143, %159 ], [ %139, %137 ]
  %143 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %142, i64 -1
  %144 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %142, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %144, align 8
  %145 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %142, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %146 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %145, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %145, align 8
  %147 = icmp eq %"class.std::__1::vector.3"* %146, null
  br i1 %147, label %159, label %148

148:                                              ; preds = %141
  %149 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %146, i64 0, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = icmp eq i32* %150, null
  br i1 %151, label %157, label %152

152:                                              ; preds = %148
  %153 = ptrtoint i32* %150 to i64
  %154 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %146, i64 0, i32 0, i32 1
  %155 = bitcast i32** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = bitcast i32* %150 to i8*
  call void @_ZdlPv(i8* %156) #10
  br label %157

157:                                              ; preds = %152, %148
  %158 = bitcast %"class.std::__1::vector.3"* %146 to i8*
  call void @_ZdlPv(i8* %158) #10
  br label %159

159:                                              ; preds = %157, %141
  %160 = icmp eq %"struct.spvtools::opt::Operand"* %143, %135
  br i1 %160, label %161, label %141

161:                                              ; preds = %159
  %162 = load i8*, i8** %94, align 8
  br label %163

163:                                              ; preds = %161, %137
  %164 = phi i8* [ %162, %161 ], [ %138, %137 ]
  store %"struct.spvtools::opt::Operand"* %135, %"struct.spvtools::opt::Operand"** %92, align 8
  call void @_ZdlPv(i8* %164) #10
  br label %165

165:                                              ; preds = %41, %163
  %166 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %166, align 8
  %167 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %168 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %167, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %167, align 8
  %169 = icmp eq %"class.std::__1::vector.3"* %168, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %168, i64 0, i32 0, i32 0
  %172 = load i32*, i32** %171, align 8
  %173 = icmp eq i32* %172, null
  br i1 %173, label %179, label %174

174:                                              ; preds = %170
  %175 = ptrtoint i32* %172 to i64
  %176 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %168, i64 0, i32 0, i32 1
  %177 = bitcast i32** %176 to i64*
  store i64 %175, i64* %177, align 8
  %178 = bitcast i32* %172 to i8*
  call void @_ZdlPv(i8* %178) #10
  br label %179

179:                                              ; preds = %174, %170
  %180 = bitcast %"class.std::__1::vector.3"* %168 to i8*
  call void @_ZdlPv(i8* %180) #10
  br label %181

181:                                              ; preds = %165, %179
  %182 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %182, align 8
  %183 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %184 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %183, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %183, align 8
  %185 = icmp eq %"class.std::__1::vector.3"* %184, null
  br i1 %185, label %266, label %255

186:                                              ; preds = %266
  %187 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %268, i64 0, i32 0, i32 0
  %188 = load i32*, i32** %187, align 8
  %189 = icmp eq i32* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %186
  %191 = ptrtoint i32* %188 to i64
  %192 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %268, i64 0, i32 0, i32 1
  %193 = bitcast i32** %192 to i64*
  store i64 %191, i64* %193, align 8
  %194 = bitcast i32* %188 to i8*
  call void @_ZdlPv(i8* %194) #10
  br label %195

195:                                              ; preds = %190, %186
  %196 = bitcast %"class.std::__1::vector.3"* %268 to i8*
  call void @_ZdlPv(i8* %196) #10
  br label %197

197:                                              ; preds = %266, %195
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %61) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %198 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %199 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %198, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %198, align 8
  %200 = icmp eq %"class.std::__1::vector.3"* %199, null
  br i1 %200, label %212, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %199, i64 0, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = icmp eq i32* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i32* %203 to i64
  %207 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %199, i64 0, i32 0, i32 1
  %208 = bitcast i32** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast i32* %203 to i8*
  call void @_ZdlPv(i8* %209) #10
  br label %210

210:                                              ; preds = %205, %201
  %211 = bitcast %"class.std::__1::vector.3"* %199 to i8*
  call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %197, %210
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %30) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %29) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #11
  %213 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %213) #11
  %214 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %214) #11
  %215 = load i64, i64* %16, align 8, !noalias !92
  %216 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %13 to i64*
  store i64 %215, i64* %216, align 8, !alias.scope !92
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %12, %"class.spvtools::opt::InstructionList::iterator"* nonnull %13, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7) #11
  %217 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %12, i64 0, i32 0, i32 0
  %218 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %217, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %214) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %213) #11
  %219 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %220 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220)
  store %"class.spvtools::opt::Instruction"* %218, %"class.spvtools::opt::Instruction"** %5, align 8
  %221 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %219, i64 0, i32 11
  %222 = load i32, i32* %221, align 8
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %237, label %225

225:                                              ; preds = %212
  %226 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %219, i64 0, i32 9, i32 0
  %227 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #11
  %228 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %228, align 8
  %229 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %229) #11
  %230 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %226, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %231 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %230, 0
  %232 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %231, i64 3
  %233 = bitcast %"struct.std::__1::__hash_node_base.178"* %232 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %229) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #11
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %233, align 8
  %234 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %235 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %234, i64 0, i32 11
  %236 = load i32, i32* %235, align 8
  br label %237

237:                                              ; preds = %212, %225
  %238 = phi i32 [ %222, %212 ], [ %236, %225 ]
  %239 = phi %"class.spvtools::opt::IRContext"* [ %219, %212 ], [ %234, %225 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220)
  %240 = and i32 %238, 1
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %245, label %242

242:                                              ; preds = %237
  %243 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %239, i64 0, i32 6, i32 0, i32 0, i32 0
  %244 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %243, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %244, %"class.spvtools::opt::Instruction"* %218) #11
  br label %245

245:                                              ; preds = %237, %242
  %246 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %23, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %23, align 8
  %247 = icmp eq %"class.spvtools::opt::Instruction"* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.spvtools::opt::Instruction"* %246 to void (%"class.spvtools::opt::Instruction"*)***
  %250 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %250, i64 1
  %252 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %251, align 8
  call void %252(%"class.spvtools::opt::Instruction"* nonnull %246) #11
  br label %253

253:                                              ; preds = %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %254

254:                                              ; preds = %2, %253
  call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %14) #11
  ret void

255:                                              ; preds = %181
  %256 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %184, i64 0, i32 0, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %264, label %259

259:                                              ; preds = %255
  %260 = ptrtoint i32* %257 to i64
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %184, i64 0, i32 0, i32 1
  %262 = bitcast i32** %261 to i64*
  store i64 %260, i64* %262, align 8
  %263 = bitcast i32* %257 to i8*
  call void @_ZdlPv(i8* %263) #10
  br label %264

264:                                              ; preds = %259, %255
  %265 = bitcast %"class.std::__1::vector.3"* %184 to i8*
  call void @_ZdlPv(i8* %265) #10
  br label %266

266:                                              ; preds = %264, %181
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %267 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %268 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %267, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %267, align 8
  %269 = icmp eq %"class.std::__1::vector.3"* %268, null
  br i1 %269, label %197, label %186
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 1
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %31

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %8, align 8
  %10 = tail call i8* @_Znwm(i64 104) #10
  %11 = bitcast i8* %10 to %"class.spvtools::opt::analysis::DefUseManager"*
  %12 = getelementptr inbounds i8, i8* %10, i64 32
  %13 = bitcast i8* %12 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %13, align 4
  %14 = getelementptr inbounds i8, i8* %10, i64 48
  %15 = getelementptr inbounds i8, i8* %10, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #11
  %16 = bitcast i8* %15 to i8**
  store i8* %14, i8** %16, align 8
  %17 = getelementptr inbounds i8, i8* %10, i64 64
  %18 = getelementptr inbounds i8, i8* %10, i64 96
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %11, %"class.spvtools::opt::Module"* %9) #11
  %20 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6
  %21 = ptrtoint i8* %10 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.62"* %20 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %23, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %7
  %27 = bitcast %"class.std::__1::unique_ptr.62"* %20 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %27, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %23) #11
  br label %28

28:                                               ; preds = %26, %7
  %29 = load i32, i32* %3, align 8
  %30 = or i32 %29, 1
  store i32 %30, i32* %3, align 8
  br label %31

31:                                               ; preds = %2, %28
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %33 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %32, align 8
  %34 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %33, i32 %1) #11
  %35 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::Instruction"* %34)
  ret %"class.spvtools::opt::BasicBlock"* %35
}

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass14UpdatePhiNodesEPNS0_10BasicBlockES3_(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1167", align 8
  %5 = alloca %"class.std::__1::function.1047", align 8
  %6 = bitcast %"class.std::__1::function.1047"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %5, i64 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %5, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass14UpdatePhiNodesEPNS3_10BasicBlockESC_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %7, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass14UpdatePhiNodesEPNS5_10BasicBlockES8_E3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %8, align 8
  %9 = bitcast %"class.std::__1::function.1047"* %5 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %5, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast [8 x i8]* %10 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %11, align 8
  %12 = bitcast %"class.std::__1::function.1167"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #11
  %13 = ptrtoint %"class.std::__1::function.1047"* %5 to i64
  %14 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %4, i64 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %14, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %15, align 8
  %16 = bitcast %"class.std::__1::function.1167"* %4 to i64*
  store i64 %13, i64* %16, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %2, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %18 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %17, align 8
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 0, i32 3
  %20 = load i8, i8* %19, align 8, !range !7
  %21 = icmp ne i8 %20, 0
  %22 = icmp eq %"class.spvtools::opt::Instruction"* %18, null
  %23 = or i1 %22, %21
  br i1 %23, label %44, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %4, i64 0, i32 0, i32 0
  br label %26

26:                                               ; preds = %35, %24
  %27 = phi %"class.spvtools::opt::Instruction"* [ %39, %35 ], [ %18, %24 ]
  %28 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 1
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 245
  br i1 %34, label %35, label %42

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %37 = load i8, i8* %36, align 8, !range !7
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, %"class.spvtools::opt::Instruction"* %31, %"class.spvtools::opt::Instruction"* null
  %40 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %14, align 8
  %41 = call zeroext i1 %40(%"union.std::__1::__function::__policy_storage"* nonnull %25, %"class.spvtools::opt::Instruction"* nonnull %27) #11
  br i1 %41, label %26, label %42

42:                                               ; preds = %26, %29, %35
  %43 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %15, align 8
  br label %44

44:                                               ; preds = %42, %3
  %45 = phi %"struct.std::__1::__function::__policy"* [ %43, %42 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %3 ]
  %46 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %45, i64 0, i32 1
  %47 = load void (i8*)*, void (i8*)** %46, align 8
  %48 = icmp eq void (i8*)* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %4, i64 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  call void %47(i8* %51) #11
  br label %52

52:                                               ; preds = %44, %49
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #11
  %53 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %53, i64 0, i32 1
  %55 = load void (i8*)*, void (i8*)** %54, align 8
  %56 = icmp eq void (i8*)* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %5, i64 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  call void %55(i8* %59) #11
  br label %60

60:                                               ; preds = %52, %57
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS0_10BasicBlockERNS0_11InstructionE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::function.1184", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.1131", align 1
  %7 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::tuple.1328", align 8
  %10 = alloca %"class.std::__1::tuple.1131", align 1
  %11 = alloca %"class.std::__1::function.1184", align 8
  %12 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %13 = alloca %"class.spvtools::opt::DominatorAnalysis"*, align 8
  %14 = alloca %"class.std::__1::vector.1070", align 8
  %15 = alloca %"class.std::__1::function.1047", align 8
  %16 = alloca %"class.std::__1::vector.3", align 8
  %17 = alloca %"class.std::__1::vector.3", align 8
  %18 = alloca %"class.std::__1::unique_ptr.21", align 8
  %19 = alloca %"class.std::__1::function.1079", align 8
  %20 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %21 = alloca %"class.std::__1::function.1079", align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %22 = bitcast %"class.spvtools::opt::DominatorAnalysis"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %25 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 0
  %26 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %25, align 8
  %27 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %24, %"class.spvtools::opt::Function"* %26) #11
  store %"class.spvtools::opt::DominatorAnalysis"* %27, %"class.spvtools::opt::DominatorAnalysis"** %13, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 4
  %29 = load i8, i8* %28, align 1, !range !7
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %872, label %31

31:                                               ; preds = %3
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %2, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !7
  %34 = zext i8 %33 to i32
  %35 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %34) #11
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %872, label %37

37:                                               ; preds = %31
  %38 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %39 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %38, %"class.spvtools::opt::Instruction"* %2)
  %40 = bitcast %"class.std::__1::vector.1070"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #11
  %41 = getelementptr inbounds %"class.std::__1::vector.1070", %"class.std::__1::vector.1070"* %14, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.std::__1::vector.1070", %"class.std::__1::vector.1070"* %14, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #11
  %43 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 11
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 1
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %72

48:                                               ; preds = %37
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 4, i32 0, i32 0, i32 0
  %50 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %49, align 8
  %51 = tail call i8* @_Znwm(i64 104) #10
  %52 = bitcast i8* %51 to %"class.spvtools::opt::analysis::DefUseManager"*
  %53 = getelementptr inbounds i8, i8* %51, i64 32
  %54 = bitcast i8* %53 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %54, align 4
  %55 = getelementptr inbounds i8, i8* %51, i64 48
  %56 = getelementptr inbounds i8, i8* %51, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #11
  %57 = bitcast i8* %56 to i8**
  store i8* %55, i8** %57, align 8
  %58 = getelementptr inbounds i8, i8* %51, i64 64
  %59 = getelementptr inbounds i8, i8* %51, i64 96
  %60 = bitcast i8* %59 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %60, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %52, %"class.spvtools::opt::Module"* %50) #11
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 6
  %62 = ptrtoint i8* %51 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %61, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %63, align 8
  %65 = bitcast %"class.std::__1::unique_ptr.62"* %61 to i64*
  store i64 %62, i64* %65, align 8
  %66 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %64, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %48
  %68 = bitcast %"class.std::__1::unique_ptr.62"* %61 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %68, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %64) #11
  br label %69

69:                                               ; preds = %67, %48
  %70 = load i32, i32* %44, align 8
  %71 = or i32 %70, 1
  store i32 %71, i32* %44, align 8
  br label %72

72:                                               ; preds = %37, %69
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %43, i64 0, i32 6, i32 0, i32 0, i32 0
  %74 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %73, align 8
  %75 = bitcast %"class.std::__1::function.1047"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  %76 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %15, i64 0, i32 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %15, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass21CreatePhiNodesForInstEPNS3_10BasicBlockERS4_E3$_2S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %76, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %77, align 8
  %78 = tail call i8* @_Znwm(i64 40) #10, !noalias !95
  %79 = bitcast i8* %78 to %"class.std::__1::vector.1070"**
  store %"class.std::__1::vector.1070"* %14, %"class.std::__1::vector.1070"** %79, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 8
  %81 = bitcast i8* %80 to %"class.spvtools::opt::DominatorAnalysis"***
  store %"class.spvtools::opt::DominatorAnalysis"** %13, %"class.spvtools::opt::DominatorAnalysis"*** %81, align 8
  %82 = getelementptr inbounds i8, i8* %78, i64 16
  %83 = bitcast i8* %82 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %83, align 8
  %84 = getelementptr inbounds i8, i8* %78, i64 24
  %85 = bitcast i8* %84 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %39, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %86 = getelementptr inbounds i8, i8* %78, i64 32
  %87 = bitcast i8* %86 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %15, i64 0, i32 0, i32 0, i32 0
  store i8* %78, i8** %88, align 8
  call void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"* %74, %"class.spvtools::opt::Instruction"* %2, %"class.std::__1::function.1047"* nonnull dereferenceable(32) %15) #11
  %89 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %77, align 8
  %90 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %89, i64 0, i32 1
  %91 = load void (i8*)*, void (i8*)** %90, align 8
  %92 = icmp eq void (i8*)* %91, null
  br i1 %92, label %95, label %93

93:                                               ; preds = %72
  %94 = load i8*, i8** %88, align 8
  call void %91(i8* %94) #11
  br label %95

95:                                               ; preds = %72, %93
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %96 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %41, align 8
  %97 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %42, align 8
  %98 = icmp eq %"class.spvtools::opt::Instruction"** %96, %97
  br i1 %98, label %865, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0
  %101 = load i8, i8* %32, align 4, !range !7
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %105, label %103

103:                                              ; preds = %99
  %104 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %105

105:                                              ; preds = %99, %103
  %106 = phi i32 [ %104, %103 ], [ 0, %99 ]
  %107 = call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %100, i32 %106) #11
  %108 = bitcast %"class.std::__1::vector.3"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 1
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %16, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 0, i64 24, i1 false) #11
  %112 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 8, i32 0
  %113 = bitcast %"class.std::__1::tuple.1328"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #11
  %114 = getelementptr inbounds %"class.std::__1::tuple.1328", %"class.std::__1::tuple.1328"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %12, %"class.spvtools::opt::BasicBlock"*** %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %115) #11
  %116 = call { %"struct.std::__1::__hash_node_base.972"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.968"* %112, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %12, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1328"* nonnull dereferenceable(8) %9, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %10) #11
  %117 = extractvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } %116, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #11
  %118 = bitcast %"class.std::__1::vector.3"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 0
  %120 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 1
  %121 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %17, i64 0, i32 0, i32 2, i32 0, i32 0
  %122 = bitcast %"class.std::__1::vector.3"* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 24, i1 false)
  %123 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 11
  %125 = load i32, i32* %124, align 8
  %126 = and i32 %125, 16
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %144

128:                                              ; preds = %105
  %129 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 4, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %129, align 8
  %131 = call i8* @_Znwm(i64 400) #10
  %132 = bitcast i8* %131 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %132, %"class.spvtools::opt::Module"* %130) #11
  %133 = ptrtoint i8* %131 to i64
  %134 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 15
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %135, align 8
  %137 = bitcast %"class.std::__1::unique_ptr.273"* %134 to i64*
  store i64 %133, i64* %137, align 8
  %138 = icmp eq %"class.spvtools::opt::CFG"* %136, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %128
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %136) #11
  %140 = bitcast %"class.spvtools::opt::CFG"* %136 to i8*
  call void @_ZdlPv(i8* %140) #10
  br label %141

141:                                              ; preds = %139, %128
  %142 = load i32, i32* %124, align 8
  %143 = or i32 %142, 16
  store i32 %143, i32* %124, align 8
  br label %144

144:                                              ; preds = %105, %141
  %145 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %123, i64 0, i32 15, i32 0, i32 0, i32 0
  %146 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %145, align 8
  %147 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %148 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %147, i64 0, i32 1, i32 0, i32 0, i32 0
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %148, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 4
  %151 = load i8, i8* %150, align 1, !range !7
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %158, label %153

153:                                              ; preds = %144
  %154 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 3
  %155 = load i8, i8* %154, align 4, !range !7
  %156 = zext i8 %155 to i32
  %157 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %149, i32 %156) #11
  br label %158

158:                                              ; preds = %144, %153
  %159 = phi i32 [ %157, %153 ], [ 0, %144 ]
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %146, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %162 = load i64, i64* %161, align 8
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %212, label %164

164:                                              ; preds = %158
  %165 = call i64 @llvm.ctpop.i64(i64 %162) #11, !range !15
  %166 = icmp ugt i64 %165, 1
  br i1 %166, label %170, label %167

167:                                              ; preds = %164
  %168 = add i64 %162, 4294967295
  %169 = and i64 %168, %160
  br label %174

170:                                              ; preds = %164
  %171 = icmp ugt i64 %162, %160
  br i1 %171, label %174, label %172

172:                                              ; preds = %170
  %173 = urem i64 %160, %162
  br label %174

174:                                              ; preds = %172, %170, %167
  %175 = phi i64 [ %169, %167 ], [ %173, %172 ], [ %160, %170 ]
  %176 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %146, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %176, align 8
  %178 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %177, i64 %175
  %179 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %178, align 8
  %180 = icmp eq %"struct.std::__1::__hash_node_base.309"* %179, null
  br i1 %180, label %212, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %179, i64 0, i32 0
  %183 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %182, align 8
  %184 = icmp eq %"struct.std::__1::__hash_node_base.309"* %183, null
  br i1 %184, label %212, label %185

185:                                              ; preds = %181
  %186 = add i64 %162, -1
  br label %187

187:                                              ; preds = %208, %185
  %188 = phi %"struct.std::__1::__hash_node_base.309"* [ %183, %185 ], [ %210, %208 ]
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %188, i64 1
  %190 = bitcast %"struct.std::__1::__hash_node_base.309"* %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = icmp eq i64 %191, %160
  br i1 %192, label %203, label %193

193:                                              ; preds = %187
  br i1 %166, label %196, label %194

194:                                              ; preds = %193
  %195 = and i64 %191, %186
  br label %200

196:                                              ; preds = %193
  %197 = icmp ult i64 %191, %162
  br i1 %197, label %200, label %198

198:                                              ; preds = %196
  %199 = urem i64 %191, %162
  br label %200

200:                                              ; preds = %198, %196, %194
  %201 = phi i64 [ %195, %194 ], [ %199, %198 ], [ %191, %196 ]
  %202 = icmp eq i64 %201, %175
  br i1 %202, label %208, label %212

203:                                              ; preds = %187
  %204 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %188, i64 2
  %205 = bitcast %"struct.std::__1::__hash_node_base.309"* %204 to i32*
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, %159
  br i1 %207, label %213, label %208

208:                                              ; preds = %203, %200
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %188, i64 0, i32 0
  %210 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %209, align 8
  %211 = icmp eq %"struct.std::__1::__hash_node_base.309"* %210, null
  br i1 %211, label %212, label %187

212:                                              ; preds = %208, %200, %181, %174, %158
  call void @abort() #12
  unreachable

213:                                              ; preds = %203
  %214 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %188, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #11
  %215 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %188, i64 4
  %216 = bitcast %"struct.std::__1::__hash_node_base.309"* %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = bitcast %"struct.std::__1::__hash_node_base.309"* %214 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %217, %219
  %221 = ashr exact i64 %220, 2
  %222 = icmp eq i64 %220, 0
  br i1 %222, label %256, label %223

223:                                              ; preds = %213
  %224 = icmp ugt i64 %221, 4611686018427387903
  br i1 %224, label %225, label %227

225:                                              ; preds = %223
  %226 = bitcast %"class.std::__1::vector.3"* %17 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %226) #12
  unreachable

227:                                              ; preds = %223
  %228 = call i8* @_Znwm(i64 %220) #10
  %229 = bitcast i8* %228 to i32*
  %230 = bitcast i32** %120 to i8**
  store i8* %228, i8** %230, align 8
  %231 = bitcast %"class.std::__1::vector.3"* %17 to i8**
  store i8* %228, i8** %231, align 8
  %232 = getelementptr inbounds i32, i32* %229, i64 %221
  store i32* %232, i32** %121, align 8
  %233 = bitcast %"struct.std::__1::__hash_node_base.309"* %214 to i32**
  %234 = load i32*, i32** %233, align 8
  %235 = load i64, i64* %216, align 8
  %236 = bitcast i32** %120 to i64*
  %237 = ptrtoint i8* %228 to i64
  %238 = ptrtoint i32* %234 to i64
  %239 = sub i64 %235, %238
  %240 = icmp sgt i64 %239, 0
  br i1 %240, label %241, label %246

241:                                              ; preds = %227
  %242 = lshr exact i64 %239, 2
  %243 = bitcast i32* %234 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %228, i8* align 4 %243, i64 %239, i1 false) #11
  %244 = getelementptr inbounds i32, i32* %229, i64 %242
  %245 = ptrtoint i32* %244 to i64
  br label %246

246:                                              ; preds = %227, %241
  %247 = phi i64 [ %245, %241 ], [ %237, %227 ]
  store i64 %247, i64* %236, align 8
  %248 = inttoptr i64 %247 to i32*
  %249 = icmp eq i32* %229, %248
  br i1 %249, label %256, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %117, i64 4
  %252 = bitcast %"struct.std::__1::__hash_node_base.972"* %251 to %"class.std::__1::__tree_node"**
  %253 = bitcast i32** %110 to i64*
  %254 = bitcast %"class.std::__1::vector.3"* %16 to i64*
  %255 = bitcast i32** %111 to i64*
  br label %299

256:                                              ; preds = %481, %213, %246
  %257 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %258 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 11
  %259 = load i32, i32* %258, align 8
  %260 = and i32 %259, 1
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %286

262:                                              ; preds = %256
  %263 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 4, i32 0, i32 0, i32 0
  %264 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %263, align 8
  %265 = call i8* @_Znwm(i64 104) #10
  %266 = bitcast i8* %265 to %"class.spvtools::opt::analysis::DefUseManager"*
  %267 = getelementptr inbounds i8, i8* %265, i64 32
  %268 = bitcast i8* %267 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %265, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %268, align 4
  %269 = getelementptr inbounds i8, i8* %265, i64 48
  %270 = getelementptr inbounds i8, i8* %265, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %269, i8 0, i64 16, i1 false) #11
  %271 = bitcast i8* %270 to i8**
  store i8* %269, i8** %271, align 8
  %272 = getelementptr inbounds i8, i8* %265, i64 64
  %273 = getelementptr inbounds i8, i8* %265, i64 96
  %274 = bitcast i8* %273 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %272, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %274, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %266, %"class.spvtools::opt::Module"* %264) #11
  %275 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 6
  %276 = ptrtoint i8* %265 to i64
  %277 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %275, i64 0, i32 0, i32 0, i32 0
  %278 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %277, align 8
  %279 = bitcast %"class.std::__1::unique_ptr.62"* %275 to i64*
  store i64 %276, i64* %279, align 8
  %280 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %278, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %262
  %282 = bitcast %"class.std::__1::unique_ptr.62"* %275 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %282, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %278) #11
  br label %283

283:                                              ; preds = %281, %262
  %284 = load i32, i32* %258, align 8
  %285 = or i32 %284, 1
  store i32 %285, i32* %258, align 8
  br label %286

286:                                              ; preds = %256, %283
  %287 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %257, i64 0, i32 6, i32 0, i32 0, i32 0
  %288 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %287, align 8
  %289 = load i8, i8* %32, align 4, !range !7
  %290 = icmp eq i8 %289, 0
  br i1 %290, label %293, label %291

291:                                              ; preds = %286
  %292 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %293

293:                                              ; preds = %286, %291
  %294 = phi i32 [ %292, %291 ], [ 0, %286 ]
  %295 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %288, i32 %294) #11
  %296 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %295, i64 0, i32 2
  %297 = load i32, i32* %296, align 8
  %298 = icmp eq i32 %297, 32
  br i1 %298, label %484, label %745

299:                                              ; preds = %250, %481
  %300 = phi i32* [ %229, %250 ], [ %482, %481 ]
  %301 = load i32, i32* %300, align 4
  %302 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %252, align 8
  %303 = icmp eq %"class.std::__1::__tree_node"* %302, null
  br i1 %303, label %371, label %304

304:                                              ; preds = %299, %316
  %305 = phi %"class.std::__1::__tree_node"* [ %318, %316 ], [ %302, %299 ]
  %306 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = icmp ult i32 %301, %307
  br i1 %308, label %309, label %311

309:                                              ; preds = %304
  %310 = bitcast %"class.std::__1::__tree_node"* %305 to %"class.std::__1::__tree_node"**
  br label %316

311:                                              ; preds = %304
  %312 = icmp ult i32 %307, %301
  br i1 %312, label %313, label %320

313:                                              ; preds = %311
  %314 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %305, i64 0, i32 0, i32 1
  %315 = bitcast %"class.std::__1::__tree_node_base"** %314 to %"class.std::__1::__tree_node"**
  br label %316

316:                                              ; preds = %313, %309
  %317 = phi %"class.std::__1::__tree_node"** [ %310, %309 ], [ %315, %313 ]
  %318 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %317, align 8
  %319 = icmp eq %"class.std::__1::__tree_node"* %318, null
  br i1 %319, label %371, label %304

320:                                              ; preds = %311
  %321 = load i32*, i32** %110, align 8
  %322 = load i32*, i32** %111, align 8
  %323 = icmp eq i32* %321, %322
  %324 = ptrtoint i32* %322 to i64
  br i1 %323, label %328, label %325

325:                                              ; preds = %320
  store i32 %107, i32* %321, align 4
  %326 = getelementptr inbounds i32, i32* %321, i64 1
  %327 = ptrtoint i32* %326 to i64
  store i64 %327, i64* %253, align 8
  br label %430

328:                                              ; preds = %320
  %329 = ptrtoint i32* %321 to i64
  %330 = load i64, i64* %254, align 8
  %331 = sub i64 %329, %330
  %332 = ashr exact i64 %331, 2
  %333 = add nsw i64 %332, 1
  %334 = icmp ugt i64 %333, 4611686018427387903
  br i1 %334, label %335, label %337

335:                                              ; preds = %328
  %336 = bitcast %"class.std::__1::vector.3"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %336) #12
  unreachable

337:                                              ; preds = %328
  %338 = sub i64 %324, %330
  %339 = ashr exact i64 %338, 2
  %340 = icmp ult i64 %339, 2305843009213693951
  br i1 %340, label %341, label %349

341:                                              ; preds = %337
  %342 = ashr exact i64 %338, 1
  %343 = icmp ult i64 %342, %333
  %344 = select i1 %343, i64 %333, i64 %342
  %345 = icmp eq i64 %344, 0
  br i1 %345, label %354, label %346

346:                                              ; preds = %341
  %347 = icmp ugt i64 %344, 4611686018427387903
  br i1 %347, label %348, label %349

348:                                              ; preds = %346
  call void @abort() #12
  unreachable

349:                                              ; preds = %346, %337
  %350 = phi i64 [ %344, %346 ], [ 4611686018427387903, %337 ]
  %351 = shl i64 %350, 2
  %352 = call i8* @_Znwm(i64 %351) #10
  %353 = bitcast i8* %352 to i32*
  br label %354

354:                                              ; preds = %349, %341
  %355 = phi i64 [ %350, %349 ], [ 0, %341 ]
  %356 = phi i8* [ %352, %349 ], [ null, %341 ]
  %357 = phi i32* [ %353, %349 ], [ null, %341 ]
  %358 = getelementptr inbounds i32, i32* %357, i64 %332
  %359 = getelementptr inbounds i32, i32* %357, i64 %355
  %360 = ptrtoint i32* %359 to i64
  store i32 %107, i32* %358, align 4
  %361 = getelementptr inbounds i32, i32* %358, i64 1
  %362 = ptrtoint i32* %361 to i64
  %363 = ptrtoint i32* %357 to i64
  %364 = icmp sgt i64 %331, 0
  br i1 %364, label %365, label %367

365:                                              ; preds = %354
  %366 = inttoptr i64 %330 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %356, i8* align 4 %366, i64 %331, i1 false) #11
  br label %367

367:                                              ; preds = %365, %354
  store i64 %363, i64* %254, align 8
  store i64 %362, i64* %253, align 8
  store i64 %360, i64* %255, align 8
  %368 = icmp eq i64 %330, 0
  br i1 %368, label %430, label %369

369:                                              ; preds = %367
  %370 = inttoptr i64 %330 to i8*
  call void @_ZdlPv(i8* %370) #10
  br label %430

371:                                              ; preds = %316, %299
  %372 = load i8, i8* %28, align 1, !range !7
  %373 = icmp eq i8 %372, 0
  br i1 %373, label %378, label %374

374:                                              ; preds = %371
  %375 = load i8, i8* %32, align 4, !range !7
  %376 = zext i8 %375 to i32
  %377 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 %376) #11
  br label %378

378:                                              ; preds = %371, %374
  %379 = phi i32 [ %377, %374 ], [ 0, %371 ]
  %380 = load i32*, i32** %110, align 8
  %381 = load i32*, i32** %111, align 8
  %382 = icmp ult i32* %380, %381
  %383 = ptrtoint i32* %381 to i64
  br i1 %382, label %384, label %387

384:                                              ; preds = %378
  store i32 %379, i32* %380, align 4
  %385 = getelementptr inbounds i32, i32* %380, i64 1
  %386 = ptrtoint i32* %385 to i64
  store i64 %386, i64* %253, align 8
  br label %430

387:                                              ; preds = %378
  %388 = ptrtoint i32* %380 to i64
  %389 = load i64, i64* %254, align 8
  %390 = sub i64 %388, %389
  %391 = ashr exact i64 %390, 2
  %392 = add nsw i64 %391, 1
  %393 = icmp ugt i64 %392, 4611686018427387903
  br i1 %393, label %394, label %396

394:                                              ; preds = %387
  %395 = bitcast %"class.std::__1::vector.3"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %395) #12
  unreachable

396:                                              ; preds = %387
  %397 = sub i64 %383, %389
  %398 = ashr exact i64 %397, 2
  %399 = icmp ult i64 %398, 2305843009213693951
  br i1 %399, label %400, label %408

400:                                              ; preds = %396
  %401 = ashr exact i64 %397, 1
  %402 = icmp ult i64 %401, %392
  %403 = select i1 %402, i64 %392, i64 %401
  %404 = icmp eq i64 %403, 0
  br i1 %404, label %413, label %405

405:                                              ; preds = %400
  %406 = icmp ugt i64 %403, 4611686018427387903
  br i1 %406, label %407, label %408

407:                                              ; preds = %405
  call void @abort() #12
  unreachable

408:                                              ; preds = %405, %396
  %409 = phi i64 [ %403, %405 ], [ 4611686018427387903, %396 ]
  %410 = shl i64 %409, 2
  %411 = call i8* @_Znwm(i64 %410) #10
  %412 = bitcast i8* %411 to i32*
  br label %413

413:                                              ; preds = %408, %400
  %414 = phi i64 [ %409, %408 ], [ 0, %400 ]
  %415 = phi i8* [ %411, %408 ], [ null, %400 ]
  %416 = phi i32* [ %412, %408 ], [ null, %400 ]
  %417 = getelementptr inbounds i32, i32* %416, i64 %391
  %418 = getelementptr inbounds i32, i32* %416, i64 %414
  %419 = ptrtoint i32* %418 to i64
  store i32 %379, i32* %417, align 4
  %420 = getelementptr inbounds i32, i32* %417, i64 1
  %421 = ptrtoint i32* %420 to i64
  %422 = ptrtoint i32* %416 to i64
  %423 = icmp sgt i64 %390, 0
  br i1 %423, label %424, label %426

424:                                              ; preds = %413
  %425 = inttoptr i64 %389 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %415, i8* align 4 %425, i64 %390, i1 false) #11
  br label %426

426:                                              ; preds = %424, %413
  store i64 %422, i64* %254, align 8
  store i64 %421, i64* %253, align 8
  store i64 %419, i64* %255, align 8
  %427 = icmp eq i64 %389, 0
  br i1 %427, label %430, label %428

428:                                              ; preds = %426
  %429 = inttoptr i64 %389 to i8*
  call void @_ZdlPv(i8* %429) #10
  br label %430

430:                                              ; preds = %428, %426, %384, %369, %367, %325
  %431 = load i32*, i32** %110, align 8
  %432 = load i32*, i32** %111, align 8
  %433 = icmp eq i32* %431, %432
  %434 = ptrtoint i32* %432 to i64
  br i1 %433, label %438, label %435

435:                                              ; preds = %430
  store i32 %301, i32* %431, align 4
  %436 = getelementptr inbounds i32, i32* %431, i64 1
  %437 = ptrtoint i32* %436 to i64
  store i64 %437, i64* %253, align 8
  br label %481

438:                                              ; preds = %430
  %439 = ptrtoint i32* %431 to i64
  %440 = load i64, i64* %254, align 8
  %441 = sub i64 %439, %440
  %442 = ashr exact i64 %441, 2
  %443 = add nsw i64 %442, 1
  %444 = icmp ugt i64 %443, 4611686018427387903
  br i1 %444, label %445, label %447

445:                                              ; preds = %438
  %446 = bitcast %"class.std::__1::vector.3"* %16 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %446) #12
  unreachable

447:                                              ; preds = %438
  %448 = sub i64 %434, %440
  %449 = ashr exact i64 %448, 2
  %450 = icmp ult i64 %449, 2305843009213693951
  br i1 %450, label %451, label %459

451:                                              ; preds = %447
  %452 = ashr exact i64 %448, 1
  %453 = icmp ult i64 %452, %443
  %454 = select i1 %453, i64 %443, i64 %452
  %455 = icmp eq i64 %454, 0
  br i1 %455, label %464, label %456

456:                                              ; preds = %451
  %457 = icmp ugt i64 %454, 4611686018427387903
  br i1 %457, label %458, label %459

458:                                              ; preds = %456
  call void @abort() #12
  unreachable

459:                                              ; preds = %456, %447
  %460 = phi i64 [ %454, %456 ], [ 4611686018427387903, %447 ]
  %461 = shl i64 %460, 2
  %462 = call i8* @_Znwm(i64 %461) #10
  %463 = bitcast i8* %462 to i32*
  br label %464

464:                                              ; preds = %459, %451
  %465 = phi i64 [ %460, %459 ], [ 0, %451 ]
  %466 = phi i8* [ %462, %459 ], [ null, %451 ]
  %467 = phi i32* [ %463, %459 ], [ null, %451 ]
  %468 = getelementptr inbounds i32, i32* %467, i64 %442
  %469 = getelementptr inbounds i32, i32* %467, i64 %465
  %470 = ptrtoint i32* %469 to i64
  store i32 %301, i32* %468, align 4
  %471 = getelementptr inbounds i32, i32* %468, i64 1
  %472 = ptrtoint i32* %471 to i64
  %473 = ptrtoint i32* %467 to i64
  %474 = icmp sgt i64 %441, 0
  br i1 %474, label %475, label %477

475:                                              ; preds = %464
  %476 = inttoptr i64 %440 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %466, i8* align 4 %476, i64 %441, i1 false) #11
  br label %477

477:                                              ; preds = %475, %464
  store i64 %473, i64* %254, align 8
  store i64 %472, i64* %253, align 8
  store i64 %470, i64* %255, align 8
  %478 = icmp eq i64 %440, 0
  br i1 %478, label %481, label %479

479:                                              ; preds = %477
  %480 = inttoptr i64 %440 to i8*
  call void @_ZdlPv(i8* %480) #10
  br label %481

481:                                              ; preds = %435, %477, %479
  %482 = getelementptr inbounds i32, i32* %300, i64 1
  %483 = icmp eq i32* %482, %248
  br i1 %483, label %256, label %299

484:                                              ; preds = %293
  %485 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %485, i64 0, i32 8
  %487 = getelementptr inbounds %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.152"* %486, i64 0, i32 0, i32 0, i32 0
  %488 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %487, align 8
  %489 = icmp eq %"class.spvtools::opt::FeatureManager"* %488, null
  br i1 %489, label %490, label %501

490:                                              ; preds = %484
  %491 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %485, i64 0, i32 1
  %492 = call i8* @_Znwm(i64 48) #10
  %493 = bitcast i8* %492 to %"class.spvtools::AssemblyGrammar"**
  store %"class.spvtools::AssemblyGrammar"* %491, %"class.spvtools::AssemblyGrammar"** %493, align 8
  %494 = getelementptr inbounds i8, i8* %492, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %494, i8 0, i64 40, i1 false) #11
  %495 = ptrtoint i8* %492 to i64
  %496 = bitcast %"class.std::__1::unique_ptr.152"* %486 to i64*
  store i64 %495, i64* %496, align 8
  %497 = bitcast i8* %492 to %"class.spvtools::opt::FeatureManager"*
  %498 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %485, i64 0, i32 4, i32 0, i32 0, i32 0
  %499 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %498, align 8
  call void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"* nonnull %497, %"class.spvtools::opt::Module"* %499) #11
  %500 = load %"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::FeatureManager"** %487, align 8
  br label %501

501:                                              ; preds = %484, %490
  %502 = phi %"class.spvtools::opt::FeatureManager"* [ %488, %484 ], [ %500, %490 ]
  %503 = getelementptr inbounds %"class.spvtools::opt::FeatureManager", %"class.spvtools::opt::FeatureManager"* %502, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %504 = load %"class.std::__1::set.158"*, %"class.std::__1::set.158"** %503, align 8
  %505 = icmp eq %"class.std::__1::set.158"* %504, null
  br i1 %505, label %532, label %506

506:                                              ; preds = %501
  %507 = getelementptr inbounds %"class.std::__1::set.158", %"class.std::__1::set.158"* %504, i64 0, i32 0, i32 1, i32 0, i32 0
  %508 = bitcast %"class.std::__1::__tree_end_node"* %507 to %"class.std::__1::__tree_node"**
  %509 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %508, align 8
  %510 = icmp eq %"class.std::__1::__tree_node"* %509, null
  br i1 %510, label %532, label %511

511:                                              ; preds = %506, %511
  %512 = phi %"class.std::__1::__tree_end_node"* [ %522, %511 ], [ %507, %506 ]
  %513 = phi %"class.std::__1::__tree_node"* [ %523, %511 ], [ %509, %506 ]
  %514 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %513, i64 0, i32 1
  %515 = load i32, i32* %514, align 4
  %516 = icmp ult i32 %515, 4442
  %517 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %513, i64 0, i32 0, i32 1
  %518 = bitcast %"class.std::__1::__tree_node_base"** %517 to %"class.std::__1::__tree_node"**
  %519 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %513, i64 0, i32 0, i32 0
  %520 = bitcast %"class.std::__1::__tree_node"* %513 to %"class.std::__1::__tree_node"**
  %521 = select i1 %516, %"class.std::__1::__tree_node"** %518, %"class.std::__1::__tree_node"** %520
  %522 = select i1 %516, %"class.std::__1::__tree_end_node"* %512, %"class.std::__1::__tree_end_node"* %519
  %523 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %521, align 8
  %524 = icmp eq %"class.std::__1::__tree_node"* %523, null
  br i1 %524, label %525, label %511

525:                                              ; preds = %511
  %526 = icmp eq %"class.std::__1::__tree_end_node"* %522, %507
  br i1 %526, label %532, label %527

527:                                              ; preds = %525
  %528 = bitcast %"class.std::__1::__tree_end_node"* %522 to %"class.std::__1::__tree_node"*
  %529 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %528, i64 0, i32 1
  %530 = load i32, i32* %529, align 4
  %531 = icmp ugt i32 %530, 4442
  br label %532

532:                                              ; preds = %527, %525, %506, %501
  %533 = phi i1 [ true, %501 ], [ true, %506 ], [ true, %525 ], [ %531, %527 ]
  %534 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %295, i64 0, i32 3
  %535 = load i8, i8* %534, align 4, !range !7
  %536 = icmp eq i8 %535, 0
  %537 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %295, i64 0, i32 4
  %538 = load i8, i8* %537, align 1, !range !7
  %539 = icmp eq i8 %538, 0
  %540 = select i1 %539, i32 1, i32 2
  %541 = xor i1 %539, true
  %542 = zext i1 %541 to i32
  %543 = select i1 %536, i32 %542, i32 %540
  %544 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %295, i32 %543) #11
  %545 = or i32 %544, 8
  %546 = icmp ne i32 %545, 12
  %547 = or i1 %533, %546
  br i1 %547, label %548, label %745

548:                                              ; preds = %532
  %549 = bitcast %"class.std::__1::unique_ptr.21"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %549) #11
  %550 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %550, align 8
  %551 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %552 = call %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::IRContext"* %551) #11
  %553 = ptrtoint %"class.spvtools::opt::Instruction"* %552 to i64
  %554 = bitcast %"class.std::__1::unique_ptr.21"* %18 to i64*
  store i64 %553, i64* %554, align 8
  %555 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %556 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %555, i64 0, i32 4, i32 0, i32 0, i32 0
  %557 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %556, align 8
  %558 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %557) #11
  %559 = icmp eq i32 %558, 0
  br i1 %559, label %560, label %572

560:                                              ; preds = %548
  %561 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %555, i64 0, i32 5, i32 0, i32 2
  %562 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %561, align 8
  %563 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %562, i64 0, i32 2
  %564 = load i8, i8* %563, align 8, !range !7
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %566, label %572

566:                                              ; preds = %560
  %567 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %567, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %568 = getelementptr inbounds i8, i8* %567, i64 37
  store i8 0, i8* %568, align 1
  %569 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %555, i64 0, i32 5, i32 0, i32 1, i32 0
  %570 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %569, align 8
  %571 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %555, i64 0, i32 5, i32 0, i32 0
  call void %570(%"union.std::__1::__function::__policy_storage"* %571, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %567) #11
  call void @_ZdlPv(i8* nonnull %567) #10
  br label %572

572:                                              ; preds = %548, %560, %566
  %573 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %550, align 8
  %574 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %573, i64 0, i32 3
  %575 = load i8, i8* %574, align 4, !range !7
  %576 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %576) #11
  %577 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %577, align 8
  %578 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %579 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %580 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %581 = bitcast i32** %579 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %580, %"struct.std::__1::aligned_storage<4, 4>::type"** %581, align 8
  %582 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %583 = bitcast %"class.std::__1::unique_ptr.0"* %582 to i64*
  store i64 0, i64* %583, align 8
  %584 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %580 to i32*
  store i64 1, i64* %578, align 8
  store i32 %558, i32* %584, align 8
  %585 = zext i8 %575 to i64
  %586 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %573, i64 0, i32 6, i32 0, i32 0
  %587 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %586, align 8
  %588 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %587, i64 %585, i32 1
  %589 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %588, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %577, align 8
  %590 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %591 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %590, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %590, align 8
  %592 = icmp eq %"class.std::__1::vector.3"* %591, null
  br i1 %592, label %604, label %593

593:                                              ; preds = %572
  %594 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %591, i64 0, i32 0, i32 0
  %595 = load i32*, i32** %594, align 8
  %596 = icmp eq i32* %595, null
  br i1 %596, label %602, label %597

597:                                              ; preds = %593
  %598 = ptrtoint i32* %595 to i64
  %599 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %591, i64 0, i32 0, i32 1
  %600 = bitcast i32** %599 to i64*
  store i64 %598, i64* %600, align 8
  %601 = bitcast i32* %595 to i8*
  call void @_ZdlPv(i8* %601) #10
  br label %602

602:                                              ; preds = %597, %593
  %603 = bitcast %"class.std::__1::vector.3"* %591 to i8*
  call void @_ZdlPv(i8* %603) #10
  br label %604

604:                                              ; preds = %572, %602
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %576) #11
  %605 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %606 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %605, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %607 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %606, align 8, !noalias !100
  %608 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %607, i64 0, i32 2
  %609 = load i32, i32* %608, align 8
  %610 = icmp eq i32 %609, 245
  br i1 %610, label %611, label %622

611:                                              ; preds = %604, %611
  %612 = phi %"class.spvtools::opt::Instruction"* [ %618, %611 ], [ %607, %604 ]
  %613 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %612, i64 0, i32 0, i32 1
  %614 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %613, align 8
  %615 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %614, i64 0, i32 0, i32 3
  %616 = load i8, i8* %615, align 8, !range !7
  %617 = icmp eq i8 %616, 0
  %618 = select i1 %617, %"class.spvtools::opt::Instruction"* %614, %"class.spvtools::opt::Instruction"* null
  %619 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %618, i64 0, i32 2
  %620 = load i32, i32* %619, align 8
  %621 = icmp eq i32 %620, 245
  br i1 %621, label %611, label %622

622:                                              ; preds = %611, %604
  %623 = phi %"class.spvtools::opt::Instruction"* [ %607, %604 ], [ %618, %611 ]
  %624 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"* %623, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %18) #11
  %625 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %626 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %625, i64 0, i32 11
  %627 = load i32, i32* %626, align 8
  %628 = and i32 %627, 1
  %629 = icmp eq i32 %628, 0
  br i1 %629, label %630, label %654

630:                                              ; preds = %622
  %631 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %625, i64 0, i32 4, i32 0, i32 0, i32 0
  %632 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %631, align 8
  %633 = call i8* @_Znwm(i64 104) #10
  %634 = bitcast i8* %633 to %"class.spvtools::opt::analysis::DefUseManager"*
  %635 = getelementptr inbounds i8, i8* %633, i64 32
  %636 = bitcast i8* %635 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %633, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %636, align 4
  %637 = getelementptr inbounds i8, i8* %633, i64 48
  %638 = getelementptr inbounds i8, i8* %633, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %637, i8 0, i64 16, i1 false) #11
  %639 = bitcast i8* %638 to i8**
  store i8* %637, i8** %639, align 8
  %640 = getelementptr inbounds i8, i8* %633, i64 64
  %641 = getelementptr inbounds i8, i8* %633, i64 96
  %642 = bitcast i8* %641 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %640, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %642, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %634, %"class.spvtools::opt::Module"* %632) #11
  %643 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %625, i64 0, i32 6
  %644 = ptrtoint i8* %633 to i64
  %645 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %643, i64 0, i32 0, i32 0, i32 0
  %646 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %645, align 8
  %647 = bitcast %"class.std::__1::unique_ptr.62"* %643 to i64*
  store i64 %644, i64* %647, align 8
  %648 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %646, null
  br i1 %648, label %651, label %649

649:                                              ; preds = %630
  %650 = bitcast %"class.std::__1::unique_ptr.62"* %643 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %650, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %646) #11
  br label %651

651:                                              ; preds = %649, %630
  %652 = load i32, i32* %626, align 8
  %653 = or i32 %652, 1
  store i32 %653, i32* %626, align 8
  br label %654

654:                                              ; preds = %622, %651
  %655 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %625, i64 0, i32 6, i32 0, i32 0, i32 0
  %656 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %655, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %656, %"class.spvtools::opt::Instruction"* %624) #11
  %657 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %658 = bitcast %"class.spvtools::opt::BasicBlock"** %12 to i64*
  %659 = load i64, i64* %658, align 8
  %660 = bitcast %"class.spvtools::opt::Instruction"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %660)
  store %"class.spvtools::opt::Instruction"* %624, %"class.spvtools::opt::Instruction"** %7, align 8
  %661 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %657, i64 0, i32 11
  %662 = load i32, i32* %661, align 8
  %663 = and i32 %662, 2
  %664 = icmp eq i32 %663, 0
  br i1 %664, label %675, label %665

665:                                              ; preds = %654
  %666 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %657, i64 0, i32 9, i32 0
  %667 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %667) #11
  %668 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %7, %"class.spvtools::opt::Instruction"*** %668, align 8
  %669 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %669) #11
  %670 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %666, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %6) #11
  %671 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %670, 0
  %672 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %671, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %669) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %667) #11
  %673 = bitcast %"struct.std::__1::__hash_node_base.178"* %672 to i64*
  store i64 %659, i64* %673, align 8
  %674 = load i64, i64* %658, align 8
  br label %675

675:                                              ; preds = %654, %665
  %676 = phi i64 [ %659, %654 ], [ %674, %665 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %660)
  %677 = bitcast %"class.std::__1::function.1079"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %677) #11
  %678 = bitcast %"class.spvtools::opt::DominatorAnalysis"** %13 to i64*
  %679 = load i64, i64* %678, align 8
  %680 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %19, i64 0, i32 0, i32 1, i32 0
  %681 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %19, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS8_10BasicBlockERNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %680, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEPKS1_NS_17integral_constantIbLb0EEEE9__policy_", %"struct.std::__1::__function::__policy"** %681, align 8
  %682 = call i8* @_Znwm(i64 24) #10, !noalias !107
  %683 = bitcast i8* %682 to i64*
  store i64 %679, i64* %683, align 8
  %684 = getelementptr inbounds i8, i8* %682, i64 8
  %685 = bitcast i8* %684 to i64*
  store i64 %676, i64* %685, align 8
  %686 = getelementptr inbounds i8, i8* %682, i64 16
  %687 = bitcast i8* %686 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %687, align 8
  %688 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %19, i64 0, i32 0, i32 0, i32 0
  store i8* %682, i8** %688, align 8
  %689 = bitcast %"class.std::__1::function.1184"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %689) #11
  %690 = ptrtoint %"class.std::__1::function.1079"* %19 to i64
  %691 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %4, i64 0, i32 0, i32 1, i32 0
  %692 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %4, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %691, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %692, align 8
  %693 = bitcast %"class.std::__1::function.1184"* %4 to i64*
  store i64 %690, i64* %693, align 8
  %694 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %624, i64 0, i32 6, i32 0, i32 0
  %695 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %694, align 8
  %696 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %624, i64 0, i32 6, i32 0, i32 1
  %697 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %696, align 8
  %698 = icmp eq %"struct.spvtools::opt::Operand"* %695, %697
  br i1 %698, label %721, label %699

699:                                              ; preds = %675
  %700 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %4, i64 0, i32 0, i32 0
  br label %701

701:                                              ; preds = %716, %699
  %702 = phi %"struct.spvtools::opt::Operand"* [ %695, %699 ], [ %717, %716 ]
  %703 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %702, i64 0, i32 0
  %704 = load i32, i32* %703, align 8
  %705 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %704) #11
  br i1 %705, label %706, label %716

706:                                              ; preds = %701
  %707 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %702, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %708 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %707, align 8
  %709 = icmp eq %"class.std::__1::vector.3"* %708, null
  %710 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %708, i64 0, i32 0, i32 0
  %711 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %702, i64 0, i32 1, i32 2
  %712 = select i1 %709, i32** %711, i32** %710
  %713 = load i32*, i32** %712, align 8
  %714 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %691, align 8
  %715 = call zeroext i1 %714(%"union.std::__1::__function::__policy_storage"* nonnull %700, i32* %713) #11
  br i1 %715, label %716, label %719

716:                                              ; preds = %706, %701
  %717 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %702, i64 1
  %718 = icmp eq %"struct.spvtools::opt::Operand"* %717, %697
  br i1 %718, label %719, label %701

719:                                              ; preds = %716, %706
  %720 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %692, align 8
  br label %721

721:                                              ; preds = %719, %675
  %722 = phi %"struct.std::__1::__function::__policy"* [ %720, %719 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %675 ]
  %723 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %722, i64 0, i32 1
  %724 = load void (i8*)*, void (i8*)** %723, align 8
  %725 = icmp eq void (i8*)* %724, null
  br i1 %725, label %729, label %726

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %4, i64 0, i32 0, i32 0, i32 0
  %728 = load i8*, i8** %727, align 8
  call void %724(i8* %728) #11
  br label %729

729:                                              ; preds = %721, %726
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %689) #11
  %730 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %681, align 8
  %731 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %730, i64 0, i32 1
  %732 = load void (i8*)*, void (i8*)** %731, align 8
  %733 = icmp eq void (i8*)* %732, null
  br i1 %733, label %736, label %734

734:                                              ; preds = %729
  %735 = load i8*, i8** %688, align 8
  call void %732(i8* %735) #11
  br label %736

736:                                              ; preds = %729, %734
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %677) #11
  %737 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %550, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %550, align 8
  %738 = icmp eq %"class.spvtools::opt::Instruction"* %737, null
  br i1 %738, label %744, label %739

739:                                              ; preds = %736
  %740 = bitcast %"class.spvtools::opt::Instruction"* %737 to void (%"class.spvtools::opt::Instruction"*)***
  %741 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %740, align 8
  %742 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %741, i64 1
  %743 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %742, align 8
  call void %743(%"class.spvtools::opt::Instruction"* nonnull %737) #11
  br label %744

744:                                              ; preds = %736, %739
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %549) #11
  br label %767

745:                                              ; preds = %293, %532
  %746 = bitcast %"class.spvtools::opt::InstructionBuilder"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %746) #11
  %747 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %20, i64 0, i32 0
  %748 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %20, i64 0, i32 1
  %749 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %20, i64 0, i32 3
  %750 = bitcast %"class.spvtools::opt::InstructionBuilder"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %750, i8 -86, i64 32, i1 false)
  %751 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %752 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %12, align 8
  %753 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %752, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %754 = bitcast %"class.spvtools::opt::Instruction"** %753 to i64*
  %755 = load i64, i64* %754, align 8, !noalias !112
  %756 = inttoptr i64 %755 to %"class.spvtools::opt::Instruction"*
  %757 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %751, %"class.spvtools::opt::Instruction"* %756) #11
  store %"class.spvtools::opt::IRContext"* %751, %"class.spvtools::opt::IRContext"** %747, align 8
  store %"class.spvtools::opt::BasicBlock"* %757, %"class.spvtools::opt::BasicBlock"** %748, align 8
  %758 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %20, i64 0, i32 2
  %759 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %758 to i64*
  store i64 %755, i64* %759, align 8
  store i32 3, i32* %749, align 8
  %760 = load i8, i8* %32, align 4, !range !7
  %761 = icmp eq i8 %760, 0
  br i1 %761, label %764, label %762

762:                                              ; preds = %745
  %763 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %2, i32 0) #11
  br label %764

764:                                              ; preds = %745, %762
  %765 = phi i32 [ %763, %762 ], [ 0, %745 ]
  %766 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %20, i32 %765, i32 245, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %16, i32 0) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %746) #11
  br label %767

767:                                              ; preds = %764, %744
  %768 = phi %"class.spvtools::opt::Instruction"* [ %624, %744 ], [ %766, %764 ]
  %769 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %768, i64 0, i32 4
  %770 = load i8, i8* %769, align 1, !range !7
  %771 = icmp eq i8 %770, 0
  br i1 %771, label %777, label %772

772:                                              ; preds = %767
  %773 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %768, i64 0, i32 3
  %774 = load i8, i8* %773, align 4, !range !7
  %775 = zext i8 %774 to i32
  %776 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %768, i32 %775) #11
  br label %777

777:                                              ; preds = %767, %772
  %778 = phi i32 [ %776, %772 ], [ 0, %767 ]
  %779 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %41, align 8
  %780 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %42, align 8
  %781 = icmp eq %"class.spvtools::opt::Instruction"** %779, %780
  br i1 %781, label %797, label %782

782:                                              ; preds = %777
  %783 = bitcast %"class.std::__1::function.1079"* %21 to i8*
  %784 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %21, i64 0, i32 0, i32 1, i32 0
  %785 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %21, i64 0, i32 0, i32 2
  %786 = bitcast %"class.std::__1::function.1079"* %21 to %"class.spvtools::opt::Instruction"**
  %787 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %21, i64 0, i32 0, i32 0, i32 1
  %788 = bitcast [8 x i8]* %787 to i32*
  %789 = bitcast %"class.std::__1::function.1184"* %11 to i8*
  %790 = ptrtoint %"class.std::__1::function.1079"* %21 to i64
  %791 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %11, i64 0, i32 0, i32 1, i32 0
  %792 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %11, i64 0, i32 0, i32 2
  %793 = bitcast %"class.std::__1::function.1184"* %11 to i64*
  %794 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %11, i64 0, i32 0, i32 0
  %795 = getelementptr inbounds %"class.std::__1::function.1184", %"class.std::__1::function.1184"* %11, i64 0, i32 0, i32 0, i32 0
  %796 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %21, i64 0, i32 0, i32 0, i32 0
  br label %819

797:                                              ; preds = %861, %777
  %798 = load i32*, i32** %119, align 8
  %799 = icmp eq i32* %798, null
  br i1 %799, label %804, label %800

800:                                              ; preds = %797
  %801 = ptrtoint i32* %798 to i64
  %802 = bitcast i32** %120 to i64*
  store i64 %801, i64* %802, align 8
  %803 = bitcast i32* %798 to i8*
  call void @_ZdlPv(i8* %803) #10
  br label %804

804:                                              ; preds = %797, %800
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #11
  %805 = load i32*, i32** %109, align 8
  %806 = icmp eq i32* %805, null
  br i1 %806, label %811, label %807

807:                                              ; preds = %804
  %808 = ptrtoint i32* %805 to i64
  %809 = bitcast i32** %110 to i64*
  store i64 %808, i64* %809, align 8
  %810 = bitcast i32* %805 to i8*
  call void @_ZdlPv(i8* %810) #10
  br label %811

811:                                              ; preds = %804, %807
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #11
  %812 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %41, align 8
  %813 = icmp eq %"class.spvtools::opt::Instruction"** %812, null
  br i1 %813, label %818, label %814

814:                                              ; preds = %811
  %815 = ptrtoint %"class.spvtools::opt::Instruction"** %812 to i64
  %816 = bitcast %"class.spvtools::opt::Instruction"*** %42 to i64*
  store i64 %815, i64* %816, align 8
  %817 = bitcast %"class.spvtools::opt::Instruction"** %812 to i8*
  call void @_ZdlPv(i8* %817) #10
  br label %818

818:                                              ; preds = %811, %814
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  br label %872

819:                                              ; preds = %782, %861
  %820 = phi %"class.spvtools::opt::Instruction"** [ %779, %782 ], [ %863, %861 ]
  %821 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %820, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %783) #11
  store void (%"union.std::__1::__function::__policy_storage"*, i32*)* @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS8_10BasicBlockERNS8_11InstructionEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_", void (%"union.std::__1::__function::__policy_storage"*, i32*)** %784, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_4FvPjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %785, align 8
  store %"class.spvtools::opt::Instruction"* %2, %"class.spvtools::opt::Instruction"** %786, align 8
  store i32 %778, i32* %788, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %789) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, i32*)* @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %791, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %792, align 8
  store i64 %790, i64* %793, align 8
  %822 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %821, i64 0, i32 6, i32 0, i32 0
  %823 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %822, align 8
  %824 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %821, i64 0, i32 6, i32 0, i32 1
  %825 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %824, align 8
  %826 = icmp eq %"struct.spvtools::opt::Operand"* %823, %825
  br i1 %826, label %847, label %827

827:                                              ; preds = %819, %842
  %828 = phi %"struct.spvtools::opt::Operand"* [ %843, %842 ], [ %823, %819 ]
  %829 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %828, i64 0, i32 0
  %830 = load i32, i32* %829, align 8
  %831 = call zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32 %830) #11
  br i1 %831, label %832, label %842

832:                                              ; preds = %827
  %833 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %828, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %834 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %833, align 8
  %835 = icmp eq %"class.std::__1::vector.3"* %834, null
  %836 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %834, i64 0, i32 0, i32 0
  %837 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %828, i64 0, i32 1, i32 2
  %838 = select i1 %835, i32** %837, i32** %836
  %839 = load i32*, i32** %838, align 8
  %840 = load i1 (%"union.std::__1::__function::__policy_storage"*, i32*)*, i1 (%"union.std::__1::__function::__policy_storage"*, i32*)** %791, align 8
  %841 = call zeroext i1 %840(%"union.std::__1::__function::__policy_storage"* nonnull %794, i32* %839) #11
  br i1 %841, label %842, label %845

842:                                              ; preds = %832, %827
  %843 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %828, i64 1
  %844 = icmp eq %"struct.spvtools::opt::Operand"* %843, %825
  br i1 %844, label %845, label %827

845:                                              ; preds = %842, %832
  %846 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %792, align 8
  br label %847

847:                                              ; preds = %845, %819
  %848 = phi %"struct.std::__1::__function::__policy"* [ %846, %845 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvPjEEEEUlS8_E_FbS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %819 ]
  %849 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %848, i64 0, i32 1
  %850 = load void (i8*)*, void (i8*)** %849, align 8
  %851 = icmp eq void (i8*)* %850, null
  br i1 %851, label %854, label %852

852:                                              ; preds = %847
  %853 = load i8*, i8** %795, align 8
  call void %850(i8* %853) #11
  br label %854

854:                                              ; preds = %847, %852
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %789) #11
  %855 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %785, align 8
  %856 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %855, i64 0, i32 1
  %857 = load void (i8*)*, void (i8*)** %856, align 8
  %858 = icmp eq void (i8*)* %857, null
  br i1 %858, label %861, label %859

859:                                              ; preds = %854
  %860 = load i8*, i8** %796, align 8
  call void %857(i8* %860) #11
  br label %861

861:                                              ; preds = %854, %859
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %783) #11
  %862 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  call void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %862, %"class.spvtools::opt::Instruction"* %821) #11
  %863 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %820, i64 1
  %864 = icmp eq %"class.spvtools::opt::Instruction"** %863, %780
  br i1 %864, label %797, label %819

865:                                              ; preds = %95
  %866 = icmp eq %"class.spvtools::opt::Instruction"** %96, null
  br i1 %866, label %871, label %867

867:                                              ; preds = %865
  %868 = ptrtoint %"class.spvtools::opt::Instruction"** %96 to i64
  %869 = bitcast %"class.spvtools::opt::Instruction"*** %42 to i64*
  store i64 %868, i64* %869, align 8
  %870 = bitcast %"class.spvtools::opt::Instruction"** %96 to i8*
  call void @_ZdlPv(i8* %870) #10
  br label %871

871:                                              ; preds = %865, %867
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #11
  br label %872

872:                                              ; preds = %3, %31, %818, %871
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  ret void
}

declare %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Function"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %4 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 2
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"* %0)
  br label %9

9:                                                ; preds = %2, %8
  %10 = lshr i64 %3, 32
  %11 = shl i64 %3, 3
  %12 = and i64 %11, 4294967288
  %13 = add nuw nsw i64 %12, 8
  %14 = xor i64 %13, %10
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %15, %10
  %18 = xor i64 %17, %16
  %19 = mul i64 %18, -7070675565921424023
  %20 = lshr i64 %19, 47
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, -7070675565921424023
  %23 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %78, label %26

26:                                               ; preds = %9
  %27 = tail call i64 @llvm.ctpop.i64(i64 %24) #11, !range !15
  %28 = icmp ugt i64 %27, 1
  br i1 %28, label %32, label %29

29:                                               ; preds = %26
  %30 = add i64 %24, -1
  %31 = and i64 %30, %22
  br label %36

32:                                               ; preds = %26
  %33 = icmp ult i64 %22, %24
  br i1 %33, label %36, label %34

34:                                               ; preds = %32
  %35 = urem i64 %22, %24
  br label %36

36:                                               ; preds = %34, %32, %29
  %37 = phi i64 [ %31, %29 ], [ %35, %34 ], [ %22, %32 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %38, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, i64 %37
  %41 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.178"* %41, null
  br i1 %42, label %78, label %43

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %41, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %46 = icmp eq %"struct.std::__1::__hash_node_base.178"* %45, null
  br i1 %46, label %78, label %47

47:                                               ; preds = %43
  %48 = add i64 %24, -1
  br label %49

49:                                               ; preds = %70, %47
  %50 = phi %"struct.std::__1::__hash_node_base.178"* [ %45, %47 ], [ %72, %70 ]
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 1
  %52 = bitcast %"struct.std::__1::__hash_node_base.178"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, %22
  br i1 %54, label %65, label %55

55:                                               ; preds = %49
  br i1 %28, label %58, label %56

56:                                               ; preds = %55
  %57 = and i64 %53, %48
  br label %62

58:                                               ; preds = %55
  %59 = icmp ult i64 %53, %24
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %53, %24
  br label %62

62:                                               ; preds = %60, %58, %56
  %63 = phi i64 [ %57, %56 ], [ %61, %60 ], [ %53, %58 ]
  %64 = icmp eq i64 %63, %37
  br i1 %64, label %70, label %78

65:                                               ; preds = %49
  %66 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 2
  %67 = bitcast %"struct.std::__1::__hash_node_base.178"* %66 to %"class.spvtools::opt::Instruction"**
  %68 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %67, align 8
  %69 = icmp eq %"class.spvtools::opt::Instruction"* %68, %1
  br i1 %69, label %74, label %70

70:                                               ; preds = %65, %62
  %71 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 0, i32 0
  %72 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %71, align 8
  %73 = icmp eq %"struct.std::__1::__hash_node_base.178"* %72, null
  br i1 %73, label %78, label %49

74:                                               ; preds = %65
  %75 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %50, i64 3
  %76 = bitcast %"struct.std::__1::__hash_node_base.178"* %75 to %"class.spvtools::opt::BasicBlock"**
  %77 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %76, align 8
  br label %78

78:                                               ; preds = %70, %62, %43, %9, %36, %74
  %79 = phi %"class.spvtools::opt::BasicBlock"* [ %77, %74 ], [ null, %36 ], [ null, %9 ], [ null, %43 ], [ null, %62 ], [ null, %70 ]
  ret %"class.spvtools::opt::BasicBlock"* %79
}

declare void @_ZNK8spvtools3opt8analysis13DefUseManager11ForEachUserEPKNS0_11InstructionERKNSt3__18functionIFvPS3_EEE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*, %"class.std::__1::function.1047"* dereferenceable(32)) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZNK8spvtools3opt11Instruction5CloneEPNS0_9IRContextE(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt11Instruction12InsertBeforeEONSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(%"class.spvtools::opt::Instruction"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext11AnalyzeUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1088"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8spvtools3opt15MergeReturnPass18BreakFromConstructEPNS0_10BasicBlockEPNSt3__113unordered_setIS3_NS4_4hashIS3_EENS4_8equal_toIS3_EENS4_9allocatorIS3_EEEEPNS4_4listIS3_SB_EEPNS0_11InstructionE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::unordered_set.1013"*, %"class.std::__1::list"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::function.1167", align 8
  %7 = alloca %"class.std::__1::function.1047", align 8
  %8 = alloca %"class.std::__1::tuple.1328", align 8
  %9 = alloca %"class.std::__1::tuple.1131", align 1
  %10 = alloca %"class.std::__1::tuple.1328", align 8
  %11 = alloca %"class.std::__1::tuple.1131", align 1
  %12 = alloca %"class.std::__1::tuple.1157", align 8
  %13 = alloca %"class.std::__1::tuple.1131", align 1
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::__1::function.1088", align 8
  %16 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %17 = alloca i32, align 4
  %18 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  %19 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %20 = alloca %"class.spvtools::utils::SmallVector", align 8
  %21 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %22 = alloca %"class.spvtools::opt::analysis::Bool", align 8
  %23 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %24 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  tail call void @_ZN8spvtools3opt9IRContext20BuildInvalidAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"* %24, i32 16) #11
  %25 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %1) #11
  %26 = icmp eq %"class.spvtools::opt::Instruction"* %25, null
  br i1 %26, label %54, label %27

27:                                               ; preds = %5
  %28 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %29 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 11
  %30 = load i32, i32* %29, align 8
  %31 = and i32 %30, 16
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %34, align 8
  %36 = tail call i8* @_Znwm(i64 400) #10
  %37 = bitcast i8* %36 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %37, %"class.spvtools::opt::Module"* %35) #11
  %38 = ptrtoint i8* %36 to i64
  %39 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 15
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.273"* %39 to i64*
  store i64 %38, i64* %42, align 8
  %43 = icmp eq %"class.spvtools::opt::CFG"* %41, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %33
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %41) #11
  %45 = bitcast %"class.spvtools::opt::CFG"* %41 to i8*
  tail call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %44, %33
  %47 = load i32, i32* %29, align 8
  %48 = or i32 %47, 16
  store i32 %48, i32* %29, align 8
  br label %49

49:                                               ; preds = %27, %46
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %28, i64 0, i32 15, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %50, align 8
  %52 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %51, %"class.spvtools::opt::BasicBlock"* %1) #11
  %53 = icmp eq %"class.spvtools::opt::BasicBlock"* %52, null
  br i1 %53, label %796, label %54

54:                                               ; preds = %5, %49
  %55 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 3
  %56 = load i8, i8* %55, align 4, !range !7
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 4
  %59 = load i8, i8* %58, align 1, !range !7
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = xor i1 %60, true
  %63 = zext i1 %62 to i32
  %64 = select i1 %57, i32 %63, i32 %61
  %65 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %64) #11
  %66 = bitcast %"class.spvtools::opt::BasicBlock"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #11
  %67 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %68 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %67, i32 %65)
  store %"class.spvtools::opt::BasicBlock"* %68, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %69 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt10BasicBlock16GetLoopMergeInstEv(%"class.spvtools::opt::BasicBlock"* %68) #11
  %70 = icmp eq %"class.spvtools::opt::Instruction"* %69, null
  br i1 %70, label %97, label %71

71:                                               ; preds = %54
  %72 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 11
  %74 = load i32, i32* %73, align 8
  %75 = and i32 %74, 16
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %93

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 4, i32 0, i32 0, i32 0
  %79 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %78, align 8
  %80 = tail call i8* @_Znwm(i64 400) #10
  %81 = bitcast i8* %80 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %81, %"class.spvtools::opt::Module"* %79) #11
  %82 = ptrtoint i8* %80 to i64
  %83 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 15
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %83, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.273"* %83 to i64*
  store i64 %82, i64* %86, align 8
  %87 = icmp eq %"class.spvtools::opt::CFG"* %85, null
  br i1 %87, label %90, label %88

88:                                               ; preds = %77
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %85) #11
  %89 = bitcast %"class.spvtools::opt::CFG"* %85 to i8*
  tail call void @_ZdlPv(i8* %89) #10
  br label %90

90:                                               ; preds = %88, %77
  %91 = load i32, i32* %73, align 8
  %92 = or i32 %91, 16
  store i32 %92, i32* %73, align 8
  br label %93

93:                                               ; preds = %71, %90
  %94 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %72, i64 0, i32 15, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %94, align 8
  %96 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt3CFG15SplitLoopHeaderEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %95, %"class.spvtools::opt::BasicBlock"* %68) #11
  br label %97

97:                                               ; preds = %54, %93
  %98 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %99 = bitcast %"class.spvtools::opt::Instruction"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.spvtools::opt::Instruction"*
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %101, i64 0, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = icmp eq i32 %103, 245
  br i1 %104, label %105, label %115

105:                                              ; preds = %97, %105
  %106 = phi i64 [ %110, %105 ], [ %100, %97 ]
  %107 = inttoptr i64 %106 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %108 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %107, i64 0, i32 1
  %109 = bitcast %"class.spvtools::opt::Instruction"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = inttoptr i64 %110 to %"class.spvtools::opt::Instruction"*
  %112 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %111, i64 0, i32 2
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 245
  br i1 %114, label %105, label %115

115:                                              ; preds = %105, %97
  %116 = phi i64 [ %100, %97 ], [ %110, %105 ]
  %117 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %117, i64 0, i32 11
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 16
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %138

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %117, i64 0, i32 4, i32 0, i32 0, i32 0
  %124 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %123, align 8
  %125 = tail call i8* @_Znwm(i64 400) #10
  %126 = bitcast i8* %125 to %"class.spvtools::opt::CFG"*
  tail call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %126, %"class.spvtools::opt::Module"* %124) #11
  %127 = ptrtoint i8* %125 to i64
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %117, i64 0, i32 15
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %129, align 8
  %131 = bitcast %"class.std::__1::unique_ptr.273"* %128 to i64*
  store i64 %127, i64* %131, align 8
  %132 = icmp eq %"class.spvtools::opt::CFG"* %130, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %122
  tail call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %130) #11
  %134 = bitcast %"class.spvtools::opt::CFG"* %130 to i8*
  tail call void @_ZdlPv(i8* %134) #10
  br label %135

135:                                              ; preds = %133, %122
  %136 = load i32, i32* %118, align 8
  %137 = or i32 %136, 16
  store i32 %137, i32* %118, align 8
  br label %138

138:                                              ; preds = %115, %135
  %139 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %117, i64 0, i32 15, i32 0, i32 0, i32 0
  %140 = bitcast %"class.spvtools::opt::CFG"** %139 to i64*
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.std::__1::function.1088"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %142) #11
  %143 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %15, i64 0, i32 0, i32 1, i32 0
  %144 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %15, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, i32)* @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj, void (%"union.std::__1::__function::__policy_storage"*, i32)** %143, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS5_10BasicBlockEEUljE_FvjEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %144, align 8
  %145 = bitcast %"class.std::__1::function.1088"* %15 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %145, align 8
  %146 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %15, i64 0, i32 0, i32 0, i32 1
  %147 = bitcast [8 x i8]* %146 to i64*
  store i64 %141, i64* %147, align 8
  call void @_ZNK8spvtools3opt10BasicBlock21ForEachSuccessorLabelERKNSt3__18functionIFvjEEE(%"class.spvtools::opt::BasicBlock"* %1, %"class.std::__1::function.1088"* nonnull dereferenceable(32) %15) #11
  %148 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %144, align 8
  %149 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %148, i64 0, i32 1
  %150 = load void (i8*)*, void (i8*)** %149, align 8
  %151 = icmp eq void (i8*)* %150, null
  br i1 %151, label %155, label %152

152:                                              ; preds = %138
  %153 = getelementptr inbounds %"class.std::__1::function.1088", %"class.std::__1::function.1088"* %15, i64 0, i32 0, i32 0, i32 0
  %154 = load i8*, i8** %153, align 8
  call void %150(i8* %154) #11
  br label %155

155:                                              ; preds = %138, %152
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %142) #11
  %156 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %156) #11
  store i32 -1431655766, i32* %17, align 4
  %157 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %158 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %157, i64 0, i32 4, i32 0, i32 0, i32 0
  %159 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %158, align 8
  %160 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %159) #11
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %155
  %163 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %157, i64 0, i32 5, i32 0, i32 2
  %164 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %164, i64 0, i32 2
  %166 = load i8, i8* %165, align 8, !range !7
  %167 = icmp eq i8 %166, 0
  br i1 %167, label %168, label %174

168:                                              ; preds = %162
  %169 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %170 = getelementptr inbounds i8, i8* %169, i64 37
  store i8 0, i8* %170, align 1
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %157, i64 0, i32 5, i32 0, i32 1, i32 0
  %172 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %171, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %157, i64 0, i32 5, i32 0, i32 0
  call void %172(%"union.std::__1::__function::__policy_storage"* %173, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %169) #11
  call void @_ZdlPv(i8* nonnull %169) #10
  br label %174

174:                                              ; preds = %155, %162, %168
  store i32 %160, i32* %17, align 4
  %175 = bitcast %"class.spvtools::opt::BasicBlock"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %175) #11
  store %"class.spvtools::opt::BasicBlock"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::BasicBlock"*), %"class.spvtools::opt::BasicBlock"** %18, align 8
  %176 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %177 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %19 to i64*
  store i64 %116, i64* %177, align 8
  %178 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10BasicBlock15SplitBasicBlockEPNS0_9IRContextEjNS0_15InstructionList8iteratorE(%"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::IRContext"* %176, i32 %160, %"class.spvtools::opt::InstructionList::iterator"* nonnull %19) #11
  store %"class.spvtools::opt::BasicBlock"* %178, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %179 = getelementptr inbounds %"class.std::__1::unordered_set.1013", %"class.std::__1::unordered_set.1013"* %2, i64 0, i32 0
  %180 = call { %"struct.std::__1::__hash_node_base.1018"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1014"* %179, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %18, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %18) #11
  %181 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 9
  %182 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %183 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, align 8
  %184 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %183, i64 0, i32 4
  %185 = load i8, i8* %184, align 1, !range !7
  %186 = icmp eq i8 %185, 0
  br i1 %186, label %192, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %183, i64 0, i32 3
  %189 = load i8, i8* %188, align 4, !range !7
  %190 = zext i8 %189 to i32
  %191 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %183, i32 %190) #11
  br label %192

192:                                              ; preds = %174, %187
  %193 = phi i32 [ %191, %187 ], [ 0, %174 ]
  %194 = zext i32 %193 to i64
  %195 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %196 = load i64, i64* %195, align 8
  %197 = icmp eq i64 %196, 0
  br i1 %197, label %249, label %198

198:                                              ; preds = %192
  %199 = call i64 @llvm.ctpop.i64(i64 %196) #11, !range !15
  %200 = icmp ugt i64 %199, 1
  br i1 %200, label %204, label %201

201:                                              ; preds = %198
  %202 = add i64 %196, 4294967295
  %203 = and i64 %202, %194
  br label %208

204:                                              ; preds = %198
  %205 = icmp ugt i64 %196, %194
  br i1 %205, label %208, label %206

206:                                              ; preds = %204
  %207 = urem i64 %194, %196
  br label %208

208:                                              ; preds = %206, %204, %201
  %209 = phi i64 [ %203, %201 ], [ %207, %206 ], [ %194, %204 ]
  %210 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %181, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %210, align 8
  %212 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %211, i64 %209
  %213 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %212, align 8
  %214 = icmp eq %"struct.std::__1::__hash_node_base.915"* %213, null
  br i1 %214, label %249, label %215

215:                                              ; preds = %208
  %216 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %213, i64 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.915"* %217, null
  br i1 %218, label %249, label %219

219:                                              ; preds = %215
  %220 = add i64 %196, -1
  br label %221

221:                                              ; preds = %242, %219
  %222 = phi %"struct.std::__1::__hash_node_base.915"* [ %217, %219 ], [ %244, %242 ]
  %223 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %222, i64 1
  %224 = bitcast %"struct.std::__1::__hash_node_base.915"* %223 to i64*
  %225 = load i64, i64* %224, align 8
  %226 = icmp eq i64 %225, %194
  br i1 %226, label %237, label %227

227:                                              ; preds = %221
  br i1 %200, label %230, label %228

228:                                              ; preds = %227
  %229 = and i64 %225, %220
  br label %234

230:                                              ; preds = %227
  %231 = icmp ult i64 %225, %196
  br i1 %231, label %234, label %232

232:                                              ; preds = %230
  %233 = urem i64 %225, %196
  br label %234

234:                                              ; preds = %232, %230, %228
  %235 = phi i64 [ %229, %228 ], [ %233, %232 ], [ %225, %230 ]
  %236 = icmp eq i64 %235, %209
  br i1 %236, label %242, label %249

237:                                              ; preds = %221
  %238 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %222, i64 2
  %239 = bitcast %"struct.std::__1::__hash_node_base.915"* %238 to i32*
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, %193
  br i1 %241, label %246, label %242

242:                                              ; preds = %237, %234
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %222, i64 0, i32 0
  %244 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %243, align 8
  %245 = icmp eq %"struct.std::__1::__hash_node_base.915"* %244, null
  br i1 %245, label %249, label %221

246:                                              ; preds = %237
  %247 = getelementptr inbounds %"class.std::__1::unordered_set.910", %"class.std::__1::unordered_set.910"* %181, i64 0, i32 0
  %248 = call { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"* %247, i32* nonnull dereferenceable(4) %17, i32* nonnull dereferenceable(4) %17) #11
  br label %249

249:                                              ; preds = %234, %242, %215, %192, %208, %246
  %250 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 2
  %251 = load i32, i32* %250, align 8
  %252 = icmp eq i32 %251, 246
  br i1 %252, label %253, label %335

253:                                              ; preds = %249
  %254 = load i8, i8* %55, align 4, !range !7
  %255 = icmp eq i8 %254, 0
  %256 = load i8, i8* %58, align 1, !range !7
  %257 = icmp eq i8 %256, 0
  %258 = select i1 %257, i32 1, i32 2
  %259 = xor i1 %257, true
  %260 = zext i1 %259 to i32
  %261 = select i1 %255, i32 %260, i32 %258
  %262 = add nuw nsw i32 %261, 1
  %263 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %4, i32 %262) #11
  %264 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, align 8
  %265 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %264, i64 0, i32 4
  %266 = load i8, i8* %265, align 1, !range !7
  %267 = icmp eq i8 %266, 0
  br i1 %267, label %273, label %268

268:                                              ; preds = %253
  %269 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %264, i64 0, i32 3
  %270 = load i8, i8* %269, align 4, !range !7
  %271 = zext i8 %270 to i32
  %272 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %264, i32 %271) #11
  br label %273

273:                                              ; preds = %253, %268
  %274 = phi i32 [ %272, %268 ], [ 0, %253 ]
  %275 = icmp eq i32 %263, %274
  br i1 %275, label %276, label %335

276:                                              ; preds = %273
  %277 = bitcast %"class.spvtools::utils::SmallVector"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %277) #11
  %278 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %279 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %278, i64 0, i32 1, i32 0, i32 0, i32 0
  %280 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %279, align 8
  %281 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %280, i64 0, i32 4
  %282 = load i8, i8* %281, align 1, !range !7
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %289, label %284

284:                                              ; preds = %276
  %285 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %280, i64 0, i32 3
  %286 = load i8, i8* %285, align 4, !range !7
  %287 = zext i8 %286 to i32
  %288 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %280, i32 %287) #11
  br label %289

289:                                              ; preds = %276, %284
  %290 = phi i32 [ %288, %284 ], [ 0, %276 ]
  %291 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %292 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 1
  %293 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 2
  %294 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 3, i64 0
  %295 = bitcast i32** %293 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %294, %"struct.std::__1::aligned_storage<4, 4>::type"** %295, align 8
  %296 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4
  %297 = bitcast %"class.std::__1::unique_ptr.0"* %296 to i64*
  store i64 0, i64* %297, align 8
  %298 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %294 to i32*
  store i64 1, i64* %292, align 8
  store i32 %290, i32* %298, align 8
  %299 = load i8, i8* %55, align 4, !range !7
  %300 = icmp eq i8 %299, 0
  %301 = load i8, i8* %58, align 1, !range !7
  %302 = icmp eq i8 %301, 0
  %303 = select i1 %302, i64 1, i64 2
  %304 = xor i1 %302, true
  %305 = zext i1 %304 to i64
  %306 = select i1 %300, i64 %305, i64 %303
  %307 = add nuw nsw i64 %306, 1
  %308 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 6, i32 0, i32 0
  %309 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %308, align 8
  %310 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %309, i64 %307, i32 1
  %311 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %310, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %20) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %291, align 8
  %312 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %20, i64 0, i32 4, i32 0, i32 0, i32 0
  %313 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %312, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %312, align 8
  %314 = icmp eq %"class.std::__1::vector.3"* %313, null
  br i1 %314, label %326, label %315

315:                                              ; preds = %289
  %316 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %313, i64 0, i32 0, i32 0
  %317 = load i32*, i32** %316, align 8
  %318 = icmp eq i32* %317, null
  br i1 %318, label %324, label %319

319:                                              ; preds = %315
  %320 = ptrtoint i32* %317 to i64
  %321 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %313, i64 0, i32 0, i32 1
  %322 = bitcast i32** %321 to i64*
  store i64 %320, i64* %322, align 8
  %323 = bitcast i32* %317 to i8*
  call void @_ZdlPv(i8* %323) #10
  br label %324

324:                                              ; preds = %319, %315
  %325 = bitcast %"class.std::__1::vector.3"* %313 to i8*
  call void @_ZdlPv(i8* %325) #10
  br label %326

326:                                              ; preds = %289, %324
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %277) #11
  %327 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %328 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %327, i64 0, i32 11
  %329 = load i32, i32* %328, align 8
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %335, label %332

332:                                              ; preds = %326
  %333 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %327, i64 0, i32 6, i32 0, i32 0, i32 0
  %334 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %333, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %334, %"class.spvtools::opt::Instruction"* %4) #11
  br label %335

335:                                              ; preds = %332, %326, %273, %249
  %336 = bitcast %"class.spvtools::opt::BasicBlock"** %18 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %339 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %338, align 8
  %340 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %341 = icmp eq %"struct.std::__1::__list_node_base"* %339, %340
  br i1 %341, label %357, label %342

342:                                              ; preds = %335
  %343 = ptrtoint %"struct.std::__1::__list_node_base"* %339 to i64
  br label %344

344:                                              ; preds = %351, %342
  %345 = phi %"struct.std::__1::__list_node_base"* [ %339, %342 ], [ %355, %351 ]
  %346 = phi i64 [ %343, %342 ], [ %354, %351 ]
  %347 = inttoptr i64 %346 to %"struct.std::__1::__list_node"*
  %348 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %347, i64 0, i32 1
  %349 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %348, align 8
  %350 = icmp eq %"class.spvtools::opt::BasicBlock"* %349, %1
  br i1 %350, label %357, label %351

351:                                              ; preds = %344
  %352 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %345, i64 0, i32 1
  %353 = bitcast %"struct.std::__1::__list_node_base"** %352 to i64*
  %354 = load i64, i64* %353, align 8
  %355 = inttoptr i64 %354 to %"struct.std::__1::__list_node_base"*
  %356 = icmp eq %"struct.std::__1::__list_node_base"* %340, %355
  br i1 %356, label %357, label %344

357:                                              ; preds = %344, %351, %335
  %358 = phi %"struct.std::__1::__list_node_base"* [ %339, %335 ], [ %345, %344 ], [ %340, %351 ]
  %359 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %358, i64 0, i32 1
  %360 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %359, align 8
  %361 = call i8* @_Znwm(i64 24) #10, !noalias !119
  %362 = getelementptr inbounds i8, i8* %361, i64 16
  %363 = bitcast i8* %362 to i64*
  store i64 %337, i64* %363, align 8
  %364 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %360, i64 0, i32 0
  %365 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %364, align 8
  %366 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %365, i64 0, i32 1
  %367 = bitcast %"struct.std::__1::__list_node_base"** %366 to i8**
  store i8* %361, i8** %367, align 8
  %368 = bitcast %"struct.std::__1::__list_node_base"* %360 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast i8* %361 to i64*
  store i64 %369, i64* %370, align 8
  %371 = bitcast %"struct.std::__1::__list_node_base"* %360 to i8**
  store i8* %361, i8** %371, align 8
  %372 = getelementptr inbounds i8, i8* %361, i64 8
  %373 = bitcast i8* %372 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %360, %"struct.std::__1::__list_node_base"** %373, align 8
  %374 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %375 = load i64, i64* %374, align 8
  %376 = add i64 %375, 1
  store i64 %376, i64* %374, align 8
  %377 = bitcast %"class.spvtools::opt::InstructionBuilder"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %377) #11
  %378 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 0
  %379 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 1
  %380 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 3
  %381 = bitcast %"class.spvtools::opt::InstructionBuilder"* %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %381, i8 -86, i64 32, i1 false)
  %382 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %383 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  %384 = ptrtoint %"class.spvtools::opt::Instruction"* %383 to i64
  store %"class.spvtools::opt::IRContext"* %382, %"class.spvtools::opt::IRContext"** %378, align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %379, align 8
  %385 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %21, i64 0, i32 2
  %386 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %385 to i64*
  store i64 %384, i64* %386, align 8
  store i32 3, i32* %380, align 8
  %387 = bitcast %"class.spvtools::opt::analysis::Bool"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %387) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %387, i8 -86, i64 40, i1 false)
  %388 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %22, i64 0, i32 0, i32 0
  %389 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %22, i64 0, i32 0, i32 1
  %390 = bitcast %"class.std::__1::vector.463"* %389 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %390, i8 0, i64 24, i1 false) #11
  %391 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %22, i64 0, i32 0, i32 2
  store i32 1, i32* %391, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4BoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %388, align 8
  %392 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %382, i64 0, i32 11
  %393 = load i32, i32* %392, align 8
  %394 = trunc i32 %393 to i16
  %395 = icmp slt i16 %394, 0
  br i1 %395, label %411, label %396

396:                                              ; preds = %357
  %397 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %382, i64 0, i32 5
  %398 = call i8* @_Znwm(i64 240) #10
  %399 = bitcast i8* %398 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %399, %"class.std::__1::function"* dereferenceable(32) %397, %"class.spvtools::opt::IRContext"* %382) #11
  %400 = ptrtoint i8* %398 to i64
  %401 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %382, i64 0, i32 20
  %402 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %401, i64 0, i32 0, i32 0, i32 0
  %403 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %402, align 8
  %404 = bitcast %"class.std::__1::unique_ptr.480"* %401 to i64*
  store i64 %400, i64* %404, align 8
  %405 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %403, null
  br i1 %405, label %408, label %406

406:                                              ; preds = %396
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %403) #11
  %407 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %403 to i8*
  call void @_ZdlPv(i8* %407) #10
  br label %408

408:                                              ; preds = %406, %396
  %409 = load i32, i32* %392, align 8
  %410 = or i32 %409, 32768
  store i32 %410, i32* %392, align 8
  br label %411

411:                                              ; preds = %357, %408
  %412 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %382, i64 0, i32 20, i32 0, i32 0, i32 0
  %413 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %412, align 8
  %414 = bitcast %"class.spvtools::opt::analysis::Bool"* %22 to %"class.spvtools::opt::analysis::Type"*
  %415 = call i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %413, %"class.spvtools::opt::analysis::Type"* nonnull %414) #11
  %416 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 3
  %417 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %416, align 8
  %418 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %417, i64 0, i32 4
  %419 = load i8, i8* %418, align 1, !range !7
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %426, label %421

421:                                              ; preds = %411
  %422 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %417, i64 0, i32 3
  %423 = load i8, i8* %422, align 4, !range !7
  %424 = zext i8 %423 to i32
  %425 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %417, i32 %424) #11
  br label %426

426:                                              ; preds = %411, %421
  %427 = phi i32 [ %425, %421 ], [ 0, %411 ]
  %428 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %415, i32 %427)
  %429 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %428, i64 0, i32 4
  %430 = load i8, i8* %429, align 1, !range !7
  %431 = icmp eq i8 %430, 0
  br i1 %431, label %437, label %432

432:                                              ; preds = %426
  %433 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %428, i64 0, i32 3
  %434 = load i8, i8* %433, align 4, !range !7
  %435 = zext i8 %434 to i32
  %436 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %428, i32 %435) #11
  br label %437

437:                                              ; preds = %426, %432
  %438 = phi i32 [ %436, %432 ], [ 0, %426 ]
  %439 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %440 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %439, i64 0, i32 1, i32 0, i32 0, i32 0
  %441 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %440, align 8
  %442 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %441, i64 0, i32 4
  %443 = load i8, i8* %442, align 1, !range !7
  %444 = icmp eq i8 %443, 0
  br i1 %444, label %450, label %445

445:                                              ; preds = %437
  %446 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %441, i64 0, i32 3
  %447 = load i8, i8* %446, align 4, !range !7
  %448 = zext i8 %447 to i32
  %449 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %441, i32 %448) #11
  br label %450

450:                                              ; preds = %437, %445
  %451 = phi i32 [ %449, %445 ], [ 0, %437 ]
  %452 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %453 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %452, i64 0, i32 1, i32 0, i32 0, i32 0
  %454 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %453, align 8
  %455 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %454, i64 0, i32 4
  %456 = load i8, i8* %455, align 1, !range !7
  %457 = icmp eq i8 %456, 0
  br i1 %457, label %474, label %458

458:                                              ; preds = %450
  %459 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %454, i64 0, i32 3
  %460 = load i8, i8* %459, align 4, !range !7
  %461 = zext i8 %460 to i32
  %462 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %454, i32 %461) #11
  %463 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %464 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %463, i64 0, i32 1, i32 0, i32 0, i32 0
  %465 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %464, align 8
  %466 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %465, i64 0, i32 4
  %467 = load i8, i8* %466, align 1, !range !7
  %468 = icmp eq i8 %467, 0
  br i1 %468, label %474, label %469

469:                                              ; preds = %458
  %470 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %465, i64 0, i32 3
  %471 = load i8, i8* %470, align 4, !range !7
  %472 = zext i8 %471 to i32
  %473 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %465, i32 %472) #11
  br label %474

474:                                              ; preds = %450, %458, %469
  %475 = phi i32 [ %462, %469 ], [ %462, %458 ], [ 0, %450 ]
  %476 = phi i32 [ %473, %469 ], [ 0, %458 ], [ 0, %450 ]
  %477 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %21, i32 %438, i32 %451, i32 %475, i32 %476, i32 0)
  %478 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 8, i32 0
  %479 = bitcast %"class.std::__1::tuple.1328"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %479) #11
  %480 = getelementptr inbounds %"class.std::__1::tuple.1328", %"class.std::__1::tuple.1328"* %10, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %16, %"class.spvtools::opt::BasicBlock"*** %480, align 8
  %481 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %481) #11
  %482 = call { %"struct.std::__1::__hash_node_base.972"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.968"* %478, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1328"* nonnull dereferenceable(8) %10, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %11) #11
  %483 = extractvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } %482, 0
  %484 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %483, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %481) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %479) #11
  %485 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %182, align 8
  %486 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %485, i64 0, i32 4
  %487 = load i8, i8* %486, align 1, !range !7
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %494, label %489

489:                                              ; preds = %474
  %490 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %485, i64 0, i32 3
  %491 = load i8, i8* %490, align 4, !range !7
  %492 = zext i8 %491 to i32
  %493 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %485, i32 %492) #11
  br label %494

494:                                              ; preds = %474, %489
  %495 = phi i32 [ %493, %489 ], [ 0, %474 ]
  %496 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %483, i64 4
  %497 = bitcast %"struct.std::__1::__hash_node_base.972"* %496 to %"class.std::__1::__tree_node"**
  %498 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %497, align 8
  %499 = icmp eq %"class.std::__1::__tree_node"* %498, null
  br i1 %499, label %528, label %500

500:                                              ; preds = %494
  %501 = bitcast %"struct.std::__1::__hash_node_base.972"* %496 to %"class.std::__1::__tree_node_base"**
  br label %502

502:                                              ; preds = %524, %500
  %503 = phi %"class.std::__1::__tree_node"* [ %527, %524 ], [ %498, %500 ]
  %504 = phi %"class.std::__1::__tree_node_base"** [ %526, %524 ], [ %501, %500 ]
  %505 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 1
  %506 = load i32, i32* %505, align 4
  %507 = icmp ult i32 %495, %506
  br i1 %507, label %508, label %514

508:                                              ; preds = %502
  %509 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 0, i32 0, i32 0
  %510 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %509, align 8
  %511 = icmp eq %"class.std::__1::__tree_node_base"* %510, null
  br i1 %511, label %512, label %524

512:                                              ; preds = %508
  %513 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 0, i32 0
  br label %531

514:                                              ; preds = %502
  %515 = icmp ult i32 %506, %495
  br i1 %515, label %516, label %522

516:                                              ; preds = %514
  %517 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 0, i32 1
  %518 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %517, align 8
  %519 = icmp eq %"class.std::__1::__tree_node_base"* %518, null
  br i1 %519, label %520, label %524

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 0, i32 0
  br label %531

522:                                              ; preds = %514
  %523 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %503, i64 0, i32 0, i32 0
  br label %531

524:                                              ; preds = %516, %508
  %525 = phi %"class.std::__1::__tree_node_base"* [ %510, %508 ], [ %518, %516 ]
  %526 = phi %"class.std::__1::__tree_node_base"** [ %509, %508 ], [ %517, %516 ]
  %527 = bitcast %"class.std::__1::__tree_node_base"* %525 to %"class.std::__1::__tree_node"*
  br label %502

528:                                              ; preds = %494
  %529 = bitcast %"struct.std::__1::__hash_node_base.972"* %496 to %"class.std::__1::__tree_end_node"*
  %530 = bitcast %"struct.std::__1::__hash_node_base.972"* %496 to %"class.std::__1::__tree_node_base"**
  br label %531

531:                                              ; preds = %528, %522, %520, %512
  %532 = phi %"class.std::__1::__tree_end_node"* [ %529, %528 ], [ %513, %512 ], [ %521, %520 ], [ %523, %522 ]
  %533 = phi %"class.std::__1::__tree_node_base"** [ %530, %528 ], [ %509, %512 ], [ %517, %520 ], [ %504, %522 ]
  %534 = bitcast %"class.std::__1::__tree_node_base"** %533 to %"class.std::__1::__tree_node"**
  %535 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %534, align 8
  %536 = icmp eq %"class.std::__1::__tree_node"* %535, null
  br i1 %536, label %537, label %554

537:                                              ; preds = %531
  %538 = call i8* @_Znwm(i64 32) #10, !noalias !122
  %539 = getelementptr inbounds i8, i8* %538, i64 28
  %540 = bitcast i8* %539 to i32*
  store i32 %495, i32* %540, align 4, !noalias !122
  %541 = bitcast i8* %538 to %"class.std::__1::__tree_node_base"*
  %542 = getelementptr inbounds i8, i8* %538, i64 16
  %543 = bitcast i8* %542 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %538, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %532, %"class.std::__1::__tree_end_node"** %543, align 8
  %544 = bitcast %"class.std::__1::__tree_node_base"** %533 to i8**
  store i8* %538, i8** %544, align 8
  %545 = bitcast %"struct.std::__1::__hash_node_base.972"* %484 to %"class.std::__1::__tree_end_node"**
  %546 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %545, align 8
  %547 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %546, i64 0, i32 0
  %548 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %547, align 8
  %549 = icmp eq %"class.std::__1::__tree_node_base"* %548, null
  br i1 %549, label %632, label %550

550:                                              ; preds = %537
  %551 = ptrtoint %"class.std::__1::__tree_node_base"* %548 to i64
  %552 = bitcast %"struct.std::__1::__hash_node_base.972"* %484 to i64*
  store i64 %551, i64* %552, align 8
  %553 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %533, align 8
  br label %632

554:                                              ; preds = %531
  %555 = bitcast %"class.std::__1::tuple.1328"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %555) #11
  %556 = getelementptr inbounds %"class.std::__1::tuple.1328", %"class.std::__1::tuple.1328"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %16, %"class.spvtools::opt::BasicBlock"*** %556, align 8
  %557 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %557) #11
  %558 = call { %"struct.std::__1::__hash_node_base.972"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.968"* %478, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %16, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1328"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %9) #11
  %559 = extractvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } %558, 0
  %560 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %559, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %557) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %555) #11
  %561 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %562 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %561, i64 0, i32 1, i32 0, i32 0, i32 0
  %563 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %562, align 8
  %564 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %563, i64 0, i32 4
  %565 = load i8, i8* %564, align 1, !range !7
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %572, label %567

567:                                              ; preds = %554
  %568 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %563, i64 0, i32 3
  %569 = load i8, i8* %568, align 4, !range !7
  %570 = zext i8 %569 to i32
  %571 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %563, i32 %570) #11
  br label %572

572:                                              ; preds = %554, %567
  %573 = phi i32 [ %571, %567 ], [ 0, %554 ]
  %574 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %559, i64 4
  %575 = bitcast %"struct.std::__1::__hash_node_base.972"* %574 to %"class.std::__1::__tree_node"**
  %576 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %575, align 8
  %577 = icmp eq %"class.std::__1::__tree_node"* %576, null
  br i1 %577, label %606, label %578

578:                                              ; preds = %572
  %579 = bitcast %"struct.std::__1::__hash_node_base.972"* %574 to %"class.std::__1::__tree_node_base"**
  br label %580

580:                                              ; preds = %602, %578
  %581 = phi %"class.std::__1::__tree_node"* [ %605, %602 ], [ %576, %578 ]
  %582 = phi %"class.std::__1::__tree_node_base"** [ %604, %602 ], [ %579, %578 ]
  %583 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 1
  %584 = load i32, i32* %583, align 4
  %585 = icmp ult i32 %573, %584
  br i1 %585, label %586, label %592

586:                                              ; preds = %580
  %587 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0, i32 0
  %588 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %587, align 8
  %589 = icmp eq %"class.std::__1::__tree_node_base"* %588, null
  br i1 %589, label %590, label %602

590:                                              ; preds = %586
  %591 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %609

592:                                              ; preds = %580
  %593 = icmp ult i32 %584, %573
  br i1 %593, label %594, label %600

594:                                              ; preds = %592
  %595 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 1
  %596 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %595, align 8
  %597 = icmp eq %"class.std::__1::__tree_node_base"* %596, null
  br i1 %597, label %598, label %602

598:                                              ; preds = %594
  %599 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %609

600:                                              ; preds = %592
  %601 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %581, i64 0, i32 0, i32 0
  br label %609

602:                                              ; preds = %594, %586
  %603 = phi %"class.std::__1::__tree_node_base"* [ %588, %586 ], [ %596, %594 ]
  %604 = phi %"class.std::__1::__tree_node_base"** [ %587, %586 ], [ %595, %594 ]
  %605 = bitcast %"class.std::__1::__tree_node_base"* %603 to %"class.std::__1::__tree_node"*
  br label %580

606:                                              ; preds = %572
  %607 = bitcast %"struct.std::__1::__hash_node_base.972"* %574 to %"class.std::__1::__tree_end_node"*
  %608 = bitcast %"struct.std::__1::__hash_node_base.972"* %574 to %"class.std::__1::__tree_node_base"**
  br label %609

609:                                              ; preds = %606, %600, %598, %590
  %610 = phi %"class.std::__1::__tree_end_node"* [ %607, %606 ], [ %591, %590 ], [ %599, %598 ], [ %601, %600 ]
  %611 = phi %"class.std::__1::__tree_node_base"** [ %608, %606 ], [ %587, %590 ], [ %595, %598 ], [ %582, %600 ]
  %612 = bitcast %"class.std::__1::__tree_node_base"** %611 to %"class.std::__1::__tree_node"**
  %613 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %612, align 8
  %614 = icmp eq %"class.std::__1::__tree_node"* %613, null
  br i1 %614, label %615, label %642

615:                                              ; preds = %609
  %616 = call i8* @_Znwm(i64 32) #10, !noalias !125
  %617 = getelementptr inbounds i8, i8* %616, i64 28
  %618 = bitcast i8* %617 to i32*
  store i32 %573, i32* %618, align 4, !noalias !125
  %619 = bitcast i8* %616 to %"class.std::__1::__tree_node_base"*
  %620 = getelementptr inbounds i8, i8* %616, i64 16
  %621 = bitcast i8* %620 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %616, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %610, %"class.std::__1::__tree_end_node"** %621, align 8
  %622 = bitcast %"class.std::__1::__tree_node_base"** %611 to i8**
  store i8* %616, i8** %622, align 8
  %623 = bitcast %"struct.std::__1::__hash_node_base.972"* %560 to %"class.std::__1::__tree_end_node"**
  %624 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %623, align 8
  %625 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %624, i64 0, i32 0
  %626 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %625, align 8
  %627 = icmp eq %"class.std::__1::__tree_node_base"* %626, null
  br i1 %627, label %632, label %628

628:                                              ; preds = %615
  %629 = ptrtoint %"class.std::__1::__tree_node_base"* %626 to i64
  %630 = bitcast %"struct.std::__1::__hash_node_base.972"* %560 to i64*
  store i64 %629, i64* %630, align 8
  %631 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %611, align 8
  br label %632

632:                                              ; preds = %615, %628, %550, %537
  %633 = phi %"struct.std::__1::__hash_node_base.972"* [ %496, %537 ], [ %496, %550 ], [ %574, %628 ], [ %574, %615 ]
  %634 = phi %"class.std::__1::__tree_node_base"* [ %541, %537 ], [ %553, %550 ], [ %631, %628 ], [ %619, %615 ]
  %635 = phi %"struct.std::__1::__hash_node_base.972"* [ %483, %537 ], [ %483, %550 ], [ %559, %628 ], [ %559, %615 ]
  %636 = bitcast %"struct.std::__1::__hash_node_base.972"* %633 to %"class.std::__1::__tree_node_base"**
  %637 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %636, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %637, %"class.std::__1::__tree_node_base"* %634) #11
  %638 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %635, i64 5
  %639 = bitcast %"struct.std::__1::__hash_node_base.972"* %638 to i64*
  %640 = load i64, i64* %639, align 8
  %641 = add i64 %640, 1
  store i64 %641, i64* %639, align 8
  br label %642

642:                                              ; preds = %632, %609
  %643 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %644 = bitcast %"class.std::__1::function.1047"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %644) #11
  %645 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 1, i32 0
  %646 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 2
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass14UpdatePhiNodesEPNS3_10BasicBlockESC_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_", void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %645, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass14UpdatePhiNodesEPNS5_10BasicBlockES8_E3$_1FvPNS5_11InstructionEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %646, align 8
  %647 = bitcast %"class.std::__1::function.1047"* %7 to %"class.spvtools::opt::MergeReturnPass"**
  store %"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::MergeReturnPass"** %647, align 8
  %648 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 0, i32 1
  %649 = bitcast [8 x i8]* %648 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %649, align 8
  %650 = bitcast %"class.std::__1::function.1167"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %650) #11
  %651 = ptrtoint %"class.std::__1::function.1047"* %7 to i64
  %652 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 1, i32 0
  %653 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %652, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %653, align 8
  %654 = bitcast %"class.std::__1::function.1167"* %6 to i64*
  store i64 %651, i64* %654, align 8
  %655 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %643, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %656 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %655, align 8
  %657 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %656, i64 0, i32 0, i32 3
  %658 = load i8, i8* %657, align 8, !range !7
  %659 = icmp ne i8 %658, 0
  %660 = icmp eq %"class.spvtools::opt::Instruction"* %656, null
  %661 = or i1 %660, %659
  br i1 %661, label %682, label %662

662:                                              ; preds = %642
  %663 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 0
  br label %664

664:                                              ; preds = %673, %662
  %665 = phi %"class.spvtools::opt::Instruction"* [ %677, %673 ], [ %656, %662 ]
  %666 = icmp eq %"class.spvtools::opt::Instruction"* %665, null
  br i1 %666, label %680, label %667

667:                                              ; preds = %664
  %668 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %665, i64 0, i32 0, i32 1
  %669 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %668, align 8
  %670 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %665, i64 0, i32 2
  %671 = load i32, i32* %670, align 8
  %672 = icmp eq i32 %671, 245
  br i1 %672, label %673, label %680

673:                                              ; preds = %667
  %674 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %669, i64 0, i32 0, i32 3
  %675 = load i8, i8* %674, align 8, !range !7
  %676 = icmp eq i8 %675, 0
  %677 = select i1 %676, %"class.spvtools::opt::Instruction"* %669, %"class.spvtools::opt::Instruction"* null
  %678 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %652, align 8
  %679 = call zeroext i1 %678(%"union.std::__1::__function::__policy_storage"* nonnull %663, %"class.spvtools::opt::Instruction"* nonnull %665) #11
  br i1 %679, label %664, label %680

680:                                              ; preds = %673, %667, %664
  %681 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %653, align 8
  br label %682

682:                                              ; preds = %680, %642
  %683 = phi %"struct.std::__1::__function::__policy"* [ %681, %680 ], [ @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock14ForEachPhiInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %642 ]
  %684 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %683, i64 0, i32 1
  %685 = load void (i8*)*, void (i8*)** %684, align 8
  %686 = icmp eq void (i8*)* %685, null
  br i1 %686, label %690, label %687

687:                                              ; preds = %682
  %688 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %6, i64 0, i32 0, i32 0, i32 0
  %689 = load i8*, i8** %688, align 8
  call void %685(i8* %689) #11
  br label %690

690:                                              ; preds = %687, %682
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %650) #11
  %691 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %646, align 8
  %692 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %691, i64 0, i32 1
  %693 = load void (i8*)*, void (i8*)** %692, align 8
  %694 = icmp eq void (i8*)* %693, null
  br i1 %694, label %698, label %695

695:                                              ; preds = %690
  %696 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %7, i64 0, i32 0, i32 0, i32 0
  %697 = load i8*, i8** %696, align 8
  call void %693(i8* %697) #11
  br label %698

698:                                              ; preds = %690, %695
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %644) #11
  %699 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %700 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 11
  %701 = load i32, i32* %700, align 8
  %702 = and i32 %701, 16
  %703 = icmp eq i32 %702, 0
  br i1 %703, label %704, label %720

704:                                              ; preds = %698
  %705 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 4, i32 0, i32 0, i32 0
  %706 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %705, align 8
  %707 = call i8* @_Znwm(i64 400) #10
  %708 = bitcast i8* %707 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %708, %"class.spvtools::opt::Module"* %706) #11
  %709 = ptrtoint i8* %707 to i64
  %710 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 15
  %711 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %710, i64 0, i32 0, i32 0, i32 0
  %712 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %711, align 8
  %713 = bitcast %"class.std::__1::unique_ptr.273"* %710 to i64*
  store i64 %709, i64* %713, align 8
  %714 = icmp eq %"class.spvtools::opt::CFG"* %712, null
  br i1 %714, label %717, label %715

715:                                              ; preds = %704
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %712) #11
  %716 = bitcast %"class.spvtools::opt::CFG"* %712 to i8*
  call void @_ZdlPv(i8* %716) #10
  br label %717

717:                                              ; preds = %715, %704
  %718 = load i32, i32* %700, align 8
  %719 = or i32 %718, 16
  store i32 %719, i32* %700, align 8
  br label %720

720:                                              ; preds = %698, %717
  %721 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %699, i64 0, i32 15, i32 0, i32 0, i32 0
  %722 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %721, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %722, %"class.spvtools::opt::BasicBlock"* %1) #11
  %723 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %23, align 8
  %724 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %723, i64 0, i32 11
  %725 = load i32, i32* %724, align 8
  %726 = and i32 %725, 16
  %727 = icmp eq i32 %726, 0
  br i1 %727, label %728, label %744

728:                                              ; preds = %720
  %729 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %723, i64 0, i32 4, i32 0, i32 0, i32 0
  %730 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %729, align 8
  %731 = call i8* @_Znwm(i64 400) #10
  %732 = bitcast i8* %731 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %732, %"class.spvtools::opt::Module"* %730) #11
  %733 = ptrtoint i8* %731 to i64
  %734 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %723, i64 0, i32 15
  %735 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %734, i64 0, i32 0, i32 0, i32 0
  %736 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %735, align 8
  %737 = bitcast %"class.std::__1::unique_ptr.273"* %734 to i64*
  store i64 %733, i64* %737, align 8
  %738 = icmp eq %"class.spvtools::opt::CFG"* %736, null
  br i1 %738, label %741, label %739

739:                                              ; preds = %728
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %736) #11
  %740 = bitcast %"class.spvtools::opt::CFG"* %736 to i8*
  call void @_ZdlPv(i8* %740) #10
  br label %741

741:                                              ; preds = %739, %728
  %742 = load i32, i32* %724, align 8
  %743 = or i32 %742, 16
  store i32 %743, i32* %724, align 8
  br label %744

744:                                              ; preds = %720, %741
  %745 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %723, i64 0, i32 15, i32 0, i32 0, i32 0
  %746 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %745, align 8
  %747 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %18, align 8
  %748 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %748) #11
  store i32 -1431655766, i32* %14, align 4
  %749 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %747, i64 0, i32 1, i32 0, i32 0, i32 0
  %750 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %749, align 8
  %751 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %750, i64 0, i32 4
  %752 = load i8, i8* %751, align 1, !range !7
  %753 = icmp eq i8 %752, 0
  br i1 %753, label %759, label %754

754:                                              ; preds = %744
  %755 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %750, i64 0, i32 3
  %756 = load i8, i8* %755, align 4, !range !7
  %757 = zext i8 %756 to i32
  %758 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %750, i32 %757) #11
  br label %759

759:                                              ; preds = %744, %754
  %760 = phi i32 [ %758, %754 ], [ 0, %744 ]
  store i32 %760, i32* %14, align 4
  %761 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %746, i64 0, i32 5, i32 0
  %762 = bitcast %"class.std::__1::tuple.1157"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %762) #11
  %763 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %12, i64 0, i32 0, i32 0, i32 0
  store i32* %14, i32** %763, align 8
  %764 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %13, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %764) #11
  %765 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %761, i32* nonnull dereferenceable(4) %14, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1157"* nonnull dereferenceable(8) %12, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %13) #11
  %766 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %765, 0
  %767 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %766, i64 3
  %768 = bitcast %"struct.std::__1::__hash_node_base.333"* %767 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %764) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %762) #11
  store %"class.spvtools::opt::BasicBlock"* %747, %"class.spvtools::opt::BasicBlock"** %768, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %746, %"class.spvtools::opt::BasicBlock"* %747) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %748) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %388, align 8
  %769 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %389, i64 0, i32 0, i32 0
  %770 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %769, align 8
  %771 = icmp eq %"class.std::__1::vector.3"* %770, null
  br i1 %771, label %795, label %772

772:                                              ; preds = %759
  %773 = bitcast %"class.std::__1::vector.3"* %770 to i8*
  %774 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %22, i64 0, i32 0, i32 1, i32 0, i32 1
  %775 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %774, align 8
  %776 = icmp eq %"class.std::__1::vector.3"* %775, %770
  br i1 %776, label %793, label %777

777:                                              ; preds = %772, %788
  %778 = phi %"class.std::__1::vector.3"* [ %779, %788 ], [ %775, %772 ]
  %779 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %778, i64 -1
  %780 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %779, i64 0, i32 0, i32 0
  %781 = load i32*, i32** %780, align 8
  %782 = icmp eq i32* %781, null
  br i1 %782, label %788, label %783

783:                                              ; preds = %777
  %784 = ptrtoint i32* %781 to i64
  %785 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %778, i64 -1, i32 0, i32 1
  %786 = bitcast i32** %785 to i64*
  store i64 %784, i64* %786, align 8
  %787 = bitcast i32* %781 to i8*
  call void @_ZdlPv(i8* %787) #10
  br label %788

788:                                              ; preds = %783, %777
  %789 = icmp eq %"class.std::__1::vector.3"* %779, %770
  br i1 %789, label %790, label %777

790:                                              ; preds = %788
  %791 = bitcast %"class.std::__1::vector.463"* %389 to i8**
  %792 = load i8*, i8** %791, align 8
  br label %793

793:                                              ; preds = %790, %772
  %794 = phi i8* [ %792, %790 ], [ %773, %772 ]
  store %"class.std::__1::vector.3"* %770, %"class.std::__1::vector.3"** %774, align 8
  call void @_ZdlPv(i8* %794) #10
  br label %795

795:                                              ; preds = %759, %793
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %387) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %377) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %175) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %156) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #11
  br label %796

796:                                              ; preds = %49, %795
  %797 = phi i1 [ true, %795 ], [ false, %49 ]
  ret i1 %797
}

declare void @_ZN8spvtools3opt9IRContext20BuildInvalidAnalysesENS1_8AnalysisE(%"class.spvtools::opt::IRContext"*, i32) local_unnamed_addr #2

declare %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10BasicBlock15SplitBasicBlockEPNS0_9IRContextEjNS0_15InstructionList8iteratorE(%"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::IRContext"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass18InsertAfterElementEPNS0_10BasicBlockES3_PNSt3__14listIS3_NS4_9allocatorIS3_EEEE(%"class.spvtools::opt::MergeReturnPass"* nocapture readnone, %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::list"*) local_unnamed_addr #0 align 2 {
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %2 to i64
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %9 = icmp eq %"struct.std::__1::__list_node_base"* %7, %8
  br i1 %9, label %25, label %10

10:                                               ; preds = %4
  %11 = ptrtoint %"struct.std::__1::__list_node_base"* %7 to i64
  br label %12

12:                                               ; preds = %19, %10
  %13 = phi %"struct.std::__1::__list_node_base"* [ %7, %10 ], [ %23, %19 ]
  %14 = phi i64 [ %11, %10 ], [ %22, %19 ]
  %15 = inttoptr i64 %14 to %"struct.std::__1::__list_node"*
  %16 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %15, i64 0, i32 1
  %17 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %16, align 8
  %18 = icmp eq %"class.spvtools::opt::BasicBlock"* %17, %1
  br i1 %18, label %25, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %13, i64 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = inttoptr i64 %22 to %"struct.std::__1::__list_node_base"*
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %8, %23
  br i1 %24, label %25, label %12

25:                                               ; preds = %12, %19, %4
  %26 = phi %"struct.std::__1::__list_node_base"* [ %7, %4 ], [ %8, %19 ], [ %13, %12 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = tail call i8* @_Znwm(i64 24) #10, !noalias !128
  %30 = getelementptr inbounds i8, i8* %29, i64 16
  %31 = bitcast i8* %30 to i64*
  store i64 %5, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 0
  %33 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %33, i64 0, i32 1
  %35 = bitcast %"struct.std::__1::__list_node_base"** %34 to i8**
  store i8* %29, i8** %35, align 8
  %36 = bitcast %"struct.std::__1::__list_node_base"* %28 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = bitcast i8* %29 to i64*
  store i64 %37, i64* %38, align 8
  %39 = bitcast %"struct.std::__1::__list_node_base"* %28 to i8**
  store i8* %29, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %29, i64 8
  %41 = bitcast i8* %40 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %28, %"struct.std::__1::__list_node_base"** %41, align 8
  %42 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %42, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @_ZNK8spvtools3opt8analysis11TypeManager5GetIdEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder7AddLoadEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 24, i1 false) #11
  %11 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #11
  %12 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %12) #11
  %13 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %17 = bitcast i32** %15 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %16, %"struct.std::__1::aligned_storage<4, 4>::type"** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %19 = bitcast %"class.std::__1::unique_ptr.0"* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %16 to i32*
  store i64 1, i64* %14, align 8
  store i32 %2, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %22, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %24 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %26 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %22, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %31, align 8
  %33 = bitcast %"class.std::__1::vector.3"* %32 to i8*
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %35, align 8
  %36 = icmp eq %"class.std::__1::vector.3"* %32, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %3
  %38 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %32, i64 0, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %41, %37
  call void @_ZdlPv(i8* %33) #10
  br label %47

47:                                               ; preds = %3, %46
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %48 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %48, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.3"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #10
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.std::__1::vector.3"* %49 to i8*
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %47, %60
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %12) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #11
  %63 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #11
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %64, align 8
  %65 = call i8* @_Znwm(i64 112) #10
  %66 = bitcast i8* %65 to %"class.spvtools::opt::Instruction"*
  %67 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %69 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 4, i32 0, i32 0, i32 0
  %70 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %69, align 8
  %71 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %70) #11
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 2
  %75 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %75, i64 0, i32 2
  %77 = load i8, i8* %76, align 8, !range !7
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85

79:                                               ; preds = %73
  %80 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %80, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %81 = getelementptr inbounds i8, i8* %80, i64 37
  store i8 0, i8* %81, align 1
  %82 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 1, i32 0
  %83 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %82, align 8
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %68, i64 0, i32 5, i32 0, i32 0
  call void %83(%"union.std::__1::__function::__policy_storage"* %84, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %80) #11
  call void @_ZdlPv(i8* nonnull %80) #10
  br label %85

85:                                               ; preds = %62, %73, %79
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %66, %"class.spvtools::opt::IRContext"* %68, i32 61, i32 %1, i32 %71, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %86 = ptrtoint i8* %65 to i64
  %87 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %86, i64* %87, align 8
  %88 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %89 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %64, align 8
  %90 = icmp eq %"class.spvtools::opt::Instruction"* %89, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %85
  %92 = bitcast %"class.spvtools::opt::Instruction"* %89 to void (%"class.spvtools::opt::Instruction"*)***
  %93 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %93, i64 1
  %95 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %94, align 8
  call void %95(%"class.spvtools::opt::Instruction"* nonnull %89) #11
  br label %96

96:                                               ; preds = %85, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #11
  %97 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %9, align 8
  %98 = icmp eq %"struct.spvtools::opt::Operand"* %97, null
  br i1 %98, label %128, label %99

99:                                               ; preds = %96
  %100 = bitcast %"struct.spvtools::opt::Operand"* %97 to i8*
  %101 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %10, align 8
  %102 = icmp eq %"struct.spvtools::opt::Operand"* %101, %97
  br i1 %102, label %126, label %103

103:                                              ; preds = %99, %121
  %104 = phi %"struct.spvtools::opt::Operand"* [ %105, %121 ], [ %101, %99 ]
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %106, align 8
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %104, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %108 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %107, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %107, align 8
  %109 = icmp eq %"class.std::__1::vector.3"* %108, null
  br i1 %109, label %121, label %110

110:                                              ; preds = %103
  %111 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 0
  %112 = load i32*, i32** %111, align 8
  %113 = icmp eq i32* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %110
  %115 = ptrtoint i32* %112 to i64
  %116 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %108, i64 0, i32 0, i32 1
  %117 = bitcast i32** %116 to i64*
  store i64 %115, i64* %117, align 8
  %118 = bitcast i32* %112 to i8*
  call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %114, %110
  %120 = bitcast %"class.std::__1::vector.3"* %108 to i8*
  call void @_ZdlPv(i8* %120) #10
  br label %121

121:                                              ; preds = %119, %103
  %122 = icmp eq %"struct.spvtools::opt::Operand"* %105, %97
  br i1 %122, label %123, label %103

123:                                              ; preds = %121
  %124 = bitcast %"class.std::__1::vector"* %4 to i8**
  %125 = load i8*, i8** %124, align 8
  br label %126

126:                                              ; preds = %123, %99
  %127 = phi i8* [ %125, %123 ], [ %100, %99 ]
  store %"struct.spvtools::opt::Operand"* %97, %"struct.spvtools::opt::Operand"** %10, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %128

128:                                              ; preds = %96, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret %"class.spvtools::opt::Instruction"* %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder20AddConditionalBranchEjjjjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::unique_ptr.21", align 8
  %8 = alloca %"class.std::__1::vector", align 8
  %9 = alloca [3 x %"struct.spvtools::opt::Operand"], align 8
  %10 = alloca %"class.spvtools::utils::SmallVector", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.spvtools::utils::SmallVector", align 8
  %13 = icmp eq i32 %4, -1
  br i1 %13, label %16, label %14

14:                                               ; preds = %6
  %15 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %16

16:                                               ; preds = %6, %14
  %17 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %7, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %18, align 8
  %19 = tail call i8* @_Znwm(i64 112) #10
  %20 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = bitcast %"class.std::__1::vector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #11
  %23 = bitcast [3 x %"struct.spvtools::opt::Operand"]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %23) #11
  %24 = bitcast %"class.spvtools::utils::SmallVector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #11
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 2
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %28 to i32*
  store i64 1, i64* %26, align 8
  store i32 %1, i32* %32, align 8
  %33 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  store i32 1, i32* %33, align 8
  %34 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %35 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %34, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 2
  %38 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 3, i64 0
  %39 = bitcast i32** %37 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %38, %"struct.std::__1::aligned_storage<4, 4>::type"** %39, align 8
  %40 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4
  %41 = bitcast %"class.std::__1::unique_ptr.0"* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %34, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %10) #11
  %43 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #11
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %48 = bitcast i32** %46 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %47, %"struct.std::__1::aligned_storage<4, 4>::type"** %48, align 8
  %49 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %50 = bitcast %"class.std::__1::unique_ptr.0"* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %47 to i32*
  store i64 1, i64* %45, align 8
  store i32 %2, i32* %51, align 8
  %52 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  store i32 1, i32* %52, align 8
  %53 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %53, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %55 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 2
  %57 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 3, i64 0
  %58 = bitcast i32** %56 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %57, %"struct.std::__1::aligned_storage<4, 4>::type"** %58, align 8
  %59 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4
  %60 = bitcast %"class.std::__1::unique_ptr.0"* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %53, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %62 = bitcast %"class.spvtools::utils::SmallVector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %62) #11
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 1
  %65 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 2
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 3, i64 0
  %67 = bitcast i32** %65 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %66, %"struct.std::__1::aligned_storage<4, 4>::type"** %67, align 8
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4
  %69 = bitcast %"class.std::__1::unique_ptr.0"* %68 to i64*
  store i64 0, i64* %69, align 8
  %70 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %66 to i32*
  store i64 1, i64* %64, align 8
  store i32 %3, i32* %70, align 8
  %71 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  store i32 1, i32* %71, align 8
  %72 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %72, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %73, align 8
  %74 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 1
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 2
  %76 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 3, i64 0
  %77 = bitcast i32** %75 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %76, %"struct.std::__1::aligned_storage<4, 4>::type"** %77, align 8
  %78 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4
  %79 = bitcast %"class.std::__1::unique_ptr.0"* %78 to i64*
  store i64 0, i64* %79, align 8
  %80 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %72, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %12) #11
  %81 = call i8* @_Znwm(i64 144) #10
  %82 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 1
  %83 = bitcast %"struct.spvtools::opt::Operand"** %82 to i8**
  store i8* %81, i8** %83, align 8
  %84 = bitcast %"class.std::__1::vector"* %8 to i8**
  store i8* %81, i8** %84, align 8
  %85 = getelementptr inbounds i8, i8* %81, i64 144
  %86 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  %87 = bitcast %"struct.spvtools::opt::Operand"** %86 to i8**
  store i8* %85, i8** %87, align 8
  %88 = bitcast i8* %81 to i32*
  %89 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds i8, i8* %81, i64 8
  %92 = bitcast i8* %91 to %"class.spvtools::utils::SmallVector"*
  %93 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1
  %94 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %94, align 8
  %95 = getelementptr inbounds i8, i8* %81, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %81, i64 24
  %98 = getelementptr inbounds i8, i8* %81, i64 32
  %99 = bitcast i8* %97 to i8**
  store i8* %98, i8** %99, align 8
  %100 = getelementptr inbounds i8, i8* %81, i64 40
  %101 = bitcast i8* %100 to i64*
  store i64 0, i64* %101, align 8
  %102 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %92, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %93) #11
  %103 = getelementptr inbounds i8, i8* %81, i64 48
  %104 = bitcast i8* %103 to i32*
  %105 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 0
  %106 = load i32, i32* %105, align 8
  store i32 %106, i32* %104, align 8
  %107 = getelementptr inbounds i8, i8* %81, i64 56
  %108 = bitcast i8* %107 to %"class.spvtools::utils::SmallVector"*
  %109 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1
  %110 = bitcast i8* %107 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %110, align 8
  %111 = getelementptr inbounds i8, i8* %81, i64 64
  %112 = bitcast i8* %111 to i64*
  store i64 0, i64* %112, align 8
  %113 = getelementptr inbounds i8, i8* %81, i64 72
  %114 = getelementptr inbounds i8, i8* %81, i64 80
  %115 = bitcast i8* %113 to i8**
  store i8* %114, i8** %115, align 8
  %116 = getelementptr inbounds i8, i8* %81, i64 88
  %117 = bitcast i8* %116 to i64*
  store i64 0, i64* %117, align 8
  %118 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %108, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %109) #11
  %119 = getelementptr inbounds i8, i8* %81, i64 96
  %120 = bitcast i8* %119 to i32*
  %121 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 0
  %122 = load i32, i32* %121, align 8
  store i32 %122, i32* %120, align 8
  %123 = getelementptr inbounds i8, i8* %81, i64 104
  %124 = bitcast i8* %123 to %"class.spvtools::utils::SmallVector"*
  %125 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1
  %126 = bitcast i8* %123 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %81, i64 112
  %128 = bitcast i8* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds i8, i8* %81, i64 120
  %130 = getelementptr inbounds i8, i8* %81, i64 128
  %131 = bitcast i8* %129 to i8**
  store i8* %130, i8** %131, align 8
  %132 = getelementptr inbounds i8, i8* %81, i64 136
  %133 = bitcast i8* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %124, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %125) #11
  %135 = getelementptr inbounds i8, i8* %81, i64 144
  %136 = bitcast i8* %19 to %"class.spvtools::opt::Instruction"*
  %137 = bitcast %"struct.spvtools::opt::Operand"** %82 to i64*
  %138 = ptrtoint i8* %135 to i64
  store i64 %138, i64* %137, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %136, %"class.spvtools::opt::IRContext"* %21, i32 250, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %8) #11
  %139 = ptrtoint i8* %19 to i64
  %140 = bitcast %"class.std::__1::unique_ptr.21"* %7 to i64*
  store i64 %139, i64* %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %141, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %172, label %144

144:                                              ; preds = %16
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %82, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %170, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = load i8*, i8** %84, align 8
  br label %170

170:                                              ; preds = %168, %144
  %171 = phi i8* [ %169, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %82, align 8
  call void @_ZdlPv(i8* %171) #10
  br label %172

172:                                              ; preds = %16, %170
  %173 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %173, align 8
  %174 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 2, i32 1, i32 4, i32 0, i32 0, i32 0
  %175 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %174, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %174, align 8
  %176 = icmp eq %"class.std::__1::vector.3"* %175, null
  br i1 %176, label %188, label %177

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 0
  %179 = load i32*, i32** %178, align 8
  %180 = icmp eq i32* %179, null
  br i1 %180, label %186, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i32* %179 to i64
  %183 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %175, i64 0, i32 0, i32 1
  %184 = bitcast i32** %183 to i64*
  store i64 %182, i64* %184, align 8
  %185 = bitcast i32* %179 to i8*
  call void @_ZdlPv(i8* %185) #10
  br label %186

186:                                              ; preds = %181, %177
  %187 = bitcast %"class.std::__1::vector.3"* %175 to i8*
  call void @_ZdlPv(i8* %187) #10
  br label %188

188:                                              ; preds = %172, %186
  %189 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %189, align 8
  %190 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %191 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %190, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %190, align 8
  %192 = icmp eq %"class.std::__1::vector.3"* %191, null
  br i1 %192, label %255, label %244

193:                                              ; preds = %271
  %194 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = icmp eq i32* %195, null
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = ptrtoint i32* %195 to i64
  %199 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %273, i64 0, i32 0, i32 1
  %200 = bitcast i32** %199 to i64*
  store i64 %198, i64* %200, align 8
  %201 = bitcast i32* %195 to i8*
  call void @_ZdlPv(i8* %201) #10
  br label %202

202:                                              ; preds = %197, %193
  %203 = bitcast %"class.std::__1::vector.3"* %273 to i8*
  call void @_ZdlPv(i8* %203) #10
  br label %204

204:                                              ; preds = %271, %202
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %62) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %205 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %206 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %207 = icmp eq %"class.std::__1::vector.3"* %206, null
  br i1 %207, label %219, label %208

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 0
  %210 = load i32*, i32** %209, align 8
  %211 = icmp eq i32* %210, null
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = ptrtoint i32* %210 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %206, i64 0, i32 0, i32 1
  %215 = bitcast i32** %214 to i64*
  store i64 %213, i64* %215, align 8
  %216 = bitcast i32* %210 to i8*
  call void @_ZdlPv(i8* %216) #10
  br label %217

217:                                              ; preds = %212, %208
  %218 = bitcast %"class.std::__1::vector.3"* %206 to i8*
  call void @_ZdlPv(i8* %218) #10
  br label %219

219:                                              ; preds = %204, %217
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %220 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %10, i64 0, i32 4, i32 0, i32 0, i32 0
  %221 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %220, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %220, align 8
  %222 = icmp eq %"class.std::__1::vector.3"* %221, null
  br i1 %222, label %234, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 0
  %225 = load i32*, i32** %224, align 8
  %226 = icmp eq i32* %225, null
  br i1 %226, label %232, label %227

227:                                              ; preds = %223
  %228 = ptrtoint i32* %225 to i64
  %229 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %221, i64 0, i32 0, i32 1
  %230 = bitcast i32** %229 to i64*
  store i64 %228, i64* %230, align 8
  %231 = bitcast i32* %225 to i8*
  call void @_ZdlPv(i8* %231) #10
  br label %232

232:                                              ; preds = %227, %223
  %233 = bitcast %"class.std::__1::vector.3"* %221 to i8*
  call void @_ZdlPv(i8* %233) #10
  br label %234

234:                                              ; preds = %219, %232
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #11
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %23) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #11
  %235 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %7)
  %236 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %18, align 8
  %237 = icmp eq %"class.spvtools::opt::Instruction"* %236, null
  br i1 %237, label %243, label %238

238:                                              ; preds = %234
  %239 = bitcast %"class.spvtools::opt::Instruction"* %236 to void (%"class.spvtools::opt::Instruction"*)***
  %240 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %239, align 8
  %241 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %240, i64 1
  %242 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %241, align 8
  call void %242(%"class.spvtools::opt::Instruction"* nonnull %236) #11
  br label %243

243:                                              ; preds = %234, %238
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret %"class.spvtools::opt::Instruction"* %235

244:                                              ; preds = %188
  %245 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %244
  %249 = ptrtoint i32* %246 to i64
  %250 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %191, i64 0, i32 0, i32 1
  %251 = bitcast i32** %250 to i64*
  store i64 %249, i64* %251, align 8
  %252 = bitcast i32* %246 to i8*
  call void @_ZdlPv(i8* %252) #10
  br label %253

253:                                              ; preds = %248, %244
  %254 = bitcast %"class.std::__1::vector.3"* %191 to i8*
  call void @_ZdlPv(i8* %254) #10
  br label %255

255:                                              ; preds = %253, %188
  %256 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %256, align 8
  %257 = getelementptr inbounds [3 x %"struct.spvtools::opt::Operand"], [3 x %"struct.spvtools::opt::Operand"]* %9, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %258 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %257, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %257, align 8
  %259 = icmp eq %"class.std::__1::vector.3"* %258, null
  br i1 %259, label %271, label %260

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 0
  %262 = load i32*, i32** %261, align 8
  %263 = icmp eq i32* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %260
  %265 = ptrtoint i32* %262 to i64
  %266 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %258, i64 0, i32 0, i32 1
  %267 = bitcast i32** %266 to i64*
  store i64 %265, i64* %267, align 8
  %268 = bitcast i32* %262 to i8*
  call void @_ZdlPv(i8* %268) #10
  br label %269

269:                                              ; preds = %264, %260
  %270 = bitcast %"class.std::__1::vector.3"* %258 to i8*
  call void @_ZdlPv(i8* %270) #10
  br label %271

271:                                              ; preds = %269, %255
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %272 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %12, i64 0, i32 4, i32 0, i32 0, i32 0
  %273 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %272, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %272, align 8
  %274 = icmp eq %"class.std::__1::vector.3"* %273, null
  br i1 %274, label %204, label %193
}

declare void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZN8spvtools3opt8analysis11TypeManager17GetRegisteredTypeEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::vector.3"* dereferenceable(24)) local_unnamed_addr #2

declare %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::Constant"*, i32, %"class.spvtools::opt::InstructionList::iterator"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* sret, %"class.spvtools::opt::InstructionList::iterator"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"* dereferenceable(112)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 17, i1 false) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 1
  %8 = bitcast %"class.spvtools::opt::IRContext"** %6 to i8*
  %9 = bitcast %"class.spvtools::opt::IRContext"** %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 20, i1 false)
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %12 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #11
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %11 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 48
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %62, label %21

21:                                               ; preds = %2
  %22 = icmp ugt i64 %19, 384307168202282325
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %24) #12
  unreachable

25:                                               ; preds = %21
  %26 = tail call i8* @_Znwm(i64 %18) #10
  %27 = bitcast i8* %26 to %"struct.spvtools::opt::Operand"*
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %29 = bitcast %"struct.spvtools::opt::Operand"** %28 to i8**
  store i8* %26, i8** %29, align 8
  %30 = bitcast %"class.std::__1::vector"* %10 to i8**
  store i8* %26, i8** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %27, i64 %19
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  store %"struct.spvtools::opt::Operand"* %31, %"struct.spvtools::opt::Operand"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %34 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %33, align 8
  %35 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %36 = bitcast %"struct.spvtools::opt::Operand"** %28 to i64*
  %37 = ptrtoint i8* %26 to i64
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %34, %35
  br i1 %38, label %60, label %39

39:                                               ; preds = %25, %39
  %40 = phi %"struct.spvtools::opt::Operand"* [ %56, %39 ], [ %27, %25 ]
  %41 = phi %"struct.spvtools::opt::Operand"* [ %55, %39 ], [ %34, %25 ]
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  store i32 %44, i32* %42, align 8
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %46) #11
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %41, i64 1
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %40, i64 1
  %57 = icmp eq %"struct.spvtools::opt::Operand"* %55, %35
  br i1 %57, label %58, label %39

58:                                               ; preds = %39
  %59 = ptrtoint %"struct.spvtools::opt::Operand"* %56 to i64
  br label %60

60:                                               ; preds = %58, %25
  %61 = phi i64 [ %37, %25 ], [ %59, %58 ]
  store i64 %61, i64* %36, align 8
  br label %62

62:                                               ; preds = %2, %60
  %63 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %64 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 7
  tail call void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"* %63, %"class.std::__1::vector.14"* dereferenceable(24) %64)
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 8
  %67 = bitcast %"class.spvtools::opt::DebugScope"* %66 to i64*
  %68 = bitcast %"class.spvtools::opt::DebugScope"* %65 to i64*
  %69 = load i64, i64* %67, align 8
  store i64 %69, i64* %68, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = icmp eq %"class.spvtools::opt::Instruction"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.spvtools::opt::Instruction"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.spvtools::opt::Instruction"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %13, i64 -1
  %15 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %16 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %15, align 8
  %17 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %16, align 8
  tail call void %17(%"class.spvtools::opt::Instruction"* %14) #11
  %18 = icmp eq %"class.spvtools::opt::Instruction"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.14"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.spvtools::opt::Instruction"* %5, %"class.spvtools::opt::Instruction"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %25, i64 0, i32 0, i32 0
  %27 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %26, align 8
  %28 = icmp eq %"struct.spvtools::opt::Operand"* %27, null
  br i1 %28, label %59, label %29

29:                                               ; preds = %24
  %30 = bitcast %"struct.spvtools::opt::Operand"* %27 to i8*
  %31 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %0, i64 0, i32 6, i32 0, i32 1
  %32 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %31, align 8
  %33 = icmp eq %"struct.spvtools::opt::Operand"* %32, %27
  br i1 %33, label %57, label %34

34:                                               ; preds = %29, %52
  %35 = phi %"struct.spvtools::opt::Operand"* [ %36, %52 ], [ %32, %29 ]
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %35, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %39 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %38, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %38, align 8
  %40 = icmp eq %"class.std::__1::vector.3"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = icmp eq i32* %43, null
  br i1 %44, label %50, label %45

45:                                               ; preds = %41
  %46 = ptrtoint i32* %43 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %39, i64 0, i32 0, i32 1
  %48 = bitcast i32** %47 to i64*
  store i64 %46, i64* %48, align 8
  %49 = bitcast i32* %43 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %45, %41
  %51 = bitcast %"class.std::__1::vector.3"* %39 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %34
  %53 = icmp eq %"struct.spvtools::opt::Operand"* %36, %27
  br i1 %53, label %54, label %34

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::vector"* %25 to i8**
  %56 = load i8*, i8** %55, align 8
  br label %57

57:                                               ; preds = %54, %29
  %58 = phi i8* [ %56, %54 ], [ %30, %29 ]
  store %"struct.spvtools::opt::Operand"* %27, %"struct.spvtools::opt::Operand"** %31, align 8
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %24, %57
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

declare i32 @_ZN8spvtools3opt8analysis11TypeManager17FindPointerToTypeEj16SpvStorageClass_(%"class.spvtools::opt::analysis::TypeManager"*, i32, i32) local_unnamed_addr #2

declare i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass19CollectReturnBlocksEPNS0_8FunctionE(%"class.std::__1::vector.997"* noalias sret, %"class.spvtools::opt::MergeReturnPass"* nocapture readnone, %"class.spvtools::opt::Function"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %0, i64 0, i32 0, i32 1
  %5 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = bitcast %"class.std::__1::vector.997"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #11
  %7 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %2, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %2, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %10
  br i1 %11, label %16, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.spvtools::opt::BasicBlock"*** %4 to i64*
  %14 = bitcast %"class.std::__1::vector.997"* %0 to i64*
  %15 = bitcast %"class.spvtools::opt::BasicBlock"*** %5 to i64*
  br label %17

16:                                               ; preds = %81, %3
  ret void

17:                                               ; preds = %12, %81
  %18 = phi %"class.std::__1::unique_ptr.40"* [ %8, %12 ], [ %82, %81 ]
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %18, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %20, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %22 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %21, align 8, !noalias !131
  %23 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %22, i64 0, i32 2
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, -253
  %26 = icmp ult i32 %25, 2
  br i1 %26, label %27, label %81

27:                                               ; preds = %17
  %28 = ptrtoint %"class.spvtools::opt::BasicBlock"* %20 to i64
  %29 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %4, align 8
  %30 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %5, align 8
  %31 = icmp ult %"class.spvtools::opt::BasicBlock"** %29, %30
  %32 = ptrtoint %"class.spvtools::opt::BasicBlock"** %30 to i64
  br i1 %31, label %33, label %37

33:                                               ; preds = %27
  %34 = bitcast %"class.spvtools::opt::BasicBlock"** %29 to i64*
  store i64 %28, i64* %34, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %29, i64 1
  %36 = ptrtoint %"class.spvtools::opt::BasicBlock"** %35 to i64
  store i64 %36, i64* %13, align 8
  br label %81

37:                                               ; preds = %27
  %38 = ptrtoint %"class.spvtools::opt::BasicBlock"** %29 to i64
  %39 = load i64, i64* %14, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = add nsw i64 %41, 1
  %43 = icmp ugt i64 %42, 2305843009213693951
  br i1 %43, label %44, label %46

44:                                               ; preds = %37
  %45 = bitcast %"class.std::__1::vector.997"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %45) #12
  unreachable

46:                                               ; preds = %37
  %47 = sub i64 %32, %39
  %48 = ashr exact i64 %47, 3
  %49 = icmp ult i64 %48, 1152921504606846975
  br i1 %49, label %50, label %58

50:                                               ; preds = %46
  %51 = ashr exact i64 %47, 2
  %52 = icmp ult i64 %51, %42
  %53 = select i1 %52, i64 %42, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %50
  %56 = icmp ugt i64 %53, 2305843009213693951
  br i1 %56, label %57, label %58

57:                                               ; preds = %55
  tail call void @abort() #12
  unreachable

58:                                               ; preds = %55, %46
  %59 = phi i64 [ %53, %55 ], [ 2305843009213693951, %46 ]
  %60 = shl i64 %59, 3
  %61 = tail call i8* @_Znwm(i64 %60) #10
  %62 = bitcast i8* %61 to %"class.spvtools::opt::BasicBlock"**
  br label %63

63:                                               ; preds = %58, %50
  %64 = phi i64 [ %59, %58 ], [ 0, %50 ]
  %65 = phi i8* [ %61, %58 ], [ null, %50 ]
  %66 = phi %"class.spvtools::opt::BasicBlock"** [ %62, %58 ], [ null, %50 ]
  %67 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, i64 %41
  %68 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, i64 %64
  %69 = ptrtoint %"class.spvtools::opt::BasicBlock"** %68 to i64
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %67 to i64*
  store i64 %28, i64* %70, align 8
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %67, i64 1
  %72 = ptrtoint %"class.spvtools::opt::BasicBlock"** %71 to i64
  %73 = ptrtoint %"class.spvtools::opt::BasicBlock"** %66 to i64
  %74 = icmp sgt i64 %40, 0
  br i1 %74, label %75, label %77

75:                                               ; preds = %63
  %76 = inttoptr i64 %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %76, i64 %40, i1 false) #11
  br label %77

77:                                               ; preds = %75, %63
  store i64 %73, i64* %14, align 8
  store i64 %72, i64* %13, align 8
  store i64 %69, i64* %15, align 8
  %78 = icmp eq i64 %39, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %39 to i8*
  tail call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %17, %79, %77, %33
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %18, i64 1
  %83 = icmp eq %"class.std::__1::unique_ptr.40"* %82, %10
  br i1 %83, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass17MergeReturnBlocksEPNS0_8FunctionERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MergeReturnPass"* nocapture, %"class.spvtools::opt::Function"*, %"class.std::__1::vector.997"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %2, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::BasicBlock"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.997"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  %22 = icmp ult i64 %21, 2
  br i1 %22, label %801, label %23

23:                                               ; preds = %3
  tail call void @_ZN8spvtools3opt15MergeReturnPass17CreateReturnBlockEv(%"class.spvtools::opt::MergeReturnPass"* %0)
  %24 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 6
  %25 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %24, align 8
  %26 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %25, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 4
  %29 = load i8, i8* %28, align 1, !range !7
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 3
  %33 = load i8, i8* %32, align 4, !range !7
  %34 = zext i8 %33 to i32
  %35 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %27, i32 %34) #11
  br label %36

36:                                               ; preds = %23, %31
  %37 = phi i32 [ %35, %31 ], [ 0, %23 ]
  %38 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %39 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %39, i64 -1
  %41 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #11
  %42 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 0, i64 24, i1 false) #11
  %45 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %2, i64 0, i32 0, i32 0
  %46 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %45, align 8
  %47 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %15, align 8
  %48 = icmp eq %"class.spvtools::opt::BasicBlock"** %46, %47
  br i1 %48, label %503, label %49

49:                                               ; preds = %36
  %50 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  %51 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  %52 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  %53 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %54 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %55 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %56 = bitcast i32** %54 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %57 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %58 = bitcast %"class.std::__1::unique_ptr.0"* %57 to i64*
  %59 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %55 to i32*
  %60 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %62 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %61, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %66 = bitcast i32** %64 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %68 = bitcast %"class.std::__1::unique_ptr.0"* %67 to i64*
  %69 = bitcast %"struct.spvtools::opt::Operand"** %43 to i64*
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %73 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %74 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %75 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %76 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %79 = bitcast i32** %77 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %81 = bitcast %"class.std::__1::unique_ptr.0"* %80 to i64*
  %82 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %78 to i32*
  %83 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %84 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %85 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %84, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %87 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %88 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %89 = bitcast i32** %87 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %91 = bitcast %"class.std::__1::unique_ptr.0"* %90 to i64*
  %92 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %93 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %99

95:                                               ; preds = %227
  %96 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %42, align 8
  %97 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %43, align 8
  %98 = icmp eq %"struct.spvtools::opt::Operand"* %96, %97
  br i1 %98, label %503, label %230

99:                                               ; preds = %49, %227
  %100 = phi %"class.spvtools::opt::BasicBlock"** [ %46, %49 ], [ %228, %227 ]
  %101 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %100, align 8
  %102 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %101, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8, !noalias !134
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 2
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 254
  br i1 %106, label %107, label %227

107:                                              ; preds = %99
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %51) #11
  %108 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 3
  %109 = load i8, i8* %108, align 4, !range !7
  %110 = icmp eq i8 %109, 0
  %111 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 4
  %112 = load i8, i8* %111, align 1, !range !7
  %113 = icmp eq i8 %112, 0
  %114 = select i1 %113, i32 1, i32 2
  %115 = xor i1 %113, true
  %116 = zext i1 %115 to i32
  %117 = select i1 %110, i32 %116, i32 %114
  %118 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %103, i32 %117) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %55, %"struct.std::__1::aligned_storage<4, 4>::type"** %56, align 8
  store i64 0, i64* %58, align 8
  store i64 1, i64* %53, align 8
  store i32 %118, i32* %59, align 8
  store i32 1, i32* %60, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  store i64 0, i64* %63, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %65, %"struct.std::__1::aligned_storage<4, 4>::type"** %66, align 8
  store i64 0, i64* %68, align 8
  %119 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %61, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %120 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %43, align 8
  %121 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %44, align 8
  %122 = icmp ult %"struct.spvtools::opt::Operand"* %120, %121
  br i1 %122, label %123, label %137

123:                                              ; preds = %107
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 0
  %125 = load i32, i32* %60, align 8
  store i32 %125, i32* %124, align 8
  %126 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 1
  %127 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %126, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %127, align 8
  %128 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 1, i32 1
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 1, i32 2
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 1, i32 3, i64 0
  %131 = bitcast i32** %129 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %130, %"struct.std::__1::aligned_storage<4, 4>::type"** %131, align 8
  %132 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 0, i32 1, i32 4
  %133 = bitcast %"class.std::__1::unique_ptr.0"* %132 to i64*
  store i64 0, i64* %133, align 8
  %134 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %126, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %61) #11
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %120, i64 1
  %136 = ptrtoint %"struct.spvtools::opt::Operand"* %135 to i64
  store i64 %136, i64* %69, align 8
  br label %138

137:                                              ; preds = %107
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  br label %138

138:                                              ; preds = %123, %137
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %139 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %140 = icmp eq %"class.std::__1::vector.3"* %139, null
  br i1 %140, label %152, label %141

141:                                              ; preds = %138
  %142 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %139, i64 0, i32 0, i32 0
  %143 = load i32*, i32** %142, align 8
  %144 = icmp eq i32* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %141
  %146 = ptrtoint i32* %143 to i64
  %147 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %139, i64 0, i32 0, i32 1
  %148 = bitcast i32** %147 to i64*
  store i64 %146, i64* %148, align 8
  %149 = bitcast i32* %143 to i8*
  call void @_ZdlPv(i8* %149) #10
  br label %150

150:                                              ; preds = %145, %141
  %151 = bitcast %"class.std::__1::vector.3"* %139 to i8*
  call void @_ZdlPv(i8* %151) #10
  br label %152

152:                                              ; preds = %138, %150
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %72, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %72, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %152, %164
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %51) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #11
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %73) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %74) #11
  %167 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %101, i64 0, i32 1, i32 0, i32 0, i32 0
  %168 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %167, align 8
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %168, i64 0, i32 4
  %170 = load i8, i8* %169, align 1, !range !7
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %177, label %172

172:                                              ; preds = %166
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %168, i64 0, i32 3
  %174 = load i8, i8* %173, align 4, !range !7
  %175 = zext i8 %174 to i32
  %176 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %168, i32 %175) #11
  br label %177

177:                                              ; preds = %166, %172
  %178 = phi i32 [ %176, %172 ], [ 0, %166 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %78, %"struct.std::__1::aligned_storage<4, 4>::type"** %79, align 8
  store i64 0, i64* %81, align 8
  store i64 1, i64* %76, align 8
  store i32 %178, i32* %82, align 8
  store i32 1, i32* %83, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %85, align 8
  store i64 0, i64* %86, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %88, %"struct.std::__1::aligned_storage<4, 4>::type"** %89, align 8
  store i64 0, i64* %91, align 8
  %179 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %84, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %180 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %43, align 8
  %181 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %44, align 8
  %182 = icmp ult %"struct.spvtools::opt::Operand"* %180, %181
  br i1 %182, label %183, label %197

183:                                              ; preds = %177
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 0
  %185 = load i32, i32* %83, align 8
  store i32 %185, i32* %184, align 8
  %186 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 1
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %186, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %188 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 1, i32 1
  store i64 0, i64* %188, align 8
  %189 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 1, i32 2
  %190 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 1, i32 3, i64 0
  %191 = bitcast i32** %189 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %190, %"struct.std::__1::aligned_storage<4, 4>::type"** %191, align 8
  %192 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 0, i32 1, i32 4
  %193 = bitcast %"class.std::__1::unique_ptr.0"* %192 to i64*
  store i64 0, i64* %193, align 8
  %194 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %186, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %84) #11
  %195 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %180, i64 1
  %196 = ptrtoint %"struct.spvtools::opt::Operand"* %195 to i64
  store i64 %196, i64* %69, align 8
  br label %198

197:                                              ; preds = %177
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %4, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %198

198:                                              ; preds = %183, %197
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %199 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %200 = icmp eq %"class.std::__1::vector.3"* %199, null
  br i1 %200, label %212, label %201

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %199, i64 0, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = icmp eq i32* %203, null
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = ptrtoint i32* %203 to i64
  %207 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %199, i64 0, i32 0, i32 1
  %208 = bitcast i32** %207 to i64*
  store i64 %206, i64* %208, align 8
  %209 = bitcast i32* %203 to i8*
  call void @_ZdlPv(i8* %209) #10
  br label %210

210:                                              ; preds = %205, %201
  %211 = bitcast %"class.std::__1::vector.3"* %199 to i8*
  call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %198, %210
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %75, align 8
  %213 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %94, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %94, align 8
  %214 = icmp eq %"class.std::__1::vector.3"* %213, null
  br i1 %214, label %226, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = icmp eq i32* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %215
  %220 = ptrtoint i32* %217 to i64
  %221 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %213, i64 0, i32 0, i32 1
  %222 = bitcast i32** %221 to i64*
  store i64 %220, i64* %222, align 8
  %223 = bitcast i32* %217 to i8*
  call void @_ZdlPv(i8* %223) #10
  br label %224

224:                                              ; preds = %219, %215
  %225 = bitcast %"class.std::__1::vector.3"* %213 to i8*
  call void @_ZdlPv(i8* %225) #10
  br label %226

226:                                              ; preds = %212, %224
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %73) #11
  br label %227

227:                                              ; preds = %226, %99
  %228 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %100, i64 1
  %229 = icmp eq %"class.spvtools::opt::BasicBlock"** %228, %47
  br i1 %229, label %95, label %99

230:                                              ; preds = %95
  %231 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %232 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %231, align 8
  %233 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 4, i32 0, i32 0, i32 0
  %234 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %233, align 8
  %235 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %234) #11
  %236 = icmp eq i32 %235, 0
  br i1 %236, label %237, label %249

237:                                              ; preds = %230
  %238 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 5, i32 0, i32 2
  %239 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %238, align 8
  %240 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %239, i64 0, i32 2
  %241 = load i8, i8* %240, align 8, !range !7
  %242 = icmp eq i8 %241, 0
  br i1 %242, label %243, label %249

243:                                              ; preds = %237
  %244 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %244, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %245 = getelementptr inbounds i8, i8* %244, i64 37
  store i8 0, i8* %245, align 1
  %246 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 5, i32 0, i32 1, i32 0
  %247 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %246, align 8
  %248 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %232, i64 0, i32 5, i32 0, i32 0
  call void %247(%"union.std::__1::__function::__policy_storage"* %248, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %244) #11
  call void @_ZdlPv(i8* nonnull %244) #10
  br label %249

249:                                              ; preds = %230, %237, %243
  %250 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %251 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %250, align 8
  %252 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %251, i64 0, i32 3
  %253 = load i8, i8* %252, align 4, !range !7
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %257, label %255

255:                                              ; preds = %249
  %256 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %251, i32 0) #11
  br label %257

257:                                              ; preds = %249, %255
  %258 = phi i32 [ %256, %255 ], [ 0, %249 ]
  %259 = call i8* @_Znwm(i64 112) #10
  %260 = bitcast i8* %259 to %"class.spvtools::opt::Instruction"*
  %261 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %231, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %260, %"class.spvtools::opt::IRContext"* %261, i32 245, i32 %258, i32 %235, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %40, i64 0, i32 0, i32 0, i32 0
  %263 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %262, align 8
  %264 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %263, i64 0, i32 2, i32 0, i32 1
  %265 = getelementptr inbounds i8, i8* %259, i64 8
  %266 = bitcast i8* %265 to %"class.spvtools::opt::Instruction"**
  %267 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %266, align 8
  %268 = icmp eq %"class.spvtools::opt::Instruction"* %267, null
  br i1 %268, label %281, label %269

269:                                              ; preds = %257
  %270 = getelementptr inbounds i8, i8* %259, i64 16
  %271 = bitcast i8* %270 to i64*
  %272 = load i64, i64* %271, align 8
  %273 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %267, i64 0, i32 0, i32 2
  %274 = bitcast %"class.spvtools::opt::Instruction"** %273 to i64*
  store i64 %272, i64* %274, align 8
  %275 = bitcast i8* %265 to i64*
  %276 = load i64, i64* %275, align 8
  %277 = bitcast i8* %270 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %278 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %277, align 8
  %279 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %278, i64 0, i32 1
  %280 = bitcast %"class.spvtools::opt::Instruction"** %279 to i64*
  store i64 %276, i64* %280, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 16, i1 false) #11
  br label %281

281:                                              ; preds = %257, %269
  store %"class.spvtools::opt::Instruction"* %264, %"class.spvtools::opt::Instruction"** %266, align 8
  %282 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %263, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %283 = bitcast %"class.spvtools::opt::Instruction"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = getelementptr inbounds i8, i8* %259, i64 16
  %286 = bitcast i8* %285 to i64*
  store i64 %284, i64* %286, align 8
  %287 = bitcast %"class.spvtools::opt::Instruction"** %282 to i8**
  store i8* %259, i8** %287, align 8
  %288 = bitcast i8* %285 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %289 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %288, align 8
  %290 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %289, i64 0, i32 1
  %291 = bitcast %"class.spvtools::opt::Instruction"** %290 to i8**
  store i8* %259, i8** %291, align 8
  %292 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %262, align 8
  %293 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %292, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %294 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %293, align 8, !noalias !137
  %295 = call i8* @_Znwm(i64 112) #10
  %296 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %231, align 8
  %297 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %297) #11
  %298 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %298) #11
  %299 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %299) #11
  %300 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %300, align 8
  %301 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %302 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %303 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %304 = bitcast i32** %302 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %303, %"struct.std::__1::aligned_storage<4, 4>::type"** %304, align 8
  %305 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %306 = bitcast %"class.std::__1::unique_ptr.0"* %305 to i64*
  store i64 0, i64* %306, align 8
  %307 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %303 to i32*
  store i64 1, i64* %301, align 8
  store i32 %235, i32* %307, align 8
  %308 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  store i32 1, i32* %308, align 8
  %309 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %310 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %309, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %310, align 8
  %311 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %311, align 8
  %312 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 2
  %313 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 3, i64 0
  %314 = bitcast i32** %312 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %313, %"struct.std::__1::aligned_storage<4, 4>::type"** %314, align 8
  %315 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4
  %316 = bitcast %"class.std::__1::unique_ptr.0"* %315 to i64*
  store i64 0, i64* %316, align 8
  %317 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %309, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %318 = call i8* @_Znwm(i64 48) #10
  %319 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %320 = bitcast %"struct.spvtools::opt::Operand"** %319 to i8**
  store i8* %318, i8** %320, align 8
  %321 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %318, i8** %321, align 8
  %322 = getelementptr inbounds i8, i8* %318, i64 48
  %323 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %324 = bitcast %"struct.spvtools::opt::Operand"** %323 to i8**
  store i8* %322, i8** %324, align 8
  %325 = bitcast i8* %318 to i32*
  %326 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 0
  %327 = load i32, i32* %326, align 8
  store i32 %327, i32* %325, align 8
  %328 = getelementptr inbounds i8, i8* %318, i64 8
  %329 = bitcast i8* %328 to %"class.spvtools::utils::SmallVector"*
  %330 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1
  %331 = bitcast i8* %328 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %331, align 8
  %332 = getelementptr inbounds i8, i8* %318, i64 16
  %333 = bitcast i8* %332 to i64*
  store i64 0, i64* %333, align 8
  %334 = getelementptr inbounds i8, i8* %318, i64 24
  %335 = getelementptr inbounds i8, i8* %318, i64 32
  %336 = bitcast i8* %334 to i8**
  store i8* %335, i8** %336, align 8
  %337 = getelementptr inbounds i8, i8* %318, i64 40
  %338 = bitcast i8* %337 to i64*
  store i64 0, i64* %338, align 8
  %339 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %329, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %330) #11
  %340 = getelementptr inbounds i8, i8* %318, i64 48
  %341 = bitcast i8* %295 to %"class.spvtools::opt::Instruction"*
  %342 = bitcast %"struct.spvtools::opt::Operand"** %319 to i64*
  %343 = ptrtoint i8* %340 to i64
  store i64 %343, i64* %342, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %341, %"class.spvtools::opt::IRContext"* %296, i32 254, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %9) #11
  %344 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %345 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %344, align 8
  %346 = icmp eq %"struct.spvtools::opt::Operand"* %345, null
  br i1 %346, label %375, label %347

347:                                              ; preds = %281
  %348 = bitcast %"struct.spvtools::opt::Operand"* %345 to i8*
  %349 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %319, align 8
  %350 = icmp eq %"struct.spvtools::opt::Operand"* %349, %345
  br i1 %350, label %373, label %351

351:                                              ; preds = %347, %369
  %352 = phi %"struct.spvtools::opt::Operand"* [ %353, %369 ], [ %349, %347 ]
  %353 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %352, i64 -1
  %354 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %352, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %354, align 8
  %355 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %352, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %356 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %355, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %355, align 8
  %357 = icmp eq %"class.std::__1::vector.3"* %356, null
  br i1 %357, label %369, label %358

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %356, i64 0, i32 0, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = icmp eq i32* %360, null
  br i1 %361, label %367, label %362

362:                                              ; preds = %358
  %363 = ptrtoint i32* %360 to i64
  %364 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %356, i64 0, i32 0, i32 1
  %365 = bitcast i32** %364 to i64*
  store i64 %363, i64* %365, align 8
  %366 = bitcast i32* %360 to i8*
  call void @_ZdlPv(i8* %366) #10
  br label %367

367:                                              ; preds = %362, %358
  %368 = bitcast %"class.std::__1::vector.3"* %356 to i8*
  call void @_ZdlPv(i8* %368) #10
  br label %369

369:                                              ; preds = %367, %351
  %370 = icmp eq %"struct.spvtools::opt::Operand"* %353, %345
  br i1 %370, label %371, label %351

371:                                              ; preds = %369
  %372 = load i8*, i8** %321, align 8
  br label %373

373:                                              ; preds = %371, %347
  %374 = phi i8* [ %372, %371 ], [ %348, %347 ]
  store %"struct.spvtools::opt::Operand"* %345, %"struct.spvtools::opt::Operand"** %319, align 8
  call void @_ZdlPv(i8* %374) #10
  br label %375

375:                                              ; preds = %281, %373
  %376 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %376, align 8
  %377 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %10, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %378 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %377, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %377, align 8
  %379 = icmp eq %"class.std::__1::vector.3"* %378, null
  br i1 %379, label %391, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %378, i64 0, i32 0, i32 0
  %382 = load i32*, i32** %381, align 8
  %383 = icmp eq i32* %382, null
  br i1 %383, label %389, label %384

384:                                              ; preds = %380
  %385 = ptrtoint i32* %382 to i64
  %386 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %378, i64 0, i32 0, i32 1
  %387 = bitcast i32** %386 to i64*
  store i64 %385, i64* %387, align 8
  %388 = bitcast i32* %382 to i8*
  call void @_ZdlPv(i8* %388) #10
  br label %389

389:                                              ; preds = %384, %380
  %390 = bitcast %"class.std::__1::vector.3"* %378 to i8*
  call void @_ZdlPv(i8* %390) #10
  br label %391

391:                                              ; preds = %375, %389
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %300, align 8
  %392 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %393 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %392, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %392, align 8
  %394 = icmp eq %"class.std::__1::vector.3"* %393, null
  br i1 %394, label %406, label %395

395:                                              ; preds = %391
  %396 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %393, i64 0, i32 0, i32 0
  %397 = load i32*, i32** %396, align 8
  %398 = icmp eq i32* %397, null
  br i1 %398, label %404, label %399

399:                                              ; preds = %395
  %400 = ptrtoint i32* %397 to i64
  %401 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %393, i64 0, i32 0, i32 1
  %402 = bitcast i32** %401 to i64*
  store i64 %400, i64* %402, align 8
  %403 = bitcast i32* %397 to i8*
  call void @_ZdlPv(i8* %403) #10
  br label %404

404:                                              ; preds = %399, %395
  %405 = bitcast %"class.std::__1::vector.3"* %393 to i8*
  call void @_ZdlPv(i8* %405) #10
  br label %406

406:                                              ; preds = %391, %404
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %299) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %298) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %297) #11
  %407 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %262, align 8
  %408 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %407, i64 0, i32 2, i32 0, i32 1
  %409 = getelementptr inbounds i8, i8* %295, i64 8
  %410 = bitcast i8* %409 to %"class.spvtools::opt::Instruction"**
  %411 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %410, align 8
  %412 = icmp eq %"class.spvtools::opt::Instruction"* %411, null
  br i1 %412, label %425, label %413

413:                                              ; preds = %406
  %414 = getelementptr inbounds i8, i8* %295, i64 16
  %415 = bitcast i8* %414 to i64*
  %416 = load i64, i64* %415, align 8
  %417 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %411, i64 0, i32 0, i32 2
  %418 = bitcast %"class.spvtools::opt::Instruction"** %417 to i64*
  store i64 %416, i64* %418, align 8
  %419 = bitcast i8* %409 to i64*
  %420 = load i64, i64* %419, align 8
  %421 = bitcast i8* %414 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %422 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %421, align 8
  %423 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %422, i64 0, i32 1
  %424 = bitcast %"class.spvtools::opt::Instruction"** %423 to i64*
  store i64 %420, i64* %424, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %409, i8 0, i64 16, i1 false) #11
  br label %425

425:                                              ; preds = %406, %413
  store %"class.spvtools::opt::Instruction"* %408, %"class.spvtools::opt::Instruction"** %410, align 8
  %426 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %407, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %427 = bitcast %"class.spvtools::opt::Instruction"** %426 to i64*
  %428 = load i64, i64* %427, align 8
  %429 = getelementptr inbounds i8, i8* %295, i64 16
  %430 = bitcast i8* %429 to i64*
  store i64 %428, i64* %430, align 8
  %431 = bitcast %"class.spvtools::opt::Instruction"** %426 to i8**
  store i8* %295, i8** %431, align 8
  %432 = bitcast i8* %429 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %433 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %432, align 8
  %434 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %433, i64 0, i32 1
  %435 = bitcast %"class.spvtools::opt::Instruction"** %434 to i8**
  store i8* %295, i8** %435, align 8
  %436 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %262, align 8
  %437 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %436, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %438 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %437, align 8, !noalias !140
  %439 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %231, align 8
  %440 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %439, i64 0, i32 11
  %441 = load i32, i32* %440, align 8
  %442 = and i32 %441, 1
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %468

444:                                              ; preds = %425
  %445 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %439, i64 0, i32 4, i32 0, i32 0, i32 0
  %446 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %445, align 8
  %447 = call i8* @_Znwm(i64 104) #10
  %448 = bitcast i8* %447 to %"class.spvtools::opt::analysis::DefUseManager"*
  %449 = getelementptr inbounds i8, i8* %447, i64 32
  %450 = bitcast i8* %449 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %447, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %450, align 4
  %451 = getelementptr inbounds i8, i8* %447, i64 48
  %452 = getelementptr inbounds i8, i8* %447, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %451, i8 0, i64 16, i1 false) #11
  %453 = bitcast i8* %452 to i8**
  store i8* %451, i8** %453, align 8
  %454 = getelementptr inbounds i8, i8* %447, i64 64
  %455 = getelementptr inbounds i8, i8* %447, i64 96
  %456 = bitcast i8* %455 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %454, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %456, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %448, %"class.spvtools::opt::Module"* %446) #11
  %457 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %439, i64 0, i32 6
  %458 = ptrtoint i8* %447 to i64
  %459 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %457, i64 0, i32 0, i32 0, i32 0
  %460 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %459, align 8
  %461 = bitcast %"class.std::__1::unique_ptr.62"* %457 to i64*
  store i64 %458, i64* %461, align 8
  %462 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %460, null
  br i1 %462, label %465, label %463

463:                                              ; preds = %444
  %464 = bitcast %"class.std::__1::unique_ptr.62"* %457 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %464, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %460) #11
  br label %465

465:                                              ; preds = %463, %444
  %466 = load i32, i32* %440, align 8
  %467 = or i32 %466, 1
  store i32 %467, i32* %440, align 8
  br label %468

468:                                              ; preds = %425, %465
  %469 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %439, i64 0, i32 6, i32 0, i32 0, i32 0
  %470 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %469, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %470, %"class.spvtools::opt::Instruction"* %294) #11
  %471 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %231, align 8
  %472 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %471, i64 0, i32 11
  %473 = load i32, i32* %472, align 8
  %474 = and i32 %473, 1
  %475 = icmp eq i32 %474, 0
  br i1 %475, label %476, label %500

476:                                              ; preds = %468
  %477 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %471, i64 0, i32 4, i32 0, i32 0, i32 0
  %478 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %477, align 8
  %479 = call i8* @_Znwm(i64 104) #10
  %480 = bitcast i8* %479 to %"class.spvtools::opt::analysis::DefUseManager"*
  %481 = getelementptr inbounds i8, i8* %479, i64 32
  %482 = bitcast i8* %481 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %479, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %482, align 4
  %483 = getelementptr inbounds i8, i8* %479, i64 48
  %484 = getelementptr inbounds i8, i8* %479, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %483, i8 0, i64 16, i1 false) #11
  %485 = bitcast i8* %484 to i8**
  store i8* %483, i8** %485, align 8
  %486 = getelementptr inbounds i8, i8* %479, i64 64
  %487 = getelementptr inbounds i8, i8* %479, i64 96
  %488 = bitcast i8* %487 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %486, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %488, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %480, %"class.spvtools::opt::Module"* %478) #11
  %489 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %471, i64 0, i32 6
  %490 = ptrtoint i8* %479 to i64
  %491 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %489, i64 0, i32 0, i32 0, i32 0
  %492 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %491, align 8
  %493 = bitcast %"class.std::__1::unique_ptr.62"* %489 to i64*
  store i64 %490, i64* %493, align 8
  %494 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %492, null
  br i1 %494, label %497, label %495

495:                                              ; preds = %476
  %496 = bitcast %"class.std::__1::unique_ptr.62"* %489 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %496, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %492) #11
  br label %497

497:                                              ; preds = %495, %476
  %498 = load i32, i32* %472, align 8
  %499 = or i32 %498, 1
  store i32 %499, i32* %472, align 8
  br label %500

500:                                              ; preds = %468, %497
  %501 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %471, i64 0, i32 6, i32 0, i32 0, i32 0
  %502 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %501, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %502, %"class.spvtools::opt::Instruction"* %438) #11
  br label %538

503:                                              ; preds = %36, %95
  %504 = call i8* @_Znwm(i64 112) #10
  %505 = bitcast i8* %504 to %"class.spvtools::opt::Instruction"*
  %506 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %507 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %506, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_(%"class.spvtools::opt::Instruction"* nonnull %505, %"class.spvtools::opt::IRContext"* %507, i32 253) #11
  %508 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %40, i64 0, i32 0, i32 0, i32 0
  %509 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %508, align 8
  %510 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %509, i64 0, i32 2, i32 0, i32 1
  %511 = getelementptr inbounds i8, i8* %504, i64 8
  %512 = bitcast i8* %511 to %"class.spvtools::opt::Instruction"**
  %513 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %512, align 8
  %514 = icmp eq %"class.spvtools::opt::Instruction"* %513, null
  br i1 %514, label %527, label %515

515:                                              ; preds = %503
  %516 = getelementptr inbounds i8, i8* %504, i64 16
  %517 = bitcast i8* %516 to i64*
  %518 = load i64, i64* %517, align 8
  %519 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %513, i64 0, i32 0, i32 2
  %520 = bitcast %"class.spvtools::opt::Instruction"** %519 to i64*
  store i64 %518, i64* %520, align 8
  %521 = bitcast i8* %511 to i64*
  %522 = load i64, i64* %521, align 8
  %523 = bitcast i8* %516 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %524 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %523, align 8
  %525 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %524, i64 0, i32 1
  %526 = bitcast %"class.spvtools::opt::Instruction"** %525 to i64*
  store i64 %522, i64* %526, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %511, i8 0, i64 16, i1 false) #11
  br label %527

527:                                              ; preds = %503, %515
  store %"class.spvtools::opt::Instruction"* %510, %"class.spvtools::opt::Instruction"** %512, align 8
  %528 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %509, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %529 = bitcast %"class.spvtools::opt::Instruction"** %528 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = getelementptr inbounds i8, i8* %504, i64 16
  %532 = bitcast i8* %531 to i64*
  store i64 %530, i64* %532, align 8
  %533 = bitcast %"class.spvtools::opt::Instruction"** %528 to i8**
  store i8* %504, i8** %533, align 8
  %534 = bitcast i8* %531 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %535 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %534, align 8
  %536 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %535, i64 0, i32 1
  %537 = bitcast %"class.spvtools::opt::Instruction"** %536 to i8**
  store i8* %504, i8** %537, align 8
  br label %538

538:                                              ; preds = %527, %500
  %539 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %45, align 8
  %540 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %15, align 8
  %541 = icmp eq %"class.spvtools::opt::BasicBlock"** %539, %540
  br i1 %541, label %576, label %542

542:                                              ; preds = %538
  %543 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %544 = bitcast %"class.std::__1::vector"* %12 to i8*
  %545 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %13 to i8*
  %546 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  %547 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  %548 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %549 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %550 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %551 = bitcast i32** %549 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %552 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %553 = bitcast %"class.std::__1::unique_ptr.0"* %552 to i64*
  %554 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %550 to i32*
  %555 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  %556 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %557 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %556, i64 0, i32 0
  %558 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 1
  %559 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 2
  %560 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 3, i64 0
  %561 = bitcast i32** %559 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %562 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4
  %563 = bitcast %"class.std::__1::unique_ptr.0"* %562 to i64*
  %564 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  %565 = bitcast %"struct.spvtools::opt::Operand"** %564 to i8**
  %566 = bitcast %"class.std::__1::vector"* %12 to i8**
  %567 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 2, i32 0, i32 0
  %568 = bitcast %"struct.spvtools::opt::Operand"** %567 to i8**
  %569 = bitcast %"struct.spvtools::opt::Operand"** %564 to i64*
  %570 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %571 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  %572 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 0
  %573 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1
  %574 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 0
  %575 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %13, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  br label %646

576:                                              ; preds = %794, %538
  %577 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %578 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %577, align 8
  %579 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %578, i64 0, i32 11
  %580 = load i32, i32* %579, align 8
  %581 = and i32 %580, 1
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %607

583:                                              ; preds = %576
  %584 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %578, i64 0, i32 4, i32 0, i32 0, i32 0
  %585 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %584, align 8
  %586 = call i8* @_Znwm(i64 104) #10
  %587 = bitcast i8* %586 to %"class.spvtools::opt::analysis::DefUseManager"*
  %588 = getelementptr inbounds i8, i8* %586, i64 32
  %589 = bitcast i8* %588 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %586, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %589, align 4
  %590 = getelementptr inbounds i8, i8* %586, i64 48
  %591 = getelementptr inbounds i8, i8* %586, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %590, i8 0, i64 16, i1 false) #11
  %592 = bitcast i8* %591 to i8**
  store i8* %590, i8** %592, align 8
  %593 = getelementptr inbounds i8, i8* %586, i64 64
  %594 = getelementptr inbounds i8, i8* %586, i64 96
  %595 = bitcast i8* %594 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %593, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %595, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %587, %"class.spvtools::opt::Module"* %585) #11
  %596 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %578, i64 0, i32 6
  %597 = ptrtoint i8* %586 to i64
  %598 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %596, i64 0, i32 0, i32 0, i32 0
  %599 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %598, align 8
  %600 = bitcast %"class.std::__1::unique_ptr.62"* %596 to i64*
  store i64 %597, i64* %600, align 8
  %601 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %599, null
  br i1 %601, label %604, label %602

602:                                              ; preds = %583
  %603 = bitcast %"class.std::__1::unique_ptr.62"* %596 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %603, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %599) #11
  br label %604

604:                                              ; preds = %602, %583
  %605 = load i32, i32* %579, align 8
  %606 = or i32 %605, 1
  store i32 %606, i32* %579, align 8
  br label %607

607:                                              ; preds = %576, %604
  %608 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %578, i64 0, i32 6, i32 0, i32 0, i32 0
  %609 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %608, align 8
  %610 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %40, i64 0, i32 0, i32 0, i32 0
  %611 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %610, align 8
  %612 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %611, i64 0, i32 1, i32 0, i32 0, i32 0
  %613 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %612, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %609, %"class.spvtools::opt::Instruction"* %613) #11
  %614 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %42, align 8
  %615 = icmp eq %"struct.spvtools::opt::Operand"* %614, null
  br i1 %615, label %645, label %616

616:                                              ; preds = %607
  %617 = bitcast %"struct.spvtools::opt::Operand"* %614 to i8*
  %618 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %43, align 8
  %619 = icmp eq %"struct.spvtools::opt::Operand"* %618, %614
  br i1 %619, label %643, label %620

620:                                              ; preds = %616, %638
  %621 = phi %"struct.spvtools::opt::Operand"* [ %622, %638 ], [ %618, %616 ]
  %622 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %621, i64 -1
  %623 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %621, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %623, align 8
  %624 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %621, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %625 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %624, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %624, align 8
  %626 = icmp eq %"class.std::__1::vector.3"* %625, null
  br i1 %626, label %638, label %627

627:                                              ; preds = %620
  %628 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %625, i64 0, i32 0, i32 0
  %629 = load i32*, i32** %628, align 8
  %630 = icmp eq i32* %629, null
  br i1 %630, label %636, label %631

631:                                              ; preds = %627
  %632 = ptrtoint i32* %629 to i64
  %633 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %625, i64 0, i32 0, i32 1
  %634 = bitcast i32** %633 to i64*
  store i64 %632, i64* %634, align 8
  %635 = bitcast i32* %629 to i8*
  call void @_ZdlPv(i8* %635) #10
  br label %636

636:                                              ; preds = %631, %627
  %637 = bitcast %"class.std::__1::vector.3"* %625 to i8*
  call void @_ZdlPv(i8* %637) #10
  br label %638

638:                                              ; preds = %636, %620
  %639 = icmp eq %"struct.spvtools::opt::Operand"* %622, %614
  br i1 %639, label %640, label %620

640:                                              ; preds = %638
  %641 = bitcast %"class.std::__1::vector"* %4 to i8**
  %642 = load i8*, i8** %641, align 8
  br label %643

643:                                              ; preds = %640, %616
  %644 = phi i8* [ %642, %640 ], [ %617, %616 ]
  store %"struct.spvtools::opt::Operand"* %614, %"struct.spvtools::opt::Operand"** %43, align 8
  call void @_ZdlPv(i8* %644) #10
  br label %645

645:                                              ; preds = %607, %643
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #11
  br label %801

646:                                              ; preds = %542, %794
  %647 = phi %"class.spvtools::opt::BasicBlock"** [ %539, %542 ], [ %799, %794 ]
  %648 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %647, align 8
  %649 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %543, align 8
  %650 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %648, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2
  %651 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, align 8, !noalias !143
  call void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %649, %"class.spvtools::opt::Instruction"* %651) #11
  %652 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, align 8, !noalias !146
  %653 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %652, i64 0, i32 2
  store i32 249, i32* %653, align 8
  %654 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, align 8, !noalias !149
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %544) #11
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %545) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %546) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %547, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %550, %"struct.std::__1::aligned_storage<4, 4>::type"** %551, align 8
  store i64 0, i64* %553, align 8
  store i64 1, i64* %548, align 8
  store i32 %37, i32* %554, align 8
  store i32 1, i32* %555, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %557, align 8
  store i64 0, i64* %558, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %560, %"struct.std::__1::aligned_storage<4, 4>::type"** %561, align 8
  store i64 0, i64* %563, align 8
  %655 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %556, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #11
  %656 = call i8* @_Znwm(i64 48) #10
  store i8* %656, i8** %565, align 8
  store i8* %656, i8** %566, align 8
  %657 = getelementptr inbounds i8, i8* %656, i64 48
  store i8* %657, i8** %568, align 8
  %658 = bitcast i8* %656 to i32*
  %659 = load i32, i32* %572, align 8
  store i32 %659, i32* %658, align 8
  %660 = getelementptr inbounds i8, i8* %656, i64 8
  %661 = bitcast i8* %660 to %"class.spvtools::utils::SmallVector"*
  %662 = bitcast i8* %660 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %662, align 8
  %663 = getelementptr inbounds i8, i8* %656, i64 16
  %664 = bitcast i8* %663 to i64*
  store i64 0, i64* %664, align 8
  %665 = getelementptr inbounds i8, i8* %656, i64 24
  %666 = getelementptr inbounds i8, i8* %656, i64 32
  %667 = bitcast i8* %665 to i8**
  store i8* %666, i8** %667, align 8
  %668 = getelementptr inbounds i8, i8* %656, i64 40
  %669 = bitcast i8* %668 to i64*
  store i64 0, i64* %669, align 8
  %670 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %661, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %573) #11
  %671 = getelementptr inbounds i8, i8* %656, i64 48
  %672 = ptrtoint i8* %671 to i64
  store i64 %672, i64* %569, align 8
  call void @_ZN8spvtools3opt11Instruction15ReplaceOperandsERKNSt3__16vectorINS0_7OperandENS2_9allocatorIS4_EEEE(%"class.spvtools::opt::Instruction"* %654, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #11
  %673 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %570, align 8
  %674 = icmp eq %"struct.spvtools::opt::Operand"* %673, null
  br i1 %674, label %703, label %675

675:                                              ; preds = %646
  %676 = bitcast %"struct.spvtools::opt::Operand"* %673 to i8*
  %677 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %564, align 8
  %678 = icmp eq %"struct.spvtools::opt::Operand"* %677, %673
  br i1 %678, label %701, label %679

679:                                              ; preds = %675, %697
  %680 = phi %"struct.spvtools::opt::Operand"* [ %681, %697 ], [ %677, %675 ]
  %681 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %680, i64 -1
  %682 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %680, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %682, align 8
  %683 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %680, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %684 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %683, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %683, align 8
  %685 = icmp eq %"class.std::__1::vector.3"* %684, null
  br i1 %685, label %697, label %686

686:                                              ; preds = %679
  %687 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %684, i64 0, i32 0, i32 0
  %688 = load i32*, i32** %687, align 8
  %689 = icmp eq i32* %688, null
  br i1 %689, label %695, label %690

690:                                              ; preds = %686
  %691 = ptrtoint i32* %688 to i64
  %692 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %684, i64 0, i32 0, i32 1
  %693 = bitcast i32** %692 to i64*
  store i64 %691, i64* %693, align 8
  %694 = bitcast i32* %688 to i8*
  call void @_ZdlPv(i8* %694) #10
  br label %695

695:                                              ; preds = %690, %686
  %696 = bitcast %"class.std::__1::vector.3"* %684 to i8*
  call void @_ZdlPv(i8* %696) #10
  br label %697

697:                                              ; preds = %695, %679
  %698 = icmp eq %"struct.spvtools::opt::Operand"* %681, %673
  br i1 %698, label %699, label %679

699:                                              ; preds = %697
  %700 = load i8*, i8** %566, align 8
  br label %701

701:                                              ; preds = %699, %675
  %702 = phi i8* [ %700, %699 ], [ %676, %675 ]
  store %"struct.spvtools::opt::Operand"* %673, %"struct.spvtools::opt::Operand"** %564, align 8
  call void @_ZdlPv(i8* %702) #10
  br label %703

703:                                              ; preds = %646, %701
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %574, align 8
  %704 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %575, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %575, align 8
  %705 = icmp eq %"class.std::__1::vector.3"* %704, null
  br i1 %705, label %717, label %706

706:                                              ; preds = %703
  %707 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %704, i64 0, i32 0, i32 0
  %708 = load i32*, i32** %707, align 8
  %709 = icmp eq i32* %708, null
  br i1 %709, label %715, label %710

710:                                              ; preds = %706
  %711 = ptrtoint i32* %708 to i64
  %712 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %704, i64 0, i32 0, i32 1
  %713 = bitcast i32** %712 to i64*
  store i64 %711, i64* %713, align 8
  %714 = bitcast i32* %708 to i8*
  call void @_ZdlPv(i8* %714) #10
  br label %715

715:                                              ; preds = %710, %706
  %716 = bitcast %"class.std::__1::vector.3"* %704 to i8*
  call void @_ZdlPv(i8* %716) #10
  br label %717

717:                                              ; preds = %703, %715
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %547, align 8
  %718 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %571, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %571, align 8
  %719 = icmp eq %"class.std::__1::vector.3"* %718, null
  br i1 %719, label %731, label %720

720:                                              ; preds = %717
  %721 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %718, i64 0, i32 0, i32 0
  %722 = load i32*, i32** %721, align 8
  %723 = icmp eq i32* %722, null
  br i1 %723, label %729, label %724

724:                                              ; preds = %720
  %725 = ptrtoint i32* %722 to i64
  %726 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %718, i64 0, i32 0, i32 1
  %727 = bitcast i32** %726 to i64*
  store i64 %725, i64* %727, align 8
  %728 = bitcast i32* %722 to i8*
  call void @_ZdlPv(i8* %728) #10
  br label %729

729:                                              ; preds = %724, %720
  %730 = bitcast %"class.std::__1::vector.3"* %718 to i8*
  call void @_ZdlPv(i8* %730) #10
  br label %731

731:                                              ; preds = %717, %729
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %546) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %545) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %544) #11
  %732 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %543, align 8
  %733 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %732, i64 0, i32 11
  %734 = load i32, i32* %733, align 8
  %735 = and i32 %734, 1
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %737, label %761

737:                                              ; preds = %731
  %738 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %732, i64 0, i32 4, i32 0, i32 0, i32 0
  %739 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %738, align 8
  %740 = call i8* @_Znwm(i64 104) #10
  %741 = bitcast i8* %740 to %"class.spvtools::opt::analysis::DefUseManager"*
  %742 = getelementptr inbounds i8, i8* %740, i64 32
  %743 = bitcast i8* %742 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %740, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %743, align 4
  %744 = getelementptr inbounds i8, i8* %740, i64 48
  %745 = getelementptr inbounds i8, i8* %740, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %744, i8 0, i64 16, i1 false) #11
  %746 = bitcast i8* %745 to i8**
  store i8* %744, i8** %746, align 8
  %747 = getelementptr inbounds i8, i8* %740, i64 64
  %748 = getelementptr inbounds i8, i8* %740, i64 96
  %749 = bitcast i8* %748 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %747, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %749, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %741, %"class.spvtools::opt::Module"* %739) #11
  %750 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %732, i64 0, i32 6
  %751 = ptrtoint i8* %740 to i64
  %752 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %750, i64 0, i32 0, i32 0, i32 0
  %753 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %752, align 8
  %754 = bitcast %"class.std::__1::unique_ptr.62"* %750 to i64*
  store i64 %751, i64* %754, align 8
  %755 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %753, null
  br i1 %755, label %758, label %756

756:                                              ; preds = %737
  %757 = bitcast %"class.std::__1::unique_ptr.62"* %750 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %757, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %753) #11
  br label %758

758:                                              ; preds = %756, %737
  %759 = load i32, i32* %733, align 8
  %760 = or i32 %759, 1
  store i32 %760, i32* %733, align 8
  br label %761

761:                                              ; preds = %731, %758
  %762 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %732, i64 0, i32 6, i32 0, i32 0, i32 0
  %763 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %762, align 8
  %764 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %650, align 8, !noalias !152
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %763, %"class.spvtools::opt::Instruction"* %764) #11
  %765 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %543, align 8
  %766 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %765, i64 0, i32 11
  %767 = load i32, i32* %766, align 8
  %768 = and i32 %767, 1
  %769 = icmp eq i32 %768, 0
  br i1 %769, label %770, label %794

770:                                              ; preds = %761
  %771 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %765, i64 0, i32 4, i32 0, i32 0, i32 0
  %772 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %771, align 8
  %773 = call i8* @_Znwm(i64 104) #10
  %774 = bitcast i8* %773 to %"class.spvtools::opt::analysis::DefUseManager"*
  %775 = getelementptr inbounds i8, i8* %773, i64 32
  %776 = bitcast i8* %775 to i32*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %773, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %776, align 4
  %777 = getelementptr inbounds i8, i8* %773, i64 48
  %778 = getelementptr inbounds i8, i8* %773, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %777, i8 0, i64 16, i1 false) #11
  %779 = bitcast i8* %778 to i8**
  store i8* %777, i8** %779, align 8
  %780 = getelementptr inbounds i8, i8* %773, i64 64
  %781 = getelementptr inbounds i8, i8* %773, i64 96
  %782 = bitcast i8* %781 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %780, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %782, align 4
  call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %774, %"class.spvtools::opt::Module"* %772) #11
  %783 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %765, i64 0, i32 6
  %784 = ptrtoint i8* %773 to i64
  %785 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %783, i64 0, i32 0, i32 0, i32 0
  %786 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %785, align 8
  %787 = bitcast %"class.std::__1::unique_ptr.62"* %783 to i64*
  store i64 %784, i64* %787, align 8
  %788 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %786, null
  br i1 %788, label %791, label %789

789:                                              ; preds = %770
  %790 = bitcast %"class.std::__1::unique_ptr.62"* %783 to %"struct.std::__1::default_delete.120"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %790, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %786) #11
  br label %791

791:                                              ; preds = %789, %770
  %792 = load i32, i32* %766, align 8
  %793 = or i32 %792, 1
  store i32 %793, i32* %766, align 8
  br label %794

794:                                              ; preds = %761, %791
  %795 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %765, i64 0, i32 6, i32 0, i32 0, i32 0
  %796 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %795, align 8
  %797 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %648, i64 0, i32 1, i32 0, i32 0, i32 0
  %798 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %797, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %796, %"class.spvtools::opt::Instruction"* %798) #11
  %799 = getelementptr inbounds %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %647, i64 1
  %800 = icmp eq %"class.spvtools::opt::BasicBlock"** %799, %540
  br i1 %800, label %576, label %646

801:                                              ; preds = %3, %645
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstDefEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_(%"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::IRContext"*, i32) unnamed_addr #2

declare void @_ZN8spvtools3opt9IRContext10ForgetUsesEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis13DefUseManager14AnalyzeInstUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass14AddNewPhiNodesEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1328", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::BasicBlock"*, align 8
  store %"class.spvtools::opt::BasicBlock"* %1, %"class.spvtools::opt::BasicBlock"** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %9 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %8, align 8
  %10 = tail call %"class.spvtools::opt::DominatorAnalysis"* @_ZN8spvtools3opt9IRContext20GetDominatorAnalysisEPKNS0_8FunctionE(%"class.spvtools::opt::IRContext"* %7, %"class.spvtools::opt::Function"* %9) #11
  %11 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %11, label %54, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysis", %"class.spvtools::opt::DominatorAnalysis"* %10, i64 0, i32 0, i32 0
  %14 = tail call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt13DominatorTree18ImmediateDominatorEPKNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %13, %"class.spvtools::opt::BasicBlock"* nonnull %1) #11
  %15 = icmp eq %"class.spvtools::opt::BasicBlock"* %14, null
  br i1 %15, label %54, label %16

16:                                               ; preds = %12
  %17 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %6, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 7, i32 0
  %19 = bitcast %"class.std::__1::tuple.1328"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.std::__1::tuple.1328", %"class.std::__1::tuple.1328"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::BasicBlock"** %5, %"class.spvtools::opt::BasicBlock"*** %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %21) #11
  %22 = call { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"* %18, %"class.spvtools::opt::BasicBlock"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1328"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %23 = extractvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %22, 0
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %23, i64 3
  %25 = bitcast %"struct.std::__1::__hash_node_base.944"* %24 to %"class.spvtools::opt::Instruction"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %25, align 8
  %27 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %17, %"class.spvtools::opt::Instruction"* %26)
  %28 = icmp eq %"class.spvtools::opt::BasicBlock"* %27, null
  %29 = icmp eq %"class.spvtools::opt::BasicBlock"* %27, %14
  %30 = or i1 %28, %29
  br i1 %30, label %54, label %31

31:                                               ; preds = %16, %39
  %32 = phi %"class.spvtools::opt::BasicBlock"* [ %40, %39 ], [ %27, %16 ]
  %33 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %32, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %34 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %32, i64 0, i32 2, i32 0, i32 1
  %35 = bitcast %"class.spvtools::opt::Instruction"** %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = inttoptr i64 %36 to %"class.spvtools::opt::Instruction"*
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %44, %31
  %40 = call %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt13DominatorTree18ImmediateDominatorEPKNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"* %13, %"class.spvtools::opt::BasicBlock"* nonnull %32) #11
  %41 = icmp eq %"class.spvtools::opt::BasicBlock"* %40, null
  %42 = icmp eq %"class.spvtools::opt::BasicBlock"* %40, %14
  %43 = or i1 %41, %42
  br i1 %43, label %54, label %31

44:                                               ; preds = %31, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %52, %44 ], [ %37, %31 ]
  %46 = phi i64 [ %51, %44 ], [ %36, %31 ]
  %47 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %5, align 8
  call void @_ZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS0_10BasicBlockERNS0_11InstructionE(%"class.spvtools::opt::MergeReturnPass"* %0, %"class.spvtools::opt::BasicBlock"* %47, %"class.spvtools::opt::Instruction"* dereferenceable(112) %45)
  %48 = inttoptr i64 %46 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %49 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %48, i64 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = inttoptr i64 %51 to %"class.spvtools::opt::Instruction"*
  %53 = icmp eq %"class.spvtools::opt::Instruction"* %34, %52
  br i1 %53, label %39, label %44

54:                                               ; preds = %39, %16, %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8spvtools3opt15MergeReturnPass22CreateSingleCaseSwitchEPNS0_10BasicBlockE(%"class.spvtools::opt::MergeReturnPass"* nocapture readonly, %"class.spvtools::opt::BasicBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple.1157", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca i32, align 4
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %8 = alloca %"class.std::__1::vector.1099", align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %10 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %9, align 8
  %11 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %10, i64 0, i32 3, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 0, i32 2
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 59
  br i1 %21, label %22, label %32

22:                                               ; preds = %2, %22
  %23 = phi i64 [ %27, %22 ], [ %17, %2 ]
  %24 = inttoptr i64 %23 to %"class.spvtools::utils::IntrusiveNodeBase"*
  %25 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %24, i64 0, i32 1
  %26 = bitcast %"class.spvtools::opt::Instruction"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = inttoptr i64 %27 to %"class.spvtools::opt::Instruction"*
  %29 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %28, i64 0, i32 2
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 59
  br i1 %31, label %22, label %32

32:                                               ; preds = %22, %2
  %33 = phi i64 [ %17, %2 ], [ %27, %22 ]
  %34 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %35 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 4, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %36, align 8
  %38 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %37) #11
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %52

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 2
  %42 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %42, i64 0, i32 2
  %44 = load i8, i8* %43, align 8, !range !7
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %47, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %48 = getelementptr inbounds i8, i8* %47, i64 37
  store i8 0, i8* %48, align 1
  %49 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 1, i32 0
  %50 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %49, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %35, i64 0, i32 5, i32 0, i32 0
  tail call void %50(%"union.std::__1::__function::__policy_storage"* %51, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %47) #11
  tail call void @_ZdlPv(i8* nonnull %47) #10
  br label %52

52:                                               ; preds = %32, %40, %46
  %53 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i64*
  store i64 %33, i64* %53, align 8
  %54 = call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt10BasicBlock15SplitBasicBlockEPNS0_9IRContextEjNS0_15InstructionList8iteratorE(%"class.spvtools::opt::BasicBlock"* %14, %"class.spvtools::opt::IRContext"* %35, i32 %38, %"class.spvtools::opt::InstructionList::iterator"* nonnull %6) #11
  %55 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %55) #11
  %56 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 1
  %57 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 3
  %58 = bitcast %"class.spvtools::opt::IRContext"** %34 to i64*
  %59 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 32, i1 false)
  %60 = load i64, i64* %58, align 8
  %61 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %14, i64 0, i32 2, i32 0, i32 1
  %62 = ptrtoint %"class.spvtools::opt::Instruction"* %61 to i64
  %63 = bitcast %"class.spvtools::opt::InstructionBuilder"* %7 to i64*
  store i64 %60, i64* %63, align 8
  store %"class.spvtools::opt::BasicBlock"* %14, %"class.spvtools::opt::BasicBlock"** %56, align 8
  %64 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %7, i64 0, i32 2
  %65 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %64 to i64*
  store i64 %62, i64* %65, align 8
  store i32 3, i32* %57, align 8
  %66 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 0, i1 zeroext false) #11
  %67 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 4
  %68 = load i8, i8* %67, align 1, !range !7
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %52
  %71 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %66, i64 0, i32 3
  %72 = load i8, i8* %71, align 4, !range !7
  %73 = zext i8 %72 to i32
  %74 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %66, i32 %73) #11
  br label %75

75:                                               ; preds = %52, %70
  %76 = phi i32 [ %74, %70 ], [ 0, %52 ]
  %77 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %54, i64 0, i32 1, i32 0, i32 0, i32 0
  %78 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, align 8
  %79 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 4
  %80 = load i8, i8* %79, align 1, !range !7
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %87, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %78, i64 0, i32 3
  %84 = load i8, i8* %83, align 4, !range !7
  %85 = zext i8 %84 to i32
  %86 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %78, i32 %85) #11
  br label %87

87:                                               ; preds = %75, %82
  %88 = phi i32 [ %86, %82 ], [ 0, %75 ]
  %89 = bitcast %"class.std::__1::vector.1099"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 0, i64 24, i1 false) #11
  %90 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %91 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %90, align 8
  %92 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 4
  %93 = load i8, i8* %92, align 1, !range !7
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %87
  %96 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %91, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !range !7
  %98 = zext i8 %97 to i32
  %99 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %91, i32 %98) #11
  br label %100

100:                                              ; preds = %87, %95
  %101 = phi i32 [ %99, %95 ], [ 0, %87 ]
  %102 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj(%"class.spvtools::opt::InstructionBuilder"* nonnull %7, i32 %76, i32 %88, %"class.std::__1::vector.1099"* nonnull dereferenceable(24) %8, i32 %101, i32 0)
  %103 = getelementptr inbounds %"class.std::__1::vector.1099", %"class.std::__1::vector.1099"* %8, i64 0, i32 0, i32 0
  %104 = load %"struct.std::__1::pair.1101"*, %"struct.std::__1::pair.1101"** %103, align 8
  %105 = icmp eq %"struct.std::__1::pair.1101"* %104, null
  br i1 %105, label %136, label %106

106:                                              ; preds = %100
  %107 = bitcast %"struct.std::__1::pair.1101"* %104 to i8*
  %108 = getelementptr inbounds %"class.std::__1::vector.1099", %"class.std::__1::vector.1099"* %8, i64 0, i32 0, i32 1
  %109 = load %"struct.std::__1::pair.1101"*, %"struct.std::__1::pair.1101"** %108, align 8
  %110 = icmp eq %"struct.std::__1::pair.1101"* %109, %104
  br i1 %110, label %134, label %111

111:                                              ; preds = %106, %129
  %112 = phi %"struct.std::__1::pair.1101"* [ %113, %129 ], [ %109, %106 ]
  %113 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %112, i64 -1
  %114 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %113, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %112, i64 -1, i32 0, i32 4, i32 0, i32 0, i32 0
  %116 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %115, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %115, align 8
  %117 = icmp eq %"class.std::__1::vector.3"* %116, null
  br i1 %117, label %129, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %116, i64 0, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = icmp eq i32* %120, null
  br i1 %121, label %127, label %122

122:                                              ; preds = %118
  %123 = ptrtoint i32* %120 to i64
  %124 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %116, i64 0, i32 0, i32 1
  %125 = bitcast i32** %124 to i64*
  store i64 %123, i64* %125, align 8
  %126 = bitcast i32* %120 to i8*
  call void @_ZdlPv(i8* %126) #10
  br label %127

127:                                              ; preds = %122, %118
  %128 = bitcast %"class.std::__1::vector.3"* %116 to i8*
  call void @_ZdlPv(i8* %128) #10
  br label %129

129:                                              ; preds = %127, %111
  %130 = icmp eq %"struct.std::__1::pair.1101"* %113, %104
  br i1 %130, label %131, label %111

131:                                              ; preds = %129
  %132 = bitcast %"class.std::__1::vector.1099"* %8 to i8**
  %133 = load i8*, i8** %132, align 8
  br label %134

134:                                              ; preds = %131, %106
  %135 = phi i8* [ %133, %131 ], [ %107, %106 ]
  store %"struct.std::__1::pair.1101"* %104, %"struct.std::__1::pair.1101"** %108, align 8
  call void @_ZdlPv(i8* %135) #10
  br label %136

136:                                              ; preds = %100, %134
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #11
  %137 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %138 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %137, i64 0, i32 11
  %139 = load i32, i32* %138, align 8
  %140 = and i32 %139, 16
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %189, label %142

142:                                              ; preds = %136
  %143 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %137, i64 0, i32 15, i32 0, i32 0, i32 0
  %144 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %143, align 8
  %145 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %145) #11
  store i32 -1431655766, i32* %5, align 4
  %146 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %77, align 8
  %147 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 4
  %148 = load i8, i8* %147, align 1, !range !7
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %146, i64 0, i32 3
  %152 = load i8, i8* %151, align 4, !range !7
  %153 = zext i8 %152 to i32
  %154 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %146, i32 %153) #11
  br label %155

155:                                              ; preds = %142, %150
  %156 = phi i32 [ %154, %150 ], [ 0, %142 ]
  store i32 %156, i32* %5, align 4
  %157 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %144, i64 0, i32 5, i32 0
  %158 = bitcast %"class.std::__1::tuple.1157"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #11
  %159 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %3, i64 0, i32 0, i32 0, i32 0
  store i32* %5, i32** %159, align 8
  %160 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %160) #11
  %161 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %157, i32* nonnull dereferenceable(4) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1157"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %162 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %161, 0
  %163 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %162, i64 3
  %164 = bitcast %"struct.std::__1::__hash_node_base.333"* %163 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %160) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #11
  store %"class.spvtools::opt::BasicBlock"* %54, %"class.spvtools::opt::BasicBlock"** %164, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %144, %"class.spvtools::opt::BasicBlock"* %54) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %145) #11
  %165 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %34, align 8
  %166 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 11
  %167 = load i32, i32* %166, align 8
  %168 = and i32 %167, 16
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %186

170:                                              ; preds = %155
  %171 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 4, i32 0, i32 0, i32 0
  %172 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %171, align 8
  %173 = call i8* @_Znwm(i64 400) #10
  %174 = bitcast i8* %173 to %"class.spvtools::opt::CFG"*
  call void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"* nonnull %174, %"class.spvtools::opt::Module"* %172) #11
  %175 = ptrtoint i8* %173 to i64
  %176 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 15
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %177, align 8
  %179 = bitcast %"class.std::__1::unique_ptr.273"* %176 to i64*
  store i64 %175, i64* %179, align 8
  %180 = icmp eq %"class.spvtools::opt::CFG"* %178, null
  br i1 %180, label %183, label %181

181:                                              ; preds = %170
  call void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"* nonnull %178) #11
  %182 = bitcast %"class.spvtools::opt::CFG"* %178 to i8*
  call void @_ZdlPv(i8* %182) #10
  br label %183

183:                                              ; preds = %181, %170
  %184 = load i32, i32* %166, align 8
  %185 = or i32 %184, 16
  store i32 %185, i32* %166, align 8
  br label %186

186:                                              ; preds = %155, %183
  %187 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %165, i64 0, i32 15, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %187, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %188, %"class.spvtools::opt::BasicBlock"* %14) #11
  br label %189

189:                                              ; preds = %136, %186
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %55) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt15MergeReturnPass20CreateContinueTargetEj(%"class.spvtools::opt::MergeReturnPass"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.40", align 8
  %7 = alloca %"class.std::__1::tuple.1157", align 8
  %8 = alloca %"class.std::__1::tuple.1131", align 1
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::__1::vector", align 8
  %11 = alloca %"class.std::__1::unique_ptr.40", align 8
  %12 = alloca %"class.spvtools::opt::InstructionBuilder", align 8
  %13 = tail call i8* @_Znwm(i64 112) #10
  %14 = bitcast i8* %13 to %"class.spvtools::opt::Instruction"*
  %15 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 2
  %16 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %17 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %17, align 8
  %19 = tail call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %18) #11
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 2
  %23 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %23, i64 0, i32 2
  %25 = load i8, i8* %24, align 8, !range !7
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %33

27:                                               ; preds = %21
  %28 = tail call i8* @_Znwm(i64 48) #10
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %29 = getelementptr inbounds i8, i8* %28, i64 37
  store i8 0, i8* %29, align 1
  %30 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 1, i32 0
  %31 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %30, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %16, i64 0, i32 5, i32 0, i32 0
  tail call void %31(%"union.std::__1::__function::__policy_storage"* %32, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %28) #11
  tail call void @_ZdlPv(i8* nonnull %28) #10
  br label %33

33:                                               ; preds = %2, %21, %27
  %34 = bitcast %"class.std::__1::vector"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 0, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %14, %"class.spvtools::opt::IRContext"* %16, i32 248, i32 0, i32 %19, %"class.std::__1::vector"* nonnull dereferenceable(24) %10) #11
  %35 = ptrtoint i8* %13 to i64
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %37 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %36, align 8
  %38 = icmp eq %"struct.spvtools::opt::Operand"* %37, null
  br i1 %38, label %69, label %39

39:                                               ; preds = %33
  %40 = bitcast %"struct.spvtools::opt::Operand"* %37 to i8*
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 1
  %42 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %41, align 8
  %43 = icmp eq %"struct.spvtools::opt::Operand"* %42, %37
  br i1 %43, label %67, label %44

44:                                               ; preds = %39, %62
  %45 = phi %"struct.spvtools::opt::Operand"* [ %46, %62 ], [ %42, %39 ]
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %45, i64 -1
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %45, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %45, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %49 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %48, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %48, align 8
  %50 = icmp eq %"class.std::__1::vector.3"* %49, null
  br i1 %50, label %62, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = icmp eq i32* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %51
  %56 = ptrtoint i32* %53 to i64
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %49, i64 0, i32 0, i32 1
  %58 = bitcast i32** %57 to i64*
  store i64 %56, i64* %58, align 8
  %59 = bitcast i32* %53 to i8*
  call void @_ZdlPv(i8* %59) #10
  br label %60

60:                                               ; preds = %55, %51
  %61 = bitcast %"class.std::__1::vector.3"* %49 to i8*
  call void @_ZdlPv(i8* %61) #10
  br label %62

62:                                               ; preds = %60, %44
  %63 = icmp eq %"struct.spvtools::opt::Operand"* %46, %37
  br i1 %63, label %64, label %44

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::vector"* %10 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %39
  %68 = phi i8* [ %66, %64 ], [ %40, %39 ]
  store %"struct.spvtools::opt::Operand"* %37, %"struct.spvtools::opt::Operand"** %41, align 8
  call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %33, %67
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #11
  %70 = bitcast %"class.std::__1::unique_ptr.40"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 0, i32 0, i32 0, i32 0
  %72 = call i8* @_Znwm(i64 136) #10
  %73 = bitcast i8* %72 to %"class.spvtools::opt::Function"**
  store %"class.spvtools::opt::Function"* null, %"class.spvtools::opt::Function"** %73, align 8
  %74 = getelementptr inbounds i8, i8* %72, i64 8
  %75 = bitcast i8* %74 to i64*
  store i64 %35, i64* %75, align 8
  %76 = getelementptr inbounds i8, i8* %72, i64 16
  %77 = bitcast i8* %76 to i32 (...)***
  %78 = getelementptr inbounds i8, i8* %72, i64 24
  %79 = bitcast i8* %78 to i32 (...)***
  %80 = getelementptr inbounds i8, i8* %72, i64 32
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt11InstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %79, align 8
  %81 = getelementptr inbounds i8, i8* %72, i64 56
  %82 = getelementptr inbounds i8, i8* %72, i64 72
  %83 = bitcast i8* %82 to i32*
  store i32 0, i32* %83, align 8
  %84 = getelementptr inbounds i8, i8* %72, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 14, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 56, i1 false) #11
  %85 = bitcast i8* %80 to i8**
  store i8* %78, i8** %85, align 8
  %86 = getelementptr inbounds i8, i8* %72, i64 40
  %87 = bitcast i8* %86 to i8**
  store i8* %78, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %72, i64 48
  store i8 1, i8* %88, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %89 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 2
  %90 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %90, i64 0, i32 3
  %92 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %90, i64 0, i32 3, i32 0, i32 1
  %93 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %93, i64 -1
  %95 = ptrtoint %"class.std::__1::unique_ptr.40"* %94 to i64
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %6, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %6 to i8**
  store i8* %72, i8** %98, align 8
  %99 = bitcast %"class.std::__1::vector.38"* %91 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = sub i64 %95, %100
  %102 = ashr exact i64 %101, 3
  %103 = call %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"* %91, %"class.std::__1::unique_ptr.40"* %94, %"class.std::__1::unique_ptr.40"* nonnull dereferenceable(8) %6) #11
  %104 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %91, i64 0, i32 0, i32 0
  %105 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %104, align 8
  %106 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %97, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %107 = icmp eq %"class.spvtools::opt::BasicBlock"* %106, null
  br i1 %107, label %110, label %108

108:                                              ; preds = %69
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %6 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %109, %"class.spvtools::opt::BasicBlock"* nonnull %106) #11
  br label %110

110:                                              ; preds = %69, %108
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 %102, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %113 = bitcast %"class.spvtools::opt::Function"** %89 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.spvtools::opt::BasicBlock"* %112 to i64*
  store i64 %114, i64* %115, align 8
  %116 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %117 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %112, i64 0, i32 1, i32 0, i32 0, i32 0
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %116, i64 0, i32 11
  %119 = load i32, i32* %118, align 8
  %120 = and i32 %119, 1
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %129, label %122

122:                                              ; preds = %110
  %123 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %116, i64 0, i32 6, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %124, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %125, %"class.spvtools::opt::Instruction"* %123) #11
  %126 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %127 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %126, i64 0, i32 11
  %128 = load i32, i32* %127, align 8
  br label %129

129:                                              ; preds = %110, %122
  %130 = phi %"class.spvtools::opt::IRContext"* [ %116, %110 ], [ %126, %122 ]
  %131 = phi i32 [ %119, %110 ], [ %128, %122 ]
  %132 = bitcast %"class.spvtools::opt::Instruction"** %117 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134)
  %135 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %133, i64* %135, align 8
  %136 = and i32 %131, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %129
  %139 = ptrtoint %"class.spvtools::opt::IRContext"* %130 to i64
  br label %151

140:                                              ; preds = %129
  %141 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %130, i64 0, i32 9, i32 0
  %142 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #11
  %143 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %143, align 8
  %144 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %144) #11
  %145 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %141, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %146 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %145, 0
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %146, i64 3
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"* %147 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #11
  store %"class.spvtools::opt::BasicBlock"* %112, %"class.spvtools::opt::BasicBlock"** %148, align 8
  %149 = bitcast %"class.spvtools::opt::IRContext"** %15 to i64*
  %150 = load i64, i64* %149, align 8
  br label %151

151:                                              ; preds = %138, %140
  %152 = phi i64 [ %139, %138 ], [ %150, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134)
  %153 = bitcast %"class.spvtools::opt::InstructionBuilder"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %153) #11
  %154 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 1
  %155 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 3
  %156 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %112, i64 0, i32 2, i32 0, i32 1
  %157 = ptrtoint %"class.spvtools::opt::Instruction"* %156 to i64
  %158 = bitcast %"class.spvtools::opt::InstructionBuilder"* %12 to i64*
  %159 = bitcast %"class.spvtools::opt::InstructionBuilder"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %159, i8 -86, i64 32, i1 false)
  store i64 %152, i64* %158, align 8
  store %"class.spvtools::opt::BasicBlock"* %112, %"class.spvtools::opt::BasicBlock"** %154, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %12, i64 0, i32 2
  %161 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %160 to i64*
  store i64 %157, i64* %161, align 8
  store i32 3, i32* %155, align 8
  %162 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"* nonnull %12, i32 %1)
  %163 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %15, align 8
  %164 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 11
  %165 = load i32, i32* %164, align 8
  %166 = and i32 %165, 16
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %191, label %168

168:                                              ; preds = %151
  %169 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %163, i64 0, i32 15, i32 0, i32 0, i32 0
  %170 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %169, align 8
  %171 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %171) #11
  store i32 -1431655766, i32* %9, align 4
  %172 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %117, align 8
  %173 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 4
  %174 = load i8, i8* %173, align 1, !range !7
  %175 = icmp eq i8 %174, 0
  br i1 %175, label %181, label %176

176:                                              ; preds = %168
  %177 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %172, i64 0, i32 3
  %178 = load i8, i8* %177, align 4, !range !7
  %179 = zext i8 %178 to i32
  %180 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %172, i32 %179) #11
  br label %181

181:                                              ; preds = %168, %176
  %182 = phi i32 [ %180, %176 ], [ 0, %168 ]
  store i32 %182, i32* %9, align 4
  %183 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %170, i64 0, i32 5, i32 0
  %184 = bitcast %"class.std::__1::tuple.1157"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #11
  %185 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %7, i64 0, i32 0, i32 0, i32 0
  store i32* %9, i32** %185, align 8
  %186 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %186) #11
  %187 = call { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"* %183, i32* nonnull dereferenceable(4) %9, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple.1157"* nonnull dereferenceable(8) %7, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %8) #11
  %188 = extractvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %187, 0
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %188, i64 3
  %190 = bitcast %"struct.std::__1::__hash_node_base.333"* %189 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %186) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #11
  store %"class.spvtools::opt::BasicBlock"* %112, %"class.spvtools::opt::BasicBlock"** %190, align 8
  call void @_ZN8spvtools3opt3CFG8AddEdgesEPNS0_10BasicBlockE(%"class.spvtools::opt::CFG"* %170, %"class.spvtools::opt::BasicBlock"* %112) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %171) #11
  br label %191

191:                                              ; preds = %151, %181
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %153) #11
  %192 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %71, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %193 = icmp eq %"class.spvtools::opt::BasicBlock"* %192, null
  br i1 %193, label %196, label %194

194:                                              ; preds = %191
  %195 = bitcast %"class.std::__1::unique_ptr.40"* %11 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* nonnull %195, %"class.spvtools::opt::BasicBlock"* nonnull %192) #11
  br label %196

196:                                              ; preds = %194, %191
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  ret %"class.spvtools::opt::BasicBlock"* %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddBranchEj(%"class.spvtools::opt::InstructionBuilder"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.21", align 8
  %4 = alloca %"class.std::__1::vector", align 8
  %5 = alloca [1 x %"struct.spvtools::opt::Operand"], align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = tail call i8* @_Znwm(i64 112) #10
  %10 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %11 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %10, align 8
  %12 = bitcast %"class.std::__1::vector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  %13 = bitcast [1 x %"struct.spvtools::opt::Operand"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %13) #11
  %14 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %19 = bitcast i32** %17 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %18, %"struct.std::__1::aligned_storage<4, 4>::type"** %19, align 8
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %21 = bitcast %"class.std::__1::unique_ptr.0"* %20 to i64*
  store i64 0, i64* %21, align 8
  %22 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %18 to i32*
  store i64 1, i64* %16, align 8
  store i32 %1, i32* %22, align 8
  %23 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  store i32 1, i32* %23, align 8
  %24 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %24, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %26 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 2
  %28 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 3, i64 0
  %29 = bitcast i32** %27 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %28, %"struct.std::__1::aligned_storage<4, 4>::type"** %29, align 8
  %30 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.0"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %24, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %33 = call i8* @_Znwm(i64 48) #10
  %34 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::vector"* %4 to i8**
  store i8* %33, i8** %35, align 8
  %36 = getelementptr inbounds i8, i8* %33, i64 48
  %37 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %38 = bitcast %"struct.spvtools::opt::Operand"** %37 to i8**
  store i8* %36, i8** %38, align 8
  %39 = bitcast i8* %33 to i32*
  %40 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  store i32 %41, i32* %39, align 8
  %42 = getelementptr inbounds i8, i8* %33, i64 8
  %43 = bitcast i8* %42 to %"class.spvtools::utils::SmallVector"*
  %44 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1
  %45 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %45, align 8
  %46 = getelementptr inbounds i8, i8* %33, i64 16
  %47 = bitcast i8* %46 to i64*
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds i8, i8* %33, i64 24
  %49 = getelementptr inbounds i8, i8* %33, i64 32
  %50 = bitcast i8* %48 to i8**
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds i8, i8* %33, i64 40
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %43, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %44) #11
  %54 = getelementptr inbounds i8, i8* %33, i64 48
  %55 = bitcast i8* %9 to %"class.spvtools::opt::Instruction"*
  %56 = bitcast %"struct.spvtools::opt::Operand"** %34 to i64*
  %57 = ptrtoint i8* %54 to i64
  store i64 %57, i64* %56, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %55, %"class.spvtools::opt::IRContext"* %11, i32 249, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %4) #11
  %58 = ptrtoint i8* %9 to i64
  %59 = bitcast %"class.std::__1::unique_ptr.21"* %3 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %4, i64 0, i32 0, i32 0
  %61 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %60, align 8
  %62 = icmp eq %"struct.spvtools::opt::Operand"* %61, null
  br i1 %62, label %91, label %63

63:                                               ; preds = %2
  %64 = bitcast %"struct.spvtools::opt::Operand"* %61 to i8*
  %65 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %34, align 8
  %66 = icmp eq %"struct.spvtools::opt::Operand"* %65, %61
  br i1 %66, label %89, label %67

67:                                               ; preds = %63, %85
  %68 = phi %"struct.spvtools::opt::Operand"* [ %69, %85 ], [ %65, %63 ]
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %68, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %72 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %71, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %71, align 8
  %73 = icmp eq %"class.std::__1::vector.3"* %72, null
  br i1 %73, label %85, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  br i1 %77, label %83, label %78

78:                                               ; preds = %74
  %79 = ptrtoint i32* %76 to i64
  %80 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %72, i64 0, i32 0, i32 1
  %81 = bitcast i32** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast i32* %76 to i8*
  call void @_ZdlPv(i8* %82) #10
  br label %83

83:                                               ; preds = %78, %74
  %84 = bitcast %"class.std::__1::vector.3"* %72 to i8*
  call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %83, %67
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %69, %61
  br i1 %86, label %87, label %67

87:                                               ; preds = %85
  %88 = load i8*, i8** %35, align 8
  br label %89

89:                                               ; preds = %87, %63
  %90 = phi i8* [ %88, %87 ], [ %64, %63 ]
  store %"struct.spvtools::opt::Operand"* %61, %"struct.spvtools::opt::Operand"** %34, align 8
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %2, %89
  %92 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds [1 x %"struct.spvtools::opt::Operand"], [1 x %"struct.spvtools::opt::Operand"]* %5, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %93, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %93, align 8
  %95 = icmp eq %"class.std::__1::vector.3"* %94, null
  br i1 %95, label %107, label %96

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %96
  %101 = ptrtoint i32* %98 to i64
  %102 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %94, i64 0, i32 0, i32 1
  %103 = bitcast i32** %102 to i64*
  store i64 %101, i64* %103, align 8
  %104 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %100, %96
  %106 = bitcast %"class.std::__1::vector.3"* %94 to i8*
  call void @_ZdlPv(i8* %106) #10
  br label %107

107:                                              ; preds = %91, %105
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %108 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %107, %120
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  %123 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %3)
  %124 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %8, align 8
  %125 = icmp eq %"class.spvtools::opt::Instruction"* %124, null
  br i1 %125, label %131, label %126

126:                                              ; preds = %122
  %127 = bitcast %"class.spvtools::opt::Instruction"* %124 to void (%"class.spvtools::opt::Instruction"*)***
  %128 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %128, i64 1
  %130 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %129, align 8
  call void %130(%"class.spvtools::opt::Instruction"* nonnull %124) #11
  br label %131

131:                                              ; preds = %122, %126
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret %"class.spvtools::opt::Instruction"* %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddSwitchEjjRKNSt3__16vectorINS2_4pairINS_5utils11SmallVectorIjLm2EEEjEENS2_9allocatorIS8_EEEEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.1099"* dereferenceable(24), i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"struct.spvtools::opt::Operand", align 8
  %9 = alloca %"class.spvtools::utils::SmallVector", align 8
  %10 = alloca %"struct.spvtools::opt::Operand", align 8
  %11 = alloca %"class.spvtools::utils::SmallVector", align 8
  %12 = alloca %"struct.spvtools::opt::Operand", align 8
  %13 = alloca %"struct.spvtools::opt::Operand", align 8
  %14 = alloca %"class.spvtools::utils::SmallVector", align 8
  %15 = alloca %"class.std::__1::unique_ptr.21", align 8
  %16 = icmp eq i32 %4, -1
  br i1 %16, label %19, label %17

17:                                               ; preds = %6
  %18 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"* %0, i32 %4, i32 %5)
  br label %19

19:                                               ; preds = %6, %17
  %20 = bitcast %"class.std::__1::vector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #11
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #11
  %24 = bitcast %"struct.spvtools::opt::Operand"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #11
  %25 = bitcast %"class.spvtools::utils::SmallVector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 1
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 2
  %29 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 3, i64 0
  %30 = bitcast i32** %28 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %29, %"struct.std::__1::aligned_storage<4, 4>::type"** %30, align 8
  %31 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4
  %32 = bitcast %"class.std::__1::unique_ptr.0"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %29 to i32*
  store i64 1, i64* %27, align 8
  store i32 %1, i32* %33, align 8
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %35, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 1
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 2
  %39 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %35, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %9) #11
  %44 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %45 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %46 = icmp ult %"struct.spvtools::opt::Operand"* %44, %45
  br i1 %46, label %47, label %62

47:                                               ; preds = %19
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 0
  %49 = load i32, i32* %34, align 8
  store i32 %49, i32* %48, align 8
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1
  %51 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %50, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 1
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 2
  %54 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 3, i64 0
  %55 = bitcast i32** %53 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %54, %"struct.std::__1::aligned_storage<4, 4>::type"** %55, align 8
  %56 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 0, i32 1, i32 4
  %57 = bitcast %"class.std::__1::unique_ptr.0"* %56 to i64*
  store i64 0, i64* %57, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %50, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %35) #11
  %59 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %44, i64 1
  %60 = ptrtoint %"struct.spvtools::opt::Operand"* %59 to i64
  %61 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  store i64 %60, i64* %61, align 8
  br label %63

62:                                               ; preds = %19
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %8) #11
  br label %63

63:                                               ; preds = %47, %62
  %64 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %8, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %65, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %65, align 8
  %67 = icmp eq %"class.std::__1::vector.3"* %66, null
  br i1 %67, label %79, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = icmp eq i32* %70, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %68
  %73 = ptrtoint i32* %70 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %66, i64 0, i32 0, i32 1
  %75 = bitcast i32** %74 to i64*
  store i64 %73, i64* %75, align 8
  %76 = bitcast i32* %70 to i8*
  call void @_ZdlPv(i8* %76) #10
  br label %77

77:                                               ; preds = %72, %68
  %78 = bitcast %"class.std::__1::vector.3"* %66 to i8*
  call void @_ZdlPv(i8* %78) #10
  br label %79

79:                                               ; preds = %63, %77
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %80 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %9, i64 0, i32 4, i32 0, i32 0, i32 0
  %81 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %80, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %80, align 8
  %82 = icmp eq %"class.std::__1::vector.3"* %81, null
  br i1 %82, label %94, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = icmp eq i32* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = ptrtoint i32* %85 to i64
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %81, i64 0, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = bitcast i32* %85 to i8*
  call void @_ZdlPv(i8* %91) #10
  br label %92

92:                                               ; preds = %87, %83
  %93 = bitcast %"class.std::__1::vector.3"* %81 to i8*
  call void @_ZdlPv(i8* %93) #10
  br label %94

94:                                               ; preds = %79, %92
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #11
  %95 = bitcast %"struct.spvtools::opt::Operand"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %95) #11
  %96 = bitcast %"class.spvtools::utils::SmallVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %96) #11
  %97 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 1
  %99 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 2
  %100 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 3, i64 0
  %101 = bitcast i32** %99 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %100, %"struct.std::__1::aligned_storage<4, 4>::type"** %101, align 8
  %102 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4
  %103 = bitcast %"class.std::__1::unique_ptr.0"* %102 to i64*
  store i64 0, i64* %103, align 8
  %104 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %100 to i32*
  store i64 1, i64* %98, align 8
  store i32 %2, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 0
  store i32 1, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1
  %107 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %106, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 1
  store i64 0, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 3, i64 0
  %111 = bitcast i32** %109 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %110, %"struct.std::__1::aligned_storage<4, 4>::type"** %111, align 8
  %112 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4
  %113 = bitcast %"class.std::__1::unique_ptr.0"* %112 to i64*
  store i64 0, i64* %113, align 8
  %114 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %106, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %11) #11
  %115 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %116 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %117 = icmp ult %"struct.spvtools::opt::Operand"* %115, %116
  br i1 %117, label %118, label %133

118:                                              ; preds = %94
  %119 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 0
  %120 = load i32, i32* %105, align 8
  store i32 %120, i32* %119, align 8
  %121 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1
  %122 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %121, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %122, align 8
  %123 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 1
  store i64 0, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 2
  %125 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 3, i64 0
  %126 = bitcast i32** %124 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %125, %"struct.std::__1::aligned_storage<4, 4>::type"** %126, align 8
  %127 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 0, i32 1, i32 4
  %128 = bitcast %"class.std::__1::unique_ptr.0"* %127 to i64*
  store i64 0, i64* %128, align 8
  %129 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %121, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %106) #11
  %130 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %115, i64 1
  %131 = ptrtoint %"struct.spvtools::opt::Operand"* %130 to i64
  %132 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  store i64 %131, i64* %132, align 8
  br label %134

133:                                              ; preds = %94
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %10) #11
  br label %134

134:                                              ; preds = %118, %133
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %135, align 8
  %136 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %10, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %137 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %136, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %136, align 8
  %138 = icmp eq %"class.std::__1::vector.3"* %137, null
  br i1 %138, label %150, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  %142 = icmp eq i32* %141, null
  br i1 %142, label %148, label %143

143:                                              ; preds = %139
  %144 = ptrtoint i32* %141 to i64
  %145 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 1
  %146 = bitcast i32** %145 to i64*
  store i64 %144, i64* %146, align 8
  %147 = bitcast i32* %141 to i8*
  call void @_ZdlPv(i8* %147) #10
  br label %148

148:                                              ; preds = %143, %139
  %149 = bitcast %"class.std::__1::vector.3"* %137 to i8*
  call void @_ZdlPv(i8* %149) #10
  br label %150

150:                                              ; preds = %134, %148
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %151 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %11, i64 0, i32 4, i32 0, i32 0, i32 0
  %152 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %151, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %151, align 8
  %153 = icmp eq %"class.std::__1::vector.3"* %152, null
  br i1 %153, label %165, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 0
  %156 = load i32*, i32** %155, align 8
  %157 = icmp eq i32* %156, null
  br i1 %157, label %163, label %158

158:                                              ; preds = %154
  %159 = ptrtoint i32* %156 to i64
  %160 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %152, i64 0, i32 0, i32 1
  %161 = bitcast i32** %160 to i64*
  store i64 %159, i64* %161, align 8
  %162 = bitcast i32* %156 to i8*
  call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %158, %154
  %164 = bitcast %"class.std::__1::vector.3"* %152 to i8*
  call void @_ZdlPv(i8* %164) #10
  br label %165

165:                                              ; preds = %150, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %96) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %95) #11
  %166 = getelementptr inbounds %"class.std::__1::vector.1099", %"class.std::__1::vector.1099"* %3, i64 0, i32 0, i32 0
  %167 = load %"struct.std::__1::pair.1101"*, %"struct.std::__1::pair.1101"** %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::vector.1099", %"class.std::__1::vector.1099"* %3, i64 0, i32 0, i32 1
  %169 = load %"struct.std::__1::pair.1101"*, %"struct.std::__1::pair.1101"** %168, align 8
  %170 = icmp eq %"struct.std::__1::pair.1101"* %167, %169
  br i1 %170, label %207, label %171

171:                                              ; preds = %165
  %172 = bitcast %"struct.spvtools::opt::Operand"* %12 to i8*
  %173 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 0
  %174 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1
  %175 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %174, i64 0, i32 0
  %176 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 1
  %177 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 2
  %178 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 3, i64 0
  %179 = bitcast i32** %177 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %180 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4
  %181 = bitcast %"class.std::__1::unique_ptr.0"* %180 to i64*
  %182 = bitcast %"struct.spvtools::opt::Operand"** %22 to i64*
  %183 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 0
  %184 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %12, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %185 = bitcast %"struct.spvtools::opt::Operand"* %13 to i8*
  %186 = bitcast %"class.spvtools::utils::SmallVector"* %14 to i8*
  %187 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 0
  %188 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 1
  %189 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 2
  %190 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 3, i64 0
  %191 = bitcast i32** %189 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %192 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4
  %193 = bitcast %"class.std::__1::unique_ptr.0"* %192 to i64*
  %194 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %190 to i32*
  %195 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 0
  %196 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %196, i64 0, i32 0
  %198 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 1
  %199 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 2
  %200 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 3, i64 0
  %201 = bitcast i32** %199 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %202 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4
  %203 = bitcast %"class.std::__1::unique_ptr.0"* %202 to i64*
  %204 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 0
  %205 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %13, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %206 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %14, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %257

207:                                              ; preds = %343, %165
  %208 = bitcast %"class.std::__1::unique_ptr.21"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208) #11
  %209 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %15, i64 0, i32 0, i32 0, i32 0
  %210 = call i8* @_Znwm(i64 112) #10
  %211 = bitcast i8* %210 to %"class.spvtools::opt::Instruction"*
  %212 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %213 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %212, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %211, %"class.spvtools::opt::IRContext"* %213, i32 251, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %7) #11
  %214 = ptrtoint i8* %210 to i64
  %215 = bitcast %"class.std::__1::unique_ptr.21"* %15 to i64*
  store i64 %214, i64* %215, align 8
  %216 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %15)
  %217 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %209, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %209, align 8
  %218 = icmp eq %"class.spvtools::opt::Instruction"* %217, null
  br i1 %218, label %224, label %219

219:                                              ; preds = %207
  %220 = bitcast %"class.spvtools::opt::Instruction"* %217 to void (%"class.spvtools::opt::Instruction"*)***
  %221 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %221, i64 1
  %223 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %222, align 8
  call void %223(%"class.spvtools::opt::Instruction"* nonnull %217) #11
  br label %224

224:                                              ; preds = %207, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208) #11
  %225 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %21, align 8
  %226 = icmp eq %"struct.spvtools::opt::Operand"* %225, null
  br i1 %226, label %256, label %227

227:                                              ; preds = %224
  %228 = bitcast %"struct.spvtools::opt::Operand"* %225 to i8*
  %229 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %230 = icmp eq %"struct.spvtools::opt::Operand"* %229, %225
  br i1 %230, label %254, label %231

231:                                              ; preds = %227, %249
  %232 = phi %"struct.spvtools::opt::Operand"* [ %233, %249 ], [ %229, %227 ]
  %233 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1
  %234 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %234, align 8
  %235 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %232, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %236 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %235, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %235, align 8
  %237 = icmp eq %"class.std::__1::vector.3"* %236, null
  br i1 %237, label %249, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %236, i64 0, i32 0, i32 0
  %240 = load i32*, i32** %239, align 8
  %241 = icmp eq i32* %240, null
  br i1 %241, label %247, label %242

242:                                              ; preds = %238
  %243 = ptrtoint i32* %240 to i64
  %244 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %236, i64 0, i32 0, i32 1
  %245 = bitcast i32** %244 to i64*
  store i64 %243, i64* %245, align 8
  %246 = bitcast i32* %240 to i8*
  call void @_ZdlPv(i8* %246) #10
  br label %247

247:                                              ; preds = %242, %238
  %248 = bitcast %"class.std::__1::vector.3"* %236 to i8*
  call void @_ZdlPv(i8* %248) #10
  br label %249

249:                                              ; preds = %247, %231
  %250 = icmp eq %"struct.spvtools::opt::Operand"* %233, %225
  br i1 %250, label %251, label %231

251:                                              ; preds = %249
  %252 = bitcast %"class.std::__1::vector"* %7 to i8**
  %253 = load i8*, i8** %252, align 8
  br label %254

254:                                              ; preds = %251, %227
  %255 = phi i8* [ %253, %251 ], [ %228, %227 ]
  store %"struct.spvtools::opt::Operand"* %225, %"struct.spvtools::opt::Operand"** %22, align 8
  call void @_ZdlPv(i8* %255) #10
  br label %256

256:                                              ; preds = %224, %254
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #11
  ret %"class.spvtools::opt::Instruction"* %216

257:                                              ; preds = %171, %343
  %258 = phi %"struct.std::__1::pair.1101"* [ %167, %171 ], [ %344, %343 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %172) #11
  %259 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %258, i64 0, i32 0
  store i32 9, i32* %173, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %175, align 8
  store i64 0, i64* %176, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %178, %"struct.std::__1::aligned_storage<4, 4>::type"** %179, align 8
  store i64 0, i64* %181, align 8
  %260 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %174, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %259) #11
  %261 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %262 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %263 = icmp ult %"struct.spvtools::opt::Operand"* %261, %262
  br i1 %263, label %264, label %278

264:                                              ; preds = %257
  %265 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 0
  %266 = load i32, i32* %173, align 8
  store i32 %266, i32* %265, align 8
  %267 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1
  %268 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %267, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %268, align 8
  %269 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 1
  store i64 0, i64* %269, align 8
  %270 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 2
  %271 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 3, i64 0
  %272 = bitcast i32** %270 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %271, %"struct.std::__1::aligned_storage<4, 4>::type"** %272, align 8
  %273 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 0, i32 1, i32 4
  %274 = bitcast %"class.std::__1::unique_ptr.0"* %273 to i64*
  store i64 0, i64* %274, align 8
  %275 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %267, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %174) #11
  %276 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %261, i64 1
  %277 = ptrtoint %"struct.spvtools::opt::Operand"* %276 to i64
  store i64 %277, i64* %182, align 8
  br label %279

278:                                              ; preds = %257
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %12) #11
  br label %279

279:                                              ; preds = %264, %278
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %183, align 8
  %280 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %184, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %184, align 8
  %281 = icmp eq %"class.std::__1::vector.3"* %280, null
  br i1 %281, label %293, label %282

282:                                              ; preds = %279
  %283 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %280, i64 0, i32 0, i32 0
  %284 = load i32*, i32** %283, align 8
  %285 = icmp eq i32* %284, null
  br i1 %285, label %291, label %286

286:                                              ; preds = %282
  %287 = ptrtoint i32* %284 to i64
  %288 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %280, i64 0, i32 0, i32 1
  %289 = bitcast i32** %288 to i64*
  store i64 %287, i64* %289, align 8
  %290 = bitcast i32* %284 to i8*
  call void @_ZdlPv(i8* %290) #10
  br label %291

291:                                              ; preds = %286, %282
  %292 = bitcast %"class.std::__1::vector.3"* %280 to i8*
  call void @_ZdlPv(i8* %292) #10
  br label %293

293:                                              ; preds = %279, %291
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %172) #11
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %185) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %186) #11
  %294 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %258, i64 0, i32 1
  %295 = load i32, i32* %294, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %190, %"struct.std::__1::aligned_storage<4, 4>::type"** %191, align 8
  store i64 0, i64* %193, align 8
  store i64 1, i64* %188, align 8
  store i32 %295, i32* %194, align 8
  store i32 1, i32* %195, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %197, align 8
  store i64 0, i64* %198, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %200, %"struct.std::__1::aligned_storage<4, 4>::type"** %201, align 8
  store i64 0, i64* %203, align 8
  %296 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %196, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %14) #11
  %297 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %22, align 8
  %298 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %23, align 8
  %299 = icmp ult %"struct.spvtools::opt::Operand"* %297, %298
  br i1 %299, label %300, label %314

300:                                              ; preds = %293
  %301 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 0
  %302 = load i32, i32* %195, align 8
  store i32 %302, i32* %301, align 8
  %303 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1
  %304 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %303, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %304, align 8
  %305 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 1
  store i64 0, i64* %305, align 8
  %306 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 2
  %307 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 3, i64 0
  %308 = bitcast i32** %306 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %307, %"struct.std::__1::aligned_storage<4, 4>::type"** %308, align 8
  %309 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 0, i32 1, i32 4
  %310 = bitcast %"class.std::__1::unique_ptr.0"* %309 to i64*
  store i64 0, i64* %310, align 8
  %311 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %303, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %196) #11
  %312 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %297, i64 1
  %313 = ptrtoint %"struct.spvtools::opt::Operand"* %312 to i64
  store i64 %313, i64* %182, align 8
  br label %315

314:                                              ; preds = %293
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"* nonnull %7, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %13) #11
  br label %315

315:                                              ; preds = %300, %314
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %204, align 8
  %316 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %205, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %205, align 8
  %317 = icmp eq %"class.std::__1::vector.3"* %316, null
  br i1 %317, label %329, label %318

318:                                              ; preds = %315
  %319 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %316, i64 0, i32 0, i32 0
  %320 = load i32*, i32** %319, align 8
  %321 = icmp eq i32* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %318
  %323 = ptrtoint i32* %320 to i64
  %324 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %316, i64 0, i32 0, i32 1
  %325 = bitcast i32** %324 to i64*
  store i64 %323, i64* %325, align 8
  %326 = bitcast i32* %320 to i8*
  call void @_ZdlPv(i8* %326) #10
  br label %327

327:                                              ; preds = %322, %318
  %328 = bitcast %"class.std::__1::vector.3"* %316 to i8*
  call void @_ZdlPv(i8* %328) #10
  br label %329

329:                                              ; preds = %315, %327
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %187, align 8
  %330 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %206, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %206, align 8
  %331 = icmp eq %"class.std::__1::vector.3"* %330, null
  br i1 %331, label %343, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %341, label %336

336:                                              ; preds = %332
  %337 = ptrtoint i32* %334 to i64
  %338 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %330, i64 0, i32 0, i32 1
  %339 = bitcast i32** %338 to i64*
  store i64 %337, i64* %339, align 8
  %340 = bitcast i32* %334 to i8*
  call void @_ZdlPv(i8* %340) #10
  br label %341

341:                                              ; preds = %336, %332
  %342 = bitcast %"class.std::__1::vector.3"* %330 to i8*
  call void @_ZdlPv(i8* %342) #10
  br label %343

343:                                              ; preds = %329, %341
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %186) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %185) #11
  %344 = getelementptr inbounds %"struct.std::__1::pair.1101", %"struct.std::__1::pair.1101"* %258, i64 1
  %345 = icmp eq %"struct.std::__1::pair.1101"* %344, %169
  br i1 %345, label %207, label %257
}

declare void @_ZN8spvtools3opt3CFG23ForEachBlockInPostOrderEPNS0_10BasicBlockERKNSt3__18functionIFvS3_EEE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::BasicBlock"*, %"class.std::__1::function.1108"* dereferenceable(32)) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt21StructuredCFGAnalysis15IsContinueBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN8spvtools3opt21StructuredCFGAnalysis12IsMergeBlockEj(%"class.spvtools::opt::StructuredCFGAnalysis"*, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15MergeReturnPassD2Ev(%"class.spvtools::opt::MergeReturnPass"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt15MergeReturnPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.915"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.915"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.915"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  %11 = icmp eq %"struct.std::__1::__hash_node_base.915"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.915"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.915"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.972"* %20, null
  br i1 %21, label %33, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.972"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %23, i64 3
  %27 = bitcast %"struct.std::__1::__hash_node_base.972"* %26 to %"class.std::__1::__tree.159"*
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %23, i64 4
  %29 = bitcast %"struct.std::__1::__hash_node_base.972"* %28 to %"class.std::__1::__tree_node"**
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %27, %"class.std::__1::__tree_node"* %30) #11
  %31 = bitcast %"struct.std::__1::__hash_node_base.972"* %23 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  %32 = icmp eq %"struct.std::__1::__hash_node_base.972"* %25, null
  br i1 %32, label %33, label %22

33:                                               ; preds = %22, %18
  %34 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %34, align 8
  store %"struct.std::__1::__hash_node_base.972"** null, %"struct.std::__1::__hash_node_base.972"*** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.972"** %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %33
  %38 = bitcast %"struct.std::__1::__hash_node_base.972"** %35 to i8*
  tail call void @_ZdlPv(i8* %38) #10
  br label %39

39:                                               ; preds = %33, %37
  %40 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.944"* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %39, %43
  %44 = phi %"struct.std::__1::__hash_node_base.944"* [ %46, %43 ], [ %41, %39 ]
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %44, i64 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %45, align 8
  %47 = bitcast %"struct.std::__1::__hash_node_base.944"* %44 to i8*
  tail call void @_ZdlPv(i8* %47) #10
  %48 = icmp eq %"struct.std::__1::__hash_node_base.944"* %46, null
  br i1 %48, label %49, label %43

49:                                               ; preds = %43, %39
  %50 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %50, align 8
  store %"struct.std::__1::__hash_node_base.944"** null, %"struct.std::__1::__hash_node_base.944"*** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.944"** %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = bitcast %"struct.std::__1::__hash_node_base.944"** %51 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 0
  %57 = load %"class.spvtools::opt::MergeReturnPass::StructuredControlState"*, %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %56, align 8
  %58 = icmp eq %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57 to i64
  %61 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::MergeReturnPass::StructuredControlState"* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %55, %59
  %65 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %0, i64 0, i32 0
  tail call void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"* %65) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15MergeReturnPassD0Ev(%"class.spvtools::opt::MergeReturnPass"*) unnamed_addr #4 comdat align 2 {
  tail call void @_ZN8spvtools3opt15MergeReturnPassD2Ev(%"class.spvtools::opt::MergeReturnPass"* %0) #11
  %2 = bitcast %"class.spvtools::opt::MergeReturnPass"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK8spvtools3opt15MergeReturnPass4nameEv(%"class.spvtools::opt::MergeReturnPass"*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt15MergeReturnPass20GetPreservedAnalysesEv(%"class.spvtools::opt::MergeReturnPass"*) unnamed_addr #0 comdat align 2 {
  ret i32 49152
}

declare void @_ZN8spvtools3opt14FeatureManager7AnalyzeEPNS0_6ModuleE(%"class.spvtools::opt::FeatureManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE7destroyEPNS_11__tree_nodeIjPvEE(%"class.std::__1::__tree.159"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN8spvtools3opt3CFGC1EPNS0_6ModuleE(%"class.spvtools::opt::CFG"*, %"class.spvtools::opt::Module"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt3CFGD2Ev(%"class.spvtools::opt::CFG"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.333"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.333"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.333"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.333"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.309"* %19, null
  br i1 %20, label %37, label %21

21:                                               ; preds = %17, %34
  %22 = phi %"struct.std::__1::__hash_node_base.309"* [ %24, %34 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 3
  %26 = bitcast %"struct.std::__1::__hash_node_base.309"* %25 to i32**
  %27 = load i32*, i32** %26, align 8
  %28 = icmp eq i32* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %21
  %30 = ptrtoint i32* %27 to i64
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %22, i64 4
  %32 = bitcast %"struct.std::__1::__hash_node_base.309"* %31 to i64*
  store i64 %30, i64* %32, align 8
  %33 = bitcast i32* %27 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %29, %21
  %35 = bitcast %"struct.std::__1::__hash_node_base.309"* %22 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  %36 = icmp eq %"struct.std::__1::__hash_node_base.309"* %24, null
  br i1 %36, label %37, label %21

37:                                               ; preds = %34, %17
  %38 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"** %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  %42 = bitcast %"struct.std::__1::__hash_node_base.309"** %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %45 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1, i32 0, i32 1
  %46 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %47 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %46, i64 0, i32 0, i32 3
  %48 = load i8, i8* %47, align 8, !range !7
  %49 = icmp ne i8 %48, 0
  %50 = icmp eq %"class.spvtools::opt::Instruction"* %46, null
  %51 = or i1 %50, %49
  br i1 %51, label %79, label %52

52:                                               ; preds = %43, %52
  %53 = phi %"class.spvtools::opt::Instruction"* [ %73, %52 ], [ %46, %43 ]
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 2
  %55 = bitcast %"class.spvtools::opt::Instruction"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 0, i32 1
  %58 = bitcast %"class.spvtools::opt::Instruction"** %57 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %59 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %58, align 8
  %60 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %59, i64 0, i32 2
  %61 = bitcast %"class.spvtools::opt::Instruction"** %60 to i64*
  store i64 %56, i64* %61, align 8
  %62 = bitcast %"class.spvtools::opt::Instruction"** %57 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.spvtools::opt::Instruction"** %54 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %65 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %65, i64 0, i32 1
  %67 = bitcast %"class.spvtools::opt::Instruction"** %66 to i64*
  store i64 %63, i64* %67, align 8
  %68 = bitcast %"class.spvtools::opt::Instruction"** %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #11
  %69 = bitcast %"class.spvtools::opt::Instruction"* %53 to void (%"class.spvtools::opt::Instruction"*)***
  %70 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %70, i64 1
  %72 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %71, align 8
  tail call void %72(%"class.spvtools::opt::Instruction"* nonnull %53) #11
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %74 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %73, i64 0, i32 0, i32 3
  %75 = load i8, i8* %74, align 8, !range !7
  %76 = icmp ne i8 %75, 0
  %77 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  %78 = or i1 %77, %76
  br i1 %78, label %79, label %52

79:                                               ; preds = %52, %43
  %80 = phi %"class.spvtools::opt::Instruction"* [ %46, %43 ], [ %73, %52 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %81 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %80, i64 0, i32 0, i32 3
  %82 = load i8, i8* %81, align 8, !range !7
  %83 = icmp ne i8 %82, 0
  %84 = icmp eq %"class.spvtools::opt::Instruction"* %80, null
  %85 = or i1 %84, %83
  br i1 %85, label %109, label %86

86:                                               ; preds = %79, %86
  %87 = phi %"class.spvtools::opt::Instruction"* [ %103, %86 ], [ %80, %79 ]
  %88 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 2
  %89 = bitcast %"class.spvtools::opt::Instruction"** %88 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %87, i64 0, i32 0, i32 1
  %92 = bitcast %"class.spvtools::opt::Instruction"** %91 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %93 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %92, align 8
  %94 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %93, i64 0, i32 2
  %95 = bitcast %"class.spvtools::opt::Instruction"** %94 to i64*
  store i64 %90, i64* %95, align 8
  %96 = bitcast %"class.spvtools::opt::Instruction"** %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.spvtools::opt::Instruction"** %88 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %99 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %98, align 8
  %100 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %99, i64 0, i32 1
  %101 = bitcast %"class.spvtools::opt::Instruction"** %100 to i64*
  store i64 %97, i64* %101, align 8
  %102 = bitcast %"class.spvtools::opt::Instruction"** %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #11
  %103 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %45, align 8
  %104 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %103, i64 0, i32 0, i32 3
  %105 = load i8, i8* %104, align 8, !range !7
  %106 = icmp ne i8 %105, 0
  %107 = icmp eq %"class.spvtools::opt::Instruction"* %103, null
  %108 = or i1 %107, %106
  br i1 %108, label %109, label %86

109:                                              ; preds = %86, %79
  %110 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %110) #11
  %111 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %111, align 8
  %113 = icmp eq %"class.spvtools::opt::Instruction"* %112, null
  br i1 %113, label %119, label %114

114:                                              ; preds = %109
  %115 = bitcast %"class.spvtools::opt::Instruction"* %112 to void (%"class.spvtools::opt::Instruction"*)***
  %116 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %115, align 8
  %117 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %116, i64 1
  %118 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %117, align 8
  tail call void %118(%"class.spvtools::opt::Instruction"* nonnull %112) #11
  br label %119

119:                                              ; preds = %109, %114
  %120 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1, i32 0, i32 1
  %122 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %123 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %122, i64 0, i32 0, i32 3
  %124 = load i8, i8* %123, align 8, !range !7
  %125 = icmp ne i8 %124, 0
  %126 = icmp eq %"class.spvtools::opt::Instruction"* %122, null
  %127 = or i1 %126, %125
  br i1 %127, label %155, label %128

128:                                              ; preds = %119, %128
  %129 = phi %"class.spvtools::opt::Instruction"* [ %149, %128 ], [ %122, %119 ]
  %130 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 2
  %131 = bitcast %"class.spvtools::opt::Instruction"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %129, i64 0, i32 0, i32 1
  %134 = bitcast %"class.spvtools::opt::Instruction"** %133 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %135 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %134, align 8
  %136 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %135, i64 0, i32 2
  %137 = bitcast %"class.spvtools::opt::Instruction"** %136 to i64*
  store i64 %132, i64* %137, align 8
  %138 = bitcast %"class.spvtools::opt::Instruction"** %133 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.spvtools::opt::Instruction"** %130 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %141 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %140, align 8
  %142 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %141, i64 0, i32 1
  %143 = bitcast %"class.spvtools::opt::Instruction"** %142 to i64*
  store i64 %139, i64* %143, align 8
  %144 = bitcast %"class.spvtools::opt::Instruction"** %133 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 16, i1 false) #11
  %145 = bitcast %"class.spvtools::opt::Instruction"* %129 to void (%"class.spvtools::opt::Instruction"*)***
  %146 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %145, align 8
  %147 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %146, i64 1
  %148 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %147, align 8
  tail call void %148(%"class.spvtools::opt::Instruction"* nonnull %129) #11
  %149 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %150 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %149, i64 0, i32 0, i32 3
  %151 = load i8, i8* %150, align 8, !range !7
  %152 = icmp ne i8 %151, 0
  %153 = icmp eq %"class.spvtools::opt::Instruction"* %149, null
  %154 = or i1 %153, %152
  br i1 %154, label %155, label %128

155:                                              ; preds = %128, %119
  %156 = phi %"class.spvtools::opt::Instruction"* [ %122, %119 ], [ %149, %128 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %120, align 8
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %156, i64 0, i32 0, i32 3
  %158 = load i8, i8* %157, align 8, !range !7
  %159 = icmp ne i8 %158, 0
  %160 = icmp eq %"class.spvtools::opt::Instruction"* %156, null
  %161 = or i1 %160, %159
  br i1 %161, label %185, label %162

162:                                              ; preds = %155, %162
  %163 = phi %"class.spvtools::opt::Instruction"* [ %179, %162 ], [ %156, %155 ]
  %164 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 2
  %165 = bitcast %"class.spvtools::opt::Instruction"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %163, i64 0, i32 0, i32 1
  %168 = bitcast %"class.spvtools::opt::Instruction"** %167 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %169 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %168, align 8
  %170 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %169, i64 0, i32 2
  %171 = bitcast %"class.spvtools::opt::Instruction"** %170 to i64*
  store i64 %166, i64* %171, align 8
  %172 = bitcast %"class.spvtools::opt::Instruction"** %167 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.spvtools::opt::Instruction"** %164 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %175 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %174, align 8
  %176 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %175, i64 0, i32 1
  %177 = bitcast %"class.spvtools::opt::Instruction"** %176 to i64*
  store i64 %173, i64* %177, align 8
  %178 = bitcast %"class.spvtools::opt::Instruction"** %167 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %178, i8 0, i64 16, i1 false) #11
  %179 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %121, align 8
  %180 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %179, i64 0, i32 0, i32 3
  %181 = load i8, i8* %180, align 8, !range !7
  %182 = icmp ne i8 %181, 0
  %183 = icmp eq %"class.spvtools::opt::Instruction"* %179, null
  %184 = or i1 %183, %182
  br i1 %184, label %185, label %162

185:                                              ; preds = %162, %155
  %186 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %186) #11
  %187 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 2, i32 1, i32 0, i32 0, i32 0
  %188 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %187, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %187, align 8
  %189 = icmp eq %"class.spvtools::opt::Instruction"* %188, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %185
  %191 = bitcast %"class.spvtools::opt::Instruction"* %188 to void (%"class.spvtools::opt::Instruction"*)***
  %192 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %192, i64 1
  %194 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %193, align 8
  tail call void %194(%"class.spvtools::opt::Instruction"* nonnull %188) #11
  br label %195

195:                                              ; preds = %185, %190
  %196 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %197 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %196, align 8
  %198 = icmp eq %"struct.std::__1::__hash_node_base.281"* %197, null
  br i1 %198, label %215, label %199

199:                                              ; preds = %195, %212
  %200 = phi %"struct.std::__1::__hash_node_base.281"* [ %202, %212 ], [ %197, %195 ]
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 0, i32 0
  %202 = load %"struct.std::__1::__hash_node_base.281"*, %"struct.std::__1::__hash_node_base.281"** %201, align 8
  %203 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 3
  %204 = bitcast %"struct.std::__1::__hash_node_base.281"* %203 to %"class.spvtools::opt::BasicBlock"***
  %205 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %204, align 8
  %206 = icmp eq %"class.spvtools::opt::BasicBlock"** %205, null
  br i1 %206, label %212, label %207

207:                                              ; preds = %199
  %208 = ptrtoint %"class.spvtools::opt::BasicBlock"** %205 to i64
  %209 = getelementptr inbounds %"struct.std::__1::__hash_node_base.281", %"struct.std::__1::__hash_node_base.281"* %200, i64 4
  %210 = bitcast %"struct.std::__1::__hash_node_base.281"* %209 to i64*
  store i64 %208, i64* %210, align 8
  %211 = bitcast %"class.spvtools::opt::BasicBlock"** %205 to i8*
  tail call void @_ZdlPv(i8* %211) #10
  br label %212

212:                                              ; preds = %207, %199
  %213 = bitcast %"struct.std::__1::__hash_node_base.281"* %200 to i8*
  tail call void @_ZdlPv(i8* %213) #10
  %214 = icmp eq %"struct.std::__1::__hash_node_base.281"* %202, null
  br i1 %214, label %215, label %199

215:                                              ; preds = %212, %195
  %216 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load %"struct.std::__1::__hash_node_base.281"**, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  store %"struct.std::__1::__hash_node_base.281"** null, %"struct.std::__1::__hash_node_base.281"*** %216, align 8
  %218 = icmp eq %"struct.std::__1::__hash_node_base.281"** %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast %"struct.std::__1::__hash_node_base.281"** %217 to i8*
  tail call void @_ZdlPv(i8* %220) #10
  br label %221

221:                                              ; preds = %215, %219
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD2Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !7
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !7
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !7
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt15InstructionListD0Ev(%"class.spvtools::opt::InstructionList"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %37, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %31, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = bitcast %"class.spvtools::opt::Instruction"* %11 to void (%"class.spvtools::opt::Instruction"*)***
  %28 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %28, i64 1
  %30 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %29, align 8
  tail call void %30(%"class.spvtools::opt::Instruction"* nonnull %11) #11
  %31 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %32 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %31, i64 0, i32 0, i32 3
  %33 = load i8, i8* %32, align 8, !range !7
  %34 = icmp ne i8 %33, 0
  %35 = icmp eq %"class.spvtools::opt::Instruction"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %37, label %10

37:                                               ; preds = %10, %1
  %38 = phi %"class.spvtools::opt::Instruction"* [ %4, %1 ], [ %31, %10 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %38, i64 0, i32 0, i32 3
  %40 = load i8, i8* %39, align 8, !range !7
  %41 = icmp ne i8 %40, 0
  %42 = icmp eq %"class.spvtools::opt::Instruction"* %38, null
  %43 = or i1 %42, %41
  br i1 %43, label %67, label %44

44:                                               ; preds = %37, %44
  %45 = phi %"class.spvtools::opt::Instruction"* [ %61, %44 ], [ %38, %37 ]
  %46 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 2
  %47 = bitcast %"class.spvtools::opt::Instruction"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %45, i64 0, i32 0, i32 1
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %51 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %51, i64 0, i32 2
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  store i64 %48, i64* %53, align 8
  %54 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"class.spvtools::opt::Instruction"** %46 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %57 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %56, align 8
  %58 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %57, i64 0, i32 1
  %59 = bitcast %"class.spvtools::opt::Instruction"** %58 to i64*
  store i64 %55, i64* %59, align 8
  %60 = bitcast %"class.spvtools::opt::Instruction"** %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #11
  %61 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %62 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %61, i64 0, i32 0, i32 3
  %63 = load i8, i8* %62, align 8, !range !7
  %64 = icmp ne i8 %63, 0
  %65 = icmp eq %"class.spvtools::opt::Instruction"* %61, null
  %66 = or i1 %65, %64
  br i1 %66, label %67, label %44

67:                                               ; preds = %44, %37
  %68 = getelementptr inbounds %"class.spvtools::opt::InstructionList", %"class.spvtools::opt::InstructionList"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %68) #11
  %69 = bitcast %"class.spvtools::opt::InstructionList"* %0 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !7
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %4, i64 0, i32 0, i32 3
  %6 = load i8, i8* %5, align 8, !range !7
  %7 = icmp ne i8 %6, 0
  %8 = icmp eq %"class.spvtools::opt::Instruction"* %4, null
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %1, %10
  %11 = phi %"class.spvtools::opt::Instruction"* [ %27, %10 ], [ %4, %1 ]
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 2
  %13 = bitcast %"class.spvtools::opt::Instruction"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %11, i64 0, i32 0, i32 1
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %17 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %17, i64 0, i32 2
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  store i64 %14, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.spvtools::opt::Instruction"** %12 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %23 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %22, align 8
  %24 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %23, i64 0, i32 1
  %25 = bitcast %"class.spvtools::opt::Instruction"** %24 to i64*
  store i64 %21, i64* %25, align 8
  %26 = bitcast %"class.spvtools::opt::Instruction"** %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #11
  %27 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %3, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %27, i64 0, i32 0, i32 3
  %29 = load i8, i8* %28, align 8, !range !7
  %30 = icmp ne i8 %29, 0
  %31 = icmp eq %"class.spvtools::opt::Instruction"* %27, null
  %32 = or i1 %31, %30
  br i1 %32, label %33, label %10

33:                                               ; preds = %10, %1
  %34 = getelementptr inbounds %"class.spvtools::utils::IntrusiveList", %"class.spvtools::utils::IntrusiveList"* %0, i64 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %34) #11
  %35 = bitcast %"class.spvtools::utils::IntrusiveList"* %0 to i8*
  tail call void @_ZdlPv(i8* %35) #10
  ret void
}

declare i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8FunctionENS3_17DominatorAnalysisEEENS_19__map_value_compareIS6_S8_NS_4lessIS6_EELb1EEENS_9allocatorIS8_EEE5eraseENS_21__tree_const_iteratorIS8_PNS_11__tree_nodeIS8_PvEElEE(%"class.std::__1::__tree.355"*, %"class.std::__1::__tree_end_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 1, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 2
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_end_node"**
  %10 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %10, i64 0, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, %7
  br i1 %13, label %30, label %21

14:                                               ; preds = %2, %14
  %15 = phi %"class.std::__1::__tree_node_base"* [ %17, %14 ], [ %4, %2 ]
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %15, i64 0, i32 0
  br label %30

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_end_node"** [ %25, %21 ], [ %9, %6 ]
  %23 = bitcast %"class.std::__1::__tree_end_node"** %22 to %"class.std::__1::__tree_node_base"**
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %24, i64 0, i32 2
  %26 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %25, align 8
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 0, i32 0
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, %24
  br i1 %29, label %30, label %21

30:                                               ; preds = %21, %19, %6
  %31 = phi %"class.std::__1::__tree_end_node"* [ %20, %19 ], [ %10, %6 ], [ %26, %21 ]
  %32 = getelementptr inbounds %"class.std::__1::__tree.355", %"class.std::__1::__tree.355"* %0, i64 0, i32 0
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_end_node"* %33, %1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %31 to i64
  %37 = bitcast %"class.std::__1::__tree.355"* %0 to i64*
  store i64 %36, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %35
  %39 = getelementptr inbounds %"class.std::__1::__tree.355", %"class.std::__1::__tree.355"* %0, i64 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree.355", %"class.std::__1::__tree.355"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  %44 = bitcast %"class.std::__1::__tree_end_node"* %1 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %43, %"class.std::__1::__tree_node_base"* %44) #11
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 8
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to %"class.std::__1::__tree.1062"*
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 9
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1126"**
  %49 = load %"class.std::__1::__tree_node.1126"*, %"class.std::__1::__tree_node.1126"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1062"* %46, %"class.std::__1::__tree_node.1126"* %49) #11
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 5
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"struct.spvtools::opt::DominatorTreeNode"***
  %52 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %51, align 8
  %53 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %52, null
  br i1 %53, label %59, label %54

54:                                               ; preds = %38
  %55 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %52 to i64
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %1, i64 6
  %57 = bitcast %"class.std::__1::__tree_end_node"* %56 to i64*
  store i64 %55, i64* %57, align 8
  %58 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %52 to i8*
  tail call void @_ZdlPv(i8* %58) #10
  br label %59

59:                                               ; preds = %38, %54
  %60 = bitcast %"class.std::__1::__tree_end_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %60) #10
  ret %"class.std::__1::__tree_end_node"* %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !7
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !7
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !7
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !7
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !7
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !7
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !7
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !7
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !7
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !7
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !7
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !7
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !7
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1062"*, %"class.std::__1::__tree_node.1126"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1126"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1126"* %1 to %"class.std::__1::__tree_node.1126"**
  %6 = load %"class.std::__1::__tree_node.1126"*, %"class.std::__1::__tree_node.1126"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1062"* %0, %"class.std::__1::__tree_node.1126"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1126", %"class.std::__1::__tree_node.1126"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1126"**
  %9 = load %"class.std::__1::__tree_node.1126"*, %"class.std::__1::__tree_node.1126"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIjN8spvtools3opt17DominatorTreeNodeEEENS_19__map_value_compareIjS5_NS_4lessIjEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree.1062"* %0, %"class.std::__1::__tree_node.1126"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node.1126", %"class.std::__1::__tree_node.1126"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %11 = load %"struct.spvtools::opt::DominatorTreeNode"**, %"struct.spvtools::opt::DominatorTreeNode"*** %10, align 8
  %12 = icmp eq %"struct.spvtools::opt::DominatorTreeNode"** %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %4
  %14 = ptrtoint %"struct.spvtools::opt::DominatorTreeNode"** %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.1126", %"class.std::__1::__tree_node.1126"* %1, i64 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 1
  %16 = bitcast %"struct.spvtools::opt::DominatorTreeNode"*** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast %"struct.spvtools::opt::DominatorTreeNode"** %11 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %4, %13
  %19 = bitcast %"class.std::__1::__tree_node.1126"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

declare i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt11InstructionD0Ev(%"class.spvtools::opt::Instruction"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %0) #11
  %2 = bitcast %"class.spvtools::opt::Instruction"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED2Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils17IntrusiveNodeBaseINS_3opt11InstructionEED0Ev(%"class.spvtools::utils::IntrusiveNodeBase"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.spvtools::utils::IntrusiveNodeBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"*, %"class.spvtools::opt::Instruction"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::Instruction"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::Instruction"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.178"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.178"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.178"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.178"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.178"* %65 to %"class.spvtools::opt::Instruction"**
  %67 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !155
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !155
  %75 = load i64, i64* %74, align 8, !noalias !155
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !155
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %78, align 8, !noalias !155
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !155
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"**
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %81, align 8, !noalias !155
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !15
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.178"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.178"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.178"* %124, %"struct.std::__1::__hash_node_base.178"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.178"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.178"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !15
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.178"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.178"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.178"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.178"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } undef, %"struct.std::__1::__hash_node_base.178"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.178"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.174"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.174"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.178"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.178"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !158

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.178"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.178"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.178"* %36, %"struct.std::__1::__hash_node_base.178"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.178"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.178"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.178"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.178"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.178"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.178"* %101 to %"class.spvtools::opt::Instruction"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.178"* %82, %"struct.std::__1::__hash_node_base.178"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.178"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.178"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.178"* %110 to %"class.spvtools::opt::Instruction"**
  %112 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %102, align 8
  %113 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::Instruction"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.178"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.178"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.178"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.178"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.178"* %80, %"struct.std::__1::__hash_node_base.178"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.178"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.178"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.174", %"class.std::__1::__hash_table.174"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.178"** null, %"struct.std::__1::__hash_node_base.178"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.178"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.178"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.180", %"class.std::__1::__bucket_list_deallocator.180"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  br i1 %5, label %22, label %7

7:                                                ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %8, align 8
  store %"class.std::__1::vector.3"* %4, %"class.std::__1::vector.3"** %8, align 8
  %10 = icmp eq %"class.std::__1::vector.3"* %9, null
  br i1 %10, label %77, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %13 = load i32*, i32** %12, align 8
  %14 = icmp eq i32* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = ptrtoint i32* %13 to i64
  %17 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 1
  %18 = bitcast i32** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = bitcast i32* %13 to i8*
  tail call void @_ZdlPv(i8* %19) #10
  br label %20

20:                                               ; preds = %15, %11
  %21 = bitcast %"class.std::__1::vector.3"* %9 to i8*
  tail call void @_ZdlPv(i8* %21) #10
  br label %77

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %23, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %23, align 8
  %25 = icmp eq %"class.std::__1::vector.3"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = icmp eq i32* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = ptrtoint i32* %28 to i64
  %32 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %24, i64 0, i32 0, i32 1
  %33 = bitcast i32** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast i32* %28 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.std::__1::vector.3"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %22, %35
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %58, label %42

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %44 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %45

45:                                               ; preds = %42, %49
  %46 = phi i64 [ 0, %42 ], [ %55, %49 ]
  %47 = load i64, i64* %38, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %49, label %58

49:                                               ; preds = %45
  %50 = load i32*, i32** %43, align 8
  %51 = getelementptr inbounds i32, i32* %50, i64 %46
  %52 = load i32, i32* %51, align 4
  %53 = load i32*, i32** %44, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 %46
  store i32 %52, i32* %54, align 4
  %55 = add nuw i64 %46, 1
  %56 = load i64, i64* %39, align 8
  %57 = icmp ult i64 %55, %56
  br i1 %57, label %45, label %58

58:                                               ; preds = %45, %49, %37
  %59 = phi i64 [ 0, %37 ], [ %55, %49 ], [ %46, %45 ]
  %60 = load i64, i64* %38, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %62, label %75

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %64 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %65

65:                                               ; preds = %62, %65
  %66 = phi i64 [ %59, %62 ], [ %72, %65 ]
  %67 = load i32*, i32** %63, align 8
  %68 = getelementptr inbounds i32, i32* %67, i64 %66
  %69 = load i32*, i32** %64, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 %66
  %71 = load i32, i32* %70, align 4
  store i32 %71, i32* %68, align 4
  %72 = add nuw i64 %66, 1
  %73 = load i64, i64* %38, align 8
  %74 = icmp ult i64 %72, %73
  br i1 %74, label %65, label %75

75:                                               ; preds = %65, %58
  %76 = phi i64 [ %60, %58 ], [ %73, %65 ]
  store i64 %76, i64* %39, align 8
  br label %77

77:                                               ; preds = %20, %7, %75
  %78 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  store i64 0, i64* %78, align 8
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools5utils11SmallVectorIjLm2EED0Ev(%"class.spvtools::utils::SmallVector"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = icmp eq i32* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6
  %11 = ptrtoint i32* %8 to i64
  %12 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %13 = bitcast i32** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = bitcast i32* %8 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %10, %6
  %16 = bitcast %"class.std::__1::vector.3"* %4 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %1, %15
  %18 = bitcast %"class.spvtools::utils::SmallVector"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  ret void
}

declare void @_ZN8spvtools3opt8analysis17DecorationManager18AnalyzeDecorationsEv(%"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis17DecorationManagerEEclEPS4_(%"struct.std::__1::default_delete.150"*, %"class.spvtools::opt::analysis::DecorationManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DecorationManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.130"* %6, null
  br i1 %7, label %44, label %8

8:                                                ; preds = %4, %41
  %9 = phi %"struct.std::__1::__hash_node_base.130"* [ %11, %41 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.130"*, %"struct.std::__1::__hash_node_base.130"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 9
  %13 = bitcast %"struct.std::__1::__hash_node_base.130"* %12 to %"class.spvtools::opt::Instruction"***
  %14 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %13, align 8
  %15 = icmp eq %"class.spvtools::opt::Instruction"** %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint %"class.spvtools::opt::Instruction"** %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 10
  %19 = bitcast %"struct.std::__1::__hash_node_base.130"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.spvtools::opt::Instruction"** %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 6
  %23 = bitcast %"struct.std::__1::__hash_node_base.130"* %22 to %"class.spvtools::opt::Instruction"***
  %24 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::Instruction"** %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %21
  %27 = ptrtoint %"class.spvtools::opt::Instruction"** %24 to i64
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 7
  %29 = bitcast %"struct.std::__1::__hash_node_base.130"* %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = bitcast %"class.spvtools::opt::Instruction"** %24 to i8*
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %26, %21
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base.130"* %32 to %"class.spvtools::opt::Instruction"***
  %34 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %33, align 8
  %35 = icmp eq %"class.spvtools::opt::Instruction"** %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %31
  %37 = ptrtoint %"class.spvtools::opt::Instruction"** %34 to i64
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.130", %"struct.std::__1::__hash_node_base.130"* %9, i64 4
  %39 = bitcast %"struct.std::__1::__hash_node_base.130"* %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"class.spvtools::opt::Instruction"** %34 to i8*
  tail call void @_ZdlPv(i8* %40) #10
  br label %41

41:                                               ; preds = %36, %31
  %42 = bitcast %"struct.std::__1::__hash_node_base.130"* %9 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base.130"* %11, null
  br i1 %43, label %44, label %8

44:                                               ; preds = %41, %4
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DecorationManager", %"class.spvtools::opt::analysis::DecorationManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.130"**, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.130"** null, %"struct.std::__1::__hash_node_base.130"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.130"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.130"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DecorationManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

declare void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Module"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"*, %"class.spvtools::opt::analysis::DefUseManager"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %1, null
  br i1 %3, label %52, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %5, align 8
  %7 = icmp eq %"struct.std::__1::__hash_node_base.96"* %6, null
  br i1 %7, label %24, label %8

8:                                                ; preds = %4, %21
  %9 = phi %"struct.std::__1::__hash_node_base.96"* [ %11, %21 ], [ %6, %4 ]
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 0, i32 0
  %11 = load %"struct.std::__1::__hash_node_base.96"*, %"struct.std::__1::__hash_node_base.96"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 3
  %13 = bitcast %"struct.std::__1::__hash_node_base.96"* %12 to i32**
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = ptrtoint i32* %14 to i64
  %18 = getelementptr inbounds %"struct.std::__1::__hash_node_base.96", %"struct.std::__1::__hash_node_base.96"* %9, i64 4
  %19 = bitcast %"struct.std::__1::__hash_node_base.96"* %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast i32* %14 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %16, %8
  %22 = bitcast %"struct.std::__1::__hash_node_base.96"* %9 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  %23 = icmp eq %"struct.std::__1::__hash_node_base.96"* %11, null
  br i1 %23, label %24, label %8

24:                                               ; preds = %21, %4
  %25 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.96"**, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  store %"struct.std::__1::__hash_node_base.96"** null, %"struct.std::__1::__hash_node_base.96"*** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.96"** %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = bitcast %"struct.std::__1::__hash_node_base.96"** %26 to i8*
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to %"class.std::__1::__tree_node.1149"**
  %34 = load %"class.std::__1::__tree_node.1149"*, %"class.std::__1::__tree_node.1149"** %33, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %31, %"class.std::__1::__tree_node.1149"* %34) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %30, %38
  %39 = phi %"struct.std::__1::__hash_node_base"* [ %41, %38 ], [ %36, %30 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %30
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::DefUseManager", %"class.spvtools::opt::analysis::DefUseManager"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %45, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  %51 = bitcast %"class.spvtools::opt::analysis::DefUseManager"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #10
  br label %52

52:                                               ; preds = %50, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node.1149"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1149"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1149"* %1 to %"class.std::__1::__tree_node.1149"**
  %6 = load %"class.std::__1::__tree_node.1149"*, %"class.std::__1::__tree_node.1149"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1149"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1149", %"class.std::__1::__tree_node.1149"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1149"**
  %9 = load %"class.std::__1::__tree_node.1149"*, %"class.std::__1::__tree_node.1149"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_4pairIPN8spvtools3opt11InstructionES5_EENS3_8analysis13UserEntryLessENS_9allocatorIS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node.1149"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1149"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.309"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.305"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1157"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !15
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.309"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.309"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.309"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.309"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.309"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %145, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 48) #10, !noalias !160
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !160
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !160
  store i32 %62, i32* %61, align 8, !noalias !160
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #11, !noalias !160
  %64 = getelementptr inbounds i8, i8* %57, i64 8
  %65 = bitcast i8* %64 to i64*
  store i64 %7, i64* %65, align 8, !noalias !160
  %66 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"**
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %66, align 8, !noalias !160
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  %70 = uitofp i64 %69 to float
  %71 = uitofp i64 %9 to float
  %72 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %73 = load float, float* %72, align 4
  %74 = fmul float %73, %71
  %75 = fcmp olt float %74, %70
  %76 = or i1 %10, %75
  br i1 %76, label %77, label %100

77:                                               ; preds = %55
  %78 = shl i64 %9, 1
  %79 = icmp ult i64 %9, 3
  %80 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !15
  %81 = icmp ugt i64 %80, 1
  %82 = or i1 %79, %81
  %83 = zext i1 %82 to i64
  %84 = or i64 %78, %83
  %85 = fdiv float %70, %73
  %86 = tail call float @llvm.ceil.f32(float %85) #11
  %87 = fptoui float %86 to i64
  %88 = icmp ult i64 %84, %87
  %89 = select i1 %88, i64 %87, i64 %84
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %89)
  %90 = load i64, i64* %8, align 8
  %91 = tail call i64 @llvm.ctpop.i64(i64 %90) #11, !range !15
  %92 = icmp ugt i64 %91, 1
  br i1 %92, label %96, label %93

93:                                               ; preds = %77
  %94 = add i64 %90, 4294967295
  %95 = and i64 %94, %7
  br label %100

96:                                               ; preds = %77
  %97 = icmp ugt i64 %90, %7
  br i1 %97, label %100, label %98

98:                                               ; preds = %96
  %99 = urem i64 %7, %90
  br label %100

100:                                              ; preds = %98, %96, %93, %55
  %101 = phi i64 [ %9, %55 ], [ %90, %93 ], [ %90, %96 ], [ %90, %98 ]
  %102 = phi i64 [ %56, %55 ], [ %95, %93 ], [ %7, %96 ], [ %99, %98 ]
  %103 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %105 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %104, i64 %102
  %106 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %107 = icmp eq %"struct.std::__1::__hash_node_base.309"* %106, null
  br i1 %107, label %108, label %134

108:                                              ; preds = %100
  %109 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %110 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast i8* %57 to i64*
  store i64 %111, i64* %112, align 8
  %113 = bitcast %"struct.std::__1::__hash_node_base.309"* %109 to i8**
  store i8* %57, i8** %113, align 8
  store %"struct.std::__1::__hash_node_base.309"* %109, %"struct.std::__1::__hash_node_base.309"** %105, align 8
  %114 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %66, align 8
  %115 = icmp eq %"struct.std::__1::__hash_node_base.309"* %114, null
  br i1 %115, label %141, label %116

116:                                              ; preds = %108
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %114, i64 1
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = tail call i64 @llvm.ctpop.i64(i64 %101) #11, !range !15
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %125, label %122

122:                                              ; preds = %116
  %123 = add i64 %101, -1
  %124 = and i64 %119, %123
  br label %129

125:                                              ; preds = %116
  %126 = icmp ult i64 %119, %101
  br i1 %126, label %129, label %127

127:                                              ; preds = %125
  %128 = urem i64 %119, %101
  br label %129

129:                                              ; preds = %122, %125, %127
  %130 = phi i64 [ %124, %122 ], [ %128, %127 ], [ %119, %125 ]
  %131 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %103, align 8
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, i64 %130
  %133 = bitcast %"struct.std::__1::__hash_node_base.309"** %132 to i8**
  br label %139

134:                                              ; preds = %100
  %135 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %57 to i64*
  store i64 %136, i64* %137, align 8
  %138 = bitcast %"struct.std::__1::__hash_node_base.309"* %106 to i8**
  br label %139

139:                                              ; preds = %129, %134
  %140 = phi i8** [ %138, %134 ], [ %133, %129 ]
  store i8* %57, i8** %140, align 8
  br label %141

141:                                              ; preds = %139, %108
  %142 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.309"*
  %143 = load i64, i64* %67, align 8
  %144 = add i64 %143, 1
  store i64 %144, i64* %67, align 8
  br label %145

145:                                              ; preds = %50, %141
  %146 = phi i8 [ 1, %141 ], [ 0, %50 ]
  %147 = phi %"struct.std::__1::__hash_node_base.309"* [ %142, %141 ], [ %33, %50 ]
  %148 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } undef, %"struct.std::__1::__hash_node_base.309"* %147, 0
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.309"*, i8 } %148, i8 %146, 1
  ret { %"struct.std::__1::__hash_node_base.309"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE6rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE8__rehashEm(%"class.std::__1::__hash_table.305"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.305"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.309"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.309"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !163

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.309"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.309"* null, %"struct.std::__1::__hash_node_base.309"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.309"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.309"* %36, %"struct.std::__1::__hash_node_base.309"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.309"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.309"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.309"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.309"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.309"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.309"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.309"* %82, %"struct.std::__1::__hash_node_base.309"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.309"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.309"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.309"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.309"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.309"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.309"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.309"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.309"* %80, %"struct.std::__1::__hash_node_base.309"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.309"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.309"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.305", %"class.std::__1::__hash_table.305"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.309"** null, %"struct.std::__1::__hash_node_base.309"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.309"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.309"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.311", %"class.std::__1::__bucket_list_deallocator.311"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock14ForEachPhiInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1047"**
  %4 = load %"class.std::__1::function.1047"*, %"class.std::__1::function.1047"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::tuple", align 8
  %3 = alloca %"class.std::__1::tuple.1131", align 1
  %4 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %5 = alloca %"class.std::__1::function.1167", align 8
  %6 = alloca %"class.std::__1::function.1047", align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %60, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.178"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"struct.std::__1::__hash_node_base.178"* [ %17, %14 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.178"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  %19 = icmp eq %"struct.std::__1::__hash_node_base.178"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %10
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %11, align 8
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %42, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = add i64 %22, -1
  %27 = and i64 %22, 3
  %28 = icmp ult i64 %26, 3
  br i1 %28, label %31, label %29

29:                                               ; preds = %24
  %30 = sub i64 %22, %27
  br label %43

31:                                               ; preds = %43, %24
  %32 = phi i64 [ 0, %24 ], [ %57, %43 ]
  %33 = icmp eq i64 %27, 0
  br i1 %33, label %42, label %34

34:                                               ; preds = %31, %34
  %35 = phi i64 [ %39, %34 ], [ %32, %31 ]
  %36 = phi i64 [ %40, %34 ], [ %27, %31 ]
  %37 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %37, i64 %35
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %38, align 8
  %39 = add nuw i64 %35, 1
  %40 = add i64 %36, -1
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %34, !llvm.loop !164

42:                                               ; preds = %31, %34, %20
  store i64 0, i64* %7, align 8
  br label %60

43:                                               ; preds = %43, %29
  %44 = phi i64 [ 0, %29 ], [ %57, %43 ]
  %45 = phi i64 [ %30, %29 ], [ %58, %43 ]
  %46 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %46, i64 %44
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %47, align 8
  %48 = or i64 %44, 1
  %49 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %50, align 8
  %51 = or i64 %44, 2
  %52 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %53, align 8
  %54 = or i64 %44, 3
  %55 = load %"struct.std::__1::__hash_node_base.178"**, %"struct.std::__1::__hash_node_base.178"*** %25, align 8
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178"*, %"struct.std::__1::__hash_node_base.178"** %55, i64 %54
  store %"struct.std::__1::__hash_node_base.178"* null, %"struct.std::__1::__hash_node_base.178"** %56, align 8
  %57 = add nuw i64 %44, 4
  %58 = add i64 %45, -4
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %31, label %43

60:                                               ; preds = %1, %42
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %61, align 8
  %63 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 0
  %64 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %63, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Module", %"class.spvtools::opt::Module"* %62, i64 0, i32 15, i32 0, i32 1
  %66 = load %"class.std::__1::unique_ptr.28"*, %"class.std::__1::unique_ptr.28"** %65, align 8
  %67 = icmp eq %"class.std::__1::unique_ptr.28"* %64, %66
  br i1 %67, label %88, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::function.1047"* %6 to i8*
  %70 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 2
  %72 = bitcast %"class.std::__1::function.1047"* %6 to %"class.spvtools::opt::IRContext"**
  %73 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 0, i32 1
  %74 = bitcast [8 x i8]* %73 to %"class.spvtools::opt::BasicBlock"**
  %75 = bitcast %"class.std::__1::function.1167"* %5 to i8*
  %76 = ptrtoint %"class.std::__1::function.1047"* %6 to i64
  %77 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %5, i64 0, i32 0, i32 1, i32 0
  %78 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %5, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::function.1167"* %5 to i64*
  %80 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %5, i64 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.std::__1::function.1167", %"class.std::__1::function.1167"* %5, i64 0, i32 0, i32 0, i32 0
  %82 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %6, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.spvtools::opt::Instruction"** %4 to i8*
  %84 = bitcast %"class.std::__1::tuple"* %2 to i8*
  %85 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %86 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %3, i64 0, i32 0
  %87 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 9, i32 0
  br label %92

88:                                               ; preds = %101, %60
  %89 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %90 = load i32, i32* %89, align 8
  %91 = or i32 %90, 2
  store i32 %91, i32* %89, align 8
  ret void

92:                                               ; preds = %68, %101
  %93 = phi %"class.std::__1::unique_ptr.28"* [ %64, %68 ], [ %102, %101 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.spvtools::opt::Function"*, %"class.spvtools::opt::Function"** %94, align 8
  %96 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 0
  %97 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %95, i64 0, i32 3, i32 0, i32 1
  %99 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.40"* %97, %99
  br i1 %100, label %101, label %104

101:                                              ; preds = %151, %92
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %93, i64 1
  %103 = icmp eq %"class.std::__1::unique_ptr.28"* %102, %66
  br i1 %103, label %88, label %92

104:                                              ; preds = %92, %151
  %105 = phi %"class.std::__1::unique_ptr.40"* [ %152, %151 ], [ %97, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %106, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %69) #11
  store void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %70, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt9IRContext24BuildInstrToBlockMappingEvEUlPNS5_11InstructionEE_FvS8_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %71, align 8
  store %"class.spvtools::opt::IRContext"* %0, %"class.spvtools::opt::IRContext"** %72, align 8
  store %"class.spvtools::opt::BasicBlock"* %107, %"class.spvtools::opt::BasicBlock"** %74, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)* @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN8spvtools3opt10BasicBlock11ForEachInstERKNS_8functionIFvPNS5_11InstructionEEEEbEUlS9_E_FbS9_EEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_, %"struct.std::__1::__function::__policy"** %78, align 8
  store i64 %76, i64* %79, align 8
  %108 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 1, i32 0, i32 0, i32 0
  %109 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %108, align 8
  %110 = icmp eq %"class.spvtools::opt::Instruction"* %109, null
  br i1 %110, label %117, label %111

111:                                              ; preds = %104
  %112 = ptrtoint %"class.spvtools::opt::BasicBlock"* %107 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83)
  store %"class.spvtools::opt::Instruction"* %109, %"class.spvtools::opt::Instruction"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  store %"class.spvtools::opt::Instruction"** %4, %"class.spvtools::opt::Instruction"*** %85, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %86) #11
  %113 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %87, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %4, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %2, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %3) #11
  %114 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %113, 0
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %114, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %86) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  %116 = bitcast %"struct.std::__1::__hash_node_base.178"* %115 to i64*
  store i64 %112, i64* %116, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83)
  br label %117

117:                                              ; preds = %111, %104
  %118 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %107, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %119 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %118, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %119, i64 0, i32 0, i32 3
  %121 = load i8, i8* %120, align 8, !range !7
  %122 = icmp ne i8 %121, 0
  %123 = icmp eq %"class.spvtools::opt::Instruction"* %119, null
  %124 = or i1 %123, %122
  br i1 %124, label %137, label %125

125:                                              ; preds = %117, %128
  %126 = phi %"class.spvtools::opt::Instruction"* [ %134, %128 ], [ %119, %117 ]
  %127 = icmp eq %"class.spvtools::opt::Instruction"* %126, null
  br i1 %127, label %137, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %126, i64 0, i32 0, i32 1
  %130 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %129, align 8
  %131 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %130, i64 0, i32 0, i32 3
  %132 = load i8, i8* %131, align 8, !range !7
  %133 = icmp eq i8 %132, 0
  %134 = select i1 %133, %"class.spvtools::opt::Instruction"* %130, %"class.spvtools::opt::Instruction"* null
  %135 = load i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, i1 (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %77, align 8
  %136 = call zeroext i1 %135(%"union.std::__1::__function::__policy_storage"* nonnull %80, %"class.spvtools::opt::Instruction"* nonnull %126) #11
  br i1 %136, label %125, label %137

137:                                              ; preds = %128, %125, %117
  %138 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %78, align 8
  %139 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %138, i64 0, i32 1
  %140 = load void (i8*)*, void (i8*)** %139, align 8
  %141 = icmp eq void (i8*)* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %137
  %143 = load i8*, i8** %81, align 8
  call void %140(i8* %143) #11
  br label %144

144:                                              ; preds = %137, %142
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %145 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %71, align 8
  %146 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %145, i64 0, i32 1
  %147 = load void (i8*)*, void (i8*)** %146, align 8
  %148 = icmp eq void (i8*)* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %144
  %150 = load i8*, i8** %82, align 8
  call void %147(i8* %150) #11
  br label %151

151:                                              ; preds = %144, %149
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %69) #11
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %105, i64 1
  %153 = icmp eq %"class.std::__1::unique_ptr.40"* %152, %99
  br i1 %153, label %101, label %104
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_10BasicBlock11ForEachInstERKNS_8functionIFvS5_EEEbEUlS5_E_S6_EEEEbPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1047"**
  %4 = load %"class.std::__1::function.1047"*, %"class.std::__1::function.1047"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)*, void (%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1047", %"class.std::__1::function.1047"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, %"class.spvtools::opt::Instruction"* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_9IRContext24BuildInstrToBlockMappingEvEUlS5_E_S6_EEEEvPKNS0_16__policy_storageES5_(%"union.std::__1::__function::__policy_storage"*, %"class.spvtools::opt::Instruction"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %7 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = bitcast %"class.spvtools::opt::Instruction"** %5 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::IRContext"**
  %10 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %9, align 8
  %11 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %12 = bitcast [8 x i8]* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %10, i64 0, i32 9, i32 0
  %15 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #11
  %18 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %14, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %19 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %19, i64 3
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  %21 = bitcast %"struct.std::__1::__hash_node_base.178"* %20 to i64*
  store i64 %13, i64* %21, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

declare zeroext i1 @_Z13spvIsInIdType18spv_operand_type_t(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__110__function16__policy_invokerIFbPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt11Instruction11ForEachInIdERKNS_8functionIFvS2_EEEEUlS2_E_S3_EEEEbPKNS0_16__policy_storageES2_(%"union.std::__1::__function::__policy_storage"*, i32*) #0 comdat align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::function.1079"**
  %4 = load %"class.std::__1::function.1079"*, %"class.std::__1::function.1079"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %4, i64 0, i32 0, i32 1, i32 0
  %6 = load void (%"union.std::__1::__function::__policy_storage"*, i32*)*, void (%"union.std::__1::__function::__policy_storage"*, i32*)** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::function.1079", %"class.std::__1::function.1079"* %4, i64 0, i32 0, i32 0
  tail call void %6(%"union.std::__1::__function::__policy_storage"* %7, i32* %1) #11
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder9AddNaryOpEj6SpvOp_RKNSt3__16vectorIjNS3_9allocatorIjEEEEj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32, %"class.std::__1::vector.3"* dereferenceable(24), i32) local_unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"struct.spvtools::opt::Operand", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = alloca %"class.std::__1::unique_ptr.21", align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %3, i64 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.3"* %3 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %44, label %20

20:                                               ; preds = %5
  %21 = bitcast %"struct.spvtools::opt::Operand"* %7 to i8*
  %22 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  %24 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %26 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %27 = bitcast i32** %25 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %28 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %29 = bitcast %"class.std::__1::unique_ptr.0"* %28 to i64*
  %30 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %26 to i32*
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 0
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1
  %33 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %32, i64 0, i32 0
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 1
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 2
  %36 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 3, i64 0
  %37 = bitcast i32** %35 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4
  %39 = bitcast %"class.std::__1::unique_ptr.0"* %38 to i64*
  %40 = bitcast %"struct.spvtools::opt::Operand"** %12 to i64*
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %7, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  br label %52

44:                                               ; preds = %105, %5
  %45 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %46, align 8
  %47 = call i8* @_Znwm(i64 112) #10
  %48 = bitcast i8* %47 to %"class.spvtools::opt::Instruction"*
  %49 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %50 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %49, align 8
  %51 = icmp eq i32 %4, 0
  br i1 %51, label %112, label %129

52:                                               ; preds = %20, %105
  %53 = phi i64 [ %18, %20 ], [ %108, %105 ]
  %54 = phi i64 [ 0, %20 ], [ %106, %105 ]
  %55 = inttoptr i64 %53 to i32*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %21) #11
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %22) #11
  %56 = getelementptr inbounds i32, i32* %55, i64 %54
  %57 = load i32, i32* %56, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %26, %"struct.std::__1::aligned_storage<4, 4>::type"** %27, align 8
  store i64 0, i64* %29, align 8
  store i64 1, i64* %24, align 8
  store i32 %57, i32* %30, align 8
  store i32 1, i32* %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %33, align 8
  store i64 0, i64* %34, align 8
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %36, %"struct.std::__1::aligned_storage<4, 4>::type"** %37, align 8
  store i64 0, i64* %39, align 8
  %58 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %32, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %59 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %60 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %13, align 8
  %61 = icmp ult %"struct.spvtools::opt::Operand"* %59, %60
  br i1 %61, label %62, label %76

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 0
  %64 = load i32, i32* %31, align 8
  store i32 %64, i32* %63, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1
  %66 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 1
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 2
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 3, i64 0
  %70 = bitcast i32** %68 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %69, %"struct.std::__1::aligned_storage<4, 4>::type"** %70, align 8
  %71 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 0, i32 1, i32 4
  %72 = bitcast %"class.std::__1::unique_ptr.0"* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %32) #11
  %74 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 1
  %75 = ptrtoint %"struct.spvtools::opt::Operand"* %74 to i64
  store i64 %75, i64* %40, align 8
  br label %77

76:                                               ; preds = %52
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* nonnull %6, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %7) #11
  br label %77

77:                                               ; preds = %62, %76
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %41, align 8
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %42, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %42, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %77, %89
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %43, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %43, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %91
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %91, %103
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %21) #11
  %106 = add nuw i64 %54, 1
  %107 = load i64, i64* %15, align 8
  %108 = load i64, i64* %17, align 8
  %109 = sub i64 %107, %108
  %110 = ashr exact i64 %109, 2
  %111 = icmp ult i64 %106, %110
  br i1 %111, label %52, label %44

112:                                              ; preds = %44
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 4, i32 0, i32 0, i32 0
  %114 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %113, align 8
  %115 = call i32 @_ZN8spvtools3opt6Module15TakeNextIdBoundEv(%"class.spvtools::opt::Module"* %114) #11
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %129

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 2
  %119 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 8, !range !7
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %129

123:                                              ; preds = %117
  %124 = call i8* @_Znwm(i64 48) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %124, i8* align 1 getelementptr inbounds ([38 x i8], [38 x i8]* @.str.7, i64 0, i64 0), i64 37, i1 false) #11
  %125 = getelementptr inbounds i8, i8* %124, i64 37
  store i8 0, i8* %125, align 1
  %126 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 1, i32 0
  %127 = load void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)*, void (%"union.std::__1::__function::__policy_storage"*, i32, i8*, %struct.spv_position_t*, i8*)** %126, align 8
  %128 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %50, i64 0, i32 5, i32 0, i32 0
  call void %127(%"union.std::__1::__function::__policy_storage"* %128, i32 2, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), %struct.spv_position_t* nonnull dereferenceable(24) @.ref.tmp.9, i8* nonnull %124) #11
  call void @_ZdlPv(i8* nonnull %124) #10
  br label %129

129:                                              ; preds = %123, %117, %112, %44
  %130 = phi i32 [ %4, %44 ], [ %115, %112 ], [ 0, %117 ], [ 0, %123 ]
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %48, %"class.spvtools::opt::IRContext"* %50, i32 %2, i32 %1, i32 %130, %"class.std::__1::vector"* nonnull dereferenceable(24) %6) #11
  %131 = ptrtoint i8* %47 to i64
  %132 = bitcast %"class.std::__1::unique_ptr.21"* %9 to i64*
  store i64 %131, i64* %132, align 8
  %133 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %9)
  %134 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %46, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %46, align 8
  %135 = icmp eq %"class.spvtools::opt::Instruction"* %134, null
  br i1 %135, label %141, label %136

136:                                              ; preds = %129
  %137 = bitcast %"class.spvtools::opt::Instruction"* %134 to void (%"class.spvtools::opt::Instruction"*)***
  %138 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %138, i64 1
  %140 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %139, align 8
  call void %140(%"class.spvtools::opt::Instruction"* nonnull %134) #11
  br label %141

141:                                              ; preds = %129, %136
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %142 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %11, align 8
  %143 = icmp eq %"struct.spvtools::opt::Operand"* %142, null
  br i1 %143, label %173, label %144

144:                                              ; preds = %141
  %145 = bitcast %"struct.spvtools::opt::Operand"* %142 to i8*
  %146 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %12, align 8
  %147 = icmp eq %"struct.spvtools::opt::Operand"* %146, %142
  br i1 %147, label %171, label %148

148:                                              ; preds = %144, %166
  %149 = phi %"struct.spvtools::opt::Operand"* [ %150, %166 ], [ %146, %144 ]
  %150 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1
  %151 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %151, align 8
  %152 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %149, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %153 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %152, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %152, align 8
  %154 = icmp eq %"class.std::__1::vector.3"* %153, null
  br i1 %154, label %166, label %155

155:                                              ; preds = %148
  %156 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 0
  %157 = load i32*, i32** %156, align 8
  %158 = icmp eq i32* %157, null
  br i1 %158, label %164, label %159

159:                                              ; preds = %155
  %160 = ptrtoint i32* %157 to i64
  %161 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %153, i64 0, i32 0, i32 1
  %162 = bitcast i32** %161 to i64*
  store i64 %160, i64* %162, align 8
  %163 = bitcast i32* %157 to i8*
  call void @_ZdlPv(i8* %163) #10
  br label %164

164:                                              ; preds = %159, %155
  %165 = bitcast %"class.std::__1::vector.3"* %153 to i8*
  call void @_ZdlPv(i8* %165) #10
  br label %166

166:                                              ; preds = %164, %148
  %167 = icmp eq %"struct.spvtools::opt::Operand"* %150, %142
  br i1 %167, label %168, label %148

168:                                              ; preds = %166
  %169 = bitcast %"class.std::__1::vector"* %6 to i8**
  %170 = load i8*, i8** %169, align 8
  br label %171

171:                                              ; preds = %168, %144
  %172 = phi i8* [ %170, %168 ], [ %145, %144 ]
  store %"struct.spvtools::opt::Operand"* %142, %"struct.spvtools::opt::Operand"** %12, align 8
  call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %141, %171
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #11
  ret %"class.spvtools::opt::Instruction"* %133
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"*, %"class.std::__1::unique_ptr.21"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::__1::tuple", align 8
  %4 = alloca %"class.std::__1::tuple.1131", align 1
  %5 = alloca %"class.spvtools::opt::Instruction"*, align 8
  %6 = alloca %"class.spvtools::opt::InstructionList::iterator", align 8
  %7 = bitcast %"class.spvtools::opt::InstructionList::iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 2
  call void @_ZN8spvtools3opt15InstructionList8iterator12InsertBeforeEONSt3__110unique_ptrINS0_11InstructionENS3_14default_deleteIS5_EEEE(%"class.spvtools::opt::InstructionList::iterator"* nonnull sret %6, %"class.spvtools::opt::InstructionList::iterator"* %8, %"class.std::__1::unique_ptr.21"* dereferenceable(8) %1) #11
  %9 = getelementptr inbounds %"class.spvtools::opt::InstructionList::iterator", %"class.spvtools::opt::InstructionList::iterator"* %6, i64 0, i32 0, i32 0
  %10 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %9, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %12 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %13 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %39, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 1
  %24 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %23, align 8
  %25 = icmp eq %"class.spvtools::opt::BasicBlock"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.spvtools::opt::Instruction"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #11
  store %"class.spvtools::opt::Instruction"* %10, %"class.spvtools::opt::Instruction"** %5, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %12, i64 0, i32 9, i32 0
  %29 = bitcast %"class.std::__1::tuple"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"** %5, %"class.spvtools::opt::Instruction"*** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::tuple.1131", %"class.std::__1::tuple.1131"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %31) #11
  %32 = call { %"struct.std::__1::__hash_node_base.178"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.174"* %28, %"class.spvtools::opt::Instruction"** nonnull dereferenceable(8) %5, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %3, %"class.std::__1::tuple.1131"* nonnull dereferenceable(1) %4) #11
  %33 = extractvalue { %"struct.std::__1::__hash_node_base.178"*, i8 } %32, 0
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.178", %"struct.std::__1::__hash_node_base.178"* %33, i64 3
  %35 = bitcast %"struct.std::__1::__hash_node_base.178"* %34 to %"class.spvtools::opt::BasicBlock"**
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %31) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  store %"class.spvtools::opt::BasicBlock"* %24, %"class.spvtools::opt::BasicBlock"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #11
  %36 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %11, align 8
  %37 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %36, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  br label %39

39:                                               ; preds = %2, %17, %22, %26
  %40 = phi i32 [ %14, %2 ], [ %14, %17 ], [ %14, %22 ], [ %38, %26 ]
  %41 = phi %"class.spvtools::opt::IRContext"* [ %12, %2 ], [ %12, %17 ], [ %12, %22 ], [ %36, %26 ]
  %42 = and i32 %40, 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 1
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %41, i64 0, i32 6, i32 0, i32 0, i32 0
  %51 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %50, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager17AnalyzeInstDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %51, %"class.spvtools::opt::Instruction"* %10) #11
  br label %52

52:                                               ; preds = %39, %44, %49
  ret %"class.spvtools::opt::Instruction"* %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS7_10BasicBlockEEUljE_S2_EEEEvPKNS0_16__policy_storageEj(%"union.std::__1::__function::__policy_storage"*, i32) #0 comdat align 2 {
  %3 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %class.anon.1194*
  call void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1194* dereferenceable(16) %4, i32* nonnull dereferenceable(4) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__128__invoke_void_return_wrapperIvLb1EE6__callIJRZN8spvtools3opt3CFG20RemoveSuccessorEdgesEPKNS4_10BasicBlockEEUljE_jEEEvDpOT_(%class.anon.1194* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = getelementptr inbounds %class.anon.1194, %class.anon.1194* %0, i64 0, i32 1
  %5 = load %"class.spvtools::opt::CFG"*, %"class.spvtools::opt::CFG"** %4, align 8
  %6 = getelementptr inbounds %class.anon.1194, %class.anon.1194* %0, i64 0, i32 0
  %7 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %8, align 8
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 4
  %11 = load i8, i8* %10, align 1, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %9, i64 0, i32 3
  %15 = load i8, i8* %14, align 4, !range !7
  %16 = zext i8 %15 to i32
  %17 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %9, i32 %16) #11
  br label %18

18:                                               ; preds = %13, %2
  %19 = phi i32 [ %17, %13 ], [ 0, %2 ]
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %102, label %24

24:                                               ; preds = %18
  %25 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %26 = icmp ugt i64 %25, 1
  br i1 %26, label %30, label %27

27:                                               ; preds = %24
  %28 = add i64 %22, 4294967295
  %29 = and i64 %28, %20
  br label %34

30:                                               ; preds = %24
  %31 = icmp ugt i64 %22, %20
  br i1 %31, label %34, label %32

32:                                               ; preds = %30
  %33 = urem i64 %20, %22
  br label %34

34:                                               ; preds = %32, %30, %27
  %35 = phi i64 [ %29, %27 ], [ %33, %32 ], [ %20, %30 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::CFG", %"class.spvtools::opt::CFG"* %5, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::__hash_node_base.309"**, %"struct.std::__1::__hash_node_base.309"*** %36, align 8
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %37, i64 %35
  %39 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %38, align 8
  %40 = icmp eq %"struct.std::__1::__hash_node_base.309"* %39, null
  br i1 %40, label %102, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %39, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base.309"* %43, null
  br i1 %44, label %102, label %45

45:                                               ; preds = %41
  %46 = add i64 %22, -1
  br label %47

47:                                               ; preds = %68, %45
  %48 = phi %"struct.std::__1::__hash_node_base.309"* [ %43, %45 ], [ %70, %68 ]
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 1
  %50 = bitcast %"struct.std::__1::__hash_node_base.309"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, %20
  br i1 %52, label %63, label %53

53:                                               ; preds = %47
  br i1 %26, label %56, label %54

54:                                               ; preds = %53
  %55 = and i64 %51, %46
  br label %60

56:                                               ; preds = %53
  %57 = icmp ult i64 %51, %22
  br i1 %57, label %60, label %58

58:                                               ; preds = %56
  %59 = urem i64 %51, %22
  br label %60

60:                                               ; preds = %58, %56, %54
  %61 = phi i64 [ %55, %54 ], [ %59, %58 ], [ %51, %56 ]
  %62 = icmp eq i64 %61, %35
  br i1 %62, label %68, label %102

63:                                               ; preds = %47
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.309"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %3
  br i1 %67, label %72, label %68

68:                                               ; preds = %63, %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 0, i32 0
  %70 = load %"struct.std::__1::__hash_node_base.309"*, %"struct.std::__1::__hash_node_base.309"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.309"* %70, null
  br i1 %71, label %102, label %47

72:                                               ; preds = %63
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 3
  %74 = bitcast %"struct.std::__1::__hash_node_base.309"* %73 to i32**
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.309", %"struct.std::__1::__hash_node_base.309"* %48, i64 4
  %77 = bitcast %"struct.std::__1::__hash_node_base.309"* %76 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = icmp eq i32* %75, %78
  %80 = ptrtoint i32* %78 to i64
  br i1 %79, label %88, label %81

81:                                               ; preds = %72, %85
  %82 = phi i32* [ %86, %85 ], [ %75, %72 ]
  %83 = load i32, i32* %82, align 4
  %84 = icmp eq i32 %83, %19
  br i1 %84, label %88, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds i32, i32* %82, i64 1
  %87 = icmp eq i32* %86, %78
  br i1 %87, label %102, label %81

88:                                               ; preds = %81, %72
  %89 = phi i32* [ %75, %72 ], [ %82, %81 ]
  %90 = icmp eq i32* %89, %78
  br i1 %90, label %102, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds i32, i32* %89, i64 1
  %93 = ptrtoint i32* %92 to i64
  %94 = sub i64 %80, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %91
  %98 = bitcast i32* %89 to i8*
  %99 = bitcast i32* %92 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %98, i8* align 4 %99, i64 %94, i1 false) #11
  br label %100

100:                                              ; preds = %97, %91
  %101 = getelementptr inbounds i32, i32* %89, i64 %95
  store i32* %101, i32** %77, align 8
  br label %102

102:                                              ; preds = %60, %68, %85, %18, %34, %41, %88, %100
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::Instruction"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4BoolD0Ev(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool", %"class.spvtools::opt::analysis::Bool"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  %31 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Bool10IsSameImplEPKNS1_4TypeEPNSt3__13setINS6_4pairIPKNS1_7PointerESB_EENS6_4lessISC_EENS6_9allocatorISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.spvtools::opt::analysis::Type"*, %"class.std::__1::set.1199"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.spvtools::opt::analysis::Type"* %1 to %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)***
  %5 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)**, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %5, i64 9
  %7 = load %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)*, %"class.spvtools::opt::analysis::Bool"* (%"class.spvtools::opt::analysis::Type"*)** %6, align 8
  %8 = tail call %"class.spvtools::opt::analysis::Bool"* %7(%"class.spvtools::opt::analysis::Type"* %1) #11
  %9 = icmp eq %"class.spvtools::opt::analysis::Bool"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.spvtools::opt::analysis::Bool"* %0 to %"class.spvtools::opt::analysis::Type"*
  %12 = tail call zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"* %11, %"class.spvtools::opt::analysis::Type"* %1) #11
  br label %13

13:                                               ; preds = %3, %10
  %14 = phi i1 [ false, %3 ], [ %12, %10 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 4, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %6 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819242338, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %5, i64 4
  store i8 0, i8* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK8spvtools3opt8analysis4Type16decoration_emptyEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %3, %5
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK8spvtools3opt8analysis4Bool17GetExtraHashWordsEPNSt3__16vectorIjNS3_9allocatorIjEEEEPNS3_13unordered_setIPKNS1_4TypeENS3_4hashISC_EENS3_8equal_toISC_EENS5_ISC_EEEE(%"class.spvtools::opt::analysis::Bool"*, %"class.std::__1::vector.3"*, %"class.std::__1::unordered_set.1209"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZN8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Void"* @_ZNK8spvtools3opt8analysis4Type6AsVoidEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Void"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Bool6AsBoolEv(%"class.spvtools::opt::analysis::Bool"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZN8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Integer"* @_ZNK8spvtools3opt8analysis4Type9AsIntegerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Integer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZN8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Float"* @_ZNK8spvtools3opt8analysis4Type7AsFloatEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Float"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZN8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Vector"* @_ZNK8spvtools3opt8analysis4Type8AsVectorEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Vector"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZN8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Matrix"* @_ZNK8spvtools3opt8analysis4Type8AsMatrixEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Matrix"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZN8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Image"* @_ZNK8spvtools3opt8analysis4Type7AsImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Image"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZN8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Sampler"* @_ZNK8spvtools3opt8analysis4Type9AsSamplerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Sampler"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZN8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::SampledImage"* @_ZNK8spvtools3opt8analysis4Type14AsSampledImageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::SampledImage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZN8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Array"* @_ZNK8spvtools3opt8analysis4Type7AsArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Array"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZN8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RuntimeArray"* @_ZNK8spvtools3opt8analysis4Type14AsRuntimeArrayEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RuntimeArray"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZN8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Struct"* @_ZNK8spvtools3opt8analysis4Type8AsStructEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Struct"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZN8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Opaque"* @_ZNK8spvtools3opt8analysis4Type8AsOpaqueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Opaque"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZN8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pointer"* @_ZNK8spvtools3opt8analysis4Type9AsPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZN8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Function"* @_ZNK8spvtools3opt8analysis4Type10AsFunctionEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Function"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZN8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Event"* @_ZNK8spvtools3opt8analysis4Type7AsEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Event"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZN8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::DeviceEvent"* @_ZNK8spvtools3opt8analysis4Type13AsDeviceEventEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::DeviceEvent"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZN8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ReserveId"* @_ZNK8spvtools3opt8analysis4Type11AsReserveIdEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ReserveId"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZN8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Queue"* @_ZNK8spvtools3opt8analysis4Type7AsQueueEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Queue"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZN8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Pipe"* @_ZNK8spvtools3opt8analysis4Type6AsPipeEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Pipe"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZN8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::ForwardPointer"* @_ZNK8spvtools3opt8analysis4Type16AsForwardPointerEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::ForwardPointer"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZN8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::PipeStorage"* @_ZNK8spvtools3opt8analysis4Type13AsPipeStorageEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::PipeStorage"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZN8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::NamedBarrier"* @_ZNK8spvtools3opt8analysis4Type14AsNamedBarrierEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::NamedBarrier"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZN8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::AccelerationStructureNV"* @_ZNK8spvtools3opt8analysis4Type25AsAccelerationStructureNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::AccelerationStructureNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZN8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::CooperativeMatrixNV"* @_ZNK8spvtools3opt8analysis4Type21AsCooperativeMatrixNVEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::CooperativeMatrixNV"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZN8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::RayQueryKHR"* @_ZNK8spvtools3opt8analysis4Type13AsRayQueryKHREv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::RayQueryKHR"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4Type16ClearDecorationsEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %2, align 8
  %4 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, %3
  br i1 %6, label %20, label %7

7:                                                ; preds = %1, %18
  %8 = phi %"class.std::__1::vector.3"* [ %9, %18 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1
  %10 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %9, i64 0, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = icmp eq i32* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %7
  %14 = ptrtoint i32* %11 to i64
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 -1, i32 0, i32 1
  %16 = bitcast i32** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = bitcast i32* %11 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %13, %7
  %19 = icmp eq %"class.std::__1::vector.3"* %9, %3
  br i1 %19, label %20, label %7

20:                                               ; preds = %18, %1
  store %"class.std::__1::vector.3"* %3, %"class.std::__1::vector.3"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD0Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZN8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::analysis::Bool"* @_ZNK8spvtools3opt8analysis4Type6AsBoolEv(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  ret %"class.spvtools::opt::analysis::Bool"* null
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZNK8spvtools3opt8analysis4Type18HasSameDecorationsEPKS2_(%"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"*) local_unnamed_addr #2

declare void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"*, %"class.std::__1::function"* dereferenceable(32), %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %2, align 8
  %4 = icmp eq %"struct.std::__1::__hash_node_base.571"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1, %5
  %6 = phi %"struct.std::__1::__hash_node_base.571"* [ %8, %5 ], [ %3, %1 ]
  %7 = getelementptr inbounds %"struct.std::__1::__hash_node_base.571", %"struct.std::__1::__hash_node_base.571"* %6, i64 0, i32 0
  %8 = load %"struct.std::__1::__hash_node_base.571"*, %"struct.std::__1::__hash_node_base.571"** %7, align 8
  %9 = bitcast %"struct.std::__1::__hash_node_base.571"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #10
  %10 = icmp eq %"struct.std::__1::__hash_node_base.571"* %8, null
  br i1 %10, label %11, label %5

11:                                               ; preds = %5, %1
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"struct.std::__1::__hash_node_base.571"**, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  store %"struct.std::__1::__hash_node_base.571"** null, %"struct.std::__1::__hash_node_base.571"*** %12, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.571"** %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::__hash_node_base.571"** %13 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %11, %15
  %18 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %18, align 8
  %20 = icmp eq %"struct.std::__1::__hash_node_base.488"* %19, null
  br i1 %20, label %27, label %21

21:                                               ; preds = %17, %21
  %22 = phi %"struct.std::__1::__hash_node_base.488"* [ %24, %21 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %22, i64 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %23, align 8
  %25 = bitcast %"struct.std::__1::__hash_node_base.488"* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  %26 = icmp eq %"struct.std::__1::__hash_node_base.488"* %24, null
  br i1 %26, label %27, label %21

27:                                               ; preds = %21, %17
  %28 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %28, align 8
  %30 = icmp eq %"struct.std::__1::__hash_node_base.488"** %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = bitcast %"struct.std::__1::__hash_node_base.488"** %29 to i8*
  tail call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %27, %31
  %34 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5
  %35 = getelementptr inbounds %"class.std::__1::vector.553", %"class.std::__1::vector.553"* %34, i64 0, i32 0, i32 0
  %36 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %35, align 8
  %37 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %33
  %39 = bitcast %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36 to i8*
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 5, i32 0, i32 1
  %41 = load %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"*, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  %42 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %41, %36
  br i1 %42, label %59, label %43

43:                                               ; preds = %38, %54
  %44 = phi %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* [ %45, %54 ], [ %41, %38 ]
  %45 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager::UnresolvedType", %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %44, i64 -1, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %46, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %46, align 8
  %48 = icmp eq %"class.spvtools::opt::analysis::Type"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = bitcast %"class.spvtools::opt::analysis::Type"* %47 to void (%"class.spvtools::opt::analysis::Type"*)***
  %51 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %51, i64 1
  %53 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %52, align 8
  tail call void %53(%"class.spvtools::opt::analysis::Type"* nonnull %47) #11
  br label %54

54:                                               ; preds = %49, %43
  %55 = icmp eq %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %45, %36
  br i1 %55, label %56, label %43

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.553"* %34 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %38
  %60 = phi i8* [ %58, %56 ], [ %39, %38 ]
  store %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"* %36, %"class.spvtools::opt::analysis::TypeManager::UnresolvedType"** %40, align 8
  tail call void @_ZdlPv(i8* %60) #10
  br label %61

61:                                               ; preds = %33, %59
  %62 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %62, align 8
  %64 = icmp eq %"struct.std::__1::__hash_node_base.536"* %63, null
  br i1 %64, label %81, label %65

65:                                               ; preds = %61, %78
  %66 = phi %"struct.std::__1::__hash_node_base.536"* [ %68, %78 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.536"*, %"struct.std::__1::__hash_node_base.536"** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.536", %"struct.std::__1::__hash_node_base.536"* %66, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.536"* %69 to %"class.spvtools::opt::analysis::Type"**
  %71 = load %"class.spvtools::opt::analysis::Type"*, %"class.spvtools::opt::analysis::Type"** %70, align 8
  store %"class.spvtools::opt::analysis::Type"* null, %"class.spvtools::opt::analysis::Type"** %70, align 8
  %72 = icmp eq %"class.spvtools::opt::analysis::Type"* %71, null
  br i1 %72, label %78, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.spvtools::opt::analysis::Type"* %71 to void (%"class.spvtools::opt::analysis::Type"*)***
  %75 = load void (%"class.spvtools::opt::analysis::Type"*)**, void (%"class.spvtools::opt::analysis::Type"*)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %75, i64 1
  %77 = load void (%"class.spvtools::opt::analysis::Type"*)*, void (%"class.spvtools::opt::analysis::Type"*)** %76, align 8
  tail call void %77(%"class.spvtools::opt::analysis::Type"* nonnull %71) #11
  br label %78

78:                                               ; preds = %73, %65
  %79 = bitcast %"struct.std::__1::__hash_node_base.536"* %66 to i8*
  tail call void @_ZdlPv(i8* %79) #10
  %80 = icmp eq %"struct.std::__1::__hash_node_base.536"* %68, null
  br i1 %80, label %81, label %65

81:                                               ; preds = %78, %61
  %82 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load %"struct.std::__1::__hash_node_base.536"**, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  store %"struct.std::__1::__hash_node_base.536"** null, %"struct.std::__1::__hash_node_base.536"*** %82, align 8
  %84 = icmp eq %"struct.std::__1::__hash_node_base.536"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %81
  %86 = bitcast %"struct.std::__1::__hash_node_base.536"** %83 to i8*
  tail call void @_ZdlPv(i8* %86) #10
  br label %87

87:                                               ; preds = %81, %85
  %88 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %88, align 8
  %90 = icmp eq %"struct.std::__1::__hash_node_base.512"* %89, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %87, %91
  %92 = phi %"struct.std::__1::__hash_node_base.512"* [ %94, %91 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.std::__1::__hash_node_base.512", %"struct.std::__1::__hash_node_base.512"* %92, i64 0, i32 0
  %94 = load %"struct.std::__1::__hash_node_base.512"*, %"struct.std::__1::__hash_node_base.512"** %93, align 8
  %95 = bitcast %"struct.std::__1::__hash_node_base.512"* %92 to i8*
  tail call void @_ZdlPv(i8* %95) #10
  %96 = icmp eq %"struct.std::__1::__hash_node_base.512"* %94, null
  br i1 %96, label %97, label %91

97:                                               ; preds = %91, %87
  %98 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.512"**, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  store %"struct.std::__1::__hash_node_base.512"** null, %"struct.std::__1::__hash_node_base.512"*** %98, align 8
  %100 = icmp eq %"struct.std::__1::__hash_node_base.512"** %99, null
  br i1 %100, label %103, label %101

101:                                              ; preds = %97
  %102 = bitcast %"struct.std::__1::__hash_node_base.512"** %99 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %97, %101
  %104 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %104, align 8
  %106 = icmp eq %"struct.std::__1::__hash_node_base.488"* %105, null
  br i1 %106, label %113, label %107

107:                                              ; preds = %103, %107
  %108 = phi %"struct.std::__1::__hash_node_base.488"* [ %110, %107 ], [ %105, %103 ]
  %109 = getelementptr inbounds %"struct.std::__1::__hash_node_base.488", %"struct.std::__1::__hash_node_base.488"* %108, i64 0, i32 0
  %110 = load %"struct.std::__1::__hash_node_base.488"*, %"struct.std::__1::__hash_node_base.488"** %109, align 8
  %111 = bitcast %"struct.std::__1::__hash_node_base.488"* %108 to i8*
  tail call void @_ZdlPv(i8* %111) #10
  %112 = icmp eq %"struct.std::__1::__hash_node_base.488"* %110, null
  br i1 %112, label %113, label %107

113:                                              ; preds = %107, %103
  %114 = getelementptr inbounds %"class.spvtools::opt::analysis::TypeManager", %"class.spvtools::opt::analysis::TypeManager"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load %"struct.std::__1::__hash_node_base.488"**, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  store %"struct.std::__1::__hash_node_base.488"** null, %"struct.std::__1::__hash_node_base.488"*** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.488"** %115, null
  br i1 %116, label %119, label %117

117:                                              ; preds = %113
  %118 = bitcast %"struct.std::__1::__hash_node_base.488"** %115 to i8*
  tail call void @_ZdlPv(i8* %118) #10
  br label %119

119:                                              ; preds = %113, %117
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder17AddSelectionMergeEjj(%"class.spvtools::opt::InstructionBuilder"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.21", align 8
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca [2 x %"struct.spvtools::opt::Operand"], align 8
  %7 = alloca %"class.spvtools::utils::SmallVector", align 8
  %8 = alloca %"class.spvtools::utils::SmallVector", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.21", %"class.std::__1::unique_ptr.21"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* inttoptr (i64 -6148914691236517206 to %"class.spvtools::opt::Instruction"*), %"class.spvtools::opt::Instruction"** %10, align 8
  %11 = tail call i8* @_Znwm(i64 112) #10
  %12 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %13 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  %15 = bitcast [2 x %"struct.spvtools::opt::Operand"]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %15) #11
  %16 = bitcast %"class.spvtools::utils::SmallVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 1
  %19 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 2
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 3, i64 0
  %21 = bitcast i32** %19 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %20, %"struct.std::__1::aligned_storage<4, 4>::type"** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4
  %23 = bitcast %"class.std::__1::unique_ptr.0"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %20 to i32*
  store i64 1, i64* %18, align 8
  store i32 %1, i32* %24, align 8
  %25 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  store i32 1, i32* %25, align 8
  %26 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %27 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %26, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %27, align 8
  %28 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 1
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 2
  %30 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 3, i64 0
  %31 = bitcast i32** %29 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %30, %"struct.std::__1::aligned_storage<4, 4>::type"** %31, align 8
  %32 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4
  %33 = bitcast %"class.std::__1::unique_ptr.0"* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %26, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %7) #11
  %35 = bitcast %"class.spvtools::utils::SmallVector"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %35) #11
  %36 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %37 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 1
  %38 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 2
  %39 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 3, i64 0
  %40 = bitcast i32** %38 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %39, %"struct.std::__1::aligned_storage<4, 4>::type"** %40, align 8
  %41 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4
  %42 = bitcast %"class.std::__1::unique_ptr.0"* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %39 to i32*
  store i64 1, i64* %37, align 8
  store i32 %2, i32* %43, align 8
  %44 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  store i32 39, i32* %44, align 8
  %45 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %46 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %45, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %47 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 1
  store i64 0, i64* %47, align 8
  %48 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 2
  %49 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 3, i64 0
  %50 = bitcast i32** %48 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %49, %"struct.std::__1::aligned_storage<4, 4>::type"** %50, align 8
  %51 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4
  %52 = bitcast %"class.std::__1::unique_ptr.0"* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %45, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %8) #11
  %54 = call i8* @_Znwm(i64 96) #10
  %55 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %56 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %54, i8** %56, align 8
  %57 = getelementptr inbounds i8, i8* %54, i64 96
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"struct.spvtools::opt::Operand"** %58 to i8**
  store i8* %57, i8** %59, align 8
  %60 = bitcast i8* %54 to i32*
  %61 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 0
  %62 = load i32, i32* %61, align 8
  store i32 %62, i32* %60, align 8
  %63 = getelementptr inbounds i8, i8* %54, i64 8
  %64 = bitcast i8* %63 to %"class.spvtools::utils::SmallVector"*
  %65 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1
  %66 = bitcast i8* %63 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %66, align 8
  %67 = getelementptr inbounds i8, i8* %54, i64 16
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %54, i64 24
  %70 = getelementptr inbounds i8, i8* %54, i64 32
  %71 = bitcast i8* %69 to i8**
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds i8, i8* %54, i64 40
  %73 = bitcast i8* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %64, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %65) #11
  %75 = getelementptr inbounds i8, i8* %54, i64 48
  %76 = bitcast i8* %75 to i32*
  %77 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 0
  %78 = load i32, i32* %77, align 8
  store i32 %78, i32* %76, align 8
  %79 = getelementptr inbounds i8, i8* %54, i64 56
  %80 = bitcast i8* %79 to %"class.spvtools::utils::SmallVector"*
  %81 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1
  %82 = bitcast i8* %79 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %82, align 8
  %83 = getelementptr inbounds i8, i8* %54, i64 64
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %54, i64 72
  %86 = getelementptr inbounds i8, i8* %54, i64 80
  %87 = bitcast i8* %85 to i8**
  store i8* %86, i8** %87, align 8
  %88 = getelementptr inbounds i8, i8* %54, i64 88
  %89 = bitcast i8* %88 to i64*
  store i64 0, i64* %89, align 8
  %90 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"* %80, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %81) #11
  %91 = getelementptr inbounds i8, i8* %54, i64 96
  %92 = bitcast i8* %11 to %"class.spvtools::opt::Instruction"*
  %93 = bitcast %"struct.spvtools::opt::Operand"** %55 to i64*
  %94 = ptrtoint i8* %91 to i64
  store i64 %94, i64* %93, align 8
  call void @_ZN8spvtools3opt11InstructionC1EPNS0_9IRContextE6SpvOp_jjRKNSt3__16vectorINS0_7OperandENS5_9allocatorIS7_EEEE(%"class.spvtools::opt::Instruction"* nonnull %92, %"class.spvtools::opt::IRContext"* %13, i32 247, i32 0, i32 0, %"class.std::__1::vector"* nonnull dereferenceable(24) %5) #11
  %95 = ptrtoint i8* %11 to i64
  %96 = bitcast %"class.std::__1::unique_ptr.21"* %4 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %98 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %97, align 8
  %99 = icmp eq %"struct.spvtools::opt::Operand"* %98, null
  br i1 %99, label %128, label %100

100:                                              ; preds = %3
  %101 = bitcast %"struct.spvtools::opt::Operand"* %98 to i8*
  %102 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %55, align 8
  %103 = icmp eq %"struct.spvtools::opt::Operand"* %102, %98
  br i1 %103, label %126, label %104

104:                                              ; preds = %100, %122
  %105 = phi %"struct.spvtools::opt::Operand"* [ %106, %122 ], [ %102, %100 ]
  %106 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1
  %107 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %107, align 8
  %108 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %105, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %109 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %108, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %108, align 8
  %110 = icmp eq %"class.std::__1::vector.3"* %109, null
  br i1 %110, label %122, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = icmp eq i32* %113, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = ptrtoint i32* %113 to i64
  %117 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %109, i64 0, i32 0, i32 1
  %118 = bitcast i32** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i32* %113 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %115, %111
  %121 = bitcast %"class.std::__1::vector.3"* %109 to i8*
  call void @_ZdlPv(i8* %121) #10
  br label %122

122:                                              ; preds = %120, %104
  %123 = icmp eq %"struct.spvtools::opt::Operand"* %106, %98
  br i1 %123, label %124, label %104

124:                                              ; preds = %122
  %125 = load i8*, i8** %56, align 8
  br label %126

126:                                              ; preds = %124, %100
  %127 = phi i8* [ %125, %124 ], [ %101, %100 ]
  store %"struct.spvtools::opt::Operand"* %98, %"struct.spvtools::opt::Operand"** %55, align 8
  call void @_ZdlPv(i8* %127) #10
  br label %128

128:                                              ; preds = %3, %126
  %129 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %129, align 8
  %130 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 1, i32 1, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %130, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %130, align 8
  %132 = icmp eq %"class.std::__1::vector.3"* %131, null
  br i1 %132, label %144, label %133

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 0
  %135 = load i32*, i32** %134, align 8
  %136 = icmp eq i32* %135, null
  br i1 %136, label %142, label %137

137:                                              ; preds = %133
  %138 = ptrtoint i32* %135 to i64
  %139 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %131, i64 0, i32 0, i32 1
  %140 = bitcast i32** %139 to i64*
  store i64 %138, i64* %140, align 8
  %141 = bitcast i32* %135 to i8*
  call void @_ZdlPv(i8* %141) #10
  br label %142

142:                                              ; preds = %137, %133
  %143 = bitcast %"class.std::__1::vector.3"* %131 to i8*
  call void @_ZdlPv(i8* %143) #10
  br label %144

144:                                              ; preds = %128, %142
  %145 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %145, align 8
  %146 = getelementptr inbounds [2 x %"struct.spvtools::opt::Operand"], [2 x %"struct.spvtools::opt::Operand"]* %6, i64 0, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %147 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %146, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %146, align 8
  %148 = icmp eq %"class.std::__1::vector.3"* %147, null
  br i1 %148, label %196, label %185

149:                                              ; preds = %196
  %150 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 0
  %151 = load i32*, i32** %150, align 8
  %152 = icmp eq i32* %151, null
  br i1 %152, label %158, label %153

153:                                              ; preds = %149
  %154 = ptrtoint i32* %151 to i64
  %155 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %198, i64 0, i32 0, i32 1
  %156 = bitcast i32** %155 to i64*
  store i64 %154, i64* %156, align 8
  %157 = bitcast i32* %151 to i8*
  call void @_ZdlPv(i8* %157) #10
  br label %158

158:                                              ; preds = %153, %149
  %159 = bitcast %"class.std::__1::vector.3"* %198 to i8*
  call void @_ZdlPv(i8* %159) #10
  br label %160

160:                                              ; preds = %196, %158
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %35) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %161 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %7, i64 0, i32 4, i32 0, i32 0, i32 0
  %162 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %161, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %161, align 8
  %163 = icmp eq %"class.std::__1::vector.3"* %162, null
  br i1 %163, label %175, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 0
  %166 = load i32*, i32** %165, align 8
  %167 = icmp eq i32* %166, null
  br i1 %167, label %173, label %168

168:                                              ; preds = %164
  %169 = ptrtoint i32* %166 to i64
  %170 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %162, i64 0, i32 0, i32 1
  %171 = bitcast i32** %170 to i64*
  store i64 %169, i64* %171, align 8
  %172 = bitcast i32* %166 to i8*
  call void @_ZdlPv(i8* %172) #10
  br label %173

173:                                              ; preds = %168, %164
  %174 = bitcast %"class.std::__1::vector.3"* %162 to i8*
  call void @_ZdlPv(i8* %174) #10
  br label %175

175:                                              ; preds = %160, %173
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  %176 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14AddInstructionEONSt3__110unique_ptrINS0_11InstructionENS2_14default_deleteIS4_EEEE(%"class.spvtools::opt::InstructionBuilder"* %0, %"class.std::__1::unique_ptr.21"* nonnull dereferenceable(8) %4)
  %177 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %10, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %10, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"* %177, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = bitcast %"class.spvtools::opt::Instruction"* %177 to void (%"class.spvtools::opt::Instruction"*)***
  %181 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %181, i64 1
  %183 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %182, align 8
  call void %183(%"class.spvtools::opt::Instruction"* nonnull %177) #11
  br label %184

184:                                              ; preds = %175, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #11
  ret %"class.spvtools::opt::Instruction"* %176

185:                                              ; preds = %144
  %186 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 0
  %187 = load i32*, i32** %186, align 8
  %188 = icmp eq i32* %187, null
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  %190 = ptrtoint i32* %187 to i64
  %191 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %147, i64 0, i32 0, i32 1
  %192 = bitcast i32** %191 to i64*
  store i64 %190, i64* %192, align 8
  %193 = bitcast i32* %187 to i8*
  call void @_ZdlPv(i8* %193) #10
  br label %194

194:                                              ; preds = %189, %185
  %195 = bitcast %"class.std::__1::vector.3"* %147 to i8*
  call void @_ZdlPv(i8* %195) #10
  br label %196

196:                                              ; preds = %194, %144
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %197 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %198 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %197, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %197, align 8
  %199 = icmp eq %"class.std::__1::vector.3"* %198, null
  br i1 %199, label %160, label %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.333"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIjJRKNS_21piecewise_construct_tENS_5tupleIJRKjEEENSM_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.329"*, i32* dereferenceable(4), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1157"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = load i32, i32* %1, align 4
  %7 = zext i32 %6 to i64
  %8 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !15
  %13 = icmp ugt i64 %12, 1
  br i1 %13, label %17, label %14

14:                                               ; preds = %11
  %15 = add i64 %9, 4294967295
  %16 = and i64 %15, %7
  br label %21

17:                                               ; preds = %11
  %18 = icmp ugt i64 %9, %7
  br i1 %18, label %21, label %19

19:                                               ; preds = %17
  %20 = urem i64 %7, %9
  br label %21

21:                                               ; preds = %14, %17, %19
  %22 = phi i64 [ %16, %14 ], [ %20, %19 ], [ %7, %17 ]
  %23 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %23, align 8
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %24, i64 %22
  %26 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %25, align 8
  %27 = icmp eq %"struct.std::__1::__hash_node_base.333"* %26, null
  br i1 %27, label %55, label %28

28:                                               ; preds = %21
  %29 = add i64 %9, -1
  br label %30

30:                                               ; preds = %28, %50
  %31 = phi %"struct.std::__1::__hash_node_base.333"* [ %33, %50 ], [ %26, %28 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.333"* %33, null
  br i1 %34, label %55, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.333"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %7
  br i1 %39, label %50, label %40

40:                                               ; preds = %35
  br i1 %13, label %43, label %41

41:                                               ; preds = %40
  %42 = and i64 %38, %29
  br label %47

43:                                               ; preds = %40
  %44 = icmp ult i64 %38, %9
  br i1 %44, label %47, label %45

45:                                               ; preds = %43
  %46 = urem i64 %38, %9
  br label %47

47:                                               ; preds = %41, %43, %45
  %48 = phi i64 [ %42, %41 ], [ %46, %45 ], [ %38, %43 ]
  %49 = icmp eq i64 %48, %22
  br i1 %49, label %50, label %55

50:                                               ; preds = %35, %47
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %33, i64 2
  %52 = bitcast %"struct.std::__1::__hash_node_base.333"* %51 to i32*
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, %6
  br i1 %54, label %146, label %30

55:                                               ; preds = %30, %47, %21, %5
  %56 = phi i64 [ %22, %21 ], [ -6148914691236517206, %5 ], [ %22, %47 ], [ %22, %30 ]
  %57 = tail call i8* @_Znwm(i64 32) #10, !noalias !165
  %58 = getelementptr inbounds i8, i8* %57, i64 16
  %59 = getelementptr inbounds %"class.std::__1::tuple.1157", %"class.std::__1::tuple.1157"* %3, i64 0, i32 0, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8, !noalias !165
  %61 = bitcast i8* %58 to i32*
  %62 = load i32, i32* %60, align 4, !noalias !165
  store i32 %62, i32* %61, align 8, !noalias !165
  %63 = getelementptr inbounds i8, i8* %57, i64 24
  %64 = bitcast i8* %63 to %"class.spvtools::opt::BasicBlock"**
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %64, align 8, !noalias !165
  %65 = getelementptr inbounds i8, i8* %57, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 %7, i64* %66, align 8, !noalias !165
  %67 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"**
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %67, align 8, !noalias !165
  %68 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  %71 = uitofp i64 %70 to float
  %72 = uitofp i64 %9 to float
  %73 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load float, float* %73, align 4
  %75 = fmul float %74, %72
  %76 = fcmp olt float %75, %71
  %77 = or i1 %10, %76
  br i1 %77, label %78, label %101

78:                                               ; preds = %55
  %79 = shl i64 %9, 1
  %80 = icmp ult i64 %9, 3
  %81 = tail call i64 @llvm.ctpop.i64(i64 %9) #11, !range !15
  %82 = icmp ugt i64 %81, 1
  %83 = or i1 %80, %82
  %84 = zext i1 %83 to i64
  %85 = or i64 %79, %84
  %86 = fdiv float %71, %74
  %87 = tail call float @llvm.ceil.f32(float %86) #11
  %88 = fptoui float %87 to i64
  %89 = icmp ult i64 %85, %88
  %90 = select i1 %89, i64 %88, i64 %85
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %90)
  %91 = load i64, i64* %8, align 8
  %92 = tail call i64 @llvm.ctpop.i64(i64 %91) #11, !range !15
  %93 = icmp ugt i64 %92, 1
  br i1 %93, label %97, label %94

94:                                               ; preds = %78
  %95 = add i64 %91, 4294967295
  %96 = and i64 %95, %7
  br label %101

97:                                               ; preds = %78
  %98 = icmp ugt i64 %91, %7
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = urem i64 %7, %91
  br label %101

101:                                              ; preds = %99, %97, %94, %55
  %102 = phi i64 [ %9, %55 ], [ %91, %94 ], [ %91, %97 ], [ %91, %99 ]
  %103 = phi i64 [ %56, %55 ], [ %96, %94 ], [ %7, %97 ], [ %100, %99 ]
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %105, i64 %103
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %109, label %135

109:                                              ; preds = %101
  %110 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast i8* %57 to i64*
  store i64 %112, i64* %113, align 8
  %114 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i8**
  store i8* %57, i8** %114, align 8
  store %"struct.std::__1::__hash_node_base.333"* %110, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %115 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %67, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.333"* %115, null
  br i1 %116, label %142, label %117

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %115, i64 1
  %119 = bitcast %"struct.std::__1::__hash_node_base.333"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = tail call i64 @llvm.ctpop.i64(i64 %102) #11, !range !15
  %122 = icmp ugt i64 %121, 1
  br i1 %122, label %126, label %123

123:                                              ; preds = %117
  %124 = add i64 %102, -1
  %125 = and i64 %120, %124
  br label %130

126:                                              ; preds = %117
  %127 = icmp ult i64 %120, %102
  br i1 %127, label %130, label %128

128:                                              ; preds = %126
  %129 = urem i64 %120, %102
  br label %130

130:                                              ; preds = %123, %126, %128
  %131 = phi i64 [ %125, %123 ], [ %129, %128 ], [ %120, %126 ]
  %132 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %104, align 8
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %132, i64 %131
  %134 = bitcast %"struct.std::__1::__hash_node_base.333"** %133 to i8**
  br label %140

135:                                              ; preds = %101
  %136 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast i8* %57 to i64*
  store i64 %137, i64* %138, align 8
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"* %107 to i8**
  br label %140

140:                                              ; preds = %130, %135
  %141 = phi i8** [ %139, %135 ], [ %134, %130 ]
  store i8* %57, i8** %141, align 8
  br label %142

142:                                              ; preds = %140, %109
  %143 = bitcast i8* %57 to %"struct.std::__1::__hash_node_base.333"*
  %144 = load i64, i64* %68, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %68, align 8
  br label %146

146:                                              ; preds = %50, %142
  %147 = phi i8 [ 1, %142 ], [ 0, %50 ]
  %148 = phi %"struct.std::__1::__hash_node_base.333"* [ %143, %142 ], [ %33, %50 ]
  %149 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } undef, %"struct.std::__1::__hash_node_base.333"* %148, 0
  %150 = insertvalue { %"struct.std::__1::__hash_node_base.333"*, i8 } %149, i8 %147, 1
  ret { %"struct.std::__1::__hash_node_base.333"*, i8 } %150
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.329"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.329"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.333"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.333"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !168

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.333"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.333"* null, %"struct.std::__1::__hash_node_base.333"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.333"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.333"* %36, %"struct.std::__1::__hash_node_base.333"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.333"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.333"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.333"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.333"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.333"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.333"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.333"* %82, %"struct.std::__1::__hash_node_base.333"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.333"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.333"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.333"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.333"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.333"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.333"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.333"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.333"* %80, %"struct.std::__1::__hash_node_base.333"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.333"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.333", %"struct.std::__1::__hash_node_base.333"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.333"*, %"struct.std::__1::__hash_node_base.333"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.333"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.329", %"class.std::__1::__hash_table.329"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.333"**, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.333"** null, %"struct.std::__1::__hash_node_base.333"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.333"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.333"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.335", %"class.std::__1::__bucket_list_deallocator.335"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

declare void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.std::__1::vector.458", %"class.std::__1::vector.458"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %3, align 8
  %5 = icmp eq %"class.std::__1::unique_ptr.460"* %4, null
  br i1 %5, label %29, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::unique_ptr.460"* %4 to i8*
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.460"*, %"class.std::__1::unique_ptr.460"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.460"* %9, %4
  br i1 %10, label %27, label %11

11:                                               ; preds = %6, %22
  %12 = phi %"class.std::__1::unique_ptr.460"* [ %13, %22 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %12, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::analysis::Constant"*, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  store %"class.spvtools::opt::analysis::Constant"* null, %"class.spvtools::opt::analysis::Constant"** %14, align 8
  %16 = icmp eq %"class.spvtools::opt::analysis::Constant"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %11
  %18 = bitcast %"class.spvtools::opt::analysis::Constant"* %15 to void (%"class.spvtools::opt::analysis::Constant"*)***
  %19 = load void (%"class.spvtools::opt::analysis::Constant"*)**, void (%"class.spvtools::opt::analysis::Constant"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %19, i64 1
  %21 = load void (%"class.spvtools::opt::analysis::Constant"*)*, void (%"class.spvtools::opt::analysis::Constant"*)** %20, align 8
  tail call void %21(%"class.spvtools::opt::analysis::Constant"* nonnull %15) #11
  br label %22

22:                                               ; preds = %17, %11
  %23 = icmp eq %"class.std::__1::unique_ptr.460"* %13, %4
  br i1 %23, label %24, label %11

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.458"* %2 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %6
  %28 = phi i8* [ %26, %24 ], [ %7, %6 ]
  store %"class.std::__1::unique_ptr.460"* %4, %"class.std::__1::unique_ptr.460"** %8, align 8
  tail call void @_ZdlPv(i8* %28) #10
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.441"* %31, null
  br i1 %32, label %39, label %33

33:                                               ; preds = %29, %33
  %34 = phi %"struct.std::__1::__hash_node_base.441"* [ %36, %33 ], [ %31, %29 ]
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.441", %"struct.std::__1::__hash_node_base.441"* %34, i64 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.441"*, %"struct.std::__1::__hash_node_base.441"** %35, align 8
  %37 = bitcast %"struct.std::__1::__hash_node_base.441"* %34 to i8*
  tail call void @_ZdlPv(i8* %37) #10
  %38 = icmp eq %"struct.std::__1::__hash_node_base.441"* %36, null
  br i1 %38, label %39, label %33

39:                                               ; preds = %33, %29
  %40 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.441"**, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  store %"struct.std::__1::__hash_node_base.441"** null, %"struct.std::__1::__hash_node_base.441"*** %40, align 8
  %42 = icmp eq %"struct.std::__1::__hash_node_base.441"** %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.std::__1::__hash_node_base.441"** %41 to i8*
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %39, %43
  %46 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0
  %47 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %48 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.std::__1::__tree_node.1272"**
  %49 = load %"class.std::__1::__tree_node.1272"*, %"class.std::__1::__tree_node.1272"** %48, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %46, %"class.std::__1::__tree_node.1272"* %49) #11
  %50 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %51 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %50, align 8
  %52 = icmp eq %"struct.std::__1::__hash_node_base.408"* %51, null
  br i1 %52, label %59, label %53

53:                                               ; preds = %45, %53
  %54 = phi %"struct.std::__1::__hash_node_base.408"* [ %56, %53 ], [ %51, %45 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.408", %"struct.std::__1::__hash_node_base.408"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.408"*, %"struct.std::__1::__hash_node_base.408"** %55, align 8
  %57 = bitcast %"struct.std::__1::__hash_node_base.408"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #10
  %58 = icmp eq %"struct.std::__1::__hash_node_base.408"* %56, null
  br i1 %58, label %59, label %53

59:                                               ; preds = %53, %45
  %60 = getelementptr inbounds %"class.spvtools::opt::analysis::ConstantManager", %"class.spvtools::opt::analysis::ConstantManager"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load %"struct.std::__1::__hash_node_base.408"**, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  store %"struct.std::__1::__hash_node_base.408"** null, %"struct.std::__1::__hash_node_base.408"*** %60, align 8
  %62 = icmp eq %"struct.std::__1::__hash_node_base.408"** %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.std::__1::__hash_node_base.408"** %61 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %59, %63
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"*, %"class.std::__1::__tree_node.1272"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.1272"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.1272"* %1 to %"class.std::__1::__tree_node.1272"**
  %6 = load %"class.std::__1::__tree_node.1272"*, %"class.std::__1::__tree_node.1272"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1272"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.1272", %"class.std::__1::__tree_node.1272"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.1272"**
  %9 = load %"class.std::__1::__tree_node.1272"*, %"class.std::__1::__tree_node.1272"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIPKN8spvtools3opt8analysis8ConstantEjEENS_19__map_value_compareIS7_S8_NS_4lessIS7_EELb1EEENS_9allocatorIS8_EEE7destroyEPNS_11__tree_nodeIS8_PvEE(%"class.std::__1::__tree.427"* %0, %"class.std::__1::__tree_node.1272"* %9) #11
  %10 = bitcast %"class.std::__1::__tree_node.1272"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt11InstructionENS_9allocatorIS3_EEEC2ERKS6_(%"class.std::__1::vector.14"*, %"class.std::__1::vector.14"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.14"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #11
  %4 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"class.spvtools::opt::Instruction"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.14"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %42, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.14"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #12
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #10
  %18 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  %19 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"class.spvtools::opt::Instruction"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.14"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.spvtools::opt::Instruction"* %22, %"class.spvtools::opt::Instruction"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %1, i64 0, i32 0, i32 0
  %25 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %24, align 8
  %26 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %27 = bitcast %"class.spvtools::opt::Instruction"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"class.spvtools::opt::Instruction"* %25, %26
  br i1 %29, label %40, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"class.spvtools::opt::Instruction"*
  br label %32

32:                                               ; preds = %30, %32
  %33 = phi %"class.spvtools::opt::Instruction"* [ %35, %32 ], [ %25, %30 ]
  %34 = phi %"class.spvtools::opt::Instruction"* [ %36, %32 ], [ %31, %30 ]
  tail call void @_ZN8spvtools3opt11InstructionC2ERKS1_(%"class.spvtools::opt::Instruction"* %34, %"class.spvtools::opt::Instruction"* dereferenceable(112) %33) #11
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %33, i64 1
  %36 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 1
  %37 = icmp eq %"class.spvtools::opt::Instruction"* %35, %26
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = ptrtoint %"class.spvtools::opt::Instruction"* %36 to i64
  br label %40

40:                                               ; preds = %38, %16
  %41 = phi i64 [ %39, %38 ], [ %28, %16 ]
  store i64 %41, i64* %27, align 8
  br label %42

42:                                               ; preds = %2, %40
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSERKS2_(%"class.spvtools::utils::SmallVector"*, %"class.spvtools::utils::SmallVector"* dereferenceable(40)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %3, align 8
  %5 = icmp eq %"class.std::__1::vector.3"* %4, null
  %6 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0"* %6, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %7, align 8
  br i1 %5, label %54, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = icmp eq %"class.std::__1::vector.3"* %8, %4
  br i1 %12, label %107, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 0
  %15 = load i32*, i32** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %17 = load i32*, i32** %16, align 8
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"* nonnull %8, i32* %15, i32* %17) #11
  br label %107

18:                                               ; preds = %9
  %19 = tail call i8* @_Znwm(i64 24) #10
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #11
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %4, i64 0, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.3"* %4 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %51, label %28

28:                                               ; preds = %18
  %29 = icmp ugt i64 %26, 4611686018427387903
  br i1 %29, label %30, label %32

30:                                               ; preds = %28
  %31 = bitcast i8* %19 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %31) #12
  unreachable

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 %25) #10
  %34 = bitcast i8* %33 to i32*
  %35 = getelementptr inbounds i8, i8* %19, i64 8
  %36 = bitcast i8* %35 to i8**
  store i8* %33, i8** %36, align 8
  %37 = bitcast i8* %19 to i8**
  store i8* %33, i8** %37, align 8
  %38 = getelementptr inbounds i32, i32* %34, i64 %26
  %39 = getelementptr inbounds i8, i8* %19, i64 16
  %40 = bitcast i8* %39 to i32**
  store i32* %38, i32** %40, align 8
  %41 = bitcast i8* %35 to i64*
  %42 = ptrtoint i8* %33 to i64
  %43 = icmp sgt i64 %25, 0
  br i1 %43, label %44, label %49

44:                                               ; preds = %32
  %45 = lshr exact i64 %25, 2
  %46 = inttoptr i64 %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 4 %46, i64 %25, i1 false) #11
  %47 = getelementptr inbounds i32, i32* %34, i64 %45
  %48 = ptrtoint i32* %47 to i64
  br label %49

49:                                               ; preds = %44, %32
  %50 = phi i64 [ %48, %44 ], [ %42, %32 ]
  store i64 %50, i64* %41, align 8
  br label %51

51:                                               ; preds = %18, %49
  %52 = ptrtoint i8* %19 to i64
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %6 to i64*
  store i64 %52, i64* %53, align 8
  br label %107

54:                                               ; preds = %2
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %7, align 8
  %55 = icmp eq %"class.std::__1::vector.3"* %8, null
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = icmp eq i32* %58, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %56
  %61 = ptrtoint i32* %58 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %8, i64 0, i32 0, i32 1
  %63 = bitcast i32** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = bitcast i32* %58 to i8*
  tail call void @_ZdlPv(i8* %64) #10
  br label %65

65:                                               ; preds = %60, %56
  %66 = bitcast %"class.std::__1::vector.3"* %8 to i8*
  tail call void @_ZdlPv(i8* %66) #10
  br label %67

67:                                               ; preds = %54, %65
  %68 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 1
  %69 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %88, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  %74 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  br label %75

75:                                               ; preds = %72, %79
  %76 = phi i64 [ 0, %72 ], [ %85, %79 ]
  %77 = load i64, i64* %68, align 8
  %78 = icmp ult i64 %76, %77
  br i1 %78, label %79, label %88

79:                                               ; preds = %75
  %80 = load i32*, i32** %73, align 8
  %81 = getelementptr inbounds i32, i32* %80, i64 %76
  %82 = load i32, i32* %81, align 4
  %83 = load i32*, i32** %74, align 8
  %84 = getelementptr inbounds i32, i32* %83, i64 %76
  store i32 %82, i32* %84, align 4
  %85 = add nuw i64 %76, 1
  %86 = load i64, i64* %69, align 8
  %87 = icmp ult i64 %85, %86
  br i1 %87, label %75, label %88

88:                                               ; preds = %75, %79, %67
  %89 = phi i64 [ 0, %67 ], [ %85, %79 ], [ %76, %75 ]
  %90 = load i64, i64* %68, align 8
  %91 = icmp ult i64 %89, %90
  br i1 %91, label %92, label %105

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %0, i64 0, i32 2
  %94 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %1, i64 0, i32 2
  br label %95

95:                                               ; preds = %92, %95
  %96 = phi i64 [ %89, %92 ], [ %102, %95 ]
  %97 = load i32*, i32** %93, align 8
  %98 = getelementptr inbounds i32, i32* %97, i64 %96
  %99 = load i32*, i32** %94, align 8
  %100 = getelementptr inbounds i32, i32* %99, i64 %96
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %98, align 4
  %102 = add nuw i64 %96, 1
  %103 = load i64, i64* %68, align 8
  %104 = icmp ult i64 %102, %103
  br i1 %104, label %95, label %105

105:                                              ; preds = %95, %88
  %106 = phi i64 [ %90, %88 ], [ %103, %95 ]
  store i64 %106, i64* %69, align 8
  br label %107

107:                                              ; preds = %13, %11, %51, %105
  ret %"class.spvtools::utils::SmallVector"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE6assignIPjEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIjNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector.3"*, i32*, i32*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %2 to i64
  %5 = ptrtoint i32* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 2
  %8 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast i32** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.3"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 2
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to i32*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %19 = bitcast i32** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 2
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds i32, i32* %1, i64 %22
  %25 = select i1 %23, i32* %24, i32* %2
  %26 = ptrtoint i32* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 2
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #11
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 2
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast i32* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #11
  %42 = inttoptr i64 %35 to i32*
  %43 = getelementptr inbounds i32, i32* %42, i64 %39
  %44 = ptrtoint i32* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds i32, i32* %16, i64 %28
  store i32* %48, i32** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #10
  %55 = bitcast %"class.std::__1::vector.3"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #11
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 4611686018427387903
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #12
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 2
  %63 = icmp ult i64 %62, 2305843009213693951
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 1
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 4611686018427387903
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector.3"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #12
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 4611686018427387903, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 2
  %74 = tail call i8* @_Znwm(i64 %73) #10
  %75 = bitcast i8* %74 to i32*
  %76 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %0, i64 0, i32 0, i32 1
  %77 = bitcast i32** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector.3"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds i32, i32* %75, i64 %72
  store i32* %79, i32** %8, align 8
  %80 = bitcast i32** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 2
  %85 = bitcast i32* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #11
  %86 = getelementptr inbounds i32, i32* %75, i64 %84
  %87 = ptrtoint i32* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

declare %"class.spvtools::opt::BasicBlock"* @_ZNK8spvtools3opt13DominatorTree18ImmediateDominatorEPKNS0_10BasicBlockE(%"class.spvtools::opt::DominatorTree"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE24__emplace_back_slow_pathIJS3_EEEvDpOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt18InstructionBuilder14GetIntConstantIjEEPNS0_11InstructionET_b(%"class.spvtools::opt::InstructionBuilder"*, i32, i1 zeroext) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.spvtools::opt::analysis::Integer", align 8
  %5 = alloca %"class.std::__1::vector.3", align 8
  %6 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = zext i1 %2 to i8
  %8 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::vector.463"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #11
  %11 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 2
  store i32 2, i32* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis7IntegerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %12 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 1
  store i32 32, i32* %12, align 4
  %13 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 2
  store i8 %7, i8* %13, align 8
  %14 = getelementptr inbounds %"class.spvtools::opt::InstructionBuilder", %"class.spvtools::opt::InstructionBuilder"* %0, i64 0, i32 0
  %15 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %16 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 11
  %17 = load i32, i32* %16, align 8
  %18 = trunc i32 %17 to i16
  %19 = icmp slt i16 %18, 0
  br i1 %19, label %35, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 5
  %22 = tail call i8* @_Znwm(i64 240) #10
  %23 = bitcast i8* %22 to %"class.spvtools::opt::analysis::TypeManager"*
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %23, %"class.std::__1::function"* dereferenceable(32) %21, %"class.spvtools::opt::IRContext"* %15) #11
  %24 = ptrtoint i8* %22 to i64
  %25 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %26, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.480"* %25 to i64*
  store i64 %24, i64* %28, align 8
  %29 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %27, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  tail call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %27) #11
  %31 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %27 to i8*
  tail call void @_ZdlPv(i8* %31) #10
  br label %32

32:                                               ; preds = %30, %20
  %33 = load i32, i32* %16, align 8
  %34 = or i32 %33, 32768
  store i32 %34, i32* %16, align 8
  br label %35

35:                                               ; preds = %3, %32
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %15, i64 0, i32 20, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %36, align 8
  %38 = bitcast %"class.spvtools::opt::analysis::Integer"* %4 to %"class.spvtools::opt::analysis::Type"*
  %39 = call i32 @_ZN8spvtools3opt8analysis11TypeManager18GetTypeInstructionEPKNS1_4TypeE(%"class.spvtools::opt::analysis::TypeManager"* %37, %"class.spvtools::opt::analysis::Type"* nonnull %38) #11
  %40 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 11
  %42 = load i32, i32* %41, align 8
  %43 = trunc i32 %42 to i16
  %44 = icmp slt i16 %43, 0
  br i1 %44, label %60, label %45

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 5
  %47 = call i8* @_Znwm(i64 240) #10
  %48 = bitcast i8* %47 to %"class.spvtools::opt::analysis::TypeManager"*
  call void @_ZN8spvtools3opt8analysis11TypeManagerC1ERKNSt3__18functionIFv19spv_message_level_tPKcRK14spv_position_tS7_EEEPNS0_9IRContextE(%"class.spvtools::opt::analysis::TypeManager"* nonnull %48, %"class.std::__1::function"* dereferenceable(32) %46, %"class.spvtools::opt::IRContext"* %40) #11
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.480", %"class.std::__1::unique_ptr.480"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %51, align 8
  %53 = bitcast %"class.std::__1::unique_ptr.480"* %50 to i64*
  store i64 %49, i64* %53, align 8
  %54 = icmp eq %"class.spvtools::opt::analysis::TypeManager"* %52, null
  br i1 %54, label %57, label %55

55:                                               ; preds = %45
  call void @_ZN8spvtools3opt8analysis11TypeManagerD2Ev(%"class.spvtools::opt::analysis::TypeManager"* nonnull %52) #11
  %56 = bitcast %"class.spvtools::opt::analysis::TypeManager"* %52 to i8*
  call void @_ZdlPv(i8* %56) #10
  br label %57

57:                                               ; preds = %55, %45
  %58 = load i32, i32* %41, align 8
  %59 = or i32 %58, 32768
  store i32 %59, i32* %41, align 8
  br label %60

60:                                               ; preds = %35, %57
  %61 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %40, i64 0, i32 20, i32 0, i32 0, i32 0
  %62 = load %"class.spvtools::opt::analysis::TypeManager"*, %"class.spvtools::opt::analysis::TypeManager"** %61, align 8
  %63 = call %"class.spvtools::opt::analysis::Type"* @_ZNK8spvtools3opt8analysis11TypeManager7GetTypeEj(%"class.spvtools::opt::analysis::TypeManager"* %62, i32 %39) #11
  %64 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 11
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 16384
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %83

69:                                               ; preds = %60
  %70 = call i8* @_Znwm(i64 136) #10
  %71 = bitcast i8* %70 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %71, %"class.spvtools::opt::IRContext"* %64) #11
  %72 = ptrtoint i8* %70 to i64
  %73 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.400"* %73 to i64*
  store i64 %72, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %75) #11
  %79 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %75 to i8*
  call void @_ZdlPv(i8* %79) #10
  br label %80

80:                                               ; preds = %78, %69
  %81 = load i32, i32* %65, align 8
  %82 = or i32 %81, 16384
  store i32 %82, i32* %65, align 8
  br label %83

83:                                               ; preds = %60, %80
  %84 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %64, i64 0, i32 19, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %84, align 8
  %86 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #11
  %87 = call i8* @_Znwm(i64 4) #10
  %88 = bitcast i8* %87 to i32*
  %89 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 1
  %90 = bitcast %"class.std::__1::vector.3"* %5 to i8**
  store i8* %87, i8** %90, align 8
  %91 = getelementptr inbounds i8, i8* %87, i64 4
  %92 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast i32** %92 to i8**
  store i8* %91, i8** %93, align 8
  %94 = bitcast i32** %89 to i64*
  store i32 %1, i32* %88, align 4
  %95 = ptrtoint i8* %91 to i64
  store i64 %95, i64* %94, align 8
  %96 = call %"class.spvtools::opt::analysis::Constant"* @_ZN8spvtools3opt8analysis15ConstantManager11GetConstantEPKNS1_4TypeERKNSt3__16vectorIjNS6_9allocatorIjEEEE(%"class.spvtools::opt::analysis::ConstantManager"* %85, %"class.spvtools::opt::analysis::Type"* %63, %"class.std::__1::vector.3"* nonnull dereferenceable(24) %5) #11
  %97 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %5, i64 0, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = icmp eq i32* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %83
  %101 = ptrtoint i32* %98 to i64
  store i64 %101, i64* %94, align 8
  %102 = bitcast i32* %98 to i8*
  call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %83, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #11
  %104 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %14, align 8
  %105 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 11
  %106 = load i32, i32* %105, align 8
  %107 = and i32 %106, 16384
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %123

109:                                              ; preds = %103
  %110 = call i8* @_Znwm(i64 136) #10
  %111 = bitcast i8* %110 to %"class.spvtools::opt::analysis::ConstantManager"*
  call void @_ZN8spvtools3opt8analysis15ConstantManagerC1EPNS0_9IRContextE(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %111, %"class.spvtools::opt::IRContext"* %104) #11
  %112 = ptrtoint i8* %110 to i64
  %113 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.400", %"class.std::__1::unique_ptr.400"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %114, align 8
  %116 = bitcast %"class.std::__1::unique_ptr.400"* %113 to i64*
  store i64 %112, i64* %116, align 8
  %117 = icmp eq %"class.spvtools::opt::analysis::ConstantManager"* %115, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %109
  call void @_ZN8spvtools3opt8analysis15ConstantManagerD2Ev(%"class.spvtools::opt::analysis::ConstantManager"* nonnull %115) #11
  %119 = bitcast %"class.spvtools::opt::analysis::ConstantManager"* %115 to i8*
  call void @_ZdlPv(i8* %119) #10
  br label %120

120:                                              ; preds = %118, %109
  %121 = load i32, i32* %105, align 8
  %122 = or i32 %121, 16384
  store i32 %122, i32* %105, align 8
  br label %123

123:                                              ; preds = %103, %120
  %124 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %104, i64 0, i32 19, i32 0, i32 0, i32 0
  %125 = load %"class.spvtools::opt::analysis::ConstantManager"*, %"class.spvtools::opt::analysis::ConstantManager"** %124, align 8
  %126 = call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis15ConstantManager22GetDefiningInstructionEPKNS1_8ConstantEjPNS0_15InstructionList8iteratorE(%"class.spvtools::opt::analysis::ConstantManager"* %125, %"class.spvtools::opt::analysis::Constant"* %96, i32 0, %"class.spvtools::opt::InstructionList::iterator"* null) #11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %127 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %9, i64 0, i32 0, i32 0
  %128 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %127, align 8
  %129 = icmp eq %"class.std::__1::vector.3"* %128, null
  br i1 %129, label %153, label %130

130:                                              ; preds = %123
  %131 = bitcast %"class.std::__1::vector.3"* %128 to i8*
  %132 = getelementptr inbounds %"class.spvtools::opt::analysis::Integer", %"class.spvtools::opt::analysis::Integer"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  %133 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %132, align 8
  %134 = icmp eq %"class.std::__1::vector.3"* %133, %128
  br i1 %134, label %151, label %135

135:                                              ; preds = %130, %146
  %136 = phi %"class.std::__1::vector.3"* [ %137, %146 ], [ %133, %130 ]
  %137 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1
  %138 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %137, i64 0, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = icmp eq i32* %139, null
  br i1 %140, label %146, label %141

141:                                              ; preds = %135
  %142 = ptrtoint i32* %139 to i64
  %143 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %136, i64 -1, i32 0, i32 1
  %144 = bitcast i32** %143 to i64*
  store i64 %142, i64* %144, align 8
  %145 = bitcast i32* %139 to i8*
  call void @_ZdlPv(i8* %145) #10
  br label %146

146:                                              ; preds = %141, %135
  %147 = icmp eq %"class.std::__1::vector.3"* %137, %128
  br i1 %147, label %148, label %135

148:                                              ; preds = %146
  %149 = bitcast %"class.std::__1::vector.463"* %9 to i8**
  %150 = load i8*, i8** %149, align 8
  br label %151

151:                                              ; preds = %148, %130
  %152 = phi i8* [ %150, %148 ], [ %131, %130 ]
  store %"class.std::__1::vector.3"* %128, %"class.std::__1::vector.3"** %132, align 8
  call void @_ZdlPv(i8* %152) #10
  br label %153

153:                                              ; preds = %123, %151
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret %"class.spvtools::opt::Instruction"* %126
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt8analysis4TypeD2Ev(%"class.spvtools::opt::analysis::Type"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [61 x i8*] }, { [61 x i8*] }* @_ZTVN8spvtools3opt8analysis4TypeE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.std::__1::vector.463", %"class.std::__1::vector.463"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %4, align 8
  %6 = icmp eq %"class.std::__1::vector.3"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::vector.3"* %5 to i8*
  %9 = getelementptr inbounds %"class.spvtools::opt::analysis::Type", %"class.spvtools::opt::analysis::Type"* %0, i64 0, i32 1, i32 0, i32 1
  %10 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %9, align 8
  %11 = icmp eq %"class.std::__1::vector.3"* %10, %5
  br i1 %11, label %28, label %12

12:                                               ; preds = %7, %23
  %13 = phi %"class.std::__1::vector.3"* [ %14, %23 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1
  %15 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %14, i64 0, i32 0, i32 0
  %16 = load i32*, i32** %15, align 8
  %17 = icmp eq i32* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %12
  %19 = ptrtoint i32* %16 to i64
  %20 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %13, i64 -1, i32 0, i32 1
  %21 = bitcast i32** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast i32* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #10
  br label %23

23:                                               ; preds = %18, %12
  %24 = icmp eq %"class.std::__1::vector.3"* %14, %5
  br i1 %24, label %25, label %12

25:                                               ; preds = %23
  %26 = bitcast %"class.std::__1::vector.463"* %3 to i8**
  %27 = load i8*, i8** %26, align 8
  br label %28

28:                                               ; preds = %25, %7
  %29 = phi i8* [ %27, %25 ], [ %8, %7 ]
  store %"class.std::__1::vector.3"* %5, %"class.std::__1::vector.3"** %9, align 8
  tail call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %1, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"*) local_unnamed_addr #0 comdat align 2 {
  %2 = tail call i8* @_Znwm(i64 72) #10
  %3 = bitcast i8* %2 to %"class.spvtools::opt::StructuredCFGAnalysis"*
  tail call void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"* nonnull %3, %"class.spvtools::opt::IRContext"* %0) #11
  %4 = ptrtoint i8* %2 to i64
  %5 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 27
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.873", %"class.std::__1::unique_ptr.873"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr.873"* %5 to i64*
  store i64 %4, i64* %8, align 8
  %9 = icmp eq %"class.spvtools::opt::StructuredCFGAnalysis"* %7, null
  br i1 %9, label %37, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = icmp eq i64* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i64* %12 to i64
  %16 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %17 = bitcast i64** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i64* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %14, %10
  %20 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %20, align 8
  %22 = icmp eq %"struct.std::__1::__hash_node_base.881"* %21, null
  br i1 %22, label %29, label %23

23:                                               ; preds = %19, %23
  %24 = phi %"struct.std::__1::__hash_node_base.881"* [ %26, %23 ], [ %21, %19 ]
  %25 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %24, i64 0, i32 0
  %26 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %25, align 8
  %27 = bitcast %"struct.std::__1::__hash_node_base.881"* %24 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  %28 = icmp eq %"struct.std::__1::__hash_node_base.881"* %26, null
  br i1 %28, label %29, label %23

29:                                               ; preds = %23, %19
  %30 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  store %"struct.std::__1::__hash_node_base.881"** null, %"struct.std::__1::__hash_node_base.881"*** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.881"** %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"struct.std::__1::__hash_node_base.881"** %31 to i8*
  tail call void @_ZdlPv(i8* %34) #10
  br label %35

35:                                               ; preds = %33, %29
  %36 = bitcast %"class.spvtools::opt::StructuredCFGAnalysis"* %7 to i8*
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %35, %1
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %0, i64 0, i32 11
  %39 = load i32, i32* %38, align 8
  %40 = or i32 %39, 2048
  store i32 %40, i32* %38, align 8
  ret void
}

declare void @_ZN8spvtools3opt21StructuredCFGAnalysisC1EPNS0_9IRContextE(%"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::IRContext"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD2Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt7MemPassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base.254"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1, %6
  %7 = phi %"struct.std::__1::__hash_node_base.254"* [ %9, %6 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base.254", %"struct.std::__1::__hash_node_base.254"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base.254"*, %"struct.std::__1::__hash_node_base.254"** %8, align 8
  %10 = bitcast %"struct.std::__1::__hash_node_base.254"* %7 to i8*
  tail call void @_ZdlPv(i8* %10) #10
  %11 = icmp eq %"struct.std::__1::__hash_node_base.254"* %9, null
  br i1 %11, label %12, label %6

12:                                               ; preds = %6, %1
  %13 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"struct.std::__1::__hash_node_base.254"**, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  store %"struct.std::__1::__hash_node_base.254"** null, %"struct.std::__1::__hash_node_base.254"*** %13, align 8
  %15 = icmp eq %"struct.std::__1::__hash_node_base.254"** %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = bitcast %"struct.std::__1::__hash_node_base.254"** %14 to i8*
  tail call void @_ZdlPv(i8* %17) #10
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 0
  %20 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %19, align 8
  %21 = icmp eq %"struct.std::__1::__hash_node_base.915"* %20, null
  br i1 %21, label %28, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"struct.std::__1::__hash_node_base.915"* [ %25, %22 ], [ %20, %18 ]
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %23, i64 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %24, align 8
  %26 = bitcast %"struct.std::__1::__hash_node_base.915"* %23 to i8*
  tail call void @_ZdlPv(i8* %26) #10
  %27 = icmp eq %"struct.std::__1::__hash_node_base.915"* %25, null
  br i1 %27, label %28, label %22

28:                                               ; preds = %22, %18
  %29 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.915"** %30, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = bitcast %"struct.std::__1::__hash_node_base.915"** %30 to i8*
  tail call void @_ZdlPv(i8* %33) #10
  br label %34

34:                                               ; preds = %28, %32
  %35 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.915"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"struct.std::__1::__hash_node_base.915"* [ %41, %38 ], [ %36, %34 ]
  %40 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %39, i64 0, i32 0
  %41 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %40, align 8
  %42 = bitcast %"struct.std::__1::__hash_node_base.915"* %39 to i8*
  tail call void @_ZdlPv(i8* %42) #10
  %43 = icmp eq %"struct.std::__1::__hash_node_base.915"* %41, null
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %34
  %45 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %45, align 8
  %47 = icmp eq %"struct.std::__1::__hash_node_base.915"** %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = bitcast %"struct.std::__1::__hash_node_base.915"** %46 to i8*
  tail call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %44, %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %51 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %52 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %51, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %52, i64 0, i32 1
  %54 = load void (i8*)*, void (i8*)** %53, align 8
  %55 = icmp eq void (i8*)* %54, null
  br i1 %55, label %59, label %56

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.spvtools::opt::MemPass", %"class.spvtools::opt::MemPass"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void %54(i8* %58) #11
  br label %59

59:                                               ; preds = %50, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt7MemPassD0Ev(%"class.spvtools::opt::MemPass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN8spvtools3opt4Pass20GetPreservedAnalysesEv(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD2Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN8spvtools3opt4PassE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 2
  %4 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %4, i64 0, i32 1
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  %7 = icmp eq void (i8*)* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void %6(i8* %10) #11
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8spvtools3opt4PassD0Ev(%"class.spvtools::opt::Pass"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"*, %"struct.spvtools::opt::Operand"* dereferenceable(48)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.spvtools::opt::Operand"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #12
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.spvtools::opt::Operand"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #10
  %30 = bitcast i8* %29 to %"struct.spvtools::opt::Operand"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.spvtools::opt::Operand"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %32
  %36 = ptrtoint %"struct.spvtools::opt::Operand"* %35 to i64
  %37 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 0
  %39 = load i32, i32* %38, align 8
  store i32 %39, i32* %37, align 8
  %40 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %1, i64 0, i32 1
  %42 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %40, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 2
  %45 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 3, i64 0
  %46 = bitcast i32** %44 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %45, %"struct.std::__1::aligned_storage<4, 4>::type"** %46, align 8
  %47 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %33, i64 %9, i32 1, i32 4
  %48 = bitcast %"class.std::__1::unique_ptr.0"* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %40, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %41) #11
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %34, i64 1
  %51 = ptrtoint %"struct.spvtools::opt::Operand"* %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %53 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %52, align 8
  %54 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  %55 = icmp eq %"struct.spvtools::opt::Operand"* %54, %53
  br i1 %55, label %56, label %58

56:                                               ; preds = %31
  %57 = ptrtoint %"struct.spvtools::opt::Operand"* %53 to i64
  br label %80

58:                                               ; preds = %31, %58
  %59 = phi %"struct.spvtools::opt::Operand"* [ %75, %58 ], [ %34, %31 ]
  %60 = phi %"struct.spvtools::opt::Operand"* [ %61, %58 ], [ %54, %31 ]
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 0
  %63 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %61, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  store i32 %64, i32* %62, align 8
  %65 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1
  %66 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %60, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %65, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 1
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 2
  %70 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 3, i64 0
  %71 = bitcast i32** %69 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %70, %"struct.std::__1::aligned_storage<4, 4>::type"** %71, align 8
  %72 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1, i32 1, i32 4
  %73 = bitcast %"class.std::__1::unique_ptr.0"* %72 to i64*
  store i64 0, i64* %73, align 8
  %74 = tail call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %65, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %66) #11
  %75 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %59, i64 -1
  %76 = icmp eq %"struct.spvtools::opt::Operand"* %61, %53
  br i1 %76, label %77, label %58

77:                                               ; preds = %58
  %78 = load i64, i64* %6, align 8
  %79 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %3, align 8
  br label %80

80:                                               ; preds = %56, %77
  %81 = phi %"struct.spvtools::opt::Operand"* [ %53, %56 ], [ %79, %77 ]
  %82 = phi %"struct.spvtools::opt::Operand"* [ %34, %56 ], [ %75, %77 ]
  %83 = phi i64 [ %57, %56 ], [ %78, %77 ]
  %84 = ptrtoint %"struct.spvtools::opt::Operand"* %82 to i64
  store i64 %84, i64* %6, align 8
  store i64 %51, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %85 = inttoptr i64 %83 to %"struct.spvtools::opt::Operand"*
  %86 = icmp eq %"struct.spvtools::opt::Operand"* %81, %85
  br i1 %86, label %107, label %87

87:                                               ; preds = %80, %105
  %88 = phi %"struct.spvtools::opt::Operand"* [ %89, %105 ], [ %81, %80 ]
  %89 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1
  %90 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %90, align 8
  %91 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %88, i64 -1, i32 1, i32 4, i32 0, i32 0, i32 0
  %92 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %91, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %91, align 8
  %93 = icmp eq %"class.std::__1::vector.3"* %92, null
  br i1 %93, label %105, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  %97 = icmp eq i32* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %94
  %99 = ptrtoint i32* %96 to i64
  %100 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %92, i64 0, i32 0, i32 1
  %101 = bitcast i32** %100 to i64*
  store i64 %99, i64* %101, align 8
  %102 = bitcast i32* %96 to i8*
  tail call void @_ZdlPv(i8* %102) #10
  br label %103

103:                                              ; preds = %98, %94
  %104 = bitcast %"class.std::__1::vector.3"* %92 to i8*
  tail call void @_ZdlPv(i8* %104) #10
  br label %105

105:                                              ; preds = %103, %87
  %106 = icmp eq %"struct.spvtools::opt::Operand"* %89, %85
  br i1 %106, label %107, label %87

107:                                              ; preds = %105, %80
  %108 = icmp eq i64 %83, 0
  br i1 %108, label %111, label %109

109:                                              ; preds = %107
  %110 = inttoptr i64 %83 to i8*
  tail call void @_ZdlPv(i8* %110) #10
  br label %111

111:                                              ; preds = %107, %109
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"*, %"class.spvtools::opt::BasicBlock"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.spvtools::opt::BasicBlock"* %1, null
  br i1 %3, label %82, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools3opt15InstructionListE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 0, i32 3
  %9 = load i8, i8* %8, align 8, !range !7
  %10 = icmp ne i8 %9, 0
  %11 = icmp eq %"class.spvtools::opt::Instruction"* %7, null
  %12 = or i1 %11, %10
  br i1 %12, label %40, label %13

13:                                               ; preds = %4, %13
  %14 = phi %"class.spvtools::opt::Instruction"* [ %34, %13 ], [ %7, %4 ]
  %15 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 2
  %16 = bitcast %"class.spvtools::opt::Instruction"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %14, i64 0, i32 0, i32 1
  %19 = bitcast %"class.spvtools::opt::Instruction"** %18 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %20 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %19, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %20, i64 0, i32 2
  %22 = bitcast %"class.spvtools::opt::Instruction"** %21 to i64*
  store i64 %17, i64* %22, align 8
  %23 = bitcast %"class.spvtools::opt::Instruction"** %18 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::opt::Instruction"** %15 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %26 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %25, align 8
  %27 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %26, i64 0, i32 1
  %28 = bitcast %"class.spvtools::opt::Instruction"** %27 to i64*
  store i64 %24, i64* %28, align 8
  %29 = bitcast %"class.spvtools::opt::Instruction"** %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #11
  %30 = bitcast %"class.spvtools::opt::Instruction"* %14 to void (%"class.spvtools::opt::Instruction"*)***
  %31 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %31, i64 1
  %33 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %32, align 8
  tail call void %33(%"class.spvtools::opt::Instruction"* nonnull %14) #11
  %34 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %35 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %34, i64 0, i32 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !7
  %37 = icmp ne i8 %36, 0
  %38 = icmp eq %"class.spvtools::opt::Instruction"* %34, null
  %39 = or i1 %38, %37
  br i1 %39, label %40, label %13

40:                                               ; preds = %13, %4
  %41 = phi %"class.spvtools::opt::Instruction"* [ %7, %4 ], [ %34, %13 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils13IntrusiveListINS_3opt11InstructionEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %42 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %41, i64 0, i32 0, i32 3
  %43 = load i8, i8* %42, align 8, !range !7
  %44 = icmp ne i8 %43, 0
  %45 = icmp eq %"class.spvtools::opt::Instruction"* %41, null
  %46 = or i1 %45, %44
  br i1 %46, label %70, label %47

47:                                               ; preds = %40, %47
  %48 = phi %"class.spvtools::opt::Instruction"* [ %64, %47 ], [ %41, %40 ]
  %49 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 2
  %50 = bitcast %"class.spvtools::opt::Instruction"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %48, i64 0, i32 0, i32 1
  %53 = bitcast %"class.spvtools::opt::Instruction"** %52 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %54 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %53, align 8
  %55 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %54, i64 0, i32 2
  %56 = bitcast %"class.spvtools::opt::Instruction"** %55 to i64*
  store i64 %51, i64* %56, align 8
  %57 = bitcast %"class.spvtools::opt::Instruction"** %52 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.spvtools::opt::Instruction"** %49 to %"class.spvtools::utils::IntrusiveNodeBase"**
  %60 = load %"class.spvtools::utils::IntrusiveNodeBase"*, %"class.spvtools::utils::IntrusiveNodeBase"** %59, align 8
  %61 = getelementptr inbounds %"class.spvtools::utils::IntrusiveNodeBase", %"class.spvtools::utils::IntrusiveNodeBase"* %60, i64 0, i32 1
  %62 = bitcast %"class.spvtools::opt::Instruction"** %61 to i64*
  store i64 %58, i64* %62, align 8
  %63 = bitcast %"class.spvtools::opt::Instruction"** %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #11
  %64 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %65 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %64, i64 0, i32 0, i32 3
  %66 = load i8, i8* %65, align 8, !range !7
  %67 = icmp ne i8 %66, 0
  %68 = icmp eq %"class.spvtools::opt::Instruction"* %64, null
  %69 = or i1 %68, %67
  br i1 %69, label %70, label %47

70:                                               ; preds = %47, %40
  %71 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 2, i32 0, i32 1
  tail call void @_ZN8spvtools3opt11InstructionD2Ev(%"class.spvtools::opt::Instruction"* %71) #11
  %72 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %72, align 8
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %72, align 8
  %74 = icmp eq %"class.spvtools::opt::Instruction"* %73, null
  br i1 %74, label %80, label %75

75:                                               ; preds = %70
  %76 = bitcast %"class.spvtools::opt::Instruction"* %73 to void (%"class.spvtools::opt::Instruction"*)***
  %77 = load void (%"class.spvtools::opt::Instruction"*)**, void (%"class.spvtools::opt::Instruction"*)*** %76, align 8
  %78 = getelementptr inbounds void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %77, i64 1
  %79 = load void (%"class.spvtools::opt::Instruction"*)*, void (%"class.spvtools::opt::Instruction"*)** %78, align 8
  tail call void %79(%"class.spvtools::opt::Instruction"* nonnull %73) #11
  br label %80

80:                                               ; preds = %70, %75
  %81 = bitcast %"class.spvtools::opt::BasicBlock"* %1 to i8*
  tail call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %80, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::unique_ptr.40"* @_ZNSt3__16vectorINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE6insertENS_11__wrap_iterIPKS7_EEOS7_(%"class.std::__1::vector.38"*, %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::unique_ptr.40"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1303", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %9, align 8
  %11 = icmp ult %"class.std::__1::unique_ptr.40"* %8, %10
  %12 = ptrtoint %"class.std::__1::unique_ptr.40"* %8 to i64
  %13 = ptrtoint %"class.std::__1::unique_ptr.40"* %10 to i64
  br i1 %11, label %14, label %144

14:                                               ; preds = %3
  %15 = icmp eq %"class.std::__1::unique_ptr.40"* %8, %1
  br i1 %15, label %16, label %24

16:                                               ; preds = %14
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %17, align 8
  %20 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %22 = ptrtoint %"class.std::__1::unique_ptr.40"* %21 to i64
  %23 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  store i64 %22, i64* %23, align 8
  br label %373

24:                                               ; preds = %14
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 1
  %26 = ptrtoint %"class.std::__1::unique_ptr.40"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 %28
  %30 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %31 = icmp ult %"class.std::__1::unique_ptr.40"* %29, %8
  br i1 %31, label %32, label %63

32:                                               ; preds = %24
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %8, i64 %33, i32 0, i32 0, i32 0
  %35 = bitcast %"class.spvtools::opt::BasicBlock"** %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %55, label %43

43:                                               ; preds = %32, %43
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %52, %43 ], [ %8, %32 ]
  %45 = phi %"class.std::__1::unique_ptr.40"* [ %51, %43 ], [ %29, %32 ]
  %46 = phi i64 [ %53, %43 ], [ %41, %32 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::unique_ptr.40"* %45 to i64*
  %49 = load i64, i64* %48, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %47, align 8
  %50 = bitcast %"class.std::__1::unique_ptr.40"* %44 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %45, i64 1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %44, i64 1
  %53 = add i64 %46, -1
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %43, !llvm.loop !169

55:                                               ; preds = %43, %32
  %56 = phi %"class.std::__1::unique_ptr.40"* [ %8, %32 ], [ %52, %43 ]
  %57 = phi %"class.std::__1::unique_ptr.40"* [ %29, %32 ], [ %51, %43 ]
  %58 = phi %"class.std::__1::unique_ptr.40"* [ undef, %32 ], [ %52, %43 ]
  %59 = icmp ult i8* %37, inttoptr (i64 56 to i8*)
  br i1 %59, label %60, label %82

60:                                               ; preds = %82, %55
  %61 = phi %"class.std::__1::unique_ptr.40"* [ %58, %55 ], [ %132, %82 ]
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  br label %63

63:                                               ; preds = %60, %24
  %64 = phi i64 [ %62, %60 ], [ %12, %24 ]
  store i64 %64, i64* %30, align 8
  %65 = icmp eq i64 %27, 0
  br i1 %65, label %134, label %66

66:                                               ; preds = %63, %80
  %67 = phi %"class.std::__1::unique_ptr.40"* [ %70, %80 ], [ %8, %63 ]
  %68 = phi %"class.std::__1::unique_ptr.40"* [ %69, %80 ], [ %29, %63 ]
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %68, i64 -1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %67, i64 -1
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %69, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr.40"* %69 to i64*
  %73 = load i64, i64* %72, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %71, align 8
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %70, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %74, align 8
  %76 = bitcast %"class.std::__1::unique_ptr.40"* %70 to i64*
  store i64 %73, i64* %76, align 8
  %77 = icmp eq %"class.spvtools::opt::BasicBlock"* %75, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %66
  %79 = bitcast %"class.std::__1::unique_ptr.40"* %70 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %79, %"class.spvtools::opt::BasicBlock"* nonnull %75) #11
  br label %80

80:                                               ; preds = %78, %66
  %81 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %1
  br i1 %81, label %134, label %66

82:                                               ; preds = %55, %82
  %83 = phi %"class.std::__1::unique_ptr.40"* [ %132, %82 ], [ %56, %55 ]
  %84 = phi %"class.std::__1::unique_ptr.40"* [ %131, %82 ], [ %57, %55 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = bitcast %"class.std::__1::unique_ptr.40"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %85, align 8
  %88 = bitcast %"class.std::__1::unique_ptr.40"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 1
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %89, i64 0, i32 0, i32 0, i32 0
  %92 = bitcast %"class.std::__1::unique_ptr.40"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %91, align 8
  %94 = bitcast %"class.std::__1::unique_ptr.40"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 2
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %95, i64 0, i32 0, i32 0, i32 0
  %98 = bitcast %"class.std::__1::unique_ptr.40"* %95 to i64*
  %99 = load i64, i64* %98, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %97, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.40"* %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 3
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %104 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %105 = load i64, i64* %104, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %103, align 8
  %106 = bitcast %"class.std::__1::unique_ptr.40"* %102 to i64*
  store i64 %105, i64* %106, align 8
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 4
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %111 = load i64, i64* %110, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %109, align 8
  %112 = bitcast %"class.std::__1::unique_ptr.40"* %108 to i64*
  store i64 %111, i64* %112, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 5
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %116 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %117 = load i64, i64* %116, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %115, align 8
  %118 = bitcast %"class.std::__1::unique_ptr.40"* %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 6
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %124 = bitcast %"class.std::__1::unique_ptr.40"* %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 7
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %128 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %129 = load i64, i64* %128, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %127, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.40"* %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %84, i64 8
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %83, i64 8
  %133 = icmp ult %"class.std::__1::unique_ptr.40"* %131, %8
  br i1 %133, label %82, label %60

134:                                              ; preds = %80, %63
  %135 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %2, i64 0, i32 0, i32 0, i32 0
  %136 = bitcast %"class.std::__1::unique_ptr.40"* %2 to i64*
  %137 = load i64, i64* %136, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %135, align 8
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %139 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %140 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  store i64 %137, i64* %140, align 8
  %141 = icmp eq %"class.spvtools::opt::BasicBlock"* %139, null
  br i1 %141, label %373, label %142

142:                                              ; preds = %134
  %143 = bitcast %"class.std::__1::unique_ptr.40"* %1 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %143, %"class.spvtools::opt::BasicBlock"* nonnull %139) #11
  br label %373

144:                                              ; preds = %3
  %145 = getelementptr inbounds %"class.std::__1::vector.38", %"class.std::__1::vector.38"* %0, i64 0, i32 0, i32 2
  %146 = bitcast %"struct.std::__1::__split_buffer.1303"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #11
  %147 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %5, i64 0, i32 0
  %148 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %5, i64 0, i32 1
  %149 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %5, i64 0, i32 2
  %150 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %5, i64 0, i32 3, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %5, i64 0, i32 3, i32 1, i32 0
  %152 = bitcast %"class.std::__1::unique_ptr.40"** %7 to i64*
  %153 = bitcast %"class.std::__1::vector.38"* %0 to i64*
  %154 = bitcast %"struct.std::__1::__split_buffer.1303"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 -86, i64 40, i1 false)
  %155 = load i64, i64* %153, align 8
  %156 = sub i64 %12, %155
  %157 = ashr exact i64 %156, 3
  %158 = add nsw i64 %157, 1
  %159 = icmp ugt i64 %158, 2305843009213693951
  br i1 %159, label %160, label %162

160:                                              ; preds = %144
  %161 = bitcast %"class.std::__1::vector.38"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %161) #12
  unreachable

162:                                              ; preds = %144
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %9 to i64*
  %164 = sub i64 %13, %155
  %165 = ashr exact i64 %164, 3
  %166 = icmp ult i64 %165, 1152921504606846975
  br i1 %166, label %171, label %167

167:                                              ; preds = %162
  %168 = sub i64 %4, %155
  %169 = ashr exact i64 %168, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %170 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %170, align 8
  br label %182

171:                                              ; preds = %162
  %172 = ashr exact i64 %164, 2
  %173 = icmp ult i64 %172, %158
  %174 = select i1 %173, i64 %158, i64 %172
  %175 = sub i64 %4, %155
  %176 = ashr exact i64 %175, 3
  store %"class.std::__1::unique_ptr.40"* null, %"class.std::__1::unique_ptr.40"** %150, align 8
  %177 = bitcast %"class.std::__1::allocator.49"** %151 to %"class.std::__1::__compressed_pair.46"**
  store %"class.std::__1::__compressed_pair.46"* %145, %"class.std::__1::__compressed_pair.46"** %177, align 8
  %178 = icmp eq i64 %174, 0
  br i1 %178, label %188, label %179

179:                                              ; preds = %171
  %180 = icmp ugt i64 %174, 2305843009213693951
  br i1 %180, label %181, label %182

181:                                              ; preds = %179
  tail call void @abort() #12
  unreachable

182:                                              ; preds = %167, %179
  %183 = phi i64 [ 2305843009213693951, %167 ], [ %174, %179 ]
  %184 = phi i64 [ %169, %167 ], [ %176, %179 ]
  %185 = shl i64 %183, 3
  %186 = tail call i8* @_Znwm(i64 %185) #10
  %187 = bitcast i8* %186 to %"class.std::__1::unique_ptr.40"*
  br label %188

188:                                              ; preds = %171, %182
  %189 = phi i64 [ %184, %182 ], [ %176, %171 ]
  %190 = phi i64 [ %183, %182 ], [ 0, %171 ]
  %191 = phi %"class.std::__1::unique_ptr.40"* [ %187, %182 ], [ null, %171 ]
  store %"class.std::__1::unique_ptr.40"* %191, %"class.std::__1::unique_ptr.40"** %147, align 8
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %189
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %149, align 8
  store %"class.std::__1::unique_ptr.40"* %192, %"class.std::__1::unique_ptr.40"** %148, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %191, i64 %190
  store %"class.std::__1::unique_ptr.40"* %193, %"class.std::__1::unique_ptr.40"** %150, align 8
  call void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1303"* nonnull %5, %"class.std::__1::unique_ptr.40"* dereferenceable(8) %2)
  %194 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %195 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %6, align 8
  %196 = icmp eq %"class.std::__1::unique_ptr.40"* %195, %1
  br i1 %196, label %261, label %197

197:                                              ; preds = %188
  %198 = ptrtoint %"class.std::__1::unique_ptr.40"* %195 to i64
  %199 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 -1, i32 0, i32 0, i32 0
  %200 = ptrtoint %"class.spvtools::opt::BasicBlock"** %199 to i64
  %201 = sub i64 %200, %198
  %202 = lshr i64 %201, 3
  %203 = add nuw nsw i64 %202, 1
  %204 = and i64 %203, 3
  %205 = icmp eq i64 %204, 0
  br i1 %205, label %220, label %206

206:                                              ; preds = %197, %206
  %207 = phi %"class.std::__1::unique_ptr.40"* [ %217, %206 ], [ %194, %197 ]
  %208 = phi %"class.std::__1::unique_ptr.40"* [ %211, %206 ], [ %1, %197 ]
  %209 = phi i64 [ %218, %206 ], [ %204, %197 ]
  %210 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %207, i64 -1
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %208, i64 -1
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %211, i64 0, i32 0, i32 0, i32 0
  %213 = bitcast %"class.std::__1::unique_ptr.40"* %211 to i64*
  %214 = load i64, i64* %213, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %212, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.40"* %210 to i64*
  store i64 %214, i64* %215, align 8
  %216 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %216, i64 -1
  store %"class.std::__1::unique_ptr.40"* %217, %"class.std::__1::unique_ptr.40"** %148, align 8
  %218 = add i64 %209, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %206, !llvm.loop !170

220:                                              ; preds = %206, %197
  %221 = phi %"class.std::__1::unique_ptr.40"* [ undef, %197 ], [ %217, %206 ]
  %222 = phi %"class.std::__1::unique_ptr.40"* [ %194, %197 ], [ %217, %206 ]
  %223 = phi %"class.std::__1::unique_ptr.40"* [ %1, %197 ], [ %211, %206 ]
  %224 = icmp ult i64 %201, 24
  br i1 %224, label %261, label %225

225:                                              ; preds = %220, %225
  %226 = phi %"class.std::__1::unique_ptr.40"* [ %259, %225 ], [ %222, %220 ]
  %227 = phi %"class.std::__1::unique_ptr.40"* [ %253, %225 ], [ %223, %220 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %226, i64 -1
  %229 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -1
  %230 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %229, i64 0, i32 0, i32 0, i32 0
  %231 = bitcast %"class.std::__1::unique_ptr.40"* %229 to i64*
  %232 = load i64, i64* %231, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %230, align 8
  %233 = bitcast %"class.std::__1::unique_ptr.40"* %228 to i64*
  store i64 %232, i64* %233, align 8
  %234 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -1
  store %"class.std::__1::unique_ptr.40"* %235, %"class.std::__1::unique_ptr.40"** %148, align 8
  %236 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %234, i64 -2
  %237 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -2
  %238 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %237, i64 0, i32 0, i32 0, i32 0
  %239 = bitcast %"class.std::__1::unique_ptr.40"* %237 to i64*
  %240 = load i64, i64* %239, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %238, align 8
  %241 = bitcast %"class.std::__1::unique_ptr.40"* %236 to i64*
  store i64 %240, i64* %241, align 8
  %242 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -1
  store %"class.std::__1::unique_ptr.40"* %243, %"class.std::__1::unique_ptr.40"** %148, align 8
  %244 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %242, i64 -2
  %245 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -3
  %246 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %245, i64 0, i32 0, i32 0, i32 0
  %247 = bitcast %"class.std::__1::unique_ptr.40"* %245 to i64*
  %248 = load i64, i64* %247, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %246, align 8
  %249 = bitcast %"class.std::__1::unique_ptr.40"* %244 to i64*
  store i64 %248, i64* %249, align 8
  %250 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -1
  store %"class.std::__1::unique_ptr.40"* %251, %"class.std::__1::unique_ptr.40"** %148, align 8
  %252 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %250, i64 -2
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %227, i64 -4
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = bitcast %"class.std::__1::unique_ptr.40"* %253 to i64*
  %256 = load i64, i64* %255, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %254, align 8
  %257 = bitcast %"class.std::__1::unique_ptr.40"* %252 to i64*
  store i64 %256, i64* %257, align 8
  %258 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %148, align 8
  %259 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %258, i64 -1
  store %"class.std::__1::unique_ptr.40"* %259, %"class.std::__1::unique_ptr.40"** %148, align 8
  %260 = icmp eq %"class.std::__1::unique_ptr.40"* %253, %195
  br i1 %260, label %261, label %225

261:                                              ; preds = %220, %225, %188
  %262 = phi %"class.std::__1::unique_ptr.40"* [ %194, %188 ], [ %221, %220 ], [ %259, %225 ]
  %263 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %7, align 8
  %264 = icmp eq %"class.std::__1::unique_ptr.40"* %263, %1
  br i1 %264, label %265, label %271

265:                                              ; preds = %261
  %266 = ptrtoint %"class.std::__1::unique_ptr.40"* %263 to i64
  %267 = ptrtoint %"class.std::__1::unique_ptr.40"* %262 to i64
  %268 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %269 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  %270 = load i64, i64* %269, align 8
  br label %340

271:                                              ; preds = %261
  %272 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64**
  %273 = load i64*, i64** %272, align 8
  %274 = getelementptr %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %263, i64 -1, i32 0, i32 0, i32 0
  %275 = ptrtoint %"class.spvtools::opt::BasicBlock"** %274 to i64
  %276 = sub i64 %275, %4
  %277 = lshr i64 %276, 3
  %278 = add nuw nsw i64 %277, 1
  %279 = and i64 %278, 3
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %296, label %281

281:                                              ; preds = %271, %281
  %282 = phi i64* [ %291, %281 ], [ %273, %271 ]
  %283 = phi %"class.std::__1::unique_ptr.40"* [ %288, %281 ], [ %1, %271 ]
  %284 = phi i64 [ %292, %281 ], [ %279, %271 ]
  %285 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 0, i32 0, i32 0, i32 0
  %286 = bitcast %"class.std::__1::unique_ptr.40"* %283 to i64*
  %287 = load i64, i64* %286, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %285, align 8
  store i64 %287, i64* %282, align 8
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %283, i64 1
  %289 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %290 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %289, i64 1
  store %"class.std::__1::unique_ptr.40"* %290, %"class.std::__1::unique_ptr.40"** %149, align 8
  %291 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  %292 = add i64 %284, -1
  %293 = icmp eq i64 %292, 0
  br i1 %293, label %294, label %281, !llvm.loop !171

294:                                              ; preds = %281
  %295 = bitcast %"class.std::__1::unique_ptr.40"* %290 to i64*
  br label %296

296:                                              ; preds = %271, %294
  %297 = phi %"class.std::__1::unique_ptr.40"* [ undef, %271 ], [ %290, %294 ]
  %298 = phi i64* [ %273, %271 ], [ %295, %294 ]
  %299 = phi %"class.std::__1::unique_ptr.40"* [ %1, %271 ], [ %288, %294 ]
  %300 = icmp ult i64 %276, 24
  br i1 %300, label %333, label %301

301:                                              ; preds = %296, %301
  %302 = phi i64* [ %332, %301 ], [ %298, %296 ]
  %303 = phi %"class.std::__1::unique_ptr.40"* [ %328, %301 ], [ %299, %296 ]
  %304 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 0, i32 0, i32 0, i32 0
  %305 = bitcast %"class.std::__1::unique_ptr.40"* %303 to i64*
  %306 = load i64, i64* %305, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %304, align 8
  store i64 %306, i64* %302, align 8
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 1
  %308 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %309 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %308, i64 1
  store %"class.std::__1::unique_ptr.40"* %309, %"class.std::__1::unique_ptr.40"** %149, align 8
  %310 = bitcast %"class.std::__1::unique_ptr.40"* %309 to i64*
  %311 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %307, i64 0, i32 0, i32 0, i32 0
  %312 = bitcast %"class.std::__1::unique_ptr.40"* %307 to i64*
  %313 = load i64, i64* %312, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %311, align 8
  store i64 %313, i64* %310, align 8
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 2
  %315 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %315, i64 1
  store %"class.std::__1::unique_ptr.40"* %316, %"class.std::__1::unique_ptr.40"** %149, align 8
  %317 = bitcast %"class.std::__1::unique_ptr.40"* %316 to i64*
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %314, i64 0, i32 0, i32 0, i32 0
  %319 = bitcast %"class.std::__1::unique_ptr.40"* %314 to i64*
  %320 = load i64, i64* %319, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %318, align 8
  store i64 %320, i64* %317, align 8
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 3
  %322 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %323 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %322, i64 1
  store %"class.std::__1::unique_ptr.40"* %323, %"class.std::__1::unique_ptr.40"** %149, align 8
  %324 = bitcast %"class.std::__1::unique_ptr.40"* %323 to i64*
  %325 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %321, i64 0, i32 0, i32 0, i32 0
  %326 = bitcast %"class.std::__1::unique_ptr.40"* %321 to i64*
  %327 = load i64, i64* %326, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %325, align 8
  store i64 %327, i64* %324, align 8
  %328 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %303, i64 4
  %329 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %330 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %329, i64 1
  store %"class.std::__1::unique_ptr.40"* %330, %"class.std::__1::unique_ptr.40"** %149, align 8
  %331 = icmp eq %"class.std::__1::unique_ptr.40"* %328, %263
  %332 = bitcast %"class.std::__1::unique_ptr.40"* %330 to i64*
  br i1 %331, label %333, label %301

333:                                              ; preds = %301, %296
  %334 = phi %"class.std::__1::unique_ptr.40"* [ %297, %296 ], [ %330, %301 ]
  %335 = ptrtoint %"class.std::__1::unique_ptr.40"* %334 to i64
  %336 = bitcast %"class.std::__1::unique_ptr.40"** %148 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = load i64, i64* %152, align 8
  %339 = bitcast %"class.std::__1::unique_ptr.40"** %149 to i64*
  br label %340

340:                                              ; preds = %265, %333
  %341 = phi i64* [ %269, %265 ], [ %339, %333 ]
  %342 = phi i64 [ %270, %265 ], [ %335, %333 ]
  %343 = phi i64 [ %266, %265 ], [ %338, %333 ]
  %344 = phi i64* [ %268, %265 ], [ %336, %333 ]
  %345 = phi i64 [ %267, %265 ], [ %337, %333 ]
  %346 = load i64, i64* %153, align 8
  store i64 %345, i64* %153, align 8
  store i64 %346, i64* %344, align 8
  store i64 %342, i64* %152, align 8
  store i64 %343, i64* %341, align 8
  %347 = load i64, i64* %163, align 8
  %348 = bitcast %"class.std::__1::unique_ptr.40"** %150 to i64*
  %349 = load i64, i64* %348, align 8
  store i64 %349, i64* %163, align 8
  store i64 %347, i64* %348, align 8
  %350 = bitcast %"struct.std::__1::__split_buffer.1303"* %5 to i64*
  store i64 %346, i64* %350, align 8
  %351 = inttoptr i64 %346 to %"class.std::__1::unique_ptr.40"*
  %352 = inttoptr i64 %343 to %"class.std::__1::unique_ptr.40"*
  %353 = icmp eq %"class.std::__1::unique_ptr.40"* %352, %351
  br i1 %353, label %367, label %354

354:                                              ; preds = %340, %362
  %355 = phi %"class.std::__1::unique_ptr.40"* [ %363, %362 ], [ %352, %340 ]
  %356 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %355, i64 -1
  store %"class.std::__1::unique_ptr.40"* %356, %"class.std::__1::unique_ptr.40"** %149, align 8
  %357 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %356, i64 0, i32 0, i32 0, i32 0
  %358 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %357, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %357, align 8
  %359 = icmp eq %"class.spvtools::opt::BasicBlock"* %358, null
  br i1 %359, label %362, label %360

360:                                              ; preds = %354
  %361 = bitcast %"class.std::__1::unique_ptr.40"* %356 to %"struct.std::__1::default_delete.44"*
  call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %361, %"class.spvtools::opt::BasicBlock"* nonnull %358) #11
  br label %362

362:                                              ; preds = %360, %354
  %363 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %149, align 8
  %364 = icmp eq %"class.std::__1::unique_ptr.40"* %363, %351
  br i1 %364, label %365, label %354

365:                                              ; preds = %362
  %366 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %147, align 8
  br label %367

367:                                              ; preds = %365, %340
  %368 = phi %"class.std::__1::unique_ptr.40"* [ %366, %365 ], [ %351, %340 ]
  %369 = icmp eq %"class.std::__1::unique_ptr.40"* %368, null
  br i1 %369, label %372, label %370

370:                                              ; preds = %367
  %371 = bitcast %"class.std::__1::unique_ptr.40"* %368 to i8*
  call void @_ZdlPv(i8* %371) #10
  br label %372

372:                                              ; preds = %367, %370
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #11
  br label %373

373:                                              ; preds = %142, %134, %16, %372
  %374 = phi %"class.std::__1::unique_ptr.40"* [ %1, %16 ], [ %194, %372 ], [ %1, %134 ], [ %1, %142 ]
  ret %"class.std::__1::unique_ptr.40"* %374
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_10unique_ptrIN8spvtools3opt10BasicBlockENS_14default_deleteIS4_EEEERNS_9allocatorIS7_EEE9push_backEOS7_(%"struct.std::__1::__split_buffer.1303"*, %"class.std::__1::unique_ptr.40"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.40"* %4, %6
  %8 = ptrtoint %"class.std::__1::unique_ptr.40"* %6 to i64
  br i1 %7, label %9, label %179

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1303", %"struct.std::__1::__split_buffer.1303"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %14 = icmp ugt %"class.std::__1::unique_ptr.40"* %11, %13
  %15 = ptrtoint %"class.std::__1::unique_ptr.40"* %13 to i64
  br i1 %14, label %16, label %46

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = ashr exact i64 %18, 3
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::unique_ptr.40"* %11, %4
  br i1 %23, label %42, label %24

24:                                               ; preds = %16, %36
  %25 = phi %"class.std::__1::unique_ptr.40"* [ %38, %36 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::unique_ptr.40"* [ %37, %36 ], [ %11, %16 ]
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.40"* %26 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr.40"* %25 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.spvtools::opt::BasicBlock"* %31, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = bitcast %"class.std::__1::unique_ptr.40"* %25 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %35, %"class.spvtools::opt::BasicBlock"* nonnull %31) #11
  br label %36

36:                                               ; preds = %34, %24
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %26, i64 1
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %25, i64 1
  %39 = icmp eq %"class.std::__1::unique_ptr.40"* %37, %4
  br i1 %39, label %40, label %24

40:                                               ; preds = %36
  %41 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %42

42:                                               ; preds = %40, %16
  %43 = phi %"class.std::__1::unique_ptr.40"* [ %4, %16 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr.40"* [ %22, %16 ], [ %38, %40 ]
  store %"class.std::__1::unique_ptr.40"* %44, %"class.std::__1::unique_ptr.40"** %3, align 8
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %43, i64 %21
  store %"class.std::__1::unique_ptr.40"* %45, %"class.std::__1::unique_ptr.40"** %10, align 8
  br label %179

46:                                               ; preds = %9
  %47 = bitcast %"class.std::__1::unique_ptr.40"** %5 to i64*
  %48 = bitcast %"struct.std::__1::__split_buffer.1303"* %0 to i64*
  %49 = sub i64 %8, %15
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #12
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #10
  %59 = bitcast i8* %58 to %"class.std::__1::unique_ptr.40"*
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %56
  %62 = ptrtoint %"class.std::__1::unique_ptr.40"* %61 to i64
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %59, i64 %52
  %64 = ptrtoint %"class.std::__1::unique_ptr.40"* %63 to i64
  %65 = ptrtoint %"class.std::__1::unique_ptr.40"* %11 to i64
  %66 = ptrtoint %"class.std::__1::unique_ptr.40"* %4 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %93, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.std::__1::unique_ptr.40"* [ %86, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %87, %77 ], [ %62, %71 ]
  %80 = phi %"class.std::__1::unique_ptr.40"* [ %88, %77 ], [ %11, %71 ]
  %81 = phi i64 [ %89, %77 ], [ %75, %71 ]
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr.40"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %82, align 8
  %85 = inttoptr i64 %79 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %78, i64 1
  %87 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %80, i64 1
  %89 = add i64 %81, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %77, !llvm.loop !172

91:                                               ; preds = %77
  %92 = ptrtoint %"class.std::__1::unique_ptr.40"* %86 to i64
  br label %93

93:                                               ; preds = %71, %91
  %94 = phi %"class.std::__1::unique_ptr.40"* [ %61, %71 ], [ %86, %91 ]
  %95 = phi i64 [ %62, %71 ], [ %92, %91 ]
  %96 = phi %"class.std::__1::unique_ptr.40"* [ %11, %71 ], [ %88, %91 ]
  %97 = icmp ult i64 %72, 56
  br i1 %97, label %152, label %98

98:                                               ; preds = %93, %98
  %99 = phi %"class.std::__1::unique_ptr.40"* [ %148, %98 ], [ %94, %93 ]
  %100 = phi i64 [ %149, %98 ], [ %95, %93 ]
  %101 = phi %"class.std::__1::unique_ptr.40"* [ %150, %98 ], [ %96, %93 ]
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.40"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %105 = inttoptr i64 %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 1
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 1
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %107, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr.40"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr.40"* %106 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 2
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 2
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr.40"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr.40"* %112 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 3
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 3
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr.40"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr.40"* %118 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 4
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 4
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr.40"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr.40"* %124 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 5
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 5
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = bitcast %"class.std::__1::unique_ptr.40"* %131 to i64*
  %134 = load i64, i64* %133, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %132, align 8
  %135 = bitcast %"class.std::__1::unique_ptr.40"* %130 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 6
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 6
  %138 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %137, i64 0, i32 0, i32 0, i32 0
  %139 = bitcast %"class.std::__1::unique_ptr.40"* %137 to i64*
  %140 = load i64, i64* %139, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %138, align 8
  %141 = bitcast %"class.std::__1::unique_ptr.40"* %136 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 7
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 7
  %144 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = bitcast %"class.std::__1::unique_ptr.40"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %144, align 8
  %147 = bitcast %"class.std::__1::unique_ptr.40"* %142 to i64*
  store i64 %146, i64* %147, align 8
  %148 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %99, i64 8
  %149 = ptrtoint %"class.std::__1::unique_ptr.40"* %148 to i64
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %101, i64 8
  %151 = icmp eq %"class.std::__1::unique_ptr.40"* %69, %148
  br i1 %151, label %152, label %98

152:                                              ; preds = %98, %93
  %153 = ptrtoint %"class.std::__1::unique_ptr.40"* %69 to i64
  %154 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %12, align 8
  %155 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %10, align 8
  %156 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  br label %157

157:                                              ; preds = %55, %152
  %158 = phi %"class.std::__1::unique_ptr.40"* [ %156, %152 ], [ %4, %55 ]
  %159 = phi %"class.std::__1::unique_ptr.40"* [ %155, %152 ], [ %11, %55 ]
  %160 = phi %"class.std::__1::unique_ptr.40"* [ %154, %152 ], [ %13, %55 ]
  %161 = phi i64 [ %153, %152 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %162 = bitcast %"class.std::__1::unique_ptr.40"** %10 to i64*
  store i64 %62, i64* %162, align 8
  %163 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64*
  store i64 %161, i64* %163, align 8
  store i64 %64, i64* %47, align 8
  %164 = icmp eq %"class.std::__1::unique_ptr.40"* %158, %159
  br i1 %164, label %175, label %165

165:                                              ; preds = %157, %173
  %166 = phi %"class.std::__1::unique_ptr.40"* [ %167, %173 ], [ %158, %157 ]
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %166, i64 -1
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %167, i64 0, i32 0, i32 0, i32 0
  %169 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %168, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %168, align 8
  %170 = icmp eq %"class.spvtools::opt::BasicBlock"* %169, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.std::__1::unique_ptr.40"* %167 to %"struct.std::__1::default_delete.44"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt10BasicBlockEEclEPS3_(%"struct.std::__1::default_delete.44"* %172, %"class.spvtools::opt::BasicBlock"* nonnull %169) #11
  br label %173

173:                                              ; preds = %171, %165
  %174 = icmp eq %"class.std::__1::unique_ptr.40"* %167, %159
  br i1 %174, label %175, label %165

175:                                              ; preds = %173, %157
  %176 = icmp eq %"class.std::__1::unique_ptr.40"* %160, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.std::__1::unique_ptr.40"* %160 to i8*
  tail call void @_ZdlPv(i8* %178) #10
  br label %179

179:                                              ; preds = %177, %175, %42, %2
  %180 = bitcast %"class.std::__1::unique_ptr.40"** %3 to i64**
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %1, i64 0, i32 0, i32 0, i32 0
  %183 = bitcast %"class.std::__1::unique_ptr.40"* %1 to i64*
  %184 = load i64, i64* %183, align 8
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %182, align 8
  store i64 %184, i64* %181, align 8
  %185 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %3, align 8
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %185, i64 1
  store %"class.std::__1::unique_ptr.40"* %186, %"class.std::__1::unique_ptr.40"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJRKjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !15
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #10, !noalias !173
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !173
  store i32 %58, i32* %57, align 4, !noalias !173
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !173
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !173
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !15
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !15
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !15
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE8__rehashEm(%"class.std::__1::__hash_table.911"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.911"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.915"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.915"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !176

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.915"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.915"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.915"* %36, %"struct.std::__1::__hash_node_base.915"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.915"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.915"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.915"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.915"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.915"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i32*
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.915"* %82, %"struct.std::__1::__hash_node_base.915"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.915"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.915"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.915"* %110 to i32*
  %112 = load i32, i32* %102, align 4
  %113 = load i32, i32* %111, align 4
  %114 = icmp eq i32 %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.915"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.915"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.915"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.915"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.915"* %80, %"struct.std::__1::__hash_node_base.915"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.915"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.915"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.915"** null, %"struct.std::__1::__hash_node_base.915"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.915"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.915"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.917", %"class.std::__1::__bucket_list_deallocator.917"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbPN8spvtools3opt8FunctionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass7ProcessEvE3$_0S6_EEEEbPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Function"*) #0 align 2 {
  %3 = alloca %"class.std::__1::vector.997", align 8
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1319"**
  %5 = load %"class.std::__1::__function::__default_alloc_func.1319"*, %"class.std::__1::__function::__default_alloc_func.1319"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1319", %"class.std::__1::__function::__default_alloc_func.1319"* %5, i64 0, i32 0, i32 2
  %7 = load %"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::MergeReturnPass"** %6, align 8
  %8 = bitcast %"class.std::__1::vector.997"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %3, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.997", %"class.std::__1::vector.997"* %3, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #11
  call void @_ZN8spvtools3opt15MergeReturnPass19CollectReturnBlocksEPNS0_8FunctionE(%"class.std::__1::vector.997"* nonnull sret %3, %"class.spvtools::opt::MergeReturnPass"* undef, %"class.spvtools::opt::Function"* %1) #11
  %11 = bitcast %"class.spvtools::opt::BasicBlock"*** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.997"* %3 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %16, 2
  %18 = inttoptr i64 %14 to %"class.spvtools::opt::BasicBlock"**
  br i1 %17, label %19, label %118

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1319", %"class.std::__1::__function::__default_alloc_func.1319"* %5, i64 0, i32 0, i32 1
  %21 = load i8, i8* %20, align 8, !range !7
  %22 = icmp eq i8 %21, 0
  %23 = icmp eq i64 %15, 0
  %24 = or i1 %23, %22
  br i1 %24, label %132, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 0, i32 0, i32 2
  %27 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %26, align 8
  %28 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 11
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2048
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  call void @_ZN8spvtools3opt9IRContext26BuildStructuredCFGAnalysisEv(%"class.spvtools::opt::IRContext"* %27) #11
  %33 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %9, align 8
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi %"class.spvtools::opt::BasicBlock"** [ %18, %25 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %27, i64 0, i32 27, i32 0, i32 0, i32 0
  %37 = load %"class.spvtools::opt::StructuredCFGAnalysis"*, %"class.spvtools::opt::StructuredCFGAnalysis"** %36, align 8
  %38 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %35, align 8
  %39 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %38, i64 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %39, align 8
  %41 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 4
  %42 = load i8, i8* %41, align 1, !range !7
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %49, label %44

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %40, i64 0, i32 3
  %46 = load i8, i8* %45, align 4, !range !7
  %47 = zext i8 %46 to i32
  %48 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %40, i32 %47) #11
  br label %49

49:                                               ; preds = %44, %34
  %50 = phi i32 [ %48, %44 ], [ 0, %34 ]
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %108, label %55

55:                                               ; preds = %49
  %56 = call i64 @llvm.ctpop.i64(i64 %53) #11, !range !15
  %57 = icmp ugt i64 %56, 1
  br i1 %57, label %61, label %58

58:                                               ; preds = %55
  %59 = add i64 %53, 4294967295
  %60 = and i64 %59, %51
  br label %65

61:                                               ; preds = %55
  %62 = icmp ugt i64 %53, %51
  br i1 %62, label %65, label %63

63:                                               ; preds = %61
  %64 = urem i64 %51, %53
  br label %65

65:                                               ; preds = %63, %61, %58
  %66 = phi i64 [ %60, %58 ], [ %64, %63 ], [ %51, %61 ]
  %67 = getelementptr inbounds %"class.spvtools::opt::StructuredCFGAnalysis", %"class.spvtools::opt::StructuredCFGAnalysis"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.881"**, %"struct.std::__1::__hash_node_base.881"*** %67, align 8
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %68, i64 %66
  %70 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %69, align 8
  %71 = icmp eq %"struct.std::__1::__hash_node_base.881"* %70, null
  br i1 %71, label %108, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %70, i64 0, i32 0
  %74 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %73, align 8
  %75 = icmp eq %"struct.std::__1::__hash_node_base.881"* %74, null
  br i1 %75, label %108, label %76

76:                                               ; preds = %72
  %77 = add i64 %53, -1
  br label %78

78:                                               ; preds = %99, %76
  %79 = phi %"struct.std::__1::__hash_node_base.881"* [ %74, %76 ], [ %101, %99 ]
  %80 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %79, i64 1
  %81 = bitcast %"struct.std::__1::__hash_node_base.881"* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, %51
  br i1 %83, label %94, label %84

84:                                               ; preds = %78
  br i1 %57, label %87, label %85

85:                                               ; preds = %84
  %86 = and i64 %82, %77
  br label %91

87:                                               ; preds = %84
  %88 = icmp ult i64 %82, %53
  br i1 %88, label %91, label %89

89:                                               ; preds = %87
  %90 = urem i64 %82, %53
  br label %91

91:                                               ; preds = %89, %87, %85
  %92 = phi i64 [ %86, %85 ], [ %90, %89 ], [ %82, %87 ]
  %93 = icmp eq i64 %92, %66
  br i1 %93, label %99, label %108

94:                                               ; preds = %78
  %95 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %79, i64 2
  %96 = bitcast %"struct.std::__1::__hash_node_base.881"* %95 to i32*
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %97, %50
  br i1 %98, label %103, label %99

99:                                               ; preds = %94, %91
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.881", %"struct.std::__1::__hash_node_base.881"* %79, i64 0, i32 0
  %101 = load %"struct.std::__1::__hash_node_base.881"*, %"struct.std::__1::__hash_node_base.881"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.881"* %101, null
  br i1 %102, label %108, label %78

103:                                              ; preds = %94
  %104 = bitcast %"struct.std::__1::__hash_node_base.881"* %95 to %"struct.std::__1::pair.1285"*
  %105 = getelementptr inbounds %"struct.std::__1::pair.1285", %"struct.std::__1::pair.1285"* %104, i64 0, i32 1, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, 0
  br label %108

108:                                              ; preds = %99, %91, %103, %72, %65, %49
  %109 = phi i1 [ %107, %103 ], [ true, %65 ], [ true, %49 ], [ true, %72 ], [ true, %91 ], [ true, %99 ]
  %110 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %9, align 8
  %111 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %110, align 8
  %112 = getelementptr inbounds %"class.spvtools::opt::Function", %"class.spvtools::opt::Function"* %1, i64 0, i32 3, i32 0, i32 1
  %113 = load %"class.std::__1::unique_ptr.40"*, %"class.std::__1::unique_ptr.40"** %112, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.40"* %113, i64 -1, i32 0, i32 0, i32 0
  %115 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %114, align 8
  %116 = icmp eq %"class.spvtools::opt::BasicBlock"* %111, %115
  %117 = and i1 %109, %116
  br i1 %117, label %132, label %118

118:                                              ; preds = %108, %2
  %119 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 2
  store %"class.spvtools::opt::Function"* %1, %"class.spvtools::opt::Function"** %119, align 8
  %120 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 3
  %121 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 6
  store %"class.spvtools::opt::BasicBlock"* null, %"class.spvtools::opt::BasicBlock"** %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1319", %"class.std::__1::__function::__default_alloc_func.1319"* %5, i64 0, i32 0, i32 1
  %123 = bitcast %"class.spvtools::opt::Instruction"** %120 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #11
  %124 = load i8, i8* %122, align 8, !range !7
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %118
  %127 = call zeroext i1 @_ZN8spvtools3opt15MergeReturnPass17ProcessStructuredEPNS0_8FunctionERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MergeReturnPass"* %7, %"class.spvtools::opt::Function"* %1, %"class.std::__1::vector.997"* nonnull dereferenceable(24) %3) #11
  br i1 %127, label %132, label %128

128:                                              ; preds = %126
  %129 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1319", %"class.std::__1::__function::__default_alloc_func.1319"* %5, i64 0, i32 0, i32 0
  %130 = load i8*, i8** %129, align 8
  store i8 1, i8* %130, align 1
  br label %132

131:                                              ; preds = %118
  call void @_ZN8spvtools3opt15MergeReturnPass17MergeReturnBlocksEPNS0_8FunctionERKNSt3__16vectorIPNS0_10BasicBlockENS4_9allocatorIS7_EEEE(%"class.spvtools::opt::MergeReturnPass"* %7, %"class.spvtools::opt::Function"* %1, %"class.std::__1::vector.997"* nonnull dereferenceable(24) %3) #11
  br label %132

132:                                              ; preds = %131, %128, %126, %108, %19
  %133 = phi i1 [ false, %19 ], [ false, %108 ], [ true, %126 ], [ true, %128 ], [ true, %131 ]
  %134 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %9, align 8
  %135 = icmp eq %"class.spvtools::opt::BasicBlock"** %134, null
  br i1 %135, label %139, label %136

136:                                              ; preds = %132
  %137 = ptrtoint %"class.spvtools::opt::BasicBlock"** %134 to i64
  store i64 %137, i64* %11, align 8
  %138 = bitcast %"class.spvtools::opt::BasicBlock"** %134 to i8*
  call void @_ZdlPv(i8* %138) #10
  br label %139

139:                                              ; preds = %132, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  ret i1 %133
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !177
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.915"*, i8 } @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE25__emplace_unique_key_argsIjJjEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIjPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.911"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = zext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %53, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !15
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, 4294967295
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.915"* %24, null
  br i1 %25, label %53, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br label %28

28:                                               ; preds = %26, %48
  %29 = phi %"struct.std::__1::__hash_node_base.915"* [ %31, %48 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.915"* %31, null
  br i1 %32, label %53, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.915"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %48, label %38

38:                                               ; preds = %33
  br i1 %11, label %41, label %39

39:                                               ; preds = %38
  %40 = and i64 %36, %27
  br label %45

41:                                               ; preds = %38
  %42 = icmp ult i64 %36, %7
  br i1 %42, label %45, label %43

43:                                               ; preds = %41
  %44 = urem i64 %36, %7
  br label %45

45:                                               ; preds = %39, %41, %43
  %46 = phi i64 [ %40, %39 ], [ %44, %43 ], [ %36, %41 ]
  %47 = icmp eq i64 %46, %20
  br i1 %47, label %48, label %53

48:                                               ; preds = %33, %45
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %31, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base.915"* %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, %4
  br i1 %52, label %140, label %28

53:                                               ; preds = %28, %45, %19, %3
  %54 = phi i64 [ %20, %19 ], [ -6148914691236517206, %3 ], [ %20, %45 ], [ %20, %28 ]
  %55 = tail call i8* @_Znwm(i64 24) #10, !noalias !182
  %56 = getelementptr inbounds i8, i8* %55, i64 16
  %57 = bitcast i8* %56 to i32*
  %58 = load i32, i32* %2, align 4, !noalias !182
  store i32 %58, i32* %57, align 4, !noalias !182
  %59 = getelementptr inbounds i8, i8* %55, i64 8
  %60 = bitcast i8* %59 to i64*
  store i64 %5, i64* %60, align 8, !noalias !182
  %61 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"**
  store %"struct.std::__1::__hash_node_base.915"* null, %"struct.std::__1::__hash_node_base.915"** %61, align 8, !noalias !182
  %62 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64, i64* %62, align 8
  %64 = add i64 %63, 1
  %65 = uitofp i64 %64 to float
  %66 = uitofp i64 %7 to float
  %67 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 3, i32 0, i32 0
  %68 = load float, float* %67, align 4
  %69 = fmul float %68, %66
  %70 = fcmp olt float %69, %65
  %71 = or i1 %8, %70
  br i1 %71, label %72, label %95

72:                                               ; preds = %53
  %73 = shl i64 %7, 1
  %74 = icmp ult i64 %7, 3
  %75 = tail call i64 @llvm.ctpop.i64(i64 %7) #11, !range !15
  %76 = icmp ugt i64 %75, 1
  %77 = or i1 %74, %76
  %78 = zext i1 %77 to i64
  %79 = or i64 %73, %78
  %80 = fdiv float %65, %68
  %81 = tail call float @llvm.ceil.f32(float %80) #11
  %82 = fptoui float %81 to i64
  %83 = icmp ult i64 %79, %82
  %84 = select i1 %83, i64 %82, i64 %79
  tail call void @_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE6rehashEm(%"class.std::__1::__hash_table.911"* %0, i64 %84)
  %85 = load i64, i64* %6, align 8
  %86 = tail call i64 @llvm.ctpop.i64(i64 %85) #11, !range !15
  %87 = icmp ugt i64 %86, 1
  br i1 %87, label %91, label %88

88:                                               ; preds = %72
  %89 = add i64 %85, 4294967295
  %90 = and i64 %89, %5
  br label %95

91:                                               ; preds = %72
  %92 = icmp ugt i64 %85, %5
  br i1 %92, label %95, label %93

93:                                               ; preds = %91
  %94 = urem i64 %5, %85
  br label %95

95:                                               ; preds = %93, %91, %88, %53
  %96 = phi i64 [ %7, %53 ], [ %85, %88 ], [ %85, %91 ], [ %85, %93 ]
  %97 = phi i64 [ %54, %53 ], [ %90, %88 ], [ %5, %91 ], [ %94, %93 ]
  %98 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %100 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %99, i64 %97
  %101 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %102 = icmp eq %"struct.std::__1::__hash_node_base.915"* %101, null
  br i1 %102, label %103, label %129

103:                                              ; preds = %95
  %104 = getelementptr inbounds %"class.std::__1::__hash_table.911", %"class.std::__1::__hash_table.911"* %0, i64 0, i32 1, i32 0, i32 0
  %105 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast i8* %55 to i64*
  store i64 %106, i64* %107, align 8
  %108 = bitcast %"struct.std::__1::__hash_node_base.915"* %104 to i8**
  store i8* %55, i8** %108, align 8
  store %"struct.std::__1::__hash_node_base.915"* %104, %"struct.std::__1::__hash_node_base.915"** %100, align 8
  %109 = load %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %61, align 8
  %110 = icmp eq %"struct.std::__1::__hash_node_base.915"* %109, null
  br i1 %110, label %136, label %111

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915", %"struct.std::__1::__hash_node_base.915"* %109, i64 1
  %113 = bitcast %"struct.std::__1::__hash_node_base.915"* %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %96) #11, !range !15
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %111
  %118 = add i64 %96, -1
  %119 = and i64 %114, %118
  br label %124

120:                                              ; preds = %111
  %121 = icmp ult i64 %114, %96
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %114, %96
  br label %124

124:                                              ; preds = %117, %120, %122
  %125 = phi i64 [ %119, %117 ], [ %123, %122 ], [ %114, %120 ]
  %126 = load %"struct.std::__1::__hash_node_base.915"**, %"struct.std::__1::__hash_node_base.915"*** %98, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.915"*, %"struct.std::__1::__hash_node_base.915"** %126, i64 %125
  %128 = bitcast %"struct.std::__1::__hash_node_base.915"** %127 to i8**
  br label %134

129:                                              ; preds = %95
  %130 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast i8* %55 to i64*
  store i64 %131, i64* %132, align 8
  %133 = bitcast %"struct.std::__1::__hash_node_base.915"* %101 to i8**
  br label %134

134:                                              ; preds = %124, %129
  %135 = phi i8** [ %133, %129 ], [ %128, %124 ]
  store i8* %55, i8** %135, align 8
  br label %136

136:                                              ; preds = %134, %103
  %137 = bitcast i8* %55 to %"struct.std::__1::__hash_node_base.915"*
  %138 = load i64, i64* %62, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %62, align 8
  br label %140

140:                                              ; preds = %48, %136
  %141 = phi i8 [ 1, %136 ], [ 0, %48 ]
  %142 = phi %"struct.std::__1::__hash_node_base.915"* [ %137, %136 ], [ %31, %48 ]
  %143 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } undef, %"struct.std::__1::__hash_node_base.915"* %142, 0
  %144 = insertvalue { %"struct.std::__1::__hash_node_base.915"*, i8 } %143, i8 %141, 1
  ret { %"struct.std::__1::__hash_node_base.915"*, i8 } %144
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.972"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSR_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeISC_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.968"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1328"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.972"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.972"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.972"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.972"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.972"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %161, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 48) #10, !noalias !185
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1328"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !185
  %75 = load i64, i64* %74, align 8, !noalias !185
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !185
  %77 = getelementptr inbounds i8, i8* %71, i64 32
  %78 = getelementptr inbounds i8, i8* %71, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #11, !noalias !185
  %79 = bitcast i8* %78 to i8**
  store i8* %77, i8** %79, align 8, !noalias !185
  %80 = getelementptr inbounds i8, i8* %71, i64 8
  %81 = bitcast i8* %80 to i64*
  store i64 %20, i64* %81, align 8, !noalias !185
  %82 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.972"**
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %82, align 8, !noalias !185
  %83 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 2, i32 0, i32 0
  %84 = load i64, i64* %83, align 8
  %85 = add i64 %84, 1
  %86 = uitofp i64 %85 to float
  %87 = uitofp i64 %22 to float
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 3, i32 0, i32 0
  %89 = load float, float* %88, align 4
  %90 = fmul float %89, %87
  %91 = fcmp olt float %90, %86
  %92 = or i1 %23, %91
  br i1 %92, label %93, label %116

93:                                               ; preds = %69
  %94 = shl i64 %22, 1
  %95 = icmp ult i64 %22, 3
  %96 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %97 = icmp ugt i64 %96, 1
  %98 = or i1 %95, %97
  %99 = zext i1 %98 to i64
  %100 = or i64 %94, %99
  %101 = fdiv float %86, %89
  %102 = tail call float @llvm.ceil.f32(float %101) #11
  %103 = fptoui float %102 to i64
  %104 = icmp ult i64 %100, %103
  %105 = select i1 %104, i64 %103, i64 %100
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.968"* %0, i64 %105)
  %106 = load i64, i64* %21, align 8
  %107 = tail call i64 @llvm.ctpop.i64(i64 %106) #11, !range !15
  %108 = icmp ugt i64 %107, 1
  br i1 %108, label %112, label %109

109:                                              ; preds = %93
  %110 = add i64 %106, -1
  %111 = and i64 %110, %20
  br label %116

112:                                              ; preds = %93
  %113 = icmp ult i64 %20, %106
  br i1 %113, label %116, label %114

114:                                              ; preds = %112
  %115 = urem i64 %20, %106
  br label %116

116:                                              ; preds = %114, %112, %109, %69
  %117 = phi i64 [ %22, %69 ], [ %106, %109 ], [ %106, %112 ], [ %106, %114 ]
  %118 = phi i64 [ %70, %69 ], [ %111, %109 ], [ %20, %112 ], [ %115, %114 ]
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %119, align 8
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %120, i64 %118
  %122 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.972"* %122, null
  br i1 %123, label %124, label %150

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = bitcast %"struct.std::__1::__hash_node_base.972"* %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast i8* %71 to i64*
  store i64 %127, i64* %128, align 8
  %129 = bitcast %"struct.std::__1::__hash_node_base.972"* %125 to i8**
  store i8* %71, i8** %129, align 8
  store %"struct.std::__1::__hash_node_base.972"* %125, %"struct.std::__1::__hash_node_base.972"** %121, align 8
  %130 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %82, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.972"* %130, null
  br i1 %131, label %157, label %132

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %130, i64 1
  %134 = bitcast %"struct.std::__1::__hash_node_base.972"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = tail call i64 @llvm.ctpop.i64(i64 %117) #11, !range !15
  %137 = icmp ugt i64 %136, 1
  br i1 %137, label %141, label %138

138:                                              ; preds = %132
  %139 = add i64 %117, -1
  %140 = and i64 %135, %139
  br label %145

141:                                              ; preds = %132
  %142 = icmp ult i64 %135, %117
  br i1 %142, label %145, label %143

143:                                              ; preds = %141
  %144 = urem i64 %135, %117
  br label %145

145:                                              ; preds = %138, %141, %143
  %146 = phi i64 [ %140, %138 ], [ %144, %143 ], [ %135, %141 ]
  %147 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %119, align 8
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %147, i64 %146
  %149 = bitcast %"struct.std::__1::__hash_node_base.972"** %148 to i8**
  br label %155

150:                                              ; preds = %116
  %151 = bitcast %"struct.std::__1::__hash_node_base.972"* %122 to i64*
  %152 = load i64, i64* %151, align 8
  %153 = bitcast i8* %71 to i64*
  store i64 %152, i64* %153, align 8
  %154 = bitcast %"struct.std::__1::__hash_node_base.972"* %122 to i8**
  br label %155

155:                                              ; preds = %145, %150
  %156 = phi i8** [ %154, %150 ], [ %149, %145 ]
  store i8* %71, i8** %156, align 8
  br label %157

157:                                              ; preds = %155, %124
  %158 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.972"*
  %159 = load i64, i64* %83, align 8
  %160 = add i64 %159, 1
  store i64 %160, i64* %83, align 8
  br label %161

161:                                              ; preds = %64, %157
  %162 = phi i8 [ 1, %157 ], [ 0, %64 ]
  %163 = phi %"struct.std::__1::__hash_node_base.972"* [ %158, %157 ], [ %47, %64 ]
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } undef, %"struct.std::__1::__hash_node_base.972"* %163, 0
  %165 = insertvalue { %"struct.std::__1::__hash_node_base.972"*, i8 } %164, i8 %162, 1
  ret { %"struct.std::__1::__hash_node_base.972"*, i8 } %165
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE6rehashEm(%"class.std::__1::__hash_table.968"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.968"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.968"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE8__rehashEm(%"class.std::__1::__hash_table.968"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.968"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.972"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.972"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.974", %"class.std::__1::__bucket_list_deallocator.974"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !188

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.972"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.972"* null, %"struct.std::__1::__hash_node_base.972"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.972"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.972"* %36, %"struct.std::__1::__hash_node_base.972"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.972"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.972"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.972"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.972"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.972"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.972"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.972"* %82, %"struct.std::__1::__hash_node_base.972"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.972"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.972"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.972"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.972"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.972"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.972"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.972"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.972"* %80, %"struct.std::__1::__hash_node_base.972"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.972"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.972", %"struct.std::__1::__hash_node_base.972"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.972"*, %"struct.std::__1::__hash_node_base.972"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.972"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.968", %"class.std::__1::__hash_table.968"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.972"**, %"struct.std::__1::__hash_node_base.972"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.972"** null, %"struct.std::__1::__hash_node_base.972"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.972"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.972"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.974", %"class.std::__1::__bucket_list_deallocator.974"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !7
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !7
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !7
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass14UpdatePhiNodesEPNS3_10BasicBlockESC_E3$_1S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = alloca %"struct.spvtools::opt::Operand", align 8
  %4 = alloca %"class.spvtools::utils::SmallVector", align 8
  %5 = alloca %"struct.spvtools::opt::Operand", align 8
  %6 = alloca %"class.spvtools::utils::SmallVector", align 8
  %7 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::MergeReturnPass"**
  %8 = load %"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::MergeReturnPass"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %8, i64 0, i32 0
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !7
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 0) #11
  br label %15

15:                                               ; preds = %13, %2
  %16 = phi i32 [ %14, %13 ], [ 0, %2 ]
  %17 = tail call i32 @_ZN8spvtools3opt7MemPass10Type2UndefEj(%"class.spvtools::opt::MemPass"* %9, i32 %16) #11
  %18 = bitcast %"struct.spvtools::opt::Operand"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #11
  %19 = bitcast %"class.spvtools::utils::SmallVector"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %19) #11
  %20 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %21 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 1
  %22 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 2
  %23 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 3, i64 0
  %24 = bitcast i32** %22 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %23, %"struct.std::__1::aligned_storage<4, 4>::type"** %24, align 8
  %25 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4
  %26 = bitcast %"class.std::__1::unique_ptr.0"* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %23 to i32*
  store i64 1, i64* %21, align 8
  store i32 %17, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 0
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1
  %30 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %29, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 2
  %33 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 3, i64 0
  %34 = bitcast i32** %32 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %33, %"struct.std::__1::aligned_storage<4, 4>::type"** %34, align 8
  %35 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4
  %36 = bitcast %"class.std::__1::unique_ptr.0"* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %29, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %4) #11
  %38 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %39 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %38, align 8
  %40 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %41 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %40, align 8
  %42 = icmp ult %"struct.spvtools::opt::Operand"* %39, %41
  br i1 %42, label %43, label %58

43:                                               ; preds = %15
  %44 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 0
  %45 = load i32, i32* %28, align 8
  store i32 %45, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 1
  %47 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %46, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 1, i32 1
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 1, i32 2
  %50 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 1, i32 3, i64 0
  %51 = bitcast i32** %49 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %50, %"struct.std::__1::aligned_storage<4, 4>::type"** %51, align 8
  %52 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 0, i32 1, i32 4
  %53 = bitcast %"class.std::__1::unique_ptr.0"* %52 to i64*
  store i64 0, i64* %53, align 8
  %54 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %46, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %29) #11
  %55 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %39, i64 1
  %56 = ptrtoint %"struct.spvtools::opt::Operand"* %55 to i64
  %57 = bitcast %"struct.spvtools::opt::Operand"** %38 to i64*
  store i64 %56, i64* %57, align 8
  br label %60

58:                                               ; preds = %15
  %59 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %59, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %3) #11
  br label %60

60:                                               ; preds = %58, %43
  %61 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %61, align 8
  %62 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %3, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %63 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %62, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %62, align 8
  %64 = icmp eq %"class.std::__1::vector.3"* %63, null
  br i1 %64, label %76, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %63, i64 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  br i1 %68, label %74, label %69

69:                                               ; preds = %65
  %70 = ptrtoint i32* %67 to i64
  %71 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %63, i64 0, i32 0, i32 1
  %72 = bitcast i32** %71 to i64*
  store i64 %70, i64* %72, align 8
  %73 = bitcast i32* %67 to i8*
  call void @_ZdlPv(i8* %73) #10
  br label %74

74:                                               ; preds = %69, %65
  %75 = bitcast %"class.std::__1::vector.3"* %63 to i8*
  call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %74, %60
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %77 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %4, i64 0, i32 4, i32 0, i32 0, i32 0
  %78 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %77, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %77, align 8
  %79 = icmp eq %"class.std::__1::vector.3"* %78, null
  br i1 %79, label %91, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = icmp eq i32* %82, null
  br i1 %83, label %89, label %84

84:                                               ; preds = %80
  %85 = ptrtoint i32* %82 to i64
  %86 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %78, i64 0, i32 0, i32 1
  %87 = bitcast i32** %86 to i64*
  store i64 %85, i64* %87, align 8
  %88 = bitcast i32* %82 to i8*
  call void @_ZdlPv(i8* %88) #10
  br label %89

89:                                               ; preds = %84, %80
  %90 = bitcast %"class.std::__1::vector.3"* %78 to i8*
  call void @_ZdlPv(i8* %90) #10
  br label %91

91:                                               ; preds = %89, %76
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #11
  %92 = bitcast %"struct.spvtools::opt::Operand"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %92) #11
  %93 = bitcast %"class.spvtools::utils::SmallVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #11
  %94 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %95 = bitcast [8 x i8]* %94 to %"class.spvtools::opt::BasicBlock"**
  %96 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %95, align 8
  %97 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %96, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %97, align 8
  %99 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %98, i64 0, i32 4
  %100 = load i8, i8* %99, align 1, !range !7
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %107, label %102

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %98, i64 0, i32 3
  %104 = load i8, i8* %103, align 4, !range !7
  %105 = zext i8 %104 to i32
  %106 = call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %98, i32 %105) #11
  br label %107

107:                                              ; preds = %102, %91
  %108 = phi i32 [ %106, %102 ], [ 0, %91 ]
  %109 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %110 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 1
  %111 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 2
  %112 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 3, i64 0
  %113 = bitcast i32** %111 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %112, %"struct.std::__1::aligned_storage<4, 4>::type"** %113, align 8
  %114 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4
  %115 = bitcast %"class.std::__1::unique_ptr.0"* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = bitcast %"struct.std::__1::aligned_storage<4, 4>::type"* %112 to i32*
  store i64 1, i64* %110, align 8
  store i32 %108, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 0
  store i32 1, i32* %117, align 8
  %118 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1
  %119 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %118, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 1
  store i64 0, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 2
  %122 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 3, i64 0
  %123 = bitcast i32** %121 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %122, %"struct.std::__1::aligned_storage<4, 4>::type"** %123, align 8
  %124 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4
  %125 = bitcast %"class.std::__1::unique_ptr.0"* %124 to i64*
  store i64 0, i64* %125, align 8
  %126 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %118, %"class.spvtools::utils::SmallVector"* nonnull dereferenceable(40) %6) #11
  %127 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %38, align 8
  %128 = load %"struct.spvtools::opt::Operand"*, %"struct.spvtools::opt::Operand"** %40, align 8
  %129 = icmp ult %"struct.spvtools::opt::Operand"* %127, %128
  br i1 %129, label %130, label %145

130:                                              ; preds = %107
  %131 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 0
  %132 = load i32, i32* %117, align 8
  store i32 %132, i32* %131, align 8
  %133 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 1
  %134 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %133, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %134, align 8
  %135 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 1, i32 1
  store i64 0, i64* %135, align 8
  %136 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 1, i32 2
  %137 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 1, i32 3, i64 0
  %138 = bitcast i32** %136 to %"struct.std::__1::aligned_storage<4, 4>::type"**
  store %"struct.std::__1::aligned_storage<4, 4>::type"* %137, %"struct.std::__1::aligned_storage<4, 4>::type"** %138, align 8
  %139 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 0, i32 1, i32 4
  %140 = bitcast %"class.std::__1::unique_ptr.0"* %139 to i64*
  store i64 0, i64* %140, align 8
  %141 = call dereferenceable(40) %"class.spvtools::utils::SmallVector"* @_ZN8spvtools5utils11SmallVectorIjLm2EEaSEOS2_(%"class.spvtools::utils::SmallVector"* %133, %"class.spvtools::utils::SmallVector"* dereferenceable(40) %118) #11
  %142 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %127, i64 1
  %143 = ptrtoint %"struct.spvtools::opt::Operand"* %142 to i64
  %144 = bitcast %"struct.spvtools::opt::Operand"** %38 to i64*
  store i64 %143, i64* %144, align 8
  br label %147

145:                                              ; preds = %107
  %146 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  call void @_ZNSt3__16vectorIN8spvtools3opt7OperandENS_9allocatorIS3_EEE21__push_back_slow_pathIS3_EEvOT_(%"class.std::__1::vector"* %146, %"struct.spvtools::opt::Operand"* nonnull dereferenceable(48) %5) #11
  br label %147

147:                                              ; preds = %145, %130
  %148 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %148, align 8
  %149 = getelementptr inbounds %"struct.spvtools::opt::Operand", %"struct.spvtools::opt::Operand"* %5, i64 0, i32 1, i32 4, i32 0, i32 0, i32 0
  %150 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %149, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %149, align 8
  %151 = icmp eq %"class.std::__1::vector.3"* %150, null
  br i1 %151, label %163, label %152

152:                                              ; preds = %147
  %153 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %150, i64 0, i32 0, i32 0
  %154 = load i32*, i32** %153, align 8
  %155 = icmp eq i32* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %152
  %157 = ptrtoint i32* %154 to i64
  %158 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %150, i64 0, i32 0, i32 1
  %159 = bitcast i32** %158 to i64*
  store i64 %157, i64* %159, align 8
  %160 = bitcast i32* %154 to i8*
  call void @_ZdlPv(i8* %160) #10
  br label %161

161:                                              ; preds = %156, %152
  %162 = bitcast %"class.std::__1::vector.3"* %150 to i8*
  call void @_ZdlPv(i8* %162) #10
  br label %163

163:                                              ; preds = %161, %147
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN8spvtools5utils11SmallVectorIjLm2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %109, align 8
  %164 = getelementptr inbounds %"class.spvtools::utils::SmallVector", %"class.spvtools::utils::SmallVector"* %6, i64 0, i32 4, i32 0, i32 0, i32 0
  %165 = load %"class.std::__1::vector.3"*, %"class.std::__1::vector.3"** %164, align 8
  store %"class.std::__1::vector.3"* null, %"class.std::__1::vector.3"** %164, align 8
  %166 = icmp eq %"class.std::__1::vector.3"* %165, null
  br i1 %166, label %178, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 0
  %169 = load i32*, i32** %168, align 8
  %170 = icmp eq i32* %169, null
  br i1 %170, label %176, label %171

171:                                              ; preds = %167
  %172 = ptrtoint i32* %169 to i64
  %173 = getelementptr inbounds %"class.std::__1::vector.3", %"class.std::__1::vector.3"* %165, i64 0, i32 0, i32 1
  %174 = bitcast i32** %173 to i64*
  store i64 %172, i64* %174, align 8
  %175 = bitcast i32* %169 to i8*
  call void @_ZdlPv(i8* %175) #10
  br label %176

176:                                              ; preds = %171, %167
  %177 = bitcast %"class.std::__1::vector.3"* %165 to i8*
  call void @_ZdlPv(i8* %177) #10
  br label %178

178:                                              ; preds = %176, %163
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %92) #11
  %179 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %8, i64 0, i32 0, i32 0, i32 2
  %180 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %179, align 8
  %181 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %180, i64 0, i32 11
  %182 = load i32, i32* %181, align 8
  %183 = and i32 %182, 1
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %188, label %185

185:                                              ; preds = %178
  %186 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %180, i64 0, i32 6, i32 0, i32 0, i32 0
  %187 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %186, align 8
  call void @_ZN8spvtools3opt8analysis13DefUseManager12UpdateDefUseEPNS0_11InstructionE(%"class.spvtools::opt::analysis::DefUseManager"* %187, %"class.spvtools::opt::Instruction"* %1) #11
  br label %188

188:                                              ; preds = %178, %185
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt11InstructionEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass21CreatePhiNodesForInstEPNS3_10BasicBlockERS4_E3$_2S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::Instruction"*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1347"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1347"*, %"class.std::__1::__function::__default_alloc_func.1347"** %3, align 8
  %5 = ptrtoint %"class.spvtools::opt::Instruction"* %1 to i64
  %6 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %4, i64 0, i32 0, i32 4
  %7 = load %"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::MergeReturnPass"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 245
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6
  %13 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 6, i32 0, i32 1
  %14 = bitcast %"struct.spvtools::opt::Operand"** %13 to i64*
  %15 = bitcast %"class.std::__1::vector"* %12 to i64*
  %16 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 3
  %17 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %1, i64 0, i32 4
  %18 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %4, i64 0, i32 0, i32 2
  br label %23

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 0, i32 0, i32 2
  %21 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %20, align 8
  %22 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %21, %"class.spvtools::opt::Instruction"* %1) #11
  br label %72

23:                                               ; preds = %70, %11
  %24 = phi i32 [ %71, %70 ], [ 0, %11 ]
  %25 = load i64, i64* %14, align 8
  %26 = load i64, i64* %15, align 8
  %27 = sub i64 %25, %26
  %28 = sdiv exact i64 %27, 48
  %29 = load i8, i8* %16, align 4, !range !7
  %30 = icmp eq i8 %29, 0
  %31 = load i8, i8* %17, align 1, !range !7
  %32 = icmp eq i8 %31, 0
  %33 = select i1 %32, i32 1, i32 2
  %34 = xor i1 %32, true
  %35 = zext i1 %34 to i32
  %36 = select i1 %30, i32 %35, i32 %33
  %37 = trunc i64 %28 to i32
  %38 = sub i32 %37, %36
  %39 = icmp ult i32 %24, %38
  br i1 %39, label %40, label %181

40:                                               ; preds = %23
  %41 = add i32 %36, %24
  %42 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %41) #11
  %43 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %18, align 8
  %44 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 4
  %45 = load i8, i8* %44, align 1, !range !7
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %52, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %43, i64 0, i32 3
  %49 = load i8, i8* %48, align 4, !range !7
  %50 = zext i8 %49 to i32
  %51 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %43, i32 %50) #11
  br label %52

52:                                               ; preds = %47, %40
  %53 = phi i32 [ %51, %47 ], [ 0, %40 ]
  %54 = icmp eq i32 %42, %53
  br i1 %54, label %55, label %70

55:                                               ; preds = %52
  %56 = or i32 %24, 1
  %57 = load i8, i8* %16, align 4, !range !7
  %58 = icmp eq i8 %57, 0
  %59 = load i8, i8* %17, align 1, !range !7
  %60 = icmp eq i8 %59, 0
  %61 = select i1 %60, i32 1, i32 2
  %62 = xor i1 %60, true
  %63 = zext i1 %62 to i32
  %64 = select i1 %58, i32 %63, i32 %61
  %65 = add i32 %64, %56
  %66 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %1, i32 %65) #11
  %67 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %7, i64 0, i32 0, i32 0, i32 2
  %68 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %67, align 8
  %69 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %68, i32 %66) #11
  br label %72

70:                                               ; preds = %52
  %71 = add i32 %24, 2
  br label %23

72:                                               ; preds = %55, %19
  %73 = phi %"class.spvtools::opt::BasicBlock"* [ %22, %19 ], [ %69, %55 ]
  %74 = icmp eq %"class.spvtools::opt::BasicBlock"* %73, null
  br i1 %74, label %181, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %4, i64 0, i32 0, i32 1
  %77 = bitcast %"class.spvtools::opt::DominatorAnalysis"*** %76 to %"class.spvtools::opt::DominatorAnalysisBase"***
  %78 = load %"class.spvtools::opt::DominatorAnalysisBase"**, %"class.spvtools::opt::DominatorAnalysisBase"*** %77, align 8
  %79 = load %"class.spvtools::opt::DominatorAnalysisBase"*, %"class.spvtools::opt::DominatorAnalysisBase"** %78, align 8
  %80 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %4, i64 0, i32 0, i32 3
  %81 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %80, align 8
  %82 = icmp eq %"class.spvtools::opt::BasicBlock"* %81, null
  br i1 %82, label %110, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %81, i64 0, i32 1, i32 0, i32 0, i32 0
  %85 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %84, align 8
  %86 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 4
  %87 = load i8, i8* %86, align 1, !range !7
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %94, label %89

89:                                               ; preds = %83
  %90 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %85, i64 0, i32 3
  %91 = load i8, i8* %90, align 4, !range !7
  %92 = zext i8 %91 to i32
  %93 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %85, i32 %92) #11
  br label %94

94:                                               ; preds = %89, %83
  %95 = phi i32 [ %93, %89 ], [ 0, %83 ]
  %96 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %73, i64 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %96, align 8
  %98 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 4
  %99 = load i8, i8* %98, align 1, !range !7
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %106, label %101

101:                                              ; preds = %94
  %102 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %97, i64 0, i32 3
  %103 = load i8, i8* %102, align 4, !range !7
  %104 = zext i8 %103 to i32
  %105 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %97, i32 %104) #11
  br label %106

106:                                              ; preds = %101, %94
  %107 = phi i32 [ %105, %101 ], [ 0, %94 ]
  %108 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysisBase", %"class.spvtools::opt::DominatorAnalysisBase"* %79, i64 0, i32 0
  %109 = tail call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %108, i32 %95, i32 %107) #11
  br i1 %109, label %181, label %110

110:                                              ; preds = %106, %75
  %111 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1347", %"class.std::__1::__function::__default_alloc_func.1347"* %4, i64 0, i32 0, i32 0
  %112 = load %"class.std::__1::vector.1070"*, %"class.std::__1::vector.1070"** %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::vector.1070", %"class.std::__1::vector.1070"* %112, i64 0, i32 0, i32 1
  %114 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::vector.1070", %"class.std::__1::vector.1070"* %112, i64 0, i32 0, i32 2, i32 0, i32 0
  %116 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %115, align 8
  %117 = icmp eq %"class.spvtools::opt::Instruction"** %114, %116
  %118 = ptrtoint %"class.spvtools::opt::Instruction"** %116 to i64
  br i1 %117, label %124, label %119

119:                                              ; preds = %110
  %120 = bitcast %"class.spvtools::opt::Instruction"** %114 to i64*
  store i64 %5, i64* %120, align 8
  %121 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %114, i64 1
  %122 = ptrtoint %"class.spvtools::opt::Instruction"** %121 to i64
  %123 = bitcast %"class.spvtools::opt::Instruction"*** %113 to i64*
  store i64 %122, i64* %123, align 8
  br label %181

124:                                              ; preds = %110
  %125 = ptrtoint %"class.spvtools::opt::Instruction"** %114 to i64
  %126 = bitcast %"class.spvtools::opt::Instruction"*** %113 to i64*
  %127 = bitcast %"class.std::__1::vector.1070"* %112 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = sub i64 %125, %128
  %130 = ashr exact i64 %129, 3
  %131 = add nsw i64 %130, 1
  %132 = icmp ugt i64 %131, 2305843009213693951
  br i1 %132, label %133, label %135

133:                                              ; preds = %124
  %134 = bitcast %"class.std::__1::vector.1070"* %112 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %134) #12
  unreachable

135:                                              ; preds = %124
  %136 = bitcast %"class.spvtools::opt::Instruction"*** %115 to i64*
  %137 = sub i64 %118, %128
  %138 = ashr exact i64 %137, 3
  %139 = icmp ult i64 %138, 1152921504606846975
  br i1 %139, label %140, label %148

140:                                              ; preds = %135
  %141 = ashr exact i64 %137, 2
  %142 = icmp ult i64 %141, %131
  %143 = select i1 %142, i64 %131, i64 %141
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %140
  %146 = icmp ugt i64 %143, 2305843009213693951
  br i1 %146, label %147, label %148

147:                                              ; preds = %145
  tail call void @abort() #12
  unreachable

148:                                              ; preds = %145, %135
  %149 = phi i64 [ %143, %145 ], [ 2305843009213693951, %135 ]
  %150 = shl i64 %149, 3
  %151 = tail call i8* @_Znwm(i64 %150) #10
  %152 = bitcast i8* %151 to %"class.spvtools::opt::Instruction"**
  br label %153

153:                                              ; preds = %148, %140
  %154 = phi i64 [ %149, %148 ], [ 0, %140 ]
  %155 = phi %"class.spvtools::opt::Instruction"** [ %152, %148 ], [ null, %140 ]
  %156 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %155, i64 %130
  %157 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %155, i64 %154
  %158 = ptrtoint %"class.spvtools::opt::Instruction"** %157 to i64
  %159 = bitcast %"class.spvtools::opt::Instruction"** %156 to i64*
  store i64 %5, i64* %159, align 8
  %160 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %156, i64 1
  %161 = ptrtoint %"class.spvtools::opt::Instruction"** %160 to i64
  %162 = getelementptr inbounds %"class.std::__1::vector.1070", %"class.std::__1::vector.1070"* %112, i64 0, i32 0, i32 0
  %163 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %162, align 8
  %164 = load i64, i64* %126, align 8
  %165 = ptrtoint %"class.spvtools::opt::Instruction"** %163 to i64
  %166 = sub i64 %164, %165
  %167 = ashr exact i64 %166, 3
  %168 = sub nsw i64 0, %167
  %169 = getelementptr inbounds %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %156, i64 %168
  %170 = ptrtoint %"class.spvtools::opt::Instruction"** %169 to i64
  %171 = icmp sgt i64 %166, 0
  br i1 %171, label %172, label %176

172:                                              ; preds = %153
  %173 = bitcast %"class.spvtools::opt::Instruction"** %169 to i8*
  %174 = bitcast %"class.spvtools::opt::Instruction"** %163 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 %166, i1 false) #11
  %175 = load %"class.spvtools::opt::Instruction"**, %"class.spvtools::opt::Instruction"*** %162, align 8
  br label %176

176:                                              ; preds = %172, %153
  %177 = phi %"class.spvtools::opt::Instruction"** [ %163, %153 ], [ %175, %172 ]
  store i64 %170, i64* %127, align 8
  store i64 %161, i64* %126, align 8
  store i64 %158, i64* %136, align 8
  %178 = icmp eq %"class.spvtools::opt::Instruction"** %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %176
  %180 = bitcast %"class.spvtools::opt::Instruction"** %177 to i8*
  tail call void @_ZdlPv(i8* %180) #10
  br label %181

181:                                              ; preds = %23, %72, %106, %119, %176, %179
  ret void
}

declare zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 40) #10, !noalias !189
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 40, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS8_10BasicBlockERNS8_11InstructionEE3$_3S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.std::__1::__function::__default_alloc_func.1352"**
  %4 = load %"class.std::__1::__function::__default_alloc_func.1352"*, %"class.std::__1::__function::__default_alloc_func.1352"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1352", %"class.std::__1::__function::__default_alloc_func.1352"* %4, i64 0, i32 0, i32 2
  %6 = load %"class.spvtools::opt::MergeReturnPass"*, %"class.spvtools::opt::MergeReturnPass"** %5, align 8
  %7 = getelementptr inbounds %"class.spvtools::opt::MergeReturnPass", %"class.spvtools::opt::MergeReturnPass"* %6, i64 0, i32 0, i32 0, i32 2
  %8 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %9 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 11
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %37

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load %"class.spvtools::opt::Module"*, %"class.spvtools::opt::Module"** %14, align 8
  %16 = tail call i8* @_Znwm(i64 104) #10
  %17 = bitcast i8* %16 to %"class.spvtools::opt::analysis::DefUseManager"*
  %18 = getelementptr inbounds i8, i8* %16, i64 32
  %19 = bitcast i8* %18 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %19, align 4
  %20 = getelementptr inbounds i8, i8* %16, i64 48
  %21 = getelementptr inbounds i8, i8* %16, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #11
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %16, i64 64
  %24 = getelementptr inbounds i8, i8* %16, i64 96
  %25 = bitcast i8* %24 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %25, align 4
  tail call void @_ZN8spvtools3opt8analysis13DefUseManager13AnalyzeDefUseEPNS0_6ModuleE(%"class.spvtools::opt::analysis::DefUseManager"* nonnull %17, %"class.spvtools::opt::Module"* %15) #11
  %26 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6
  %27 = ptrtoint i8* %16 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.62"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %28, align 8
  %30 = bitcast %"class.std::__1::unique_ptr.62"* %26 to i64*
  store i64 %27, i64* %30, align 8
  %31 = icmp eq %"class.spvtools::opt::analysis::DefUseManager"* %29, null
  br i1 %31, label %34, label %32

32:                                               ; preds = %13
  %33 = bitcast %"class.std::__1::unique_ptr.62"* %26 to %"struct.std::__1::default_delete.120"*
  tail call void @_ZNKSt3__114default_deleteIN8spvtools3opt8analysis13DefUseManagerEEclEPS4_(%"struct.std::__1::default_delete.120"* %33, %"class.spvtools::opt::analysis::DefUseManager"* nonnull %29) #11
  br label %34

34:                                               ; preds = %32, %13
  %35 = load i32, i32* %9, align 8
  %36 = or i32 %35, 1
  store i32 %36, i32* %9, align 8
  br label %37

37:                                               ; preds = %34, %2
  %38 = getelementptr inbounds %"class.spvtools::opt::IRContext", %"class.spvtools::opt::IRContext"* %8, i64 0, i32 6, i32 0, i32 0, i32 0
  %39 = load %"class.spvtools::opt::analysis::DefUseManager"*, %"class.spvtools::opt::analysis::DefUseManager"** %38, align 8
  %40 = load i32, i32* %1, align 4
  %41 = tail call %"class.spvtools::opt::Instruction"* @_ZN8spvtools3opt8analysis13DefUseManager6GetDefEj(%"class.spvtools::opt::analysis::DefUseManager"* %39, i32 %40) #11
  %42 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %7, align 8
  %43 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEPNS0_11InstructionE(%"class.spvtools::opt::IRContext"* %42, %"class.spvtools::opt::Instruction"* %41) #11
  %44 = icmp eq %"class.spvtools::opt::BasicBlock"* %43, null
  br i1 %44, label %82, label %45

45:                                               ; preds = %37
  %46 = bitcast %"class.std::__1::__function::__default_alloc_func.1352"* %4 to %"class.spvtools::opt::DominatorAnalysisBase"**
  %47 = load %"class.spvtools::opt::DominatorAnalysisBase"*, %"class.spvtools::opt::DominatorAnalysisBase"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__1::__function::__default_alloc_func.1352", %"class.std::__1::__function::__default_alloc_func.1352"* %4, i64 0, i32 0, i32 1
  %49 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %48, align 8
  %50 = icmp eq %"class.spvtools::opt::BasicBlock"* %49, null
  br i1 %50, label %80, label %51

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %43, i64 0, i32 1, i32 0, i32 0, i32 0
  %53 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %52, align 8
  %54 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 4
  %55 = load i8, i8* %54, align 1, !range !7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %53, i64 0, i32 3
  %59 = load i8, i8* %58, align 4, !range !7
  %60 = zext i8 %59 to i32
  %61 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %53, i32 %60) #11
  br label %62

62:                                               ; preds = %57, %51
  %63 = phi i32 [ %61, %57 ], [ 0, %51 ]
  %64 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %49, i64 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %64, align 8
  %66 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 4
  %67 = load i8, i8* %66, align 1, !range !7
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %74, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %65, i64 0, i32 3
  %71 = load i8, i8* %70, align 4, !range !7
  %72 = zext i8 %71 to i32
  %73 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %65, i32 %72) #11
  br label %74

74:                                               ; preds = %69, %62
  %75 = phi i32 [ %73, %69 ], [ 0, %62 ]
  %76 = getelementptr inbounds %"class.spvtools::opt::DominatorAnalysisBase", %"class.spvtools::opt::DominatorAnalysisBase"* %47, i64 0, i32 0
  %77 = tail call zeroext i1 @_ZNK8spvtools3opt13DominatorTree9DominatesEjj(%"class.spvtools::opt::DominatorTree"* %76, i32 %63, i32 %75) #11
  br i1 %77, label %82, label %78

78:                                               ; preds = %74
  %79 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %48, align 8
  br label %80

80:                                               ; preds = %78, %45
  %81 = phi %"class.spvtools::opt::BasicBlock"* [ %79, %78 ], [ null, %45 ]
  tail call void @_ZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS0_10BasicBlockERNS0_11InstructionE(%"class.spvtools::opt::MergeReturnPass"* %6, %"class.spvtools::opt::BasicBlock"* %81, %"class.spvtools::opt::Instruction"* dereferenceable(112) %41) #11
  br label %82

82:                                               ; preds = %37, %74, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal noalias nonnull i8* @"_ZNSt3__110__function8__policy13__large_cloneINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEPvPKv"(i8* nocapture readonly) #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #10, !noalias !194
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %2, i8* align 8 %0, i64 24, i1 false) #11
  ret i8* %2
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function8__policy15__large_destroyINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEEvPv"(i8*) #0 align 2 {
  tail call void @_ZdlPv(i8* %0) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS8_10BasicBlockERNS8_11InstructionEE3$_4S3_EEEEvPKNS0_16__policy_storageES2_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32*) #0 align 2 {
  %3 = load i32, i32* %1, align 4
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Instruction"**
  %5 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 4
  %7 = load i8, i8* %6, align 1, !range !7
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %5, i64 0, i32 3
  %11 = load i8, i8* %10, align 4, !range !7
  %12 = zext i8 %11 to i32
  %13 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %5, i32 %12) #11
  br label %14

14:                                               ; preds = %9, %2
  %15 = phi i32 [ %13, %9 ], [ 0, %2 ]
  %16 = icmp eq i32 %3, %15
  br i1 %16, label %17, label %21

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %19 = bitcast [8 x i8]* %18 to i32*
  %20 = load i32, i32* %19, align 8
  store i32 %20, i32* %1, align 4
  br label %21

21:                                               ; preds = %14, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvjEE11__call_implINS0_20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass15PredicateBlocksEPNS7_10BasicBlockEPNS_13unordered_setISA_NS_4hashISA_EENS_8equal_toISA_EENS_9allocatorISA_EEEEPNS_4listISA_SH_EEE3$_5S2_EEEEvPKNS0_16__policy_storageEj"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, i32) #0 align 2 {
  %3 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::opt::Pass"**
  %4 = load %"class.spvtools::opt::Pass"*, %"class.spvtools::opt::Pass"** %3, align 8
  %5 = getelementptr inbounds %"class.spvtools::opt::Pass", %"class.spvtools::opt::Pass"* %4, i64 0, i32 2
  %6 = load %"class.spvtools::opt::IRContext"*, %"class.spvtools::opt::IRContext"** %5, align 8
  %7 = tail call %"class.spvtools::opt::BasicBlock"* @_ZN8spvtools3opt9IRContext15get_instr_blockEj(%"class.spvtools::opt::IRContext"* %6, i32 %1) #11
  %8 = getelementptr inbounds %"union.std::__1::__function::__policy_storage", %"union.std::__1::__function::__policy_storage"* %0, i64 0, i32 1
  %9 = bitcast [8 x i8]* %8 to %"class.spvtools::opt::BasicBlock"***
  %10 = load %"class.spvtools::opt::BasicBlock"**, %"class.spvtools::opt::BasicBlock"*** %9, align 8
  store %"class.spvtools::opt::BasicBlock"* %7, %"class.spvtools::opt::BasicBlock"** %10, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1018"*, i8 } @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1014"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"class.spvtools::opt::BasicBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %1, align 8
  %5 = ptrtoint %"class.spvtools::opt::BasicBlock"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %66, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !15
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %37, null
  br i1 %38, label %66, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br label %41

41:                                               ; preds = %39, %61
  %42 = phi %"struct.std::__1::__hash_node_base.1018"* [ %44, %61 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %44, null
  br i1 %45, label %66, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.1018"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  br i1 %24, label %54, label %52

52:                                               ; preds = %51
  %53 = and i64 %49, %40
  br label %58

54:                                               ; preds = %51
  %55 = icmp ult i64 %49, %20
  br i1 %55, label %58, label %56

56:                                               ; preds = %54
  %57 = urem i64 %49, %20
  br label %58

58:                                               ; preds = %52, %54, %56
  %59 = phi i64 [ %53, %52 ], [ %57, %56 ], [ %49, %54 ]
  %60 = icmp eq i64 %59, %33
  br i1 %60, label %61, label %66

61:                                               ; preds = %46, %58
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %44, i64 2
  %63 = bitcast %"struct.std::__1::__hash_node_base.1018"* %62 to %"class.spvtools::opt::BasicBlock"**
  %64 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %63, align 8
  %65 = icmp eq %"class.spvtools::opt::BasicBlock"* %64, %4
  br i1 %65, label %154, label %41

66:                                               ; preds = %41, %58, %32, %3
  %67 = phi i64 [ %33, %32 ], [ -6148914691236517206, %3 ], [ %33, %58 ], [ %33, %41 ]
  %68 = tail call i8* @_Znwm(i64 24) #10, !noalias !199
  %69 = getelementptr inbounds i8, i8* %68, i64 16
  %70 = bitcast %"class.spvtools::opt::BasicBlock"** %2 to i64*
  %71 = load i64, i64* %70, align 8, !noalias !199
  %72 = bitcast i8* %69 to i64*
  store i64 %71, i64* %72, align 8, !noalias !199
  %73 = getelementptr inbounds i8, i8* %68, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8, !noalias !199
  %75 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1018"**
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %75, align 8, !noalias !199
  %76 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = add i64 %77, 1
  %79 = uitofp i64 %78 to float
  %80 = uitofp i64 %20 to float
  %81 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 3, i32 0, i32 0
  %82 = load float, float* %81, align 4
  %83 = fmul float %82, %80
  %84 = fcmp olt float %83, %79
  %85 = or i1 %21, %84
  br i1 %85, label %86, label %109

86:                                               ; preds = %66
  %87 = shl i64 %20, 1
  %88 = icmp ult i64 %20, 3
  %89 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !15
  %90 = icmp ugt i64 %89, 1
  %91 = or i1 %88, %90
  %92 = zext i1 %91 to i64
  %93 = or i64 %87, %92
  %94 = fdiv float %79, %82
  %95 = tail call float @llvm.ceil.f32(float %94) #11
  %96 = fptoui float %95 to i64
  %97 = icmp ult i64 %93, %96
  %98 = select i1 %97, i64 %96, i64 %93
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %98)
  %99 = load i64, i64* %19, align 8
  %100 = tail call i64 @llvm.ctpop.i64(i64 %99) #11, !range !15
  %101 = icmp ugt i64 %100, 1
  br i1 %101, label %105, label %102

102:                                              ; preds = %86
  %103 = add i64 %99, -1
  %104 = and i64 %103, %18
  br label %109

105:                                              ; preds = %86
  %106 = icmp ult i64 %18, %99
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = urem i64 %18, %99
  br label %109

109:                                              ; preds = %107, %105, %102, %66
  %110 = phi i64 [ %20, %66 ], [ %99, %102 ], [ %99, %105 ], [ %99, %107 ]
  %111 = phi i64 [ %67, %66 ], [ %104, %102 ], [ %18, %105 ], [ %108, %107 ]
  %112 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %113 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %112, align 8
  %114 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %113, i64 %111
  %115 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %114, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %115, null
  br i1 %116, label %117, label %143

117:                                              ; preds = %109
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 1, i32 0, i32 0
  %119 = bitcast %"struct.std::__1::__hash_node_base.1018"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8* %68 to i64*
  store i64 %120, i64* %121, align 8
  %122 = bitcast %"struct.std::__1::__hash_node_base.1018"* %118 to i8**
  store i8* %68, i8** %122, align 8
  store %"struct.std::__1::__hash_node_base.1018"* %118, %"struct.std::__1::__hash_node_base.1018"** %114, align 8
  %123 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %75, align 8
  %124 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %123, null
  br i1 %124, label %150, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %123, i64 1
  %127 = bitcast %"struct.std::__1::__hash_node_base.1018"* %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = tail call i64 @llvm.ctpop.i64(i64 %110) #11, !range !15
  %130 = icmp ugt i64 %129, 1
  br i1 %130, label %134, label %131

131:                                              ; preds = %125
  %132 = add i64 %110, -1
  %133 = and i64 %128, %132
  br label %138

134:                                              ; preds = %125
  %135 = icmp ult i64 %128, %110
  br i1 %135, label %138, label %136

136:                                              ; preds = %134
  %137 = urem i64 %128, %110
  br label %138

138:                                              ; preds = %131, %134, %136
  %139 = phi i64 [ %133, %131 ], [ %137, %136 ], [ %128, %134 ]
  %140 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %112, align 8
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %140, i64 %139
  %142 = bitcast %"struct.std::__1::__hash_node_base.1018"** %141 to i8**
  br label %148

143:                                              ; preds = %109
  %144 = bitcast %"struct.std::__1::__hash_node_base.1018"* %115 to i64*
  %145 = load i64, i64* %144, align 8
  %146 = bitcast i8* %68 to i64*
  store i64 %145, i64* %146, align 8
  %147 = bitcast %"struct.std::__1::__hash_node_base.1018"* %115 to i8**
  br label %148

148:                                              ; preds = %138, %143
  %149 = phi i8** [ %147, %143 ], [ %142, %138 ]
  store i8* %68, i8** %149, align 8
  br label %150

150:                                              ; preds = %148, %117
  %151 = bitcast i8* %68 to %"struct.std::__1::__hash_node_base.1018"*
  %152 = load i64, i64* %76, align 8
  %153 = add i64 %152, 1
  store i64 %153, i64* %76, align 8
  br label %154

154:                                              ; preds = %61, %150
  %155 = phi i8 [ 1, %150 ], [ 0, %61 ]
  %156 = phi %"struct.std::__1::__hash_node_base.1018"* [ %151, %150 ], [ %44, %61 ]
  %157 = insertvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } undef, %"struct.std::__1::__hash_node_base.1018"* %156, 0
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1018"*, i8 } %157, i8 %155, 1
  ret { %"struct.std::__1::__hash_node_base.1018"*, i8 } %158
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.1014"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.1014"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1014"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1018"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1020", %"class.std::__1::__bucket_list_deallocator.1020"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !202

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1018"* null, %"struct.std::__1::__hash_node_base.1018"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1018"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1018"* %36, %"struct.std::__1::__hash_node_base.1018"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.1018"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1018"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1018"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.1018"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.1018"* %82, %"struct.std::__1::__hash_node_base.1018"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.1018"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.1018"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.1018"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.1018"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.1018"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.1018"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1018"* %80, %"struct.std::__1::__hash_node_base.1018"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.1018"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1018", %"struct.std::__1::__hash_node_base.1018"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1018"*, %"struct.std::__1::__hash_node_base.1018"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1018"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.1014", %"class.std::__1::__hash_table.1014"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.1018"**, %"struct.std::__1::__hash_node_base.1018"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.1018"** null, %"struct.std::__1::__hash_node_base.1018"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.1018"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.1018"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1020", %"class.std::__1::__bucket_list_deallocator.1020"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1328"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.944"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.944"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.944"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.944"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.944"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !203
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1328"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !203
  %75 = load i64, i64* %74, align 8, !noalias !203
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !203
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !203
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !203
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.944"**
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %81, align 8, !noalias !203
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !15
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.944"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.944"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.944"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.944"* %124, %"struct.std::__1::__hash_node_base.944"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.944"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.944"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !15
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.944"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.944"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.944"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.944"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.944"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } undef, %"struct.std::__1::__hash_node_base.944"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.944"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.940"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !15
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !15
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !15
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE8__rehashEm(%"class.std::__1::__hash_table.940"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %134, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #10
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.940"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.944"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.944"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.946", %"class.std::__1::__bucket_list_deallocator.946"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !206

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.944"* %38, null
  br i1 %39, label %142, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.944"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !15
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.944"* %36, %"struct.std::__1::__hash_node_base.944"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.944"* %75, null
  br i1 %76, label %142, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br label %79

79:                                               ; preds = %77, %128
  %80 = phi %"struct.std::__1::__hash_node_base.944"* [ %75, %77 ], [ %132, %128 ]
  %81 = phi i64 [ %71, %77 ], [ %130, %128 ]
  %82 = phi %"struct.std::__1::__hash_node_base.944"* [ %38, %77 ], [ %129, %128 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.944"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  br i1 %62, label %88, label %86

86:                                               ; preds = %79
  %87 = and i64 %85, %78
  br label %92

88:                                               ; preds = %79
  %89 = icmp ult i64 %85, %1
  br i1 %89, label %92, label %90

90:                                               ; preds = %88
  %91 = urem i64 %85, %1
  br label %92

92:                                               ; preds = %86, %88, %90
  %93 = phi i64 [ %87, %86 ], [ %91, %90 ], [ %85, %88 ]
  %94 = icmp eq i64 %93, %81
  br i1 %94, label %128, label %95

95:                                               ; preds = %92
  %96 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %97 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %96, i64 %93
  %98 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %97, align 8
  %99 = icmp eq %"struct.std::__1::__hash_node_base.944"* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %80, i64 2
  %102 = bitcast %"struct.std::__1::__hash_node_base.944"* %101 to %"class.spvtools::opt::BasicBlock"**
  br label %104

103:                                              ; preds = %95
  store %"struct.std::__1::__hash_node_base.944"* %82, %"struct.std::__1::__hash_node_base.944"** %97, align 8
  br label %128

104:                                              ; preds = %100, %109
  %105 = phi %"struct.std::__1::__hash_node_base.944"* [ %107, %109 ], [ %80, %100 ]
  %106 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %105, i64 0, i32 0
  %107 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %106, align 8
  %108 = icmp eq %"struct.std::__1::__hash_node_base.944"* %107, null
  br i1 %108, label %115, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %107, i64 2
  %111 = bitcast %"struct.std::__1::__hash_node_base.944"* %110 to %"class.spvtools::opt::BasicBlock"**
  %112 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %102, align 8
  %113 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %111, align 8
  %114 = icmp eq %"class.spvtools::opt::BasicBlock"* %112, %113
  br i1 %114, label %104, label %115

115:                                              ; preds = %104, %109
  %116 = ptrtoint %"struct.std::__1::__hash_node_base.944"* %107 to i64
  %117 = bitcast %"struct.std::__1::__hash_node_base.944"* %105 to i64*
  %118 = bitcast %"struct.std::__1::__hash_node_base.944"* %82 to i64*
  store i64 %116, i64* %118, align 8
  %119 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %119, i64 %93
  %121 = bitcast %"struct.std::__1::__hash_node_base.944"** %120 to i64**
  %122 = load i64*, i64** %121, align 8
  %123 = load i64, i64* %122, align 8
  store i64 %123, i64* %117, align 8
  %124 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %11, align 8
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %124, i64 %93
  %126 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %125, align 8
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %126, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.944"* %80, %"struct.std::__1::__hash_node_base.944"** %127, align 8
  br label %128

128:                                              ; preds = %92, %115, %103
  %129 = phi %"struct.std::__1::__hash_node_base.944"* [ %80, %103 ], [ %82, %115 ], [ %80, %92 ]
  %130 = phi i64 [ %93, %103 ], [ %81, %115 ], [ %81, %92 ]
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %129, i64 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.944"* %132, null
  br i1 %133, label %142, label %79

134:                                              ; preds = %2
  %135 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %135, align 8
  store %"struct.std::__1::__hash_node_base.944"** null, %"struct.std::__1::__hash_node_base.944"*** %135, align 8
  %137 = icmp eq %"struct.std::__1::__hash_node_base.944"** %136, null
  br i1 %137, label %140, label %138

138:                                              ; preds = %134
  %139 = bitcast %"struct.std::__1::__hash_node_base.944"** %136 to i8*
  tail call void @_ZdlPv(i8* %139) #10
  br label %140

140:                                              ; preds = %134, %138
  %141 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.946", %"class.std::__1::__bucket_list_deallocator.946"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %141, align 8
  br label %142

142:                                              ; preds = %128, %70, %35, %140
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.944"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE25__emplace_unique_key_argsIS5_JRKNS_21piecewise_construct_tENS_5tupleIJOS5_EEENSO_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS8_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.940"*, %"class.spvtools::opt::BasicBlock"** dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple.1379"* dereferenceable(8), %"class.std::__1::tuple.1131"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.spvtools::opt::BasicBlock"** %1 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = lshr i64 %7, 32
  %9 = shl i64 %7, 3
  %10 = and i64 %9, 4294967288
  %11 = add nuw nsw i64 %10, 8
  %12 = xor i64 %11, %8
  %13 = mul i64 %12, -7070675565921424023
  %14 = lshr i64 %13, 47
  %15 = xor i64 %13, %8
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = lshr i64 %17, 47
  %19 = xor i64 %18, %17
  %20 = mul i64 %19, -7070675565921424023
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  %24 = inttoptr i64 %7 to %"class.spvtools::opt::BasicBlock"*
  br i1 %23, label %69, label %25

25:                                               ; preds = %5
  %26 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %27 = icmp ugt i64 %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  %29 = add i64 %22, -1
  %30 = and i64 %20, %29
  br label %35

31:                                               ; preds = %25
  %32 = icmp ult i64 %20, %22
  br i1 %32, label %35, label %33

33:                                               ; preds = %31
  %34 = urem i64 %20, %22
  br label %35

35:                                               ; preds = %28, %31, %33
  %36 = phi i64 [ %30, %28 ], [ %34, %33 ], [ %20, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %38, i64 %36
  %40 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.944"* %40, null
  br i1 %41, label %69, label %42

42:                                               ; preds = %35
  %43 = add i64 %22, -1
  br label %44

44:                                               ; preds = %42, %64
  %45 = phi %"struct.std::__1::__hash_node_base.944"* [ %47, %64 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %45, i64 0, i32 0
  %47 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %46, align 8
  %48 = icmp eq %"struct.std::__1::__hash_node_base.944"* %47, null
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %47, i64 1
  %51 = bitcast %"struct.std::__1::__hash_node_base.944"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, %20
  br i1 %53, label %64, label %54

54:                                               ; preds = %49
  br i1 %27, label %57, label %55

55:                                               ; preds = %54
  %56 = and i64 %52, %43
  br label %61

57:                                               ; preds = %54
  %58 = icmp ult i64 %52, %22
  br i1 %58, label %61, label %59

59:                                               ; preds = %57
  %60 = urem i64 %52, %22
  br label %61

61:                                               ; preds = %55, %57, %59
  %62 = phi i64 [ %56, %55 ], [ %60, %59 ], [ %52, %57 ]
  %63 = icmp eq i64 %62, %36
  br i1 %63, label %64, label %69

64:                                               ; preds = %49, %61
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %47, i64 2
  %66 = bitcast %"struct.std::__1::__hash_node_base.944"* %65 to %"class.spvtools::opt::BasicBlock"**
  %67 = load %"class.spvtools::opt::BasicBlock"*, %"class.spvtools::opt::BasicBlock"** %66, align 8
  %68 = icmp eq %"class.spvtools::opt::BasicBlock"* %67, %24
  br i1 %68, label %160, label %44

69:                                               ; preds = %44, %61, %35, %5
  %70 = phi i64 [ %36, %35 ], [ -6148914691236517206, %5 ], [ %36, %61 ], [ %36, %44 ]
  %71 = tail call i8* @_Znwm(i64 32) #10, !noalias !207
  %72 = getelementptr inbounds i8, i8* %71, i64 16
  %73 = bitcast %"class.std::__1::tuple.1379"* %3 to i64**
  %74 = load i64*, i64** %73, align 8, !noalias !207
  %75 = load i64, i64* %74, align 8, !noalias !207
  %76 = bitcast i8* %72 to i64*
  store i64 %75, i64* %76, align 8, !noalias !207
  %77 = getelementptr inbounds i8, i8* %71, i64 24
  %78 = bitcast i8* %77 to %"class.spvtools::opt::Instruction"**
  store %"class.spvtools::opt::Instruction"* null, %"class.spvtools::opt::Instruction"** %78, align 8, !noalias !207
  %79 = getelementptr inbounds i8, i8* %71, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %20, i64* %80, align 8, !noalias !207
  %81 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.944"**
  store %"struct.std::__1::__hash_node_base.944"* null, %"struct.std::__1::__hash_node_base.944"** %81, align 8, !noalias !207
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %22 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %23, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %69
  %93 = shl i64 %22, 1
  %94 = icmp ult i64 %22, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %22) #11, !range !15
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #11
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE6rehashEm(%"class.std::__1::__hash_table.940"* %0, i64 %104)
  %105 = load i64, i64* %21, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #11, !range !15
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, -1
  %110 = and i64 %109, %20
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %20, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %20, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %69
  %116 = phi i64 [ %22, %69 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %70, %69 ], [ %110, %108 ], [ %20, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.944"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.940", %"class.std::__1::__hash_table.940"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.944"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %71 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.944"* %124 to i8**
  store i8* %71, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.944"* %124, %"struct.std::__1::__hash_node_base.944"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.944"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944", %"struct.std::__1::__hash_node_base.944"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.944"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #11, !range !15
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.944"**, %"struct.std::__1::__hash_node_base.944"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.944"*, %"struct.std::__1::__hash_node_base.944"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.944"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.944"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %71 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.944"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %71, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %71 to %"struct.std::__1::__hash_node_base.944"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %64, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %64 ]
  %162 = phi %"struct.std::__1::__hash_node_base.944"* [ %157, %156 ], [ %47, %64 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } undef, %"struct.std::__1::__hash_node_base.944"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.944"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.944"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZNSt3__110__function16__policy_invokerIFvPN8spvtools3opt10BasicBlockEEE11__call_implINS0_20__default_alloc_funcIZNS3_15MergeReturnPass30HasNontrivialUnreachableBlocksEPNS3_8FunctionEE3$_6S6_EEEEvPKNS0_16__policy_storageES5_"(%"union.std::__1::__function::__policy_storage"* nocapture readonly, %"class.spvtools::opt::BasicBlock"*) #0 align 2 {
  %3 = alloca i64, align 8
  %4 = bitcast %"union.std::__1::__function::__policy_storage"* %0 to %"class.spvtools::utils::BitVector"**
  %5 = load %"class.spvtools::utils::BitVector"*, %"class.spvtools::utils::BitVector"** %4, align 8
  %6 = getelementptr inbounds %"class.spvtools::opt::BasicBlock", %"class.spvtools::opt::BasicBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.spvtools::opt::Instruction"*, %"class.spvtools::opt::Instruction"** %6, align 8
  %8 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 4
  %9 = load i8, i8* %8, align 1, !range !7
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.spvtools::opt::Instruction", %"class.spvtools::opt::Instruction"* %7, i64 0, i32 3
  %13 = load i8, i8* %12, align 4, !range !7
  %14 = zext i8 %13 to i32
  %15 = tail call i32 @_ZNK8spvtools3opt11Instruction20GetSingleWordOperandEj(%"class.spvtools::opt::Instruction"* %7, i32 %14) #11
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ %15, %11 ], [ 0, %2 ]
  %18 = lshr i32 %17, 6
  %19 = and i32 %17, 63
  %20 = zext i32 %18 to i64
  %21 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0
  %22 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast i64** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.spvtools::utils::BitVector"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = ashr exact i64 %27, 3
  %29 = icmp ugt i64 %28, %20
  %30 = inttoptr i64 %26 to i64*
  br i1 %29, label %46, label %31

31:                                               ; preds = %16
  %32 = add nuw nsw i32 %18, 1
  %33 = zext i32 %32 to i64
  %34 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #11
  store i64 0, i64* %3, align 8
  %35 = icmp ult i64 %28, %33
  br i1 %35, label %36, label %40

36:                                               ; preds = %31
  %37 = sub nsw i64 %33, %28
  call void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"* %21, i64 %37, i64* nonnull dereferenceable(8) %3) #11
  %38 = getelementptr inbounds %"class.spvtools::utils::BitVector", %"class.spvtools::utils::BitVector"* %5, i64 0, i32 0, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  br label %44

40:                                               ; preds = %31
  %41 = icmp ugt i64 %28, %33
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i64, i64* %30, i64 %33
  store i64* %43, i64** %22, align 8
  br label %44

44:                                               ; preds = %42, %40, %36
  %45 = phi i64* [ %39, %36 ], [ %30, %40 ], [ %30, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #11
  br label %46

46:                                               ; preds = %44, %16
  %47 = phi i64* [ %30, %16 ], [ %45, %44 ]
  %48 = getelementptr inbounds i64, i64* %47, i64 %20
  %49 = load i64, i64* %48, align 8
  %50 = zext i32 %19 to i64
  %51 = shl i64 1, %50
  %52 = and i64 %49, %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %56

54:                                               ; preds = %46
  %55 = or i64 %49, %51
  store i64 %55, i64* %48, align 8
  br label %56

56:                                               ; preds = %46, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorImNS_9allocatorImEEE8__appendEmRKm(%"class.std::__1::vector.900"*, i64, i64* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast i64* %2 to i8*
  %5 = bitcast i64* %2 to i8*
  %6 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = bitcast i64** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 1
  %10 = bitcast i64** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %8, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, %1
  br i1 %14, label %130, label %15

15:                                               ; preds = %3
  %16 = inttoptr i64 %11 to i64*
  %17 = inttoptr i64 %11 to i8*
  %18 = getelementptr inbounds i64, i64* %16, i64 %1
  %19 = icmp eq i64 %1, 0
  br i1 %19, label %128, label %20

20:                                               ; preds = %15
  %21 = shl nsw i64 %1, 3
  %22 = add i64 %21, -8
  %23 = lshr exact i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = icmp ult i64 %24, 4
  br i1 %25, label %26, label %47

26:                                               ; preds = %105, %47, %20
  %27 = phi i64* [ %16, %47 ], [ %16, %20 ], [ %59, %105 ]
  %28 = ptrtoint i64* %27 to i64
  %29 = add i64 %1, -1
  %30 = getelementptr i64, i64* %16, i64 %29
  %31 = ptrtoint i64* %30 to i64
  %32 = sub i64 %31, %28
  %33 = lshr i64 %32, 3
  %34 = add nuw nsw i64 %33, 1
  %35 = and i64 %34, 7
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %26, %37
  %38 = phi i64* [ %41, %37 ], [ %27, %26 ]
  %39 = phi i64 [ %42, %37 ], [ %35, %26 ]
  %40 = load i64, i64* %2, align 8
  store i64 %40, i64* %38, align 8
  %41 = getelementptr inbounds i64, i64* %38, i64 1
  %42 = add i64 %39, -1
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %44, label %37, !llvm.loop !210

44:                                               ; preds = %37, %26
  %45 = phi i64* [ %27, %26 ], [ %41, %37 ]
  %46 = icmp ult i64 %32, 56
  br i1 %46, label %107, label %109

47:                                               ; preds = %20
  %48 = shl nsw i64 %1, 3
  %49 = add i64 %48, -8
  %50 = lshr exact i64 %49, 3
  %51 = add nuw nsw i64 %50, 1
  %52 = getelementptr i64, i64* %16, i64 %51
  %53 = getelementptr i8, i8* %5, i64 1
  %54 = icmp ugt i8* %53, %17
  %55 = icmp ugt i64* %52, %2
  %56 = and i1 %54, %55
  br i1 %56, label %26, label %57

57:                                               ; preds = %47
  %58 = and i64 %24, 4611686018427387900
  %59 = getelementptr i64, i64* %16, i64 %58
  %60 = add nsw i64 %58, -4
  %61 = lshr exact i64 %60, 2
  %62 = add nuw nsw i64 %61, 1
  %63 = and i64 %62, 1
  %64 = icmp eq i64 %60, 0
  br i1 %64, label %92, label %65

65:                                               ; preds = %57
  %66 = sub nuw nsw i64 %62, %63
  %67 = load i64, i64* %2, align 8, !alias.scope !211
  %68 = insertelement <2 x i64> undef, i64 %67, i32 0
  %69 = shufflevector <2 x i64> %68, <2 x i64> undef, <2 x i32> zeroinitializer
  %70 = insertelement <2 x i64> undef, i64 %67, i32 0
  %71 = shufflevector <2 x i64> %70, <2 x i64> undef, <2 x i32> zeroinitializer
  %72 = load i64, i64* %2, align 8, !alias.scope !211
  %73 = insertelement <2 x i64> undef, i64 %72, i32 0
  %74 = shufflevector <2 x i64> %73, <2 x i64> undef, <2 x i32> zeroinitializer
  %75 = insertelement <2 x i64> undef, i64 %72, i32 0
  %76 = shufflevector <2 x i64> %75, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %77

77:                                               ; preds = %77, %65
  %78 = phi i64 [ 0, %65 ], [ %89, %77 ]
  %79 = phi i64 [ %66, %65 ], [ %90, %77 ]
  %80 = getelementptr i64, i64* %16, i64 %78
  %81 = bitcast i64* %80 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %81, align 8, !alias.scope !214, !noalias !211
  %82 = getelementptr i64, i64* %80, i64 2
  %83 = bitcast i64* %82 to <2 x i64>*
  store <2 x i64> %71, <2 x i64>* %83, align 8, !alias.scope !214, !noalias !211
  %84 = or i64 %78, 4
  %85 = getelementptr i64, i64* %16, i64 %84
  %86 = bitcast i64* %85 to <2 x i64>*
  store <2 x i64> %74, <2 x i64>* %86, align 8, !alias.scope !214, !noalias !211
  %87 = getelementptr i64, i64* %85, i64 2
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %76, <2 x i64>* %88, align 8, !alias.scope !214, !noalias !211
  %89 = add i64 %78, 8
  %90 = add i64 %79, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %92, label %77, !llvm.loop !216

92:                                               ; preds = %77, %57
  %93 = phi i64 [ 0, %57 ], [ %89, %77 ]
  %94 = icmp eq i64 %63, 0
  br i1 %94, label %105, label %95

95:                                               ; preds = %92
  %96 = getelementptr i64, i64* %16, i64 %93
  %97 = load i64, i64* %2, align 8, !alias.scope !211
  %98 = insertelement <2 x i64> undef, i64 %97, i32 0
  %99 = shufflevector <2 x i64> %98, <2 x i64> undef, <2 x i32> zeroinitializer
  %100 = insertelement <2 x i64> undef, i64 %97, i32 0
  %101 = shufflevector <2 x i64> %100, <2 x i64> undef, <2 x i32> zeroinitializer
  %102 = bitcast i64* %96 to <2 x i64>*
  store <2 x i64> %99, <2 x i64>* %102, align 8, !alias.scope !214, !noalias !211
  %103 = getelementptr i64, i64* %96, i64 2
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> %101, <2 x i64>* %104, align 8, !alias.scope !214, !noalias !211
  br label %105

105:                                              ; preds = %92, %95
  %106 = icmp eq i64 %24, %58
  br i1 %106, label %107, label %26

107:                                              ; preds = %44, %109, %105
  %108 = ptrtoint i64* %18 to i64
  br label %128

109:                                              ; preds = %44, %109
  %110 = phi i64* [ %126, %109 ], [ %45, %44 ]
  %111 = load i64, i64* %2, align 8
  store i64 %111, i64* %110, align 8
  %112 = getelementptr inbounds i64, i64* %110, i64 1
  %113 = load i64, i64* %2, align 8
  store i64 %113, i64* %112, align 8
  %114 = getelementptr inbounds i64, i64* %110, i64 2
  %115 = load i64, i64* %2, align 8
  store i64 %115, i64* %114, align 8
  %116 = getelementptr inbounds i64, i64* %110, i64 3
  %117 = load i64, i64* %2, align 8
  store i64 %117, i64* %116, align 8
  %118 = getelementptr inbounds i64, i64* %110, i64 4
  %119 = load i64, i64* %2, align 8
  store i64 %119, i64* %118, align 8
  %120 = getelementptr inbounds i64, i64* %110, i64 5
  %121 = load i64, i64* %2, align 8
  store i64 %121, i64* %120, align 8
  %122 = getelementptr inbounds i64, i64* %110, i64 6
  %123 = load i64, i64* %2, align 8
  store i64 %123, i64* %122, align 8
  %124 = getelementptr inbounds i64, i64* %110, i64 7
  %125 = load i64, i64* %2, align 8
  store i64 %125, i64* %124, align 8
  %126 = getelementptr inbounds i64, i64* %110, i64 8
  %127 = icmp eq i64* %126, %18
  br i1 %127, label %107, label %109, !llvm.loop !218

128:                                              ; preds = %15, %107
  %129 = phi i64 [ %108, %107 ], [ %11, %15 ]
  store i64 %129, i64* %10, align 8
  br label %292

130:                                              ; preds = %3
  %131 = bitcast %"class.std::__1::vector.900"* %0 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = sub i64 %11, %132
  %134 = ashr exact i64 %133, 3
  %135 = add i64 %134, %1
  %136 = icmp ugt i64 %135, 2305843009213693951
  br i1 %136, label %137, label %139

137:                                              ; preds = %130
  %138 = bitcast %"class.std::__1::vector.900"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %138) #12
  unreachable

139:                                              ; preds = %130
  %140 = sub i64 %8, %132
  %141 = ashr exact i64 %140, 3
  %142 = icmp ult i64 %141, 1152921504606846975
  br i1 %142, label %143, label %151

143:                                              ; preds = %139
  %144 = ashr exact i64 %140, 2
  %145 = icmp ult i64 %144, %135
  %146 = select i1 %145, i64 %135, i64 %144
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %156, label %148

148:                                              ; preds = %143
  %149 = icmp ugt i64 %146, 2305843009213693951
  br i1 %149, label %150, label %151

150:                                              ; preds = %148
  tail call void @abort() #12
  unreachable

151:                                              ; preds = %139, %148
  %152 = phi i64 [ %146, %148 ], [ 2305843009213693951, %139 ]
  %153 = shl i64 %152, 3
  %154 = tail call i8* @_Znwm(i64 %153) #10
  %155 = bitcast i8* %154 to i64*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i64 [ %152, %151 ], [ 0, %143 ]
  %158 = phi i64* [ %155, %151 ], [ null, %143 ]
  %159 = getelementptr inbounds i64, i64* %158, i64 %134
  %160 = getelementptr inbounds i64, i64* %158, i64 %157
  %161 = getelementptr inbounds i64, i64* %159, i64 %1
  %162 = shl nsw i64 %1, 3
  %163 = add i64 %162, -8
  %164 = lshr exact i64 %163, 3
  %165 = add nuw nsw i64 %164, 1
  %166 = icmp ult i64 %165, 4
  br i1 %166, label %229, label %167

167:                                              ; preds = %156
  %168 = bitcast i64* %159 to i8*
  %169 = shl nsw i64 %1, 3
  %170 = add i64 %169, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nsw i64 %134, %171
  %173 = add nsw i64 %172, 1
  %174 = getelementptr i64, i64* %158, i64 %173
  %175 = getelementptr i8, i8* %4, i64 1
  %176 = icmp ugt i8* %175, %168
  %177 = icmp ugt i64* %174, %2
  %178 = and i1 %176, %177
  br i1 %178, label %229, label %179

179:                                              ; preds = %167
  %180 = and i64 %165, 4611686018427387900
  %181 = getelementptr i64, i64* %159, i64 %180
  %182 = add nsw i64 %180, -4
  %183 = lshr exact i64 %182, 2
  %184 = add nuw nsw i64 %183, 1
  %185 = and i64 %184, 1
  %186 = icmp eq i64 %182, 0
  br i1 %186, label %214, label %187

187:                                              ; preds = %179
  %188 = sub nuw nsw i64 %184, %185
  %189 = load i64, i64* %2, align 8, !alias.scope !219
  %190 = insertelement <2 x i64> undef, i64 %189, i32 0
  %191 = shufflevector <2 x i64> %190, <2 x i64> undef, <2 x i32> zeroinitializer
  %192 = insertelement <2 x i64> undef, i64 %189, i32 0
  %193 = shufflevector <2 x i64> %192, <2 x i64> undef, <2 x i32> zeroinitializer
  %194 = load i64, i64* %2, align 8, !alias.scope !219
  %195 = insertelement <2 x i64> undef, i64 %194, i32 0
  %196 = shufflevector <2 x i64> %195, <2 x i64> undef, <2 x i32> zeroinitializer
  %197 = insertelement <2 x i64> undef, i64 %194, i32 0
  %198 = shufflevector <2 x i64> %197, <2 x i64> undef, <2 x i32> zeroinitializer
  br label %199

199:                                              ; preds = %199, %187
  %200 = phi i64 [ 0, %187 ], [ %211, %199 ]
  %201 = phi i64 [ %188, %187 ], [ %212, %199 ]
  %202 = getelementptr i64, i64* %159, i64 %200
  %203 = bitcast i64* %202 to <2 x i64>*
  store <2 x i64> %191, <2 x i64>* %203, align 8, !alias.scope !222, !noalias !219
  %204 = getelementptr i64, i64* %202, i64 2
  %205 = bitcast i64* %204 to <2 x i64>*
  store <2 x i64> %193, <2 x i64>* %205, align 8, !alias.scope !222, !noalias !219
  %206 = or i64 %200, 4
  %207 = getelementptr i64, i64* %159, i64 %206
  %208 = bitcast i64* %207 to <2 x i64>*
  store <2 x i64> %196, <2 x i64>* %208, align 8, !alias.scope !222, !noalias !219
  %209 = getelementptr i64, i64* %207, i64 2
  %210 = bitcast i64* %209 to <2 x i64>*
  store <2 x i64> %198, <2 x i64>* %210, align 8, !alias.scope !222, !noalias !219
  %211 = add i64 %200, 8
  %212 = add i64 %201, -2
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %199, !llvm.loop !224

214:                                              ; preds = %199, %179
  %215 = phi i64 [ 0, %179 ], [ %211, %199 ]
  %216 = icmp eq i64 %185, 0
  br i1 %216, label %227, label %217

217:                                              ; preds = %214
  %218 = getelementptr i64, i64* %159, i64 %215
  %219 = load i64, i64* %2, align 8, !alias.scope !219
  %220 = insertelement <2 x i64> undef, i64 %219, i32 0
  %221 = shufflevector <2 x i64> %220, <2 x i64> undef, <2 x i32> zeroinitializer
  %222 = insertelement <2 x i64> undef, i64 %219, i32 0
  %223 = shufflevector <2 x i64> %222, <2 x i64> undef, <2 x i32> zeroinitializer
  %224 = bitcast i64* %218 to <2 x i64>*
  store <2 x i64> %221, <2 x i64>* %224, align 8, !alias.scope !222, !noalias !219
  %225 = getelementptr i64, i64* %218, i64 2
  %226 = bitcast i64* %225 to <2 x i64>*
  store <2 x i64> %223, <2 x i64>* %226, align 8, !alias.scope !222, !noalias !219
  br label %227

227:                                              ; preds = %214, %217
  %228 = icmp eq i64 %165, %180
  br i1 %228, label %270, label %229

229:                                              ; preds = %227, %167, %156
  %230 = phi i64* [ %159, %167 ], [ %159, %156 ], [ %181, %227 ]
  %231 = ptrtoint i64* %230 to i64
  %232 = add i64 %134, %1
  %233 = add i64 %232, -1
  %234 = getelementptr i64, i64* %158, i64 %233
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %231
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 7
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %248, label %241

241:                                              ; preds = %229, %241
  %242 = phi i64* [ %245, %241 ], [ %230, %229 ]
  %243 = phi i64 [ %246, %241 ], [ %239, %229 ]
  %244 = load i64, i64* %2, align 8
  store i64 %244, i64* %242, align 8
  %245 = getelementptr inbounds i64, i64* %242, i64 1
  %246 = add i64 %243, -1
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %241, !llvm.loop !225

248:                                              ; preds = %241, %229
  %249 = phi i64* [ %230, %229 ], [ %245, %241 ]
  %250 = icmp ult i64 %236, 56
  br i1 %250, label %270, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64* [ %268, %251 ], [ %249, %248 ]
  %253 = load i64, i64* %2, align 8
  store i64 %253, i64* %252, align 8
  %254 = getelementptr inbounds i64, i64* %252, i64 1
  %255 = load i64, i64* %2, align 8
  store i64 %255, i64* %254, align 8
  %256 = getelementptr inbounds i64, i64* %252, i64 2
  %257 = load i64, i64* %2, align 8
  store i64 %257, i64* %256, align 8
  %258 = getelementptr inbounds i64, i64* %252, i64 3
  %259 = load i64, i64* %2, align 8
  store i64 %259, i64* %258, align 8
  %260 = getelementptr inbounds i64, i64* %252, i64 4
  %261 = load i64, i64* %2, align 8
  store i64 %261, i64* %260, align 8
  %262 = getelementptr inbounds i64, i64* %252, i64 5
  %263 = load i64, i64* %2, align 8
  store i64 %263, i64* %262, align 8
  %264 = getelementptr inbounds i64, i64* %252, i64 6
  %265 = load i64, i64* %2, align 8
  store i64 %265, i64* %264, align 8
  %266 = getelementptr inbounds i64, i64* %252, i64 7
  %267 = load i64, i64* %2, align 8
  store i64 %267, i64* %266, align 8
  %268 = getelementptr inbounds i64, i64* %252, i64 8
  %269 = icmp eq i64* %161, %268
  br i1 %269, label %270, label %251, !llvm.loop !226

270:                                              ; preds = %248, %251, %227
  %271 = ptrtoint i64* %160 to i64
  %272 = ptrtoint i64* %161 to i64
  %273 = getelementptr inbounds %"class.std::__1::vector.900", %"class.std::__1::vector.900"* %0, i64 0, i32 0, i32 0
  %274 = load i64*, i64** %273, align 8
  %275 = load i64, i64* %10, align 8
  %276 = ptrtoint i64* %274 to i64
  %277 = sub i64 %275, %276
  %278 = ashr exact i64 %277, 3
  %279 = sub nsw i64 0, %278
  %280 = getelementptr inbounds i64, i64* %159, i64 %279
  %281 = ptrtoint i64* %280 to i64
  %282 = icmp sgt i64 %277, 0
  br i1 %282, label %283, label %287

283:                                              ; preds = %270
  %284 = bitcast i64* %280 to i8*
  %285 = bitcast i64* %274 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %284, i8* align 8 %285, i64 %277, i1 false) #11
  %286 = load i64*, i64** %273, align 8
  br label %287

287:                                              ; preds = %270, %283
  %288 = phi i64* [ %274, %270 ], [ %286, %283 ]
  store i64 %281, i64* %131, align 8
  store i64 %272, i64* %10, align 8
  store i64 %271, i64* %7, align 8
  %289 = icmp eq i64* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %287
  %291 = bitcast i64* %288 to i8*
  tail call void @_ZdlPv(i8* %291) #10
  br label %292

292:                                              ; preds = %290, %287, %128
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!5 = distinct !{!5, !6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!6 = distinct !{!6, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!7 = !{i8 0, i8 2}
!8 = !{!9, !11, !13}
!9 = distinct !{!9, !10, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!10 = distinct !{!10, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!11 = distinct !{!11, !12, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!12 = distinct !{!12, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!13 = distinct !{!13, !14, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!14 = distinct !{!14, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!15 = !{i64 0, i64 65}
!16 = !{!17, !19, !21}
!17 = distinct !{!17, !18, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!19 = distinct !{!19, !20, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!21 = distinct !{!21, !22, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!25 = distinct !{!25, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!28 = distinct !{!28, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!31 = distinct !{!31, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!34 = distinct !{!34, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!37 = distinct !{!37, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!40 = distinct !{!40, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!43 = distinct !{!43, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!44 = !{!45, !47, !49}
!45 = distinct !{!45, !46, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!47 = distinct !{!47, !48, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!48 = distinct !{!48, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!49 = distinct !{!49, !50, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!50 = distinct !{!50, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!51 = !{!47, !49}
!52 = !{!53, !55, !57}
!53 = distinct !{!53, !54, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!54 = distinct !{!54, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!55 = distinct !{!55, !56, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!56 = distinct !{!56, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!57 = distinct !{!57, !58, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!58 = distinct !{!58, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!59 = !{!60, !62, !64}
!60 = distinct !{!60, !61, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!61 = distinct !{!61, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!62 = distinct !{!62, !63, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!63 = distinct !{!63, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!64 = distinct !{!64, !65, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!65 = distinct !{!65, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!66 = !{!62, !64}
!67 = !{!68, !70, !72}
!68 = distinct !{!68, !69, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!69 = distinct !{!69, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!70 = distinct !{!70, !71, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!71 = distinct !{!71, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!72 = distinct !{!72, !73, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!76 = distinct !{!76, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!79 = distinct !{!79, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!82 = distinct !{!82, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!85 = distinct !{!85, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!88 = distinct !{!88, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!91 = distinct !{!91, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!94 = distinct !{!94, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!95 = !{!96, !98}
!96 = distinct !{!96, !97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!97 = distinct !{!97, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!98 = distinct !{!98, !99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!99 = distinct !{!99, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!100 = !{!101, !103, !105}
!101 = distinct !{!101, !102, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!102 = distinct !{!102, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!103 = distinct !{!103, !104, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!104 = distinct !{!104, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!105 = distinct !{!105, !106, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!106 = distinct !{!106, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!107 = !{!108, !110}
!108 = distinct !{!108, !109, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!109 = distinct !{!109, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!110 = distinct !{!110, !111, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!111 = distinct !{!111, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!112 = !{!113, !115, !117}
!113 = distinct !{!113, !114, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv: argument 0"}
!114 = distinct !{!114, !"_ZN8spvtools5utils13IntrusiveListINS_3opt11InstructionEE5beginEv"}
!115 = distinct !{!115, !116, !"_ZN8spvtools3opt15InstructionList5beginEv: argument 0"}
!116 = distinct !{!116, !"_ZN8spvtools3opt15InstructionList5beginEv"}
!117 = distinct !{!117, !118, !"_ZN8spvtools3opt10BasicBlock5beginEv: argument 0"}
!118 = distinct !{!118, !"_ZN8spvtools3opt10BasicBlock5beginEv"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!121 = distinct !{!121, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__16__treeIjNS_4lessIjEENS_9allocatorIjEEE16__construct_nodeIJjEEENS_10unique_ptrINS_11__tree_nodeIjPvEENS_22__tree_node_destructorINS3_ISA_EEEEEEDpOT_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__14listIPN8spvtools3opt10BasicBlockENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!133 = distinct !{!133, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!136 = distinct !{!136, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!137 = !{!138}
!138 = distinct !{!138, !139, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!139 = distinct !{!139, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!140 = !{!141}
!141 = distinct !{!141, !142, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!142 = distinct !{!142, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!143 = !{!144}
!144 = distinct !{!144, !145, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!145 = distinct !{!145, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!148 = distinct !{!148, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!151 = distinct !{!151, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!152 = !{!153}
!153 = distinct !{!153, !154, !"_ZN8spvtools3opt10BasicBlock4tailEv: argument 0"}
!154 = distinct !{!154, !"_ZN8spvtools3opt10BasicBlock4tailEv"}
!155 = !{!156}
!156 = distinct !{!156, !157, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!157 = distinct !{!157, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt11InstructionEPNS3_10BasicBlockEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!158 = distinct !{!158, !159}
!159 = !{!"llvm.loop.unroll.disable"}
!160 = !{!161}
!161 = distinct !{!161, !162, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_: argument 0"}
!162 = distinct !{!162, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjNS_6vectorIjNS_9allocatorIjEEEEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS3_IS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINS3_IST_EEEEEEmOT_DpOT0_"}
!163 = distinct !{!163, !159}
!164 = distinct !{!164, !159}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!167 = distinct !{!167, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIjPN8spvtools3opt10BasicBlockEEENS_22__unordered_map_hasherIjS6_NS_4hashIjEENS_8equal_toIjEELb1EEENS_21__unordered_map_equalIjS6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKjEEENSM_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISU_EEEEEEmOT_DpOT0_"}
!168 = distinct !{!168, !159}
!169 = distinct !{!169, !159}
!170 = distinct !{!170, !159}
!171 = distinct !{!171, !159}
!172 = distinct !{!172, !159}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!175 = distinct !{!175, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIRKjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!176 = distinct !{!176, !159}
!177 = !{!178, !180}
!178 = distinct !{!178, !179, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!179 = distinct !{!179, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!180 = distinct !{!180, !181, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!181 = distinct !{!181, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass7ProcessEvE3$_0FbPNS5_8FunctionEEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_: argument 0"}
!184 = distinct !{!184, !"_ZNSt3__112__hash_tableIjNS_4hashIjEENS_8equal_toIjEENS_9allocatorIjEEE21__construct_node_hashIjJEEENS_10unique_ptrINS_11__hash_nodeIjPvEENS_22__hash_node_destructorINS5_ISC_EEEEEEmOT_DpOT0_"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISZ_EEEEEEmOT_DpOT0_: argument 0"}
!187 = distinct !{!187, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockENS_3setIjNS_4lessIjEENS_9allocatorIjEEEEEENS_22__unordered_map_hasherIS5_SC_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_SC_SH_SF_Lb1EEENS9_ISC_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSR_IJEEEEEENS_10unique_ptrINS_11__hash_nodeISC_PvEENS_22__hash_node_destructorINS9_ISZ_EEEEEEmOT_DpOT0_"}
!188 = distinct !{!188, !159}
!189 = !{!190, !192}
!190 = distinct !{!190, !191, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!191 = distinct !{!191, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!192 = distinct !{!192, !193, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!193 = distinct !{!193, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_2FvPS9_EEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!194 = !{!195, !197}
!195 = distinct !{!195, !196, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm: argument 0"}
!196 = distinct !{!196, !"_ZNSt3__123__builtin_new_allocator16__allocate_bytesEmm"}
!197 = distinct !{!197, !198, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm: argument 0"}
!198 = distinct !{!198, !"_ZNSt3__123__builtin_new_allocator15__allocate_typeINS_10__function20__default_alloc_funcIZN8spvtools3opt15MergeReturnPass21CreatePhiNodesForInstEPNS5_10BasicBlockERNS5_11InstructionEE3$_3FvPjEEEEENS_10unique_ptrIvNS0_21__builtin_new_deleterEEEm"}
!199 = !{!200}
!200 = distinct !{!200, !201, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!201 = distinct !{!201, !"_ZNSt3__112__hash_tableIPN8spvtools3opt10BasicBlockENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!202 = distinct !{!202, !159}
!203 = !{!204}
!204 = distinct !{!204, !205, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_: argument 0"}
!205 = distinct !{!205, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISW_EEEEEEmOT_DpOT0_"}
!206 = distinct !{!206, !159}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_: argument 0"}
!209 = distinct !{!209, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIPN8spvtools3opt10BasicBlockEPNS3_11InstructionEEENS_22__unordered_map_hasherIS5_S8_NS_4hashIS5_EENS_8equal_toIS5_EELb1EEENS_21__unordered_map_equalIS5_S8_SD_SB_Lb1EEENS_9allocatorIS8_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS8_PvEENS_22__hash_node_destructorINSH_ISV_EEEEEEmOT_DpOT0_"}
!210 = distinct !{!210, !159}
!211 = !{!212}
!212 = distinct !{!212, !213}
!213 = distinct !{!213, !"LVerDomain"}
!214 = !{!215}
!215 = distinct !{!215, !213}
!216 = distinct !{!216, !217}
!217 = !{!"llvm.loop.isvectorized", i32 1}
!218 = distinct !{!218, !217}
!219 = !{!220}
!220 = distinct !{!220, !221}
!221 = distinct !{!221, !"LVerDomain"}
!222 = !{!223}
!223 = distinct !{!223, !221}
!224 = distinct !{!224, !217}
!225 = distinct !{!225, !159}
!226 = distinct !{!226, !217}
