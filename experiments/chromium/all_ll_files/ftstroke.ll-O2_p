; ModuleID = '../../third_party/freetype/src/src/base/ftstroke.c'
source_filename = "../../third_party/freetype/src/src/base/ftstroke.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.FT_Glyph_Class_ = type { i64, i32, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphRec_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_GlyphRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_GlyphRec_*, %struct.FT_GlyphSlotRec_*)* }
%struct.FT_GlyphRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_Glyph_Class_*, i32, %struct.FT_Vector_ }
%struct.FT_LibraryRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i32, [32 x %struct.FT_ModuleRec_*], %struct.FT_ListRec_, %struct.FT_RendererRec_*, %struct.FT_ModuleRec_*, [4 x i32 (i8*)*], [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_RendererRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Renderer_Class_*, i32, %struct.FT_Glyph_Class_, %struct.FT_RasterRec_*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)* }
%struct.FT_ModuleRec_ = type { %struct.FT_Module_Class_*, %struct.FT_LibraryRec_*, %struct.FT_MemoryRec_* }
%struct.FT_Module_Class_ = type { i64, i64, i8*, i64, i64, i8*, i32 (%struct.FT_ModuleRec_*)*, void (%struct.FT_ModuleRec_*)*, i8* (%struct.FT_ModuleRec_*, i8*)* }
%struct.FT_Renderer_Class_ = type { %struct.FT_Module_Class_, i32, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_Matrix_*, %struct.FT_Vector_*)*, void (%struct.FT_RendererRec_*, %struct.FT_GlyphSlotRec_*, %struct.FT_BBox_*)*, i32 (%struct.FT_RendererRec_*, i64, i8*)*, %struct.FT_Raster_Funcs_* }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type { i8*, i32, %struct.FT_Size_Metrics_ }
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type { %struct.FT_ModuleRec_, %struct.FT_Driver_ClassRec_*, %struct.FT_ListRec_, %struct.FT_GlyphLoaderRec_* }
%struct.FT_Driver_ClassRec_ = type { %struct.FT_Module_Class_, i64, i64, i64, i32 (%struct.FT_StreamRec_*, %struct.FT_FaceRec_*, i32, i32, %struct.FT_Parameter_*)*, void (%struct.FT_FaceRec_*)*, i32 (%struct.FT_SizeRec_*)*, void (%struct.FT_SizeRec_*)*, i32 (%struct.FT_GlyphSlotRec_*)*, void (%struct.FT_GlyphSlotRec_*)*, i32 (%struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, i32, i32)*, i32 (%struct.FT_FaceRec_*, i32, i32, %struct.FT_Vector_*)*, i32 (%struct.FT_FaceRec_*, %struct.FT_StreamRec_*)*, i32 (%struct.FT_FaceRec_*, i32, i32, i32, i64*)*, i32 (%struct.FT_SizeRec_*, %struct.FT_Size_RequestRec_*)*, i32 (%struct.FT_SizeRec_*, i64)* }
%struct.FT_Parameter_ = type { i64, i8* }
%struct.FT_Size_RequestRec_ = type { i32, i64, i64, i32, i32 }
%struct.FT_GlyphLoaderRec_ = type { %struct.FT_MemoryRec_*, i32, i32, i32, i8, %struct.FT_GlyphLoadRec_, %struct.FT_GlyphLoadRec_, i8* }
%struct.FT_GlyphLoadRec_ = type { %struct.FT_Outline_, %struct.FT_Vector_*, %struct.FT_Vector_*, i32, %struct.FT_SubGlyphRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_Face_InternalRec_ = type { %struct.FT_Matrix_, %struct.FT_Vector_, i32, %struct.FT_ServiceCacheRec_, %struct.FT_Incremental_InterfaceRec_*, i8, i32, [5 x i8], void (%struct.FT_Bitmap_*, i8*)*, i32 }
%struct.FT_Matrix_ = type { i64, i64, i64, i64 }
%struct.FT_ServiceCacheRec_ = type { i8*, i8*, i8*, i8*, i8*, i8* }
%struct.FT_Incremental_InterfaceRec_ = type { %struct.FT_Incremental_FuncsRec_*, %struct.FT_IncrementalRec_* }
%struct.FT_Incremental_FuncsRec_ = type { i32 (%struct.FT_IncrementalRec_*, i32, %struct.FT_Data_*)*, void (%struct.FT_IncrementalRec_*, %struct.FT_Data_*)*, i32 (%struct.FT_IncrementalRec_*, i32, i8, %struct.FT_Incremental_MetricsRec_*)* }
%struct.FT_Data_ = type { i8*, i32 }
%struct.FT_Incremental_MetricsRec_ = type { i64, i64, i64, i64 }
%struct.FT_IncrementalRec_ = type opaque
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type { i32, i16, i32, i32, %struct.FT_Matrix_ }
%struct.FT_Slot_InternalRec_ = type { %struct.FT_GlyphLoaderRec_*, i32, i8, %struct.FT_Matrix_, %struct.FT_Vector_, i8*, i32 }
%struct.FT_Raster_Funcs_ = type { i32, i32 (i8*, %struct.FT_RasterRec_**)*, void (%struct.FT_RasterRec_*, i8*, i64)*, i32 (%struct.FT_RasterRec_*, i64, i8*)*, i32 (%struct.FT_RasterRec_*, %struct.FT_Raster_Params_*)*, void (%struct.FT_RasterRec_*)* }
%struct.FT_RasterRec_ = type opaque
%struct.FT_Raster_Params_ = type { %struct.FT_Bitmap_*, i8*, i32, void (i32, i32, %struct.FT_Span_*, i8*)*, void (i32, i32, %struct.FT_Span_*, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i8*)*, i8*, %struct.FT_BBox_ }
%struct.FT_Span_ = type { i16, i16, i8 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_StrokerRec_ = type { i64, i64, %struct.FT_Vector_, i64, i8, i8, i64, %struct.FT_Vector_, i64, i8, i32, i32, i32, i64, i64, [2 x %struct.FT_StrokeBorderRec_], %struct.FT_LibraryRec_* }
%struct.FT_StrokeBorderRec_ = type { i32, i32, %struct.FT_Vector_*, i8*, i8, i32, %struct.FT_MemoryRec_*, i8 }

@ft_outline_glyph_class = external constant %struct.FT_Glyph_Class_, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_GetInsideBorder(%struct.FT_Outline_*) local_unnamed_addr #0 {
  %2 = tail call i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* %0) #4
  %3 = icmp eq i32 %2, 0
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Outline_GetOutsideBorder(%struct.FT_Outline_*) local_unnamed_addr #0 {
  %2 = tail call i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* %0) #4
  %3 = icmp ne i32 %2, 0
  %4 = zext i1 %3 to i32
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_New(%struct.FT_LibraryRec_*, %struct.FT_StrokerRec_**) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #4
  store i32 -1431655766, i32* %3, align 4
  %5 = icmp eq %struct.FT_LibraryRec_* %0, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = icmp eq %struct.FT_StrokerRec_** %1, null
  br i1 %7, label %31, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %0, i64 0, i32 0
  %10 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %9, align 8
  %11 = call i8* @ft_mem_alloc(%struct.FT_MemoryRec_* %10, i64 216, i32* nonnull %3) #4
  %12 = load i32, i32* %3, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds i8, i8* %11, i64 208
  %16 = bitcast i8* %15 to %struct.FT_LibraryRec_**
  store %struct.FT_LibraryRec_* %0, %struct.FT_LibraryRec_** %16, align 8
  %17 = getelementptr inbounds i8, i8* %11, i64 112
  %18 = getelementptr inbounds i8, i8* %11, i64 144
  %19 = bitcast i8* %18 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %10, %struct.FT_MemoryRec_** %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 140
  %21 = bitcast i8* %20 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #4
  store i32 -1, i32* %21, align 4
  %22 = getelementptr inbounds i8, i8* %11, i64 152
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 160
  %24 = getelementptr inbounds i8, i8* %11, i64 192
  %25 = bitcast i8* %24 to %struct.FT_MemoryRec_**
  store %struct.FT_MemoryRec_* %10, %struct.FT_MemoryRec_** %25, align 8
  %26 = getelementptr inbounds i8, i8* %11, i64 188
  %27 = bitcast i8* %26 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #4
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds i8, i8* %11, i64 200
  store i8 0, i8* %28, align 8
  br label %29

29:                                               ; preds = %8, %14
  %30 = bitcast %struct.FT_StrokerRec_** %1 to i8**
  store i8* %11, i8** %30, align 8
  br label %31

31:                                               ; preds = %6, %2, %29
  %32 = phi i32 [ %12, %29 ], [ 33, %2 ], [ 6, %6 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #4
  ret i32 %32
}

declare hidden i8* @ft_mem_alloc(%struct.FT_MemoryRec_*, i64, i32*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FT_Stroker_Set(%struct.FT_StrokerRec_*, i64, i32, i32, i64) local_unnamed_addr #3 {
  %6 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %6, label %21, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 10
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  store i32 %3, i32* %10, align 8
  %11 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 13
  %12 = icmp sgt i64 %4, 65536
  %13 = select i1 %12, i64 %4, i64 65536
  store i64 %13, i64* %11, align 8
  %14 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 12
  store i32 %3, i32* %14, align 4
  %15 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  store i32 -1, i32* %16, align 4
  %17 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 7
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  store i32 0, i32* %18, align 8
  %19 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  store i32 -1, i32* %19, align 4
  %20 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 7
  store i8 0, i8* %20, align 8
  br label %21

21:                                               ; preds = %5, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @FT_Stroker_Rewind(%struct.FT_StrokerRec_*) local_unnamed_addr #3 {
  %2 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 7
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  store i32 -1, i32* %8, align 4
  %9 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 7
  store i8 0, i8* %9, align 8
  br label %10

10:                                               ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stroker_Done(%struct.FT_StrokerRec_*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %2, label %31, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 16
  %5 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %4, align 8
  %6 = getelementptr inbounds %struct.FT_LibraryRec_, %struct.FT_LibraryRec_* %5, i64 0, i32 0
  %7 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %6, align 8
  %8 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 6
  %9 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %8, align 8
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %11 = bitcast %struct.FT_Vector_** %10 to i8**
  %12 = load i8*, i8** %11, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %12) #4
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %10, align 8
  %13 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %14 = load i8*, i8** %13, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %9, i8* %14) #4
  store i8* null, i8** %13, align 8
  %15 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  store i32 0, i32* %15, align 8
  %16 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 1
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  store i32 -1, i32* %17, align 4
  %18 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 7
  store i8 0, i8* %18, align 8
  %19 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 6
  %20 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %19, align 8
  %21 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %22 = bitcast %struct.FT_Vector_** %21 to i8**
  %23 = load i8*, i8** %22, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %20, i8* %23) #4
  store %struct.FT_Vector_* null, %struct.FT_Vector_** %21, align 8
  %24 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %25 = load i8*, i8** %24, align 8
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %20, i8* %25) #4
  store i8* null, i8** %24, align 8
  %26 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 1
  store i32 0, i32* %27, align 4
  %28 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  store i32 -1, i32* %28, align 4
  %29 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 7
  store i8 0, i8* %29, align 8
  store %struct.FT_LibraryRec_* null, %struct.FT_LibraryRec_** %4, align 8
  %30 = bitcast %struct.FT_StrokerRec_* %0 to i8*
  tail call void @ft_mem_free(%struct.FT_MemoryRec_* %7, i8* nonnull %30) #4
  br label %31

31:                                               ; preds = %1, %3
  ret void
}

declare hidden void @ft_mem_free(%struct.FT_MemoryRec_*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_LineTo(%struct.FT_StrokerRec_*, %struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.FT_Vector_*
  %6 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #4
  %7 = getelementptr inbounds <2 x i64>, <2 x i64>* %4, i64 0, i64 0
  %8 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 1
  %9 = icmp ne %struct.FT_StrokerRec_* %0, null
  %10 = icmp ne %struct.FT_Vector_* %1, null
  %11 = and i1 %9, %10
  %12 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %12, i8 -86, i64 16, i1 false)
  br i1 %11, label %13, label %149

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %15 = bitcast %struct.FT_Vector_* %1 to <2 x i64>*
  %16 = load <2 x i64>, <2 x i64>* %15, align 8
  %17 = bitcast %struct.FT_Vector_* %14 to <2 x i64>*
  %18 = load <2 x i64>, <2 x i64>* %17, align 8
  %19 = sub nsw <2 x i64> %16, %18
  store <2 x i64> %19, <2 x i64>* %4, align 16
  %20 = extractelement <2 x i64> %19, i32 0
  %21 = extractelement <2 x i64> %19, i32 1
  %22 = or i64 %21, %20
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %149, label %24

24:                                               ; preds = %13
  %25 = call i64 @FT_Vector_Length(%struct.FT_Vector_* nonnull %5) #4
  %26 = load i64, i64* %7, align 16
  %27 = load i64, i64* %8, align 8
  %28 = call i64 @FT_Atan2(i64 %26, i64 %27) #4
  %29 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %28, 5898240
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %5, i64 %30, i64 %31) #4
  %32 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  %33 = load i8, i8* %32, align 8
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %24
  %36 = call fastcc i32 @ft_stroker_subpath_start(%struct.FT_StrokerRec_* nonnull %0, i64 %28, i64 %25)
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %42, label %149

38:                                               ; preds = %24
  %39 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  store i64 %28, i64* %39, align 8
  %40 = call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 %25)
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %149

42:                                               ; preds = %35, %38
  %43 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0
  %44 = bitcast i32* %3 to i8*
  %45 = load <2 x i64>, <2 x i64>* %4, align 16
  %46 = bitcast %struct.FT_Vector_* %1 to <2 x i64>*
  br label %47

47:                                               ; preds = %138, %42
  %48 = phi i32 [ 1, %42 ], [ %141, %138 ]
  %49 = phi %struct.FT_StrokeBorderRec_* [ %43, %42 ], [ %142, %138 ]
  %50 = phi <2 x i64> [ %45, %42 ], [ %140, %138 ]
  %51 = load <2 x i64>, <2 x i64>* %46, align 8
  %52 = add nsw <2 x i64> %50, %51
  %53 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 4
  %54 = load i8, i8* %53, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %65, label %56

56:                                               ; preds = %47
  %57 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 2
  %58 = load %struct.FT_Vector_*, %struct.FT_Vector_** %57, align 8
  %59 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = add i32 %60, -1
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %58, i64 %62, i32 0
  %64 = bitcast i64* %63 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %64, align 8
  br label %134

65:                                               ; preds = %47
  %66 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 5
  %69 = load i32, i32* %68, align 4
  %70 = icmp ugt i32 %67, %69
  br i1 %70, label %71, label %89

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 2
  %73 = load %struct.FT_Vector_*, %struct.FT_Vector_** %72, align 8
  %74 = add i32 %67, -1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %73, i64 %75, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = extractelement <2 x i64> %52, i32 0
  %79 = sub i64 1, %78
  %80 = add i64 %79, %77
  %81 = icmp ult i64 %80, 3
  br i1 %81, label %82, label %89

82:                                               ; preds = %71
  %83 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %73, i64 %75, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = extractelement <2 x i64> %52, i32 1
  %86 = sub i64 1, %85
  %87 = add i64 %86, %84
  %88 = icmp ult i64 %87, 3
  br i1 %88, label %138, label %89

89:                                               ; preds = %82, %71, %65
  %90 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = add i32 %67, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #4
  store i32 0, i32* %3, align 4
  %93 = icmp ugt i32 %92, %91
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 3
  %96 = load i8*, i8** %95, align 8
  br label %123

97:                                               ; preds = %89
  %98 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 6
  %99 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %98, align 8
  br label %100

100:                                              ; preds = %100, %97
  %101 = phi i32 [ %91, %97 ], [ %104, %100 ]
  %102 = lshr i32 %101, 1
  %103 = add i32 %101, 16
  %104 = add i32 %103, %102
  %105 = icmp ult i32 %104, %92
  br i1 %105, label %100, label %106

106:                                              ; preds = %100
  %107 = zext i32 %91 to i64
  %108 = zext i32 %104 to i64
  %109 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 2
  %110 = bitcast %struct.FT_Vector_** %109 to i8**
  %111 = load i8*, i8** %110, align 8
  %112 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %99, i64 16, i64 %107, i64 %108, i8* %111, i32* nonnull %3) #4
  store i8* %112, i8** %110, align 8
  %113 = load i32, i32* %3, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %136

115:                                              ; preds = %106
  %116 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 3
  %117 = load i8*, i8** %116, align 8
  %118 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %99, i64 1, i64 %107, i64 %108, i8* %117, i32* nonnull %3) #4
  store i8* %118, i8** %116, align 8
  %119 = load i32, i32* %3, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %136

121:                                              ; preds = %115
  store i32 %104, i32* %90, align 4
  %122 = load i32, i32* %66, align 8
  br label %123

123:                                              ; preds = %94, %121
  %124 = phi i8* [ %118, %121 ], [ %96, %94 ]
  %125 = phi i32 [ %122, %121 ], [ %67, %94 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #4
  %126 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 0, i32 2
  %127 = load %struct.FT_Vector_*, %struct.FT_Vector_** %126, align 8
  %128 = zext i32 %125 to i64
  %129 = getelementptr inbounds i8, i8* %124, i64 %128
  %130 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %127, i64 %128, i32 0
  %131 = bitcast i64* %130 to <2 x i64>*
  store <2 x i64> %52, <2 x i64>* %131, align 8
  store i8 1, i8* %129, align 1
  %132 = load i32, i32* %66, align 8
  %133 = add i32 %132, 1
  store i32 %133, i32* %66, align 8
  br label %134

134:                                              ; preds = %56, %123
  store i8 1, i8* %53, align 8
  %135 = load <2 x i64>, <2 x i64>* %4, align 16
  br label %138

136:                                              ; preds = %106, %115
  %137 = phi i32 [ %119, %115 ], [ %113, %106 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #4
  store i8 1, i8* %53, align 8
  br label %149

138:                                              ; preds = %82, %134
  %139 = phi <2 x i64> [ %50, %82 ], [ %135, %134 ]
  %140 = sub nsw <2 x i64> zeroinitializer, %139
  store <2 x i64> %140, <2 x i64>* %4, align 16
  %141 = add nsw i32 %48, -1
  %142 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %49, i64 1
  %143 = icmp eq i32 %48, 0
  br i1 %143, label %144, label %47

144:                                              ; preds = %138
  %145 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  store i64 %28, i64* %145, align 8
  %146 = bitcast %struct.FT_Vector_* %14 to i8*
  %147 = bitcast %struct.FT_Vector_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* nonnull align 8 %147, i64 16, i1 false)
  %148 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 3
  store i64 %25, i64* %148, align 8
  br label %149

149:                                              ; preds = %136, %144, %38, %35, %13, %2
  %150 = phi i32 [ 6, %2 ], [ %36, %35 ], [ %137, %136 ], [ 0, %144 ], [ %40, %38 ], [ 0, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #4
  ret i32 %150
}

declare i64 @FT_Vector_Length(%struct.FT_Vector_*) local_unnamed_addr #2

declare i64 @FT_Atan2(i64, i64) local_unnamed_addr #2

declare void @FT_Vector_From_Polar(%struct.FT_Vector_*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_stroker_subpath_start(%struct.FT_StrokerRec_* nocapture, i64, i64) unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca <2 x i64>, align 16
  %7 = bitcast <2 x i64>* %6 to %struct.FT_Vector_*
  %8 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %10 = bitcast <2 x i64>* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %10, i8 -86, i64 16, i1 false)
  %11 = load i64, i64* %9, align 8
  %12 = add nsw i64 %1, 5898240
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %7, i64 %11, i64 %12) #4
  %13 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %14 = bitcast i64* %13 to <2 x i64>*
  %15 = load <2 x i64>, <2 x i64>* %14, align 8
  %16 = load <2 x i64>, <2 x i64>* %6, align 16
  %17 = add nsw <2 x i64> %16, %15
  %18 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0
  %19 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, -1
  br i1 %21, label %22, label %55

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %18, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add nuw i32 %20, 1
  %26 = icmp ugt i32 %24, %25
  br i1 %26, label %28, label %27

27:                                               ; preds = %22
  store i32 %20, i32* %23, align 8
  br label %53

28:                                               ; preds = %22
  %29 = add i32 %24, -1
  store i32 %29, i32* %23, align 8
  %30 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %31 = load %struct.FT_Vector_*, %struct.FT_Vector_** %30, align 8
  %32 = zext i32 %20 to i64
  %33 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %31, i64 %32
  %34 = zext i32 %29 to i64
  %35 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %31, i64 %34
  %36 = bitcast %struct.FT_Vector_* %33 to i8*
  %37 = bitcast %struct.FT_Vector_* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false) #4
  %38 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds i8, i8* %39, i64 %34
  %41 = load i8, i8* %40, align 1
  %42 = getelementptr inbounds i8, i8* %39, i64 %32
  store i8 %41, i8* %42, align 1
  %43 = load i8*, i8** %38, align 8
  %44 = getelementptr inbounds i8, i8* %43, i64 %32
  %45 = load i8, i8* %44, align 1
  %46 = or i8 %45, 4
  store i8 %46, i8* %44, align 1
  %47 = load i8*, i8** %38, align 8
  %48 = add i32 %24, -2
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %47, i64 %49
  %51 = load i8, i8* %50, align 1
  %52 = or i8 %51, 8
  store i8 %52, i8* %50, align 1
  br label %53

53:                                               ; preds = %28, %27
  store i32 -1, i32* %19, align 4
  %54 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  store i8 0, i8* %54, align 8
  br label %55

55:                                               ; preds = %3, %53
  %56 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %18, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %19, align 4
  %58 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %57, 1
  %62 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #4
  store i32 0, i32* %5, align 4
  %63 = icmp ugt i32 %61, %60
  br i1 %63, label %67, label %64

64:                                               ; preds = %55
  %65 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %66 = load i8*, i8** %65, align 8
  br label %95

67:                                               ; preds = %55
  %68 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 6
  %69 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %68, align 8
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi i32 [ %60, %67 ], [ %74, %70 ]
  %72 = lshr i32 %71, 1
  %73 = add i32 %71, 16
  %74 = add i32 %73, %72
  %75 = icmp ult i32 %74, %61
  br i1 %75, label %70, label %76

76:                                               ; preds = %70
  %77 = zext i32 %60 to i64
  %78 = zext i32 %74 to i64
  %79 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %80 = bitcast %struct.FT_Vector_** %79 to i8**
  %81 = load i8*, i8** %80, align 8
  %82 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %69, i64 16, i64 %77, i64 %78, i8* %81, i32* nonnull %5) #4
  store i8* %82, i8** %80, align 8
  %83 = load i32, i32* %5, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %93

85:                                               ; preds = %76
  %86 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %87 = load i8*, i8** %86, align 8
  %88 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %69, i64 1, i64 %77, i64 %78, i8* %87, i32* nonnull %5) #4
  store i8* %88, i8** %86, align 8
  %89 = load i32, i32* %5, align 4
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %85
  store i32 %74, i32* %59, align 4
  %92 = load i32, i32* %56, align 8
  br label %95

93:                                               ; preds = %85, %76
  %94 = phi i32 [ %89, %85 ], [ %83, %76 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #4
  store i8 0, i8* %58, align 8
  br label %203

95:                                               ; preds = %64, %91
  %96 = phi i8* [ %66, %64 ], [ %88, %91 ]
  %97 = phi i32 [ %57, %64 ], [ %92, %91 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #4
  %98 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %99 = load %struct.FT_Vector_*, %struct.FT_Vector_** %98, align 8
  %100 = zext i32 %97 to i64
  %101 = getelementptr inbounds i8, i8* %96, i64 %100
  %102 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %99, i64 %100, i32 0
  %103 = bitcast i64* %102 to <2 x i64>*
  store <2 x i64> %17, <2 x i64>* %103, align 8
  store i8 1, i8* %101, align 1
  %104 = load i32, i32* %56, align 8
  %105 = add i32 %104, 1
  store i32 %105, i32* %56, align 8
  store i8 0, i8* %58, align 8
  %106 = bitcast i64* %13 to <2 x i64>*
  %107 = load <2 x i64>, <2 x i64>* %106, align 8
  %108 = load <2 x i64>, <2 x i64>* %6, align 16
  %109 = sub nsw <2 x i64> %107, %108
  %110 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1
  %111 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  %112 = load i32, i32* %111, align 4
  %113 = icmp sgt i32 %112, -1
  br i1 %113, label %114, label %147

114:                                              ; preds = %95
  %115 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %110, i64 0, i32 0
  %116 = load i32, i32* %115, align 8
  %117 = add nuw i32 %112, 1
  %118 = icmp ugt i32 %116, %117
  br i1 %118, label %120, label %119

119:                                              ; preds = %114
  store i32 %112, i32* %115, align 8
  br label %145

120:                                              ; preds = %114
  %121 = add i32 %116, -1
  store i32 %121, i32* %115, align 8
  %122 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %123 = load %struct.FT_Vector_*, %struct.FT_Vector_** %122, align 8
  %124 = zext i32 %112 to i64
  %125 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %123, i64 %124
  %126 = zext i32 %121 to i64
  %127 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %123, i64 %126
  %128 = bitcast %struct.FT_Vector_* %125 to i8*
  %129 = bitcast %struct.FT_Vector_* %127 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 16, i1 false) #4
  %130 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds i8, i8* %131, i64 %126
  %133 = load i8, i8* %132, align 1
  %134 = getelementptr inbounds i8, i8* %131, i64 %124
  store i8 %133, i8* %134, align 1
  %135 = load i8*, i8** %130, align 8
  %136 = getelementptr inbounds i8, i8* %135, i64 %124
  %137 = load i8, i8* %136, align 1
  %138 = or i8 %137, 4
  store i8 %138, i8* %136, align 1
  %139 = load i8*, i8** %130, align 8
  %140 = add i32 %116, -2
  %141 = zext i32 %140 to i64
  %142 = getelementptr inbounds i8, i8* %139, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = or i8 %143, 8
  store i8 %144, i8* %142, align 1
  br label %145

145:                                              ; preds = %120, %119
  store i32 -1, i32* %111, align 4
  %146 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 4
  store i8 0, i8* %146, align 8
  br label %147

147:                                              ; preds = %95, %145
  %148 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %110, i64 0, i32 0
  %149 = load i32, i32* %148, align 8
  store i32 %149, i32* %111, align 4
  %150 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 4
  store i8 0, i8* %150, align 8
  %151 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 1
  %152 = load i32, i32* %151, align 4
  %153 = add i32 %149, 1
  %154 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %154) #4
  store i32 0, i32* %4, align 4
  %155 = icmp ugt i32 %153, %152
  br i1 %155, label %159, label %156

156:                                              ; preds = %147
  %157 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %158 = load i8*, i8** %157, align 8
  br label %187

159:                                              ; preds = %147
  %160 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 6
  %161 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %160, align 8
  br label %162

162:                                              ; preds = %162, %159
  %163 = phi i32 [ %152, %159 ], [ %166, %162 ]
  %164 = lshr i32 %163, 1
  %165 = add i32 %163, 16
  %166 = add i32 %165, %164
  %167 = icmp ult i32 %166, %153
  br i1 %167, label %162, label %168

168:                                              ; preds = %162
  %169 = zext i32 %152 to i64
  %170 = zext i32 %166 to i64
  %171 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %172 = bitcast %struct.FT_Vector_** %171 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %161, i64 16, i64 %169, i64 %170, i8* %173, i32* nonnull %4) #4
  store i8* %174, i8** %172, align 8
  %175 = load i32, i32* %4, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %185

177:                                              ; preds = %168
  %178 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %179 = load i8*, i8** %178, align 8
  %180 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %161, i64 1, i64 %169, i64 %170, i8* %179, i32* nonnull %4) #4
  store i8* %180, i8** %178, align 8
  %181 = load i32, i32* %4, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %177
  store i32 %166, i32* %151, align 4
  %184 = load i32, i32* %148, align 8
  br label %187

185:                                              ; preds = %168, %177
  %186 = phi i32 [ %181, %177 ], [ %175, %168 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #4
  br label %198

187:                                              ; preds = %156, %183
  %188 = phi i8* [ %180, %183 ], [ %158, %156 ]
  %189 = phi i32 [ %184, %183 ], [ %149, %156 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %154) #4
  %190 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %191 = load %struct.FT_Vector_*, %struct.FT_Vector_** %190, align 8
  %192 = zext i32 %189 to i64
  %193 = getelementptr inbounds i8, i8* %188, i64 %192
  %194 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %191, i64 %192, i32 0
  %195 = bitcast i64* %194 to <2 x i64>*
  store <2 x i64> %109, <2 x i64>* %195, align 8
  store i8 1, i8* %193, align 1
  %196 = load i32, i32* %148, align 8
  %197 = add i32 %196, 1
  store i32 %197, i32* %148, align 8
  br label %198

198:                                              ; preds = %187, %185
  %199 = phi i32 [ %186, %185 ], [ 0, %187 ]
  store i8 0, i8* %150, align 8
  %200 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 6
  store i64 %1, i64* %200, align 8
  %201 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  store i8 0, i8* %201, align 8
  %202 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 8
  store i64 %2, i64* %202, align 8
  br label %203

203:                                              ; preds = %93, %198
  %204 = phi i32 [ %94, %93 ], [ %199, %198 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %204
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_*, i64) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.FT_Vector_, align 8
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %struct.FT_Vector_*
  %12 = alloca %struct.FT_Vector_, align 8
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.FT_Vector_*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %struct.FT_Vector_*
  %17 = alloca i32, align 4
  %18 = alloca %struct.FT_Vector_, align 8
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %struct.FT_Vector_*
  %21 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = tail call i64 @FT_Angle_Diff(i64 %22, i64 %24) #4
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %805, label %27

27:                                               ; preds = %2
  %28 = lshr i64 %25, 63
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28
  %31 = bitcast %struct.FT_Vector_* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #4
  %32 = bitcast <2 x i64>* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %32) #4
  %33 = ashr i64 %25, 63
  %34 = and i64 %33, -11796480
  %35 = add nuw nsw i64 %34, 5898240
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %32, i8 -86, i64 16, i1 false) #4
  %36 = load i64, i64* %21, align 8
  %37 = load i64, i64* %23, align 8
  %38 = tail call i64 @FT_Angle_Diff(i64 %36, i64 %37) #4
  %39 = sdiv i64 %38, 2
  %40 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 4
  %41 = load i8, i8* %40, align 8
  %42 = icmp eq i8 %41, 0
  %43 = icmp eq i64 %1, 0
  %44 = or i1 %43, %42
  %45 = add i64 %38, 11763713
  %46 = icmp ugt i64 %45, 23527426
  %47 = or i1 %46, %44
  br i1 %47, label %66, label %48

48:                                               ; preds = %27
  call void @FT_Vector_Unit(%struct.FT_Vector_* nonnull %18, i64 %39) #4
  %49 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %18, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %18, i64 0, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = call i64 @FT_MulDiv(i64 %50, i64 %52, i64 %54) #4
  %56 = icmp slt i64 %55, 0
  %57 = sub nsw i64 0, %55
  %58 = select i1 %56, i64 %57, i64 %55
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %48
  %61 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 3
  %62 = load i64, i64* %61, align 8
  %63 = icmp slt i64 %62, %58
  %64 = icmp sgt i64 %58, %1
  %65 = or i1 %64, %63
  br i1 %65, label %66, label %78

66:                                               ; preds = %60, %48, %27
  %67 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %68 = load i64, i64* %67, align 8
  %69 = load i64, i64* %23, align 8
  %70 = add nsw i64 %69, %35
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %20, i64 %68, i64 %70) #4
  %71 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %72 = bitcast i64* %71 to <2 x i64>*
  %73 = load <2 x i64>, <2 x i64>* %72, align 8
  %74 = load <2 x i64>, <2 x i64>* %19, align 16
  %75 = add nsw <2 x i64> %74, %73
  store <2 x i64> %75, <2 x i64>* %19, align 16
  store i8 0, i8* %40, align 8
  %76 = extractelement <2 x i64> %75, i32 0
  %77 = extractelement <2 x i64> %75, i32 1
  br label %103

78:                                               ; preds = %60
  %79 = load i64, i64* %21, align 8
  %80 = add nsw i64 %39, %35
  %81 = add i64 %80, %79
  %82 = load i64, i64* %49, align 8
  %83 = load i64, i64* %53, align 8
  %84 = call i64 @FT_DivFix(i64 %82, i64 %83) #4
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %20, i64 %84, i64 %81) #4
  %85 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %86 = bitcast i64* %85 to <2 x i64>*
  %87 = load <2 x i64>, <2 x i64>* %86, align 8
  %88 = load <2 x i64>, <2 x i64>* %19, align 16
  %89 = add nsw <2 x i64> %88, %87
  store <2 x i64> %89, <2 x i64>* %19, align 16
  %90 = load i8, i8* %40, align 8
  %91 = icmp eq i8 %90, 0
  %92 = extractelement <2 x i64> %89, i32 0
  %93 = extractelement <2 x i64> %89, i32 1
  br i1 %91, label %103, label %94

94:                                               ; preds = %78
  %95 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 2
  %96 = load %struct.FT_Vector_*, %struct.FT_Vector_** %95, align 8
  %97 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %30, i64 0, i32 0
  %98 = load i32, i32* %97, align 8
  %99 = add i32 %98, -1
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %96, i64 %100
  %102 = bitcast %struct.FT_Vector_* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* nonnull align 16 %32, i64 16, i1 false) #4
  br label %173

103:                                              ; preds = %78, %66
  %104 = phi i64 [ %76, %66 ], [ %92, %78 ]
  %105 = phi i64 [ %77, %66 ], [ %93, %78 ]
  %106 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %30, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 5
  %109 = load i32, i32* %108, align 4
  %110 = icmp ugt i32 %107, %109
  br i1 %110, label %111, label %127

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 2
  %113 = load %struct.FT_Vector_*, %struct.FT_Vector_** %112, align 8
  %114 = add i32 %107, -1
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %113, i64 %115, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = sub i64 1, %104
  %119 = add i64 %118, %117
  %120 = icmp ult i64 %119, 3
  br i1 %120, label %121, label %127

121:                                              ; preds = %111
  %122 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %113, i64 %115, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = sub i64 1, %105
  %125 = add i64 %124, %123
  %126 = icmp ult i64 %125, 3
  br i1 %126, label %176, label %127

127:                                              ; preds = %121, %111, %103
  %128 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = add i32 %107, 1
  %131 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %131) #4
  store i32 0, i32* %17, align 4
  %132 = icmp ugt i32 %130, %129
  br i1 %132, label %136, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 3
  %135 = load i8*, i8** %134, align 8
  br label %162

136:                                              ; preds = %127
  %137 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 6
  %138 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %137, align 8
  br label %139

139:                                              ; preds = %139, %136
  %140 = phi i32 [ %129, %136 ], [ %143, %139 ]
  %141 = lshr i32 %140, 1
  %142 = add i32 %140, 16
  %143 = add i32 %142, %141
  %144 = icmp ult i32 %143, %130
  br i1 %144, label %139, label %145

145:                                              ; preds = %139
  %146 = zext i32 %129 to i64
  %147 = zext i32 %143 to i64
  %148 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 2
  %149 = bitcast %struct.FT_Vector_** %148 to i8**
  %150 = load i8*, i8** %149, align 8
  %151 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %138, i64 16, i64 %146, i64 %147, i8* %150, i32* nonnull %17) #4
  store i8* %151, i8** %149, align 8
  %152 = load i32, i32* %17, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %174

154:                                              ; preds = %145
  %155 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 3
  %156 = load i8*, i8** %155, align 8
  %157 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %138, i64 1, i64 %146, i64 %147, i8* %156, i32* nonnull %17) #4
  store i8* %157, i8** %155, align 8
  %158 = load i32, i32* %17, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %174

160:                                              ; preds = %154
  store i32 %143, i32* %128, align 4
  %161 = load i32, i32* %106, align 8
  br label %162

162:                                              ; preds = %160, %133
  %163 = phi i8* [ %157, %160 ], [ %135, %133 ]
  %164 = phi i32 [ %161, %160 ], [ %107, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #4
  %165 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %28, i32 2
  %166 = load %struct.FT_Vector_*, %struct.FT_Vector_** %165, align 8
  %167 = zext i32 %164 to i64
  %168 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %166, i64 %167
  %169 = getelementptr inbounds i8, i8* %163, i64 %167
  %170 = bitcast %struct.FT_Vector_* %168 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %170, i8* nonnull align 16 %32, i64 16, i1 false) #4
  store i8 1, i8* %169, align 1
  %171 = load i32, i32* %106, align 8
  %172 = add i32 %171, 1
  store i32 %172, i32* %106, align 8
  br label %173

173:                                              ; preds = %94, %162
  store i8 0, i8* %40, align 8
  br label %176

174:                                              ; preds = %145, %154
  %175 = phi i32 [ %158, %154 ], [ %152, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %131) #4
  store i8 0, i8* %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  br label %805

176:                                              ; preds = %121, %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %32) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #4
  %177 = xor i32 %29, 1
  %178 = zext i32 %177 to i64
  %179 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178
  %180 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  %181 = load i32, i32* %180, align 8
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %176
  %184 = call fastcc i32 @ft_stroker_arcto(%struct.FT_StrokerRec_* %0, i32 %177) #4
  br label %805

185:                                              ; preds = %176
  %186 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %187 = load i64, i64* %186, align 8
  %188 = bitcast %struct.FT_Vector_* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %188) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 16, i1 false) #4
  %189 = mul nuw nsw i64 %178, -11796480
  %190 = add nsw i64 %189, 5898240
  %191 = icmp eq i32 %181, 1
  %192 = icmp eq i32 %181, 2
  br i1 %191, label %216, label %193

193:                                              ; preds = %185
  %194 = load i64, i64* %21, align 8
  %195 = load i64, i64* %23, align 8
  %196 = call i64 @FT_Angle_Diff(i64 %194, i64 %195) #4
  %197 = sdiv i64 %196, 2
  %198 = and i64 %196, -2
  %199 = icmp eq i64 %198, 11796480
  %200 = sub nsw i64 -5898240, %189
  %201 = select i1 %199, i64 %200, i64 %197
  %202 = load i64, i64* %21, align 8
  %203 = add i64 %202, %190
  %204 = add i64 %203, %201
  %205 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 13
  %206 = load i64, i64* %205, align 8
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %9, i64 %206, i64 %201) #4
  %207 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 0
  %208 = load i64, i64* %207, align 8
  %209 = icmp slt i64 %208, 65536
  br i1 %209, label %210, label %613

210:                                              ; preds = %193
  br i1 %192, label %211, label %216

211:                                              ; preds = %210
  %212 = icmp slt i64 %201, 0
  %213 = sub nsw i64 0, %201
  %214 = select i1 %212, i64 %213, i64 %201
  %215 = icmp sgt i64 %214, 57
  br i1 %215, label %299, label %613

216:                                              ; preds = %210, %185
  %217 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %217) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %217, i8 -86, i64 16, i1 false) #4
  %218 = load i64, i64* %23, align 8
  %219 = add nsw i64 %218, %190
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %11, i64 %187, i64 %219) #4
  %220 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %221 = bitcast i64* %220 to <2 x i64>*
  %222 = load <2 x i64>, <2 x i64>* %221, align 8
  %223 = load <2 x i64>, <2 x i64>* %10, align 16
  %224 = add nsw <2 x i64> %223, %222
  store <2 x i64> %224, <2 x i64>* %10, align 16
  %225 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 4
  store i8 0, i8* %225, align 8
  %226 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %227 = load i32, i32* %226, align 8
  %228 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %229 = load i32, i32* %228, align 4
  %230 = icmp ugt i32 %227, %229
  br i1 %230, label %231, label %249

231:                                              ; preds = %216
  %232 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %233 = load %struct.FT_Vector_*, %struct.FT_Vector_** %232, align 8
  %234 = add i32 %227, -1
  %235 = zext i32 %234 to i64
  %236 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %233, i64 %235, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = extractelement <2 x i64> %224, i32 0
  %239 = sub i64 1, %238
  %240 = add i64 %239, %237
  %241 = icmp ult i64 %240, 3
  br i1 %241, label %242, label %249

242:                                              ; preds = %231
  %243 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %233, i64 %235, i32 1
  %244 = load i64, i64* %243, align 8
  %245 = extractelement <2 x i64> %224, i32 1
  %246 = sub i64 1, %245
  %247 = add i64 %246, %244
  %248 = icmp ult i64 %247, 3
  br i1 %248, label %802, label %249

249:                                              ; preds = %242, %231, %216
  %250 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %227, 1
  %253 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %253) #4
  store i32 0, i32* %7, align 4
  %254 = icmp ugt i32 %252, %251
  br i1 %254, label %258, label %255

255:                                              ; preds = %249
  %256 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %257 = load i8*, i8** %256, align 8
  br label %286

258:                                              ; preds = %249
  %259 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %260 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %259, align 8
  br label %261

261:                                              ; preds = %261, %258
  %262 = phi i32 [ %251, %258 ], [ %265, %261 ]
  %263 = lshr i32 %262, 1
  %264 = add i32 %262, 16
  %265 = add i32 %264, %263
  %266 = icmp ult i32 %265, %252
  br i1 %266, label %261, label %267

267:                                              ; preds = %261
  %268 = zext i32 %251 to i64
  %269 = zext i32 %265 to i64
  %270 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %271 = bitcast %struct.FT_Vector_** %270 to i8**
  %272 = load i8*, i8** %271, align 8
  %273 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %260, i64 16, i64 %268, i64 %269, i8* %272, i32* nonnull %7) #4
  store i8* %273, i8** %271, align 8
  %274 = load i32, i32* %7, align 4
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %284

276:                                              ; preds = %267
  %277 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %278 = load i8*, i8** %277, align 8
  %279 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %260, i64 1, i64 %268, i64 %269, i8* %278, i32* nonnull %7) #4
  store i8* %279, i8** %277, align 8
  %280 = load i32, i32* %7, align 4
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %276
  store i32 %265, i32* %250, align 4
  %283 = load i32, i32* %226, align 8
  br label %286

284:                                              ; preds = %276, %267
  %285 = phi i32 [ %280, %276 ], [ %274, %267 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #4
  br label %297

286:                                              ; preds = %282, %255
  %287 = phi i8* [ %279, %282 ], [ %257, %255 ]
  %288 = phi i32 [ %283, %282 ], [ %227, %255 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %253) #4
  %289 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %290 = load %struct.FT_Vector_*, %struct.FT_Vector_** %289, align 8
  %291 = zext i32 %288 to i64
  %292 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %290, i64 %291
  %293 = getelementptr inbounds i8, i8* %287, i64 %291
  %294 = bitcast %struct.FT_Vector_* %292 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %294, i8* nonnull align 16 %217, i64 16, i1 false) #4
  store i8 1, i8* %293, align 1
  %295 = load i32, i32* %226, align 8
  %296 = add i32 %295, 1
  store i32 %296, i32* %226, align 8
  br label %297

297:                                              ; preds = %286, %284
  %298 = phi i32 [ %285, %284 ], [ 0, %286 ]
  store i8 0, i8* %225, align 8
  br label %802

299:                                              ; preds = %211
  %300 = bitcast %struct.FT_Vector_* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %300) #4
  %301 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 0
  %302 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %12, i64 0, i32 1
  %303 = bitcast <2 x i64>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %300, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %303) #4
  %304 = getelementptr inbounds <2 x i64>, <2 x i64>* %13, i64 0, i64 0
  %305 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %14, i64 0, i32 1
  %306 = load i64, i64* %205, align 8
  %307 = shl i64 %187, 32
  %308 = ashr exact i64 %307, 32
  %309 = shl i64 %306, 32
  %310 = ashr exact i64 %309, 32
  %311 = mul nsw i64 %310, %308
  %312 = ashr i64 %311, 63
  %313 = add nsw i64 %311, 32768
  %314 = add nsw i64 %313, %312
  %315 = shl i64 %314, 16
  %316 = ashr i64 %315, 32
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %12, i64 %316, i64 %204) #4
  %317 = load i64, i64* %207, align 8
  %318 = sub nsw i64 65536, %317
  %319 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %9, i64 0, i32 1
  %320 = load i64, i64* %319, align 8
  %321 = call i64 @FT_DivFix(i64 %318, i64 %320) #4
  %322 = load i64, i64* %302, align 8
  %323 = shl i64 %322, 32
  %324 = ashr exact i64 %323, 32
  %325 = shl i64 %321, 32
  %326 = ashr exact i64 %325, 32
  %327 = mul nsw i64 %324, %326
  %328 = ashr i64 %327, 63
  %329 = add nsw i64 %327, 32768
  %330 = add nsw i64 %329, %328
  %331 = shl i64 %330, 16
  %332 = ashr i64 %331, 32
  %333 = load i64, i64* %301, align 8
  %334 = shl i64 %333, 32
  %335 = sub i64 0, %334
  %336 = ashr exact i64 %335, 32
  %337 = mul nsw i64 %336, %326
  %338 = ashr i64 %337, 63
  %339 = add nsw i64 %337, 32768
  %340 = add nsw i64 %339, %338
  %341 = shl i64 %340, 16
  %342 = ashr i64 %341, 32
  %343 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %344 = load i64, i64* %343, align 8
  %345 = add nsw i64 %344, %333
  store i64 %345, i64* %301, align 8
  %346 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = add nsw i64 %347, %322
  store i64 %348, i64* %302, align 8
  %349 = add nsw i64 %332, %345
  store i64 %349, i64* %304, align 16
  %350 = add nsw i64 %342, %348
  store i64 %350, i64* %305, align 8
  %351 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 4
  %352 = load i8, i8* %351, align 8
  %353 = icmp eq i8 %352, 0
  br i1 %353, label %364, label %354

354:                                              ; preds = %299
  %355 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %356 = load %struct.FT_Vector_*, %struct.FT_Vector_** %355, align 8
  %357 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %358 = load i32, i32* %357, align 8
  %359 = add i32 %358, -1
  %360 = zext i32 %359 to i64
  %361 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %356, i64 %360
  %362 = bitcast %struct.FT_Vector_* %361 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %362, i8* nonnull align 16 %303, i64 16, i1 false) #4
  %363 = load i32, i32* %357, align 8
  br label %433

364:                                              ; preds = %299
  %365 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %366 = load i32, i32* %365, align 8
  %367 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %368 = load i32, i32* %367, align 4
  %369 = icmp ugt i32 %366, %368
  br i1 %369, label %370, label %386

370:                                              ; preds = %364
  %371 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %372 = load %struct.FT_Vector_*, %struct.FT_Vector_** %371, align 8
  %373 = add i32 %366, -1
  %374 = zext i32 %373 to i64
  %375 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %372, i64 %374, i32 0
  %376 = load i64, i64* %375, align 8
  %377 = sub i64 1, %349
  %378 = add i64 %377, %376
  %379 = icmp ult i64 %378, 3
  br i1 %379, label %380, label %386

380:                                              ; preds = %370
  %381 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %372, i64 %374, i32 1
  %382 = load i64, i64* %381, align 8
  %383 = sub i64 1, %350
  %384 = add i64 %383, %382
  %385 = icmp ult i64 %384, 3
  br i1 %385, label %443, label %386

386:                                              ; preds = %380, %370, %364
  %387 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %388 = load i32, i32* %387, align 4
  %389 = add i32 %366, 1
  %390 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %390) #4
  store i32 0, i32* %5, align 4
  %391 = icmp ugt i32 %389, %388
  br i1 %391, label %395, label %392

392:                                              ; preds = %386
  %393 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %394 = load i8*, i8** %393, align 8
  br label %421

395:                                              ; preds = %386
  %396 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %397 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %396, align 8
  br label %398

398:                                              ; preds = %398, %395
  %399 = phi i32 [ %388, %395 ], [ %402, %398 ]
  %400 = lshr i32 %399, 1
  %401 = add i32 %399, 16
  %402 = add i32 %401, %400
  %403 = icmp ult i32 %402, %389
  br i1 %403, label %398, label %404

404:                                              ; preds = %398
  %405 = zext i32 %388 to i64
  %406 = zext i32 %402 to i64
  %407 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %408 = bitcast %struct.FT_Vector_** %407 to i8**
  %409 = load i8*, i8** %408, align 8
  %410 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %397, i64 16, i64 %405, i64 %406, i8* %409, i32* nonnull %5) #4
  store i8* %410, i8** %408, align 8
  %411 = load i32, i32* %5, align 4
  %412 = icmp eq i32 %411, 0
  br i1 %412, label %413, label %441

413:                                              ; preds = %404
  %414 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %415 = load i8*, i8** %414, align 8
  %416 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %397, i64 1, i64 %405, i64 %406, i8* %415, i32* nonnull %5) #4
  store i8* %416, i8** %414, align 8
  %417 = load i32, i32* %5, align 4
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %441

419:                                              ; preds = %413
  store i32 %402, i32* %387, align 4
  %420 = load i32, i32* %365, align 8
  br label %421

421:                                              ; preds = %419, %392
  %422 = phi i8* [ %416, %419 ], [ %394, %392 ]
  %423 = phi i32 [ %420, %419 ], [ %366, %392 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %390) #4
  %424 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %425 = load %struct.FT_Vector_*, %struct.FT_Vector_** %424, align 8
  %426 = zext i32 %423 to i64
  %427 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %425, i64 %426
  %428 = getelementptr inbounds i8, i8* %422, i64 %426
  %429 = bitcast %struct.FT_Vector_* %427 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %429, i8* nonnull align 16 %303, i64 16, i1 false) #4
  store i8 1, i8* %428, align 1
  %430 = load i32, i32* %365, align 8
  %431 = add i32 %430, 1
  store i32 %431, i32* %365, align 8
  %432 = load i64, i64* %304, align 16
  br label %433

433:                                              ; preds = %421, %354
  %434 = phi i32 [ %363, %354 ], [ %431, %421 ]
  %435 = phi i64 [ %349, %354 ], [ %432, %421 ]
  store i8 0, i8* %351, align 8
  %436 = load i64, i64* %301, align 8
  %437 = load i64, i64* %302, align 8
  %438 = load i64, i64* %305, align 8
  %439 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %440 = load i32, i32* %439, align 4
  br label %443

441:                                              ; preds = %413, %404
  %442 = phi i32 [ %417, %413 ], [ %411, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %390) #4
  store i8 0, i8* %351, align 8
  br label %611

443:                                              ; preds = %433, %380
  %444 = phi i32 [ %368, %380 ], [ %440, %433 ]
  %445 = phi i32 [ %366, %380 ], [ %434, %433 ]
  %446 = phi i64 [ %350, %380 ], [ %438, %433 ]
  %447 = phi i64 [ %348, %380 ], [ %437, %433 ]
  %448 = phi i64 [ %349, %380 ], [ %435, %433 ]
  %449 = phi i64 [ %345, %380 ], [ %436, %433 ]
  %450 = sub nsw i64 %449, %448
  %451 = add nsw i64 %450, %449
  store i64 %451, i64* %304, align 16
  %452 = sub nsw i64 %447, %446
  %453 = add nsw i64 %452, %447
  store i64 %453, i64* %305, align 8
  %454 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %455 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %456 = icmp ugt i32 %445, %444
  br i1 %456, label %457, label %473

457:                                              ; preds = %443
  %458 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %459 = load %struct.FT_Vector_*, %struct.FT_Vector_** %458, align 8
  %460 = add i32 %445, -1
  %461 = zext i32 %460 to i64
  %462 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %459, i64 %461, i32 0
  %463 = load i64, i64* %462, align 8
  %464 = sub i64 1, %451
  %465 = add i64 %464, %463
  %466 = icmp ult i64 %465, 3
  br i1 %466, label %467, label %473

467:                                              ; preds = %457
  %468 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %459, i64 %461, i32 1
  %469 = load i64, i64* %468, align 8
  %470 = sub i64 1, %453
  %471 = add i64 %470, %469
  %472 = icmp ult i64 %471, 3
  br i1 %472, label %521, label %473

473:                                              ; preds = %467, %457, %443
  %474 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %475 = load i32, i32* %474, align 4
  %476 = add i32 %445, 1
  %477 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %477) #4
  store i32 0, i32* %4, align 4
  %478 = icmp ugt i32 %476, %475
  br i1 %478, label %482, label %479

479:                                              ; preds = %473
  %480 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %481 = load i8*, i8** %480, align 8
  br label %508

482:                                              ; preds = %473
  %483 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %484 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %483, align 8
  br label %485

485:                                              ; preds = %485, %482
  %486 = phi i32 [ %475, %482 ], [ %489, %485 ]
  %487 = lshr i32 %486, 1
  %488 = add i32 %486, 16
  %489 = add i32 %488, %487
  %490 = icmp ult i32 %489, %476
  br i1 %490, label %485, label %491

491:                                              ; preds = %485
  %492 = zext i32 %475 to i64
  %493 = zext i32 %489 to i64
  %494 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %495 = bitcast %struct.FT_Vector_** %494 to i8**
  %496 = load i8*, i8** %495, align 8
  %497 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %484, i64 16, i64 %492, i64 %493, i8* %496, i32* nonnull %4) #4
  store i8* %497, i8** %495, align 8
  %498 = load i32, i32* %4, align 4
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %519

500:                                              ; preds = %491
  %501 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %502 = load i8*, i8** %501, align 8
  %503 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %484, i64 1, i64 %492, i64 %493, i8* %502, i32* nonnull %4) #4
  store i8* %503, i8** %501, align 8
  %504 = load i32, i32* %4, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %519

506:                                              ; preds = %500
  store i32 %489, i32* %474, align 4
  %507 = load i32, i32* %454, align 8
  br label %508

508:                                              ; preds = %506, %479
  %509 = phi i8* [ %503, %506 ], [ %481, %479 ]
  %510 = phi i32 [ %507, %506 ], [ %445, %479 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %477) #4
  %511 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %512 = load %struct.FT_Vector_*, %struct.FT_Vector_** %511, align 8
  %513 = zext i32 %510 to i64
  %514 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %512, i64 %513
  %515 = getelementptr inbounds i8, i8* %509, i64 %513
  %516 = bitcast %struct.FT_Vector_* %514 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %516, i8* nonnull align 16 %303, i64 16, i1 false) #4
  store i8 1, i8* %515, align 1
  %517 = load i32, i32* %454, align 8
  %518 = add i32 %517, 1
  store i32 %518, i32* %454, align 8
  store i8 0, i8* %351, align 8
  br label %521

519:                                              ; preds = %500, %491
  %520 = phi i32 [ %504, %500 ], [ %498, %491 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %477) #4
  store i8 0, i8* %351, align 8
  br label %611

521:                                              ; preds = %508, %467
  br i1 %43, label %522, label %611

522:                                              ; preds = %521
  %523 = load i64, i64* %23, align 8
  %524 = add nsw i64 %523, %190
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %14, i64 %187, i64 %524) #4
  %525 = bitcast i64* %343 to <2 x i64>*
  %526 = load <2 x i64>, <2 x i64>* %525, align 8
  %527 = load <2 x i64>, <2 x i64>* %13, align 16
  %528 = add nsw <2 x i64> %527, %526
  store <2 x i64> %528, <2 x i64>* %13, align 16
  %529 = load i8, i8* %351, align 8
  %530 = icmp eq i8 %529, 0
  br i1 %530, label %539, label %531

531:                                              ; preds = %522
  %532 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %533 = load %struct.FT_Vector_*, %struct.FT_Vector_** %532, align 8
  %534 = load i32, i32* %454, align 8
  %535 = add i32 %534, -1
  %536 = zext i32 %535 to i64
  %537 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %533, i64 %536
  %538 = bitcast %struct.FT_Vector_* %537 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %538, i8* nonnull align 16 %303, i64 16, i1 false) #4
  br label %609

539:                                              ; preds = %522
  %540 = load i32, i32* %454, align 8
  %541 = load i32, i32* %455, align 4
  %542 = icmp ugt i32 %540, %541
  br i1 %542, label %543, label %561

543:                                              ; preds = %539
  %544 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %545 = load %struct.FT_Vector_*, %struct.FT_Vector_** %544, align 8
  %546 = add i32 %540, -1
  %547 = zext i32 %546 to i64
  %548 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %545, i64 %547, i32 0
  %549 = load i64, i64* %548, align 8
  %550 = extractelement <2 x i64> %528, i32 0
  %551 = sub i64 1, %550
  %552 = add i64 %551, %549
  %553 = icmp ult i64 %552, 3
  br i1 %553, label %554, label %561

554:                                              ; preds = %543
  %555 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %545, i64 %547, i32 1
  %556 = load i64, i64* %555, align 8
  %557 = extractelement <2 x i64> %528, i32 1
  %558 = sub i64 1, %557
  %559 = add i64 %558, %556
  %560 = icmp ult i64 %559, 3
  br i1 %560, label %611, label %561

561:                                              ; preds = %554, %543, %539
  %562 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %563 = load i32, i32* %562, align 4
  %564 = add i32 %540, 1
  %565 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %565) #4
  store i32 0, i32* %3, align 4
  %566 = icmp ugt i32 %564, %563
  br i1 %566, label %570, label %567

567:                                              ; preds = %561
  %568 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %569 = load i8*, i8** %568, align 8
  br label %598

570:                                              ; preds = %561
  %571 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %572 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %571, align 8
  br label %573

573:                                              ; preds = %573, %570
  %574 = phi i32 [ %563, %570 ], [ %577, %573 ]
  %575 = lshr i32 %574, 1
  %576 = add i32 %574, 16
  %577 = add i32 %576, %575
  %578 = icmp ult i32 %577, %564
  br i1 %578, label %573, label %579

579:                                              ; preds = %573
  %580 = zext i32 %563 to i64
  %581 = zext i32 %577 to i64
  %582 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %583 = bitcast %struct.FT_Vector_** %582 to i8**
  %584 = load i8*, i8** %583, align 8
  %585 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %572, i64 16, i64 %580, i64 %581, i8* %584, i32* nonnull %3) #4
  store i8* %585, i8** %583, align 8
  %586 = load i32, i32* %3, align 4
  %587 = icmp eq i32 %586, 0
  br i1 %587, label %588, label %596

588:                                              ; preds = %579
  %589 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %590 = load i8*, i8** %589, align 8
  %591 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %572, i64 1, i64 %580, i64 %581, i8* %590, i32* nonnull %3) #4
  store i8* %591, i8** %589, align 8
  %592 = load i32, i32* %3, align 4
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %596

594:                                              ; preds = %588
  store i32 %577, i32* %562, align 4
  %595 = load i32, i32* %454, align 8
  br label %598

596:                                              ; preds = %588, %579
  %597 = phi i32 [ %592, %588 ], [ %586, %579 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %565) #4
  br label %609

598:                                              ; preds = %594, %567
  %599 = phi i8* [ %591, %594 ], [ %569, %567 ]
  %600 = phi i32 [ %595, %594 ], [ %540, %567 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %565) #4
  %601 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %602 = load %struct.FT_Vector_*, %struct.FT_Vector_** %601, align 8
  %603 = zext i32 %600 to i64
  %604 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %602, i64 %603
  %605 = getelementptr inbounds i8, i8* %599, i64 %603
  %606 = bitcast %struct.FT_Vector_* %604 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %606, i8* nonnull align 16 %303, i64 16, i1 false) #4
  store i8 1, i8* %605, align 1
  %607 = load i32, i32* %454, align 8
  %608 = add i32 %607, 1
  store i32 %608, i32* %454, align 8
  br label %609

609:                                              ; preds = %598, %596, %531
  %610 = phi i32 [ 0, %531 ], [ %597, %596 ], [ 0, %598 ]
  store i8 0, i8* %351, align 8
  br label %611

611:                                              ; preds = %609, %554, %521, %519, %441
  %612 = phi i32 [ %442, %441 ], [ %520, %519 ], [ 0, %521 ], [ %610, %609 ], [ 0, %554 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %303) #4
  br label %802

613:                                              ; preds = %211, %193
  %614 = bitcast <2 x i64>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %614) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %614, i8 -86, i64 16, i1 false) #4
  %615 = load i64, i64* %186, align 8
  %616 = load i64, i64* %205, align 8
  %617 = call i64 @FT_MulDiv(i64 %615, i64 %616, i64 %208) #4
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %16, i64 %617, i64 %204) #4
  %618 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %619 = bitcast i64* %618 to <2 x i64>*
  %620 = load <2 x i64>, <2 x i64>* %619, align 8
  %621 = load <2 x i64>, <2 x i64>* %15, align 16
  %622 = add nsw <2 x i64> %621, %620
  store <2 x i64> %622, <2 x i64>* %15, align 16
  %623 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 4
  %624 = load i8, i8* %623, align 8
  %625 = icmp eq i8 %624, 0
  br i1 %625, label %635, label %626

626:                                              ; preds = %613
  %627 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %628 = load %struct.FT_Vector_*, %struct.FT_Vector_** %627, align 8
  %629 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %630 = load i32, i32* %629, align 8
  %631 = add i32 %630, -1
  %632 = zext i32 %631 to i64
  %633 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %628, i64 %632
  %634 = bitcast %struct.FT_Vector_* %633 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %634, i8* nonnull align 16 %614, i64 16, i1 false) #4
  br label %705

635:                                              ; preds = %613
  %636 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %637 = load i32, i32* %636, align 8
  %638 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %639 = load i32, i32* %638, align 4
  %640 = icmp ugt i32 %637, %639
  br i1 %640, label %641, label %659

641:                                              ; preds = %635
  %642 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %643 = load %struct.FT_Vector_*, %struct.FT_Vector_** %642, align 8
  %644 = add i32 %637, -1
  %645 = zext i32 %644 to i64
  %646 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %643, i64 %645, i32 0
  %647 = load i64, i64* %646, align 8
  %648 = extractelement <2 x i64> %622, i32 0
  %649 = sub i64 1, %648
  %650 = add i64 %649, %647
  %651 = icmp ult i64 %650, 3
  br i1 %651, label %652, label %659

652:                                              ; preds = %641
  %653 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %643, i64 %645, i32 1
  %654 = load i64, i64* %653, align 8
  %655 = extractelement <2 x i64> %622, i32 1
  %656 = sub i64 1, %655
  %657 = add i64 %656, %654
  %658 = icmp ult i64 %657, 3
  br i1 %658, label %708, label %659

659:                                              ; preds = %652, %641, %635
  %660 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %661 = load i32, i32* %660, align 4
  %662 = add i32 %637, 1
  %663 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %663) #4
  store i32 0, i32* %6, align 4
  %664 = icmp ugt i32 %662, %661
  br i1 %664, label %668, label %665

665:                                              ; preds = %659
  %666 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %667 = load i8*, i8** %666, align 8
  br label %694

668:                                              ; preds = %659
  %669 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %670 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %669, align 8
  br label %671

671:                                              ; preds = %671, %668
  %672 = phi i32 [ %661, %668 ], [ %675, %671 ]
  %673 = lshr i32 %672, 1
  %674 = add i32 %672, 16
  %675 = add i32 %674, %673
  %676 = icmp ult i32 %675, %662
  br i1 %676, label %671, label %677

677:                                              ; preds = %671
  %678 = zext i32 %661 to i64
  %679 = zext i32 %675 to i64
  %680 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %681 = bitcast %struct.FT_Vector_** %680 to i8**
  %682 = load i8*, i8** %681, align 8
  %683 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %670, i64 16, i64 %678, i64 %679, i8* %682, i32* nonnull %6) #4
  store i8* %683, i8** %681, align 8
  %684 = load i32, i32* %6, align 4
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %706

686:                                              ; preds = %677
  %687 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %688 = load i8*, i8** %687, align 8
  %689 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %670, i64 1, i64 %678, i64 %679, i8* %688, i32* nonnull %6) #4
  store i8* %689, i8** %687, align 8
  %690 = load i32, i32* %6, align 4
  %691 = icmp eq i32 %690, 0
  br i1 %691, label %692, label %706

692:                                              ; preds = %686
  store i32 %675, i32* %660, align 4
  %693 = load i32, i32* %636, align 8
  br label %694

694:                                              ; preds = %692, %665
  %695 = phi i8* [ %689, %692 ], [ %667, %665 ]
  %696 = phi i32 [ %693, %692 ], [ %637, %665 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %663) #4
  %697 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %698 = load %struct.FT_Vector_*, %struct.FT_Vector_** %697, align 8
  %699 = zext i32 %696 to i64
  %700 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %698, i64 %699
  %701 = getelementptr inbounds i8, i8* %695, i64 %699
  %702 = bitcast %struct.FT_Vector_* %700 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %702, i8* nonnull align 16 %614, i64 16, i1 false) #4
  store i8 1, i8* %701, align 1
  %703 = load i32, i32* %636, align 8
  %704 = add i32 %703, 1
  store i32 %704, i32* %636, align 8
  br label %705

705:                                              ; preds = %694, %626
  store i8 0, i8* %623, align 8
  br label %708

706:                                              ; preds = %686, %677
  %707 = phi i32 [ %690, %686 ], [ %684, %677 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %663) #4
  store i8 0, i8* %623, align 8
  br label %802

708:                                              ; preds = %705, %652
  br i1 %43, label %709, label %802

709:                                              ; preds = %708
  %710 = load i64, i64* %186, align 8
  %711 = load i64, i64* %23, align 8
  %712 = add nsw i64 %711, %190
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %16, i64 %710, i64 %712) #4
  %713 = bitcast i64* %618 to <2 x i64>*
  %714 = load <2 x i64>, <2 x i64>* %713, align 8
  %715 = load <2 x i64>, <2 x i64>* %15, align 16
  %716 = add nsw <2 x i64> %715, %714
  store <2 x i64> %716, <2 x i64>* %15, align 16
  %717 = load i8, i8* %623, align 8
  %718 = icmp eq i8 %717, 0
  br i1 %718, label %728, label %719

719:                                              ; preds = %709
  %720 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %721 = load %struct.FT_Vector_*, %struct.FT_Vector_** %720, align 8
  %722 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %723 = load i32, i32* %722, align 8
  %724 = add i32 %723, -1
  %725 = zext i32 %724 to i64
  %726 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %721, i64 %725
  %727 = bitcast %struct.FT_Vector_* %726 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %727, i8* nonnull align 16 %614, i64 16, i1 false) #4
  br label %800

728:                                              ; preds = %709
  %729 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %179, i64 0, i32 0
  %730 = load i32, i32* %729, align 8
  %731 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 5
  %732 = load i32, i32* %731, align 4
  %733 = icmp ugt i32 %730, %732
  br i1 %733, label %734, label %752

734:                                              ; preds = %728
  %735 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %736 = load %struct.FT_Vector_*, %struct.FT_Vector_** %735, align 8
  %737 = add i32 %730, -1
  %738 = zext i32 %737 to i64
  %739 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %736, i64 %738, i32 0
  %740 = load i64, i64* %739, align 8
  %741 = extractelement <2 x i64> %716, i32 0
  %742 = sub i64 1, %741
  %743 = add i64 %742, %740
  %744 = icmp ult i64 %743, 3
  br i1 %744, label %745, label %752

745:                                              ; preds = %734
  %746 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %736, i64 %738, i32 1
  %747 = load i64, i64* %746, align 8
  %748 = extractelement <2 x i64> %716, i32 1
  %749 = sub i64 1, %748
  %750 = add i64 %749, %747
  %751 = icmp ult i64 %750, 3
  br i1 %751, label %802, label %752

752:                                              ; preds = %745, %734, %728
  %753 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 1
  %754 = load i32, i32* %753, align 4
  %755 = add i32 %730, 1
  %756 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %756) #4
  store i32 0, i32* %8, align 4
  %757 = icmp ugt i32 %755, %754
  br i1 %757, label %761, label %758

758:                                              ; preds = %752
  %759 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %760 = load i8*, i8** %759, align 8
  br label %789

761:                                              ; preds = %752
  %762 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 6
  %763 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %762, align 8
  br label %764

764:                                              ; preds = %764, %761
  %765 = phi i32 [ %754, %761 ], [ %768, %764 ]
  %766 = lshr i32 %765, 1
  %767 = add i32 %765, 16
  %768 = add i32 %767, %766
  %769 = icmp ult i32 %768, %755
  br i1 %769, label %764, label %770

770:                                              ; preds = %764
  %771 = zext i32 %754 to i64
  %772 = zext i32 %768 to i64
  %773 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %774 = bitcast %struct.FT_Vector_** %773 to i8**
  %775 = load i8*, i8** %774, align 8
  %776 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %763, i64 16, i64 %771, i64 %772, i8* %775, i32* nonnull %8) #4
  store i8* %776, i8** %774, align 8
  %777 = load i32, i32* %8, align 4
  %778 = icmp eq i32 %777, 0
  br i1 %778, label %779, label %787

779:                                              ; preds = %770
  %780 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 3
  %781 = load i8*, i8** %780, align 8
  %782 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %763, i64 1, i64 %771, i64 %772, i8* %781, i32* nonnull %8) #4
  store i8* %782, i8** %780, align 8
  %783 = load i32, i32* %8, align 4
  %784 = icmp eq i32 %783, 0
  br i1 %784, label %785, label %787

785:                                              ; preds = %779
  store i32 %768, i32* %753, align 4
  %786 = load i32, i32* %729, align 8
  br label %789

787:                                              ; preds = %779, %770
  %788 = phi i32 [ %783, %779 ], [ %777, %770 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %756) #4
  br label %800

789:                                              ; preds = %785, %758
  %790 = phi i8* [ %782, %785 ], [ %760, %758 ]
  %791 = phi i32 [ %786, %785 ], [ %730, %758 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %756) #4
  %792 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %178, i32 2
  %793 = load %struct.FT_Vector_*, %struct.FT_Vector_** %792, align 8
  %794 = zext i32 %791 to i64
  %795 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %793, i64 %794
  %796 = getelementptr inbounds i8, i8* %790, i64 %794
  %797 = bitcast %struct.FT_Vector_* %795 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %797, i8* nonnull align 16 %614, i64 16, i1 false) #4
  store i8 1, i8* %796, align 1
  %798 = load i32, i32* %729, align 8
  %799 = add i32 %798, 1
  store i32 %799, i32* %729, align 8
  br label %800

800:                                              ; preds = %789, %787, %719
  %801 = phi i32 [ 0, %719 ], [ %788, %787 ], [ 0, %789 ]
  store i8 0, i8* %623, align 8
  br label %802

802:                                              ; preds = %706, %708, %745, %800, %242, %297, %611
  %803 = phi i8* [ %300, %611 ], [ %217, %297 ], [ %217, %242 ], [ %614, %800 ], [ %614, %745 ], [ %614, %708 ], [ %614, %706 ]
  %804 = phi i32 [ %612, %611 ], [ %298, %297 ], [ 0, %242 ], [ %801, %800 ], [ 0, %745 ], [ 0, %708 ], [ %707, %706 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %803) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %188) #4
  br label %805

805:                                              ; preds = %802, %183, %174, %2
  %806 = phi i32 [ 0, %2 ], [ %175, %174 ], [ %184, %183 ], [ %804, %802 ]
  ret i32 %806
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_ConicTo(%struct.FT_StrokerRec_*, %struct.FT_Vector_* readonly, %struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca [34 x %struct.FT_Vector_], align 16
  %10 = alloca <2 x i64>, align 16
  %11 = bitcast <2 x i64>* %10 to %struct.FT_Vector_*
  %12 = alloca <2 x i64>, align 16
  %13 = bitcast <2 x i64>* %12 to %struct.FT_Vector_*
  %14 = alloca <2 x i64>, align 16
  %15 = bitcast <2 x i64>* %14 to %struct.FT_Vector_*
  %16 = alloca <2 x i64>, align 16
  %17 = bitcast <2 x i64>* %16 to %struct.FT_Vector_*
  %18 = bitcast [34 x %struct.FT_Vector_]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 544, i8* nonnull %18) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 544, i1 false)
  %19 = icmp ne %struct.FT_StrokerRec_* %0, null
  %20 = icmp ne %struct.FT_Vector_* %1, null
  %21 = and i1 %19, %20
  %22 = icmp ne %struct.FT_Vector_* %2, null
  %23 = and i1 %21, %22
  br i1 %23, label %24, label %596

24:                                               ; preds = %3
  %25 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %26 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %25, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %27, 1
  %31 = sub i64 %30, %29
  %32 = icmp ult i64 %31, 3
  br i1 %32, label %33, label %56

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = add i64 %35, 1
  %39 = sub i64 %38, %37
  %40 = icmp ult i64 %39, 3
  br i1 %40, label %41, label %56

41:                                               ; preds = %33
  %42 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = add i64 %29, 1
  %45 = sub i64 %44, %43
  %46 = icmp ult i64 %45, 3
  br i1 %46, label %47, label %56

47:                                               ; preds = %41
  %48 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %37, 1
  %51 = sub i64 %50, %49
  %52 = icmp ult i64 %51, 3
  br i1 %52, label %53, label %56

53:                                               ; preds = %47
  %54 = bitcast %struct.FT_Vector_* %25 to i8*
  %55 = bitcast %struct.FT_Vector_* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* nonnull align 8 %55, i64 16, i1 false)
  br label %596

56:                                               ; preds = %47, %41, %33, %24
  %57 = bitcast %struct.FT_Vector_* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %18, i8* nonnull align 8 %57, i64 16, i1 false)
  %58 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 1
  %59 = bitcast %struct.FT_Vector_* %58 to i8*
  %60 = bitcast %struct.FT_Vector_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %59, i8* nonnull align 8 %60, i64 16, i1 false)
  %61 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 2
  %62 = bitcast %struct.FT_Vector_* %61 to i8*
  %63 = bitcast %struct.FT_Vector_* %25 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %62, i8* align 8 %63, i64 16, i1 false)
  %64 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 0
  %65 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %66 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  %67 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  %68 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  %69 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 12
  %70 = bitcast <2 x i64>* %10 to i8*
  %71 = bitcast <2 x i64>* %12 to i8*
  %72 = getelementptr inbounds <2 x i64>, <2 x i64>* %12, i64 0, i64 0
  %73 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %13, i64 0, i32 1
  %74 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %75 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 9
  %76 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0
  %77 = bitcast <2 x i64>* %14 to i8*
  %78 = bitcast <2 x i64>* %16 to i8*
  %79 = bitcast i32* %7 to i8*
  %80 = bitcast i32* %6 to i8*
  %81 = bitcast i32* %5 to i8*
  %82 = bitcast i32* %4 to i8*
  %83 = bitcast i32* %8 to i8*
  %84 = bitcast <2 x i64>* %10 to i8*
  %85 = bitcast <2 x i64>* %12 to i8*
  %86 = bitcast <2 x i64>* %14 to i8*
  %87 = bitcast <2 x i64>* %16 to i8*
  br label %88

88:                                               ; preds = %56, %589
  %89 = phi %struct.FT_Vector_* [ %64, %56 ], [ %592, %589 ]
  %90 = phi i64 [ 0, %56 ], [ %591, %589 ]
  %91 = phi i8 [ 1, %56 ], [ %590, %589 ]
  %92 = load i64, i64* %65, align 8
  %93 = icmp slt i64 %90, 30
  br i1 %93, label %94, label %164

94:                                               ; preds = %88
  %95 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 1, i32 0
  %96 = load i64, i64* %95, align 16
  %97 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 0
  %98 = load i64, i64* %97, align 16
  %99 = sub nsw i64 %96, %98
  %100 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 1, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = sub nsw i64 %101, %103
  %105 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 0, i32 0
  %106 = load i64, i64* %105, align 16
  %107 = sub nsw i64 %106, %96
  %108 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 %90, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = sub nsw i64 %109, %101
  %111 = add i64 %99, 1
  %112 = icmp ult i64 %111, 3
  %113 = add i64 %104, 1
  %114 = icmp ult i64 %113, 3
  %115 = and i1 %112, %114
  %116 = add i64 %107, 1
  %117 = icmp ult i64 %116, 3
  %118 = add i64 %110, 1
  %119 = icmp ult i64 %118, 3
  %120 = and i1 %117, %119
  br i1 %115, label %121, label %124

121:                                              ; preds = %94
  br i1 %120, label %128, label %122

122:                                              ; preds = %121
  %123 = call i64 @FT_Atan2(i64 %107, i64 %110) #4
  br label %128

124:                                              ; preds = %94
  %125 = call i64 @FT_Atan2(i64 %99, i64 %104) #4
  br i1 %120, label %128, label %126

126:                                              ; preds = %124
  %127 = call i64 @FT_Atan2(i64 %107, i64 %110) #4
  br label %128

128:                                              ; preds = %124, %121, %122, %126
  %129 = phi i64 [ %92, %121 ], [ %123, %122 ], [ %125, %126 ], [ %125, %124 ]
  %130 = phi i64 [ %92, %121 ], [ %123, %122 ], [ %127, %126 ], [ %125, %124 ]
  %131 = call i64 @FT_Angle_Diff(i64 %129, i64 %130) #4
  %132 = icmp slt i64 %131, 0
  %133 = sub nsw i64 0, %131
  %134 = select i1 %132, i64 %133, i64 %131
  %135 = icmp sgt i64 %134, 1966079
  br i1 %135, label %136, label %164

136:                                              ; preds = %128
  %137 = load i8, i8* %66, align 8
  %138 = icmp eq i8 %137, 0
  br i1 %138, label %140, label %139

139:                                              ; preds = %136
  store i64 %129, i64* %65, align 8
  br label %140

140:                                              ; preds = %136, %139
  %141 = load i64, i64* %97, align 16
  %142 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 4, i32 0
  store i64 %141, i64* %142, align 16
  %143 = load i64, i64* %105, align 16
  %144 = load i64, i64* %95, align 16
  %145 = add nsw i64 %144, %143
  %146 = add nsw i64 %144, %141
  %147 = ashr i64 %146, 1
  %148 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 3, i32 0
  store i64 %147, i64* %148, align 16
  %149 = add nsw i64 %145, %146
  %150 = ashr i64 %149, 2
  store i64 %150, i64* %97, align 16
  %151 = ashr i64 %145, 1
  store i64 %151, i64* %95, align 16
  %152 = load i64, i64* %102, align 8
  %153 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 4, i32 1
  store i64 %152, i64* %153, align 8
  %154 = load i64, i64* %108, align 8
  %155 = load i64, i64* %100, align 8
  %156 = add nsw i64 %155, %154
  %157 = add nsw i64 %155, %152
  %158 = ashr i64 %157, 1
  %159 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 3, i32 1
  store i64 %158, i64* %159, align 8
  %160 = add nsw i64 %156, %157
  %161 = ashr i64 %160, 2
  store i64 %161, i64* %102, align 8
  %162 = ashr i64 %156, 1
  store i64 %162, i64* %100, align 8
  %163 = add nuw nsw i64 %90, 2
  br label %589

164:                                              ; preds = %128, %88
  %165 = phi i64 [ %129, %128 ], [ %92, %88 ]
  %166 = phi i64 [ %130, %128 ], [ %92, %88 ]
  %167 = icmp eq i8 %91, 0
  br i1 %167, label %175, label %168

168:                                              ; preds = %164
  %169 = load i8, i8* %66, align 8
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %173, label %171

171:                                              ; preds = %168
  %172 = call fastcc i32 @ft_stroker_subpath_start(%struct.FT_StrokerRec_* nonnull %0, i64 %165, i64 0)
  br label %187

173:                                              ; preds = %168
  store i64 %165, i64* %67, align 8
  %174 = call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 0)
  br label %187

175:                                              ; preds = %164
  %176 = load i64, i64* %65, align 8
  %177 = call i64 @FT_Angle_Diff(i64 %176, i64 %165) #4
  %178 = icmp slt i64 %177, 0
  %179 = sub nsw i64 0, %177
  %180 = select i1 %178, i64 %179, i64 %177
  %181 = icmp sgt i64 %180, 491520
  br i1 %181, label %182, label %190

182:                                              ; preds = %175
  %183 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2
  %184 = bitcast %struct.FT_Vector_* %183 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* align 16 %184, i64 16, i1 false)
  store i64 %165, i64* %67, align 8
  store i32 0, i32* %68, align 8
  %185 = call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 0)
  %186 = load i32, i32* %69, align 4
  store i32 %186, i32* %68, align 8
  br label %187

187:                                              ; preds = %182, %171, %173
  %188 = phi i32 [ %172, %171 ], [ %174, %173 ], [ %185, %182 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %596

190:                                              ; preds = %175, %187
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %84, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %85, i8 -86, i64 16, i1 false)
  %191 = call i64 @FT_Angle_Diff(i64 %165, i64 %166) #4
  %192 = sdiv i64 %191, 2
  %193 = add nsw i64 %192, %165
  %194 = load i64, i64* %74, align 8
  %195 = call i64 @FT_Cos(i64 %192) #4
  %196 = call i64 @FT_DivFix(i64 %194, i64 %195) #4
  %197 = load i8, i8* %75, align 8
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %211, label %199

199:                                              ; preds = %190
  %200 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 0, i32 0
  %201 = load i64, i64* %200, align 16
  %202 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 0
  %203 = load i64, i64* %202, align 16
  %204 = sub nsw i64 %201, %203
  %205 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 %90, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 1
  %208 = load i64, i64* %207, align 8
  %209 = sub nsw i64 %206, %208
  %210 = call i64 @FT_Atan2(i64 %204, i64 %209) #4
  br label %211

211:                                              ; preds = %190, %199
  %212 = phi i64 [ %210, %199 ], [ 0, %190 ]
  %213 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 1, i32 0
  %214 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 0, i32 0
  %215 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 %90, i32 1
  %216 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 0
  %217 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %89, i64 2, i32 1
  %218 = bitcast i64* %213 to <2 x i64>*
  br label %219

219:                                              ; preds = %581, %211
  %220 = phi i64 [ 0, %211 ], [ %582, %581 ]
  %221 = phi %struct.FT_StrokeBorderRec_* [ %76, %211 ], [ %583, %581 ]
  %222 = mul nuw nsw i64 %220, -11796480
  %223 = add nuw nsw i64 %222, 5898240
  %224 = add nsw i64 %193, %223
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %11, i64 %196, i64 %224) #4
  %225 = load <2 x i64>, <2 x i64>* %218, align 16
  %226 = load <2 x i64>, <2 x i64>* %10, align 16
  %227 = add nsw <2 x i64> %226, %225
  store <2 x i64> %227, <2 x i64>* %10, align 16
  %228 = load i64, i64* %74, align 8
  %229 = add nsw i64 %223, %166
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %13, i64 %228, i64 %229) #4
  %230 = load i64, i64* %214, align 16
  %231 = load i64, i64* %72, align 16
  %232 = add nsw i64 %231, %230
  store i64 %232, i64* %72, align 16
  %233 = load i64, i64* %215, align 8
  %234 = load i64, i64* %73, align 8
  %235 = add nsw i64 %234, %233
  store i64 %235, i64* %73, align 8
  %236 = load i8, i8* %75, align 8
  %237 = icmp eq i8 %236, 0
  br i1 %237, label %527, label %238

238:                                              ; preds = %219
  %239 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 2
  %240 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %241 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = add i32 %242, -1
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %240, i64 %244, i32 0
  %246 = bitcast i64* %245 to <2 x i64>*
  %247 = load <2 x i64>, <2 x i64>* %246, align 8
  %248 = extractelement <2 x i64> %247, i32 0
  %249 = sub nsw i64 %232, %248
  %250 = extractelement <2 x i64> %247, i32 1
  %251 = sub nsw i64 %235, %250
  %252 = call i64 @FT_Atan2(i64 %249, i64 %251) #4
  %253 = call i64 @FT_Angle_Diff(i64 %212, i64 %252) #4
  %254 = icmp slt i64 %253, 0
  %255 = sub nsw i64 0, %253
  %256 = select i1 %254, i64 %255, i64 %253
  %257 = icmp sgt i64 %256, 5898240
  br i1 %257, label %258, label %527

258:                                              ; preds = %238
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %77) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %86, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %87, i8 -86, i64 16, i1 false)
  %259 = load i64, i64* %216, align 16
  %260 = sub nsw i64 %259, %248
  %261 = load i64, i64* %217, align 8
  %262 = sub nsw i64 %261, %250
  %263 = call i64 @FT_Atan2(i64 %260, i64 %262) #4
  %264 = load i64, i64* %214, align 16
  %265 = load i64, i64* %72, align 16
  %266 = sub nsw i64 %264, %265
  %267 = load i64, i64* %73, align 8
  %268 = sub nsw i64 %233, %267
  %269 = call i64 @FT_Atan2(i64 %266, i64 %268) #4
  %270 = load <2 x i64>, <2 x i64>* %12, align 16
  %271 = sub nsw <2 x i64> %270, %247
  store <2 x i64> %271, <2 x i64>* %14, align 16
  %272 = call i64 @FT_Vector_Length(%struct.FT_Vector_* nonnull %15) #4
  %273 = sub nsw i64 %252, %269
  %274 = call i64 @FT_Sin(i64 %273) #4
  %275 = icmp slt i64 %274, 0
  %276 = sub nsw i64 0, %274
  %277 = select i1 %275, i64 %276, i64 %274
  %278 = sub nsw i64 %263, %269
  %279 = call i64 @FT_Sin(i64 %278) #4
  %280 = icmp slt i64 %279, 0
  %281 = sub nsw i64 0, %279
  %282 = select i1 %280, i64 %281, i64 %279
  %283 = call i64 @FT_MulDiv(i64 %272, i64 %277, i64 %282) #4
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %17, i64 %283, i64 %263) #4
  %284 = load <2 x i64>, <2 x i64>* %16, align 16
  %285 = add nsw <2 x i64> %284, %247
  store <2 x i64> %285, <2 x i64>* %16, align 16
  %286 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 4
  store i8 0, i8* %286, align 8
  %287 = load i32, i32* %241, align 8
  %288 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 5
  %289 = load i32, i32* %288, align 4
  %290 = icmp ugt i32 %287, %289
  br i1 %290, label %291, label %308

291:                                              ; preds = %258
  %292 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %293 = add i32 %287, -1
  %294 = zext i32 %293 to i64
  %295 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %292, i64 %294, i32 0
  %296 = load i64, i64* %295, align 8
  %297 = extractelement <2 x i64> %285, i32 0
  %298 = sub i64 1, %297
  %299 = add i64 %298, %296
  %300 = icmp ult i64 %299, 3
  br i1 %300, label %301, label %308

301:                                              ; preds = %291
  %302 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %292, i64 %294, i32 1
  %303 = load i64, i64* %302, align 8
  %304 = extractelement <2 x i64> %285, i32 1
  %305 = sub i64 1, %304
  %306 = add i64 %305, %303
  %307 = icmp ult i64 %306, 3
  br i1 %307, label %352, label %308

308:                                              ; preds = %301, %291, %258
  %309 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 1
  %310 = load i32, i32* %309, align 4
  %311 = add i32 %287, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #4
  store i32 0, i32* %7, align 4
  %312 = icmp ugt i32 %311, %310
  br i1 %312, label %316, label %313

313:                                              ; preds = %308
  %314 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %315 = load i8*, i8** %314, align 8
  br label %341

316:                                              ; preds = %308
  %317 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 6
  %318 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %317, align 8
  br label %319

319:                                              ; preds = %319, %316
  %320 = phi i32 [ %310, %316 ], [ %323, %319 ]
  %321 = lshr i32 %320, 1
  %322 = add i32 %320, 16
  %323 = add i32 %322, %321
  %324 = icmp ult i32 %323, %311
  br i1 %324, label %319, label %325

325:                                              ; preds = %319
  %326 = zext i32 %310 to i64
  %327 = zext i32 %323 to i64
  %328 = bitcast %struct.FT_Vector_** %239 to i8**
  %329 = load i8*, i8** %328, align 8
  %330 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %318, i64 16, i64 %326, i64 %327, i8* %329, i32* nonnull %7) #4
  store i8* %330, i8** %328, align 8
  %331 = load i32, i32* %7, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %523

333:                                              ; preds = %325
  %334 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %335 = load i8*, i8** %334, align 8
  %336 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %318, i64 1, i64 %326, i64 %327, i8* %335, i32* nonnull %7) #4
  store i8* %336, i8** %334, align 8
  %337 = load i32, i32* %7, align 4
  %338 = icmp eq i32 %337, 0
  br i1 %338, label %339, label %523

339:                                              ; preds = %333
  store i32 %323, i32* %309, align 4
  %340 = load i32, i32* %241, align 8
  br label %341

341:                                              ; preds = %313, %339
  %342 = phi i8* [ %336, %339 ], [ %315, %313 ]
  %343 = phi i32 [ %340, %339 ], [ %287, %313 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #4
  %344 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %345 = zext i32 %343 to i64
  %346 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %344, i64 %345
  %347 = getelementptr inbounds i8, i8* %342, i64 %345
  %348 = bitcast %struct.FT_Vector_* %346 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %348, i8* nonnull align 16 %78, i64 16, i1 false) #4
  store i8 1, i8* %347, align 1
  %349 = load i32, i32* %241, align 8
  %350 = add i32 %349, 1
  store i32 %350, i32* %241, align 8
  store i8 0, i8* %286, align 8
  %351 = load i32, i32* %288, align 4
  br label %352

352:                                              ; preds = %301, %341
  %353 = phi i32 [ %351, %341 ], [ %289, %301 ]
  %354 = phi i32 [ %350, %341 ], [ %287, %301 ]
  %355 = icmp ugt i32 %354, %353
  br i1 %355, label %356, label %373

356:                                              ; preds = %352
  %357 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %358 = add i32 %354, -1
  %359 = zext i32 %358 to i64
  %360 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %357, i64 %359, i32 0
  %361 = load i64, i64* %360, align 8
  %362 = load i64, i64* %72, align 16
  %363 = add i64 %361, 1
  %364 = sub i64 %363, %362
  %365 = icmp ult i64 %364, 3
  br i1 %365, label %366, label %373

366:                                              ; preds = %356
  %367 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %357, i64 %359, i32 1
  %368 = load i64, i64* %367, align 8
  %369 = load i64, i64* %73, align 8
  %370 = add i64 %368, 1
  %371 = sub i64 %370, %369
  %372 = icmp ult i64 %371, 3
  br i1 %372, label %416, label %373

373:                                              ; preds = %366, %356, %352
  %374 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 1
  %375 = load i32, i32* %374, align 4
  %376 = add i32 %354, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %80) #4
  store i32 0, i32* %6, align 4
  %377 = icmp ugt i32 %376, %375
  br i1 %377, label %381, label %378

378:                                              ; preds = %373
  %379 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %380 = load i8*, i8** %379, align 8
  br label %406

381:                                              ; preds = %373
  %382 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 6
  %383 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %382, align 8
  br label %384

384:                                              ; preds = %384, %381
  %385 = phi i32 [ %375, %381 ], [ %388, %384 ]
  %386 = lshr i32 %385, 1
  %387 = add i32 %385, 16
  %388 = add i32 %387, %386
  %389 = icmp ult i32 %388, %376
  br i1 %389, label %384, label %390

390:                                              ; preds = %384
  %391 = zext i32 %375 to i64
  %392 = zext i32 %388 to i64
  %393 = bitcast %struct.FT_Vector_** %239 to i8**
  %394 = load i8*, i8** %393, align 8
  %395 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %383, i64 16, i64 %391, i64 %392, i8* %394, i32* nonnull %6) #4
  store i8* %395, i8** %393, align 8
  %396 = load i32, i32* %6, align 4
  %397 = icmp eq i32 %396, 0
  br i1 %397, label %398, label %523

398:                                              ; preds = %390
  %399 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %400 = load i8*, i8** %399, align 8
  %401 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %383, i64 1, i64 %391, i64 %392, i8* %400, i32* nonnull %6) #4
  store i8* %401, i8** %399, align 8
  %402 = load i32, i32* %6, align 4
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %523

404:                                              ; preds = %398
  store i32 %388, i32* %374, align 4
  %405 = load i32, i32* %241, align 8
  br label %406

406:                                              ; preds = %404, %378
  %407 = phi i8* [ %401, %404 ], [ %380, %378 ]
  %408 = phi i32 [ %405, %404 ], [ %354, %378 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %80) #4
  %409 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %410 = zext i32 %408 to i64
  %411 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %409, i64 %410
  %412 = getelementptr inbounds i8, i8* %407, i64 %410
  %413 = bitcast %struct.FT_Vector_* %411 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %413, i8* nonnull align 16 %71, i64 16, i1 false) #4
  store i8 1, i8* %412, align 1
  %414 = load i32, i32* %241, align 8
  %415 = add i32 %414, 1
  store i32 %415, i32* %241, align 8
  store i8 0, i8* %286, align 8
  br label %416

416:                                              ; preds = %366, %406
  %417 = phi i32 [ %354, %366 ], [ %415, %406 ]
  %418 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 1
  %419 = load i32, i32* %418, align 4
  %420 = add i32 %417, 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #4
  store i32 0, i32* %5, align 4
  %421 = icmp ugt i32 %420, %419
  br i1 %421, label %425, label %422

422:                                              ; preds = %416
  %423 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %424 = load i8*, i8** %423, align 8
  br label %450

425:                                              ; preds = %416
  %426 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 6
  %427 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %426, align 8
  br label %428

428:                                              ; preds = %428, %425
  %429 = phi i32 [ %419, %425 ], [ %432, %428 ]
  %430 = lshr i32 %429, 1
  %431 = add i32 %429, 16
  %432 = add i32 %431, %430
  %433 = icmp ult i32 %432, %420
  br i1 %433, label %428, label %434

434:                                              ; preds = %428
  %435 = zext i32 %419 to i64
  %436 = zext i32 %432 to i64
  %437 = bitcast %struct.FT_Vector_** %239 to i8**
  %438 = load i8*, i8** %437, align 8
  %439 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %427, i64 16, i64 %435, i64 %436, i8* %438, i32* nonnull %5) #4
  store i8* %439, i8** %437, align 8
  %440 = load i32, i32* %5, align 4
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %523

442:                                              ; preds = %434
  %443 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %444 = load i8*, i8** %443, align 8
  %445 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %427, i64 1, i64 %435, i64 %436, i8* %444, i32* nonnull %5) #4
  store i8* %445, i8** %443, align 8
  %446 = load i32, i32* %5, align 4
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %523

448:                                              ; preds = %442
  store i32 %432, i32* %418, align 4
  %449 = load i32, i32* %241, align 8
  br label %450

450:                                              ; preds = %422, %448
  %451 = phi i8* [ %445, %448 ], [ %424, %422 ]
  %452 = phi i32 [ %449, %448 ], [ %417, %422 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #4
  %453 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %454 = zext i32 %452 to i64
  %455 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %453, i64 %454
  %456 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %457 = getelementptr inbounds i8, i8* %451, i64 %454
  %458 = bitcast %struct.FT_Vector_* %455 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %458, i8* nonnull align 16 %70, i64 16, i1 false) #4
  %459 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %455, i64 1, i32 0
  store i64 %248, i64* %459, align 8
  %460 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %455, i64 1, i32 1
  store i64 %250, i64* %460, align 8
  store i8 0, i8* %457, align 1
  %461 = getelementptr inbounds i8, i8* %457, i64 1
  store i8 1, i8* %461, align 1
  %462 = load i32, i32* %241, align 8
  %463 = add i32 %462, 2
  store i32 %463, i32* %241, align 8
  store i8 0, i8* %286, align 8
  %464 = load i32, i32* %288, align 4
  %465 = icmp ugt i32 %463, %464
  br i1 %465, label %466, label %483

466:                                              ; preds = %450
  %467 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %468 = add i32 %462, 1
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %467, i64 %469, i32 0
  %471 = load i64, i64* %470, align 8
  %472 = load i64, i64* %72, align 16
  %473 = add i64 %471, 1
  %474 = sub i64 %473, %472
  %475 = icmp ult i64 %474, 3
  br i1 %475, label %476, label %483

476:                                              ; preds = %466
  %477 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %467, i64 %469, i32 1
  %478 = load i64, i64* %477, align 8
  %479 = load i64, i64* %73, align 8
  %480 = add i64 %478, 1
  %481 = sub i64 %480, %479
  %482 = icmp ult i64 %481, 3
  br i1 %482, label %526, label %483

483:                                              ; preds = %476, %466, %450
  %484 = load i32, i32* %418, align 4
  %485 = add i32 %462, 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #4
  store i32 0, i32* %4, align 4
  %486 = icmp ugt i32 %485, %484
  br i1 %486, label %489, label %487

487:                                              ; preds = %483
  %488 = load i8*, i8** %456, align 8
  br label %513

489:                                              ; preds = %483
  %490 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 6
  %491 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %490, align 8
  br label %492

492:                                              ; preds = %492, %489
  %493 = phi i32 [ %484, %489 ], [ %496, %492 ]
  %494 = lshr i32 %493, 1
  %495 = add i32 %493, 16
  %496 = add i32 %495, %494
  %497 = icmp ult i32 %496, %485
  br i1 %497, label %492, label %498

498:                                              ; preds = %492
  %499 = zext i32 %484 to i64
  %500 = zext i32 %496 to i64
  %501 = bitcast %struct.FT_Vector_** %239 to i8**
  %502 = load i8*, i8** %501, align 8
  %503 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %491, i64 16, i64 %499, i64 %500, i8* %502, i32* nonnull %4) #4
  store i8* %503, i8** %501, align 8
  %504 = load i32, i32* %4, align 4
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %523

506:                                              ; preds = %498
  %507 = load i8*, i8** %456, align 8
  %508 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %491, i64 1, i64 %499, i64 %500, i8* %507, i32* nonnull %4) #4
  store i8* %508, i8** %456, align 8
  %509 = load i32, i32* %4, align 4
  %510 = icmp eq i32 %509, 0
  br i1 %510, label %511, label %523

511:                                              ; preds = %506
  store i32 %496, i32* %418, align 4
  %512 = load i32, i32* %241, align 8
  br label %513

513:                                              ; preds = %487, %511
  %514 = phi i8* [ %488, %487 ], [ %508, %511 ]
  %515 = phi i32 [ %463, %487 ], [ %512, %511 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #4
  %516 = load %struct.FT_Vector_*, %struct.FT_Vector_** %239, align 8
  %517 = zext i32 %515 to i64
  %518 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %516, i64 %517
  %519 = getelementptr inbounds i8, i8* %514, i64 %517
  %520 = bitcast %struct.FT_Vector_* %518 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %520, i8* nonnull align 16 %71, i64 16, i1 false) #4
  store i8 1, i8* %519, align 1
  %521 = load i32, i32* %241, align 8
  %522 = add i32 %521, 1
  store i32 %522, i32* %241, align 8
  store i8 0, i8* %286, align 8
  br label %526

523:                                              ; preds = %498, %506, %434, %442, %390, %398, %325, %333
  %524 = phi i8* [ %79, %333 ], [ %79, %325 ], [ %80, %398 ], [ %80, %390 ], [ %81, %442 ], [ %81, %434 ], [ %82, %506 ], [ %82, %498 ]
  %525 = phi i32 [ %337, %333 ], [ %331, %325 ], [ %402, %398 ], [ %396, %390 ], [ %446, %442 ], [ %440, %434 ], [ %509, %506 ], [ %504, %498 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %524) #4
  store i8 0, i8* %286, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #4
  br label %585

526:                                              ; preds = %476, %513
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %77) #4
  br label %581

527:                                              ; preds = %238, %219
  %528 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 1
  %529 = load i32, i32* %528, align 4
  %530 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 0
  %531 = load i32, i32* %530, align 8
  %532 = add i32 %531, 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %83) #4
  store i32 0, i32* %8, align 4
  %533 = icmp ugt i32 %532, %529
  br i1 %533, label %537, label %534

534:                                              ; preds = %527
  %535 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %536 = load i8*, i8** %535, align 8
  br label %563

537:                                              ; preds = %527
  %538 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 6
  %539 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %538, align 8
  br label %540

540:                                              ; preds = %540, %537
  %541 = phi i32 [ %529, %537 ], [ %544, %540 ]
  %542 = lshr i32 %541, 1
  %543 = add i32 %541, 16
  %544 = add i32 %543, %542
  %545 = icmp ult i32 %544, %532
  br i1 %545, label %540, label %546

546:                                              ; preds = %540
  %547 = zext i32 %529 to i64
  %548 = zext i32 %544 to i64
  %549 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 2
  %550 = bitcast %struct.FT_Vector_** %549 to i8**
  %551 = load i8*, i8** %550, align 8
  %552 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %539, i64 16, i64 %547, i64 %548, i8* %551, i32* nonnull %8) #4
  store i8* %552, i8** %550, align 8
  %553 = load i32, i32* %8, align 4
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %555, label %578

555:                                              ; preds = %546
  %556 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 3
  %557 = load i8*, i8** %556, align 8
  %558 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %539, i64 1, i64 %547, i64 %548, i8* %557, i32* nonnull %8) #4
  store i8* %558, i8** %556, align 8
  %559 = load i32, i32* %8, align 4
  %560 = icmp eq i32 %559, 0
  br i1 %560, label %561, label %578

561:                                              ; preds = %555
  store i32 %544, i32* %528, align 4
  %562 = load i32, i32* %530, align 8
  br label %563

563:                                              ; preds = %534, %561
  %564 = phi i8* [ %536, %534 ], [ %558, %561 ]
  %565 = phi i32 [ %531, %534 ], [ %562, %561 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #4
  %566 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 2
  %567 = load %struct.FT_Vector_*, %struct.FT_Vector_** %566, align 8
  %568 = zext i32 %565 to i64
  %569 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %567, i64 %568
  %570 = getelementptr inbounds i8, i8* %564, i64 %568
  %571 = bitcast %struct.FT_Vector_* %569 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %571, i8* nonnull align 16 %70, i64 16, i1 false) #4
  %572 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %569, i64 1
  %573 = bitcast %struct.FT_Vector_* %572 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %573, i8* nonnull align 16 %71, i64 16, i1 false) #4
  store i8 0, i8* %570, align 1
  %574 = getelementptr inbounds i8, i8* %570, i64 1
  store i8 1, i8* %574, align 1
  %575 = load i32, i32* %530, align 8
  %576 = add i32 %575, 2
  store i32 %576, i32* %530, align 8
  %577 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 4
  store i8 0, i8* %577, align 8
  br label %581

578:                                              ; preds = %555, %546
  %579 = phi i32 [ %559, %555 ], [ %553, %546 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %83) #4
  %580 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 0, i32 4
  store i8 0, i8* %580, align 8
  br label %585

581:                                              ; preds = %563, %526
  %582 = add nuw nsw i64 %220, 1
  %583 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %221, i64 1
  %584 = icmp eq i64 %582, 2
  br i1 %584, label %587, label %219

585:                                              ; preds = %578, %523
  %586 = phi i32 [ %525, %523 ], [ %579, %578 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #4
  br label %596

587:                                              ; preds = %581
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #4
  %588 = add nsw i64 %90, -2
  store i64 %166, i64* %65, align 8
  br label %589

589:                                              ; preds = %587, %140
  %590 = phi i8 [ 0, %587 ], [ %91, %140 ]
  %591 = phi i64 [ %588, %587 ], [ %163, %140 ]
  %592 = getelementptr inbounds [34 x %struct.FT_Vector_], [34 x %struct.FT_Vector_]* %9, i64 0, i64 %591
  %593 = icmp sgt i64 %591, -1
  br i1 %593, label %88, label %594

594:                                              ; preds = %589
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %63, i8* nonnull align 8 %57, i64 16, i1 false)
  %595 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 3
  store i64 0, i64* %595, align 8
  br label %596

596:                                              ; preds = %187, %585, %53, %594, %3
  %597 = phi i32 [ 0, %53 ], [ 0, %594 ], [ 6, %3 ], [ %586, %585 ], [ %188, %187 ]
  call void @llvm.lifetime.end.p0i8(i64 544, i8* nonnull %18) #4
  ret i32 %597
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @FT_Angle_Diff(i64, i64) local_unnamed_addr #2

declare i64 @FT_DivFix(i64, i64) local_unnamed_addr #2

declare i64 @FT_Cos(i64) local_unnamed_addr #2

declare i64 @FT_Sin(i64) local_unnamed_addr #2

declare i64 @FT_MulDiv(i64, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_CubicTo(%struct.FT_StrokerRec_*, %struct.FT_Vector_* readonly, %struct.FT_Vector_* readonly, %struct.FT_Vector_* readonly) local_unnamed_addr #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca [37 x %struct.FT_Vector_], align 16
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %struct.FT_Vector_*
  %13 = alloca <2 x i64>, align 16
  %14 = bitcast <2 x i64>* %13 to %struct.FT_Vector_*
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast <2 x i64>* %15 to %struct.FT_Vector_*
  %17 = alloca <2 x i64>, align 16
  %18 = bitcast <2 x i64>* %17 to %struct.FT_Vector_*
  %19 = alloca <2 x i64>, align 16
  %20 = bitcast <2 x i64>* %19 to %struct.FT_Vector_*
  %21 = bitcast [37 x %struct.FT_Vector_]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 592, i8* nonnull %21) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %21, i8 -86, i64 592, i1 false)
  %22 = icmp ne %struct.FT_StrokerRec_* %0, null
  %23 = icmp ne %struct.FT_Vector_* %1, null
  %24 = and i1 %22, %23
  %25 = icmp ne %struct.FT_Vector_* %2, null
  %26 = and i1 %24, %25
  %27 = icmp ne %struct.FT_Vector_* %3, null
  %28 = and i1 %26, %27
  br i1 %28, label %29, label %690

29:                                               ; preds = %4
  %30 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %31 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %30, i64 0, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %32, 1
  %36 = sub i64 %35, %34
  %37 = icmp ult i64 %36, 3
  br i1 %37, label %38, label %73

38:                                               ; preds = %29
  %39 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %1, i64 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %40, 1
  %44 = sub i64 %43, %42
  %45 = icmp ult i64 %44, 3
  br i1 %45, label %46, label %73

46:                                               ; preds = %38
  %47 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %34, 1
  %50 = sub i64 %49, %48
  %51 = icmp ult i64 %50, 3
  br i1 %51, label %52, label %73

52:                                               ; preds = %46
  %53 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %2, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %42, 1
  %56 = sub i64 %55, %54
  %57 = icmp ult i64 %56, 3
  br i1 %57, label %58, label %73

58:                                               ; preds = %52
  %59 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = add i64 %48, 1
  %62 = sub i64 %61, %60
  %63 = icmp ult i64 %62, 3
  br i1 %63, label %64, label %73

64:                                               ; preds = %58
  %65 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %3, i64 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %54, 1
  %68 = sub i64 %67, %66
  %69 = icmp ult i64 %68, 3
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = bitcast %struct.FT_Vector_* %30 to i8*
  %72 = bitcast %struct.FT_Vector_* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* nonnull align 8 %72, i64 16, i1 false)
  br label %690

73:                                               ; preds = %64, %58, %52, %46, %38, %29
  %74 = bitcast %struct.FT_Vector_* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %21, i8* nonnull align 8 %74, i64 16, i1 false)
  %75 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 1
  %76 = bitcast %struct.FT_Vector_* %75 to i8*
  %77 = bitcast %struct.FT_Vector_* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %76, i8* nonnull align 8 %77, i64 16, i1 false)
  %78 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 2
  %79 = bitcast %struct.FT_Vector_* %78 to i8*
  %80 = bitcast %struct.FT_Vector_* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %79, i8* nonnull align 8 %80, i64 16, i1 false)
  %81 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 3
  %82 = bitcast %struct.FT_Vector_* %81 to i8*
  %83 = bitcast %struct.FT_Vector_* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %82, i8* align 8 %83, i64 16, i1 false)
  %84 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 0
  %85 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %86 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  %87 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  %88 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  %89 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 12
  %90 = bitcast <2 x i64>* %11 to i8*
  %91 = bitcast <2 x i64>* %13 to i8*
  %92 = bitcast <2 x i64>* %15 to i8*
  %93 = getelementptr inbounds <2 x i64>, <2 x i64>* %15, i64 0, i64 0
  %94 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %16, i64 0, i32 1
  %95 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %96 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 9
  %97 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0
  %98 = bitcast <2 x i64>* %17 to i8*
  %99 = bitcast <2 x i64>* %19 to i8*
  %100 = bitcast i32* %9 to i8*
  %101 = bitcast i32* %8 to i8*
  %102 = bitcast i32* %7 to i8*
  %103 = bitcast i32* %6 to i8*
  %104 = bitcast i32* %5 to i8*
  %105 = bitcast <2 x i64>* %11 to i8*
  %106 = bitcast <2 x i64>* %13 to i8*
  %107 = bitcast <2 x i64>* %15 to i8*
  %108 = bitcast <2 x i64>* %17 to i8*
  %109 = bitcast <2 x i64>* %19 to i8*
  br label %110

110:                                              ; preds = %73, %682
  %111 = phi %struct.FT_Vector_* [ %84, %73 ], [ %686, %682 ]
  %112 = phi i32 [ 0, %73 ], [ %683, %682 ]
  %113 = phi i64 [ 0, %73 ], [ %684, %682 ]
  %114 = phi i8 [ 1, %73 ], [ %685, %682 ]
  %115 = load i64, i64* %85, align 8
  %116 = icmp slt i64 %113, 32
  br i1 %116, label %117, label %232

117:                                              ; preds = %110
  %118 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 2, i32 0
  %119 = load i64, i64* %118, align 16
  %120 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 0
  %121 = load i64, i64* %120, align 16
  %122 = sub nsw i64 %119, %121
  %123 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 2, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = sub nsw i64 %124, %126
  %128 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 1, i32 0
  %129 = load i64, i64* %128, align 16
  %130 = sub nsw i64 %129, %119
  %131 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 1, i32 1
  %132 = load i64, i64* %131, align 8
  %133 = sub nsw i64 %132, %124
  %134 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 0, i32 0
  %135 = load i64, i64* %134, align 16
  %136 = sub nsw i64 %135, %129
  %137 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 %113, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = sub nsw i64 %138, %132
  %140 = add i64 %122, 1
  %141 = icmp ult i64 %140, 3
  %142 = add i64 %127, 1
  %143 = icmp ult i64 %142, 3
  %144 = and i1 %141, %143
  %145 = add i64 %130, 1
  %146 = icmp ult i64 %145, 3
  %147 = add i64 %133, 1
  %148 = icmp ult i64 %147, 3
  %149 = and i1 %146, %148
  %150 = add i64 %136, 1
  %151 = icmp ult i64 %150, 3
  %152 = add i64 %139, 1
  %153 = icmp ult i64 %152, 3
  %154 = and i1 %151, %153
  br i1 %144, label %155, label %163

155:                                              ; preds = %117
  br i1 %149, label %156, label %159

156:                                              ; preds = %155
  br i1 %154, label %175, label %157

157:                                              ; preds = %156
  %158 = call i64 @FT_Atan2(i64 %136, i64 %139) #4
  br label %175

159:                                              ; preds = %155
  %160 = call i64 @FT_Atan2(i64 %130, i64 %133) #4
  br i1 %154, label %175, label %161

161:                                              ; preds = %159
  %162 = call i64 @FT_Atan2(i64 %136, i64 %139) #4
  br label %175

163:                                              ; preds = %117
  %164 = call i64 @FT_Atan2(i64 %122, i64 %127) #4
  br i1 %149, label %165, label %171

165:                                              ; preds = %163
  br i1 %154, label %175, label %166

166:                                              ; preds = %165
  %167 = call i64 @FT_Atan2(i64 %136, i64 %139) #4
  %168 = call i64 @FT_Angle_Diff(i64 %164, i64 %167) #4
  %169 = sdiv i64 %168, 2
  %170 = add nsw i64 %169, %164
  br label %175

171:                                              ; preds = %163
  %172 = call i64 @FT_Atan2(i64 %130, i64 %133) #4
  br i1 %154, label %175, label %173

173:                                              ; preds = %171
  %174 = call i64 @FT_Atan2(i64 %136, i64 %139) #4
  br label %175

175:                                              ; preds = %171, %165, %159, %156, %157, %161, %166, %173
  %176 = phi i64 [ %115, %156 ], [ %158, %157 ], [ %160, %161 ], [ %164, %166 ], [ %164, %173 ], [ %160, %159 ], [ %164, %165 ], [ %164, %171 ]
  %177 = phi i64 [ %115, %156 ], [ %158, %157 ], [ %160, %161 ], [ %170, %166 ], [ %172, %173 ], [ %160, %159 ], [ %164, %165 ], [ %172, %171 ]
  %178 = phi i64 [ %115, %156 ], [ %158, %157 ], [ %162, %161 ], [ %167, %166 ], [ %174, %173 ], [ %160, %159 ], [ %164, %165 ], [ %172, %171 ]
  %179 = call i64 @FT_Angle_Diff(i64 %176, i64 %177) #4
  %180 = icmp slt i64 %179, 0
  %181 = sub nsw i64 0, %179
  %182 = select i1 %180, i64 %181, i64 %179
  %183 = call i64 @FT_Angle_Diff(i64 %177, i64 %178) #4
  %184 = icmp slt i64 %183, 0
  %185 = sub nsw i64 0, %183
  %186 = select i1 %184, i64 %185, i64 %183
  %187 = icmp sgt i64 %182, 1474559
  %188 = icmp sgt i64 %186, 1474559
  %189 = or i1 %187, %188
  br i1 %189, label %190, label %232

190:                                              ; preds = %175
  %191 = load i8, i8* %86, align 8
  %192 = icmp eq i8 %191, 0
  br i1 %192, label %194, label %193

193:                                              ; preds = %190
  store i64 %176, i64* %85, align 8
  br label %194

194:                                              ; preds = %190, %193
  %195 = load i64, i64* %120, align 16
  %196 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 6, i32 0
  store i64 %195, i64* %196, align 16
  %197 = load i64, i64* %134, align 16
  %198 = load i64, i64* %128, align 16
  %199 = add nsw i64 %198, %197
  %200 = load i64, i64* %118, align 16
  %201 = add nsw i64 %200, %198
  %202 = add nsw i64 %200, %195
  %203 = ashr i64 %202, 1
  %204 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 5, i32 0
  store i64 %203, i64* %204, align 16
  %205 = add nsw i64 %202, %201
  %206 = ashr i64 %205, 2
  %207 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 4, i32 0
  store i64 %206, i64* %207, align 16
  %208 = ashr i64 %199, 1
  store i64 %208, i64* %128, align 16
  %209 = add nsw i64 %201, %199
  %210 = ashr i64 %209, 2
  store i64 %210, i64* %118, align 16
  %211 = add nsw i64 %209, %205
  %212 = ashr i64 %211, 3
  store i64 %212, i64* %120, align 16
  %213 = load i64, i64* %125, align 8
  %214 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 6, i32 1
  store i64 %213, i64* %214, align 8
  %215 = load i64, i64* %137, align 8
  %216 = load i64, i64* %131, align 8
  %217 = add nsw i64 %216, %215
  %218 = load i64, i64* %123, align 8
  %219 = add nsw i64 %218, %216
  %220 = add nsw i64 %218, %213
  %221 = ashr i64 %220, 1
  %222 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 5, i32 1
  store i64 %221, i64* %222, align 8
  %223 = add nsw i64 %220, %219
  %224 = ashr i64 %223, 2
  %225 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 4, i32 1
  store i64 %224, i64* %225, align 8
  %226 = ashr i64 %217, 1
  store i64 %226, i64* %131, align 8
  %227 = add nsw i64 %219, %217
  %228 = ashr i64 %227, 2
  store i64 %228, i64* %123, align 8
  %229 = add nsw i64 %227, %223
  %230 = ashr i64 %229, 3
  store i64 %230, i64* %125, align 8
  %231 = add nuw nsw i64 %113, 3
  br label %682

232:                                              ; preds = %175, %110
  %233 = phi i64 [ %176, %175 ], [ %115, %110 ]
  %234 = phi i64 [ %177, %175 ], [ %115, %110 ]
  %235 = phi i64 [ %178, %175 ], [ %115, %110 ]
  %236 = icmp eq i8 %114, 0
  br i1 %236, label %244, label %237

237:                                              ; preds = %232
  %238 = load i8, i8* %86, align 8
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %242, label %240

240:                                              ; preds = %237
  %241 = call fastcc i32 @ft_stroker_subpath_start(%struct.FT_StrokerRec_* nonnull %0, i64 %233, i64 0)
  br label %256

242:                                              ; preds = %237
  store i64 %233, i64* %87, align 8
  %243 = call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 0)
  br label %256

244:                                              ; preds = %232
  %245 = load i64, i64* %85, align 8
  %246 = call i64 @FT_Angle_Diff(i64 %245, i64 %233) #4
  %247 = icmp slt i64 %246, 0
  %248 = sub nsw i64 0, %246
  %249 = select i1 %247, i64 %248, i64 %246
  %250 = icmp sgt i64 %249, 368640
  br i1 %250, label %251, label %256

251:                                              ; preds = %244
  %252 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3
  %253 = bitcast %struct.FT_Vector_* %252 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 16 %253, i64 16, i1 false)
  store i64 %233, i64* %87, align 8
  store i32 0, i32* %88, align 8
  %254 = call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 0)
  %255 = load i32, i32* %89, align 4
  store i32 %255, i32* %88, align 8
  br label %256

256:                                              ; preds = %244, %251, %240, %242
  %257 = phi i32 [ %241, %240 ], [ %243, %242 ], [ %254, %251 ], [ %112, %244 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %690

259:                                              ; preds = %256
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %105, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %107, i8 -86, i64 16, i1 false)
  %260 = call i64 @FT_Angle_Diff(i64 %233, i64 %234) #4
  %261 = sdiv i64 %260, 2
  %262 = call i64 @FT_Angle_Diff(i64 %234, i64 %235) #4
  %263 = sdiv i64 %262, 2
  %264 = call i64 @FT_Angle_Diff(i64 %233, i64 %234) #4
  %265 = sdiv i64 %264, 2
  %266 = add nsw i64 %265, %233
  %267 = call i64 @FT_Angle_Diff(i64 %234, i64 %235) #4
  %268 = sdiv i64 %267, 2
  %269 = add nsw i64 %268, %234
  %270 = load i64, i64* %95, align 8
  %271 = call i64 @FT_Cos(i64 %261) #4
  %272 = call i64 @FT_DivFix(i64 %270, i64 %271) #4
  %273 = load i64, i64* %95, align 8
  %274 = call i64 @FT_Cos(i64 %263) #4
  %275 = call i64 @FT_DivFix(i64 %273, i64 %274) #4
  %276 = load i8, i8* %96, align 8
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %290, label %278

278:                                              ; preds = %259
  %279 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 0, i32 0
  %280 = load i64, i64* %279, align 16
  %281 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 0
  %282 = load i64, i64* %281, align 16
  %283 = sub nsw i64 %280, %282
  %284 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 %113, i32 1
  %285 = load i64, i64* %284, align 8
  %286 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 1
  %287 = load i64, i64* %286, align 8
  %288 = sub nsw i64 %285, %287
  %289 = call i64 @FT_Atan2(i64 %283, i64 %288) #4
  br label %290

290:                                              ; preds = %259, %278
  %291 = phi i64 [ %289, %278 ], [ 0, %259 ]
  %292 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 2, i32 0
  %293 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 1, i32 0
  %294 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 0, i32 0
  %295 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 %113, i32 1
  %296 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 0
  %297 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %111, i64 3, i32 1
  %298 = bitcast i64* %292 to <2 x i64>*
  %299 = bitcast i64* %293 to <2 x i64>*
  br label %300

300:                                              ; preds = %673, %290
  %301 = phi i64 [ 0, %290 ], [ %674, %673 ]
  %302 = phi %struct.FT_StrokeBorderRec_* [ %97, %290 ], [ %675, %673 ]
  %303 = mul nuw nsw i64 %301, -11796480
  %304 = add nuw nsw i64 %303, 5898240
  %305 = add nsw i64 %266, %304
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %12, i64 %272, i64 %305) #4
  %306 = load <2 x i64>, <2 x i64>* %298, align 16
  %307 = load <2 x i64>, <2 x i64>* %11, align 16
  %308 = add nsw <2 x i64> %307, %306
  store <2 x i64> %308, <2 x i64>* %11, align 16
  %309 = add nsw i64 %269, %304
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %14, i64 %275, i64 %309) #4
  %310 = load <2 x i64>, <2 x i64>* %299, align 16
  %311 = load <2 x i64>, <2 x i64>* %13, align 16
  %312 = add nsw <2 x i64> %311, %310
  store <2 x i64> %312, <2 x i64>* %13, align 16
  %313 = load i64, i64* %95, align 8
  %314 = add nsw i64 %304, %235
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %16, i64 %313, i64 %314) #4
  %315 = load i64, i64* %294, align 16
  %316 = load i64, i64* %93, align 16
  %317 = add nsw i64 %316, %315
  store i64 %317, i64* %93, align 16
  %318 = load i64, i64* %295, align 8
  %319 = load i64, i64* %94, align 8
  %320 = add nsw i64 %319, %318
  store i64 %320, i64* %94, align 8
  %321 = load i8, i8* %96, align 8
  %322 = icmp eq i8 %321, 0
  br i1 %322, label %616, label %323

323:                                              ; preds = %300
  %324 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 2
  %325 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %326 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 0
  %327 = load i32, i32* %326, align 8
  %328 = add i32 %327, -1
  %329 = zext i32 %328 to i64
  %330 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %325, i64 %329, i32 0
  %331 = bitcast i64* %330 to <2 x i64>*
  %332 = load <2 x i64>, <2 x i64>* %331, align 8
  %333 = extractelement <2 x i64> %332, i32 0
  %334 = sub nsw i64 %317, %333
  %335 = extractelement <2 x i64> %332, i32 1
  %336 = sub nsw i64 %320, %335
  %337 = call i64 @FT_Atan2(i64 %334, i64 %336) #4
  %338 = call i64 @FT_Angle_Diff(i64 %291, i64 %337) #4
  %339 = icmp slt i64 %338, 0
  %340 = sub nsw i64 0, %338
  %341 = select i1 %339, i64 %340, i64 %338
  %342 = icmp sgt i64 %341, 5898240
  br i1 %342, label %343, label %616

343:                                              ; preds = %323
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %98) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %108, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %99) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %109, i8 -86, i64 16, i1 false)
  %344 = load i64, i64* %296, align 16
  %345 = sub nsw i64 %344, %333
  %346 = load i64, i64* %297, align 8
  %347 = sub nsw i64 %346, %335
  %348 = call i64 @FT_Atan2(i64 %345, i64 %347) #4
  %349 = load i64, i64* %294, align 16
  %350 = load i64, i64* %93, align 16
  %351 = sub nsw i64 %349, %350
  %352 = load i64, i64* %295, align 8
  %353 = load i64, i64* %94, align 8
  %354 = sub nsw i64 %352, %353
  %355 = call i64 @FT_Atan2(i64 %351, i64 %354) #4
  %356 = load <2 x i64>, <2 x i64>* %15, align 16
  %357 = sub nsw <2 x i64> %356, %332
  store <2 x i64> %357, <2 x i64>* %17, align 16
  %358 = call i64 @FT_Vector_Length(%struct.FT_Vector_* nonnull %18) #4
  %359 = sub nsw i64 %337, %355
  %360 = call i64 @FT_Sin(i64 %359) #4
  %361 = icmp slt i64 %360, 0
  %362 = sub nsw i64 0, %360
  %363 = select i1 %361, i64 %362, i64 %360
  %364 = sub nsw i64 %348, %355
  %365 = call i64 @FT_Sin(i64 %364) #4
  %366 = icmp slt i64 %365, 0
  %367 = sub nsw i64 0, %365
  %368 = select i1 %366, i64 %367, i64 %365
  %369 = call i64 @FT_MulDiv(i64 %358, i64 %363, i64 %368) #4
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %20, i64 %369, i64 %348) #4
  %370 = load <2 x i64>, <2 x i64>* %19, align 16
  %371 = add nsw <2 x i64> %370, %332
  store <2 x i64> %371, <2 x i64>* %19, align 16
  %372 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 4
  store i8 0, i8* %372, align 8
  %373 = load i32, i32* %326, align 8
  %374 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 5
  %375 = load i32, i32* %374, align 4
  %376 = icmp ugt i32 %373, %375
  br i1 %376, label %377, label %394

377:                                              ; preds = %343
  %378 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %379 = add i32 %373, -1
  %380 = zext i32 %379 to i64
  %381 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %378, i64 %380, i32 0
  %382 = load i64, i64* %381, align 8
  %383 = extractelement <2 x i64> %371, i32 0
  %384 = sub i64 1, %383
  %385 = add i64 %384, %382
  %386 = icmp ult i64 %385, 3
  br i1 %386, label %387, label %394

387:                                              ; preds = %377
  %388 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %378, i64 %380, i32 1
  %389 = load i64, i64* %388, align 8
  %390 = extractelement <2 x i64> %371, i32 1
  %391 = sub i64 1, %390
  %392 = add i64 %391, %389
  %393 = icmp ult i64 %392, 3
  br i1 %393, label %438, label %394

394:                                              ; preds = %387, %377, %343
  %395 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 1
  %396 = load i32, i32* %395, align 4
  %397 = add i32 %373, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %100) #4
  store i32 0, i32* %9, align 4
  %398 = icmp ugt i32 %397, %396
  br i1 %398, label %402, label %399

399:                                              ; preds = %394
  %400 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %401 = load i8*, i8** %400, align 8
  br label %427

402:                                              ; preds = %394
  %403 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 6
  %404 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %403, align 8
  br label %405

405:                                              ; preds = %405, %402
  %406 = phi i32 [ %396, %402 ], [ %409, %405 ]
  %407 = lshr i32 %406, 1
  %408 = add i32 %406, 16
  %409 = add i32 %408, %407
  %410 = icmp ult i32 %409, %397
  br i1 %410, label %405, label %411

411:                                              ; preds = %405
  %412 = zext i32 %396 to i64
  %413 = zext i32 %409 to i64
  %414 = bitcast %struct.FT_Vector_** %324 to i8**
  %415 = load i8*, i8** %414, align 8
  %416 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %404, i64 16, i64 %412, i64 %413, i8* %415, i32* nonnull %9) #4
  store i8* %416, i8** %414, align 8
  %417 = load i32, i32* %9, align 4
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %612

419:                                              ; preds = %411
  %420 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %421 = load i8*, i8** %420, align 8
  %422 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %404, i64 1, i64 %412, i64 %413, i8* %421, i32* nonnull %9) #4
  store i8* %422, i8** %420, align 8
  %423 = load i32, i32* %9, align 4
  %424 = icmp eq i32 %423, 0
  br i1 %424, label %425, label %612

425:                                              ; preds = %419
  store i32 %409, i32* %395, align 4
  %426 = load i32, i32* %326, align 8
  br label %427

427:                                              ; preds = %399, %425
  %428 = phi i8* [ %422, %425 ], [ %401, %399 ]
  %429 = phi i32 [ %426, %425 ], [ %373, %399 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %100) #4
  %430 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %431 = zext i32 %429 to i64
  %432 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %430, i64 %431
  %433 = getelementptr inbounds i8, i8* %428, i64 %431
  %434 = bitcast %struct.FT_Vector_* %432 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %434, i8* nonnull align 16 %99, i64 16, i1 false) #4
  store i8 1, i8* %433, align 1
  %435 = load i32, i32* %326, align 8
  %436 = add i32 %435, 1
  store i32 %436, i32* %326, align 8
  store i8 0, i8* %372, align 8
  %437 = load i32, i32* %374, align 4
  br label %438

438:                                              ; preds = %387, %427
  %439 = phi i32 [ %437, %427 ], [ %375, %387 ]
  %440 = phi i32 [ %436, %427 ], [ %373, %387 ]
  %441 = icmp ugt i32 %440, %439
  br i1 %441, label %442, label %459

442:                                              ; preds = %438
  %443 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %444 = add i32 %440, -1
  %445 = zext i32 %444 to i64
  %446 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %443, i64 %445, i32 0
  %447 = load i64, i64* %446, align 8
  %448 = load i64, i64* %93, align 16
  %449 = add i64 %447, 1
  %450 = sub i64 %449, %448
  %451 = icmp ult i64 %450, 3
  br i1 %451, label %452, label %459

452:                                              ; preds = %442
  %453 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %443, i64 %445, i32 1
  %454 = load i64, i64* %453, align 8
  %455 = load i64, i64* %94, align 8
  %456 = add i64 %454, 1
  %457 = sub i64 %456, %455
  %458 = icmp ult i64 %457, 3
  br i1 %458, label %502, label %459

459:                                              ; preds = %452, %442, %438
  %460 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 1
  %461 = load i32, i32* %460, align 4
  %462 = add i32 %440, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %101) #4
  store i32 0, i32* %8, align 4
  %463 = icmp ugt i32 %462, %461
  br i1 %463, label %467, label %464

464:                                              ; preds = %459
  %465 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %466 = load i8*, i8** %465, align 8
  br label %492

467:                                              ; preds = %459
  %468 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 6
  %469 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %468, align 8
  br label %470

470:                                              ; preds = %470, %467
  %471 = phi i32 [ %461, %467 ], [ %474, %470 ]
  %472 = lshr i32 %471, 1
  %473 = add i32 %471, 16
  %474 = add i32 %473, %472
  %475 = icmp ult i32 %474, %462
  br i1 %475, label %470, label %476

476:                                              ; preds = %470
  %477 = zext i32 %461 to i64
  %478 = zext i32 %474 to i64
  %479 = bitcast %struct.FT_Vector_** %324 to i8**
  %480 = load i8*, i8** %479, align 8
  %481 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %469, i64 16, i64 %477, i64 %478, i8* %480, i32* nonnull %8) #4
  store i8* %481, i8** %479, align 8
  %482 = load i32, i32* %8, align 4
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %612

484:                                              ; preds = %476
  %485 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %486 = load i8*, i8** %485, align 8
  %487 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %469, i64 1, i64 %477, i64 %478, i8* %486, i32* nonnull %8) #4
  store i8* %487, i8** %485, align 8
  %488 = load i32, i32* %8, align 4
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %612

490:                                              ; preds = %484
  store i32 %474, i32* %460, align 4
  %491 = load i32, i32* %326, align 8
  br label %492

492:                                              ; preds = %490, %464
  %493 = phi i8* [ %487, %490 ], [ %466, %464 ]
  %494 = phi i32 [ %491, %490 ], [ %440, %464 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %101) #4
  %495 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %496 = zext i32 %494 to i64
  %497 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %495, i64 %496
  %498 = getelementptr inbounds i8, i8* %493, i64 %496
  %499 = bitcast %struct.FT_Vector_* %497 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %499, i8* nonnull align 16 %92, i64 16, i1 false) #4
  store i8 1, i8* %498, align 1
  %500 = load i32, i32* %326, align 8
  %501 = add i32 %500, 1
  store i32 %501, i32* %326, align 8
  store i8 0, i8* %372, align 8
  br label %502

502:                                              ; preds = %452, %492
  %503 = phi i32 [ %440, %452 ], [ %501, %492 ]
  %504 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 1
  %505 = load i32, i32* %504, align 4
  %506 = add i32 %503, 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %102) #4
  store i32 0, i32* %7, align 4
  %507 = icmp ugt i32 %506, %505
  br i1 %507, label %511, label %508

508:                                              ; preds = %502
  %509 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %510 = load i8*, i8** %509, align 8
  br label %536

511:                                              ; preds = %502
  %512 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 6
  %513 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %512, align 8
  br label %514

514:                                              ; preds = %514, %511
  %515 = phi i32 [ %505, %511 ], [ %518, %514 ]
  %516 = lshr i32 %515, 1
  %517 = add i32 %515, 16
  %518 = add i32 %517, %516
  %519 = icmp ult i32 %518, %506
  br i1 %519, label %514, label %520

520:                                              ; preds = %514
  %521 = zext i32 %505 to i64
  %522 = zext i32 %518 to i64
  %523 = bitcast %struct.FT_Vector_** %324 to i8**
  %524 = load i8*, i8** %523, align 8
  %525 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %513, i64 16, i64 %521, i64 %522, i8* %524, i32* nonnull %7) #4
  store i8* %525, i8** %523, align 8
  %526 = load i32, i32* %7, align 4
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %612

528:                                              ; preds = %520
  %529 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %530 = load i8*, i8** %529, align 8
  %531 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %513, i64 1, i64 %521, i64 %522, i8* %530, i32* nonnull %7) #4
  store i8* %531, i8** %529, align 8
  %532 = load i32, i32* %7, align 4
  %533 = icmp eq i32 %532, 0
  br i1 %533, label %534, label %612

534:                                              ; preds = %528
  store i32 %518, i32* %504, align 4
  %535 = load i32, i32* %326, align 8
  br label %536

536:                                              ; preds = %508, %534
  %537 = phi i8* [ %531, %534 ], [ %510, %508 ]
  %538 = phi i32 [ %535, %534 ], [ %503, %508 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %102) #4
  %539 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %540 = zext i32 %538 to i64
  %541 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %539, i64 %540
  %542 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %543 = getelementptr inbounds i8, i8* %537, i64 %540
  %544 = bitcast %struct.FT_Vector_* %541 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %544, i8* nonnull align 16 %91, i64 16, i1 false) #4
  %545 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %541, i64 1
  %546 = bitcast %struct.FT_Vector_* %545 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %546, i8* nonnull align 16 %90, i64 16, i1 false) #4
  %547 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %541, i64 2, i32 0
  store i64 %333, i64* %547, align 8
  %548 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %541, i64 2, i32 1
  store i64 %335, i64* %548, align 8
  store i8 2, i8* %543, align 1
  %549 = getelementptr inbounds i8, i8* %543, i64 1
  store i8 2, i8* %549, align 1
  %550 = getelementptr inbounds i8, i8* %543, i64 2
  store i8 1, i8* %550, align 1
  %551 = load i32, i32* %326, align 8
  %552 = add i32 %551, 3
  store i32 %552, i32* %326, align 8
  store i8 0, i8* %372, align 8
  %553 = load i32, i32* %374, align 4
  %554 = icmp ugt i32 %552, %553
  br i1 %554, label %555, label %572

555:                                              ; preds = %536
  %556 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %557 = add i32 %551, 2
  %558 = zext i32 %557 to i64
  %559 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %556, i64 %558, i32 0
  %560 = load i64, i64* %559, align 8
  %561 = load i64, i64* %93, align 16
  %562 = add i64 %560, 1
  %563 = sub i64 %562, %561
  %564 = icmp ult i64 %563, 3
  br i1 %564, label %565, label %572

565:                                              ; preds = %555
  %566 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %556, i64 %558, i32 1
  %567 = load i64, i64* %566, align 8
  %568 = load i64, i64* %94, align 8
  %569 = add i64 %567, 1
  %570 = sub i64 %569, %568
  %571 = icmp ult i64 %570, 3
  br i1 %571, label %615, label %572

572:                                              ; preds = %565, %555, %536
  %573 = load i32, i32* %504, align 4
  %574 = add i32 %551, 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %103) #4
  store i32 0, i32* %6, align 4
  %575 = icmp ugt i32 %574, %573
  br i1 %575, label %578, label %576

576:                                              ; preds = %572
  %577 = load i8*, i8** %542, align 8
  br label %602

578:                                              ; preds = %572
  %579 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 6
  %580 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %579, align 8
  br label %581

581:                                              ; preds = %581, %578
  %582 = phi i32 [ %573, %578 ], [ %585, %581 ]
  %583 = lshr i32 %582, 1
  %584 = add i32 %582, 16
  %585 = add i32 %584, %583
  %586 = icmp ult i32 %585, %574
  br i1 %586, label %581, label %587

587:                                              ; preds = %581
  %588 = zext i32 %573 to i64
  %589 = zext i32 %585 to i64
  %590 = bitcast %struct.FT_Vector_** %324 to i8**
  %591 = load i8*, i8** %590, align 8
  %592 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %580, i64 16, i64 %588, i64 %589, i8* %591, i32* nonnull %6) #4
  store i8* %592, i8** %590, align 8
  %593 = load i32, i32* %6, align 4
  %594 = icmp eq i32 %593, 0
  br i1 %594, label %595, label %612

595:                                              ; preds = %587
  %596 = load i8*, i8** %542, align 8
  %597 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %580, i64 1, i64 %588, i64 %589, i8* %596, i32* nonnull %6) #4
  store i8* %597, i8** %542, align 8
  %598 = load i32, i32* %6, align 4
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %600, label %612

600:                                              ; preds = %595
  store i32 %585, i32* %504, align 4
  %601 = load i32, i32* %326, align 8
  br label %602

602:                                              ; preds = %576, %600
  %603 = phi i8* [ %577, %576 ], [ %597, %600 ]
  %604 = phi i32 [ %552, %576 ], [ %601, %600 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %103) #4
  %605 = load %struct.FT_Vector_*, %struct.FT_Vector_** %324, align 8
  %606 = zext i32 %604 to i64
  %607 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %605, i64 %606
  %608 = getelementptr inbounds i8, i8* %603, i64 %606
  %609 = bitcast %struct.FT_Vector_* %607 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %609, i8* nonnull align 16 %92, i64 16, i1 false) #4
  store i8 1, i8* %608, align 1
  %610 = load i32, i32* %326, align 8
  %611 = add i32 %610, 1
  store i32 %611, i32* %326, align 8
  store i8 0, i8* %372, align 8
  br label %615

612:                                              ; preds = %587, %595, %520, %528, %476, %484, %411, %419
  %613 = phi i8* [ %100, %419 ], [ %100, %411 ], [ %101, %484 ], [ %101, %476 ], [ %102, %528 ], [ %102, %520 ], [ %103, %595 ], [ %103, %587 ]
  %614 = phi i32 [ %423, %419 ], [ %417, %411 ], [ %488, %484 ], [ %482, %476 ], [ %532, %528 ], [ %526, %520 ], [ %598, %595 ], [ %593, %587 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %613) #4
  store i8 0, i8* %372, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #4
  br label %677

615:                                              ; preds = %565, %602
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %99) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %98) #4
  br label %673

616:                                              ; preds = %323, %300
  %617 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 1
  %618 = load i32, i32* %617, align 4
  %619 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 0
  %620 = load i32, i32* %619, align 8
  %621 = add i32 %620, 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #4
  store i32 0, i32* %5, align 4
  %622 = icmp ugt i32 %621, %618
  br i1 %622, label %626, label %623

623:                                              ; preds = %616
  %624 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %625 = load i8*, i8** %624, align 8
  br label %652

626:                                              ; preds = %616
  %627 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 6
  %628 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %627, align 8
  br label %629

629:                                              ; preds = %629, %626
  %630 = phi i32 [ %618, %626 ], [ %633, %629 ]
  %631 = lshr i32 %630, 1
  %632 = add i32 %630, 16
  %633 = add i32 %632, %631
  %634 = icmp ult i32 %633, %621
  br i1 %634, label %629, label %635

635:                                              ; preds = %629
  %636 = zext i32 %618 to i64
  %637 = zext i32 %633 to i64
  %638 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 2
  %639 = bitcast %struct.FT_Vector_** %638 to i8**
  %640 = load i8*, i8** %639, align 8
  %641 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %628, i64 16, i64 %636, i64 %637, i8* %640, i32* nonnull %5) #4
  store i8* %641, i8** %639, align 8
  %642 = load i32, i32* %5, align 4
  %643 = icmp eq i32 %642, 0
  br i1 %643, label %644, label %670

644:                                              ; preds = %635
  %645 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 3
  %646 = load i8*, i8** %645, align 8
  %647 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %628, i64 1, i64 %636, i64 %637, i8* %646, i32* nonnull %5) #4
  store i8* %647, i8** %645, align 8
  %648 = load i32, i32* %5, align 4
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %670

650:                                              ; preds = %644
  store i32 %633, i32* %617, align 4
  %651 = load i32, i32* %619, align 8
  br label %652

652:                                              ; preds = %623, %650
  %653 = phi i8* [ %625, %623 ], [ %647, %650 ]
  %654 = phi i32 [ %620, %623 ], [ %651, %650 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #4
  %655 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 2
  %656 = load %struct.FT_Vector_*, %struct.FT_Vector_** %655, align 8
  %657 = zext i32 %654 to i64
  %658 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %656, i64 %657
  %659 = getelementptr inbounds i8, i8* %653, i64 %657
  %660 = bitcast %struct.FT_Vector_* %658 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %660, i8* nonnull align 16 %90, i64 16, i1 false) #4
  %661 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 1
  %662 = bitcast %struct.FT_Vector_* %661 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %662, i8* nonnull align 16 %91, i64 16, i1 false) #4
  %663 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %658, i64 2
  %664 = bitcast %struct.FT_Vector_* %663 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %664, i8* nonnull align 16 %92, i64 16, i1 false) #4
  store i8 2, i8* %659, align 1
  %665 = getelementptr inbounds i8, i8* %659, i64 1
  store i8 2, i8* %665, align 1
  %666 = getelementptr inbounds i8, i8* %659, i64 2
  store i8 1, i8* %666, align 1
  %667 = load i32, i32* %619, align 8
  %668 = add i32 %667, 3
  store i32 %668, i32* %619, align 8
  %669 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 4
  store i8 0, i8* %669, align 8
  br label %673

670:                                              ; preds = %644, %635
  %671 = phi i32 [ %648, %644 ], [ %642, %635 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #4
  %672 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 0, i32 4
  store i8 0, i8* %672, align 8
  br label %677

673:                                              ; preds = %652, %615
  %674 = add nuw nsw i64 %301, 1
  %675 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %302, i64 1
  %676 = icmp eq i64 %674, 2
  br i1 %676, label %677, label %300

677:                                              ; preds = %673, %670, %612
  %678 = phi i1 [ false, %670 ], [ false, %612 ], [ true, %673 ]
  %679 = phi i32 [ %671, %670 ], [ %614, %612 ], [ 0, %673 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #4
  br i1 %678, label %680, label %690

680:                                              ; preds = %677
  %681 = add nsw i64 %113, -3
  store i64 %235, i64* %85, align 8
  br label %682

682:                                              ; preds = %194, %680
  %683 = phi i32 [ %112, %194 ], [ %679, %680 ]
  %684 = phi i64 [ %231, %194 ], [ %681, %680 ]
  %685 = phi i8 [ %114, %194 ], [ 0, %680 ]
  %686 = getelementptr inbounds [37 x %struct.FT_Vector_], [37 x %struct.FT_Vector_]* %10, i64 0, i64 %684
  %687 = icmp sgt i64 %684, -1
  br i1 %687, label %110, label %688

688:                                              ; preds = %682
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* nonnull align 8 %74, i64 16, i1 false)
  %689 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 3
  store i64 0, i64* %689, align 8
  br label %690

690:                                              ; preds = %256, %677, %70, %688, %4
  %691 = phi i32 [ 0, %70 ], [ %683, %688 ], [ 6, %4 ], [ %679, %677 ], [ %257, %256 ]
  call void @llvm.lifetime.end.p0i8(i64 592, i8* nonnull %21) #4
  ret i32 %691
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_BeginSubPath(%struct.FT_StrokerRec_*, %struct.FT_Vector_* readonly, i8 zeroext) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_StrokerRec_* %0, null
  %5 = icmp ne %struct.FT_Vector_* %1, null
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %29

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %10 = bitcast %struct.FT_Vector_* %9 to i8*
  %11 = bitcast %struct.FT_Vector_* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* nonnull align 8 %11, i64 16, i1 false)
  %12 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 5
  store i8 %2, i8* %12, align 1
  %13 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %23

16:                                               ; preds = %7
  %17 = icmp eq i8 %2, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 10
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i8
  br label %23

23:                                               ; preds = %16, %7, %18
  %24 = phi i8 [ 1, %7 ], [ 0, %16 ], [ %22, %18 ]
  %25 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 9
  store i8 %24, i8* %25, align 8
  %26 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 7
  %27 = bitcast %struct.FT_Vector_* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* nonnull align 8 %11, i64 16, i1 false)
  %28 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  store i64 0, i64* %28, align 8
  br label %29

29:                                               ; preds = %3, %23
  %30 = phi i32 [ 0, %23 ], [ 6, %3 ]
  ret i32 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_EndSubPath(%struct.FT_StrokerRec_*) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %3, label %291, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %154, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = tail call fastcc i32 @ft_stroker_cap(%struct.FT_StrokerRec_* nonnull %0, i64 %10)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %291

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %15, %17
  %19 = icmp sgt i32 %18, 0
  br i1 %19, label %20, label %109

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, %18
  %26 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #4
  store i32 0, i32* %2, align 4
  %27 = icmp ugt i32 %25, %22
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  br label %59

31:                                               ; preds = %20
  %32 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 6
  %33 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %32, align 8
  br label %34

34:                                               ; preds = %34, %31
  %35 = phi i32 [ %22, %31 ], [ %38, %34 ]
  %36 = lshr i32 %35, 1
  %37 = add i32 %35, 16
  %38 = add i32 %37, %36
  %39 = icmp ult i32 %38, %25
  br i1 %39, label %34, label %40

40:                                               ; preds = %34
  %41 = zext i32 %22 to i64
  %42 = zext i32 %38 to i64
  %43 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %44 = bitcast %struct.FT_Vector_** %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %33, i64 16, i64 %41, i64 %42, i8* %45, i32* nonnull %2) #4
  store i8* %46, i8** %44, align 8
  %47 = load i32, i32* %2, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %107

49:                                               ; preds = %40
  %50 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %51 = load i8*, i8** %50, align 8
  %52 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %33, i64 1, i64 %41, i64 %42, i8* %51, i32* nonnull %2) #4
  store i8* %52, i8** %50, align 8
  %53 = load i32, i32* %2, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %107

55:                                               ; preds = %49
  store i32 %38, i32* %21, align 4
  %56 = load i32, i32* %23, align 8
  %57 = load i32, i32* %14, align 8
  %58 = load i32, i32* %16, align 4
  br label %59

59:                                               ; preds = %55, %28
  %60 = phi i32 [ %58, %55 ], [ %17, %28 ]
  %61 = phi i32 [ %57, %55 ], [ %15, %28 ]
  %62 = phi i8* [ %52, %55 ], [ %30, %28 ]
  %63 = phi i32 [ %56, %55 ], [ %24, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %66 = load %struct.FT_Vector_*, %struct.FT_Vector_** %65, align 8
  %67 = zext i32 %61 to i64
  %68 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %66, i64 %67
  %69 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %68, i64 -1
  %70 = sext i32 %60 to i64
  %71 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %66, i64 %70
  %72 = icmp ult %struct.FT_Vector_* %69, %71
  br i1 %72, label %101, label %73

73:                                               ; preds = %59
  %74 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %75 = load i8*, i8** %74, align 8
  %76 = getelementptr inbounds i8, i8* %75, i64 %67
  %77 = getelementptr inbounds i8, i8* %62, i64 %64
  %78 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %79 = load %struct.FT_Vector_*, %struct.FT_Vector_** %78, align 8
  %80 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %79, i64 %64
  br label %81

81:                                               ; preds = %81, %73
  %82 = phi %struct.FT_Vector_* [ %93, %81 ], [ %69, %73 ]
  %83 = phi i8* [ %86, %81 ], [ %76, %73 ]
  %84 = phi i8* [ %92, %81 ], [ %77, %73 ]
  %85 = phi %struct.FT_Vector_* [ %91, %81 ], [ %80, %73 ]
  %86 = getelementptr inbounds i8, i8* %83, i64 -1
  %87 = bitcast %struct.FT_Vector_* %85 to i8*
  %88 = bitcast %struct.FT_Vector_* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 16, i1 false) #4
  %89 = load i8, i8* %86, align 1
  %90 = and i8 %89, -13
  store i8 %90, i8* %84, align 1
  %91 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %85, i64 1
  %92 = getelementptr inbounds i8, i8* %84, i64 1
  %93 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %82, i64 -1
  %94 = load %struct.FT_Vector_*, %struct.FT_Vector_** %65, align 8
  %95 = load i32, i32* %16, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %94, i64 %96
  %98 = icmp ult %struct.FT_Vector_* %93, %97
  br i1 %98, label %99, label %81

99:                                               ; preds = %81
  %100 = load i32, i32* %23, align 8
  br label %101

101:                                              ; preds = %99, %59
  %102 = phi i32 [ %63, %59 ], [ %100, %99 ]
  %103 = phi i32 [ %60, %59 ], [ %95, %99 ]
  store i32 %103, i32* %14, align 8
  %104 = add i32 %102, %18
  store i32 %104, i32* %23, align 8
  %105 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  store i8 0, i8* %105, align 8
  %106 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 4
  store i8 0, i8* %106, align 8
  br label %109

107:                                              ; preds = %40, %49
  %108 = phi i32 [ %53, %49 ], [ %47, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #4
  br label %291

109:                                              ; preds = %101, %13
  %110 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %111 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 7
  %112 = bitcast %struct.FT_Vector_* %110 to i8*
  %113 = bitcast %struct.FT_Vector_* %111 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 16, i1 false)
  %114 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 6
  %115 = load i64, i64* %114, align 8
  %116 = add nsw i64 %115, 11796480
  %117 = call fastcc i32 @ft_stroker_cap(%struct.FT_StrokerRec_* %0, i64 %116)
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %291

119:                                              ; preds = %109
  %120 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  %121 = load i32, i32* %120, align 4
  %122 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  %123 = load i32, i32* %122, align 8
  %124 = add i32 %121, 1
  %125 = icmp ugt i32 %123, %124
  br i1 %125, label %127, label %126

126:                                              ; preds = %119
  store i32 %121, i32* %122, align 8
  br label %152

127:                                              ; preds = %119
  %128 = add i32 %123, -1
  store i32 %128, i32* %122, align 8
  %129 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %130 = load %struct.FT_Vector_*, %struct.FT_Vector_** %129, align 8
  %131 = zext i32 %121 to i64
  %132 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %130, i64 %131
  %133 = zext i32 %128 to i64
  %134 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %130, i64 %133
  %135 = bitcast %struct.FT_Vector_* %132 to i8*
  %136 = bitcast %struct.FT_Vector_* %134 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %135, i8* align 8 %136, i64 16, i1 false) #4
  %137 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %138 = load i8*, i8** %137, align 8
  %139 = getelementptr inbounds i8, i8* %138, i64 %133
  %140 = load i8, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %138, i64 %131
  store i8 %140, i8* %141, align 1
  %142 = load i8*, i8** %137, align 8
  %143 = getelementptr inbounds i8, i8* %142, i64 %131
  %144 = load i8, i8* %143, align 1
  %145 = or i8 %144, 4
  store i8 %145, i8* %143, align 1
  %146 = load i8*, i8** %137, align 8
  %147 = add i32 %123, -2
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, i8* %146, i64 %148
  %150 = load i8, i8* %149, align 1
  %151 = or i8 %150, 8
  store i8 %151, i8* %149, align 1
  br label %152

152:                                              ; preds = %126, %127
  store i32 -1, i32* %120, align 4
  %153 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  store i8 0, i8* %153, align 8
  br label %291

154:                                              ; preds = %4
  %155 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 7
  %158 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %157, i64 0, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %156, 1
  %161 = sub i64 %160, %159
  %162 = icmp ult i64 %161, 3
  br i1 %162, label %163, label %171

163:                                              ; preds = %154
  %164 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 7, i32 1
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %165, 1
  %169 = sub i64 %168, %167
  %170 = icmp ult i64 %169, 3
  br i1 %170, label %174, label %171

171:                                              ; preds = %163, %154
  %172 = tail call i32 @FT_Stroker_LineTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* %157)
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %291

174:                                              ; preds = %163, %171
  %175 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 6
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  store i64 %176, i64* %177, align 8
  %178 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 8
  %179 = load i64, i64* %178, align 8
  %180 = tail call fastcc i32 @ft_stroker_process_corner(%struct.FT_StrokerRec_* nonnull %0, i64 %179)
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %291

182:                                              ; preds = %174
  %183 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  %187 = add i32 %184, 1
  %188 = icmp ugt i32 %186, %187
  br i1 %188, label %190, label %189

189:                                              ; preds = %182
  store i32 %184, i32* %185, align 8
  br label %215

190:                                              ; preds = %182
  %191 = add i32 %186, -1
  store i32 %191, i32* %185, align 8
  %192 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %193 = load %struct.FT_Vector_*, %struct.FT_Vector_** %192, align 8
  %194 = zext i32 %184 to i64
  %195 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %193, i64 %194
  %196 = zext i32 %191 to i64
  %197 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %193, i64 %196
  %198 = bitcast %struct.FT_Vector_* %195 to i8*
  %199 = bitcast %struct.FT_Vector_* %197 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %198, i8* align 8 %199, i64 16, i1 false) #4
  %200 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %201 = load i8*, i8** %200, align 8
  %202 = getelementptr inbounds i8, i8* %201, i64 %196
  %203 = load i8, i8* %202, align 1
  %204 = getelementptr inbounds i8, i8* %201, i64 %194
  store i8 %203, i8* %204, align 1
  %205 = load i8*, i8** %200, align 8
  %206 = getelementptr inbounds i8, i8* %205, i64 %194
  %207 = load i8, i8* %206, align 1
  %208 = or i8 %207, 4
  store i8 %208, i8* %206, align 1
  %209 = load i8*, i8** %200, align 8
  %210 = add i32 %186, -2
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, i8* %209, i64 %211
  %213 = load i8, i8* %212, align 1
  %214 = or i8 %213, 8
  store i8 %214, i8* %212, align 1
  br label %215

215:                                              ; preds = %189, %190
  store i32 -1, i32* %183, align 4
  %216 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  store i8 0, i8* %216, align 8
  %217 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  %218 = load i32, i32* %217, align 4
  %219 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  %220 = load i32, i32* %219, align 8
  %221 = add i32 %218, 1
  %222 = icmp ugt i32 %220, %221
  br i1 %222, label %224, label %223

223:                                              ; preds = %215
  store i32 %218, i32* %219, align 8
  br label %289

224:                                              ; preds = %215
  %225 = add i32 %220, -1
  store i32 %225, i32* %219, align 8
  %226 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 2
  %227 = load %struct.FT_Vector_*, %struct.FT_Vector_** %226, align 8
  %228 = zext i32 %218 to i64
  %229 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %227, i64 %228
  %230 = zext i32 %225 to i64
  %231 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %227, i64 %230
  %232 = bitcast %struct.FT_Vector_* %229 to i8*
  %233 = bitcast %struct.FT_Vector_* %231 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %232, i8* align 8 %233, i64 16, i1 false) #4
  %234 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %235 = load i8*, i8** %234, align 8
  %236 = getelementptr inbounds i8, i8* %235, i64 %230
  %237 = load i8, i8* %236, align 1
  %238 = getelementptr inbounds i8, i8* %235, i64 %228
  store i8 %237, i8* %238, align 1
  %239 = load %struct.FT_Vector_*, %struct.FT_Vector_** %226, align 8
  %240 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %239, i64 %228
  %241 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %239, i64 %230
  %242 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %241, i64 -1
  %243 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %240, i64 1
  %244 = icmp ult %struct.FT_Vector_* %243, %242
  br i1 %244, label %245, label %261

245:                                              ; preds = %224, %245
  %246 = phi %struct.FT_Vector_* [ %259, %245 ], [ %243, %224 ]
  %247 = phi %struct.FT_Vector_* [ %258, %245 ], [ %242, %224 ]
  %248 = phi %struct.FT_Vector_* [ %246, %245 ], [ %240, %224 ]
  %249 = phi %struct.FT_Vector_* [ %247, %245 ], [ %241, %224 ]
  %250 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %246, i64 0, i32 0
  %251 = load i64, i64* %250, align 8
  %252 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %248, i64 1, i32 1
  %253 = load i64, i64* %252, align 8
  %254 = bitcast %struct.FT_Vector_* %246 to i8*
  %255 = bitcast %struct.FT_Vector_* %247 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %254, i8* align 8 %255, i64 16, i1 false) #4
  %256 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %247, i64 0, i32 0
  store i64 %251, i64* %256, align 8
  %257 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %249, i64 -1, i32 1
  store i64 %253, i64* %257, align 8
  %258 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %247, i64 -1
  %259 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %246, i64 1
  %260 = icmp ult %struct.FT_Vector_* %259, %258
  br i1 %260, label %245, label %261

261:                                              ; preds = %245, %224
  %262 = load i8*, i8** %234, align 8
  %263 = getelementptr inbounds i8, i8* %262, i64 %228
  %264 = getelementptr inbounds i8, i8* %262, i64 %230
  %265 = getelementptr inbounds i8, i8* %264, i64 -1
  %266 = getelementptr inbounds i8, i8* %263, i64 1
  %267 = icmp ult i8* %266, %265
  br i1 %267, label %268, label %278

268:                                              ; preds = %261, %268
  %269 = phi i8* [ %274, %268 ], [ %266, %261 ]
  %270 = phi i8* [ %273, %268 ], [ %265, %261 ]
  %271 = load i8, i8* %269, align 1
  %272 = load i8, i8* %270, align 1
  store i8 %272, i8* %269, align 1
  store i8 %271, i8* %270, align 1
  %273 = getelementptr inbounds i8, i8* %270, i64 -1
  %274 = getelementptr inbounds i8, i8* %269, i64 1
  %275 = icmp ult i8* %274, %273
  br i1 %275, label %268, label %276

276:                                              ; preds = %268
  %277 = load i8*, i8** %234, align 8
  br label %278

278:                                              ; preds = %276, %261
  %279 = phi i8* [ %277, %276 ], [ %262, %261 ]
  %280 = getelementptr inbounds i8, i8* %279, i64 %228
  %281 = load i8, i8* %280, align 1
  %282 = or i8 %281, 4
  store i8 %282, i8* %280, align 1
  %283 = load i8*, i8** %234, align 8
  %284 = add i32 %220, -2
  %285 = zext i32 %284 to i64
  %286 = getelementptr inbounds i8, i8* %283, i64 %285
  %287 = load i8, i8* %286, align 1
  %288 = or i8 %287, 8
  store i8 %288, i8* %286, align 1
  br label %289

289:                                              ; preds = %223, %278
  store i32 -1, i32* %217, align 4
  %290 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 4
  store i8 0, i8* %290, align 8
  br label %291

291:                                              ; preds = %107, %289, %171, %174, %1, %109, %8, %152
  %292 = phi i32 [ %180, %174 ], [ 0, %289 ], [ %172, %171 ], [ 6, %1 ], [ 0, %152 ], [ %11, %8 ], [ %108, %107 ], [ %117, %109 ]
  ret i32 %292
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_stroker_cap(%struct.FT_StrokerRec_*, i64) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.FT_Vector_, align 8
  %6 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %14

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  store i64 %1, i64* %10, align 8
  %11 = add nsw i64 %1, 11796480
  %12 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  store i64 %11, i64* %12, align 8
  %13 = tail call fastcc i32 @ft_stroker_arcto(%struct.FT_StrokerRec_* %0, i32 0)
  br label %206

14:                                               ; preds = %2
  %15 = bitcast %struct.FT_Vector_* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #4
  %16 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 0
  %17 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 1
  %18 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %19 = bitcast %struct.FT_Vector_* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 16, i1 false)
  %20 = load i64, i64* %18, align 8
  %21 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %5, i64 %20, i64 %1) #4
  %22 = load i64, i64* %17, align 8
  %23 = load i64, i64* %16, align 8
  %24 = load i32, i32* %6, align 4
  %25 = icmp eq i32 %24, 2
  %26 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %27 = load i64, i64* %26, align 8
  br i1 %25, label %28, label %33

28:                                               ; preds = %14
  %29 = add nsw i64 %27, %23
  store i64 %29, i64* %16, align 8
  %30 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, %22
  br label %36

33:                                               ; preds = %14
  store i64 %27, i64* %16, align 8
  %34 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %35 = load i64, i64* %34, align 8
  br label %36

36:                                               ; preds = %33, %28
  %37 = phi i64 [ %27, %33 ], [ %29, %28 ]
  %38 = phi i64 [ %35, %33 ], [ %32, %28 ]
  store i64 %38, i64* %17, align 8
  %39 = sub i64 %37, %22
  %40 = add nsw i64 %38, %23
  %41 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 4
  %42 = load i8, i8* %41, align 8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %53, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %46 = load %struct.FT_Vector_*, %struct.FT_Vector_** %45, align 8
  %47 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %21, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = add i32 %48, -1
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %46, i64 %50, i32 0
  store i64 %39, i64* %51, align 8
  %52 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %46, i64 %50, i32 1
  store i64 %40, i64* %52, align 8
  br label %121

53:                                               ; preds = %36
  %54 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %21, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %55, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %53
  %60 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %61 = load %struct.FT_Vector_*, %struct.FT_Vector_** %60, align 8
  %62 = add i32 %55, -1
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %61, i64 %63, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 1, %39
  %67 = add i64 %66, %65
  %68 = icmp ult i64 %67, 3
  br i1 %68, label %69, label %75

69:                                               ; preds = %59
  %70 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %61, i64 %63, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = sub i64 1, %40
  %73 = add i64 %72, %71
  %74 = icmp ult i64 %73, 3
  br i1 %74, label %126, label %75

75:                                               ; preds = %69, %59, %53
  %76 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = add i32 %55, 1
  %79 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #4
  store i32 0, i32* %4, align 4
  %80 = icmp ugt i32 %78, %77
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %83 = load i8*, i8** %82, align 8
  br label %110

84:                                               ; preds = %75
  %85 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 6
  %86 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %85, align 8
  br label %87

87:                                               ; preds = %87, %84
  %88 = phi i32 [ %77, %84 ], [ %91, %87 ]
  %89 = lshr i32 %88, 1
  %90 = add i32 %88, 16
  %91 = add i32 %90, %89
  %92 = icmp ult i32 %91, %78
  br i1 %92, label %87, label %93

93:                                               ; preds = %87
  %94 = zext i32 %77 to i64
  %95 = zext i32 %91 to i64
  %96 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %97 = bitcast %struct.FT_Vector_** %96 to i8**
  %98 = load i8*, i8** %97, align 8
  %99 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %86, i64 16, i64 %94, i64 %95, i8* %98, i32* nonnull %4) #4
  store i8* %99, i8** %97, align 8
  %100 = load i32, i32* %4, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %124

102:                                              ; preds = %93
  %103 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %104 = load i8*, i8** %103, align 8
  %105 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %86, i64 1, i64 %94, i64 %95, i8* %104, i32* nonnull %4) #4
  store i8* %105, i8** %103, align 8
  %106 = load i32, i32* %4, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %124

108:                                              ; preds = %102
  store i32 %91, i32* %76, align 4
  %109 = load i32, i32* %54, align 8
  br label %110

110:                                              ; preds = %81, %108
  %111 = phi i8* [ %105, %108 ], [ %83, %81 ]
  %112 = phi i32 [ %109, %108 ], [ %55, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #4
  %113 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %114 = load %struct.FT_Vector_*, %struct.FT_Vector_** %113, align 8
  %115 = zext i32 %112 to i64
  %116 = getelementptr inbounds i8, i8* %111, i64 %115
  %117 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %114, i64 %115, i32 0
  store i64 %39, i64* %117, align 8
  %118 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %114, i64 %115, i32 1
  store i64 %40, i64* %118, align 8
  store i8 1, i8* %116, align 1
  %119 = load i32, i32* %54, align 8
  %120 = add i32 %119, 1
  store i32 %120, i32* %54, align 8
  br label %121

121:                                              ; preds = %44, %110
  store i8 0, i8* %41, align 8
  %122 = load i64, i64* %16, align 8
  %123 = load i64, i64* %17, align 8
  br label %126

124:                                              ; preds = %102, %93
  %125 = phi i32 [ %106, %102 ], [ %100, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #4
  br label %202

126:                                              ; preds = %121, %69
  %127 = phi i64 [ %123, %121 ], [ %38, %69 ]
  %128 = phi i64 [ %122, %121 ], [ %37, %69 ]
  %129 = sub nsw i64 %128, %39
  %130 = add nsw i64 %129, %128
  %131 = sub nsw i64 %127, %40
  %132 = add nsw i64 %131, %127
  %133 = getelementptr inbounds %struct.FT_StrokeBorderRec_, %struct.FT_StrokeBorderRec_* %21, i64 0, i32 0
  %134 = load i32, i32* %133, align 8
  %135 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  %136 = load i32, i32* %135, align 4
  %137 = icmp ugt i32 %134, %136
  br i1 %137, label %138, label %154

138:                                              ; preds = %126
  %139 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %140 = load %struct.FT_Vector_*, %struct.FT_Vector_** %139, align 8
  %141 = add i32 %134, -1
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %140, i64 %142, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = sub i64 1, %130
  %146 = add i64 %145, %144
  %147 = icmp ult i64 %146, 3
  br i1 %147, label %148, label %154

148:                                              ; preds = %138
  %149 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %140, i64 %142, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 1, %132
  %152 = add i64 %151, %150
  %153 = icmp ult i64 %152, 3
  br i1 %153, label %204, label %154

154:                                              ; preds = %148, %138, %126
  %155 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = add i32 %134, 1
  %158 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %158) #4
  store i32 0, i32* %3, align 4
  %159 = icmp ugt i32 %157, %156
  br i1 %159, label %163, label %160

160:                                              ; preds = %154
  %161 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %162 = load i8*, i8** %161, align 8
  br label %191

163:                                              ; preds = %154
  %164 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 6
  %165 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %164, align 8
  br label %166

166:                                              ; preds = %166, %163
  %167 = phi i32 [ %156, %163 ], [ %170, %166 ]
  %168 = lshr i32 %167, 1
  %169 = add i32 %167, 16
  %170 = add i32 %169, %168
  %171 = icmp ult i32 %170, %157
  br i1 %171, label %166, label %172

172:                                              ; preds = %166
  %173 = zext i32 %156 to i64
  %174 = zext i32 %170 to i64
  %175 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %176 = bitcast %struct.FT_Vector_** %175 to i8**
  %177 = load i8*, i8** %176, align 8
  %178 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %165, i64 16, i64 %173, i64 %174, i8* %177, i32* nonnull %3) #4
  store i8* %178, i8** %176, align 8
  %179 = load i32, i32* %3, align 4
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %189

181:                                              ; preds = %172
  %182 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %183 = load i8*, i8** %182, align 8
  %184 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %165, i64 1, i64 %173, i64 %174, i8* %183, i32* nonnull %3) #4
  store i8* %184, i8** %182, align 8
  %185 = load i32, i32* %3, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %189

187:                                              ; preds = %181
  store i32 %170, i32* %155, align 4
  %188 = load i32, i32* %133, align 8
  br label %191

189:                                              ; preds = %172, %181
  %190 = phi i32 [ %185, %181 ], [ %179, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #4
  br label %202

191:                                              ; preds = %160, %187
  %192 = phi i8* [ %184, %187 ], [ %162, %160 ]
  %193 = phi i32 [ %188, %187 ], [ %134, %160 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %158) #4
  %194 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 2
  %195 = load %struct.FT_Vector_*, %struct.FT_Vector_** %194, align 8
  %196 = zext i32 %193 to i64
  %197 = getelementptr inbounds i8, i8* %192, i64 %196
  %198 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %195, i64 %196, i32 0
  store i64 %130, i64* %198, align 8
  %199 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %195, i64 %196, i32 1
  store i64 %132, i64* %199, align 8
  store i8 1, i8* %197, align 1
  %200 = load i32, i32* %133, align 8
  %201 = add i32 %200, 1
  store i32 %201, i32* %133, align 8
  br label %202

202:                                              ; preds = %191, %189, %124
  %203 = phi i32 [ %125, %124 ], [ %190, %189 ], [ 0, %191 ]
  store i8 0, i8* %41, align 8
  br label %204

204:                                              ; preds = %202, %148
  %205 = phi i32 [ 0, %148 ], [ %203, %202 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #4
  br label %206

206:                                              ; preds = %9, %204
  %207 = phi i32 [ %13, %9 ], [ %205, %204 ]
  ret i32 %207
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_GetBorderCounts(%struct.FT_StrokerRec_*, i32, i32*, i32*) local_unnamed_addr #0 {
  %5 = icmp eq %struct.FT_StrokerRec_* %0, null
  %6 = icmp ugt i32 %1, 1
  %7 = or i1 %5, %6
  br i1 %7, label %46, label %8

8:                                                ; preds = %4
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %9, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %42, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %9, i32 3
  %15 = load i8*, i8** %14, align 8
  br label %16

16:                                               ; preds = %28, %13
  %17 = phi i32 [ %35, %28 ], [ 0, %13 ]
  %18 = phi i8* [ %38, %28 ], [ %15, %13 ]
  %19 = phi i32 [ %36, %28 ], [ %11, %13 ]
  %20 = phi i32 [ %34, %28 ], [ 0, %13 ]
  %21 = phi i32 [ %37, %28 ], [ 0, %13 ]
  %22 = load i8, i8* %18, align 1
  %23 = and i8 %22, 4
  %24 = icmp eq i8 %23, 0
  %25 = icmp eq i32 %17, 0
  br i1 %24, label %27, label %26

26:                                               ; preds = %16
  br i1 %25, label %28, label %46

27:                                               ; preds = %16
  br i1 %25, label %46, label %28

28:                                               ; preds = %27, %26
  %29 = phi i32 [ %17, %27 ], [ 1, %26 ]
  %30 = and i8 %22, 8
  %31 = icmp eq i8 %30, 0
  %32 = xor i1 %31, true
  %33 = zext i1 %32 to i32
  %34 = add i32 %20, %33
  %35 = select i1 %31, i32 %29, i32 0
  %36 = add i32 %19, -1
  %37 = add nuw i32 %21, 1
  %38 = getelementptr inbounds i8, i8* %18, i64 1
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %16

40:                                               ; preds = %28
  %41 = icmp eq i32 %35, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %40, %8
  %43 = phi i32 [ %34, %40 ], [ 0, %8 ]
  %44 = phi i32 [ %37, %40 ], [ 0, %8 ]
  %45 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %9, i32 7
  store i8 1, i8* %45, align 8
  br label %46

46:                                               ; preds = %27, %26, %42, %40, %4
  %47 = phi i32 [ 0, %4 ], [ %44, %42 ], [ 0, %40 ], [ 0, %26 ], [ 0, %27 ]
  %48 = phi i32 [ 0, %4 ], [ %43, %42 ], [ 0, %40 ], [ 0, %26 ], [ 0, %27 ]
  %49 = phi i32 [ 6, %4 ], [ 0, %42 ], [ 0, %40 ], [ 0, %26 ], [ 0, %27 ]
  %50 = icmp eq i32* %2, null
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  store i32 %47, i32* %2, align 4
  br label %52

52:                                               ; preds = %46, %51
  %53 = icmp eq i32* %3, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %52
  store i32 %48, i32* %3, align 4
  br label %55

55:                                               ; preds = %52, %54
  ret i32 %49
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_GetCounts(%struct.FT_StrokerRec_*, i32*, i32*) local_unnamed_addr #0 {
  %4 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %4, label %86, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %38, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 3
  %11 = load i8*, i8** %10, align 8
  br label %12

12:                                               ; preds = %24, %9
  %13 = phi i32 [ %31, %24 ], [ 0, %9 ]
  %14 = phi i8* [ %34, %24 ], [ %11, %9 ]
  %15 = phi i32 [ %32, %24 ], [ %7, %9 ]
  %16 = phi i32 [ %30, %24 ], [ 0, %9 ]
  %17 = phi i32 [ %33, %24 ], [ 0, %9 ]
  %18 = load i8, i8* %14, align 1
  %19 = and i8 %18, 4
  %20 = icmp eq i8 %19, 0
  %21 = icmp eq i32 %13, 0
  br i1 %20, label %23, label %22

22:                                               ; preds = %12
  br i1 %21, label %24, label %42

23:                                               ; preds = %12
  br i1 %21, label %42, label %24

24:                                               ; preds = %23, %22
  %25 = phi i32 [ %13, %23 ], [ 1, %22 ]
  %26 = and i8 %18, 8
  %27 = icmp eq i8 %26, 0
  %28 = xor i1 %27, true
  %29 = zext i1 %28 to i32
  %30 = add i32 %16, %29
  %31 = select i1 %27, i32 %25, i32 0
  %32 = add i32 %15, -1
  %33 = add nuw i32 %17, 1
  %34 = getelementptr inbounds i8, i8* %14, i64 1
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %36, label %12

36:                                               ; preds = %24
  %37 = icmp eq i32 %31, 0
  br i1 %37, label %38, label %42

38:                                               ; preds = %36, %5
  %39 = phi i32 [ %30, %36 ], [ 0, %5 ]
  %40 = phi i32 [ %33, %36 ], [ 0, %5 ]
  %41 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 7
  store i8 1, i8* %41, align 8
  br label %42

42:                                               ; preds = %22, %23, %36, %38
  %43 = phi i32 [ %40, %38 ], [ 0, %36 ], [ 0, %23 ], [ 0, %22 ]
  %44 = phi i32 [ %39, %38 ], [ 0, %36 ], [ 0, %23 ], [ 0, %22 ]
  %45 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %42
  %49 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 3
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %63, %48
  %52 = phi i32 [ %70, %63 ], [ 0, %48 ]
  %53 = phi i8* [ %73, %63 ], [ %50, %48 ]
  %54 = phi i32 [ %71, %63 ], [ %46, %48 ]
  %55 = phi i32 [ %69, %63 ], [ 0, %48 ]
  %56 = phi i32 [ %72, %63 ], [ 0, %48 ]
  %57 = load i8, i8* %53, align 1
  %58 = and i8 %57, 4
  %59 = icmp eq i8 %58, 0
  %60 = icmp eq i32 %52, 0
  br i1 %59, label %62, label %61

61:                                               ; preds = %51
  br i1 %60, label %63, label %81

62:                                               ; preds = %51
  br i1 %60, label %81, label %63

63:                                               ; preds = %62, %61
  %64 = phi i32 [ %52, %62 ], [ 1, %61 ]
  %65 = and i8 %57, 8
  %66 = icmp eq i8 %65, 0
  %67 = xor i1 %66, true
  %68 = zext i1 %67 to i32
  %69 = add i32 %55, %68
  %70 = select i1 %66, i32 %64, i32 0
  %71 = add i32 %54, -1
  %72 = add nuw i32 %56, 1
  %73 = getelementptr inbounds i8, i8* %53, i64 1
  %74 = icmp eq i32 %71, 0
  br i1 %74, label %75, label %51

75:                                               ; preds = %63
  %76 = icmp eq i32 %70, 0
  br i1 %76, label %77, label %81

77:                                               ; preds = %75, %42
  %78 = phi i32 [ %69, %75 ], [ 0, %42 ]
  %79 = phi i32 [ %72, %75 ], [ 0, %42 ]
  %80 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 7
  store i8 1, i8* %80, align 8
  br label %81

81:                                               ; preds = %61, %62, %75, %77
  %82 = phi i32 [ %79, %77 ], [ 0, %75 ], [ 0, %62 ], [ 0, %61 ]
  %83 = phi i32 [ %78, %77 ], [ 0, %75 ], [ 0, %62 ], [ 0, %61 ]
  %84 = add i32 %82, %43
  %85 = add i32 %83, %44
  br label %86

86:                                               ; preds = %3, %81
  %87 = phi i32 [ %84, %81 ], [ 0, %3 ]
  %88 = phi i32 [ %85, %81 ], [ 0, %3 ]
  %89 = phi i32 [ 0, %81 ], [ 6, %3 ]
  %90 = icmp eq i32* %1, null
  br i1 %90, label %92, label %91

91:                                               ; preds = %86
  store i32 %87, i32* %1, align 4
  br label %92

92:                                               ; preds = %86, %91
  %93 = icmp eq i32* %2, null
  br i1 %93, label %95, label %94

94:                                               ; preds = %92
  store i32 %88, i32* %2, align 4
  br label %95

95:                                               ; preds = %92, %94
  ret i32 %89
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* readonly, i32, %struct.FT_Outline_*) local_unnamed_addr #0 {
  %4 = icmp ne %struct.FT_StrokerRec_* %0, null
  %5 = icmp ne %struct.FT_Outline_* %2, null
  %6 = and i1 %4, %5
  %7 = icmp ult i32 %1, 2
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %140

9:                                                ; preds = %3
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %10, i32 7
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %140, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %10, i32 0
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 1
  %20 = load i16, i16* %19, align 2
  br label %135

21:                                               ; preds = %14
  %22 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 2
  %23 = load %struct.FT_Vector_*, %struct.FT_Vector_** %22, align 8
  %24 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i64
  %27 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %23, i64 %26
  %28 = bitcast %struct.FT_Vector_* %27 to i8*
  %29 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %10, i32 2
  %30 = bitcast %struct.FT_Vector_** %29 to i8**
  %31 = load i8*, i8** %30, align 8
  %32 = zext i32 %16 to i64
  %33 = shl nuw nsw i64 %32, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* align 8 %31, i64 %33, i1 false) #4
  %34 = load i32, i32* %15, align 8
  %35 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %10, i32 3
  %36 = load i16, i16* %24, align 2
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %135, label %38

38:                                               ; preds = %21
  %39 = load i8*, i8** %35, align 8
  %40 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 3
  %41 = load i8*, i8** %40, align 8
  %42 = sext i16 %36 to i64
  %43 = getelementptr inbounds i8, i8* %41, i64 %42
  %44 = and i32 %34, 1
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %55, label %46

46:                                               ; preds = %38
  %47 = load i8, i8* %39, align 1
  %48 = and i8 %47, 1
  %49 = icmp eq i8 %48, 0
  %50 = and i8 %47, 2
  %51 = select i1 %49, i8 %50, i8 1
  store i8 %51, i8* %43, align 1
  %52 = add i32 %34, -1
  %53 = getelementptr inbounds i8, i8* %39, i64 1
  %54 = getelementptr inbounds i8, i8* %43, i64 1
  br label %55

55:                                               ; preds = %38, %46
  %56 = phi i8* [ %43, %38 ], [ %54, %46 ]
  %57 = phi i8* [ %39, %38 ], [ %53, %46 ]
  %58 = phi i32 [ %34, %38 ], [ %52, %46 ]
  %59 = icmp eq i32 %34, 1
  br i1 %59, label %80, label %60

60:                                               ; preds = %55, %60
  %61 = phi i8* [ %78, %60 ], [ %56, %55 ]
  %62 = phi i8* [ %77, %60 ], [ %57, %55 ]
  %63 = phi i32 [ %76, %60 ], [ %58, %55 ]
  %64 = load i8, i8* %62, align 1
  %65 = and i8 %64, 1
  %66 = icmp eq i8 %65, 0
  %67 = and i8 %64, 2
  %68 = select i1 %66, i8 %67, i8 1
  store i8 %68, i8* %61, align 1
  %69 = getelementptr inbounds i8, i8* %62, i64 1
  %70 = getelementptr inbounds i8, i8* %61, i64 1
  %71 = load i8, i8* %69, align 1
  %72 = and i8 %71, 1
  %73 = icmp eq i8 %72, 0
  %74 = and i8 %71, 2
  %75 = select i1 %73, i8 %74, i8 1
  store i8 %75, i8* %70, align 1
  %76 = add i32 %63, -2
  %77 = getelementptr inbounds i8, i8* %62, i64 2
  %78 = getelementptr inbounds i8, i8* %61, i64 2
  %79 = icmp eq i32 %76, 0
  br i1 %79, label %80, label %60

80:                                               ; preds = %60, %55
  %81 = load i32, i32* %15, align 8
  %82 = load i16, i16* %24, align 2
  %83 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 0
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %135, label %85

85:                                               ; preds = %80
  %86 = load i8*, i8** %35, align 8
  %87 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %2, i64 0, i32 4
  %88 = load i16*, i16** %87, align 8
  %89 = load i16, i16* %83, align 8
  %90 = sext i16 %89 to i64
  %91 = getelementptr inbounds i16, i16* %88, i64 %90
  %92 = and i32 %81, 1
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %107, label %94

94:                                               ; preds = %85
  %95 = load i8, i8* %86, align 1
  %96 = and i8 %95, 8
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds i16, i16* %91, i64 1
  store i16 %82, i16* %91, align 2
  %100 = load i16, i16* %83, align 8
  %101 = add i16 %100, 1
  store i16 %101, i16* %83, align 8
  br label %102

102:                                              ; preds = %98, %94
  %103 = phi i16* [ %99, %98 ], [ %91, %94 ]
  %104 = add i32 %81, -1
  %105 = getelementptr inbounds i8, i8* %86, i64 1
  %106 = add i16 %82, 1
  br label %107

107:                                              ; preds = %85, %102
  %108 = phi i16 [ %82, %85 ], [ %106, %102 ]
  %109 = phi i16* [ %91, %85 ], [ %103, %102 ]
  %110 = phi i8* [ %86, %85 ], [ %105, %102 ]
  %111 = phi i32 [ %81, %85 ], [ %104, %102 ]
  %112 = icmp eq i32 %81, 1
  br i1 %112, label %131, label %113

113:                                              ; preds = %107, %146
  %114 = phi i16 [ %150, %146 ], [ %108, %107 ]
  %115 = phi i16* [ %147, %146 ], [ %109, %107 ]
  %116 = phi i8* [ %149, %146 ], [ %110, %107 ]
  %117 = phi i32 [ %148, %146 ], [ %111, %107 ]
  %118 = load i8, i8* %116, align 1
  %119 = and i8 %118, 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %113
  %122 = getelementptr inbounds i16, i16* %115, i64 1
  store i16 %114, i16* %115, align 2
  %123 = load i16, i16* %83, align 8
  %124 = add i16 %123, 1
  store i16 %124, i16* %83, align 8
  br label %125

125:                                              ; preds = %121, %113
  %126 = phi i16* [ %122, %121 ], [ %115, %113 ]
  %127 = getelementptr inbounds i8, i8* %116, i64 1
  %128 = load i8, i8* %127, align 1
  %129 = and i8 %128, 8
  %130 = icmp eq i8 %129, 0
  br i1 %130, label %146, label %141

131:                                              ; preds = %146, %107
  %132 = load i32, i32* %15, align 8
  %133 = load i16, i16* %24, align 2
  %134 = trunc i32 %132 to i16
  br label %135

135:                                              ; preds = %18, %21, %80, %131
  %136 = phi i16* [ %24, %131 ], [ %24, %80 ], [ %19, %18 ], [ %24, %21 ]
  %137 = phi i16 [ %133, %131 ], [ %82, %80 ], [ %20, %18 ], [ %36, %21 ]
  %138 = phi i16 [ %134, %131 ], [ 0, %80 ], [ 0, %18 ], [ 0, %21 ]
  %139 = add i16 %138, %137
  store i16 %139, i16* %136, align 2
  br label %140

140:                                              ; preds = %135, %9, %3
  ret void

141:                                              ; preds = %125
  %142 = add i16 %114, 1
  %143 = getelementptr inbounds i16, i16* %126, i64 1
  store i16 %142, i16* %126, align 2
  %144 = load i16, i16* %83, align 8
  %145 = add i16 %144, 1
  store i16 %145, i16* %83, align 8
  br label %146

146:                                              ; preds = %141, %125
  %147 = phi i16* [ %143, %141 ], [ %126, %125 ]
  %148 = add i32 %117, -2
  %149 = getelementptr inbounds i8, i8* %116, i64 2
  %150 = add i16 %114, 2
  %151 = icmp eq i32 %148, 0
  br i1 %151, label %131, label %113
}

; Function Attrs: nounwind ssp uwtable
define hidden void @FT_Stroker_Export(%struct.FT_StrokerRec_* readonly, %struct.FT_Outline_*) local_unnamed_addr #0 {
  tail call void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* %0, i32 0, %struct.FT_Outline_* %1)
  tail call void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* %0, i32 1, %struct.FT_Outline_* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Stroker_ParseOutline(%struct.FT_StrokerRec_*, %struct.FT_Outline_* readonly, i8 zeroext) local_unnamed_addr #0 {
  %4 = alloca <2 x i64>, align 16
  %5 = bitcast <2 x i64>* %4 to %struct.FT_Vector_*
  %6 = alloca %struct.FT_Vector_, align 8
  %7 = alloca <2 x i64>, align 16
  %8 = bitcast <2 x i64>* %7 to %struct.FT_Vector_*
  %9 = alloca <2 x i64>, align 16
  %10 = bitcast <2 x i64>* %9 to %struct.FT_Vector_*
  %11 = alloca <2 x i64>, align 16
  %12 = bitcast <2 x i64>* %11 to %struct.FT_Vector_*
  %13 = alloca %struct.FT_Vector_, align 8
  %14 = alloca %struct.FT_Vector_, align 8
  %15 = alloca %struct.FT_Vector_, align 8
  %16 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #4
  %17 = bitcast %struct.FT_Vector_* %6 to i8*
  %18 = bitcast <2 x i64>* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #4
  %19 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 0
  %20 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %6, i64 0, i32 1
  %21 = icmp eq %struct.FT_Outline_* %1, null
  %22 = bitcast %struct.FT_Vector_* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  br i1 %21, label %209, label %23

23:                                               ; preds = %3
  %24 = icmp eq %struct.FT_StrokerRec_* %0, null
  br i1 %24, label %209, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 5
  store i32 -1, i32* %27, align 4
  %28 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 0, i32 7
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 0
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 5
  store i32 -1, i32* %30, align 4
  %31 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 1, i32 7
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 0
  %33 = load i16, i16* %32, align 8
  %34 = icmp sgt i16 %33, 0
  br i1 %34, label %35, label %209

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 4
  %37 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 2
  %38 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %1, i64 0, i32 3
  %39 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 4
  %40 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2
  %41 = bitcast %struct.FT_Vector_* %40 to i8*
  %42 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 5
  %43 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 11
  %44 = icmp eq i8 %2, 0
  %45 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 10
  %46 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 9
  %47 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 7
  %48 = bitcast %struct.FT_Vector_* %47 to i8*
  %49 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %50 = bitcast <2 x i64>* %9 to i8*
  %51 = bitcast <2 x i64>* %11 to i8*
  %52 = bitcast <2 x i64>* %7 to i8*
  %53 = bitcast %struct.FT_Vector_* %13 to i8*
  %54 = bitcast %struct.FT_Vector_* %14 to i8*
  %55 = bitcast %struct.FT_Vector_* %15 to i8*
  %56 = bitcast <2 x i64>* %9 to i8*
  %57 = bitcast <2 x i64>* %11 to i8*
  %58 = bitcast %struct.FT_Vector_* %13 to i8*
  %59 = bitcast %struct.FT_Vector_* %14 to i8*
  br label %60

60:                                               ; preds = %35, %201
  %61 = phi i64 [ 0, %35 ], [ %203, %201 ]
  %62 = phi i32 [ 0, %35 ], [ %202, %201 ]
  %63 = load i16*, i16** %36, align 8
  %64 = getelementptr inbounds i16, i16* %63, i64 %61
  %65 = load i16, i16* %64, align 2
  %66 = sext i16 %65 to i32
  %67 = load %struct.FT_Vector_*, %struct.FT_Vector_** %37, align 8
  %68 = zext i32 %66 to i64
  %69 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 %68
  %70 = icmp ult i32 %62, %66
  br i1 %70, label %73, label %71

71:                                               ; preds = %60
  %72 = add nsw i32 %66, 1
  br label %201

73:                                               ; preds = %60
  %74 = zext i32 %62 to i64
  %75 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 %74
  %76 = bitcast %struct.FT_Vector_* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %17, i8* align 8 %76, i64 16, i1 false)
  %77 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 %68, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %67, i64 %68, i32 1
  %80 = load i64, i64* %79, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* nonnull align 8 %17, i64 16, i1 false)
  %81 = load i8*, i8** %38, align 8
  %82 = getelementptr inbounds i8, i8* %81, i64 %74
  %83 = load i8, i8* %82, align 1
  %84 = and i8 %83, 3
  switch i8 %84, label %103 [
    i8 2, label %209
    i8 0, label %85
  ]

85:                                               ; preds = %73
  %86 = getelementptr inbounds i8, i8* %81, i64 %68
  %87 = load i8, i8* %86, align 1
  %88 = and i8 %87, 3
  %89 = icmp eq i8 %88, 1
  br i1 %89, label %90, label %92

90:                                               ; preds = %85
  store i64 %78, i64* %19, align 8
  store i64 %80, i64* %20, align 8
  %91 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %69, i64 -1
  br label %99

92:                                               ; preds = %85
  %93 = load i64, i64* %19, align 8
  %94 = add nsw i64 %93, %78
  %95 = sdiv i64 %94, 2
  store i64 %95, i64* %19, align 8
  %96 = load i64, i64* %20, align 8
  %97 = add nsw i64 %96, %80
  %98 = sdiv i64 %97, 2
  store i64 %98, i64* %20, align 8
  br label %99

99:                                               ; preds = %92, %90
  %100 = phi %struct.FT_Vector_* [ %91, %90 ], [ %69, %92 ]
  %101 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %75, i64 -1
  %102 = getelementptr inbounds i8, i8* %82, i64 -1
  br label %103

103:                                              ; preds = %99, %73
  %104 = phi %struct.FT_Vector_* [ %101, %99 ], [ %75, %73 ]
  %105 = phi %struct.FT_Vector_* [ %100, %99 ], [ %69, %73 ]
  %106 = phi i8* [ %102, %99 ], [ %82, %73 ]
  store i8 1, i8* %39, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* nonnull align 8 %17, i64 16, i1 false) #4
  store i8 %2, i8* %42, align 1
  %107 = load i32, i32* %43, align 8
  %108 = icmp ne i32 %107, 0
  %109 = or i1 %108, %44
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = load i32, i32* %45, align 4
  %112 = icmp eq i32 %111, 0
  br label %113

113:                                              ; preds = %103, %110
  %114 = phi i1 [ %108, %103 ], [ %112, %110 ]
  %115 = zext i1 %114 to i8
  store i8 %115, i8* %46, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* nonnull align 8 %17, i64 16, i1 false) #4
  store i64 0, i64* %49, align 8
  %116 = icmp ult %struct.FT_Vector_* %104, %105
  br i1 %116, label %117, label %188

117:                                              ; preds = %113, %135
  %118 = phi i8* [ %137, %135 ], [ %106, %113 ]
  %119 = phi %struct.FT_Vector_* [ %136, %135 ], [ %104, %113 ]
  %120 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %119, i64 1
  %121 = getelementptr inbounds i8, i8* %118, i64 1
  %122 = load i8, i8* %121, align 1
  %123 = and i8 %122, 3
  %124 = zext i8 %123 to i32
  switch i32 %124, label %165 [
    i32 1, label %125
    i32 0, label %139
  ]

125:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %52) #4
  %126 = bitcast %struct.FT_Vector_* %120 to <2 x i64>*
  %127 = load <2 x i64>, <2 x i64>* %126, align 8
  store <2 x i64> %127, <2 x i64>* %7, align 16
  %128 = call i32 @FT_Stroker_LineTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %8)
  %129 = icmp eq i32 %128, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %52) #4
  br i1 %129, label %135, label %209

130:                                              ; preds = %178, %151
  %131 = phi i8* [ %51, %151 ], [ %54, %178 ]
  %132 = phi i8* [ %50, %151 ], [ %53, %178 ]
  %133 = phi %struct.FT_Vector_* [ %146, %151 ], [ %174, %178 ]
  %134 = phi i8* [ %147, %151 ], [ %179, %178 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %131) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #4
  br label %135

135:                                              ; preds = %130, %125
  %136 = phi %struct.FT_Vector_* [ %120, %125 ], [ %133, %130 ]
  %137 = phi i8* [ %121, %125 ], [ %134, %130 ]
  %138 = icmp ult %struct.FT_Vector_* %136, %105
  br i1 %138, label %117, label %188

139:                                              ; preds = %117
  %140 = bitcast %struct.FT_Vector_* %120 to <2 x i64>*
  %141 = load <2 x i64>, <2 x i64>* %140, align 8
  store <2 x i64> %141, <2 x i64>* %4, align 16
  %142 = icmp ult %struct.FT_Vector_* %120, %105
  br i1 %142, label %143, label %163

143:                                              ; preds = %139, %161
  %144 = phi i8* [ %147, %161 ], [ %121, %139 ]
  %145 = phi %struct.FT_Vector_* [ %146, %161 ], [ %120, %139 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #4
  %146 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %145, i64 1
  %147 = getelementptr inbounds i8, i8* %144, i64 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 -86, i64 16, i1 false)
  %148 = load i8, i8* %147, align 1
  %149 = and i8 %148, 3
  %150 = bitcast %struct.FT_Vector_* %146 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %50, i8* align 8 %150, i64 16, i1 false)
  switch i8 %149, label %196 [
    i8 1, label %151
    i8 0, label %154
  ]

151:                                              ; preds = %143
  %152 = call i32 @FT_Stroker_ConicTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %5, %struct.FT_Vector_* nonnull %10)
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %130, label %196

154:                                              ; preds = %143
  %155 = load <2 x i64>, <2 x i64>* %4, align 16
  %156 = load <2 x i64>, <2 x i64>* %9, align 16
  %157 = add nsw <2 x i64> %156, %155
  %158 = sdiv <2 x i64> %157, <i64 2, i64 2>
  store <2 x i64> %158, <2 x i64>* %11, align 16
  %159 = call i32 @FT_Stroker_ConicTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %5, %struct.FT_Vector_* nonnull %12)
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %196

161:                                              ; preds = %154
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %16, i8* nonnull align 16 %50, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #4
  %162 = icmp ult %struct.FT_Vector_* %146, %105
  br i1 %162, label %143, label %163

163:                                              ; preds = %139, %161
  %164 = call i32 @FT_Stroker_ConicTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %5, %struct.FT_Vector_* nonnull %6)
  br label %185

165:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %53) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #4
  %166 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %119, i64 2
  %167 = icmp ugt %struct.FT_Vector_* %166, %105
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  br i1 %167, label %196, label %168

168:                                              ; preds = %165
  %169 = getelementptr inbounds i8, i8* %118, i64 2
  %170 = load i8, i8* %169, align 1
  %171 = and i8 %170, 3
  %172 = icmp eq i8 %171, 2
  br i1 %172, label %173, label %196

173:                                              ; preds = %168
  %174 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %119, i64 3
  %175 = bitcast %struct.FT_Vector_* %120 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %53, i8* align 8 %175, i64 16, i1 false)
  %176 = bitcast %struct.FT_Vector_* %166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %54, i8* align 8 %176, i64 16, i1 false)
  %177 = icmp ugt %struct.FT_Vector_* %174, %105
  br i1 %177, label %183, label %178

178:                                              ; preds = %173
  %179 = getelementptr inbounds i8, i8* %118, i64 3
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #4
  %180 = bitcast %struct.FT_Vector_* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %55, i8* align 8 %180, i64 16, i1 false)
  %181 = call i32 @FT_Stroker_CubicTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %13, %struct.FT_Vector_* nonnull %14, %struct.FT_Vector_* nonnull %15)
  %182 = icmp eq i32 %181, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #4
  br i1 %182, label %130, label %196

183:                                              ; preds = %173
  %184 = call i32 @FT_Stroker_CubicTo(%struct.FT_StrokerRec_* nonnull %0, %struct.FT_Vector_* nonnull %13, %struct.FT_Vector_* nonnull %14, %struct.FT_Vector_* nonnull %6)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %53) #4
  br label %185

185:                                              ; preds = %183, %163
  %186 = phi i32 [ %164, %163 ], [ %184, %183 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %207

188:                                              ; preds = %135, %113, %185
  %189 = load i8, i8* %39, align 8
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %191, label %194

191:                                              ; preds = %188
  %192 = call i32 @FT_Stroker_EndSubPath(%struct.FT_StrokerRec_* nonnull %0)
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %207

194:                                              ; preds = %191, %188
  %195 = add nsw i32 %66, 1
  br label %201

196:                                              ; preds = %165, %168, %178, %151, %154, %143
  %197 = phi i8* [ %51, %143 ], [ %51, %154 ], [ %54, %165 ], [ %54, %168 ], [ %54, %178 ], [ %51, %151 ]
  %198 = phi i8* [ %50, %143 ], [ %50, %154 ], [ %53, %165 ], [ %53, %168 ], [ %53, %178 ], [ %50, %151 ]
  %199 = phi i32 [ %159, %154 ], [ 0, %143 ], [ 0, %165 ], [ 0, %168 ], [ %181, %178 ], [ %152, %151 ]
  %200 = phi i32 [ 6, %154 ], [ 5, %143 ], [ 5, %165 ], [ 5, %168 ], [ 6, %178 ], [ 6, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %198) #4
  switch i32 %200, label %207 [
    i32 5, label %209
    i32 4, label %201
  ]

201:                                              ; preds = %194, %71, %196
  %202 = phi i32 [ %62, %196 ], [ %195, %194 ], [ %72, %71 ]
  %203 = add nuw nsw i64 %61, 1
  %204 = load i16, i16* %32, align 8
  %205 = sext i16 %204 to i64
  %206 = icmp slt i64 %203, %205
  br i1 %206, label %60, label %207

207:                                              ; preds = %191, %185, %201, %196
  %208 = phi i32 [ %192, %191 ], [ %186, %185 ], [ 0, %201 ], [ %199, %196 ]
  br label %209

209:                                              ; preds = %125, %73, %196, %207, %25, %23, %3
  %210 = phi i32 [ 20, %3 ], [ 6, %23 ], [ 0, %25 ], [ %208, %207 ], [ 20, %196 ], [ 20, %73 ], [ %128, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #4
  ret i32 %210
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Glyph_Stroke(%struct.FT_GlyphRec_**, %struct.FT_StrokerRec_*, i8 zeroext) local_unnamed_addr #0 {
  %4 = alloca %struct.FT_GlyphRec_*, align 8
  %5 = icmp eq %struct.FT_GlyphRec_** %0, null
  br i1 %5, label %127, label %6

6:                                                ; preds = %3
  %7 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %0, align 8
  %8 = icmp eq %struct.FT_GlyphRec_* %7, null
  br i1 %8, label %127, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %7, i64 0, i32 1
  %11 = load %struct.FT_Glyph_Class_*, %struct.FT_Glyph_Class_** %10, align 8
  %12 = icmp eq %struct.FT_Glyph_Class_* %11, @ft_outline_glyph_class
  br i1 %12, label %13, label %127

13:                                               ; preds = %9
  %14 = bitcast %struct.FT_GlyphRec_** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #4
  store %struct.FT_GlyphRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_GlyphRec_*), %struct.FT_GlyphRec_** %4, align 8
  %15 = call i32 @FT_Glyph_Copy(%struct.FT_GlyphRec_* nonnull %7, %struct.FT_GlyphRec_** nonnull %4) #4
  %16 = icmp eq i32 %15, 0
  %17 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %4, align 8
  %18 = select i1 %16, %struct.FT_GlyphRec_* %17, %struct.FT_GlyphRec_* %7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #4
  br i1 %16, label %19, label %127

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %18, i64 1
  %21 = bitcast %struct.FT_GlyphRec_* %20 to %struct.FT_Outline_*
  %22 = call i32 @FT_Stroker_ParseOutline(%struct.FT_StrokerRec_* %1, %struct.FT_Outline_* %21, i8 zeroext 0)
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %123

24:                                               ; preds = %19
  %25 = icmp eq %struct.FT_StrokerRec_* %1, null
  br i1 %25, label %107, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %59, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 0, i32 3
  %32 = load i8*, i8** %31, align 8
  br label %33

33:                                               ; preds = %45, %30
  %34 = phi i32 [ %52, %45 ], [ 0, %30 ]
  %35 = phi i8* [ %55, %45 ], [ %32, %30 ]
  %36 = phi i32 [ %53, %45 ], [ %28, %30 ]
  %37 = phi i32 [ %51, %45 ], [ 0, %30 ]
  %38 = phi i32 [ %54, %45 ], [ 0, %30 ]
  %39 = load i8, i8* %35, align 1
  %40 = and i8 %39, 4
  %41 = icmp eq i8 %40, 0
  %42 = icmp eq i32 %34, 0
  br i1 %41, label %44, label %43

43:                                               ; preds = %33
  br i1 %42, label %45, label %63

44:                                               ; preds = %33
  br i1 %42, label %63, label %45

45:                                               ; preds = %44, %43
  %46 = phi i32 [ %34, %44 ], [ 1, %43 ]
  %47 = and i8 %39, 8
  %48 = icmp eq i8 %47, 0
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = add i32 %37, %50
  %52 = select i1 %48, i32 %46, i32 0
  %53 = add i32 %36, -1
  %54 = add nuw i32 %38, 1
  %55 = getelementptr inbounds i8, i8* %35, i64 1
  %56 = icmp eq i32 %53, 0
  br i1 %56, label %57, label %33

57:                                               ; preds = %45
  %58 = icmp eq i32 %52, 0
  br i1 %58, label %59, label %63

59:                                               ; preds = %57, %26
  %60 = phi i32 [ %51, %57 ], [ 0, %26 ]
  %61 = phi i32 [ %54, %57 ], [ 0, %26 ]
  %62 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 0, i32 7
  store i8 1, i8* %62, align 8
  br label %63

63:                                               ; preds = %44, %43, %59, %57
  %64 = phi i32 [ %61, %59 ], [ 0, %57 ], [ 0, %43 ], [ 0, %44 ]
  %65 = phi i32 [ %60, %59 ], [ 0, %57 ], [ 0, %43 ], [ 0, %44 ]
  %66 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 1, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %98, label %69

69:                                               ; preds = %63
  %70 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 1, i32 3
  %71 = load i8*, i8** %70, align 8
  br label %72

72:                                               ; preds = %84, %69
  %73 = phi i32 [ %91, %84 ], [ 0, %69 ]
  %74 = phi i8* [ %94, %84 ], [ %71, %69 ]
  %75 = phi i32 [ %92, %84 ], [ %67, %69 ]
  %76 = phi i32 [ %90, %84 ], [ 0, %69 ]
  %77 = phi i32 [ %93, %84 ], [ 0, %69 ]
  %78 = load i8, i8* %74, align 1
  %79 = and i8 %78, 4
  %80 = icmp eq i8 %79, 0
  %81 = icmp eq i32 %73, 0
  br i1 %80, label %83, label %82

82:                                               ; preds = %72
  br i1 %81, label %84, label %102

83:                                               ; preds = %72
  br i1 %81, label %102, label %84

84:                                               ; preds = %83, %82
  %85 = phi i32 [ %73, %83 ], [ 1, %82 ]
  %86 = and i8 %78, 8
  %87 = icmp eq i8 %86, 0
  %88 = xor i1 %87, true
  %89 = zext i1 %88 to i32
  %90 = add i32 %76, %89
  %91 = select i1 %87, i32 %85, i32 0
  %92 = add i32 %75, -1
  %93 = add nuw i32 %77, 1
  %94 = getelementptr inbounds i8, i8* %74, i64 1
  %95 = icmp eq i32 %92, 0
  br i1 %95, label %96, label %72

96:                                               ; preds = %84
  %97 = icmp eq i32 %91, 0
  br i1 %97, label %98, label %102

98:                                               ; preds = %96, %63
  %99 = phi i32 [ %90, %96 ], [ 0, %63 ]
  %100 = phi i32 [ %93, %96 ], [ 0, %63 ]
  %101 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 1, i32 7
  store i8 1, i8* %101, align 8
  br label %102

102:                                              ; preds = %83, %82, %98, %96
  %103 = phi i32 [ %100, %98 ], [ 0, %96 ], [ 0, %82 ], [ 0, %83 ]
  %104 = phi i32 [ %99, %98 ], [ 0, %96 ], [ 0, %82 ], [ 0, %83 ]
  %105 = add i32 %103, %64
  %106 = add i32 %104, %65
  br label %107

107:                                              ; preds = %24, %102
  %108 = phi i32 [ %105, %102 ], [ 0, %24 ]
  %109 = phi i32 [ %106, %102 ], [ 0, %24 ]
  %110 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %18, i64 0, i32 0
  %111 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %110, align 8
  %112 = call i32 @FT_Outline_Done(%struct.FT_LibraryRec_* %111, %struct.FT_Outline_* %21) #4
  %113 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %110, align 8
  %114 = call i32 @FT_Outline_New(%struct.FT_LibraryRec_* %113, i32 %108, i32 %109, %struct.FT_Outline_* %21) #4
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %123

116:                                              ; preds = %107
  %117 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %21, i64 0, i32 1
  store i16 0, i16* %117, align 2
  %118 = bitcast %struct.FT_GlyphRec_* %20 to i16*
  store i16 0, i16* %118, align 8
  call void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* %1, i32 0, %struct.FT_Outline_* %21) #4
  call void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* %1, i32 1, %struct.FT_Outline_* %21) #4
  %119 = icmp eq i8 %2, 0
  br i1 %119, label %122, label %120

120:                                              ; preds = %116
  %121 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %0, align 8
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %121) #4
  br label %122

122:                                              ; preds = %116, %120
  store %struct.FT_GlyphRec_* %18, %struct.FT_GlyphRec_** %0, align 8
  br label %127

123:                                              ; preds = %19, %107
  %124 = phi i32 [ %114, %107 ], [ %22, %19 ]
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %18) #4
  %125 = icmp eq i8 %2, 0
  br i1 %125, label %126, label %127

126:                                              ; preds = %123
  store %struct.FT_GlyphRec_* null, %struct.FT_GlyphRec_** %0, align 8
  br label %127

127:                                              ; preds = %122, %126, %3, %6, %9, %123, %13
  %128 = phi i32 [ 6, %9 ], [ %15, %13 ], [ %124, %123 ], [ %124, %126 ], [ 0, %122 ], [ 6, %6 ], [ 6, %3 ]
  ret i32 %128
}

declare i32 @FT_Glyph_Copy(%struct.FT_GlyphRec_*, %struct.FT_GlyphRec_**) local_unnamed_addr #2

declare i32 @FT_Outline_Done(%struct.FT_LibraryRec_*, %struct.FT_Outline_*) local_unnamed_addr #2

declare i32 @FT_Outline_New(%struct.FT_LibraryRec_*, i32, i32, %struct.FT_Outline_*) local_unnamed_addr #2

declare void @FT_Done_Glyph(%struct.FT_GlyphRec_*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FT_Glyph_StrokeBorder(%struct.FT_GlyphRec_**, %struct.FT_StrokerRec_*, i8 zeroext, i8 zeroext) local_unnamed_addr #0 {
  %5 = alloca %struct.FT_GlyphRec_*, align 8
  %6 = icmp eq %struct.FT_GlyphRec_** %0, null
  br i1 %6, label %90, label %7

7:                                                ; preds = %4
  %8 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %0, align 8
  %9 = icmp eq %struct.FT_GlyphRec_* %8, null
  br i1 %9, label %90, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %8, i64 0, i32 1
  %12 = load %struct.FT_Glyph_Class_*, %struct.FT_Glyph_Class_** %11, align 8
  %13 = icmp eq %struct.FT_Glyph_Class_* %12, @ft_outline_glyph_class
  br i1 %13, label %14, label %90

14:                                               ; preds = %10
  %15 = bitcast %struct.FT_GlyphRec_** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #4
  store %struct.FT_GlyphRec_* inttoptr (i64 -6148914691236517206 to %struct.FT_GlyphRec_*), %struct.FT_GlyphRec_** %5, align 8
  %16 = call i32 @FT_Glyph_Copy(%struct.FT_GlyphRec_* nonnull %8, %struct.FT_GlyphRec_** nonnull %5) #4
  %17 = icmp eq i32 %16, 0
  %18 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %5, align 8
  %19 = select i1 %17, %struct.FT_GlyphRec_* %18, %struct.FT_GlyphRec_* %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #4
  br i1 %17, label %20, label %90

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %19, i64 1
  %22 = bitcast %struct.FT_GlyphRec_* %21 to %struct.FT_Outline_*
  %23 = call i32 @FT_Outline_Get_Orientation(%struct.FT_Outline_* %22) #4
  %24 = icmp ne i32 %23, 0
  %25 = icmp ne i8 %2, 0
  %26 = xor i1 %25, %24
  %27 = zext i1 %26 to i32
  %28 = call i32 @FT_Stroker_ParseOutline(%struct.FT_StrokerRec_* %1, %struct.FT_Outline_* %22, i8 zeroext 0)
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %86

30:                                               ; preds = %20
  %31 = icmp eq %struct.FT_StrokerRec_* %1, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %30
  %33 = zext i1 %26 to i64
  %34 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 %33, i32 0
  %35 = load i32, i32* %34, align 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %66, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 %33, i32 3
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %52, %37
  %41 = phi i32 [ %59, %52 ], [ 0, %37 ]
  %42 = phi i8* [ %62, %52 ], [ %39, %37 ]
  %43 = phi i32 [ %60, %52 ], [ %35, %37 ]
  %44 = phi i32 [ %58, %52 ], [ 0, %37 ]
  %45 = phi i32 [ %61, %52 ], [ 0, %37 ]
  %46 = load i8, i8* %42, align 1
  %47 = and i8 %46, 4
  %48 = icmp eq i8 %47, 0
  %49 = icmp eq i32 %41, 0
  br i1 %48, label %51, label %50

50:                                               ; preds = %40
  br i1 %49, label %52, label %70

51:                                               ; preds = %40
  br i1 %49, label %70, label %52

52:                                               ; preds = %51, %50
  %53 = phi i32 [ %41, %51 ], [ 1, %50 ]
  %54 = and i8 %46, 8
  %55 = icmp eq i8 %54, 0
  %56 = xor i1 %55, true
  %57 = zext i1 %56 to i32
  %58 = add i32 %44, %57
  %59 = select i1 %55, i32 %53, i32 0
  %60 = add i32 %43, -1
  %61 = add nuw i32 %45, 1
  %62 = getelementptr inbounds i8, i8* %42, i64 1
  %63 = icmp eq i32 %60, 0
  br i1 %63, label %64, label %40

64:                                               ; preds = %52
  %65 = icmp eq i32 %59, 0
  br i1 %65, label %66, label %70

66:                                               ; preds = %64, %32
  %67 = phi i32 [ %58, %64 ], [ 0, %32 ]
  %68 = phi i32 [ %61, %64 ], [ 0, %32 ]
  %69 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %1, i64 0, i32 15, i64 %33, i32 7
  store i8 1, i8* %69, align 8
  br label %70

70:                                               ; preds = %50, %51, %30, %64, %66
  %71 = phi i32 [ 0, %30 ], [ %68, %66 ], [ 0, %64 ], [ 0, %51 ], [ 0, %50 ]
  %72 = phi i32 [ 0, %30 ], [ %67, %66 ], [ 0, %64 ], [ 0, %51 ], [ 0, %50 ]
  %73 = getelementptr inbounds %struct.FT_GlyphRec_, %struct.FT_GlyphRec_* %19, i64 0, i32 0
  %74 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %73, align 8
  %75 = call i32 @FT_Outline_Done(%struct.FT_LibraryRec_* %74, %struct.FT_Outline_* %22) #4
  %76 = load %struct.FT_LibraryRec_*, %struct.FT_LibraryRec_** %73, align 8
  %77 = call i32 @FT_Outline_New(%struct.FT_LibraryRec_* %76, i32 %71, i32 %72, %struct.FT_Outline_* %22) #4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %86

79:                                               ; preds = %70
  %80 = getelementptr inbounds %struct.FT_Outline_, %struct.FT_Outline_* %22, i64 0, i32 1
  store i16 0, i16* %80, align 2
  %81 = bitcast %struct.FT_GlyphRec_* %21 to i16*
  store i16 0, i16* %81, align 8
  call void @FT_Stroker_ExportBorder(%struct.FT_StrokerRec_* %1, i32 %27, %struct.FT_Outline_* %22)
  %82 = icmp eq i8 %3, 0
  br i1 %82, label %85, label %83

83:                                               ; preds = %79
  %84 = load %struct.FT_GlyphRec_*, %struct.FT_GlyphRec_** %0, align 8
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %84) #4
  br label %85

85:                                               ; preds = %79, %83
  store %struct.FT_GlyphRec_* %19, %struct.FT_GlyphRec_** %0, align 8
  br label %90

86:                                               ; preds = %20, %70
  %87 = phi i32 [ %77, %70 ], [ %28, %20 ]
  call void @FT_Done_Glyph(%struct.FT_GlyphRec_* %19) #4
  %88 = icmp eq i8 %3, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  store %struct.FT_GlyphRec_* null, %struct.FT_GlyphRec_** %0, align 8
  br label %90

90:                                               ; preds = %85, %89, %4, %7, %10, %86, %14
  %91 = phi i32 [ 6, %10 ], [ %16, %14 ], [ %87, %86 ], [ %87, %89 ], [ 0, %85 ], [ 6, %7 ], [ 6, %4 ]
  ret i32 %91
}

declare void @FT_Vector_Unit(%struct.FT_Vector_*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @ft_stroker_arcto(%struct.FT_StrokerRec_* nocapture, i32) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.FT_Vector_, align 8
  %5 = alloca %struct.FT_Vector_, align 8
  %6 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 14
  %7 = load i64, i64* %6, align 8
  %8 = sext i32 %1 to i64
  %9 = mul nsw i64 %8, -11796480
  %10 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = tail call i64 @FT_Angle_Diff(i64 %11, i64 %13) #4
  %15 = icmp eq i64 %14, 11796480
  %16 = mul nsw i64 %8, 23592960
  %17 = add nsw i64 %16, -11796480
  %18 = select i1 %15, i64 %17, i64 %14
  %19 = load i64, i64* %10, align 8
  %20 = bitcast %struct.FT_Vector_* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #4
  %21 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 0
  %22 = bitcast %struct.FT_Vector_* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #4
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #4
  %23 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 0
  %24 = sub nsw i64 0, %18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false) #4
  br label %25

25:                                               ; preds = %25, %2
  %26 = phi i64 [ %31, %25 ], [ 1, %2 ]
  %27 = mul nuw nsw i64 %26, 5898240
  %28 = icmp slt i64 %27, %18
  %29 = icmp slt i64 %27, %24
  %30 = or i1 %28, %29
  %31 = add i64 %26, 1
  br i1 %30, label %25, label %32

32:                                               ; preds = %25
  %33 = add nsw i64 %9, 5898240
  %34 = add nsw i64 %33, %19
  %35 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %4, i64 0, i32 1
  %36 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %5, i64 0, i32 1
  %37 = and i64 %26, 4294967295
  %38 = shl i64 %26, 2
  %39 = and i64 %38, 4294967292
  %40 = sdiv i64 %18, %39
  %41 = tail call i64 @FT_Tan(i64 %40) #4
  %42 = sdiv i64 %41, 3
  %43 = add nsw i64 %42, %41
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %4, i64 %7, i64 %34) #4
  %44 = load i64, i64* %35, align 8
  %45 = shl i64 %44, 32
  %46 = sub i64 0, %45
  %47 = ashr exact i64 %46, 32
  %48 = shl i64 %43, 32
  %49 = ashr exact i64 %48, 32
  %50 = mul nsw i64 %49, %47
  %51 = ashr i64 %50, 63
  %52 = add nsw i64 %50, 32768
  %53 = add nsw i64 %52, %51
  %54 = shl i64 %53, 16
  %55 = ashr i64 %54, 32
  %56 = load i64, i64* %21, align 8
  %57 = shl i64 %56, 32
  %58 = ashr exact i64 %57, 32
  %59 = mul nsw i64 %58, %49
  %60 = ashr i64 %59, 63
  %61 = add nsw i64 %59, 32768
  %62 = add nsw i64 %61, %60
  %63 = shl i64 %62, 16
  %64 = ashr i64 %63, 32
  %65 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add nsw i64 %66, %56
  store i64 %67, i64* %21, align 8
  %68 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 2, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = add nsw i64 %69, %44
  store i64 %70, i64* %35, align 8
  %71 = add nsw i64 %55, %67
  %72 = add nsw i64 %64, %70
  %73 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 1
  %74 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 0
  %75 = bitcast i32* %3 to i8*
  %76 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 6
  %77 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 2
  %78 = bitcast %struct.FT_Vector_** %77 to i8**
  %79 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 3
  %80 = getelementptr inbounds %struct.FT_StrokerRec_, %struct.FT_StrokerRec_* %0, i64 0, i32 15, i64 %8, i32 4
  %81 = and i64 %31, 4294967295
  br label %82

82:                                               ; preds = %144, %32
  %83 = phi i64 [ %167, %144 ], [ 1, %32 ]
  %84 = phi i64 [ %163, %144 ], [ %71, %32 ]
  %85 = phi i64 [ %166, %144 ], [ %72, %32 ]
  %86 = mul nsw i64 %83, %18
  %87 = sdiv i64 %86, %37
  %88 = add nsw i64 %87, %34
  call void @FT_Vector_From_Polar(%struct.FT_Vector_* nonnull %5, i64 %7, i64 %88) #4
  %89 = load i64, i64* %36, align 8
  %90 = shl i64 %89, 32
  %91 = ashr exact i64 %90, 32
  %92 = mul nsw i64 %91, %49
  %93 = ashr i64 %92, 63
  %94 = add nsw i64 %92, 32768
  %95 = add nsw i64 %94, %93
  %96 = shl i64 %95, 16
  %97 = ashr i64 %96, 32
  %98 = load i64, i64* %23, align 8
  %99 = shl i64 %98, 32
  %100 = sub i64 0, %99
  %101 = ashr exact i64 %100, 32
  %102 = mul nsw i64 %101, %49
  %103 = ashr i64 %102, 63
  %104 = add nsw i64 %102, 32768
  %105 = add nsw i64 %104, %103
  %106 = shl i64 %105, 16
  %107 = ashr i64 %106, 32
  %108 = load i64, i64* %65, align 8
  %109 = add nsw i64 %108, %98
  store i64 %109, i64* %23, align 8
  %110 = load i64, i64* %68, align 8
  %111 = add nsw i64 %110, %89
  store i64 %111, i64* %36, align 8
  %112 = add nsw i64 %97, %109
  %113 = add nsw i64 %107, %111
  %114 = load i32, i32* %73, align 4
  %115 = load i32, i32* %74, align 8
  %116 = add i32 %115, 3
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %75) #4
  store i32 0, i32* %3, align 4
  %117 = icmp ugt i32 %116, %114
  br i1 %117, label %120, label %118

118:                                              ; preds = %82
  %119 = load i8*, i8** %79, align 8
  br label %144

120:                                              ; preds = %82
  %121 = load %struct.FT_MemoryRec_*, %struct.FT_MemoryRec_** %76, align 8
  br label %122

122:                                              ; preds = %122, %120
  %123 = phi i32 [ %114, %120 ], [ %126, %122 ]
  %124 = lshr i32 %123, 1
  %125 = add i32 %123, 16
  %126 = add i32 %125, %124
  %127 = icmp ult i32 %126, %116
  br i1 %127, label %122, label %128

128:                                              ; preds = %122
  %129 = zext i32 %114 to i64
  %130 = zext i32 %126 to i64
  %131 = load i8*, i8** %78, align 8
  %132 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %121, i64 16, i64 %129, i64 %130, i8* %131, i32* nonnull %3) #4
  store i8* %132, i8** %78, align 8
  %133 = load i32, i32* %3, align 4
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %142

135:                                              ; preds = %128
  %136 = load i8*, i8** %79, align 8
  %137 = call i8* @ft_mem_realloc(%struct.FT_MemoryRec_* %121, i64 1, i64 %129, i64 %130, i8* %136, i32* nonnull %3) #4
  store i8* %137, i8** %79, align 8
  %138 = load i32, i32* %3, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %135
  store i32 %126, i32* %73, align 4
  %141 = load i32, i32* %74, align 8
  br label %144

142:                                              ; preds = %135, %128
  %143 = phi i32 [ %138, %135 ], [ %133, %128 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #4
  store i8 0, i8* %80, align 8
  br label %169

144:                                              ; preds = %140, %118
  %145 = phi i8* [ %119, %118 ], [ %137, %140 ]
  %146 = phi i32 [ %115, %118 ], [ %141, %140 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %75) #4
  %147 = load %struct.FT_Vector_*, %struct.FT_Vector_** %77, align 8
  %148 = zext i32 %146 to i64
  %149 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %147, i64 %148
  %150 = getelementptr inbounds i8, i8* %145, i64 %148
  %151 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %149, i64 0, i32 0
  store i64 %84, i64* %151, align 8
  %152 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %147, i64 %148, i32 1
  store i64 %85, i64* %152, align 8
  %153 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %149, i64 1, i32 0
  store i64 %112, i64* %153, align 8
  %154 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %149, i64 1, i32 1
  store i64 %113, i64* %154, align 8
  %155 = getelementptr inbounds %struct.FT_Vector_, %struct.FT_Vector_* %149, i64 2
  %156 = bitcast %struct.FT_Vector_* %155 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %22, i64 16, i1 false) #4
  store i8 2, i8* %150, align 1
  %157 = getelementptr inbounds i8, i8* %150, i64 1
  store i8 2, i8* %157, align 1
  %158 = getelementptr inbounds i8, i8* %150, i64 2
  store i8 1, i8* %158, align 1
  %159 = load i32, i32* %74, align 8
  %160 = add i32 %159, 3
  store i32 %160, i32* %74, align 8
  store i8 0, i8* %80, align 8
  %161 = load i64, i64* %23, align 8
  %162 = shl i64 %161, 1
  %163 = sub i64 %162, %112
  %164 = load i64, i64* %36, align 8
  %165 = shl i64 %164, 1
  %166 = sub i64 %165, %113
  %167 = add nuw nsw i64 %83, 1
  %168 = icmp eq i64 %167, %81
  br i1 %168, label %169, label %82

169:                                              ; preds = %144, %142
  %170 = phi i32 [ %143, %142 ], [ 0, %144 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #4
  store i8 0, i8* %80, align 8
  ret i32 %170
}

declare i64 @FT_Tan(i64) local_unnamed_addr #2

declare hidden i8* @ft_mem_realloc(%struct.FT_MemoryRec_*, i64, i64, i64, i8*, i32*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
