; ModuleID = '../../third_party/webrtc/modules/video_coding/rtt_filter.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/rtt_filter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VCMRttFilter" = type { i8, double, double, i64, i32, i32, double, double, i32, i32, i32, [5 x i64], [5 x i64] }

@_ZN6webrtc12VCMRttFilterC1Ev = hidden unnamed_addr alias void (%"class.webrtc::VCMRttFilter"*), void (%"class.webrtc::VCMRttFilter"*)* @_ZN6webrtc12VCMRttFilterC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VCMRttFilterC2Ev(%"class.webrtc::VCMRttFilter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 5
  store i32 35, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 6
  %4 = bitcast double* %3 to <2 x double>*
  store <2 x double> <double 2.500000e+00, double 3.500000e+00>, <2 x double>* %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 10
  store i32 5, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  %9 = bitcast double* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #7
  store i32 1, i32* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 8
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 9
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 0
  %13 = bitcast i64* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 80, i1 false) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc12VCMRttFilter5ResetEv(%"class.webrtc::VCMRttFilter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  %5 = bitcast double* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false)
  store i32 1, i32* %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 8
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 9
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 0
  %9 = bitcast i64* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(152) %"class.webrtc::VCMRttFilter"* @_ZN6webrtc12VCMRttFilteraSERKS0_(%"class.webrtc::VCMRttFilter"* returned, %"class.webrtc::VCMRttFilter"* readonly dereferenceable(152)) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.webrtc::VCMRttFilter"* %0, %1
  br i1 %3, label %38, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 0
  store i8 %6, i8* %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 1
  %9 = bitcast double* %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %12 = bitcast double* %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 2
  %14 = bitcast double* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 2
  %17 = bitcast double* %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 3
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 8
  %25 = load i32, i32* %24, align 8
  %26 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 8
  store i32 %25, i32* %26, align 8
  %27 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 9
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 9
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 0
  %31 = bitcast i64* %30 to i8*
  %32 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 11, i64 0
  %33 = bitcast i64* %32 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %33, i64 40, i1 false)
  %34 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 0
  %35 = bitcast i64* %34 to i8*
  %36 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %1, i64 0, i32 12, i64 0
  %37 = bitcast i64* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %37, i64 40, i1 false)
  br label %38

38:                                               ; preds = %2, %4
  ret %"class.webrtc::VCMRttFilter"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc12VCMRttFilter6UpdateEl(%"class.webrtc::VCMRttFilter"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = icmp eq i64 %1, 0
  br i1 %7, label %124, label %8

8:                                                ; preds = %6
  store i8 1, i8* %3, align 8
  br label %9

9:                                                ; preds = %2, %8
  %10 = icmp slt i64 %1, 3000
  %11 = select i1 %10, i64 %1, i64 3000
  %12 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %13, 1
  br i1 %14, label %15, label %20

15:                                               ; preds = %9
  %16 = add i32 %13, -1
  %17 = uitofp i32 %16 to double
  %18 = uitofp i32 %13 to double
  %19 = fdiv double %17, %18
  br label %20

20:                                               ; preds = %15, %9
  %21 = phi double [ %19, %15 ], [ 0.000000e+00, %9 ]
  %22 = add i32 %13, 1
  %23 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = icmp ugt i32 %22, %24
  %26 = select i1 %25, i32 %24, i32 %22
  store i32 %26, i32* %12, align 8
  %27 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %28 = load double, double* %27, align 8
  %29 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 2
  %30 = bitcast double* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = fmul double %21, %28
  %33 = fsub double 1.000000e+00, %21
  %34 = sitofp i64 %11 to double
  %35 = fmul double %33, %34
  %36 = fadd double %35, %32
  store double %36, double* %27, align 8
  %37 = bitcast i64 %31 to double
  %38 = fmul double %21, %37
  %39 = fsub double %34, %36
  %40 = fmul double %33, %39
  %41 = fmul double %39, %40
  %42 = fadd double %38, %41
  store double %42, double* %29, align 8
  %43 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = icmp sgt i64 %11, %44
  %46 = select i1 %45, i64 %11, i64 %44
  store i64 %46, i64* %43, align 8
  %47 = tail call zeroext i1 @_ZN6webrtc12VCMRttFilter13JumpDetectionEl(%"class.webrtc::VCMRttFilter"* %0, i64 %11)
  br i1 %47, label %48, label %123

48:                                               ; preds = %20
  %49 = load i64, i64* %43, align 8
  %50 = sitofp i64 %49 to double
  %51 = load double, double* %27, align 8
  %52 = fsub double %50, %51
  %53 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 7
  %54 = load double, double* %53, align 8
  %55 = load double, double* %29, align 8
  %56 = tail call double @sqrt(double %55) #7
  %57 = fmul double %54, %56
  %58 = fcmp ogt double %52, %57
  %59 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 9
  br i1 %58, label %60, label %122

60:                                               ; preds = %48
  %61 = load i32, i32* %59, align 4
  %62 = icmp slt i32 %61, 5
  br i1 %62, label %63, label %68

63:                                               ; preds = %60
  %64 = sext i32 %61 to i64
  %65 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %64
  store i64 %11, i64* %65, align 8
  %66 = load i32, i32* %59, align 4
  %67 = add nsw i32 %66, 1
  store i32 %67, i32* %59, align 4
  br label %68

68:                                               ; preds = %63, %60
  %69 = phi i32 [ %67, %63 ], [ %61, %60 ]
  %70 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 10
  %71 = load i32, i32* %70, align 8
  %72 = icmp slt i32 %69, %71
  br i1 %72, label %124, label %73

73:                                               ; preds = %68
  %74 = icmp eq i32 %69, 0
  br i1 %74, label %120, label %75

75:                                               ; preds = %73
  store i64 0, i64* %43, align 8
  store double 0.000000e+00, double* %27, align 8
  %76 = zext i32 %69 to i64
  %77 = and i64 %76, 1
  %78 = icmp eq i32 %69, 1
  br i1 %78, label %81, label %79

79:                                               ; preds = %75
  %80 = sub nsw i64 %76, %77
  br label %101

81:                                               ; preds = %127, %75
  %82 = phi double [ undef, %75 ], [ %131, %127 ]
  %83 = phi double [ 0.000000e+00, %75 ], [ %131, %127 ]
  %84 = phi i64 [ 0, %75 ], [ %129, %127 ]
  %85 = phi i64 [ 0, %75 ], [ %132, %127 ]
  %86 = icmp eq i64 %77, 0
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %85
  %89 = load i64, i64* %88, align 8
  %90 = icmp sgt i64 %89, %84
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  store i64 %89, i64* %43, align 8
  %92 = load i64, i64* %88, align 8
  br label %93

93:                                               ; preds = %87, %91
  %94 = phi i64 [ %92, %91 ], [ %89, %87 ]
  %95 = sitofp i64 %94 to double
  %96 = fadd double %83, %95
  br label %97

97:                                               ; preds = %81, %93
  %98 = phi double [ %82, %81 ], [ %96, %93 ]
  %99 = uitofp i32 %69 to double
  %100 = fdiv double %98, %99
  store double %100, double* %27, align 8
  br label %120

101:                                              ; preds = %127, %79
  %102 = phi double [ 0.000000e+00, %79 ], [ %131, %127 ]
  %103 = phi i64 [ 0, %79 ], [ %129, %127 ]
  %104 = phi i64 [ 0, %79 ], [ %132, %127 ]
  %105 = phi i64 [ %80, %79 ], [ %133, %127 ]
  %106 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %104
  %107 = load i64, i64* %106, align 8
  %108 = icmp sgt i64 %107, %103
  br i1 %108, label %109, label %111

109:                                              ; preds = %101
  store i64 %107, i64* %43, align 8
  %110 = load i64, i64* %106, align 8
  br label %111

111:                                              ; preds = %109, %101
  %112 = phi i64 [ %110, %109 ], [ %107, %101 ]
  %113 = phi i64 [ %107, %109 ], [ %103, %101 ]
  %114 = sitofp i64 %112 to double
  %115 = fadd double %102, %114
  %116 = or i64 %104, 1
  %117 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %116
  %118 = load i64, i64* %117, align 8
  %119 = icmp sgt i64 %118, %113
  br i1 %119, label %125, label %127

120:                                              ; preds = %97, %73
  %121 = add nsw i32 %71, 1
  store i32 %121, i32* %12, align 8
  store i32 0, i32* %59, align 4
  br label %124

122:                                              ; preds = %48
  store i32 0, i32* %59, align 4
  br label %124

123:                                              ; preds = %20
  store double %28, double* %27, align 8
  store i64 %31, i64* %30, align 8
  br label %124

124:                                              ; preds = %122, %120, %68, %123, %6
  ret void

125:                                              ; preds = %111
  store i64 %118, i64* %43, align 8
  %126 = load i64, i64* %117, align 8
  br label %127

127:                                              ; preds = %125, %111
  %128 = phi i64 [ %126, %125 ], [ %118, %111 ]
  %129 = phi i64 [ %118, %125 ], [ %113, %111 ]
  %130 = sitofp i64 %128 to double
  %131 = fadd double %115, %130
  %132 = add nuw nsw i64 %104, 2
  %133 = add i64 %105, -2
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %81, label %101
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc12VCMRttFilter13JumpDetectionEl(%"class.webrtc::VCMRttFilter"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %4 = load double, double* %3, align 8
  %5 = sitofp i64 %1 to double
  %6 = fsub double %4, %5
  %7 = tail call double @llvm.fabs.f64(double %6)
  %8 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 6
  %9 = load double, double* %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 2
  %11 = load double, double* %10, align 8
  %12 = tail call double @sqrt(double %11) #7
  %13 = fmul double %9, %12
  %14 = fcmp ogt double %7, %13
  br i1 %14, label %15, label %95

15:                                               ; preds = %2
  %16 = fcmp oge double %6, 0.000000e+00
  %17 = select i1 %16, i32 1, i32 -1
  %18 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %19, -1
  %21 = select i1 %20, i32 1, i32 -1
  %22 = icmp eq i32 %17, %21
  br i1 %22, label %24, label %23

23:                                               ; preds = %15
  store i32 0, i32* %18, align 8
  br label %29

24:                                               ; preds = %15
  %25 = icmp slt i32 %19, 0
  %26 = sub nsw i32 0, %19
  %27 = select i1 %25, i32 %26, i32 %19
  %28 = icmp slt i32 %27, 5
  br i1 %28, label %29, label %36

29:                                               ; preds = %23, %24
  %30 = phi i32 [ 0, %23 ], [ %27, %24 ]
  %31 = phi i32 [ 0, %23 ], [ %19, %24 ]
  %32 = zext i32 %30 to i64
  %33 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 %32
  store i64 %1, i64* %33, align 8
  %34 = add nsw i32 %31, %17
  store i32 %34, i32* %18, align 8
  %35 = sub nsw i32 0, %34
  br label %36

36:                                               ; preds = %29, %24
  %37 = phi i32 [ %35, %29 ], [ %26, %24 ]
  %38 = phi i32 [ %34, %29 ], [ %19, %24 ]
  %39 = icmp slt i32 %38, 0
  %40 = select i1 %39, i32 %37, i32 %38
  %41 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 10
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %99, label %44

44:                                               ; preds = %36
  %45 = icmp eq i32 %40, 0
  br i1 %45, label %92, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  store i64 0, i64* %47, align 8
  store double 0.000000e+00, double* %3, align 8
  %48 = zext i32 %40 to i64
  %49 = and i64 %48, 1
  %50 = icmp eq i32 %40, 1
  br i1 %50, label %53, label %51

51:                                               ; preds = %46
  %52 = sub nsw i64 %48, %49
  br label %73

53:                                               ; preds = %103, %46
  %54 = phi double [ undef, %46 ], [ %107, %103 ]
  %55 = phi double [ 0.000000e+00, %46 ], [ %107, %103 ]
  %56 = phi i64 [ 0, %46 ], [ %105, %103 ]
  %57 = phi i64 [ 0, %46 ], [ %108, %103 ]
  %58 = icmp eq i64 %49, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 %57
  %61 = load i64, i64* %60, align 8
  %62 = icmp sgt i64 %61, %56
  br i1 %62, label %63, label %65

63:                                               ; preds = %59
  store i64 %61, i64* %47, align 8
  %64 = load i64, i64* %60, align 8
  br label %65

65:                                               ; preds = %59, %63
  %66 = phi i64 [ %64, %63 ], [ %61, %59 ]
  %67 = sitofp i64 %66 to double
  %68 = fadd double %55, %67
  br label %69

69:                                               ; preds = %53, %65
  %70 = phi double [ %54, %53 ], [ %68, %65 ]
  %71 = uitofp i32 %40 to double
  %72 = fdiv double %70, %71
  store double %72, double* %3, align 8
  br label %92

73:                                               ; preds = %103, %51
  %74 = phi double [ 0.000000e+00, %51 ], [ %107, %103 ]
  %75 = phi i64 [ 0, %51 ], [ %105, %103 ]
  %76 = phi i64 [ 0, %51 ], [ %108, %103 ]
  %77 = phi i64 [ %52, %51 ], [ %109, %103 ]
  %78 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 %76
  %79 = load i64, i64* %78, align 8
  %80 = icmp sgt i64 %79, %75
  br i1 %80, label %81, label %83

81:                                               ; preds = %73
  store i64 %79, i64* %47, align 8
  %82 = load i64, i64* %78, align 8
  br label %83

83:                                               ; preds = %81, %73
  %84 = phi i64 [ %82, %81 ], [ %79, %73 ]
  %85 = phi i64 [ %79, %81 ], [ %75, %73 ]
  %86 = sitofp i64 %84 to double
  %87 = fadd double %74, %86
  %88 = or i64 %76, 1
  %89 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 11, i64 %88
  %90 = load i64, i64* %89, align 8
  %91 = icmp sgt i64 %90, %85
  br i1 %91, label %101, label %103

92:                                               ; preds = %44, %69
  %93 = add nsw i32 %42, 1
  %94 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  store i32 %93, i32* %94, align 8
  br label %97

95:                                               ; preds = %2
  %96 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 8
  br label %97

97:                                               ; preds = %92, %95
  %98 = phi i32* [ %96, %95 ], [ %18, %92 ]
  store i32 0, i32* %98, align 8
  br label %99

99:                                               ; preds = %97, %36
  %100 = phi i1 [ false, %36 ], [ true, %97 ]
  ret i1 %100

101:                                              ; preds = %83
  store i64 %90, i64* %47, align 8
  %102 = load i64, i64* %89, align 8
  br label %103

103:                                              ; preds = %101, %83
  %104 = phi i64 [ %102, %101 ], [ %90, %83 ]
  %105 = phi i64 [ %90, %101 ], [ %85, %83 ]
  %106 = sitofp i64 %104 to double
  %107 = fadd double %87, %106
  %108 = add nuw nsw i64 %76, 2
  %109 = add i64 %77, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %53, label %73
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i1 @_ZN6webrtc12VCMRttFilter14DriftDetectionEl(%"class.webrtc::VCMRttFilter"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = sitofp i64 %4 to double
  %6 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  %7 = load double, double* %6, align 8
  %8 = fsub double %5, %7
  %9 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 7
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 2
  %12 = load double, double* %11, align 8
  %13 = tail call double @sqrt(double %12) #7
  %14 = fmul double %10, %13
  %15 = fcmp ogt double %8, %14
  %16 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 9
  br i1 %15, label %17, label %80

17:                                               ; preds = %2
  %18 = load i32, i32* %16, align 4
  %19 = icmp slt i32 %18, 5
  br i1 %19, label %20, label %25

20:                                               ; preds = %17
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %21
  store i64 %1, i64* %22, align 8
  %23 = load i32, i32* %16, align 4
  %24 = add nsw i32 %23, 1
  store i32 %24, i32* %16, align 4
  br label %25

25:                                               ; preds = %20, %17
  %26 = phi i32 [ %24, %20 ], [ %18, %17 ]
  %27 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 10
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %26, %28
  br i1 %29, label %81, label %30

30:                                               ; preds = %25
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %30
  store i64 0, i64* %3, align 8
  store double 0.000000e+00, double* %6, align 8
  %33 = zext i32 %26 to i64
  %34 = and i64 %33, 1
  %35 = icmp eq i32 %26, 1
  br i1 %35, label %38, label %36

36:                                               ; preds = %32
  %37 = sub nsw i64 %33, %34
  br label %58

38:                                               ; preds = %84, %32
  %39 = phi double [ undef, %32 ], [ %88, %84 ]
  %40 = phi double [ 0.000000e+00, %32 ], [ %88, %84 ]
  %41 = phi i64 [ 0, %32 ], [ %86, %84 ]
  %42 = phi i64 [ 0, %32 ], [ %89, %84 ]
  %43 = icmp eq i64 %34, 0
  br i1 %43, label %54, label %44

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %42
  %46 = load i64, i64* %45, align 8
  %47 = icmp sgt i64 %46, %41
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  store i64 %46, i64* %3, align 8
  %49 = load i64, i64* %45, align 8
  br label %50

50:                                               ; preds = %44, %48
  %51 = phi i64 [ %49, %48 ], [ %46, %44 ]
  %52 = sitofp i64 %51 to double
  %53 = fadd double %40, %52
  br label %54

54:                                               ; preds = %38, %50
  %55 = phi double [ %39, %38 ], [ %53, %50 ]
  %56 = uitofp i32 %26 to double
  %57 = fdiv double %55, %56
  store double %57, double* %6, align 8
  br label %77

58:                                               ; preds = %84, %36
  %59 = phi double [ 0.000000e+00, %36 ], [ %88, %84 ]
  %60 = phi i64 [ 0, %36 ], [ %86, %84 ]
  %61 = phi i64 [ 0, %36 ], [ %89, %84 ]
  %62 = phi i64 [ %37, %36 ], [ %90, %84 ]
  %63 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %61
  %64 = load i64, i64* %63, align 8
  %65 = icmp sgt i64 %64, %60
  br i1 %65, label %66, label %68

66:                                               ; preds = %58
  store i64 %64, i64* %3, align 8
  %67 = load i64, i64* %63, align 8
  br label %68

68:                                               ; preds = %66, %58
  %69 = phi i64 [ %67, %66 ], [ %64, %58 ]
  %70 = phi i64 [ %64, %66 ], [ %60, %58 ]
  %71 = sitofp i64 %69 to double
  %72 = fadd double %59, %71
  %73 = or i64 %61, 1
  %74 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 12, i64 %73
  %75 = load i64, i64* %74, align 8
  %76 = icmp sgt i64 %75, %70
  br i1 %76, label %82, label %84

77:                                               ; preds = %30, %54
  %78 = add nsw i32 %28, 1
  %79 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 4
  store i32 %78, i32* %79, align 8
  br label %80

80:                                               ; preds = %2, %77
  store i32 0, i32* %16, align 4
  br label %81

81:                                               ; preds = %80, %25
  ret i1 true

82:                                               ; preds = %68
  store i64 %75, i64* %3, align 8
  %83 = load i64, i64* %74, align 8
  br label %84

84:                                               ; preds = %82, %68
  %85 = phi i64 [ %83, %82 ], [ %75, %68 ]
  %86 = phi i64 [ %75, %82 ], [ %70, %68 ]
  %87 = sitofp i64 %85 to double
  %88 = fadd double %72, %87
  %89 = add nuw nsw i64 %61, 2
  %90 = add i64 %62, -2
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %38, label %58
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #3

; Function Attrs: nofree nounwind
declare double @sqrt(double) local_unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc12VCMRttFilter14ShortRttFilterEPlj(%"class.webrtc::VCMRttFilter"* nocapture, i64* nocapture readonly, i32) local_unnamed_addr #5 align 2 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %52, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 1
  store double 0.000000e+00, double* %7, align 8
  %8 = zext i32 %2 to i64
  %9 = and i64 %8, 1
  %10 = icmp eq i32 %2, 1
  br i1 %10, label %13, label %11

11:                                               ; preds = %5
  %12 = sub nsw i64 %8, %9
  br label %33

13:                                               ; preds = %55, %5
  %14 = phi double [ undef, %5 ], [ %59, %55 ]
  %15 = phi double [ 0.000000e+00, %5 ], [ %59, %55 ]
  %16 = phi i64 [ 0, %5 ], [ %57, %55 ]
  %17 = phi i64 [ 0, %5 ], [ %60, %55 ]
  %18 = icmp eq i64 %9, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds i64, i64* %1, i64 %17
  %21 = load i64, i64* %20, align 8
  %22 = icmp sgt i64 %21, %16
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  store i64 %21, i64* %6, align 8
  %24 = load i64, i64* %20, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = phi i64 [ %24, %23 ], [ %21, %19 ]
  %27 = sitofp i64 %26 to double
  %28 = fadd double %15, %27
  store double %28, double* %7, align 8
  br label %29

29:                                               ; preds = %13, %25
  %30 = phi double [ %14, %13 ], [ %28, %25 ]
  %31 = uitofp i32 %2 to double
  %32 = fdiv double %30, %31
  store double %32, double* %7, align 8
  br label %52

33:                                               ; preds = %55, %11
  %34 = phi double [ 0.000000e+00, %11 ], [ %59, %55 ]
  %35 = phi i64 [ 0, %11 ], [ %57, %55 ]
  %36 = phi i64 [ 0, %11 ], [ %60, %55 ]
  %37 = phi i64 [ %12, %11 ], [ %61, %55 ]
  %38 = getelementptr inbounds i64, i64* %1, i64 %36
  %39 = load i64, i64* %38, align 8
  %40 = icmp sgt i64 %39, %35
  br i1 %40, label %41, label %43

41:                                               ; preds = %33
  store i64 %39, i64* %6, align 8
  %42 = load i64, i64* %38, align 8
  br label %43

43:                                               ; preds = %41, %33
  %44 = phi i64 [ %42, %41 ], [ %39, %33 ]
  %45 = phi i64 [ %39, %41 ], [ %35, %33 ]
  %46 = sitofp i64 %44 to double
  %47 = fadd double %34, %46
  store double %47, double* %7, align 8
  %48 = or i64 %36, 1
  %49 = getelementptr inbounds i64, i64* %1, i64 %48
  %50 = load i64, i64* %49, align 8
  %51 = icmp sgt i64 %50, %45
  br i1 %51, label %53, label %55

52:                                               ; preds = %3, %29
  ret void

53:                                               ; preds = %43
  store i64 %50, i64* %6, align 8
  %54 = load i64, i64* %49, align 8
  br label %55

55:                                               ; preds = %53, %43
  %56 = phi i64 [ %54, %53 ], [ %50, %43 ]
  %57 = phi i64 [ %50, %53 ], [ %45, %43 ]
  %58 = sitofp i64 %56 to double
  %59 = fadd double %47, %58
  store double %59, double* %7, align 8
  %60 = add nuw nsw i64 %36, 2
  %61 = add i64 %37, -2
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %13, label %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK6webrtc12VCMRttFilter5RttMsEv(%"class.webrtc::VCMRttFilter"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VCMRttFilter", %"class.webrtc::VCMRttFilter"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = sitofp i64 %3 to double
  %5 = fadd double %4, 5.000000e-01
  %6 = fptosi double %5 to i64
  ret i64 %6
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
