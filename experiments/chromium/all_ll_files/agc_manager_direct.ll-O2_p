; ModuleID = '../../third_party/webrtc/modules/audio_processing/agc/agc_manager_direct.cc'
source_filename = "../../third_party/webrtc/modules/audio_processing/agc/agc_manager_direct.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::metrics::Histogram" = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.webrtc::MonoAgc" = type { i32, i8, %"class.std::__1::unique_ptr", i32, i32, i32, i32, i32, float, i8, i8, i8, i32, i32, i32, %"class.absl::optional", i8, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.webrtc::Agc"* }
%"class.webrtc::Agc" = type { i32 (...)**, double, i32, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.webrtc::VoiceActivityDetector" }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.webrtc::LoudnessHistogram"* }
%"class.webrtc::LoudnessHistogram" = type opaque
%"class.webrtc::VoiceActivityDetector" = type { %"class.std::__1::vector", %"class.std::__1::vector", float, %"class.webrtc::Resampler", %"class.webrtc::VadAudioProc", %"class.std::__1::unique_ptr.25", %"class.webrtc::PitchBasedVad", [160 x i16], %struct.AudioFeatures }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { double*, double*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { double* }
%"class.webrtc::Resampler" = type { i8*, i8*, i8*, i16*, i16*, i64, i64, i64, i64, i32, i32, i32, i64, %"class.webrtc::Resampler"*, %"class.webrtc::Resampler"* }
%"class.webrtc::VadAudioProc" = type { [256 x i64], [256 x float], [560 x float], i64, double, double, %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.webrtc::VadAudioProc::PitchAnalysisStruct"* }
%"struct.webrtc::VadAudioProc::PitchAnalysisStruct" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"struct.webrtc::VadAudioProc::PreFiltBankstr"* }
%"struct.webrtc::VadAudioProc::PreFiltBankstr" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.webrtc::PoleZeroFilter"* }
%"class.webrtc::PoleZeroFilter" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.webrtc::StandaloneVad"* }
%"class.webrtc::StandaloneVad" = type <{ %struct.WebRtcVadInst*, [480 x i16], i64, i32, [4 x i8] }>
%struct.WebRtcVadInst = type opaque
%"class.webrtc::PitchBasedVad" = type { %"struct.webrtc::GmmParameters", %"struct.webrtc::GmmParameters", double, %"class.std::__1::unique_ptr.31" }
%"struct.webrtc::GmmParameters" = type { double*, double*, double*, i32, i32 }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.webrtc::VadCircularBuffer"* }
%"class.webrtc::VadCircularBuffer" = type opaque
%struct.AudioFeatures = type { [4 x double], [4 x double], [4 x double], [4 x double], i64, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.webrtc::ApmDataDumper" = type { i8 }
%"class.webrtc::AgcManagerDirect" = type { %"class.std::__1::unique_ptr.46", i8, i32, i32, i8, i32, i32, i8, i32, i32, float, i32, %"class.std::__1::vector.52", %"class.std::__1::vector.65" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.webrtc::ApmDataDumper"* }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"*, %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.webrtc::MonoAgc"* }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.std::__1::unique_ptr.54"* }
%"class.std::__1::vector.65" = type { %"class.std::__1::__vector_base.66" }
%"class.std::__1::__vector_base.66" = type { %"class.absl::optional"*, %"class.absl::optional"*, %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.absl::optional"* }
%"class.rtc::DiagnosticLogMessage" = type { i8*, i32, i32, i32, i32, i8*, i8, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.42 }
%union.anon.42 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.webrtc::GainControl" = type { i32 (...)** }
%"class.webrtc::AudioBuffer" = type { i32 (...)**, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.98", %"class.std::__1::vector.104", %"class.std::__1::vector.104", i8, i64 }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.webrtc::ChannelBuffer"* }
%"class.webrtc::ChannelBuffer" = type { %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.81", %"class.std::__1::unique_ptr.81", i64, i64, i64, i64, i64, %"class.std::__1::vector.87", %"class.std::__1::vector.87" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { float* }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { float** }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.std::__1::vector.89"*, %"class.std::__1::vector.89"*, %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::vector.89" = type opaque
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.std::__1::vector.89"* }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.webrtc::SplittingFilter"* }
%"class.webrtc::SplittingFilter" = type opaque
%"class.std::__1::vector.104" = type { %"class.std::__1::__vector_base.105" }
%"class.std::__1::__vector_base.105" = type { %"class.std::__1::unique_ptr.106"*, %"class.std::__1::unique_ptr.106"*, %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::unique_ptr.106" = type opaque
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { %"class.std::__1::unique_ptr.106"* }
%"struct.std::__1::array" = type { [3840 x i16] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN6webrtc11field_trial9IsEnabledEPKc = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [42 x i8] c"WebRTC.Audio.AgcClippingAdjustmentAllowed\00", align 1
@.str.1 = private unnamed_addr constant [76 x i8] c"../../third_party/webrtc/modules/audio_processing/agc/agc_manager_direct.cc\00", align 1
@.str.2 = private unnamed_addr constant [43 x i8] c"VolumeCallbacks returned an invalid level=\00", align 1
@.str.3 = private unnamed_addr constant [49 x i8] c"[agc] VolumeCallbacks returned an invalid level=\00", align 1
@_ZZN6webrtc7MonoAgc10UpdateGainEvE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.4 = private unnamed_addr constant [25 x i8] c"WebRTC.Audio.AgcSetLevel\00", align 1
@_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.5 = private unnamed_addr constant [36 x i8] c"WebRTC.Audio.Agc.DigitalGainApplied\00", align 1
@_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer_0 = internal global %"class.webrtc::metrics::Histogram"* null, align 8
@.str.6 = private unnamed_addr constant [36 x i8] c"WebRTC.Audio.Agc.DigitalGainUpdated\00", align 1
@_ZN6webrtc16AgcManagerDirect17instance_counter_E = hidden global i32 0, align 4
@.str.7 = private unnamed_addr constant [45 x i8] c"set_mode(GainControl::kFixedDigital) failed.\00", align 1
@.str.8 = private unnamed_addr constant [32 x i8] c"set_target_level_dbfs() failed.\00", align 1
@.str.9 = private unnamed_addr constant [34 x i8] c"set_compression_gain_db() failed.\00", align 1
@.str.10 = private unnamed_addr constant [25 x i8] c"enable_limiter() failed.\00", align 1
@_ZN6webrtcL8kGainMapE = internal unnamed_addr constant [256 x i32] [i32 -56, i32 -54, i32 -52, i32 -50, i32 -48, i32 -47, i32 -45, i32 -43, i32 -42, i32 -40, i32 -38, i32 -37, i32 -35, i32 -34, i32 -33, i32 -31, i32 -30, i32 -29, i32 -27, i32 -26, i32 -25, i32 -24, i32 -23, i32 -22, i32 -20, i32 -19, i32 -18, i32 -17, i32 -16, i32 -15, i32 -14, i32 -14, i32 -13, i32 -12, i32 -11, i32 -10, i32 -9, i32 -8, i32 -8, i32 -7, i32 -6, i32 -5, i32 -5, i32 -4, i32 -3, i32 -2, i32 -2, i32 -1, i32 0, i32 0, i32 1, i32 1, i32 2, i32 3, i32 3, i32 4, i32 4, i32 5, i32 5, i32 6, i32 6, i32 7, i32 7, i32 8, i32 8, i32 9, i32 9, i32 10, i32 10, i32 11, i32 11, i32 12, i32 12, i32 13, i32 13, i32 13, i32 14, i32 14, i32 15, i32 15, i32 15, i32 16, i32 16, i32 17, i32 17, i32 17, i32 18, i32 18, i32 18, i32 19, i32 19, i32 19, i32 20, i32 20, i32 21, i32 21, i32 21, i32 22, i32 22, i32 22, i32 23, i32 23, i32 23, i32 24, i32 24, i32 24, i32 24, i32 25, i32 25, i32 25, i32 26, i32 26, i32 26, i32 27, i32 27, i32 27, i32 28, i32 28, i32 28, i32 28, i32 29, i32 29, i32 29, i32 30, i32 30, i32 30, i32 30, i32 31, i32 31, i32 31, i32 32, i32 32, i32 32, i32 32, i32 33, i32 33, i32 33, i32 33, i32 34, i32 34, i32 34, i32 35, i32 35, i32 35, i32 35, i32 36, i32 36, i32 36, i32 36, i32 37, i32 37, i32 37, i32 38, i32 38, i32 38, i32 38, i32 39, i32 39, i32 39, i32 39, i32 40, i32 40, i32 40, i32 40, i32 41, i32 41, i32 41, i32 41, i32 42, i32 42, i32 42, i32 42, i32 43, i32 43, i32 43, i32 44, i32 44, i32 44, i32 44, i32 45, i32 45, i32 45, i32 45, i32 46, i32 46, i32 46, i32 46, i32 47, i32 47, i32 47, i32 47, i32 48, i32 48, i32 48, i32 48, i32 49, i32 49, i32 49, i32 49, i32 50, i32 50, i32 50, i32 50, i32 51, i32 51, i32 51, i32 51, i32 52, i32 52, i32 52, i32 52, i32 53, i32 53, i32 53, i32 53, i32 54, i32 54, i32 54, i32 54, i32 55, i32 55, i32 55, i32 55, i32 56, i32 56, i32 56, i32 56, i32 57, i32 57, i32 57, i32 57, i32 58, i32 58, i32 58, i32 58, i32 59, i32 59, i32 59, i32 59, i32 60, i32 60, i32 60, i32 60, i32 61, i32 61, i32 61, i32 61, i32 62, i32 62, i32 62, i32 62, i32 63, i32 63, i32 63, i32 63, i32 64], align 16
@.str.11 = private unnamed_addr constant [35 x i8] c"WebRTC-UseMaxAnalogAgcChannelLevel\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"Enabled\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"[agc] GetMinMicLevel\00", align 1
@_ZZN6webrtc12_GLOBAL__N_114GetMinMicLevelEvE22kMinMicLevelFieldTrial = internal constant [38 x i8] c"WebRTC-Audio-AgcMinMicLevelExperiment\00", align 16
@.str.14 = private unnamed_addr constant [36 x i8] c"[agc] Using default min mic level: \00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"Enabled-%d\00", align 1
@.str.16 = private unnamed_addr constant [35 x i8] c"[agc] Experimental min mic level: \00", align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"[agc] Invalid parameter for \00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c", ignored.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN6webrtc7MonoAgcC1EPNS_13ApmDataDumperEiibi = hidden unnamed_addr alias void (%"class.webrtc::MonoAgc"*, %"class.webrtc::ApmDataDumper"*, i32, i32, i1, i32), void (%"class.webrtc::MonoAgc"*, %"class.webrtc::ApmDataDumper"*, i32, i32, i1, i32)* @_ZN6webrtc7MonoAgcC2EPNS_13ApmDataDumperEiibi
@_ZN6webrtc7MonoAgcD1Ev = hidden unnamed_addr alias void (%"class.webrtc::MonoAgc"*), void (%"class.webrtc::MonoAgc"*)* @_ZN6webrtc7MonoAgcD2Ev
@_ZN6webrtc16AgcManagerDirectC1EPNS_3AgcEiiiifi = hidden unnamed_addr alias void (%"class.webrtc::AgcManagerDirect"*, %"class.webrtc::Agc"*, i32, i32, i32, i32, float, i32), void (%"class.webrtc::AgcManagerDirect"*, %"class.webrtc::Agc"*, i32, i32, i32, i32, float, i32)* @_ZN6webrtc16AgcManagerDirectC2EPNS_3AgcEiiiifi
@_ZN6webrtc16AgcManagerDirectC1Eiiibiifi = hidden unnamed_addr alias void (%"class.webrtc::AgcManagerDirect"*, i32, i32, i32, i1, i32, i32, float, i32), void (%"class.webrtc::AgcManagerDirect"*, i32, i32, i32, i1, i32, i32, float, i32)* @_ZN6webrtc16AgcManagerDirectC2Eiiibiifi
@_ZN6webrtc16AgcManagerDirectD1Ev = hidden unnamed_addr alias void (%"class.webrtc::AgcManagerDirect"*), void (%"class.webrtc::AgcManagerDirect"*)* @_ZN6webrtc16AgcManagerDirectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgcC2EPNS_13ApmDataDumperEiibi(%"class.webrtc::MonoAgc"* nocapture, %"class.webrtc::ApmDataDumper"* nocapture readnone, i32, i32, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %7 = zext i1 %4 to i8
  %8 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 0
  store i32 %5, i32* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 1
  store i8 %7, i8* %9, align 4
  %10 = tail call i8* @_Znwm(i64 6120) #16
  %11 = bitcast i8* %10 to %"class.webrtc::Agc"*
  tail call void @_ZN6webrtc3AgcC1Ev(%"class.webrtc::Agc"* nonnull %11) #17
  %12 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = bitcast %"class.webrtc::Agc"** %12 to i8**
  store i8* %10, i8** %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  %15 = bitcast i32* %14 to <4 x i32>*
  store <4 x i32> <i32 0, i32 255, i32 12, i32 7>, <4 x i32>* %15, align 8
  %16 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 7
  store i32 7, i32* %16, align 8
  %17 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 8
  store float 7.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 9
  store i8 1, i8* %18, align 8
  %19 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 10
  store i8 1, i8* %19, align 1
  %20 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 11
  store i8 1, i8* %20, align 2
  %21 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 12
  %22 = load i32, i32* %8, align 8
  %23 = icmp slt i32 %22, %2
  %24 = icmp slt i32 %2, 255
  %25 = select i1 %24, i32 %2, i32 255
  %26 = select i1 %23, i32 %25, i32 %22
  store i32 %26, i32* %21, align 4
  %27 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 13
  %28 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 16
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 17
  %30 = bitcast i32* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 9, i1 false)
  store i32 %3, i32* %29, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgcD2Ev(%"class.webrtc::MonoAgc"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %2, align 8
  store %"class.webrtc::Agc"* null, %"class.webrtc::Agc"** %2, align 8
  %4 = icmp eq %"class.webrtc::Agc"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::Agc"* %3 to void (%"class.webrtc::Agc"*)***
  %7 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %7, i64 1
  %9 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %8, align 8
  tail call void %9(%"class.webrtc::Agc"* nonnull %3) #17
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc10InitializeEv(%"class.webrtc::MonoAgc"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 4
  store i32 255, i32* %2, align 4
  %3 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 5
  store i32 12, i32* %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  %7 = select i1 %6, i32 7, i32 0
  %8 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 7
  store i32 %7, i32* %9, align 8
  %10 = sitofp i32 %7 to float
  %11 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 8
  store float %10, float* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 9
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 10
  store i8 1, i8* %13, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc7ProcessEPKsmi(%"class.webrtc::MonoAgc"* nocapture, i16*, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 10
  %7 = load i8, i8* %6, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %11, label %9

9:                                                ; preds = %4
  store i8 0, i8* %6, align 1
  %10 = tail call i32 @_ZN6webrtc7MonoAgc19CheckVolumeAndResetEv(%"class.webrtc::MonoAgc"* %0)
  br label %11

11:                                               ; preds = %4, %9
  %12 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %12, align 8
  %14 = bitcast %"class.webrtc::Agc"* %13 to void (%"class.webrtc::Agc"*, i16*, i64, i32)***
  %15 = load void (%"class.webrtc::Agc"*, i16*, i64, i32)**, void (%"class.webrtc::Agc"*, i16*, i64, i32)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.webrtc::Agc"*, i16*, i64, i32)*, void (%"class.webrtc::Agc"*, i16*, i64, i32)** %15, i64 2
  %17 = load void (%"class.webrtc::Agc"*, i16*, i64, i32)*, void (%"class.webrtc::Agc"*, i16*, i64, i32)** %16, align 8
  tail call void %17(%"class.webrtc::Agc"* %13, i16* %1, i64 %2, i32 %3) #17
  tail call void @_ZN6webrtc7MonoAgc10UpdateGainEv(%"class.webrtc::MonoAgc"* %0)
  %18 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 1
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %11
  tail call void @_ZN6webrtc7MonoAgc16UpdateCompressorEv(%"class.webrtc::MonoAgc"* %0)
  br label %22

22:                                               ; preds = %11, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc7MonoAgc19CheckVolumeAndResetEv(%"class.webrtc::MonoAgc"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %3 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 14
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 11
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %40, label %22

10:                                               ; preds = %1
  %11 = icmp ugt i32 %4, 255
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 11
  %14 = load i8, i8* %13, align 2, !range !2
  %15 = icmp eq i8 %14, 0
  br label %22

16:                                               ; preds = %10
  %17 = bitcast %"class.rtc::DiagnosticLogMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %17) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %2, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 276, i32 1, i32 0, i32 0) #17
  %18 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %2, i64 0, i32 7
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.3, i64 0, i64 0), i64 48) #17
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %20, i32 %4) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %2) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %17) #17
  br label %40

22:                                               ; preds = %12, %6
  %23 = phi i1 [ %15, %12 ], [ false, %6 ]
  %24 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 11
  %25 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 12
  %26 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 0
  %27 = select i1 %23, i32* %26, i32* %25
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %4, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %22
  store i32 %28, i32* %3, align 4
  br label %31

31:                                               ; preds = %30, %22
  %32 = phi i32 [ %28, %30 ], [ %4, %22 ]
  %33 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %34 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %33, align 8
  %35 = bitcast %"class.webrtc::Agc"* %34 to void (%"class.webrtc::Agc"*)***
  %36 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %36, i64 4
  %38 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %37, align 8
  tail call void %38(%"class.webrtc::Agc"* %34) #17
  %39 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  store i32 %32, i32* %39, align 8
  store i8 0, i8* %24, align 2
  br label %40

40:                                               ; preds = %6, %31, %16
  %41 = phi i32 [ -1, %16 ], [ 0, %31 ], [ 0, %6 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc10UpdateGainEv(%"class.webrtc::MonoAgc"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #17
  store i32 0, i32* %2, align 4
  %5 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %5, align 8
  %7 = bitcast %"class.webrtc::Agc"* %6 to i1 (%"class.webrtc::Agc"*, i32*)***
  %8 = load i1 (%"class.webrtc::Agc"*, i32*)**, i1 (%"class.webrtc::Agc"*, i32*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.webrtc::Agc"*, i32*)*, i1 (%"class.webrtc::Agc"*, i32*)** %8, i64 3
  %10 = load i1 (%"class.webrtc::Agc"*, i32*)*, i1 (%"class.webrtc::Agc"*, i32*)** %9, align 8
  %11 = call zeroext i1 %10(%"class.webrtc::Agc"* %6, i32* nonnull %2) #17
  br i1 %11, label %12, label %115

12:                                               ; preds = %1
  %13 = load i32, i32* %2, align 4
  %14 = add nsw i32 %13, 2
  store i32 %14, i32* %2, align 4
  %15 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 5
  %16 = load i32, i32* %15, align 8
  %17 = icmp sgt i32 %13, 0
  %18 = icmp slt i32 %14, %16
  %19 = select i1 %18, i32 %14, i32 %16
  %20 = select i1 %17, i32 %19, i32 2
  %21 = icmp eq i32 %20, %16
  br i1 %21, label %22, label %27

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  %24 = load i32, i32* %23, align 4
  %25 = add nsw i32 %16, -1
  %26 = icmp eq i32 %24, %25
  br i1 %26, label %33, label %27

27:                                               ; preds = %22, %12
  %28 = icmp eq i32 %20, 2
  %29 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 3
  %32 = and i1 %28, %31
  br i1 %32, label %33, label %35

33:                                               ; preds = %27, %22
  %34 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  store i32 %20, i32* %34, align 4
  br label %40

35:                                               ; preds = %27
  %36 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  %37 = sub nsw i32 %20, %30
  %38 = sdiv i32 %37, 2
  %39 = add nsw i32 %38, %30
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %35, %33
  %41 = sub nsw i32 %14, %20
  %42 = icmp slt i32 %41, 15
  %43 = select i1 %42, i32 %41, i32 15
  %44 = icmp sgt i32 %43, -15
  %45 = select i1 %44, i32 %43, i32 -15
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %115, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 8
  %50 = icmp sgt i32 %45, 0
  %51 = sext i32 %49 to i64
  %52 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6webrtcL8kGainMapE, i64 0, i64 %51
  %53 = load i32, i32* %52, align 4
  br i1 %50, label %54, label %56

54:                                               ; preds = %47
  %55 = icmp slt i32 %49, 255
  br i1 %55, label %61, label %79

56:                                               ; preds = %47
  %57 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 0
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  %60 = icmp sgt i32 %49, %58
  br i1 %60, label %70, label %79

61:                                               ; preds = %54, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %54 ]
  %63 = add nsw i64 %62, 1
  %64 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6webrtcL8kGainMapE, i64 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = sub nsw i32 %65, %53
  %67 = icmp slt i32 %66, %45
  %68 = icmp slt i64 %63, 255
  %69 = and i1 %68, %67
  br i1 %69, label %61, label %79

70:                                               ; preds = %56, %70
  %71 = phi i64 [ %72, %70 ], [ %51, %56 ]
  %72 = add nsw i64 %71, -1
  %73 = getelementptr inbounds [256 x i32], [256 x i32]* @_ZN6webrtcL8kGainMapE, i64 0, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = sub nsw i32 %74, %53
  %76 = icmp sgt i32 %75, %45
  %77 = icmp sgt i64 %72, %59
  %78 = and i1 %77, %76
  br i1 %78, label %70, label %79

79:                                               ; preds = %70, %61, %56, %54
  %80 = phi i64 [ %51, %54 ], [ %51, %56 ], [ %63, %61 ], [ %72, %70 ]
  %81 = trunc i64 %80 to i32
  call void @_ZN6webrtc7MonoAgc8SetLevelEi(%"class.webrtc::MonoAgc"* %0, i32 %81)
  %82 = load i32, i32* %48, align 8
  %83 = icmp eq i32 %49, %82
  br i1 %83, label %115, label %84

84:                                               ; preds = %79
  %85 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc10UpdateGainEvE24atomic_histogram_pointer to i64*) acquire, align 8
  %86 = inttoptr i64 %85 to %"class.webrtc::metrics::Histogram"*
  %87 = icmp eq i64 %85, 0
  br i1 %87, label %88, label %106

88:                                               ; preds = %84
  %89 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #17
  %90 = call i8* @_Znwm(i64 32) #16
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %90, i8** %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %93 = bitcast i64* %92 to <2 x i64>*
  store <2 x i64> <i64 24, i64 -9223372036854775776>, <2 x i64>* %93, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %90, i8* align 1 getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i64 24, i1 false) #17
  %94 = getelementptr inbounds i8, i8* %90, i64 24
  store i8 0, i8* %94, align 1
  %95 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 1, i32 255, i32 50) #17
  %96 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %88
  %101 = load i8*, i8** %91, align 8
  call void @_ZdlPv(i8* %101) #16
  br label %102

102:                                              ; preds = %100, %88
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #17
  %103 = ptrtoint %"class.webrtc::metrics::Histogram"* %95 to i64
  %104 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc10UpdateGainEvE24atomic_histogram_pointer to i64*), i64 0, i64 %103 seq_cst seq_cst
  %105 = icmp eq %"class.webrtc::metrics::Histogram"* %95, null
  br i1 %105, label %109, label %106

106:                                              ; preds = %84, %102
  %107 = phi %"class.webrtc::metrics::Histogram"* [ %95, %102 ], [ %86, %84 ]
  %108 = load i32, i32* %48, align 8
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %107, i32 %108) #17
  br label %109

109:                                              ; preds = %102, %106
  %110 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %5, align 8
  %111 = bitcast %"class.webrtc::Agc"* %110 to void (%"class.webrtc::Agc"*)***
  %112 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %112, i64 4
  %114 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %113, align 8
  call void %114(%"class.webrtc::Agc"* %110) #17
  br label %115

115:                                              ; preds = %40, %79, %109, %1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc16UpdateCompressorEv(%"class.webrtc::MonoAgc"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 13
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = icmp eq i32 %6, 100
  br i1 %7, label %8, label %34

8:                                                ; preds = %1
  store i32 0, i32* %4, align 8
  %9 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer to i64*) acquire, align 8
  %10 = inttoptr i64 %9 to %"class.webrtc::metrics::Histogram"*
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %12, label %30

12:                                               ; preds = %8
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #17
  %14 = tail call i8* @_Znwm(i64 48) #16
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %17, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0), i64 35, i1 false) #17
  %18 = getelementptr inbounds i8, i8* %14, i64 35
  store i8 0, i8* %18, align 1
  %19 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %2, i32 0, i32 12, i32 13) #17
  %20 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %12
  %25 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %25) #16
  br label %26

26:                                               ; preds = %24, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #17
  %27 = ptrtoint %"class.webrtc::metrics::Histogram"* %19 to i64
  %28 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer to i64*), i64 0, i64 %27 seq_cst seq_cst
  %29 = icmp eq %"class.webrtc::metrics::Histogram"* %19, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %8, %26
  %31 = phi %"class.webrtc::metrics::Histogram"* [ %19, %26 ], [ %10, %8 ]
  %32 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 7
  %33 = load i32, i32* %32, align 8
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %31, i32 %33) #17
  br label %34

34:                                               ; preds = %30, %26, %1
  %35 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 6
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %87, label %40

40:                                               ; preds = %34
  %41 = icmp sgt i32 %38, %36
  %42 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 8
  %43 = load float, float* %42, align 4
  %44 = select i1 %41, float 0x3FA99999A0000000, float 0xBFA99999A0000000
  %45 = fadd float %44, %43
  store float %45, float* %42, align 4
  %46 = fpext float %45 to double
  %47 = fadd double %46, 5.000000e-01
  %48 = call double @llvm.floor.f64(double %47)
  %49 = fptosi double %48 to i32
  %50 = sitofp i32 %49 to float
  %51 = fsub float %45, %50
  %52 = call float @llvm.fabs.f32(float %51) #17
  %53 = fcmp olt float %52, 0x3F999999A0000000
  %54 = select i1 %53, i32 %49, i32 %36
  %55 = icmp eq i32 %54, %36
  br i1 %55, label %87, label %56

56:                                               ; preds = %40
  %57 = load atomic volatile i64, i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer_0 to i64*) acquire, align 8
  %58 = inttoptr i64 %57 to %"class.webrtc::metrics::Histogram"*
  %59 = icmp eq i64 %57, 0
  br i1 %59, label %60, label %78

60:                                               ; preds = %56
  %61 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %61) #17
  %62 = call i8* @_Znwm(i64 48) #16
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %62, i8** %63, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = bitcast i64* %64 to <2 x i64>*
  store <2 x i64> <i64 35, i64 -9223372036854775760>, <2 x i64>* %65, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %62, i8* align 1 getelementptr inbounds ([36 x i8], [36 x i8]* @.str.6, i64 0, i64 0), i64 35, i1 false) #17
  %66 = getelementptr inbounds i8, i8* %62, i64 35
  store i8 0, i8* %66, align 1
  %67 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 0, i32 12, i32 13) #17
  %68 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %60
  %73 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %73) #16
  br label %74

74:                                               ; preds = %72, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %61) #17
  %75 = ptrtoint %"class.webrtc::metrics::Histogram"* %67 to i64
  %76 = cmpxchg i64* bitcast (%"class.webrtc::metrics::Histogram"** @_ZZN6webrtc7MonoAgc16UpdateCompressorEvE24atomic_histogram_pointer_0 to i64*), i64 0, i64 %75 seq_cst seq_cst
  %77 = icmp eq %"class.webrtc::metrics::Histogram"* %67, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %56, %74
  %79 = phi %"class.webrtc::metrics::Histogram"* [ %67, %74 ], [ %58, %56 ]
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %79, i32 %54) #17
  br label %80

80:                                               ; preds = %74, %78
  store i32 %54, i32* %35, align 8
  %81 = sitofp i32 %54 to float
  store float %81, float* %42, align 4
  %82 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast i8* %82 to i64*
  %84 = zext i32 %54 to i64
  %85 = shl nuw i64 %84, 32
  %86 = or i64 %85, 1
  store i64 %86, i64* %83, align 8
  br label %87

87:                                               ; preds = %80, %40, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc14HandleClippingEi(%"class.webrtc::MonoAgc"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 17
  %5 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 4
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %6, %1
  %8 = load i32, i32* %4, align 4
  %9 = icmp slt i32 %8, %7
  %10 = select i1 %9, i32 %7, i32 %8
  store i32 %10, i32* %5, align 4
  %11 = sitofp i32 %10 to float
  %12 = fsub float 2.550000e+02, %11
  %13 = sub nsw i32 255, %8
  %14 = sitofp i32 %13 to float
  %15 = fdiv float %12, %14
  %16 = fmul float %15, 6.000000e+00
  %17 = fadd float %16, 5.000000e-01
  %18 = tail call float @llvm.floor.f32(float %17) #17
  %19 = fadd float %18, 1.200000e+01
  %20 = fptosi float %19 to i32
  %21 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 5
  store i32 %20, i32* %21, align 8
  %22 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 16
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %48, label %25

25:                                               ; preds = %2
  %26 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #17
  %27 = tail call i8* @_Znwm(i64 48) #16
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %27, i8** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = bitcast i64* %29 to <2 x i64>*
  store <2 x i64> <i64 41, i64 -9223372036854775760>, <2 x i64>* %30, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %27, i8* align 1 getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41, i1 false) #17
  %31 = getelementptr inbounds i8, i8* %27, i64 41
  store i8 0, i8* %31, align 1
  %32 = call %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, i32 2) #17
  %33 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %25
  %38 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %38) #16
  br label %39

39:                                               ; preds = %25, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #17
  %40 = icmp eq %"class.webrtc::metrics::Histogram"* %32, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = sub nsw i32 %43, %1
  %45 = load i32, i32* %4, align 4
  %46 = icmp sge i32 %44, %45
  %47 = zext i1 %46 to i32
  call void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"* nonnull %32, i32 %47) #17
  br label %48

48:                                               ; preds = %41, %39, %2
  %49 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 8
  %51 = load i32, i32* %4, align 4
  %52 = icmp sgt i32 %50, %51
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = sub nsw i32 %50, %1
  %55 = icmp slt i32 %51, %54
  %56 = select i1 %55, i32 %54, i32 %51
  call void @_ZN6webrtc7MonoAgc8SetLevelEi(%"class.webrtc::MonoAgc"* %0, i32 %56)
  %57 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %57, align 8
  %59 = bitcast %"class.webrtc::Agc"* %58 to void (%"class.webrtc::Agc"*)***
  %60 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %60, i64 4
  %62 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %61, align 8
  call void %62(%"class.webrtc::Agc"* %58) #17
  br label %63

63:                                               ; preds = %53, %48
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc11SetMaxLevelEi(%"class.webrtc::MonoAgc"* nocapture, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 4
  %4 = sitofp i32 %1 to float
  %5 = fsub float 2.550000e+02, %4
  %6 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 17
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 255, %7
  %9 = sitofp i32 %8 to float
  %10 = fdiv float %5, %9
  %11 = fmul float %10, 6.000000e+00
  %12 = fadd float %11, 5.000000e-01
  %13 = tail call float @llvm.floor.f32(float %12) #17
  %14 = fadd float %13, 1.200000e+01
  %15 = fptosi float %14 to i32
  %16 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 5
  store i32 %15, i32* %16, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics30HistogramFactoryGetEnumerationERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEi(%"class.std::__1::basic_string"* dereferenceable(24), i32) local_unnamed_addr #4

declare void @_ZN6webrtc7metrics12HistogramAddEPNS0_9HistogramEi(%"class.webrtc::metrics::Histogram"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc8SetLevelEi(%"class.webrtc::MonoAgc"* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 14
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = icmp ugt i32 %5, 255
  br i1 %8, label %9, label %15

9:                                                ; preds = %7
  %10 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %10) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 204, i32 1, i32 0, i32 0) #17
  %11 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %12 = bitcast %"class.std::__1::basic_ostringstream"* %11 to %"class.std::__1::basic_ostream"*
  %13 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %12, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2, i64 0, i64 0), i64 42) #17
  %14 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %13, i32 %5) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %10) #17
  br label %55

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 25
  %19 = icmp sgt i32 %5, %18
  %20 = add nsw i32 %17, -25
  %21 = icmp slt i32 %5, %20
  %22 = or i1 %19, %21
  br i1 %22, label %23, label %48

23:                                               ; preds = %15
  store i32 %5, i32* %16, align 8
  %24 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = icmp sgt i32 %5, %25
  br i1 %26, label %27, label %41

27:                                               ; preds = %23
  store i32 %5, i32* %24, align 4
  %28 = sitofp i32 %5 to float
  %29 = fsub float 2.550000e+02, %28
  %30 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 17
  %31 = load i32, i32* %30, align 4
  %32 = sub nsw i32 255, %31
  %33 = sitofp i32 %32 to float
  %34 = fdiv float %29, %33
  %35 = fmul float %34, 6.000000e+00
  %36 = fadd float %35, 5.000000e-01
  %37 = tail call float @llvm.floor.f32(float %36) #17
  %38 = fadd float %37, 1.200000e+01
  %39 = fptosi float %38 to i32
  %40 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 5
  store i32 %39, i32* %40, align 8
  br label %41

41:                                               ; preds = %27, %23
  %42 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %43 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %42, align 8
  %44 = bitcast %"class.webrtc::Agc"* %43 to void (%"class.webrtc::Agc"*)***
  %45 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %45, i64 4
  %47 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %46, align 8
  tail call void %47(%"class.webrtc::Agc"* %43) #17
  br label %55

48:                                               ; preds = %15
  %49 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 4
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, %1
  %52 = select i1 %51, i32 %50, i32 %1
  %53 = icmp eq i32 %52, %17
  br i1 %53, label %55, label %54

54:                                               ; preds = %48
  store i32 %52, i32* %4, align 4
  store i32 %52, i32* %16, align 8
  br label %55

55:                                               ; preds = %48, %2, %54, %41, %9
  ret void
}

declare void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"*, i8*, i32, i32, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc7MonoAgc29HandleCaptureOutputUsedChangeEb(%"class.webrtc::MonoAgc"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = zext i8 %4 to i32
  %6 = zext i1 %1 to i32
  %7 = icmp eq i32 %5, %6
  br i1 %7, label %12, label %8

8:                                                ; preds = %2
  %9 = zext i1 %1 to i8
  store i8 %9, i8* %3, align 8
  br i1 %1, label %10, label %12

10:                                               ; preds = %8
  %11 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %0, i64 0, i32 10
  store i8 1, i8* %11, align 1
  br label %12

12:                                               ; preds = %2, %10, %8
  ret void
}

declare %"class.webrtc::metrics::Histogram"* @_ZN6webrtc7metrics31HistogramFactoryGetCountsLinearERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEiii(%"class.std::__1::basic_string"* dereferenceable(24), i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirectC2EPNS_3AgcEiiiifi(%"class.webrtc::AgcManagerDirect"*, %"class.webrtc::Agc"*, i32, i32, i32, i32, float, i32) unnamed_addr #0 align 2 {
  tail call void @_ZN6webrtc16AgcManagerDirectC2Eiiibiifi(%"class.webrtc::AgcManagerDirect"* %0, i32 1, i32 %2, i32 %3, i1 zeroext false, i32 %4, i32 %5, float %6, i32 %7)
  %9 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %11, align 8
  %13 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %14 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %13, align 8
  store %"class.webrtc::Agc"* %1, %"class.webrtc::Agc"** %13, align 8
  %15 = icmp eq %"class.webrtc::Agc"* %14, null
  br i1 %15, label %21, label %16

16:                                               ; preds = %8
  %17 = bitcast %"class.webrtc::Agc"* %14 to void (%"class.webrtc::Agc"*)***
  %18 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %18, i64 1
  %20 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %19, align 8
  tail call void %20(%"class.webrtc::Agc"* nonnull %14) #17
  br label %21

21:                                               ; preds = %8, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirectC2Eiiibiifi(%"class.webrtc::AgcManagerDirect"*, i32, i32, i32, i1 zeroext, i32, i32, float, i32) unnamed_addr #0 align 2 {
  %10 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %11 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %16 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %17 = zext i1 %4 to i8
  %18 = tail call i8* @_Znwm(i64 1) #16
  %19 = bitcast i8* %18 to %"class.webrtc::ApmDataDumper"*
  %20 = atomicrmw add i32* @_ZN6webrtc16AgcManagerDirect17instance_counter_E, i32 1 seq_cst
  %21 = add i32 %20, 1
  tail call void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"* nonnull %19, i32 %21) #17
  %22 = ptrtoint i8* %18 to i64
  %23 = bitcast %"class.webrtc::AgcManagerDirect"* %0 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %25 = tail call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0)) #17
  %26 = xor i1 %25, true
  %27 = zext i1 %26 to i8
  store i8 %27, i8* %24, align 8
  %28 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 2
  store i32 %5, i32* %28, align 4
  %29 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 3
  store i32 %1, i32* %29, align 8
  %30 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 4
  store i8 %17, i8* %30, align 4
  %31 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 5
  store i32 %8, i32* %31, align 8
  %32 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 7
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 9
  store i32 %6, i32* %35, align 8
  %36 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 10
  store float %7, float* %36, align 4
  %37 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 11
  store i32 %8, i32* %37, align 8
  %38 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %39 = sext i32 %1 to i64
  %40 = bitcast %"class.std::__1::vector.52"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #17
  %41 = icmp eq i32 %1, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %9
  %43 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13
  %44 = bitcast %"class.std::__1::vector.65"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #17
  br label %105

45:                                               ; preds = %9
  %46 = icmp slt i32 %1, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %45
  %48 = bitcast %"class.std::__1::vector.52"* %38 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %48) #18
  unreachable

49:                                               ; preds = %45
  %50 = shl nsw i64 %39, 3
  %51 = tail call i8* @_Znwm(i64 %50) #16
  %52 = bitcast i8* %51 to %"class.std::__1::unique_ptr.54"*
  %53 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %54 = bitcast %"class.std::__1::vector.52"* %38 to i8**
  store i8* %51, i8** %54, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %52, i64 %39
  %56 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::unique_ptr.54"* %55, %"class.std::__1::unique_ptr.54"** %56, align 8
  %57 = bitcast %"class.std::__1::unique_ptr.54"** %53 to i64*
  %58 = ptrtoint i8* %51 to i64
  %59 = add nsw i64 %39, -1
  %60 = getelementptr %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %52, i64 %59, i32 0, i32 0, i32 0
  %61 = ptrtoint %"class.webrtc::MonoAgc"** %60 to i64
  %62 = sub i64 8, %58
  %63 = add i64 %62, %61
  %64 = and i64 %63, -8
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 %64, i1 false) #17
  %65 = ptrtoint %"class.std::__1::unique_ptr.54"* %55 to i64
  store i64 %65, i64* %57, align 8
  %66 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13
  %67 = tail call i8* @_Znwm(i64 %50) #16
  %68 = bitcast i8* %67 to %"class.absl::optional"*
  %69 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 1
  %70 = bitcast %"class.absl::optional"** %69 to i8**
  store i8* %67, i8** %70, align 8
  %71 = bitcast %"class.std::__1::vector.65"* %66 to i8**
  store i8* %67, i8** %71, align 8
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %68, i64 %39
  %73 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 2, i32 0, i32 0
  store %"class.absl::optional"* %72, %"class.absl::optional"** %73, align 8
  %74 = shl nsw i64 %39, 3
  %75 = add nsw i64 %74, -8
  %76 = lshr exact i64 %75, 3
  %77 = add nuw nsw i64 %76, 1
  %78 = and i64 %77, 7
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %49, %80
  %81 = phi %"class.absl::optional"* [ %84, %80 ], [ %68, %49 ]
  %82 = phi i64 [ %85, %80 ], [ %78, %49 ]
  %83 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %81, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 4
  %84 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %81, i64 1
  %85 = add i64 %82, -1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %80, !llvm.loop !3

87:                                               ; preds = %80, %49
  %88 = phi %"class.absl::optional"* [ %68, %49 ], [ %84, %80 ]
  %89 = icmp ult i64 %75, 56
  br i1 %89, label %102, label %90

90:                                               ; preds = %87, %90
  %91 = phi %"class.absl::optional"* [ %100, %90 ], [ %88, %87 ]
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %92, align 4
  %93 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %93, align 4
  %94 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %94, align 4
  %95 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 3, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 4
  %97 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 5, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %97, align 4
  %98 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %98, align 4
  %99 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %91, i64 8
  %101 = icmp eq %"class.absl::optional"* %100, %72
  br i1 %101, label %102, label %90

102:                                              ; preds = %90, %87
  %103 = bitcast %"class.absl::optional"** %69 to i64*
  %104 = ptrtoint %"class.absl::optional"* %72 to i64
  store i64 %104, i64* %103, align 8
  br label %105

105:                                              ; preds = %42, %102
  %106 = bitcast %"class.rtc::DiagnosticLogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %106) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %10, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 61, i32 3, i32 0, i32 0) #17
  %107 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %10, i64 0, i32 7
  %108 = bitcast %"class.std::__1::basic_ostringstream"* %107 to %"class.std::__1::basic_ostream"*
  %109 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %108, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0), i64 20) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %106) #17
  %110 = call zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZZN6webrtc12_GLOBAL__N_114GetMinMicLevelEvE22kMinMicLevelFieldTrial, i64 0, i64 0)) #17
  br i1 %110, label %117, label %111

111:                                              ; preds = %105
  %112 = bitcast %"class.rtc::DiagnosticLogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %112) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %11, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 65, i32 3, i32 0, i32 0) #17
  %113 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %11, i64 0, i32 7
  %114 = bitcast %"class.std::__1::basic_ostringstream"* %113 to %"class.std::__1::basic_ostream"*
  %115 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %114, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.14, i64 0, i64 0), i64 35) #17
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %115, i32 12) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %112) #17
  br label %165

117:                                              ; preds = %105
  %118 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %118) #17
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %120) #17
  %121 = call i8* @_Znwm(i64 48) #16
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %121, i8** %122, align 8
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %124 = bitcast i64* %123 to <2 x i64>*
  store <2 x i64> <i64 37, i64 -9223372036854775760>, <2 x i64>* %124, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %121, i8* align 16 getelementptr inbounds ([38 x i8], [38 x i8]* @_ZZN6webrtc12_GLOBAL__N_114GetMinMicLevelEvE22kMinMicLevelFieldTrial, i64 0, i64 0), i64 37, i1 false) #17
  %125 = getelementptr inbounds i8, i8* %121, i64 37
  store i8 0, i8* %125, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %12, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %13) #17
  %126 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %117
  %131 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %131) #16
  br label %132

132:                                              ; preds = %130, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %120) #17
  %133 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %133) #17
  store i32 -1, i32* %14, align 4
  %134 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  %138 = load i8*, i8** %119, align 8
  %139 = select i1 %137, i8* %138, i8* %118
  %140 = call i32 (i8*, i8*, ...) @__isoc99_sscanf(i8* %139, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i32* nonnull %14) #17
  %141 = load i32, i32* %14, align 4
  %142 = icmp ult i32 %141, 256
  br i1 %142, label %143, label %151

143:                                              ; preds = %132
  %144 = bitcast %"class.rtc::DiagnosticLogMessage"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %144) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %15, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 73, i32 3, i32 0, i32 0) #17
  %145 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %15, i64 0, i32 7
  %146 = bitcast %"class.std::__1::basic_ostringstream"* %145 to %"class.std::__1::basic_ostream"*
  %147 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %146, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.16, i64 0, i64 0), i64 34) #17
  %148 = load i32, i32* %14, align 4
  %149 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %147, i32 %148) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %15) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %144) #17
  %150 = load i32, i32* %14, align 4
  br label %158

151:                                              ; preds = %132
  %152 = bitcast %"class.rtc::DiagnosticLogMessage"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %152) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %16, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 76, i32 2, i32 0, i32 0) #17
  %153 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %16, i64 0, i32 7
  %154 = bitcast %"class.std::__1::basic_ostringstream"* %153 to %"class.std::__1::basic_ostream"*
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %154, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i64 28) #17
  %156 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %155, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @_ZZN6webrtc12_GLOBAL__N_114GetMinMicLevelEvE22kMinMicLevelFieldTrial, i64 0, i64 0), i64 37) #17
  %157 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %156, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i64 10) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %16) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %152) #17
  br label %158

158:                                              ; preds = %151, %143
  %159 = phi i32 [ %150, %143 ], [ 12, %151 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %133) #17
  %160 = load i8, i8* %135, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = load i8*, i8** %119, align 8
  call void @_ZdlPv(i8* %163) #16
  br label %164

164:                                              ; preds = %162, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %118) #17
  br label %165

165:                                              ; preds = %111, %164
  %166 = phi i32 [ %159, %164 ], [ 12, %111 ]
  %167 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %168 = bitcast %"class.std::__1::unique_ptr.54"** %167 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = bitcast %"class.std::__1::vector.52"* %38 to i64*
  %171 = load i64, i64* %170, align 8
  %172 = icmp eq i64 %169, %171
  br i1 %172, label %179, label %173

173:                                              ; preds = %165
  %174 = icmp slt i32 %166, %2
  %175 = icmp slt i32 %2, 255
  %176 = select i1 %175, i32 %2, i32 255
  %177 = select i1 %174, i32 %176, i32 %166
  %178 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %38, i64 0, i32 0, i32 0
  br label %185

179:                                              ; preds = %228, %165
  %180 = phi i64 [ %171, %165 ], [ %231, %228 ]
  %181 = inttoptr i64 %180 to %"class.std::__1::unique_ptr.54"*
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %181, i64 0, i32 0, i32 0, i32 0
  %183 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %182, align 8
  %184 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %183, i64 0, i32 16
  store i8 1, i8* %184, align 8
  ret void

185:                                              ; preds = %173, %228
  %186 = phi i64 [ 0, %173 ], [ %229, %228 ]
  %187 = call i8* @_Znwm(i64 72) #16
  %188 = load i8, i8* %30, align 1, !range !2
  %189 = bitcast i8* %187 to i32*
  store i32 %166, i32* %189, align 8
  %190 = getelementptr inbounds i8, i8* %187, i64 4
  store i8 %188, i8* %190, align 4
  %191 = call i8* @_Znwm(i64 6120) #16
  %192 = bitcast i8* %191 to %"class.webrtc::Agc"*
  call void @_ZN6webrtc3AgcC1Ev(%"class.webrtc::Agc"* nonnull %192) #17
  %193 = getelementptr inbounds i8, i8* %187, i64 8
  %194 = bitcast i8* %193 to i8**
  store i8* %191, i8** %194, align 8
  %195 = getelementptr inbounds i8, i8* %187, i64 16
  %196 = bitcast i8* %195 to <4 x i32>*
  store <4 x i32> <i32 0, i32 255, i32 12, i32 7>, <4 x i32>* %196, align 8
  %197 = getelementptr inbounds i8, i8* %187, i64 32
  %198 = bitcast i8* %197 to i32*
  store i32 7, i32* %198, align 8
  %199 = getelementptr inbounds i8, i8* %187, i64 36
  %200 = bitcast i8* %199 to float*
  store float 7.000000e+00, float* %200, align 4
  %201 = getelementptr inbounds i8, i8* %187, i64 40
  store i8 1, i8* %201, align 8
  %202 = getelementptr inbounds i8, i8* %187, i64 41
  store i8 1, i8* %202, align 1
  %203 = getelementptr inbounds i8, i8* %187, i64 42
  store i8 1, i8* %203, align 2
  %204 = getelementptr inbounds i8, i8* %187, i64 44
  %205 = bitcast i8* %204 to i32*
  store i32 %177, i32* %205, align 4
  %206 = getelementptr inbounds i8, i8* %187, i64 48
  %207 = getelementptr inbounds i8, i8* %187, i64 64
  store i8 0, i8* %207, align 8
  %208 = getelementptr inbounds i8, i8* %187, i64 68
  %209 = bitcast i8* %208 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %206, i8 0, i64 9, i1 false) #17
  store i32 %3, i32* %209, align 4
  %210 = ptrtoint i8* %187 to i64
  %211 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %178, align 8
  %212 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %211, i64 %186
  %213 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %212, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %213, align 8
  %215 = bitcast %"class.std::__1::unique_ptr.54"* %212 to i64*
  store i64 %210, i64* %215, align 8
  %216 = icmp eq %"class.webrtc::MonoAgc"* %214, null
  br i1 %216, label %228, label %217

217:                                              ; preds = %185
  %218 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %214, i64 0, i32 2, i32 0, i32 0, i32 0
  %219 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %218, align 8
  store %"class.webrtc::Agc"* null, %"class.webrtc::Agc"** %218, align 8
  %220 = icmp eq %"class.webrtc::Agc"* %219, null
  br i1 %220, label %226, label %221

221:                                              ; preds = %217
  %222 = bitcast %"class.webrtc::Agc"* %219 to void (%"class.webrtc::Agc"*)***
  %223 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %222, align 8
  %224 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %223, i64 1
  %225 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %224, align 8
  call void %225(%"class.webrtc::Agc"* nonnull %219) #17
  br label %226

226:                                              ; preds = %221, %217
  %227 = bitcast %"class.webrtc::MonoAgc"* %214 to i8*
  call void @_ZdlPv(i8* %227) #16
  br label %228

228:                                              ; preds = %226, %185
  %229 = add nuw i64 %186, 1
  %230 = load i64, i64* %168, align 8
  %231 = load i64, i64* %170, align 8
  %232 = sub i64 %230, %231
  %233 = ashr exact i64 %232, 3
  %234 = icmp ult i64 %229, %233
  br i1 %234, label %185, label %179
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN6webrtc13ApmDataDumperC1Ei(%"class.webrtc::ApmDataDumper"*, i32) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirectD2Ev(%"class.webrtc::AgcManagerDirect"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.absl::optional"*, %"class.absl::optional"** %2, align 8
  %4 = icmp eq %"class.absl::optional"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"class.absl::optional"* %3 to i64
  %7 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 1
  %8 = bitcast %"class.absl::optional"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %9) #16
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %12 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %12, align 8
  %14 = icmp eq %"class.std::__1::unique_ptr.54"* %13, null
  br i1 %14, label %44, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.std::__1::unique_ptr.54"* %13 to i8*
  %17 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %18 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %17, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr.54"* %18, %13
  br i1 %19, label %42, label %20

20:                                               ; preds = %15, %37
  %21 = phi %"class.std::__1::unique_ptr.54"* [ %22, %37 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %21, i64 -1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %23, align 8
  store %"class.webrtc::MonoAgc"* null, %"class.webrtc::MonoAgc"** %23, align 8
  %25 = icmp eq %"class.webrtc::MonoAgc"* %24, null
  br i1 %25, label %37, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %24, i64 0, i32 2, i32 0, i32 0, i32 0
  %28 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %27, align 8
  store %"class.webrtc::Agc"* null, %"class.webrtc::Agc"** %27, align 8
  %29 = icmp eq %"class.webrtc::Agc"* %28, null
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.webrtc::Agc"* %28 to void (%"class.webrtc::Agc"*)***
  %32 = load void (%"class.webrtc::Agc"*)**, void (%"class.webrtc::Agc"*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %32, i64 1
  %34 = load void (%"class.webrtc::Agc"*)*, void (%"class.webrtc::Agc"*)** %33, align 8
  tail call void %34(%"class.webrtc::Agc"* nonnull %28) #17
  br label %35

35:                                               ; preds = %30, %26
  %36 = bitcast %"class.webrtc::MonoAgc"* %24 to i8*
  tail call void @_ZdlPv(i8* %36) #16
  br label %37

37:                                               ; preds = %35, %20
  %38 = icmp eq %"class.std::__1::unique_ptr.54"* %22, %13
  br i1 %38, label %39, label %20

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.52"* %11 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %15
  %43 = phi i8* [ %41, %39 ], [ %16, %15 ]
  store %"class.std::__1::unique_ptr.54"* %13, %"class.std::__1::unique_ptr.54"** %17, align 8
  tail call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %10, %42
  %45 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.webrtc::ApmDataDumper"*, %"class.webrtc::ApmDataDumper"** %45, align 8
  store %"class.webrtc::ApmDataDumper"* null, %"class.webrtc::ApmDataDumper"** %45, align 8
  %47 = icmp eq %"class.webrtc::ApmDataDumper"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  tail call void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"* nonnull %46) #17
  %49 = getelementptr inbounds %"class.webrtc::ApmDataDumper", %"class.webrtc::ApmDataDumper"* %46, i64 0, i32 0
  tail call void @_ZdlPv(i8* %49) #16
  br label %50

50:                                               ; preds = %44, %48
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect10InitializeEv(%"class.webrtc::AgcManagerDirect"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %3 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.54"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.52"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %5, %7
  %9 = inttoptr i64 %7 to %"class.std::__1::unique_ptr.54"*
  br i1 %8, label %12, label %106

10:                                               ; preds = %106
  %11 = inttoptr i64 %125 to %"class.std::__1::unique_ptr.54"*
  br label %12

12:                                               ; preds = %10, %1
  %13 = phi i64 [ %5, %1 ], [ %124, %10 ]
  %14 = phi %"class.std::__1::unique_ptr.54"* [ %9, %1 ], [ %11, %10 ]
  %15 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 7
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %16, align 8
  %18 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %17, i64 0, i32 14
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = ptrtoint %"class.std::__1::unique_ptr.54"* %14 to i64
  %26 = sub i64 %13, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, 1
  br i1 %24, label %36, label %29

29:                                               ; preds = %12
  br i1 %28, label %30, label %105

30:                                               ; preds = %29
  %31 = add nsw i64 %27, -1
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %26, 16
  br i1 %33, label %93, label %34

34:                                               ; preds = %30
  %35 = sub nsw i64 %31, %32
  br label %43

36:                                               ; preds = %12
  br i1 %28, label %37, label %105

37:                                               ; preds = %36
  %38 = add nsw i64 %27, -1
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %26, 16
  br i1 %40, label %81, label %41

41:                                               ; preds = %37
  %42 = sub nsw i64 %38, %39
  br label %62

43:                                               ; preds = %139, %34
  %44 = phi i32 [ %19, %34 ], [ %140, %139 ]
  %45 = phi i64 [ 1, %34 ], [ %141, %139 ]
  %46 = phi i64 [ %35, %34 ], [ %142, %139 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %45, i32 0, i32 0, i32 0
  %48 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %47, align 8
  %49 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %48, i64 0, i32 14
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, %44
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  store i32 %50, i32* %20, align 4
  %53 = trunc i64 %45 to i32
  store i32 %53, i32* %21, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %50, %52 ], [ %44, %43 ]
  %56 = add nuw i64 %45, 1
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %56, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %57, align 8
  %59 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %58, i64 0, i32 14
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, %55
  br i1 %61, label %137, label %139

62:                                               ; preds = %132, %41
  %63 = phi i32 [ %19, %41 ], [ %133, %132 ]
  %64 = phi i64 [ 1, %41 ], [ %134, %132 ]
  %65 = phi i64 [ %42, %41 ], [ %135, %132 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %64, i32 0, i32 0, i32 0
  %67 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %66, align 8
  %68 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %67, i64 0, i32 14
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, %63
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  store i32 %69, i32* %20, align 4
  %72 = trunc i64 %64 to i32
  store i32 %72, i32* %21, align 4
  br label %73

73:                                               ; preds = %71, %62
  %74 = phi i32 [ %69, %71 ], [ %63, %62 ]
  %75 = add nuw i64 %64, 1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %75, i32 0, i32 0, i32 0
  %77 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %77, i64 0, i32 14
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, %74
  br i1 %80, label %130, label %132

81:                                               ; preds = %132, %37
  %82 = phi i32 [ %19, %37 ], [ %133, %132 ]
  %83 = phi i64 [ 1, %37 ], [ %134, %132 ]
  %84 = icmp eq i64 %39, 0
  br i1 %84, label %105, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %83, i32 0, i32 0, i32 0
  %87 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %86, align 8
  %88 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %87, i64 0, i32 14
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, %82
  br i1 %90, label %91, label %105

91:                                               ; preds = %85
  store i32 %89, i32* %20, align 4
  %92 = trunc i64 %83 to i32
  store i32 %92, i32* %21, align 4
  br label %105

93:                                               ; preds = %139, %30
  %94 = phi i32 [ %19, %30 ], [ %140, %139 ]
  %95 = phi i64 [ 1, %30 ], [ %141, %139 ]
  %96 = icmp eq i64 %32, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %14, i64 %95, i32 0, i32 0, i32 0
  %99 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %98, align 8
  %100 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %99, i64 0, i32 14
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, %94
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  store i32 %101, i32* %20, align 4
  %104 = trunc i64 %95 to i32
  store i32 %104, i32* %21, align 4
  br label %105

105:                                              ; preds = %93, %97, %103, %81, %85, %91, %29, %36
  ret void

106:                                              ; preds = %1, %106
  %107 = phi %"class.std::__1::unique_ptr.54"* [ %129, %106 ], [ %9, %1 ]
  %108 = phi i64 [ %123, %106 ], [ 0, %1 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %107, i64 %108, i32 0, i32 0, i32 0
  %110 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %109, align 8
  %111 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 4
  store i32 255, i32* %111, align 4
  %112 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 5
  store i32 12, i32* %112, align 8
  %113 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 1
  %114 = load i8, i8* %113, align 4, !range !2
  %115 = icmp eq i8 %114, 0
  %116 = select i1 %115, i32 7, i32 0
  %117 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 6
  store i32 %116, i32* %117, align 4
  %118 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 7
  store i32 %116, i32* %118, align 8
  %119 = sitofp i32 %116 to float
  %120 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 8
  store float %119, float* %120, align 4
  %121 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 9
  store i8 1, i8* %121, align 8
  %122 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 10
  store i8 1, i8* %122, align 1
  %123 = add nuw i64 %108, 1
  %124 = load i64, i64* %4, align 8
  %125 = load i64, i64* %6, align 8
  %126 = sub i64 %124, %125
  %127 = ashr exact i64 %126, 3
  %128 = icmp ult i64 %123, %127
  %129 = inttoptr i64 %125 to %"class.std::__1::unique_ptr.54"*
  br i1 %128, label %106, label %10

130:                                              ; preds = %73
  store i32 %79, i32* %20, align 4
  %131 = trunc i64 %75 to i32
  store i32 %131, i32* %21, align 4
  br label %132

132:                                              ; preds = %130, %73
  %133 = phi i32 [ %79, %130 ], [ %74, %73 ]
  %134 = add nuw i64 %64, 2
  %135 = add i64 %65, -2
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %81, label %62

137:                                              ; preds = %54
  store i32 %60, i32* %20, align 4
  %138 = trunc i64 %56 to i32
  store i32 %138, i32* %21, align 4
  br label %139

139:                                              ; preds = %137, %54
  %140 = phi i32 [ %60, %137 ], [ %55, %54 ]
  %141 = add nuw i64 %45, 2
  %142 = add i64 %46, -2
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %93, label %43
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect22AggregateChannelLevelsEv(%"class.webrtc::AgcManagerDirect"* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %4, align 8
  %6 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %5, i64 0, i32 14
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 %7, i32* %8, align 4
  %9 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  %13 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.54"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint %"class.std::__1::unique_ptr.54"* %3 to i64
  %17 = sub i64 %15, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ugt i64 %18, 1
  br i1 %12, label %27, label %20

20:                                               ; preds = %1
  br i1 %19, label %21, label %96

21:                                               ; preds = %20
  %22 = add nsw i64 %18, -1
  %23 = and i64 %22, 1
  %24 = icmp eq i64 %17, 16
  br i1 %24, label %84, label %25

25:                                               ; preds = %21
  %26 = sub nsw i64 %22, %23
  br label %34

27:                                               ; preds = %1
  br i1 %19, label %28, label %96

28:                                               ; preds = %27
  %29 = add nsw i64 %18, -1
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %17, 16
  br i1 %31, label %72, label %32

32:                                               ; preds = %28
  %33 = sub nsw i64 %29, %30
  br label %53

34:                                               ; preds = %106, %25
  %35 = phi i32 [ %7, %25 ], [ %107, %106 ]
  %36 = phi i64 [ 1, %25 ], [ %108, %106 ]
  %37 = phi i64 [ %26, %25 ], [ %109, %106 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %36, i32 0, i32 0, i32 0
  %39 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %38, align 8
  %40 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %39, i64 0, i32 14
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %41, %35
  br i1 %42, label %43, label %45

43:                                               ; preds = %34
  store i32 %41, i32* %8, align 4
  %44 = trunc i64 %36 to i32
  store i32 %44, i32* %9, align 4
  br label %45

45:                                               ; preds = %43, %34
  %46 = phi i32 [ %41, %43 ], [ %35, %34 ]
  %47 = add nuw i64 %36, 1
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %47, i32 0, i32 0, i32 0
  %49 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %48, align 8
  %50 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %49, i64 0, i32 14
  %51 = load i32, i32* %50, align 4
  %52 = icmp slt i32 %51, %46
  br i1 %52, label %104, label %106

53:                                               ; preds = %99, %32
  %54 = phi i32 [ %7, %32 ], [ %100, %99 ]
  %55 = phi i64 [ 1, %32 ], [ %101, %99 ]
  %56 = phi i64 [ %33, %32 ], [ %102, %99 ]
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %55, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %57, align 8
  %59 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %58, i64 0, i32 14
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, %54
  br i1 %61, label %62, label %64

62:                                               ; preds = %53
  store i32 %60, i32* %8, align 4
  %63 = trunc i64 %55 to i32
  store i32 %63, i32* %9, align 4
  br label %64

64:                                               ; preds = %62, %53
  %65 = phi i32 [ %60, %62 ], [ %54, %53 ]
  %66 = add nuw i64 %55, 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %66, i32 0, i32 0, i32 0
  %68 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %67, align 8
  %69 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %68, i64 0, i32 14
  %70 = load i32, i32* %69, align 4
  %71 = icmp sgt i32 %70, %65
  br i1 %71, label %97, label %99

72:                                               ; preds = %99, %28
  %73 = phi i32 [ %7, %28 ], [ %100, %99 ]
  %74 = phi i64 [ 1, %28 ], [ %101, %99 ]
  %75 = icmp eq i64 %30, 0
  br i1 %75, label %96, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %74, i32 0, i32 0, i32 0
  %78 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %77, align 8
  %79 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %78, i64 0, i32 14
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %80, %73
  br i1 %81, label %82, label %96

82:                                               ; preds = %76
  store i32 %80, i32* %8, align 4
  %83 = trunc i64 %74 to i32
  store i32 %83, i32* %9, align 4
  br label %96

84:                                               ; preds = %106, %21
  %85 = phi i32 [ %7, %21 ], [ %107, %106 ]
  %86 = phi i64 [ 1, %21 ], [ %108, %106 ]
  %87 = icmp eq i64 %23, 0
  br i1 %87, label %96, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %3, i64 %86, i32 0, i32 0, i32 0
  %90 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %89, align 8
  %91 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %90, i64 0, i32 14
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %92, %85
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  store i32 %92, i32* %8, align 4
  %95 = trunc i64 %86 to i32
  store i32 %95, i32* %9, align 4
  br label %96

96:                                               ; preds = %84, %88, %94, %72, %76, %82, %20, %27
  ret void

97:                                               ; preds = %64
  store i32 %70, i32* %8, align 4
  %98 = trunc i64 %66 to i32
  store i32 %98, i32* %9, align 4
  br label %99

99:                                               ; preds = %97, %64
  %100 = phi i32 [ %70, %97 ], [ %65, %64 ]
  %101 = add nuw i64 %55, 2
  %102 = add i64 %56, -2
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %72, label %53

104:                                              ; preds = %45
  store i32 %51, i32* %8, align 4
  %105 = trunc i64 %47 to i32
  store i32 %105, i32* %9, align 4
  br label %106

106:                                              ; preds = %104, %45
  %107 = phi i32 [ %51, %104 ], [ %46, %45 ]
  %108 = add nuw i64 %36, 2
  %109 = add i64 %37, -2
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %84, label %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc16AgcManagerDirect23SetupDigitalGainControlEPNS_11GainControlE(%"class.webrtc::AgcManagerDirect"* nocapture readonly, %"class.webrtc::GainControl"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %4 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %5 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %6 = alloca %"class.rtc::DiagnosticLogMessage", align 8
  %7 = bitcast %"class.webrtc::GainControl"* %1 to i32 (%"class.webrtc::GainControl"*, i32)***
  %8 = load i32 (%"class.webrtc::GainControl"*, i32)**, i32 (%"class.webrtc::GainControl"*, i32)*** %7, align 8
  %9 = getelementptr inbounds i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %8, i64 2
  %10 = load i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %9, align 8
  %11 = tail call i32 %10(%"class.webrtc::GainControl"* %1, i32 2) #17
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.rtc::DiagnosticLogMessage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %14) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %3, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 473, i32 1, i32 0, i32 0) #17
  %15 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %3, i64 0, i32 7
  %16 = bitcast %"class.std::__1::basic_ostringstream"* %15 to %"class.std::__1::basic_ostream"*
  %17 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %16, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7, i64 0, i64 0), i64 44) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %14) #17
  br label %18

18:                                               ; preds = %2, %13
  %19 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 4
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  %22 = select i1 %21, i32 2, i32 0
  %23 = load i32 (%"class.webrtc::GainControl"*, i32)**, i32 (%"class.webrtc::GainControl"*, i32)*** %7, align 8
  %24 = getelementptr inbounds i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %23, i64 4
  %25 = load i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %24, align 8
  %26 = call i32 %25(%"class.webrtc::GainControl"* %1, i32 %22) #17
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %18
  %29 = bitcast %"class.rtc::DiagnosticLogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %29) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %4, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 477, i32 1, i32 0, i32 0) #17
  %30 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %4, i64 0, i32 7
  %31 = bitcast %"class.std::__1::basic_ostringstream"* %30 to %"class.std::__1::basic_ostream"*
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i64 0, i64 0), i64 31) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %29) #17
  br label %33

33:                                               ; preds = %18, %28
  %34 = load i8, i8* %19, align 4, !range !2
  %35 = icmp eq i8 %34, 0
  %36 = select i1 %35, i32 7, i32 0
  %37 = load i32 (%"class.webrtc::GainControl"*, i32)**, i32 (%"class.webrtc::GainControl"*, i32)*** %7, align 8
  %38 = getelementptr inbounds i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %37, i64 6
  %39 = load i32 (%"class.webrtc::GainControl"*, i32)*, i32 (%"class.webrtc::GainControl"*, i32)** %38, align 8
  %40 = call i32 %39(%"class.webrtc::GainControl"* %1, i32 %36) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33
  %43 = bitcast %"class.rtc::DiagnosticLogMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %43) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %5, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 482, i32 1, i32 0, i32 0) #17
  %44 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %5, i64 0, i32 7
  %45 = bitcast %"class.std::__1::basic_ostringstream"* %44 to %"class.std::__1::basic_ostream"*
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %45, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.9, i64 0, i64 0), i64 33) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %43) #17
  br label %47

47:                                               ; preds = %33, %42
  %48 = load i8, i8* %19, align 4, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = bitcast %"class.webrtc::GainControl"* %1 to i32 (%"class.webrtc::GainControl"*, i1)***
  %51 = load i32 (%"class.webrtc::GainControl"*, i1)**, i32 (%"class.webrtc::GainControl"*, i1)*** %50, align 8
  %52 = getelementptr inbounds i32 (%"class.webrtc::GainControl"*, i1)*, i32 (%"class.webrtc::GainControl"*, i1)** %51, i64 8
  %53 = load i32 (%"class.webrtc::GainControl"*, i1)*, i32 (%"class.webrtc::GainControl"*, i1)** %52, align 8
  %54 = call i32 %53(%"class.webrtc::GainControl"* %1, i1 zeroext %49) #17
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %47
  %57 = bitcast %"class.rtc::DiagnosticLogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %57) #17
  call void @_ZN3rtc20DiagnosticLogMessageC1EPKciNS_15LoggingSeverityENS_15LogErrorContextEi(%"class.rtc::DiagnosticLogMessage"* nonnull %6, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.1, i64 0, i64 0), i32 486, i32 1, i32 0, i32 0) #17
  %58 = getelementptr inbounds %"class.rtc::DiagnosticLogMessage", %"class.rtc::DiagnosticLogMessage"* %6, i64 0, i32 7
  %59 = bitcast %"class.std::__1::basic_ostringstream"* %58 to %"class.std::__1::basic_ostream"*
  %60 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %59, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.10, i64 0, i64 0), i64 24) #17
  call void @_ZN3rtc20DiagnosticLogMessageD1Ev(%"class.rtc::DiagnosticLogMessage"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %57) #17
  br label %61

61:                                               ; preds = %47, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect17AnalyzePreProcessEPKNS_11AudioBufferE(%"class.webrtc::AgcManagerDirect"* nocapture, %"class.webrtc::AudioBuffer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %3, align 8
  %5 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load float**, float*** %5, align 8
  %7 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 3
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN6webrtc16AgcManagerDirect17AnalyzePreProcessEPKPKfm(%"class.webrtc::AgcManagerDirect"* %0, float** %6, i64 %8)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect17AnalyzePreProcessEPKPKfm(%"class.webrtc::AgcManagerDirect"* nocapture, float** nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %7, i64 0, i32 14
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.54"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.54"* %5 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, 1
  %22 = inttoptr i64 %17 to %"class.std::__1::unique_ptr.54"*
  br i1 %14, label %30, label %23

23:                                               ; preds = %3
  br i1 %21, label %24, label %99

24:                                               ; preds = %23
  %25 = add nsw i64 %20, -1
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %19, 16
  br i1 %27, label %87, label %28

28:                                               ; preds = %24
  %29 = sub nsw i64 %25, %26
  br label %37

30:                                               ; preds = %3
  br i1 %21, label %31, label %99

31:                                               ; preds = %30
  %32 = add nsw i64 %20, -1
  %33 = and i64 %32, 1
  %34 = icmp eq i64 %19, 16
  br i1 %34, label %75, label %35

35:                                               ; preds = %31
  %36 = sub nsw i64 %32, %33
  br label %56

37:                                               ; preds = %370, %28
  %38 = phi i32 [ %9, %28 ], [ %371, %370 ]
  %39 = phi i64 [ 1, %28 ], [ %372, %370 ]
  %40 = phi i64 [ %29, %28 ], [ %373, %370 ]
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %39, i32 0, i32 0, i32 0
  %42 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %41, align 8
  %43 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %42, i64 0, i32 14
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, %38
  br i1 %45, label %46, label %48

46:                                               ; preds = %37
  store i32 %44, i32* %10, align 4
  %47 = trunc i64 %39 to i32
  store i32 %47, i32* %11, align 4
  br label %48

48:                                               ; preds = %46, %37
  %49 = phi i32 [ %44, %46 ], [ %38, %37 ]
  %50 = add nuw i64 %39, 1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %50, i32 0, i32 0, i32 0
  %52 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %51, align 8
  %53 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %52, i64 0, i32 14
  %54 = load i32, i32* %53, align 4
  %55 = icmp slt i32 %54, %49
  br i1 %55, label %368, label %370

56:                                               ; preds = %363, %35
  %57 = phi i32 [ %9, %35 ], [ %364, %363 ]
  %58 = phi i64 [ 1, %35 ], [ %365, %363 ]
  %59 = phi i64 [ %36, %35 ], [ %366, %363 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %58, i32 0, i32 0, i32 0
  %61 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %60, align 8
  %62 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %61, i64 0, i32 14
  %63 = load i32, i32* %62, align 4
  %64 = icmp sgt i32 %63, %57
  br i1 %64, label %65, label %67

65:                                               ; preds = %56
  store i32 %63, i32* %10, align 4
  %66 = trunc i64 %58 to i32
  store i32 %66, i32* %11, align 4
  br label %67

67:                                               ; preds = %65, %56
  %68 = phi i32 [ %63, %65 ], [ %57, %56 ]
  %69 = add nuw i64 %58, 1
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %69, i32 0, i32 0, i32 0
  %71 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %70, align 8
  %72 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %71, i64 0, i32 14
  %73 = load i32, i32* %72, align 4
  %74 = icmp sgt i32 %73, %68
  br i1 %74, label %361, label %363

75:                                               ; preds = %363, %31
  %76 = phi i32 [ %9, %31 ], [ %364, %363 ]
  %77 = phi i64 [ 1, %31 ], [ %365, %363 ]
  %78 = icmp eq i64 %33, 0
  br i1 %78, label %99, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %77, i32 0, i32 0, i32 0
  %81 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %80, align 8
  %82 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %81, i64 0, i32 14
  %83 = load i32, i32* %82, align 4
  %84 = icmp sgt i32 %83, %76
  br i1 %84, label %85, label %99

85:                                               ; preds = %79
  store i32 %83, i32* %10, align 4
  %86 = trunc i64 %77 to i32
  store i32 %86, i32* %11, align 4
  br label %99

87:                                               ; preds = %370, %24
  %88 = phi i32 [ %9, %24 ], [ %371, %370 ]
  %89 = phi i64 [ 1, %24 ], [ %372, %370 ]
  %90 = icmp eq i64 %26, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %89, i32 0, i32 0, i32 0
  %93 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %92, align 8
  %94 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %93, i64 0, i32 14
  %95 = load i32, i32* %94, align 4
  %96 = icmp slt i32 %95, %88
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  store i32 %95, i32* %10, align 4
  %98 = trunc i64 %89 to i32
  store i32 %98, i32* %11, align 4
  br label %99

99:                                               ; preds = %87, %91, %97, %75, %79, %85, %23, %30
  %100 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 7
  %101 = load i8, i8* %100, align 8, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %346, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 5
  %105 = load i32, i32* %104, align 8
  %106 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 11
  %107 = load i32, i32* %106, align 8
  %108 = icmp slt i32 %105, %107
  br i1 %108, label %109, label %111

109:                                              ; preds = %103
  %110 = add nsw i32 %105, 1
  store i32 %110, i32* %104, align 8
  br label %346

111:                                              ; preds = %103
  %112 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = sext i32 %113 to i64
  %115 = icmp eq i32 %113, 0
  br i1 %115, label %231, label %116

116:                                              ; preds = %111
  %117 = icmp eq i64 %2, 0
  %118 = add i64 %2, -8
  %119 = lshr i64 %118, 3
  %120 = add nuw nsw i64 %119, 1
  %121 = icmp ult i64 %2, 8
  %122 = and i64 %2, -8
  %123 = and i64 %120, 1
  %124 = icmp eq i64 %119, 0
  %125 = sub nuw nsw i64 %120, %123
  %126 = icmp eq i64 %123, 0
  %127 = icmp eq i64 %122, %2
  br label %128

128:                                              ; preds = %213, %116
  %129 = phi i64 [ 0, %116 ], [ %217, %213 ]
  %130 = phi i32 [ 0, %116 ], [ %216, %213 ]
  br i1 %117, label %213, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds float*, float** %1, i64 %129
  %133 = load float*, float** %132, align 8
  br i1 %121, label %134, label %137

134:                                              ; preds = %202, %131
  %135 = phi i64 [ 0, %131 ], [ %122, %202 ]
  %136 = phi i32 [ 0, %131 ], [ %210, %202 ]
  br label %219

137:                                              ; preds = %131
  br i1 %124, label %179, label %138

138:                                              ; preds = %137, %138
  %139 = phi i64 [ %176, %138 ], [ 0, %137 ]
  %140 = phi <4 x i32> [ %174, %138 ], [ zeroinitializer, %137 ]
  %141 = phi <4 x i32> [ %175, %138 ], [ zeroinitializer, %137 ]
  %142 = phi i64 [ %177, %138 ], [ %125, %137 ]
  %143 = getelementptr inbounds float, float* %133, i64 %139
  %144 = bitcast float* %143 to <4 x float>*
  %145 = load <4 x float>, <4 x float>* %144, align 4
  %146 = getelementptr inbounds float, float* %143, i64 4
  %147 = bitcast float* %146 to <4 x float>*
  %148 = load <4 x float>, <4 x float>* %147, align 4
  %149 = fcmp oge <4 x float> %145, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %150 = fcmp oge <4 x float> %148, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %151 = fcmp ole <4 x float> %145, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %152 = fcmp ole <4 x float> %148, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %153 = or <4 x i1> %151, %149
  %154 = or <4 x i1> %152, %150
  %155 = zext <4 x i1> %153 to <4 x i32>
  %156 = zext <4 x i1> %154 to <4 x i32>
  %157 = add nuw nsw <4 x i32> %140, %155
  %158 = add nuw nsw <4 x i32> %141, %156
  %159 = or i64 %139, 8
  %160 = getelementptr inbounds float, float* %133, i64 %159
  %161 = bitcast float* %160 to <4 x float>*
  %162 = load <4 x float>, <4 x float>* %161, align 4
  %163 = getelementptr inbounds float, float* %160, i64 4
  %164 = bitcast float* %163 to <4 x float>*
  %165 = load <4 x float>, <4 x float>* %164, align 4
  %166 = fcmp oge <4 x float> %162, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %167 = fcmp oge <4 x float> %165, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %168 = fcmp ole <4 x float> %162, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %169 = fcmp ole <4 x float> %165, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %170 = or <4 x i1> %168, %166
  %171 = or <4 x i1> %169, %167
  %172 = zext <4 x i1> %170 to <4 x i32>
  %173 = zext <4 x i1> %171 to <4 x i32>
  %174 = add nuw nsw <4 x i32> %157, %172
  %175 = add nuw nsw <4 x i32> %158, %173
  %176 = add i64 %139, 16
  %177 = add i64 %142, -2
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %179, label %138, !llvm.loop !5

179:                                              ; preds = %138, %137
  %180 = phi <4 x i32> [ undef, %137 ], [ %174, %138 ]
  %181 = phi <4 x i32> [ undef, %137 ], [ %175, %138 ]
  %182 = phi i64 [ 0, %137 ], [ %176, %138 ]
  %183 = phi <4 x i32> [ zeroinitializer, %137 ], [ %174, %138 ]
  %184 = phi <4 x i32> [ zeroinitializer, %137 ], [ %175, %138 ]
  br i1 %126, label %202, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds float, float* %133, i64 %182
  %187 = bitcast float* %186 to <4 x float>*
  %188 = load <4 x float>, <4 x float>* %187, align 4
  %189 = getelementptr inbounds float, float* %186, i64 4
  %190 = bitcast float* %189 to <4 x float>*
  %191 = load <4 x float>, <4 x float>* %190, align 4
  %192 = fcmp ole <4 x float> %191, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %193 = fcmp oge <4 x float> %191, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %194 = or <4 x i1> %192, %193
  %195 = zext <4 x i1> %194 to <4 x i32>
  %196 = add nuw nsw <4 x i32> %184, %195
  %197 = fcmp ole <4 x float> %188, <float -3.276800e+04, float -3.276800e+04, float -3.276800e+04, float -3.276800e+04>
  %198 = fcmp oge <4 x float> %188, <float 3.276700e+04, float 3.276700e+04, float 3.276700e+04, float 3.276700e+04>
  %199 = or <4 x i1> %197, %198
  %200 = zext <4 x i1> %199 to <4 x i32>
  %201 = add nuw nsw <4 x i32> %183, %200
  br label %202

202:                                              ; preds = %179, %185
  %203 = phi <4 x i32> [ %180, %179 ], [ %201, %185 ]
  %204 = phi <4 x i32> [ %181, %179 ], [ %196, %185 ]
  %205 = add nuw <4 x i32> %204, %203
  %206 = shufflevector <4 x i32> %205, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %207 = add <4 x i32> %205, %206
  %208 = shufflevector <4 x i32> %207, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %209 = add <4 x i32> %207, %208
  %210 = extractelement <4 x i32> %209, i32 0
  br i1 %127, label %213, label %134

211:                                              ; preds = %213
  %212 = sitofp i32 %216 to float
  br label %231

213:                                              ; preds = %219, %202, %128
  %214 = phi i32 [ 0, %128 ], [ %210, %202 ], [ %228, %219 ]
  %215 = icmp slt i32 %130, %214
  %216 = select i1 %215, i32 %214, i32 %130
  %217 = add nuw i64 %129, 1
  %218 = icmp eq i64 %217, %114
  br i1 %218, label %211, label %128

219:                                              ; preds = %134, %219
  %220 = phi i64 [ %229, %219 ], [ %135, %134 ]
  %221 = phi i32 [ %228, %219 ], [ %136, %134 ]
  %222 = getelementptr inbounds float, float* %133, i64 %220
  %223 = load float, float* %222, align 4
  %224 = fcmp oge float %223, 3.276700e+04
  %225 = fcmp ole float %223, -3.276800e+04
  %226 = or i1 %225, %224
  %227 = zext i1 %226 to i32
  %228 = add nuw nsw i32 %221, %227
  %229 = add nuw i64 %220, 1
  %230 = icmp eq i64 %229, %2
  br i1 %230, label %213, label %219, !llvm.loop !7

231:                                              ; preds = %111, %211
  %232 = phi float [ 0.000000e+00, %111 ], [ %212, %211 ]
  %233 = uitofp i64 %2 to float
  %234 = fdiv float %232, %233
  %235 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 10
  %236 = load float, float* %235, align 4
  %237 = fcmp ogt float %234, %236
  br i1 %237, label %238, label %260

238:                                              ; preds = %231
  %239 = icmp eq %"class.std::__1::unique_ptr.54"* %5, %22
  br i1 %239, label %249, label %240

240:                                              ; preds = %238
  %241 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 9
  br label %253

242:                                              ; preds = %253
  %243 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %4, align 8
  %244 = load i8, i8* %12, align 8, !range !2
  %245 = load i64, i64* %16, align 8
  %246 = ptrtoint %"class.std::__1::unique_ptr.54"* %243 to i64
  %247 = sub i64 %245, %246
  %248 = ashr exact i64 %247, 3
  br label %249

249:                                              ; preds = %242, %238
  %250 = phi i64 [ %248, %242 ], [ %20, %238 ]
  %251 = phi i8 [ %244, %242 ], [ %13, %238 ]
  %252 = phi %"class.std::__1::unique_ptr.54"* [ %243, %242 ], [ %5, %238 ]
  store i32 0, i32* %104, align 8
  br label %260

253:                                              ; preds = %240, %253
  %254 = phi %"class.std::__1::unique_ptr.54"* [ %5, %240 ], [ %258, %253 ]
  %255 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %254, i64 0, i32 0, i32 0, i32 0
  %256 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %255, align 8
  %257 = load i32, i32* %241, align 8
  tail call void @_ZN6webrtc7MonoAgc14HandleClippingEi(%"class.webrtc::MonoAgc"* %256, i32 %257)
  %258 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %254, i64 1
  %259 = icmp eq %"class.std::__1::unique_ptr.54"* %258, %22
  br i1 %259, label %242, label %253

260:                                              ; preds = %249, %231
  %261 = phi i64 [ %250, %249 ], [ %20, %231 ]
  %262 = phi i8 [ %251, %249 ], [ %13, %231 ]
  %263 = phi %"class.std::__1::unique_ptr.54"* [ %252, %249 ], [ %5, %231 ]
  %264 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 0, i32 0, i32 0, i32 0
  %265 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %264, align 8
  %266 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %265, i64 0, i32 14
  %267 = load i32, i32* %266, align 4
  store i32 %267, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %268 = icmp eq i8 %262, 0
  %269 = icmp ugt i64 %261, 1
  br i1 %268, label %277, label %270

270:                                              ; preds = %260
  br i1 %269, label %271, label %346

271:                                              ; preds = %270
  %272 = add nsw i64 %261, -1
  %273 = and i64 %272, 1
  %274 = icmp eq i64 %261, 2
  br i1 %274, label %334, label %275

275:                                              ; preds = %271
  %276 = sub nsw i64 %272, %273
  br label %284

277:                                              ; preds = %260
  br i1 %269, label %278, label %346

278:                                              ; preds = %277
  %279 = add nsw i64 %261, -1
  %280 = and i64 %279, 1
  %281 = icmp eq i64 %261, 2
  br i1 %281, label %322, label %282

282:                                              ; preds = %278
  %283 = sub nsw i64 %279, %280
  br label %303

284:                                              ; preds = %356, %275
  %285 = phi i32 [ %267, %275 ], [ %357, %356 ]
  %286 = phi i64 [ 1, %275 ], [ %358, %356 ]
  %287 = phi i64 [ %276, %275 ], [ %359, %356 ]
  %288 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %286, i32 0, i32 0, i32 0
  %289 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %288, align 8
  %290 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %289, i64 0, i32 14
  %291 = load i32, i32* %290, align 4
  %292 = icmp slt i32 %291, %285
  br i1 %292, label %293, label %295

293:                                              ; preds = %284
  store i32 %291, i32* %10, align 4
  %294 = trunc i64 %286 to i32
  store i32 %294, i32* %11, align 4
  br label %295

295:                                              ; preds = %293, %284
  %296 = phi i32 [ %291, %293 ], [ %285, %284 ]
  %297 = add nuw i64 %286, 1
  %298 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %297, i32 0, i32 0, i32 0
  %299 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %298, align 8
  %300 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %299, i64 0, i32 14
  %301 = load i32, i32* %300, align 4
  %302 = icmp slt i32 %301, %296
  br i1 %302, label %354, label %356

303:                                              ; preds = %349, %282
  %304 = phi i32 [ %267, %282 ], [ %350, %349 ]
  %305 = phi i64 [ 1, %282 ], [ %351, %349 ]
  %306 = phi i64 [ %283, %282 ], [ %352, %349 ]
  %307 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %305, i32 0, i32 0, i32 0
  %308 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %307, align 8
  %309 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %308, i64 0, i32 14
  %310 = load i32, i32* %309, align 4
  %311 = icmp sgt i32 %310, %304
  br i1 %311, label %312, label %314

312:                                              ; preds = %303
  store i32 %310, i32* %10, align 4
  %313 = trunc i64 %305 to i32
  store i32 %313, i32* %11, align 4
  br label %314

314:                                              ; preds = %312, %303
  %315 = phi i32 [ %310, %312 ], [ %304, %303 ]
  %316 = add nuw i64 %305, 1
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %316, i32 0, i32 0, i32 0
  %318 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %317, align 8
  %319 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %318, i64 0, i32 14
  %320 = load i32, i32* %319, align 4
  %321 = icmp sgt i32 %320, %315
  br i1 %321, label %347, label %349

322:                                              ; preds = %349, %278
  %323 = phi i32 [ %267, %278 ], [ %350, %349 ]
  %324 = phi i64 [ 1, %278 ], [ %351, %349 ]
  %325 = icmp eq i64 %280, 0
  br i1 %325, label %346, label %326

326:                                              ; preds = %322
  %327 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %324, i32 0, i32 0, i32 0
  %328 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %327, align 8
  %329 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %328, i64 0, i32 14
  %330 = load i32, i32* %329, align 4
  %331 = icmp sgt i32 %330, %323
  br i1 %331, label %332, label %346

332:                                              ; preds = %326
  store i32 %330, i32* %10, align 4
  %333 = trunc i64 %324 to i32
  store i32 %333, i32* %11, align 4
  br label %346

334:                                              ; preds = %356, %271
  %335 = phi i32 [ %267, %271 ], [ %357, %356 ]
  %336 = phi i64 [ 1, %271 ], [ %358, %356 ]
  %337 = icmp eq i64 %273, 0
  br i1 %337, label %346, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %263, i64 %336, i32 0, i32 0, i32 0
  %340 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %339, align 8
  %341 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %340, i64 0, i32 14
  %342 = load i32, i32* %341, align 4
  %343 = icmp slt i32 %342, %335
  br i1 %343, label %344, label %346

344:                                              ; preds = %338
  store i32 %342, i32* %10, align 4
  %345 = trunc i64 %336 to i32
  store i32 %345, i32* %11, align 4
  br label %346

346:                                              ; preds = %334, %338, %344, %322, %326, %332, %277, %270, %99, %109
  ret void

347:                                              ; preds = %314
  store i32 %320, i32* %10, align 4
  %348 = trunc i64 %316 to i32
  store i32 %348, i32* %11, align 4
  br label %349

349:                                              ; preds = %347, %314
  %350 = phi i32 [ %320, %347 ], [ %315, %314 ]
  %351 = add nuw i64 %305, 2
  %352 = add i64 %306, -2
  %353 = icmp eq i64 %352, 0
  br i1 %353, label %322, label %303

354:                                              ; preds = %295
  store i32 %301, i32* %10, align 4
  %355 = trunc i64 %297 to i32
  store i32 %355, i32* %11, align 4
  br label %356

356:                                              ; preds = %354, %295
  %357 = phi i32 [ %301, %354 ], [ %296, %295 ]
  %358 = add nuw i64 %286, 2
  %359 = add i64 %287, -2
  %360 = icmp eq i64 %359, 0
  br i1 %360, label %334, label %284

361:                                              ; preds = %67
  store i32 %73, i32* %10, align 4
  %362 = trunc i64 %69 to i32
  store i32 %362, i32* %11, align 4
  br label %363

363:                                              ; preds = %361, %67
  %364 = phi i32 [ %73, %361 ], [ %68, %67 ]
  %365 = add nuw i64 %58, 2
  %366 = add i64 %59, -2
  %367 = icmp eq i64 %366, 0
  br i1 %367, label %75, label %56

368:                                              ; preds = %48
  store i32 %54, i32* %10, align 4
  %369 = trunc i64 %50 to i32
  store i32 %369, i32* %11, align 4
  br label %370

370:                                              ; preds = %368, %48
  %371 = phi i32 [ %54, %368 ], [ %49, %48 ]
  %372 = add nuw i64 %39, 2
  %373 = add i64 %40, -2
  %374 = icmp eq i64 %373, 0
  br i1 %374, label %87, label %37
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect7ProcessEPKNS_11AudioBufferE(%"class.webrtc::AgcManagerDirect"* nocapture, %"class.webrtc::AudioBuffer"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::array", align 2
  %4 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %7, i64 0, i32 14
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %11, align 4
  %12 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %16 = bitcast %"class.std::__1::unique_ptr.54"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = ptrtoint %"class.std::__1::unique_ptr.54"* %5 to i64
  %19 = sub i64 %17, %18
  %20 = ashr exact i64 %19, 3
  %21 = icmp ugt i64 %20, 1
  br i1 %14, label %29, label %22

22:                                               ; preds = %2
  br i1 %21, label %23, label %98

23:                                               ; preds = %22
  %24 = add nsw i64 %20, -1
  %25 = and i64 %24, 1
  %26 = icmp eq i64 %19, 16
  br i1 %26, label %86, label %27

27:                                               ; preds = %23
  %28 = sub nsw i64 %24, %25
  br label %36

29:                                               ; preds = %2
  br i1 %21, label %30, label %98

30:                                               ; preds = %29
  %31 = add nsw i64 %20, -1
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %19, 16
  br i1 %33, label %74, label %34

34:                                               ; preds = %30
  %35 = sub nsw i64 %31, %32
  br label %55

36:                                               ; preds = %294, %27
  %37 = phi i32 [ %9, %27 ], [ %295, %294 ]
  %38 = phi i64 [ 1, %27 ], [ %296, %294 ]
  %39 = phi i64 [ %28, %27 ], [ %297, %294 ]
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %38, i32 0, i32 0, i32 0
  %41 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %40, align 8
  %42 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %41, i64 0, i32 14
  %43 = load i32, i32* %42, align 4
  %44 = icmp slt i32 %43, %37
  br i1 %44, label %45, label %47

45:                                               ; preds = %36
  store i32 %43, i32* %10, align 4
  %46 = trunc i64 %38 to i32
  store i32 %46, i32* %11, align 4
  br label %47

47:                                               ; preds = %45, %36
  %48 = phi i32 [ %43, %45 ], [ %37, %36 ]
  %49 = add nuw i64 %38, 1
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %49, i32 0, i32 0, i32 0
  %51 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %50, align 8
  %52 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %51, i64 0, i32 14
  %53 = load i32, i32* %52, align 4
  %54 = icmp slt i32 %53, %48
  br i1 %54, label %292, label %294

55:                                               ; preds = %287, %34
  %56 = phi i32 [ %9, %34 ], [ %288, %287 ]
  %57 = phi i64 [ 1, %34 ], [ %289, %287 ]
  %58 = phi i64 [ %35, %34 ], [ %290, %287 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %57, i32 0, i32 0, i32 0
  %60 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %59, align 8
  %61 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %60, i64 0, i32 14
  %62 = load i32, i32* %61, align 4
  %63 = icmp sgt i32 %62, %56
  br i1 %63, label %64, label %66

64:                                               ; preds = %55
  store i32 %62, i32* %10, align 4
  %65 = trunc i64 %57 to i32
  store i32 %65, i32* %11, align 4
  br label %66

66:                                               ; preds = %64, %55
  %67 = phi i32 [ %62, %64 ], [ %56, %55 ]
  %68 = add nuw i64 %57, 1
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %68, i32 0, i32 0, i32 0
  %70 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %69, align 8
  %71 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %70, i64 0, i32 14
  %72 = load i32, i32* %71, align 4
  %73 = icmp sgt i32 %72, %67
  br i1 %73, label %285, label %287

74:                                               ; preds = %287, %30
  %75 = phi i32 [ %9, %30 ], [ %288, %287 ]
  %76 = phi i64 [ 1, %30 ], [ %289, %287 ]
  %77 = icmp eq i64 %32, 0
  br i1 %77, label %98, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %76, i32 0, i32 0, i32 0
  %80 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %79, align 8
  %81 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %80, i64 0, i32 14
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, %75
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  store i32 %82, i32* %10, align 4
  %85 = trunc i64 %76 to i32
  store i32 %85, i32* %11, align 4
  br label %98

86:                                               ; preds = %294, %23
  %87 = phi i32 [ %9, %23 ], [ %295, %294 ]
  %88 = phi i64 [ 1, %23 ], [ %296, %294 ]
  %89 = icmp eq i64 %25, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %5, i64 %88, i32 0, i32 0, i32 0
  %92 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %91, align 8
  %93 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %92, i64 0, i32 14
  %94 = load i32, i32* %93, align 4
  %95 = icmp slt i32 %94, %87
  br i1 %95, label %96, label %98

96:                                               ; preds = %90
  store i32 %94, i32* %10, align 4
  %97 = trunc i64 %88 to i32
  store i32 %97, i32* %11, align 4
  br label %98

98:                                               ; preds = %86, %90, %96, %74, %78, %84, %22, %29
  %99 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 7
  %100 = load i8, i8* %99, align 8, !range !2
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %270, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %104 = bitcast %"class.std::__1::vector.52"* %103 to i64*
  %105 = icmp eq i64 %17, %18
  br i1 %105, label %121, label %106

106:                                              ; preds = %102
  %107 = bitcast %"struct.std::__1::array"* %3 to i8*
  %108 = icmp eq %"class.webrtc::AudioBuffer"* %1, null
  %109 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %110 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"class.webrtc::AudioBuffer", %"class.webrtc::AudioBuffer"* %1, i64 0, i32 9
  %112 = getelementptr inbounds %"struct.std::__1::array", %"struct.std::__1::array"* %3, i64 0, i32 0, i64 0
  %113 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %103, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 2
  %115 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 0
  br label %183

116:                                              ; preds = %229
  %117 = inttoptr i64 %241 to %"class.std::__1::unique_ptr.54"*
  %118 = load i8, i8* %12, align 8, !range !2
  %119 = sub i64 %240, %241
  %120 = ashr exact i64 %119, 3
  br label %121

121:                                              ; preds = %116, %102
  %122 = phi i64 [ %120, %116 ], [ %20, %102 ]
  %123 = phi i8 [ %118, %116 ], [ %13, %102 ]
  %124 = phi %"class.std::__1::unique_ptr.54"* [ %117, %116 ], [ %5, %102 ]
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %125, align 8
  %127 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %126, i64 0, i32 14
  %128 = load i32, i32* %127, align 4
  store i32 %128, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %129 = icmp eq i8 %123, 0
  %130 = icmp ugt i64 %122, 1
  br i1 %129, label %138, label %131

131:                                              ; preds = %121
  br i1 %130, label %132, label %270

132:                                              ; preds = %131
  %133 = add nsw i64 %122, -1
  %134 = and i64 %133, 1
  %135 = icmp eq i64 %122, 2
  br i1 %135, label %258, label %136

136:                                              ; preds = %132
  %137 = sub nsw i64 %133, %134
  br label %145

138:                                              ; preds = %121
  br i1 %130, label %139, label %270

139:                                              ; preds = %138
  %140 = add nsw i64 %122, -1
  %141 = and i64 %140, 1
  %142 = icmp eq i64 %122, 2
  br i1 %142, label %246, label %143

143:                                              ; preds = %139
  %144 = sub nsw i64 %140, %141
  br label %164

145:                                              ; preds = %280, %136
  %146 = phi i32 [ %128, %136 ], [ %281, %280 ]
  %147 = phi i64 [ 1, %136 ], [ %282, %280 ]
  %148 = phi i64 [ %137, %136 ], [ %283, %280 ]
  %149 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %147, i32 0, i32 0, i32 0
  %150 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %149, align 8
  %151 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %150, i64 0, i32 14
  %152 = load i32, i32* %151, align 4
  %153 = icmp slt i32 %152, %146
  br i1 %153, label %154, label %156

154:                                              ; preds = %145
  store i32 %152, i32* %10, align 4
  %155 = trunc i64 %147 to i32
  store i32 %155, i32* %11, align 4
  br label %156

156:                                              ; preds = %154, %145
  %157 = phi i32 [ %152, %154 ], [ %146, %145 ]
  %158 = add nuw i64 %147, 1
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %158, i32 0, i32 0, i32 0
  %160 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %159, align 8
  %161 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %160, i64 0, i32 14
  %162 = load i32, i32* %161, align 4
  %163 = icmp slt i32 %162, %157
  br i1 %163, label %278, label %280

164:                                              ; preds = %273, %143
  %165 = phi i32 [ %128, %143 ], [ %274, %273 ]
  %166 = phi i64 [ 1, %143 ], [ %275, %273 ]
  %167 = phi i64 [ %144, %143 ], [ %276, %273 ]
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %166, i32 0, i32 0, i32 0
  %169 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %168, align 8
  %170 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %169, i64 0, i32 14
  %171 = load i32, i32* %170, align 4
  %172 = icmp sgt i32 %171, %165
  br i1 %172, label %173, label %175

173:                                              ; preds = %164
  store i32 %171, i32* %10, align 4
  %174 = trunc i64 %166 to i32
  store i32 %174, i32* %11, align 4
  br label %175

175:                                              ; preds = %173, %164
  %176 = phi i32 [ %171, %173 ], [ %165, %164 ]
  %177 = add nuw i64 %166, 1
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %177, i32 0, i32 0, i32 0
  %179 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %178, align 8
  %180 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %179, i64 0, i32 14
  %181 = load i32, i32* %180, align 4
  %182 = icmp sgt i32 %181, %176
  br i1 %182, label %271, label %273

183:                                              ; preds = %106, %229
  %184 = phi %"class.std::__1::unique_ptr.54"* [ %5, %106 ], [ %245, %229 ]
  %185 = phi i64 [ 0, %106 ], [ %239, %229 ]
  call void @llvm.lifetime.start.p0i8(i64 7680, i8* nonnull %107) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %107, i8 -86, i64 7680, i1 false)
  br i1 %108, label %203, label %186

186:                                              ; preds = %183
  %187 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %109, align 8
  %188 = icmp eq %"class.webrtc::ChannelBuffer"* %187, null
  br i1 %188, label %189, label %191

189:                                              ; preds = %186
  %190 = load %"class.webrtc::ChannelBuffer"*, %"class.webrtc::ChannelBuffer"** %110, align 8
  br label %191

191:                                              ; preds = %186, %189
  %192 = phi %"class.webrtc::ChannelBuffer"* [ %190, %189 ], [ %187, %186 ]
  %193 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %192, i64 0, i32 7
  %194 = load i64, i64* %193, align 8
  %195 = mul i64 %194, %185
  %196 = getelementptr inbounds %"class.webrtc::ChannelBuffer", %"class.webrtc::ChannelBuffer"* %192, i64 0, i32 2, i32 0, i32 0, i32 0
  %197 = load float**, float*** %196, align 8
  %198 = getelementptr inbounds float*, float** %197, i64 %195
  %199 = load float*, float** %198, align 8
  %200 = load i64, i64* %111, align 8
  call void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float* %199, i64 %200, i16* nonnull %112) #17
  %201 = load i64, i64* %111, align 8
  %202 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %113, align 8
  br label %203

203:                                              ; preds = %183, %191
  %204 = phi %"class.std::__1::unique_ptr.54"* [ %202, %191 ], [ %184, %183 ]
  %205 = phi i16* [ %112, %191 ], [ null, %183 ]
  %206 = phi i64 [ %201, %191 ], [ 320, %183 ]
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %204, i64 %185, i32 0, i32 0, i32 0
  %208 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %207, align 8
  %209 = shl i64 %206, 32
  %210 = ashr exact i64 %209, 32
  %211 = load i32, i32* %114, align 4
  %212 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %208, i64 0, i32 15, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %212, align 4
  %213 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %208, i64 0, i32 10
  %214 = load i8, i8* %213, align 1, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %203
  store i8 0, i8* %213, align 1
  %217 = call i32 @_ZN6webrtc7MonoAgc19CheckVolumeAndResetEv(%"class.webrtc::MonoAgc"* %208) #17
  br label %218

218:                                              ; preds = %216, %203
  %219 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %208, i64 0, i32 2, i32 0, i32 0, i32 0
  %220 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %219, align 8
  %221 = bitcast %"class.webrtc::Agc"* %220 to void (%"class.webrtc::Agc"*, i16*, i64, i32)***
  %222 = load void (%"class.webrtc::Agc"*, i16*, i64, i32)**, void (%"class.webrtc::Agc"*, i16*, i64, i32)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.webrtc::Agc"*, i16*, i64, i32)*, void (%"class.webrtc::Agc"*, i16*, i64, i32)** %222, i64 2
  %224 = load void (%"class.webrtc::Agc"*, i16*, i64, i32)*, void (%"class.webrtc::Agc"*, i16*, i64, i32)** %223, align 8
  call void %224(%"class.webrtc::Agc"* %220, i16* %205, i64 %210, i32 %211) #17
  call void @_ZN6webrtc7MonoAgc10UpdateGainEv(%"class.webrtc::MonoAgc"* %208) #17
  %225 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %208, i64 0, i32 1
  %226 = load i8, i8* %225, align 4, !range !2
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %229

228:                                              ; preds = %218
  call void @_ZN6webrtc7MonoAgc16UpdateCompressorEv(%"class.webrtc::MonoAgc"* %208) #17
  br label %229

229:                                              ; preds = %218, %228
  %230 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %113, align 8
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %230, i64 %185, i32 0, i32 0, i32 0
  %232 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %231, align 8
  %233 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %232, i64 0, i32 15
  %234 = bitcast %"class.absl::optional"* %233 to i64*
  %235 = load i64, i64* %234, align 8
  %236 = load %"class.absl::optional"*, %"class.absl::optional"** %115, align 8
  %237 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %236, i64 %185
  %238 = bitcast %"class.absl::optional"* %237 to i64*
  store i64 %235, i64* %238, align 4
  call void @llvm.lifetime.end.p0i8(i64 7680, i8* nonnull %107) #17
  %239 = add nuw i64 %185, 1
  %240 = load i64, i64* %16, align 8
  %241 = load i64, i64* %104, align 8
  %242 = sub i64 %240, %241
  %243 = ashr exact i64 %242, 3
  %244 = icmp ult i64 %239, %243
  %245 = inttoptr i64 %241 to %"class.std::__1::unique_ptr.54"*
  br i1 %244, label %183, label %116

246:                                              ; preds = %273, %139
  %247 = phi i32 [ %128, %139 ], [ %274, %273 ]
  %248 = phi i64 [ 1, %139 ], [ %275, %273 ]
  %249 = icmp eq i64 %141, 0
  br i1 %249, label %270, label %250

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %248, i32 0, i32 0, i32 0
  %252 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %251, align 8
  %253 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %252, i64 0, i32 14
  %254 = load i32, i32* %253, align 4
  %255 = icmp sgt i32 %254, %247
  br i1 %255, label %256, label %270

256:                                              ; preds = %250
  store i32 %254, i32* %10, align 4
  %257 = trunc i64 %248 to i32
  store i32 %257, i32* %11, align 4
  br label %270

258:                                              ; preds = %280, %132
  %259 = phi i32 [ %128, %132 ], [ %281, %280 ]
  %260 = phi i64 [ 1, %132 ], [ %282, %280 ]
  %261 = icmp eq i64 %134, 0
  br i1 %261, label %270, label %262

262:                                              ; preds = %258
  %263 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %124, i64 %260, i32 0, i32 0, i32 0
  %264 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %263, align 8
  %265 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %264, i64 0, i32 14
  %266 = load i32, i32* %265, align 4
  %267 = icmp slt i32 %266, %259
  br i1 %267, label %268, label %270

268:                                              ; preds = %262
  store i32 %266, i32* %10, align 4
  %269 = trunc i64 %260 to i32
  store i32 %269, i32* %11, align 4
  br label %270

270:                                              ; preds = %258, %262, %268, %246, %250, %256, %138, %131, %98
  ret void

271:                                              ; preds = %175
  store i32 %181, i32* %10, align 4
  %272 = trunc i64 %177 to i32
  store i32 %272, i32* %11, align 4
  br label %273

273:                                              ; preds = %271, %175
  %274 = phi i32 [ %181, %271 ], [ %176, %175 ]
  %275 = add nuw i64 %166, 2
  %276 = add i64 %167, -2
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %246, label %164

278:                                              ; preds = %156
  store i32 %162, i32* %10, align 4
  %279 = trunc i64 %158 to i32
  store i32 %279, i32* %11, align 4
  br label %280

280:                                              ; preds = %278, %156
  %281 = phi i32 [ %162, %278 ], [ %157, %156 ]
  %282 = add nuw i64 %147, 2
  %283 = add i64 %148, -2
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %258, label %145

285:                                              ; preds = %66
  store i32 %72, i32* %10, align 4
  %286 = trunc i64 %68 to i32
  store i32 %286, i32* %11, align 4
  br label %287

287:                                              ; preds = %285, %66
  %288 = phi i32 [ %72, %285 ], [ %67, %66 ]
  %289 = add nuw i64 %57, 2
  %290 = add i64 %58, -2
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %74, label %55

292:                                              ; preds = %47
  store i32 %53, i32* %10, align 4
  %293 = trunc i64 %49 to i32
  store i32 %293, i32* %11, align 4
  br label %294

294:                                              ; preds = %292, %47
  %295 = phi i32 [ %53, %292 ], [ %48, %47 ]
  %296 = add nuw i64 %38, 2
  %297 = add i64 %39, -2
  %298 = icmp eq i64 %297, 0
  br i1 %298, label %86, label %36
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN6webrtc13FloatS16ToS16EPKfmPs(float*, i64, i16*) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZN6webrtc16AgcManagerDirect24GetDigitalComressionGainEv(%"class.webrtc::AgcManagerDirect"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = sext i32 %3 to i64
  %5 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 13, i32 0, i32 0
  %6 = load %"class.absl::optional"*, %"class.absl::optional"** %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 %4
  %8 = bitcast %"class.absl::optional"* %7 to i64*
  %9 = load i64, i64* %8, align 4
  ret i64 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect29HandleCaptureOutputUsedChangeEb(%"class.webrtc::AgcManagerDirect"* nocapture, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %5 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.54"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.52"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %7, %9
  br i1 %10, label %13, label %11

11:                                               ; preds = %2
  %12 = zext i1 %1 to i32
  br label %15

13:                                               ; preds = %28, %2
  %14 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 7
  store i8 %3, i8* %14, align 8
  ret void

15:                                               ; preds = %11, %28
  %16 = phi i64 [ %9, %11 ], [ %31, %28 ]
  %17 = phi i64 [ 0, %11 ], [ %29, %28 ]
  %18 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.54"*
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %18, i64 %17, i32 0, i32 0, i32 0
  %20 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %19, align 8
  %21 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %20, i64 0, i32 9
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %23, %12
  br i1 %24, label %28, label %25

25:                                               ; preds = %15
  store i8 %3, i8* %21, align 8
  br i1 %1, label %26, label %28

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %20, i64 0, i32 10
  store i8 1, i8* %27, align 1
  br label %28

28:                                               ; preds = %15, %25, %26
  %29 = add nuw i64 %17, 1
  %30 = load i64, i64* %6, align 8
  %31 = load i64, i64* %8, align 8
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = icmp ult i64 %29, %33
  br i1 %34, label %15, label %13
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK6webrtc16AgcManagerDirect17voice_probabilityEv(%"class.webrtc::AgcManagerDirect"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.54"*, %"class.std::__1::unique_ptr.54"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.54"* %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %9, %1
  %8 = phi float [ 0.000000e+00, %1 ], [ %22, %9 ]
  ret float %8

9:                                                ; preds = %1, %9
  %10 = phi float [ %22, %9 ], [ 0.000000e+00, %1 ]
  %11 = phi %"class.std::__1::unique_ptr.54"* [ %23, %9 ], [ %3, %1 ]
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %12, align 8
  %14 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.webrtc::Agc"*, %"class.webrtc::Agc"** %14, align 8
  %16 = bitcast %"class.webrtc::Agc"* %15 to float (%"class.webrtc::Agc"*)***
  %17 = load float (%"class.webrtc::Agc"*)**, float (%"class.webrtc::Agc"*)*** %16, align 8
  %18 = getelementptr inbounds float (%"class.webrtc::Agc"*)*, float (%"class.webrtc::Agc"*)** %17, i64 7
  %19 = load float (%"class.webrtc::Agc"*)*, float (%"class.webrtc::Agc"*)** %18, align 8
  %20 = tail call float %19(%"class.webrtc::Agc"* %15) #17
  %21 = fcmp olt float %10, %20
  %22 = select i1 %21, float %20, float %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %11, i64 1
  %24 = icmp eq %"class.std::__1::unique_ptr.54"* %23, %5
  br i1 %24, label %7, label %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN6webrtc16AgcManagerDirect23set_stream_analog_levelEi(%"class.webrtc::AgcManagerDirect"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12
  %4 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 12, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.54"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.52"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %6, %8
  %10 = inttoptr i64 %8 to %"class.std::__1::unique_ptr.54"*
  br i1 %9, label %13, label %106

11:                                               ; preds = %106
  %12 = inttoptr i64 %114 to %"class.std::__1::unique_ptr.54"*
  br label %13

13:                                               ; preds = %11, %2
  %14 = phi i64 [ %6, %2 ], [ %113, %11 ]
  %15 = phi %"class.std::__1::unique_ptr.54"* [ %10, %2 ], [ %12, %11 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %16, align 8
  %18 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %17, i64 0, i32 14
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 6
  store i32 %19, i32* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 8
  store i32 0, i32* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::AgcManagerDirect", %"class.webrtc::AgcManagerDirect"* %0, i64 0, i32 1
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  %25 = ptrtoint %"class.std::__1::unique_ptr.54"* %15 to i64
  %26 = sub i64 %14, %25
  %27 = ashr exact i64 %26, 3
  %28 = icmp ugt i64 %27, 1
  br i1 %24, label %36, label %29

29:                                               ; preds = %13
  br i1 %28, label %30, label %105

30:                                               ; preds = %29
  %31 = add nsw i64 %27, -1
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %26, 16
  br i1 %33, label %93, label %34

34:                                               ; preds = %30
  %35 = sub nsw i64 %31, %32
  br label %43

36:                                               ; preds = %13
  br i1 %28, label %37, label %105

37:                                               ; preds = %36
  %38 = add nsw i64 %27, -1
  %39 = and i64 %38, 1
  %40 = icmp eq i64 %26, 16
  br i1 %40, label %81, label %41

41:                                               ; preds = %37
  %42 = sub nsw i64 %38, %39
  br label %62

43:                                               ; preds = %128, %34
  %44 = phi i32 [ %19, %34 ], [ %129, %128 ]
  %45 = phi i64 [ 1, %34 ], [ %130, %128 ]
  %46 = phi i64 [ %35, %34 ], [ %131, %128 ]
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %45, i32 0, i32 0, i32 0
  %48 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %47, align 8
  %49 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %48, i64 0, i32 14
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, %44
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  store i32 %50, i32* %20, align 4
  %53 = trunc i64 %45 to i32
  store i32 %53, i32* %21, align 4
  br label %54

54:                                               ; preds = %52, %43
  %55 = phi i32 [ %50, %52 ], [ %44, %43 ]
  %56 = add nuw i64 %45, 1
  %57 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %56, i32 0, i32 0, i32 0
  %58 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %57, align 8
  %59 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %58, i64 0, i32 14
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, %55
  br i1 %61, label %126, label %128

62:                                               ; preds = %121, %41
  %63 = phi i32 [ %19, %41 ], [ %122, %121 ]
  %64 = phi i64 [ 1, %41 ], [ %123, %121 ]
  %65 = phi i64 [ %42, %41 ], [ %124, %121 ]
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %64, i32 0, i32 0, i32 0
  %67 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %66, align 8
  %68 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %67, i64 0, i32 14
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %69, %63
  br i1 %70, label %71, label %73

71:                                               ; preds = %62
  store i32 %69, i32* %20, align 4
  %72 = trunc i64 %64 to i32
  store i32 %72, i32* %21, align 4
  br label %73

73:                                               ; preds = %71, %62
  %74 = phi i32 [ %69, %71 ], [ %63, %62 ]
  %75 = add nuw i64 %64, 1
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %75, i32 0, i32 0, i32 0
  %77 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %76, align 8
  %78 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %77, i64 0, i32 14
  %79 = load i32, i32* %78, align 4
  %80 = icmp sgt i32 %79, %74
  br i1 %80, label %119, label %121

81:                                               ; preds = %121, %37
  %82 = phi i32 [ %19, %37 ], [ %122, %121 ]
  %83 = phi i64 [ 1, %37 ], [ %123, %121 ]
  %84 = icmp eq i64 %39, 0
  br i1 %84, label %105, label %85

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %83, i32 0, i32 0, i32 0
  %87 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %86, align 8
  %88 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %87, i64 0, i32 14
  %89 = load i32, i32* %88, align 4
  %90 = icmp sgt i32 %89, %82
  br i1 %90, label %91, label %105

91:                                               ; preds = %85
  store i32 %89, i32* %20, align 4
  %92 = trunc i64 %83 to i32
  store i32 %92, i32* %21, align 4
  br label %105

93:                                               ; preds = %128, %30
  %94 = phi i32 [ %19, %30 ], [ %129, %128 ]
  %95 = phi i64 [ 1, %30 ], [ %130, %128 ]
  %96 = icmp eq i64 %32, 0
  br i1 %96, label %105, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %15, i64 %95, i32 0, i32 0, i32 0
  %99 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %98, align 8
  %100 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %99, i64 0, i32 14
  %101 = load i32, i32* %100, align 4
  %102 = icmp slt i32 %101, %94
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  store i32 %101, i32* %20, align 4
  %104 = trunc i64 %95 to i32
  store i32 %104, i32* %21, align 4
  br label %105

105:                                              ; preds = %93, %97, %103, %81, %85, %91, %29, %36
  ret void

106:                                              ; preds = %2, %106
  %107 = phi %"class.std::__1::unique_ptr.54"* [ %118, %106 ], [ %10, %2 ]
  %108 = phi i64 [ %112, %106 ], [ 0, %2 ]
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54"* %107, i64 %108, i32 0, i32 0, i32 0
  %110 = load %"class.webrtc::MonoAgc"*, %"class.webrtc::MonoAgc"** %109, align 8
  %111 = getelementptr inbounds %"class.webrtc::MonoAgc", %"class.webrtc::MonoAgc"* %110, i64 0, i32 14
  store i32 %1, i32* %111, align 4
  %112 = add nuw i64 %108, 1
  %113 = load i64, i64* %5, align 8
  %114 = load i64, i64* %7, align 8
  %115 = sub i64 %113, %114
  %116 = ashr exact i64 %115, 3
  %117 = icmp ult i64 %112, %116
  %118 = inttoptr i64 %114 to %"class.std::__1::unique_ptr.54"*
  br i1 %117, label %106, label %11

119:                                              ; preds = %73
  store i32 %79, i32* %20, align 4
  %120 = trunc i64 %75 to i32
  store i32 %120, i32* %21, align 4
  br label %121

121:                                              ; preds = %119, %73
  %122 = phi i32 [ %79, %119 ], [ %74, %73 ]
  %123 = add nuw i64 %64, 2
  %124 = add i64 %65, -2
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %81, label %62

126:                                              ; preds = %54
  store i32 %60, i32* %20, align 4
  %127 = trunc i64 %56 to i32
  store i32 %127, i32* %21, align 4
  br label %128

128:                                              ; preds = %126, %54
  %129 = phi i32 [ %60, %126 ], [ %55, %54 ]
  %130 = add nuw i64 %45, 2
  %131 = add i64 %46, -2
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %93, label %43
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc11field_trial9IsEnabledEPKc(i8*) local_unnamed_addr #9 comdat {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #17
  %5 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #17
  %6 = tail call i64 @strlen(i8* %0) #17
  %7 = icmp ugt i64 %6, -17
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast %"class.std::__1::basic_string"* %3 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %9) #18
  unreachable

10:                                               ; preds = %1
  %11 = icmp ult i64 %6, 23
  br i1 %11, label %20, label %12

12:                                               ; preds = %10
  %13 = add nuw i64 %6, 16
  %14 = and i64 %13, -16
  %15 = tail call i8* @_Znwm(i64 %14) #16
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = or i64 %14, -9223372036854775808
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %6, i64* %19, align 8
  br label %25

20:                                               ; preds = %10
  %21 = trunc i64 %6 to i8
  %22 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  store i8 %21, i8* %23, align 1
  %24 = icmp eq i64 %6, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20, %12
  %26 = phi i8* [ %15, %12 ], [ %5, %20 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %26, i8* align 1 %0, i64 %6, i1 false) #17
  br label %27

27:                                               ; preds = %20, %25
  %28 = phi i8* [ %5, %20 ], [ %26, %25 ]
  %29 = getelementptr inbounds i8, i8* %28, i64 %6
  store i8 0, i8* %29, align 1
  call void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #17
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %32 to i64
  %40 = select i1 %33, i64 %38, i64 %39
  %41 = getelementptr inbounds i8, i8* %36, i64 %40
  %42 = ptrtoint i8* %41 to i64
  %43 = ptrtoint i8* %36 to i64
  %44 = icmp slt i64 %40, 7
  br i1 %44, label %63, label %45

45:                                               ; preds = %27, %58
  %46 = phi i64 [ %61, %58 ], [ %40, %27 ]
  %47 = phi i8* [ %59, %58 ], [ %36, %27 ]
  %48 = add nsw i64 %46, -6
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %63, label %50

50:                                               ; preds = %45
  %51 = call i8* @memchr(i8* %47, i32 69, i64 %48) #17
  %52 = icmp eq i8* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %50
  %54 = call i32 @bcmp(i8* nonnull %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7) #17
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %53
  %57 = ptrtoint i8* %51 to i64
  br label %63

58:                                               ; preds = %53
  %59 = getelementptr inbounds i8, i8* %51, i64 1
  %60 = ptrtoint i8* %59 to i64
  %61 = sub i64 %42, %60
  %62 = icmp slt i64 %61, 7
  br i1 %62, label %63, label %45

63:                                               ; preds = %58, %50, %45, %56, %27
  %64 = phi i64 [ %42, %27 ], [ %57, %56 ], [ %42, %45 ], [ %42, %50 ], [ %42, %58 ]
  %65 = phi i8* [ %41, %27 ], [ %51, %56 ], [ %41, %45 ], [ %41, %50 ], [ %41, %58 ]
  %66 = icmp ne i8* %65, %41
  %67 = icmp eq i64 %64, %43
  %68 = and i1 %67, %66
  br i1 %33, label %69, label %70

69:                                               ; preds = %63
  call void @_ZdlPv(i8* %35) #16
  br label %70

70:                                               ; preds = %63, %69
  %71 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #16
  br label %78

78:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #17
  ret i1 %68
}

declare void @_ZN6webrtc11field_trial12FindFullNameERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #10

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare i32 @__isoc99_sscanf(i8* nocapture readonly, i8* nocapture readonly, ...) local_unnamed_addr #12

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #17
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #17
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #17
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #17
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #17
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #17
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #17
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #17
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #17
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #17
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #16
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #17
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #17
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #16
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #17
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #17
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare void @_ZN6webrtc3AgcC1Ev(%"class.webrtc::Agc"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: nounwind
declare void @_ZN6webrtc13ApmDataDumperD1Ev(%"class.webrtc::ApmDataDumper"*) unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { builtin nounwind }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.isvectorized", i32 1}
!7 = distinct !{!7, !8, !6}
!8 = !{!"llvm.loop.unroll.runtime.disable"}
