; ModuleID = '../../third_party/skia/src/core/SkStrokerPriv.cpp'
source_filename = "../../third_party/skia/src/core/SkStrokerPriv.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkConic = type { [3 x %struct.SkPoint], float }

@_ZZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapEE8gCappers = internal unnamed_addr constant [3 x void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*] [void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZL10ButtCapperP6SkPathRK7SkPointS3_S3_S0_, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZL11RoundCapperP6SkPathRK7SkPointS3_S3_S0_, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZL12SquareCapperP6SkPathRK7SkPointS3_S3_S0_], align 16
@_ZZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinEE8gJoiners = internal unnamed_addr constant [3 x void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*] [void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZL11MiterJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZL11RoundJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZL11BluntJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb], align 16

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* @_ZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapE(i32) local_unnamed_addr #0 align 2 {
  %2 = zext i32 %0 to i64
  %3 = getelementptr inbounds [3 x void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*], [3 x void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*]* @_ZZN13SkStrokerPriv10CapFactoryEN7SkPaint3CapEE8gCappers, i64 0, i64 %2
  %4 = load void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)*, void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)** %3, align 8
  ret void (%class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, %class.SkPath*)* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL10ButtCapperP6SkPathRK7SkPointS3_S3_S0_(%class.SkPath*, %struct.SkPoint* nocapture readnone dereferenceable(8), %struct.SkPoint* nocapture readnone dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkPath* nocapture readnone) #1 {
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %7, float %9) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11RoundCapperP6SkPathRK7SkPointS3_S3_S0_(%class.SkPath*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkPath* nocapture readnone) #2 {
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %11 = load float, float* %10, align 4
  %12 = fsub float %11, %9
  %13 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %14 = load float, float* %13, align 4
  %15 = fadd float %7, %14
  %16 = fadd float %12, %7
  %17 = fadd float %9, %15
  %18 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %16, float %17, float %12, float %15, float 0x3FE6A09E60000000) #7
  %19 = load float, float* %6, align 4
  %20 = fsub float %12, %19
  %21 = load float, float* %8, align 4
  %22 = fsub float %15, %21
  %23 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %26 = load float, float* %25, align 4
  %27 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %0, float %20, float %22, float %24, float %26, float 0x3FE6A09E60000000) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL12SquareCapperP6SkPathRK7SkPointS3_S3_S0_(%class.SkPath*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %class.SkPath* readnone) #1 {
  %6 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 0
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %2, i64 0, i32 1
  %9 = load float, float* %8, align 4
  %10 = icmp eq %class.SkPath* %4, null
  %11 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %12 = load float, float* %11, align 4
  %13 = fadd float %12, %7
  %14 = fsub float %13, %9
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %9, %16
  %18 = fadd float %7, %17
  br i1 %10, label %29, label %19

19:                                               ; preds = %5
  tail call void @_ZN6SkPath9setLastPtEff(%class.SkPath* %0, float %14, float %18) #7
  %20 = load float, float* %11, align 4
  %21 = load float, float* %6, align 4
  %22 = fsub float %20, %21
  %23 = fsub float %22, %9
  %24 = load float, float* %15, align 4
  %25 = load float, float* %8, align 4
  %26 = fsub float %24, %25
  %27 = fadd float %7, %26
  %28 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %23, float %27) #7
  br label %45

29:                                               ; preds = %5
  %30 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %14, float %18) #7
  %31 = load float, float* %11, align 4
  %32 = load float, float* %6, align 4
  %33 = fsub float %31, %32
  %34 = fsub float %33, %9
  %35 = load float, float* %15, align 4
  %36 = load float, float* %8, align 4
  %37 = fsub float %35, %36
  %38 = fadd float %7, %37
  %39 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %34, float %38) #7
  %40 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %43 = load float, float* %42, align 4
  %44 = tail call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %0, float %41, float %43) #7
  br label %45

45:                                               ; preds = %29, %19
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* @_ZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinE(i8 zeroext) local_unnamed_addr #0 align 2 {
  %2 = zext i8 %0 to i64
  %3 = getelementptr inbounds [3 x void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*], [3 x void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*]* @_ZZN13SkStrokerPriv11JoinFactoryEN7SkPaint4JoinEE8gJoiners, i64 0, i64 %2
  %4 = load void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)*, void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)** %3, align 8
  ret void (%class.SkPath*, %class.SkPath*, %struct.SkPoint*, %struct.SkPoint*, %struct.SkPoint*, float, float, i1, i1)* %4
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11MiterJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb(%class.SkPath*, %class.SkPath*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), float, float, i1 zeroext, i1 zeroext) #2 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkPoint*
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %struct.SkPoint*
  %14 = ptrtoint %class.SkPath* %0 to i64
  %15 = ptrtoint %class.SkPath* %1 to i64
  %16 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = bitcast %struct.SkPoint* %4 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fmul <2 x float> %17, %19
  %21 = extractelement <2 x float> %20, i32 0
  %22 = extractelement <2 x float> %20, i32 1
  %23 = fadd float %21, %22
  %24 = fcmp ult float %23, 0.000000e+00
  br i1 %24, label %29, label %25

25:                                               ; preds = %9
  %26 = fsub float 1.000000e+00, %23
  %27 = tail call float @llvm.fabs.f32(float %26) #7
  %28 = fcmp ugt float %27, 0x3F30000000000000
  br i1 %28, label %35, label %34

29:                                               ; preds = %9
  %30 = fadd float %23, 1.000000e+00
  %31 = tail call float @llvm.fabs.f32(float %30) #7
  %32 = fcmp ugt float %31, 0x3F30000000000000
  %33 = zext i1 %32 to i32
  br label %35

34:                                               ; preds = %25
  br label %35

35:                                               ; preds = %25, %34, %29
  %36 = phi i32 [ 2, %25 ], [ %33, %29 ], [ 3, %34 ]
  %37 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #7
  %38 = bitcast i64* %10 to float*
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  %40 = bitcast %struct.SkPoint* %4 to i64*
  %41 = load i64, i64* %40, align 4
  store i64 %41, i64* %10, align 8
  %42 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = getelementptr inbounds <2 x float>, <2 x float>* %12, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %43, align 8
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %44, align 4
  %45 = lshr i64 %41, 32
  %46 = insertelement <2 x i64> undef, i64 %41, i32 0
  %47 = insertelement <2 x i64> %46, i64 %45, i32 1
  %48 = trunc <2 x i64> %47 to <2 x i32>
  %49 = bitcast <2 x i32> %48 to <2 x float>
  switch i32 %36, label %50 [
    i32 3, label %152
    i32 0, label %121
  ]

50:                                               ; preds = %35
  %51 = shufflevector <2 x float> %49, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %52 = fmul <2 x float> %17, %51
  %53 = extractelement <2 x float> %52, i32 0
  %54 = extractelement <2 x float> %52, i32 1
  %55 = fcmp ogt float %53, %54
  br i1 %55, label %61, label %56

56:                                               ; preds = %50
  %57 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %17
  %58 = fsub <2 x float> <float -0.000000e+00, float -0.000000e+00>, %49
  %59 = extractelement <2 x float> %58, i32 0
  store float %59, float* %38, align 8
  %60 = extractelement <2 x float> %58, i32 1
  store float %60, float* %39, align 4
  br label %61

61:                                               ; preds = %50, %56
  %62 = phi i64 [ %15, %50 ], [ %14, %56 ]
  %63 = phi i64 [ %14, %50 ], [ %15, %56 ]
  %64 = phi <2 x float> [ %49, %50 ], [ %58, %56 ]
  %65 = phi <2 x float> [ %17, %50 ], [ %57, %56 ]
  %66 = fcmp oeq float %23, 0.000000e+00
  %67 = fcmp ole float %6, 0x3FE6A09E60000000
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %76

69:                                               ; preds = %61
  %70 = fadd <2 x float> %64, %65
  %71 = insertelement <2 x float> undef, float %5, i32 0
  %72 = shufflevector <2 x float> %71, <2 x float> undef, <2 x i32> zeroinitializer
  %73 = fmul <2 x float> %70, %72
  %74 = extractelement <2 x float> %73, i32 0
  %75 = extractelement <2 x float> %73, i32 1
  store <2 x float> %73, <2 x float>* %12, align 8
  br label %107

76:                                               ; preds = %61
  %77 = fadd float %23, 1.000000e+00
  %78 = fmul float %77, 5.000000e-01
  %79 = tail call float @sqrtf(float %78) #7
  %80 = fcmp olt float %79, %6
  br i1 %80, label %121, label %81

81:                                               ; preds = %76
  %82 = icmp eq i32 %36, 1
  br i1 %82, label %83, label %93

83:                                               ; preds = %81
  %84 = extractelement <2 x float> %64, i32 1
  %85 = extractelement <2 x float> %65, i32 1
  %86 = fsub float %84, %85
  %87 = extractelement <2 x float> %64, i32 0
  %88 = extractelement <2 x float> %65, i32 0
  %89 = fsub float %88, %87
  store float %86, float* %43, align 8
  store float %89, float* %44, align 4
  br i1 %55, label %102, label %90

90:                                               ; preds = %83
  %91 = fsub float -0.000000e+00, %86
  store float %91, float* %43, align 8
  %92 = fsub float -0.000000e+00, %89
  br label %100

93:                                               ; preds = %81
  %94 = extractelement <2 x float> %64, i32 0
  %95 = extractelement <2 x float> %65, i32 0
  %96 = fadd float %94, %95
  %97 = extractelement <2 x float> %64, i32 1
  %98 = extractelement <2 x float> %65, i32 1
  %99 = fadd float %97, %98
  store float %96, float* %43, align 8
  br label %100

100:                                              ; preds = %93, %90
  %101 = phi float [ %92, %90 ], [ %99, %93 ]
  store float %101, float* %44, align 4
  br label %102

102:                                              ; preds = %100, %83
  %103 = fdiv float %5, %79
  %104 = call zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint* nonnull %13, float %103) #7
  %105 = load float, float* %43, align 8
  %106 = load float, float* %44, align 4
  br label %107

107:                                              ; preds = %102, %69
  %108 = phi float [ %106, %102 ], [ %75, %69 ]
  %109 = phi float [ %105, %102 ], [ %74, %69 ]
  %110 = inttoptr i64 %63 to %class.SkPath*
  %111 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %112 = load float, float* %111, align 4
  %113 = fadd float %112, %109
  %114 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %115 = load float, float* %114, align 4
  %116 = fadd float %115, %108
  br i1 %7, label %117, label %118

117:                                              ; preds = %107
  call void @_ZN6SkPath9setLastPtEff(%class.SkPath* %110, float %113, float %116) #7
  br label %120

118:                                              ; preds = %107
  %119 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %110, float %113, float %116) #7
  br label %120

120:                                              ; preds = %117, %118
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %11, float %5, %struct.SkPoint* nonnull %11) #7
  br i1 %8, label %137, label %124

121:                                              ; preds = %76, %35
  %122 = phi i64 [ %15, %35 ], [ %62, %76 ]
  %123 = phi i64 [ %14, %35 ], [ %63, %76 ]
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %11, float %5, %struct.SkPoint* nonnull %11) #7
  br label %124

124:                                              ; preds = %121, %120
  %125 = phi i64 [ %62, %120 ], [ %122, %121 ]
  %126 = phi i64 [ %63, %120 ], [ %123, %121 ]
  %127 = inttoptr i64 %126 to %class.SkPath*
  %128 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %129 = load float, float* %128, align 4
  %130 = load float, float* %38, align 8
  %131 = fadd float %129, %130
  %132 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %133 = load float, float* %132, align 4
  %134 = load float, float* %39, align 4
  %135 = fadd float %133, %134
  %136 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %127, float %131, float %135) #7
  br label %137

137:                                              ; preds = %124, %120
  %138 = phi i64 [ %62, %120 ], [ %125, %124 ]
  %139 = inttoptr i64 %138 to %class.SkPath*
  %140 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %141 = load float, float* %140, align 4
  %142 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %143 = load float, float* %142, align 4
  %144 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %139, float %141, float %143) #7
  %145 = load float, float* %140, align 4
  %146 = load float, float* %38, align 8
  %147 = fsub float %145, %146
  %148 = load float, float* %142, align 4
  %149 = load float, float* %39, align 4
  %150 = fsub float %148, %149
  %151 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %139, float %147, float %150) #7
  br label %152

152:                                              ; preds = %35, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11RoundJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb(%class.SkPath*, %class.SkPath*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), float, float, i1 zeroext, i1 zeroext) #1 {
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %struct.SkPoint*
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %struct.SkPoint*
  %14 = alloca %class.SkMatrix, align 16
  %15 = alloca [5 x %struct.SkConic], align 16
  %16 = ptrtoint %class.SkPath* %0 to i64
  %17 = ptrtoint %class.SkPath* %1 to i64
  %18 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = bitcast %struct.SkPoint* %4 to <2 x float>*
  %21 = load <2 x float>, <2 x float>* %20, align 4
  %22 = fmul <2 x float> %19, %21
  %23 = extractelement <2 x float> %22, i32 0
  %24 = extractelement <2 x float> %22, i32 1
  %25 = fadd float %23, %24
  %26 = fcmp ult float %25, 0.000000e+00
  br i1 %26, label %31, label %27

27:                                               ; preds = %9
  %28 = fsub float 1.000000e+00, %25
  %29 = tail call float @llvm.fabs.f32(float %28) #7
  %30 = fcmp ugt float %29, 0x3F30000000000000
  br i1 %30, label %31, label %111

31:                                               ; preds = %27, %9
  %32 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #7
  %33 = bitcast %struct.SkPoint* %2 to i64*
  %34 = load i64, i64* %33, align 4
  store i64 %34, i64* %10, align 8
  %35 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = bitcast i64* %12 to float*
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %13, i64 0, i32 1
  %38 = bitcast %struct.SkPoint* %4 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %12, align 8
  %40 = trunc i64 %34 to i32
  %41 = bitcast i32 %40 to float
  %42 = lshr i64 %39, 32
  %43 = trunc i64 %42 to i32
  %44 = bitcast i32 %43 to float
  %45 = fmul float %41, %44
  %46 = lshr i64 %34, 32
  %47 = trunc i64 %46 to i32
  %48 = bitcast i32 %47 to float
  %49 = trunc i64 %39 to i32
  %50 = bitcast i32 %49 to float
  %51 = fmul float %48, %50
  %52 = fcmp ogt float %45, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %31
  %54 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %11, i64 0, i32 1
  %55 = bitcast i64* %10 to float*
  %56 = fsub float -0.000000e+00, %41
  store float %56, float* %55, align 8
  %57 = fsub float -0.000000e+00, %48
  store float %57, float* %54, align 4
  %58 = fsub float -0.000000e+00, %50
  store float %58, float* %36, align 8
  %59 = fsub float -0.000000e+00, %44
  store float %59, float* %37, align 4
  br label %60

60:                                               ; preds = %53, %31
  %61 = phi i64 [ %16, %31 ], [ %17, %53 ]
  %62 = phi i64 [ %17, %31 ], [ %16, %53 ]
  %63 = phi i32 [ 0, %31 ], [ 1, %53 ]
  %64 = bitcast %class.SkMatrix* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #7
  %65 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 1
  %66 = bitcast %class.SkMatrix* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %66, align 16
  %67 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %68, align 16
  %69 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %14, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %69, align 16
  store i32 16, i32* %65, align 4
  %70 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %14, float %5, float %5) #7
  %71 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* nonnull %14, float %72, float %74) #7
  %76 = bitcast [5 x %struct.SkConic]* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 140, i8* nonnull %76) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %76, i8 -1, i64 140, i1 false)
  %77 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 0
  %78 = call i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* nonnull dereferenceable(8) %11, %struct.SkPoint* nonnull dereferenceable(8) %13, i32 %63, %class.SkMatrix* nonnull %14, %struct.SkConic* nonnull %77) #7
  %79 = icmp sgt i32 %78, 0
  br i1 %79, label %80, label %110

80:                                               ; preds = %60
  %81 = inttoptr i64 %61 to %class.SkPath*
  %82 = zext i32 %78 to i64
  br label %95

83:                                               ; preds = %95
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* nonnull %13, float %5, %struct.SkPoint* nonnull %13) #7
  %84 = inttoptr i64 %62 to %class.SkPath*
  %85 = load float, float* %71, align 4
  %86 = load float, float* %73, align 4
  %87 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %84, float %85, float %86) #7
  %88 = load float, float* %71, align 4
  %89 = load float, float* %36, align 8
  %90 = fsub float %88, %89
  %91 = load float, float* %73, align 4
  %92 = load float, float* %37, align 4
  %93 = fsub float %91, %92
  %94 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %84, float %90, float %93) #7
  br label %110

95:                                               ; preds = %95, %80
  %96 = phi i64 [ 0, %80 ], [ %108, %95 ]
  %97 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %96, i32 1
  %98 = load float, float* %97, align 4
  %99 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %96, i32 0, i64 1, i32 0
  %100 = load float, float* %99, align 4
  %101 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %96, i32 0, i64 1, i32 1
  %102 = load float, float* %101, align 4
  %103 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %96, i32 0, i64 2, i32 0
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds [5 x %struct.SkConic], [5 x %struct.SkConic]* %15, i64 0, i64 %96, i32 0, i64 2, i32 1
  %106 = load float, float* %105, align 4
  %107 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath* %81, float %100, float %102, float %104, float %106, float %98) #7
  %108 = add nuw nsw i64 %96, 1
  %109 = icmp eq i64 %108, %82
  br i1 %109, label %83, label %95

110:                                              ; preds = %83, %60
  call void @llvm.lifetime.end.p0i8(i64 140, i8* nonnull %76) #7
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #7
  br label %111

111:                                              ; preds = %27, %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZL11BluntJoinerP6SkPathS0_RK7SkPointS3_S3_ffbb(%class.SkPath*, %class.SkPath*, %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* nocapture readonly dereferenceable(8), %struct.SkPoint* dereferenceable(8), float, float, i1 zeroext, i1 zeroext) #1 {
  %10 = alloca %struct.SkPoint, align 4
  %11 = ptrtoint %class.SkPath* %0 to i64
  %12 = ptrtoint %class.SkPath* %1 to i64
  %13 = bitcast %struct.SkPoint* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #7
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %14, align 4
  %15 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %10, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  call void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint* %4, float %5, %struct.SkPoint* nonnull %10) #7
  %16 = bitcast %struct.SkPoint* %2 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = bitcast %struct.SkPoint* %4 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = shufflevector <2 x float> %19, <2 x float> undef, <2 x i32> <i32 1, i32 0>
  %21 = fmul <2 x float> %17, %20
  %22 = extractelement <2 x float> %21, i32 0
  %23 = extractelement <2 x float> %21, i32 1
  %24 = fcmp ogt float %22, %23
  %25 = load float, float* %14, align 4
  br i1 %24, label %26, label %28

26:                                               ; preds = %9
  %27 = load float, float* %15, align 4
  br label %32

28:                                               ; preds = %9
  %29 = fsub float -0.000000e+00, %25
  store float %29, float* %14, align 4
  %30 = load float, float* %15, align 4
  %31 = fsub float -0.000000e+00, %30
  store float %31, float* %15, align 4
  br label %32

32:                                               ; preds = %26, %28
  %33 = phi float [ %27, %26 ], [ %31, %28 ]
  %34 = phi float [ %25, %26 ], [ %29, %28 ]
  %35 = phi i64 [ %11, %26 ], [ %12, %28 ]
  %36 = phi i64 [ %12, %26 ], [ %11, %28 ]
  %37 = inttoptr i64 %35 to %class.SkPath*
  %38 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %39 = load float, float* %38, align 4
  %40 = fadd float %39, %34
  %41 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = fadd float %42, %33
  %44 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %37, float %40, float %43) #7
  %45 = inttoptr i64 %36 to %class.SkPath*
  %46 = load float, float* %38, align 4
  %47 = load float, float* %41, align 4
  %48 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %45, float %46, float %47) #7
  %49 = load float, float* %38, align 4
  %50 = load float, float* %14, align 4
  %51 = fsub float %49, %50
  %52 = load float, float* %41, align 4
  %53 = load float, float* %15, align 4
  %54 = fsub float %52, %53
  %55 = call dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath* %45, float %51, float %54) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #7
  ret void
}

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath6lineToEff(%class.SkPath*, float, float) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(16) %class.SkPath* @_ZN6SkPath7conicToEfffff(%class.SkPath*, float, float, float, float, float) local_unnamed_addr #3

declare void @_ZN6SkPath9setLastPtEff(%class.SkPath*, float, float) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #5

declare zeroext i1 @_ZN7SkPoint9setLengthEf(%struct.SkPoint*, float) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #6

declare void @_ZNK7SkPoint5scaleEfPS_(%struct.SkPoint*, float, %struct.SkPoint*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #3

declare i32 @_ZN7SkConic12BuildUnitArcERK7SkPointS2_19SkRotationDirectionPK8SkMatrixPS_(%struct.SkPoint* dereferenceable(8), %struct.SkPoint* dereferenceable(8), i32, %class.SkMatrix*, %struct.SkConic*) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
