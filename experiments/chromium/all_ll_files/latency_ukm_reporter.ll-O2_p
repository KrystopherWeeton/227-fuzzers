; ModuleID = '../../cc/metrics/latency_ukm_reporter.cc'
source_filename = "../../cc/metrics/latency_ukm_reporter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.cc::LatencyUkmReporter" = type { %"class.cc::UkmManager"*, %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.1" }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.cc::LatencyUkmReporter::SamplingController"* }
%"class.cc::LatencyUkmReporter::SamplingController" = type { double, double, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::CompositorFrameReporter::StageData"*, %"struct.cc::CompositorFrameReporter::StageData"*, %"class.std::__1::__compressed_pair.7" }
%"struct.cc::CompositorFrameReporter::StageData" = type { i32, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.cc::CompositorFrameReporter::StageData"* }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown" = type { [11 x %"class.base::TimeDelta"] }
%"class.base::TimeDelta" = type { i64 }
%"class.cc::CompositorFrameReporter::ProcessedVizBreakdown" = type { [9 x %"class.absl::optional"], i8, %"class.base::TimeTicks" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.std::__1::vector.10" = type { %"class.std::__1::__vector_base.11" }
%"class.std::__1::__vector_base.11" = type { %"class.std::__1::unique_ptr.12"*, %"class.std::__1::unique_ptr.12"*, %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::unique_ptr.12" = type opaque
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.std::__1::unique_ptr.12"* }

@_ZN2cc18LatencyUkmReporterC1Ev = hidden unnamed_addr alias void (%"class.cc::LatencyUkmReporter"*), void (%"class.cc::LatencyUkmReporter"*)* @_ZN2cc18LatencyUkmReporterC2Ev
@_ZN2cc18LatencyUkmReporterD1Ev = hidden unnamed_addr alias void (%"class.cc::LatencyUkmReporter"*), void (%"class.cc::LatencyUkmReporter"*)* @_ZN2cc18LatencyUkmReporterD2Ev

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN2cc18LatencyUkmReporterC2Ev(%"class.cc::LatencyUkmReporter"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 0
  store %"class.cc::UkmManager"* null, %"class.cc::UkmManager"** %2, align 8
  %3 = tail call i8* @_Znwm(i64 24) #7
  %4 = bitcast i8* %3 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 2.000000e+00>, <2 x double>* %4, align 8
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i32*
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 20
  %8 = bitcast i8* %7 to i32*
  store i32 0, i32* %8, align 4
  %9 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.cc::LatencyUkmReporter::SamplingController"** %9 to i8**
  store i8* %3, i8** %10, align 8
  %11 = tail call i8* @_Znwm(i64 24) #7
  %12 = bitcast i8* %11 to <2 x double>*
  store <2 x double> <double 1.000000e+00, double 2.000000e+00>, <2 x double>* %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 16
  %14 = bitcast i8* %13 to i32*
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 20
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = bitcast %"class.cc::LatencyUkmReporter::SamplingController"** %17 to i8**
  store i8* %11, i8** %18, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18LatencyUkmReporterD2Ev(%"class.cc::LatencyUkmReporter"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.cc::LatencyUkmReporter::SamplingController"*, %"class.cc::LatencyUkmReporter::SamplingController"** %2, align 8
  store %"class.cc::LatencyUkmReporter::SamplingController"* null, %"class.cc::LatencyUkmReporter::SamplingController"** %2, align 8
  %4 = icmp eq %"class.cc::LatencyUkmReporter::SamplingController"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::LatencyUkmReporter::SamplingController"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #7
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.cc::LatencyUkmReporter::SamplingController"*, %"class.cc::LatencyUkmReporter::SamplingController"** %8, align 8
  store %"class.cc::LatencyUkmReporter::SamplingController"* null, %"class.cc::LatencyUkmReporter::SamplingController"** %8, align 8
  %10 = icmp eq %"class.cc::LatencyUkmReporter::SamplingController"* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = bitcast %"class.cc::LatencyUkmReporter::SamplingController"* %9 to i8*
  tail call void @_ZdlPv(i8* %12) #7
  br label %13

13:                                               ; preds = %7, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18LatencyUkmReporter26ReportCompositorLatencyUkmENS_23CompositorFrameReporter15FrameReportTypeERKNSt3__16vectorINS1_9StageDataENS3_9allocatorIS5_EEEERKNS3_6bitsetILm12EEERKNS1_23ProcessedBlinkBreakdownERKNS1_21ProcessedVizBreakdownE(%"class.cc::LatencyUkmReporter"* nocapture readonly, i32, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::bitset"* dereferenceable(8), %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88), %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232)) local_unnamed_addr #1 align 2 {
  %7 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 0
  %8 = load %"class.cc::UkmManager"*, %"class.cc::UkmManager"** %7, align 8
  %9 = icmp eq %"class.cc::UkmManager"* %8, null
  br i1 %9, label %53, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.cc::LatencyUkmReporter::SamplingController"*, %"class.cc::LatencyUkmReporter::SamplingController"** %11, align 8
  %13 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %12, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %48

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %12, i64 0, i32 1
  %18 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %12, i64 0, i32 2
  %19 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %12, i64 0, i32 0
  br label %20

20:                                               ; preds = %20, %16
  %21 = load double, double* %17, align 8
  %22 = load i32, i32* %18, align 8
  %23 = sitofp i32 %22 to double
  %24 = load double, double* %19, align 8
  %25 = fmul double %24, %23
  %26 = tail call double @exp(double %25) #8
  %27 = fmul double %21, %26
  %28 = tail call double @_ZN4base10RandDoubleEv() #8
  %29 = fsub double 1.000000e+00, %28
  %30 = tail call double @log(double %29) #8
  %31 = fmul double %27, %30
  %32 = fcmp oeq double %31, 0.000000e+00
  br i1 %32, label %20, label %33

33:                                               ; preds = %20
  %34 = load i32, i32* %18, align 8
  %35 = add nsw i32 %34, 1
  store i32 %35, i32* %18, align 8
  %36 = fcmp uno double %31, 0.000000e+00
  br i1 %36, label %50, label %37

37:                                               ; preds = %33
  %38 = fsub double -0.000000e+00, %31
  %39 = tail call double @llvm.ceil.f64(double %38) #8
  %40 = fcmp ult double %39, 0xC1E0000000000000
  %41 = fcmp ugt double %39, 0x41DFFFFFFFC00000
  %42 = fcmp ogt double %39, 0xC1E0000000000000
  %43 = select i1 %42, double %39, double 0xC1E0000000000000
  %44 = fptosi double %43 to i32
  %45 = select i1 %40, i32 0, i32 2147483647
  %46 = select i1 %41, i32 %45, i32 %44
  %47 = add i32 %46, -1
  br label %50

48:                                               ; preds = %10
  %49 = add nsw i32 %14, -1
  store i32 %49, i32* %13, align 4
  br label %53

50:                                               ; preds = %33, %37
  %51 = phi i32 [ %47, %37 ], [ 2147483646, %33 ]
  store i32 %51, i32* %13, align 4
  %52 = load %"class.cc::UkmManager"*, %"class.cc::UkmManager"** %7, align 8
  tail call void @_ZNK2cc10UkmManager26RecordCompositorLatencyUKMENS_23CompositorFrameReporter15FrameReportTypeERKNSt3__16vectorINS1_9StageDataENS3_9allocatorIS5_EEEERKNS3_6bitsetILm12EEERKNS1_23ProcessedBlinkBreakdownERKNS1_21ProcessedVizBreakdownE(%"class.cc::UkmManager"* %52, i32 %1, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.std::__1::bitset"* dereferenceable(8) %3, %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88) %4, %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232) %5) #8
  br label %53

53:                                               ; preds = %48, %6, %50
  ret void
}

declare void @_ZNK2cc10UkmManager26RecordCompositorLatencyUKMENS_23CompositorFrameReporter15FrameReportTypeERKNSt3__16vectorINS1_9StageDataENS3_9allocatorIS5_EEEERKNS3_6bitsetILm12EEERKNS1_23ProcessedBlinkBreakdownERKNS1_21ProcessedVizBreakdownE(%"class.cc::UkmManager"*, i32, %"class.std::__1::vector"* dereferenceable(24), %"class.std::__1::bitset"* dereferenceable(8), %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88), %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc18LatencyUkmReporter21ReportEventLatencyUkmERKNSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEERKNS2_INS_23CompositorFrameReporter9StageDataENS8_ISE_EEEERKNSD_23ProcessedBlinkBreakdownERKNSD_21ProcessedVizBreakdownE(%"class.cc::LatencyUkmReporter"* nocapture readonly, %"class.std::__1::vector.10"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88), %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232)) local_unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 0
  %7 = load %"class.cc::UkmManager"*, %"class.cc::UkmManager"** %6, align 8
  %8 = icmp eq %"class.cc::UkmManager"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.cc::LatencyUkmReporter", %"class.cc::LatencyUkmReporter"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.cc::LatencyUkmReporter::SamplingController"*, %"class.cc::LatencyUkmReporter::SamplingController"** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %11, i64 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %11, i64 0, i32 1
  %17 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %11, i64 0, i32 2
  %18 = getelementptr inbounds %"class.cc::LatencyUkmReporter::SamplingController", %"class.cc::LatencyUkmReporter::SamplingController"* %11, i64 0, i32 0
  br label %19

19:                                               ; preds = %19, %15
  %20 = load double, double* %16, align 8
  %21 = load i32, i32* %17, align 8
  %22 = sitofp i32 %21 to double
  %23 = load double, double* %18, align 8
  %24 = fmul double %23, %22
  %25 = tail call double @exp(double %24) #8
  %26 = fmul double %20, %25
  %27 = tail call double @_ZN4base10RandDoubleEv() #8
  %28 = fsub double 1.000000e+00, %27
  %29 = tail call double @log(double %28) #8
  %30 = fmul double %26, %29
  %31 = fcmp oeq double %30, 0.000000e+00
  br i1 %31, label %19, label %32

32:                                               ; preds = %19
  %33 = load i32, i32* %17, align 8
  %34 = add nsw i32 %33, 1
  store i32 %34, i32* %17, align 8
  %35 = fcmp uno double %30, 0.000000e+00
  br i1 %35, label %49, label %36

36:                                               ; preds = %32
  %37 = fsub double -0.000000e+00, %30
  %38 = tail call double @llvm.ceil.f64(double %37) #8
  %39 = fcmp ult double %38, 0xC1E0000000000000
  %40 = fcmp ugt double %38, 0x41DFFFFFFFC00000
  %41 = fcmp ogt double %38, 0xC1E0000000000000
  %42 = select i1 %41, double %38, double 0xC1E0000000000000
  %43 = fptosi double %42 to i32
  %44 = select i1 %39, i32 0, i32 2147483647
  %45 = select i1 %40, i32 %44, i32 %43
  %46 = add i32 %45, -1
  br label %49

47:                                               ; preds = %9
  %48 = add nsw i32 %13, -1
  store i32 %48, i32* %12, align 4
  br label %52

49:                                               ; preds = %32, %36
  %50 = phi i32 [ %46, %36 ], [ 2147483646, %32 ]
  store i32 %50, i32* %12, align 4
  %51 = load %"class.cc::UkmManager"*, %"class.cc::UkmManager"** %6, align 8
  tail call void @_ZNK2cc10UkmManager21RecordEventLatencyUKMERKNSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEERKNS2_INS_23CompositorFrameReporter9StageDataENS8_ISE_EEEERKNSD_23ProcessedBlinkBreakdownERKNSD_21ProcessedVizBreakdownE(%"class.cc::UkmManager"* %51, %"class.std::__1::vector.10"* dereferenceable(24) %1, %"class.std::__1::vector"* dereferenceable(24) %2, %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88) %3, %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232) %4) #8
  br label %52

52:                                               ; preds = %47, %5, %49
  ret void
}

declare void @_ZNK2cc10UkmManager21RecordEventLatencyUKMERKNSt3__16vectorINS1_10unique_ptrINS_12EventMetricsENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEERKNS2_INS_23CompositorFrameReporter9StageDataENS8_ISE_EEEERKNSD_23ProcessedBlinkBreakdownERKNSD_21ProcessedVizBreakdownE(%"class.cc::UkmManager"*, %"class.std::__1::vector.10"* dereferenceable(24), %"class.std::__1::vector"* dereferenceable(24), %"class.cc::CompositorFrameReporter::ProcessedBlinkBreakdown"* dereferenceable(88), %"class.cc::CompositorFrameReporter::ProcessedVizBreakdown"* dereferenceable(232)) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare double @exp(double) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare double @log(double) local_unnamed_addr #3

declare double @_ZN4base10RandDoubleEv() local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { builtin nounwind }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
