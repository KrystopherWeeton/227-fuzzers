; ModuleID = '../../third_party/pdfium/fxjs/cfx_v8.cpp'
source_filename = "../../third_party/pdfium/fxjs/cfx_v8.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i8 }
%class.CFX_V8 = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.fxcrt::UnownedPtr" = type { %"class.v8::Isolate"* }
%"class.v8::Isolate" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.1", i64 }
%"class.fxcrt::UnownedPtr.1" = type { i8* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.fxcrt::WideString"*, %"class.fxcrt::WideString"*, %"class.std::__1::__compressed_pair.3" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.fxcrt::WideString"* }
%"class.v8::Array" = type { i8 }
%"class.v8::Number" = type { i8 }
%"class.v8::Boolean" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.fxcrt::StringViewTemplate.10" = type { %"class.pdfium::span.11" }
%"class.pdfium::span.11" = type { %"class.fxcrt::UnownedPtr.12", i64 }
%"class.fxcrt::UnownedPtr.12" = type { i32* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.fxcrt::StringDataTemplate.17"* }
%"class.fxcrt::StringDataTemplate.17" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.v8::Date" = type { i8 }
%class.CFX_V8ArrayBufferAllocator = type { %"class.v8::ArrayBuffer::Allocator" }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.pdfium::base::PartitionAllocatorGeneric" = type { %"struct.pdfium::base::PartitionRootGeneric" }
%"struct.pdfium::base::PartitionRootGeneric" = type { %"struct.pdfium::base::internal::PartitionRootBase", %"class.pdfium::base::subtle::SpinLock", [65 x i64], [65 x i64], [521 x %"struct.pdfium::base::internal::PartitionBucket"*], [136 x %"struct.pdfium::base::internal::PartitionBucket"] }
%"struct.pdfium::base::internal::PartitionRootBase" = type { i32 (...)**, i64, i64, i64, i32, i32, i8, i8*, i8*, i8*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"*, %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, [16 x %"struct.pdfium::base::internal::PartitionPage"*], i16, i64 }
%"struct.pdfium::base::internal::PartitionSuperPageExtentEntry" = type { %"struct.pdfium::base::internal::PartitionRootBase"*, i8*, i8*, %"struct.pdfium::base::internal::PartitionSuperPageExtentEntry"* }
%"struct.pdfium::base::internal::PartitionDirectMapExtent" = type { %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, %"struct.pdfium::base::internal::PartitionDirectMapExtent"*, %"struct.pdfium::base::internal::PartitionBucket"*, i64 }
%"struct.pdfium::base::internal::PartitionBucket" = type { %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"*, i32, i32 }
%"struct.pdfium::base::internal::PartitionPage" = type { %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionBucket"*, i16, i16, i16, i16 }
%"struct.pdfium::base::internal::PartitionFreelistEntry" = type { %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"* }
%"struct.pdfium::base::internal::EncodedPartitionFreelistEntry" = type { [8 x i8] }
%"class.pdfium::base::subtle::SpinLock" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.pdfium::base::internal::DeferredUnmap" = type { i8*, i64 }

$_ZN2v811ArrayBuffer9AllocatorD2Ev = comdat any

$_ZN26CFX_V8ArrayBufferAllocatorD0Ev = comdat any

@_ZTV6CFX_V8 = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFX_V8*)* @_ZN6CFX_V8D2Ev to i8*), i8* bitcast (void (%class.CFX_V8*)* @_ZN6CFX_V8D0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [18 x i8] c"CFX_V8ArrayBuffer\00", align 1
@_ZTV26CFX_V8ArrayBufferAllocator = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::ArrayBuffer::Allocator"*)* @_ZN2v811ArrayBuffer9AllocatorD2Ev to i8*), i8* bitcast (void (%class.CFX_V8ArrayBufferAllocator*)* @_ZN26CFX_V8ArrayBufferAllocatorD0Ev to i8*), i8* bitcast (i8* (%class.CFX_V8ArrayBufferAllocator*, i64)* @_ZN26CFX_V8ArrayBufferAllocator8AllocateEm to i8*), i8* bitcast (i8* (%class.CFX_V8ArrayBufferAllocator*, i64)* @_ZN26CFX_V8ArrayBufferAllocator21AllocateUninitializedEm to i8*), i8* bitcast (void (%class.CFX_V8ArrayBufferAllocator*, i8*, i64)* @_ZN26CFX_V8ArrayBufferAllocator4FreeEPvm to i8*), i8* bitcast (i8* (%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64)* @_ZN2v811ArrayBuffer9Allocator10ReallocateEPvmm to i8*)] }, align 8
@_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E = external local_unnamed_addr global %"struct.std::__1::atomic.23", align 1

@_ZN6CFX_V8C1EPN2v87IsolateE = hidden unnamed_addr alias void (%class.CFX_V8*, %"class.v8::Isolate"*), void (%class.CFX_V8*, %"class.v8::Isolate"*)* @_ZN6CFX_V8C2EPN2v87IsolateE
@_ZN6CFX_V8D1Ev = hidden unnamed_addr alias void (%class.CFX_V8*), void (%class.CFX_V8*)* @_ZN6CFX_V8D2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6CFX_V8C2EPN2v87IsolateE(%class.CFX_V8* nocapture, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6CFX_V8, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  store %"class.v8::Isolate"* %1, %"class.v8::Isolate"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6CFX_V8D2Ev(%class.CFX_V8* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV6CFX_V8, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V8D0Ev(%class.CFX_V8*) unnamed_addr #1 align 2 {
  %2 = bitcast %class.CFX_V8* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN6CFX_V817GetObjectPropertyEN2v85LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEE(%class.CFX_V8* nocapture readonly, %"class.v8::Object"*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  %9 = call %"class.v8::Value"* @_ZN4fxv832ReentrantGetObjectPropertyHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEE(%"class.v8::Isolate"* %6, %"class.v8::Object"* %1, %"class.fxcrt::StringViewTemplate"* nonnull %4) #9
  ret %"class.v8::Value"* %9
}

declare %"class.v8::Value"* @_ZN4fxv832ReentrantGetObjectPropertyHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEE(%"class.v8::Isolate"*, %"class.v8::Object"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V822GetObjectPropertyNamesEN2v85LocalINS0_6ObjectEEE(%"class.std::__1::vector"* noalias sret, %class.CFX_V8* nocapture readonly, %"class.v8::Object"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %1, i64 0, i32 1, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  tail call void @_ZN4fxv837ReentrantGetObjectPropertyNamesHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEE(%"class.std::__1::vector"* sret %0, %"class.v8::Isolate"* %5, %"class.v8::Object"* %2) #9
  ret void
}

declare void @_ZN4fxv837ReentrantGetObjectPropertyNamesHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEE(%"class.std::__1::vector"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V817PutObjectPropertyEN2v85LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEENS1_INS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Object"*, %"class.fxcrt::StringViewTemplate"* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %7 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %6, align 8
  %8 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %9 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = call zeroext i1 @_ZN4fxv832ReentrantPutObjectPropertyHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEENS3_INS0_5ValueEEE(%"class.v8::Isolate"* %7, %"class.v8::Object"* %1, %"class.fxcrt::StringViewTemplate"* nonnull %5, %"class.v8::Value"* %3) #9
  ret void
}

declare zeroext i1 @_ZN4fxv832ReentrantPutObjectPropertyHelperEPN2v87IsolateENS0_5LocalINS0_6ObjectEEEN5fxcrt18StringViewTemplateIcEENS3_INS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Object"*, %"class.fxcrt::StringViewTemplate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V814DisposeIsolateEv(%class.CFX_V8* nocapture) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.fxcrt::UnownedPtr", %"class.fxcrt::UnownedPtr"* %2, i64 0, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = icmp eq %"class.v8::Isolate"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.fxcrt::UnownedPtr"* %2 to i64*
  store i64 0, i64* %7, align 8
  tail call void @_ZN2v87Isolate7DisposeEv(%"class.v8::Isolate"* nonnull %4) #9
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

declare void @_ZN2v87Isolate7DisposeEv(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Array"* @_ZN6CFX_V88NewArrayEv(%class.CFX_V8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  %4 = tail call %"class.v8::Array"* @_ZN4fxv814NewArrayHelperEPN2v87IsolateE(%"class.v8::Isolate"* %3) #9
  ret %"class.v8::Array"* %4
}

declare %"class.v8::Array"* @_ZN4fxv814NewArrayHelperEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN6CFX_V89NewObjectEv(%class.CFX_V8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  %4 = tail call %"class.v8::Object"* @_ZN4fxv815NewObjectHelperEPN2v87IsolateE(%"class.v8::Isolate"* %3) #9
  ret %"class.v8::Object"* %4
}

declare %"class.v8::Object"* @_ZN4fxv815NewObjectHelperEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V815PutArrayElementEN2v85LocalINS0_5ArrayEEEjNS1_INS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Array"*, i32, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %6 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %5, align 8
  %7 = tail call zeroext i1 @_ZN4fxv830ReentrantPutArrayElementHelperEPN2v87IsolateENS0_5LocalINS0_5ArrayEEEjNS3_INS0_5ValueEEE(%"class.v8::Isolate"* %6, %"class.v8::Array"* %1, i32 %2, %"class.v8::Value"* %3) #9
  ret void
}

declare zeroext i1 @_ZN4fxv830ReentrantPutArrayElementHelperEPN2v87IsolateENS0_5LocalINS0_5ArrayEEEjNS3_INS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Array"*, i32, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN6CFX_V815GetArrayElementEN2v85LocalINS0_5ArrayEEEj(%class.CFX_V8* nocapture readonly, %"class.v8::Array"*, i32) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = tail call %"class.v8::Value"* @_ZN4fxv830ReentrantGetArrayElementHelperEPN2v87IsolateENS0_5LocalINS0_5ArrayEEEj(%"class.v8::Isolate"* %5, %"class.v8::Array"* %1, i32 %2) #9
  ret %"class.v8::Value"* %6
}

declare %"class.v8::Value"* @_ZN4fxv830ReentrantGetArrayElementHelperEPN2v87IsolateENS0_5LocalINS0_5ArrayEEEj(%"class.v8::Isolate"*, %"class.v8::Array"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6CFX_V814GetArrayLengthEN2v85LocalINS0_5ArrayEEE(%class.CFX_V8* nocapture readnone, %"class.v8::Array"*) local_unnamed_addr #1 align 2 {
  %3 = tail call i32 @_ZN4fxv820GetArrayLengthHelperEN2v85LocalINS0_5ArrayEEE(%"class.v8::Array"* %1) #9
  ret i32 %3
}

declare i32 @_ZN4fxv820GetArrayLengthHelperEN2v85LocalINS0_5ArrayEEE(%"class.v8::Array"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Number"* @_ZN6CFX_V89NewNumberEi(%class.CFX_V8* nocapture readonly, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEi(%"class.v8::Isolate"* %4, i32 %1) #9
  ret %"class.v8::Number"* %5
}

declare %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Number"* @_ZN6CFX_V89NewNumberEd(%class.CFX_V8* nocapture readonly, double) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEd(%"class.v8::Isolate"* %4, double %1) #9
  ret %"class.v8::Number"* %5
}

declare %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Number"* @_ZN6CFX_V89NewNumberEf(%class.CFX_V8* nocapture readonly, float) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEf(%"class.v8::Isolate"* %4, float %1) #9
  ret %"class.v8::Number"* %5
}

declare %"class.v8::Number"* @_ZN4fxv815NewNumberHelperEPN2v87IsolateEf(%"class.v8::Isolate"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Boolean"* @_ZN6CFX_V810NewBooleanEb(%class.CFX_V8* nocapture readonly, i1 zeroext) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Boolean"* @_ZN4fxv816NewBooleanHelperEPN2v87IsolateEb(%"class.v8::Isolate"* %4, i1 zeroext %1) #9
  ret %"class.v8::Boolean"* %5
}

declare %"class.v8::Boolean"* @_ZN4fxv816NewBooleanHelperEPN2v87IsolateEb(%"class.v8::Isolate"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN6CFX_V89NewStringEN5fxcrt18StringViewTemplateIcEE(%class.CFX_V8* nocapture readonly, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  %6 = icmp eq %"class.v8::Isolate"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = phi %"class.v8::Isolate"* [ %8, %7 ], [ %5, %2 ]
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  %12 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 16, i1 false)
  %13 = call %"class.v8::String"* @_ZN4fxv815NewStringHelperEPN2v87IsolateEN5fxcrt18StringViewTemplateIcEE(%"class.v8::Isolate"* %10, %"class.fxcrt::StringViewTemplate"* nonnull %3) #9
  ret %"class.v8::String"* %13
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #3

declare %"class.v8::String"* @_ZN4fxv815NewStringHelperEPN2v87IsolateEN5fxcrt18StringViewTemplateIcEE(%"class.v8::Isolate"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::String"* @_ZN6CFX_V89NewStringEN5fxcrt18StringViewTemplateIwEE(%class.CFX_V8* nocapture readonly, %"class.fxcrt::StringViewTemplate.10"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %3 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate.10", align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #9
  %7 = bitcast %"class.fxcrt::StringViewTemplate.10"* %5 to i8*
  %8 = bitcast %"class.fxcrt::StringViewTemplate.10"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 %8, i64 16, i1 false)
  call void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* nonnull sret %4, %"class.fxcrt::StringViewTemplate.10"* nonnull %5) #9
  %9 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"class.fxcrt::StringDataTemplate.17"*, %"class.fxcrt::StringDataTemplate.17"** %9, align 8, !noalias !2
  %11 = icmp eq %"class.fxcrt::StringDataTemplate.17"* %10, null
  %12 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.17", %"class.fxcrt::StringDataTemplate.17"* %10, i64 0, i32 3, i64 0
  %13 = select i1 %11, i8* null, i8* %12
  br i1 %11, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.17", %"class.fxcrt::StringDataTemplate.17"* %10, i64 0, i32 1
  %16 = load i64, i64* %15, align 8, !noalias !2
  br label %17

17:                                               ; preds = %2, %14
  %18 = phi i64 [ %16, %14 ], [ 0, %2 ]
  %19 = bitcast %"class.fxcrt::StringViewTemplate"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19)
  %20 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %21 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %20, align 8
  %22 = icmp eq %"class.v8::Isolate"* %21, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %17
  %24 = call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #9
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi %"class.v8::Isolate"* [ %24, %23 ], [ %21, %17 ]
  %27 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %27, align 8
  %28 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %3, i64 0, i32 0, i32 1
  store i64 %18, i64* %28, align 8
  %29 = call %"class.v8::String"* @_ZN4fxv815NewStringHelperEPN2v87IsolateEN5fxcrt18StringViewTemplateIcEE(%"class.v8::Isolate"* %26, %"class.fxcrt::StringViewTemplate"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #9
  ret %"class.v8::String"* %29
}

declare void @_Z13FX_UTF8EncodeN5fxcrt18StringViewTemplateIwEE(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::StringViewTemplate.10"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN6CFX_V87NewNullEv(%class.CFX_V8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  %4 = tail call %"class.v8::Value"* @_ZN4fxv813NewNullHelperEPN2v87IsolateE(%"class.v8::Isolate"* %3) #9
  ret %"class.v8::Value"* %4
}

declare %"class.v8::Value"* @_ZN4fxv813NewNullHelperEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZN6CFX_V812NewUndefinedEv(%class.CFX_V8* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %3 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %2, align 8
  %4 = tail call %"class.v8::Value"* @_ZN4fxv818NewUndefinedHelperEPN2v87IsolateE(%"class.v8::Isolate"* %3) #9
  ret %"class.v8::Value"* %4
}

declare %"class.v8::Value"* @_ZN4fxv818NewUndefinedHelperEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Date"* @_ZN6CFX_V87NewDateEd(%class.CFX_V8* nocapture readonly, double) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Date"* @_ZN4fxv813NewDateHelperEPN2v87IsolateEd(%"class.v8::Isolate"* %4, double %1) #9
  ret %"class.v8::Date"* %5
}

declare %"class.v8::Date"* @_ZN4fxv813NewDateHelperEPN2v87IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6CFX_V87ToInt32EN2v85LocalINS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call i32 @_ZN4fxv822ReentrantToInt32HelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #9
  ret i32 %5
}

declare i32 @_ZN4fxv822ReentrantToInt32HelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6CFX_V89ToBooleanEN2v85LocalINS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call zeroext i1 @_ZN4fxv824ReentrantToBooleanHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #9
  ret i1 %5
}

declare zeroext i1 @_ZN4fxv824ReentrantToBooleanHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZN6CFX_V88ToDoubleEN2v85LocalINS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call double @_ZN4fxv823ReentrantToDoubleHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #9
  ret double %5
}

declare double @_ZN4fxv823ReentrantToDoubleHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V812ToWideStringEN2v85LocalINS0_5ValueEEE(%"class.fxcrt::WideString"* noalias sret, %class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %1, i64 0, i32 1, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  tail call void @_ZN4fxv827ReentrantToWideStringHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.fxcrt::WideString"* sret %0, %"class.v8::Isolate"* %5, %"class.v8::Value"* %2) #9
  ret void
}

declare void @_ZN4fxv827ReentrantToWideStringHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.fxcrt::WideString"* sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6CFX_V812ToByteStringEN2v85LocalINS0_5ValueEEE(%"class.fxcrt::ByteString"* noalias sret, %class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %1, i64 0, i32 1, i32 0
  %5 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %4, align 8
  tail call void @_ZN4fxv827ReentrantToByteStringHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.fxcrt::ByteString"* sret %0, %"class.v8::Isolate"* %5, %"class.v8::Value"* %2) #9
  ret void
}

declare void @_ZN4fxv827ReentrantToByteStringHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.fxcrt::ByteString"* sret, %"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Object"* @_ZN6CFX_V88ToObjectEN2v85LocalINS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Object"* @_ZN4fxv823ReentrantToObjectHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #9
  ret %"class.v8::Object"* %5
}

declare %"class.v8::Object"* @_ZN4fxv823ReentrantToObjectHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Array"* @_ZN6CFX_V87ToArrayEN2v85LocalINS0_5ValueEEE(%class.CFX_V8* nocapture readonly, %"class.v8::Value"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %class.CFX_V8, %class.CFX_V8* %0, i64 0, i32 1, i32 0
  %4 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %3, align 8
  %5 = tail call %"class.v8::Array"* @_ZN4fxv822ReentrantToArrayHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"* %4, %"class.v8::Value"* %1) #9
  ret %"class.v8::Array"* %5
}

declare %"class.v8::Array"* @_ZN4fxv822ReentrantToArrayHelperEPN2v87IsolateENS0_5LocalINS0_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN26CFX_V8ArrayBufferAllocator8AllocateEm(%class.CFX_V8ArrayBufferAllocator* nocapture readnone, i64) unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = icmp ugt i64 %1, 268435456
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z32GetArrayBufferPartitionAllocatorv() #9
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %9 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.23", %"struct.std::__1::atomic.23"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %10 = and i8 %9, 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %14, !prof !5

12:                                               ; preds = %6
  %13 = call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %4, i32 2, i64 %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #9
  br i1 %13, label %66, label %14

14:                                               ; preds = %12, %6
  %15 = call i64 @llvm.ctlz.i64(i64 %1, i1 false) #9, !range !6
  %16 = sub nuw nsw i64 64, %15
  %17 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 2, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %1, %18
  %20 = and i64 %19, 7
  %21 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 3, i64 %16
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, %1
  %24 = shl nsw i64 %16, 3
  %25 = or i64 %20, %24
  %26 = icmp ne i64 %23, 0
  %27 = zext i1 %26 to i64
  %28 = add nsw i64 %25, %27
  %29 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 4, i64 %28
  %30 = load %"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionBucket"** %29, align 8
  %31 = icmp eq %"struct.pdfium::base::internal::PartitionBucket"* %30, null
  br i1 %31, label %32, label %33, !prof !5

32:                                               ; preds = %14
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !7
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !8
  unreachable

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw xchg i32* %35, i32 1 acquire
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !9

38:                                               ; preds = %33
  call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %34) #9
  br label %39

39:                                               ; preds = %38, %33
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 0, i8* %3, align 1
  %40 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionBucket", %"struct.pdfium::base::internal::PartitionBucket"* %30, i64 0, i32 0
  %41 = load %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"** %40, align 8
  %42 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %41, i64 0, i32 0
  %43 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 8
  %44 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43, null
  br i1 %44, label %54, label %45, !prof !5

45:                                               ; preds = %39
  %46 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i8*
  %47 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @llvm.bswap.i64(i64 %48) #9
  %50 = inttoptr i64 %49 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  store %"struct.pdfium::base::internal::PartitionFreelistEntry"* %50, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 8
  %51 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %41, i64 0, i32 3
  %52 = load i16, i16* %51, align 8
  %53 = add i16 %52, 1
  store i16 %53, i16* %51, align 8
  br label %59

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 0
  %56 = call i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"* nonnull %30, %"struct.pdfium::base::internal::PartitionRootBase"* %55, i32 2, i64 %1, i8* nonnull %3) #9
  %57 = load i8, i8* %3, align 1
  %58 = icmp eq i8 %57, 0
  br label %59

59:                                               ; preds = %54, %45
  %60 = phi i1 [ true, %45 ], [ %58, %54 ]
  %61 = phi i8* [ %46, %45 ], [ %56, %54 ]
  %62 = icmp ne i8* %61, null
  %63 = and i1 %60, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %59
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %61, i8 0, i64 %1, i1 false) #9
  br label %65

65:                                               ; preds = %64, %59
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  store i8* %61, i8** %4, align 8
  store atomic i32 0, i32* %35 release, align 4
  br i1 %11, label %66, label %68

66:                                               ; preds = %65, %12
  %67 = load i8*, i8** %4, align 8
  call void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %67, i64 %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #9
  br label %68

68:                                               ; preds = %66, %65
  %69 = load i8*, i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %70

70:                                               ; preds = %2, %68
  %71 = phi i8* [ %69, %68 ], [ null, %2 ]
  ret i8* %71
}

declare dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z32GetArrayBufferPartitionAllocatorv() local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN26CFX_V8ArrayBufferAllocator21AllocateUninitializedEm(%class.CFX_V8ArrayBufferAllocator* nocapture readnone, i64) unnamed_addr #1 align 2 {
  %3 = alloca i8, align 1
  %4 = alloca i8*, align 8
  %5 = icmp ugt i64 %1, 268435456
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z32GetArrayBufferPartitionAllocatorv() #9
  %8 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %9 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.23", %"struct.std::__1::atomic.23"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %10 = and i8 %9, 1
  %11 = icmp ne i8 %10, 0
  br i1 %11, label %12, label %14, !prof !5

12:                                               ; preds = %6
  %13 = call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8** nonnull %4, i32 0, i64 %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #9
  br i1 %13, label %59, label %14

14:                                               ; preds = %12, %6
  %15 = call i64 @llvm.ctlz.i64(i64 %1, i1 false) #9, !range !6
  %16 = sub nuw nsw i64 64, %15
  %17 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 2, i64 %16
  %18 = load i64, i64* %17, align 8
  %19 = lshr i64 %1, %18
  %20 = and i64 %19, 7
  %21 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 3, i64 %16
  %22 = load i64, i64* %21, align 8
  %23 = and i64 %22, %1
  %24 = shl nsw i64 %16, 3
  %25 = or i64 %20, %24
  %26 = icmp ne i64 %23, 0
  %27 = zext i1 %26 to i64
  %28 = add nsw i64 %25, %27
  %29 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 4, i64 %28
  %30 = load %"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionBucket"** %29, align 8
  %31 = icmp eq %"struct.pdfium::base::internal::PartitionBucket"* %30, null
  br i1 %31, label %32, label %33, !prof !5

32:                                               ; preds = %14
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !7
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !8
  unreachable

33:                                               ; preds = %14
  %34 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw xchg i32* %35, i32 1 acquire
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %39, label %38, !prof !9

38:                                               ; preds = %33
  call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %34) #9
  br label %39

39:                                               ; preds = %38, %33
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #9
  store i8 0, i8* %3, align 1
  %40 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionBucket", %"struct.pdfium::base::internal::PartitionBucket"* %30, i64 0, i32 0
  %41 = load %"struct.pdfium::base::internal::PartitionPage"*, %"struct.pdfium::base::internal::PartitionPage"** %40, align 8
  %42 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %41, i64 0, i32 0
  %43 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 8
  %44 = icmp eq %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43, null
  br i1 %44, label %54, label %45, !prof !5

45:                                               ; preds = %39
  %46 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i8*
  %47 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %43 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @llvm.bswap.i64(i64 %48) #9
  %50 = inttoptr i64 %49 to %"struct.pdfium::base::internal::PartitionFreelistEntry"*
  store %"struct.pdfium::base::internal::PartitionFreelistEntry"* %50, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %42, align 8
  %51 = getelementptr inbounds %"struct.pdfium::base::internal::PartitionPage", %"struct.pdfium::base::internal::PartitionPage"* %41, i64 0, i32 3
  %52 = load i16, i16* %51, align 8
  %53 = add i16 %52, 1
  store i16 %53, i16* %51, align 8
  br label %57

54:                                               ; preds = %39
  %55 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %7, i64 0, i32 0, i32 0
  %56 = call i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"* nonnull %30, %"struct.pdfium::base::internal::PartitionRootBase"* %55, i32 0, i64 %1, i8* nonnull %3) #9
  br label %57

57:                                               ; preds = %54, %45
  %58 = phi i8* [ %46, %45 ], [ %56, %54 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #9
  store i8* %58, i8** %4, align 8
  store atomic i32 0, i32* %35 release, align 4
  br i1 %11, label %59, label %61

59:                                               ; preds = %57, %12
  %60 = load i8*, i8** %4, align 8
  call void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8* %60, i64 %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0)) #9
  br label %61

61:                                               ; preds = %59, %57
  %62 = load i8*, i8** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %63

63:                                               ; preds = %2, %61
  %64 = phi i8* [ %62, %61 ], [ null, %2 ]
  ret i8* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN26CFX_V8ArrayBufferAllocator4FreeEPvm(%class.CFX_V8ArrayBufferAllocator* nocapture readnone, i8*, i64) unnamed_addr #1 align 2 {
  %4 = alloca %"struct.pdfium::base::internal::DeferredUnmap", align 8
  %5 = tail call dereferenceable(9808) %"class.pdfium::base::PartitionAllocatorGeneric"* @_Z32GetArrayBufferPartitionAllocatorv() #9
  %6 = icmp eq i8* %1, null
  br i1 %6, label %65, label %7, !prof !5

7:                                                ; preds = %3
  %8 = load atomic i8, i8* getelementptr inbounds (%"struct.std::__1::atomic.23", %"struct.std::__1::atomic.23"* @_ZN6pdfium4base19PartitionAllocHooks14hooks_enabled_E, i64 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 1
  %9 = and i8 %8, 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  tail call void @_ZN6pdfium4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8* nonnull %1) #9
  %12 = tail call zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8* nonnull %1) #9
  br i1 %12, label %65, label %13

13:                                               ; preds = %11, %7
  %14 = ptrtoint i8* %1 to i64
  %15 = and i64 %14, -2097152
  %16 = or i64 %15, 4096
  %17 = inttoptr i64 %16 to i8*
  %18 = lshr i64 %14, 9
  %19 = and i64 %18, 4064
  %20 = getelementptr inbounds i8, i8* %17, i64 %19
  %21 = getelementptr inbounds i8, i8* %20, i64 28
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 4
  %24 = zext i16 %23 to i64
  %25 = shl nuw nsw i64 %24, 5
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, i8* %20, i64 %26
  %28 = bitcast i8* %27 to %"struct.pdfium::base::internal::PartitionPage"*
  %29 = bitcast %"struct.pdfium::base::internal::DeferredUnmap"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #9
  %30 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %4, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.pdfium::base::internal::DeferredUnmap", %"struct.pdfium::base::internal::DeferredUnmap"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 16, i1 false) #9
  %32 = getelementptr inbounds %"class.pdfium::base::PartitionAllocatorGeneric", %"class.pdfium::base::PartitionAllocatorGeneric"* %5, i64 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.pdfium::base::subtle::SpinLock", %"class.pdfium::base::subtle::SpinLock"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw xchg i32* %33, i32 1 acquire
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36, !prof !9

36:                                               ; preds = %13
  tail call void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"* %32) #9
  br label %37

37:                                               ; preds = %36, %13
  %38 = bitcast i8* %27 to %"struct.pdfium::base::internal::PartitionFreelistEntry"**
  %39 = load %"struct.pdfium::base::internal::PartitionFreelistEntry"*, %"struct.pdfium::base::internal::PartitionFreelistEntry"** %38, align 32
  %40 = bitcast %"struct.pdfium::base::internal::PartitionFreelistEntry"* %39 to i8*
  %41 = icmp eq i8* %40, %1
  br i1 %41, label %42, label %43, !prof !5

42:                                               ; preds = %37
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !10
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #9, !srcloc !11
  unreachable

43:                                               ; preds = %37
  %44 = ptrtoint %"struct.pdfium::base::internal::PartitionFreelistEntry"* %39 to i64
  %45 = tail call i64 @llvm.bswap.i64(i64 %44) #9
  %46 = inttoptr i64 %45 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"*
  %47 = bitcast i8* %1 to %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"**
  store %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"* %46, %"struct.pdfium::base::internal::EncodedPartitionFreelistEntry"** %47, align 8
  %48 = bitcast i8* %27 to i8**
  store i8* %1, i8** %48, align 32
  %49 = getelementptr inbounds i8, i8* %27, i64 24
  %50 = bitcast i8* %49 to i16*
  %51 = load i16, i16* %50, align 8
  %52 = add i16 %51, -1
  store i16 %52, i16* %50, align 8
  %53 = icmp slt i16 %52, 1
  br i1 %53, label %54, label %58, !prof !5

54:                                               ; preds = %43
  %55 = tail call { i8*, i64 } @_ZN6pdfium4base8internal13PartitionPage12FreeSlowPathEv(%"struct.pdfium::base::internal::PartitionPage"* %28) #9
  %56 = extractvalue { i8*, i64 } %55, 0
  %57 = extractvalue { i8*, i64 } %55, 1
  br label %58

58:                                               ; preds = %54, %43
  %59 = phi i8* [ %56, %54 ], [ null, %43 ]
  %60 = phi i64 [ %57, %54 ], [ 0, %43 ]
  store i8* %59, i8** %30, align 8
  store i64 %60, i64* %31, align 8
  store atomic i32 0, i32* %33 release, align 4
  %61 = load i8*, i8** %30, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %64, label %63, !prof !9

63:                                               ; preds = %58
  call void @_ZN6pdfium4base8internal13DeferredUnmap5UnmapEv(%"struct.pdfium::base::internal::DeferredUnmap"* nonnull %4) #9
  br label %64

64:                                               ; preds = %63, %58
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #9
  br label %65

65:                                               ; preds = %3, %11, %64
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v811ArrayBuffer9AllocatorD2Ev(%"class.v8::ArrayBuffer::Allocator"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN26CFX_V8ArrayBufferAllocatorD0Ev(%class.CFX_V8ArrayBufferAllocator*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.CFX_V8ArrayBufferAllocator* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

declare i8* @_ZN2v811ArrayBuffer9Allocator10ReallocateEPvmm(%"class.v8::ArrayBuffer::Allocator"*, i8*, i64, i64) unnamed_addr #3

declare zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks31AllocationOverrideHookIfEnabledEPPvimPKc(i8**, i32, i64, i8*) local_unnamed_addr #3

declare void @_ZN6pdfium4base19PartitionAllocHooks31AllocationObserverHookIfEnabledEPvmPKc(i8*, i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #7

declare void @_ZN6pdfium4base6subtle8SpinLock8LockSlowEv(%"class.pdfium::base::subtle::SpinLock"*) local_unnamed_addr #3

declare i8* @_ZN6pdfium4base8internal15PartitionBucket13SlowPathAllocEPNS1_17PartitionRootBaseEimPb(%"struct.pdfium::base::internal::PartitionBucket"*, %"struct.pdfium::base::internal::PartitionRootBase"*, i32, i64, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.bswap.i64(i64) #7

declare void @_ZN6pdfium4base19PartitionAllocHooks25FreeObserverHookIfEnabledEPv(i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN6pdfium4base19PartitionAllocHooks25FreeOverrideHookIfEnabledEPv(i8*) local_unnamed_addr #3

declare { i8*, i64 } @_ZN6pdfium4base8internal13PartitionPage12FreeSlowPathEv(%"struct.pdfium::base::internal::PartitionPage"*) local_unnamed_addr #3

declare void @_ZN6pdfium4base8internal13DeferredUnmap5UnmapEv(%"struct.pdfium::base::internal::DeferredUnmap"*) local_unnamed_addr #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5fxcrt10ByteString12AsStringViewEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5fxcrt10ByteString12AsStringViewEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
!6 = !{i64 0, i64 65}
!7 = !{i32 -2142052410}
!8 = !{i32 -2142052389}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i32 -2142871346}
!11 = !{i32 -2142871325}
