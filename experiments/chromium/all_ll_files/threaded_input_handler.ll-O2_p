; ModuleID = '../../cc/input/threaded_input_handler.cc'
source_filename = "../../cc/input/threaded_input_handler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.base::Feature" = type { i8*, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"struct.cc::InputHandlerCommitData" = type <{ %"class.gfx::Vector2dF", %"class.base::internal::flat_tree", %"struct.cc::ElementId", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::ElementId"*, %"struct.cc::ElementId"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::ElementId"* }
%"struct.cc::ElementId" = type { i64 }
%"class.cc::ThreadedInputHandler" = type { %"class.cc::InputHandler", %"class.cc::InputDelegateForCompositor", %"class.cc::CompositorDelegateForInput"*, %"class.cc::InputHandlerClient"*, %"class.std::__1::unique_ptr.9", %"class.std::__1::unique_ptr.13", %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"class.absl::optional.1335", %"class.absl::optional.1340", %"class.absl::optional.1340", %"struct.cc::TargetSnapAreaElementIds", %"class.base::internal::flat_tree", %"struct.cc::ElementId", %"struct.cc::ElementId", %"struct.cc::ElementId", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.base::WeakPtrFactory.1345" }
%"class.cc::InputHandler" = type { i32 (...)** }
%"class.cc::InputDelegateForCompositor" = type { i32 (...)** }
%"class.cc::InputHandlerClient" = type { i32 (...)** }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.cc::ScrollElasticityHelper"* }
%"class.cc::ScrollElasticityHelper" = type { i32 (...)** }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.cc::ScrollbarController"* }
%"class.cc::ScrollbarController" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i8, %"class.gfx::PointF", [4 x i8], %"class.absl::optional.1311", %"class.absl::optional.1316", %"class.absl::optional.1321", i8, %"class.std::__1::unique_ptr.1326" }
%"class.cc::LayerTreeHostImpl" = type { %"class.cc::TileManagerClient", %"class.cc::LayerTreeFrameSinkClient", %"class.cc::BrowserControlsOffsetManagerClient", %"class.cc::ScrollbarAnimationControllerClient", %"class.cc::VideoFrameControllerClient", %"class.cc::MutatorHostClient", %"class.cc::ImageAnimationController::Client", %"class.cc::CompositorDelegateForInput", %"class.cc::LayerTreeHostImplClient"*, %"class.cc::LayerTreeHostSchedulingClient"*, %"class.cc::TaskRunnerProvider"*, %"class.cc::BeginFrameTracker", %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.29", %"class.cc::LayerTreeSettings", i8, %"class.viz::ClientResourceProvider", %"class.std::__1::unordered_map", %"class.std::__1::unordered_map", %"class.std::__1::set", %"class.cc::LayerTreeFrameSink"*, i32, %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78", i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.84", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.123", %"class.cc::GlobalStateThatImpactsTilePriority", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.129", %"class.gfx::Vector2dF", %"class.std::__1::vector.595", i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, %"struct.cc::ManagedMemoryPolicy", %"class.cc::TileManager", %"class.std::__1::unique_ptr.924", %"class.std::__1::unique_ptr.936", %"class.cc::DroppedFrameCounter", %"class.cc::TotalFrameCounter", %"class.std::__1::unique_ptr.989", %"class.std::__1::unique_ptr.996", i64, %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::Rect", %"class.std::__1::unique_ptr.1002", %"class.std::__1::unique_ptr.1008", %"class.std::__1::set.1014", %"class.cc::RasterDarkModeFilter"*, %"class.std::__1::unordered_map.1024", %"class.cc::RenderingStatsInstrumentation"*, %"class.cc::MicroBenchmarkControllerImpl", %"class.std::__1::unique_ptr.1063", %"class.base::RepeatingCallback.858", %"class.cc::TaskGraphRunner"*, i32, %"class.std::__1::set.1069", i8, i8, i8, i32, %"class.std::__1::unique_ptr.1079", %"class.gfx::Size", i8, %"class.std::__1::unique_ptr.1085", %"class.std::__1::vector.1091", i32, [4 x i8], %"class.cc::ImageAnimationController", %"class.std::__1::unique_ptr.1111", %"class.std::__1::unique_ptr.1123", %"class.viz::FrameTokenGenerator", %"class.viz::LocalSurfaceId", %"class.base::internal::flat_tree.575", %"class.absl::optional.1129", %"class.viz::LocalSurfaceId", %"class.viz::ChildLocalSurfaceIdAllocator", i32, %"class.std::__1::unique_ptr.103", %"class.cc::PresentationTimeCallbackBuffer", i32, %"class.cc::FrameSequenceTrackerCollection", %"class.std::__1::unique_ptr.1197", i8, i8, %"class.cc::AnimatedPaintWorkletTracker", %"class.cc::AverageLagTrackingManager", %"class.cc::DeJellyState", %"class.cc::EventsMetricsManager", %"class.std::__1::unique_ptr.1267", %"class.cc::FrameRateEstimator", i8, i8, i8, %"class.base::WritableSharedMemoryMapping", %"class.base::MRUCache", %"class.cc::ThrottleDecider", %"class.std::__1::vector.195", %"class.base::WeakPtrFactory.1310" }
%"class.cc::TileManagerClient" = type { i32 (...)** }
%"class.cc::LayerTreeFrameSinkClient" = type { i32 (...)** }
%"class.cc::BrowserControlsOffsetManagerClient" = type { i32 (...)** }
%"class.cc::ScrollbarAnimationControllerClient" = type { i32 (...)** }
%"class.cc::VideoFrameControllerClient" = type { i32 (...)** }
%"class.cc::MutatorHostClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::Client" = type { i32 (...)** }
%"class.cc::CompositorDelegateForInput" = type { i32 (...)** }
%"class.cc::LayerTreeHostImplClient" = type { i32 (...)** }
%"class.cc::LayerTreeHostSchedulingClient" = type { i32 (...)** }
%"class.cc::TaskRunnerProvider" = type { i32 (...)**, %class.scoped_refptr.16, %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.17" }>
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::BeginFrameTracker" = type { %"class.base::Location", %"class.std::__1::basic_string", %"class.base::TimeTicks", %"struct.viz::BeginFrameArgs", %"class.base::TimeTicks" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.viz::BeginFrameArgs" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.viz::BeginFrameId", i64, i32, i8, i8, i64 }
%"class.base::TimeDelta" = type { i64 }
%"struct.viz::BeginFrameId" = type { i64, i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.cc::CompositorFrameReportingController"* }
%"class.cc::CompositorFrameReportingController" = type opaque
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.cc::InputDelegateForCompositor"* }
%"class.cc::LayerTreeSettings" = type <{ i32 (...)**, %"class.viz::ResourceSettings", i8, i8, i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, float, i8, i8, [2 x i8], i32, %"class.base::TimeDelta", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, [3 x i8], i32, %"class.base::TimeDelta", i8, i8, [2 x i8], float, float, float, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", i32, %"class.gfx::Size", i32, float, i32, i64, i8, i8, i8, [5 x i8], i64, i8, i8, [2 x i8], i32, %"struct.cc::ManagedMemoryPolicy", i64, i32, i8, i8, i8, i8, i64, i8, [7 x i8], %"class.cc::LayerTreeDebugState", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [6 x i8] }>
%"class.viz::ResourceSettings" = type { i8, i8 }
%"class.viz::ClientResourceProvider" = type { %"class.base::flat_map", %"class.viz::ResourceIdGenerator" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.35" }
%"class.base::internal::flat_tree.35" = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.38" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.std::__1::pair"* }
%"class.viz::ResourceIdGenerator" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.43", %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.57", %"class.std::__1::__compressed_pair.59", [4 x i8] }>
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45", %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { i64 }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { float }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.62", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::LayerTreeFrameSink" = type { %"class.viz::SharedBitmapReporter", %"class.viz::ContextLostObserver", %"class.cc::LayerTreeFrameSinkClient"*, %class.scoped_refptr.69, %class.scoped_refptr.70, %class.scoped_refptr.16, %"class.gpu::GpuMemoryBufferManager"*, %"class.std::__1::unique_ptr.71", i64, %"class.base::WeakPtrFactory" }
%"class.viz::SharedBitmapReporter" = type { i32 (...)** }
%"class.viz::ContextLostObserver" = type { i32 (...)** }
%class.scoped_refptr.69 = type { %"class.viz::ContextProvider"* }
%"class.viz::ContextProvider" = type { i32 (...)** }
%class.scoped_refptr.70 = type { %"class.viz::RasterContextProvider"* }
%"class.viz::RasterContextProvider" = type { i32 (...)** }
%"class.gpu::GpuMemoryBufferManager" = type opaque
%"class.std::__1::unique_ptr.71" = type { %"class.std::__1::__compressed_pair.72" }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"class.cc::LayerTreeFrameSink::ContextLostForwarder"* }
%"class.cc::LayerTreeFrameSink::ContextLostForwarder" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.77 }
%class.scoped_refptr.77 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.viz::ContextCacheController::ScopedToken"* }
%"class.viz::ContextCacheController::ScopedToken" = type { i8 }
%"class.std::__1::unique_ptr.84" = type { %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.86" }
%"struct.std::__1::__compressed_pair_elem.86" = type { %"class.cc::RasterBufferProvider"* }
%"class.cc::RasterBufferProvider" = type { i32 (...)** }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.cc::ResourcePool"* }
%"class.cc::ResourcePool" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.viz::ClientResourceProvider"*, %"class.viz::ContextProvider"*, %class.scoped_refptr.16, %"class.base::TimeDelta", i8, i32, i64, i64, i64, i64, i64, i64, i8, i8, %"class.base::circular_deque", %"class.base::circular_deque", %"class.std::__1::map", %"class.std::__1::unique_ptr.103", %"class.base::TimeTicks", %"class.base::TickClock"*, %"class.base::WeakPtrFactory.111" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.93"*, i64 }
%"class.std::__1::unique_ptr.93" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.94" }
%"class.std::__1::__tree.94" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.95", %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.111" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.cc::RasterQueryQueue"* }
%"class.cc::RasterQueryQueue" = type { i32 (...)**, %"class.viz::RasterContextProvider"*, i8, %"class.base::Lock", %"class.base::circular_deque.118" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::circular_deque.118" = type { %"class.base::internal::VectorBuffer.119", i64, i64 }
%"class.base::internal::VectorBuffer.119" = type { %"struct.cc::RasterQuery"*, i64 }
%"struct.cc::RasterQuery" = type <{ i32, [4 x i8], %"class.base::TimeDelta", i32, [4 x i8], %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.cc::ImageDecodeCache"* }
%"class.cc::ImageDecodeCache" = type { i32 (...)** }
%"class.cc::GlobalStateThatImpactsTilePriority" = type <{ i32, [4 x i8], i64, i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.cc::LayerTreeImpl"* }
%"class.cc::LayerTreeImpl" = type { i32 (...)**, %"class.cc::LayerTreeHostImpl"*, i32, i32, %"class.cc::HeadsUpDisplayLayerImpl"*, %"class.cc::PropertyTrees", i32, i32, %"struct.cc::LayerTreeHost::ViewportPropertyIds", %"struct.viz::Selection", %class.scoped_refptr.313, float, float, float, float, float, %"class.gfx::DisplayColorSpaces", %"class.viz::LocalSurfaceId", i8, i8, %"class.gfx::Rect", %class.scoped_refptr.319, %"class.std::__1::vector.323", %"class.std::__1::unordered_map.372", %"class.base::internal::flat_tree.396", %"class.std::__1::unordered_map.404", %"class.std::__1::unordered_map.430", %"class.std::__1::unordered_map.454", %"class.std::__1::unordered_map.454", %"class.base::flat_map.478", %"class.std::__1::vector.488", %"class.base::internal::flat_tree.574", %"class.base::internal::flat_tree.575", %"class.std::__1::vector.588", %"class.cc::Region", i8, i8, i8, i8, i8, i8, i8, %"class.std::__1::vector.595", %"class.std::__1::vector.595", %"class.std::__1::vector.603", i8, [4 x i32], %"struct.cc::BrowserControlsParams", %"struct.cc::OverscrollBehavior", %class.scoped_refptr.610, %class.scoped_refptr.610, %"class.std::__1::unique_ptr.615", i8, %"class.cc::LayerTreeLifecycle", i32, %"class.std::__1::vector.621", %"class.std::__1::vector.628", %"class.std::__1::unique_ptr.636", %"class.std::__1::vector.642" }
%"class.cc::HeadsUpDisplayLayerImpl" = type opaque
%"class.cc::PropertyTrees" = type { %"class.base::flat_map.132", %"class.base::flat_map.132", %"class.base::flat_map.132", %"class.cc::TransformTree", %"class.cc::EffectTree", %"class.cc::ClipTree", %"class.cc::ScrollTree", i8, i8, i8, i32, i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::PropertyTreesCachedData" }
%"class.base::flat_map.132" = type { %"class.base::internal::flat_tree.133" }
%"class.base::internal::flat_tree.133" = type { %"class.std::__1::vector.134" }
%"class.std::__1::vector.134" = type { %"class.std::__1::__vector_base.135" }
%"class.std::__1::__vector_base.135" = type { %"struct.std::__1::pair.136"*, %"struct.std::__1::pair.136"*, %"class.std::__1::__compressed_pair.137" }
%"struct.std::__1::pair.136" = type opaque
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"struct.std::__1::pair.136"* }
%"class.cc::TransformTree" = type { %"class.cc::PropertyTree", float, float, float, %"class.std::__1::vector.149", %"class.std::__1::vector.156", %"class.std::__1::vector.163" }
%"class.cc::PropertyTree" = type { i32 (...)**, %"class.std::__1::vector.142", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"struct.cc::TransformNode"*, %"struct.cc::TransformNode"*, %"class.std::__1::__compressed_pair.144" }
%"struct.cc::TransformNode" = type opaque
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"struct.cc::TransformNode"* }
%"class.std::__1::vector.149" = type { %"class.std::__1::__vector_base.150" }
%"class.std::__1::__vector_base.150" = type { i32*, i32*, %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { i32* }
%"class.std::__1::vector.156" = type { %"class.std::__1::__vector_base.157" }
%"class.std::__1::__vector_base.157" = type { %"struct.cc::TransformCachedNodeData"*, %"struct.cc::TransformCachedNodeData"*, %"class.std::__1::__compressed_pair.158" }
%"struct.cc::TransformCachedNodeData" = type opaque
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"struct.cc::TransformCachedNodeData"* }
%"class.std::__1::vector.163" = type { %"class.std::__1::__vector_base.164" }
%"class.std::__1::__vector_base.164" = type { %"struct.cc::StickyPositionNodeData"*, %"struct.cc::StickyPositionNodeData"*, %"class.std::__1::__compressed_pair.165" }
%"struct.cc::StickyPositionNodeData" = type { i32, %"struct.cc::StickyPositionConstraint", i32, i32, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.cc::StickyPositionNodeData"* }
%"class.cc::EffectTree" = type { %"class.cc::PropertyTree.170", %"class.std::__1::unordered_multimap", %"class.std::__1::vector.230" }
%"class.cc::PropertyTree.170" = type { i32 (...)**, %"class.std::__1::vector.171", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.171" = type { %"class.std::__1::__vector_base.172" }
%"class.std::__1::__vector_base.172" = type { %"struct.cc::EffectNode"*, %"struct.cc::EffectNode"*, %"class.std::__1::__compressed_pair.202" }
%"struct.cc::EffectNode" = type { i32, i32, i64, float, float, %"class.cc::FilterOperations", %"class.cc::FilterOperations", %"class.absl::optional.189", float, %"class.gfx::PointF", %"struct.cc::ElementId", %"class.gfx::MaskFilterInfo", i32, %"class.gfx::Vector2dF", %"class.viz::SubtreeCaptureId", %"class.gfx::Size", [3 x i8], i8, i32, i32, i32, i32, i32, i32, %"class.cc::DocumentTransitionSharedElementId" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.173" }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.184" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp, [20 x float], i32, [4 x i8], %"class.std::__1::vector.177", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.175, i32, %"class.absl::optional", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp.175 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.176 }
%union.anon.176 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.177" = type { %"class.std::__1::__vector_base.178" }
%"class.std::__1::__vector_base.178" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.cc::FilterOperation"* }
%"class.absl::optional.189" = type { %"class.absl::optional_internal::optional_data.190" }
%"class.absl::optional_internal::optional_data.190" = type { %"class.absl::optional_internal::optional_data_base.191" }
%"class.absl::optional_internal::optional_data_base.191" = type { %"class.absl::optional_internal::optional_data_dtor_base.192" }
%"class.absl::optional_internal::optional_data_dtor_base.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %"class.gfx::RRectF" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.gfx::MaskFilterInfo" = type { %"class.gfx::RRectF" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree.194" }
%"class.base::internal::flat_tree.194" = type { %"class.std::__1::vector.195" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"struct.cc::EffectNode"* }
%"class.std::__1::unordered_multimap" = type { %"class.std::__1::__hash_table.207" }
%"class.std::__1::__hash_table.207" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.226", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.211"** }
%"struct.std::__1::__hash_node_base.211" = type { %"struct.std::__1::__hash_node_base.211"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator.213" }
%"class.std::__1::__bucket_list_deallocator.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.211" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"class.std::__1::unique_ptr.232"*, %"class.std::__1::unique_ptr.232"*, %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.cc::RenderSurfaceImpl"* }
%"class.cc::RenderSurfaceImpl" = type { i32 (...)**, %"class.cc::LayerTreeImpl"*, i64, i32, %"struct.cc::RenderSurfaceImpl::DrawProperties", %"class.gfx::Rect", i32, i8, %"class.cc::Occlusion", %"class.cc::RenderSurfaceImpl"*, %"class.std::__1::unique_ptr.235" }
%"struct.cc::RenderSurfaceImpl::DrawProperties" = type { float, %"class.gfx::Transform", %"class.gfx::Transform", %"class.gfx::Rect", %"class.gfx::Rect", i8, %"class.gfx::MaskFilterInfo" }
%"class.cc::Occlusion" = type { %"class.gfx::Transform", %"class.cc::SimpleEnclosedRegion", %"class.cc::SimpleEnclosedRegion" }
%"class.cc::SimpleEnclosedRegion" = type { %"class.gfx::Rect" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.cc::DamageTracker"* }
%"class.cc::DamageTracker" = type opaque
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.std::__1::unique_ptr.232"* }
%"class.cc::ClipTree" = type { %"class.cc::PropertyTree.249" }
%"class.cc::PropertyTree.249" = type { i32 (...)**, %"class.std::__1::vector.250", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.250" = type { %"class.std::__1::__vector_base.251" }
%"class.std::__1::__vector_base.251" = type { %"struct.cc::ClipNode"*, %"struct.cc::ClipNode"*, %"class.std::__1::__compressed_pair.252" }
%"struct.cc::ClipNode" = type opaque
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %"struct.cc::ClipNode"* }
%"class.cc::ScrollTree" = type { %"class.cc::PropertyTree.257", i32, %"class.base::flat_map.277", %"class.base::flat_map.287", %"class.base::WeakPtr.297" }
%"class.cc::PropertyTree.257" = type { i32 (...)**, %"class.std::__1::vector.258", i8, %"class.cc::PropertyTrees"* }
%"class.std::__1::vector.258" = type { %"class.std::__1::__vector_base.259" }
%"class.std::__1::__vector_base.259" = type { %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"*, %"class.std::__1::__compressed_pair.272" }
%"struct.cc::ScrollNode" = type <{ i32, i32, i32, %"class.gfx::Size", %"class.gfx::Size", i8, [3 x i8], %"class.gfx::Vector2dF", %"struct.cc::ElementId", i32, %"struct.cc::OverscrollBehavior", [4 x i8], %"class.absl::optional.260", i8, [7 x i8] }>
%"class.absl::optional.260" = type { %"class.absl::optional_internal::optional_data.261" }
%"class.absl::optional_internal::optional_data.261" = type { %"class.absl::optional_internal::optional_data_base.262" }
%"class.absl::optional_internal::optional_data_base.262" = type { %"class.absl::optional_internal::optional_data_dtor_base.263" }
%"class.absl::optional_internal::optional_data_dtor_base.263" = type { i8, %union.anon.264 }
%union.anon.264 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.265", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.267" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.cc::SnapAreaData"* }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { %"struct.cc::ScrollNode"* }
%"class.base::flat_map.277" = type { %"class.base::internal::flat_tree.278" }
%"class.base::internal::flat_tree.278" = type { %"class.std::__1::vector.279" }
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"struct.std::__1::pair.281"*, %"struct.std::__1::pair.281"*, %"class.std::__1::__compressed_pair.282" }
%"struct.std::__1::pair.281" = type opaque
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"struct.std::__1::pair.281"* }
%"class.base::flat_map.287" = type { %"class.base::internal::flat_tree.288" }
%"class.base::internal::flat_tree.288" = type { %"class.std::__1::vector.289" }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.base::WeakPtr.297" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"struct.cc::PropertyTreesCachedData" = type { i32, %"class.std::__1::vector.298", %"class.std::__1::vector.305" }
%"class.std::__1::vector.298" = type { %"class.std::__1::__vector_base.299" }
%"class.std::__1::__vector_base.299" = type { %"struct.cc::AnimationScaleData"*, %"struct.cc::AnimationScaleData"*, %"class.std::__1::__compressed_pair.300" }
%"struct.cc::AnimationScaleData" = type <{ i32, float, i8, i8, [2 x i8] }>
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.301" }
%"struct.std::__1::__compressed_pair_elem.301" = type { %"struct.cc::AnimationScaleData"* }
%"class.std::__1::vector.305" = type { %"class.std::__1::__vector_base.306" }
%"class.std::__1::__vector_base.306" = type { %"class.std::__1::vector.307"*, %"class.std::__1::vector.307"*, %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::vector.307" = type opaque
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %"class.std::__1::vector.307"* }
%"struct.cc::LayerTreeHost::ViewportPropertyIds" = type { i32, i32, i32, i32, i32 }
%"struct.viz::Selection" = type { %"struct.cc::LayerSelectionBound", %"struct.cc::LayerSelectionBound" }
%"struct.cc::LayerSelectionBound" = type <{ i32, %"class.gfx::Point", %"class.gfx::Point", i32, i8, [3 x i8] }>
%class.scoped_refptr.313 = type { %"class.cc::SyncedProperty"* }
%"class.cc::SyncedProperty" = type <{ %"class.base::RefCounted", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", %"class.cc::ScaleGroup", i8, [3 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.cc::ScaleGroup" = type { float }
%"class.gfx::DisplayColorSpaces" = type { [6 x %"class.gfx::ColorSpace"], [6 x i32], float, %"class.absl::optional.314" }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.absl::optional.314" = type { %"class.absl::optional_internal::optional_data.315" }
%"class.absl::optional_internal::optional_data.315" = type { %"class.absl::optional_internal::optional_data_base.316" }
%"class.absl::optional_internal::optional_data_base.316" = type { %"class.absl::optional_internal::optional_data_dtor_base.317" }
%"class.absl::optional_internal::optional_data_dtor_base.317" = type { i8, %union.anon.318 }
%union.anon.318 = type { %"struct.gfx::HDRStaticMetadata" }
%"struct.gfx::HDRStaticMetadata" = type { double, double, double }
%class.scoped_refptr.319 = type { %"class.cc::SyncedProperty.320"* }
%"class.cc::SyncedProperty.320" = type <{ %"class.base::RefCounted.321", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", %"class.cc::AdditionGroup", i8, [3 x i8] }>
%"class.base::RefCounted.321" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup" = type { %"class.gfx::Vector2dF" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.std::__1::unique_ptr.325"*, %"class.std::__1::unique_ptr.325"*, %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::unique_ptr.325" = type { %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.cc::LayerImpl"* }
%"class.cc::LayerImpl" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.358", i8, [7 x i8] }>
%"class.cc::TouchActionRegion" = type { %"class.base::flat_map.328" }
%"class.base::flat_map.328" = type { %"class.base::internal::flat_tree.329" }
%"class.base::internal::flat_tree.329" = type { %"class.std::__1::vector.330" }
%"class.std::__1::vector.330" = type { %"class.std::__1::__vector_base.331" }
%"class.std::__1::__vector_base.331" = type { %"struct.std::__1::pair.332"*, %"struct.std::__1::pair.332"*, %"class.std::__1::__compressed_pair.333" }
%"struct.std::__1::pair.332" = type opaque
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::pair.332"* }
%"struct.cc::DrawProperties" = type { %"class.gfx::Transform", %"class.gfx::Transform", %"class.cc::Occlusion", float, i8, i8, i8, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::MaskFilterInfo" }
%"struct.cc::PerformanceProperties" = type { i32, float, %"class.gfx::Transform" }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"struct.cc::LayerDebugInfo"* }
%"struct.cc::LayerDebugInfo" = type { %"class.std::__1::basic_string", i32, i32, %"class.std::__1::vector.341", %"class.std::__1::vector.341", %"class.std::__1::vector.348" }
%"class.std::__1::vector.341" = type { %"class.std::__1::__vector_base.342" }
%"class.std::__1::__vector_base.342" = type { i8**, i8**, %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { i8** }
%"class.std::__1::vector.348" = type { %"class.std::__1::__vector_base.349" }
%"class.std::__1::__vector_base.349" = type { %"struct.cc::LayerDebugInfo::Invalidation"*, %"struct.cc::LayerDebugInfo::Invalidation"*, %"class.std::__1::__compressed_pair.350" }
%"struct.cc::LayerDebugInfo::Invalidation" = type { %"class.gfx::Rect", i8*, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"struct.cc::LayerDebugInfo::Invalidation"* }
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.cc::Region"* }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.std::__1::unique_ptr.325"* }
%"class.std::__1::unordered_map.372" = type { %"class.std::__1::__hash_table.373" }
%"class.std::__1::__hash_table.373" = type <{ %"class.std::__1::unique_ptr.374", %"class.std::__1::__compressed_pair.384", %"class.std::__1::__compressed_pair.389", %"class.std::__1::__compressed_pair.392", [4 x i8] }>
%"class.std::__1::unique_ptr.374" = type { %"class.std::__1::__compressed_pair.375" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376", %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.376" = type { %"struct.std::__1::__hash_node_base.377"** }
%"struct.std::__1::__hash_node_base.377" = type { %"struct.std::__1::__hash_node_base.377"* }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.std::__1::__bucket_list_deallocator.379" }
%"class.std::__1::__bucket_list_deallocator.379" = type { %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.377" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::internal::flat_tree.396" = type { %"class.std::__1::vector.397" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.cc::LayerImpl"** }
%"class.std::__1::unordered_map.404" = type { %"class.std::__1::__hash_table.405" }
%"class.std::__1::__hash_table.405" = type <{ %"class.std::__1::unique_ptr.406", %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408", %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.409"** }
%"struct.std::__1::__hash_node_base.409" = type { %"struct.std::__1::__hash_node_base.409"* }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.std::__1::__bucket_list_deallocator.411" }
%"class.std::__1::__bucket_list_deallocator.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.409" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.430" = type { %"class.std::__1::__hash_table.431" }
%"class.std::__1::__hash_table.431" = type <{ %"class.std::__1::unique_ptr.432", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.447", %"class.std::__1::__compressed_pair.450", [4 x i8] }>
%"class.std::__1::unique_ptr.432" = type { %"class.std::__1::__compressed_pair.433" }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434", %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"struct.std::__1::__hash_node_base.435"** }
%"struct.std::__1::__hash_node_base.435" = type { %"struct.std::__1::__hash_node_base.435"* }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.std::__1::__bucket_list_deallocator.437" }
%"class.std::__1::__bucket_list_deallocator.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"struct.std::__1::__hash_node_base.435" }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.454" = type { %"class.std::__1::__hash_table.455" }
%"class.std::__1::__hash_table.455" = type <{ %"class.std::__1::unique_ptr.456", %"class.std::__1::__compressed_pair.466", %"class.std::__1::__compressed_pair.471", %"class.std::__1::__compressed_pair.474", [4 x i8] }>
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458", %"struct.std::__1::__compressed_pair_elem.460" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"struct.std::__1::__hash_node_base.459"** }
%"struct.std::__1::__hash_node_base.459" = type { %"struct.std::__1::__hash_node_base.459"* }
%"struct.std::__1::__compressed_pair_elem.460" = type { %"class.std::__1::__bucket_list_deallocator.461" }
%"class.std::__1::__bucket_list_deallocator.461" = type { %"class.std::__1::__compressed_pair.462" }
%"class.std::__1::__compressed_pair.462" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.std::__1::__hash_node_base.459" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.474" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::flat_map.478" = type { %"class.base::internal::flat_tree.479" }
%"class.base::internal::flat_tree.479" = type { %"class.std::__1::vector.480" }
%"class.std::__1::vector.480" = type { %"class.std::__1::__vector_base.481" }
%"class.std::__1::__vector_base.481" = type { %"struct.std::__1::pair.482"*, %"struct.std::__1::pair.482"*, %"class.std::__1::__compressed_pair.483" }
%"struct.std::__1::pair.482" = type opaque
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"struct.std::__1::pair.482"* }
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.cc::PictureLayerImpl"**, %"class.cc::PictureLayerImpl"**, %"class.std::__1::__compressed_pair.569" }
%"class.cc::PictureLayerImpl" = type { %"class.cc::LayerImpl.base", %"class.cc::PictureLayerTilingClient", %"class.cc::ImageAnimationController::AnimationDriver", %"class.cc::PictureLayerImpl"*, %"class.std::__1::unique_ptr.490", %class.scoped_refptr.498, %"class.cc::Region", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, float, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", float, i8, i8, %"class.absl::optional.547", float, %"class.gfx::Rect", %"class.gfx::Size", %"class.std::__1::vector.552", %"class.base::flat_map.559", %"class.gfx::Size", %"class.cc::TileSizeCalculator", %"class.gfx::Rect" }
%"class.cc::LayerImpl.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.cc::LayerTreeImpl"*, i8, [3 x i8], %"class.gfx::Size", %"class.gfx::Vector2dF", %"class.gfx::Size", %"class.gfx::Size", i16, [2 x i8], %"class.cc::Region", %"class.cc::TouchActionRegion", %"class.cc::Region", i32, i32, i32, i32, i32, i32, i32, [4 x i8], %"struct.cc::ElementId", %"class.gfx::Rect", %"struct.cc::DrawProperties", %"struct.cc::PerformanceProperties", [4 x i8], %"class.std::__1::unique_ptr.338", %"class.std::__1::unique_ptr.358", i8 }>
%"class.cc::PictureLayerTilingClient" = type { i32 (...)** }
%"class.cc::ImageAnimationController::AnimationDriver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.cc::PictureLayerTilingSet"* }
%"class.cc::PictureLayerTilingSet" = type { %"class.std::__1::vector.493", i32, float, i32, i32, %"class.cc::PictureLayerTilingClient"*, float, %"class.std::__1::deque", %"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate", %class.scoped_refptr.498, %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect" }
%"class.std::__1::vector.493" = type { %"class.std::__1::__vector_base.494" }
%"class.std::__1::__vector_base.494" = type { %"class.std::__1::unique_ptr.495"*, %"class.std::__1::unique_ptr.495"*, %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::unique_ptr.495" = type { %"class.std::__1::__compressed_pair.496" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.497" }
%"struct.std::__1::__compressed_pair_elem.497" = type { %"class.cc::PictureLayerTiling"* }
%"class.cc::PictureLayerTiling" = type <{ %"class.gfx::AxisTransform2d", %"class.cc::PictureLayerTilingClient"*, i32, [4 x i8], %class.scoped_refptr.498, float, float, i32, i8, [3 x i8], %"class.cc::TilingData", [4 x i8], %"class.std::__1::unordered_map.501", %"class.gfx::Rect", i8, [3 x i8], %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", float, %"class.cc::Occlusion", float, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.gfx::AxisTransform2d" = type { %"class.gfx::Vector2dF", %"class.gfx::Vector2dF" }
%"class.cc::TilingData" = type { %"class.gfx::Size", %"class.gfx::Size", i32, i32, i32 }
%"class.std::__1::unordered_map.501" = type { %"class.std::__1::__hash_table.502" }
%"class.std::__1::__hash_table.502" = type <{ %"class.std::__1::unique_ptr.503", %"class.std::__1::__compressed_pair.513", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.521", [4 x i8] }>
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505", %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"struct.std::__1::__hash_node_base.506"** }
%"struct.std::__1::__hash_node_base.506" = type { %"struct.std::__1::__hash_node_base.506"* }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.std::__1::__bucket_list_deallocator.508" }
%"class.std::__1::__bucket_list_deallocator.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.513" = type { %"struct.std::__1::__compressed_pair_elem.514" }
%"struct.std::__1::__compressed_pair_elem.514" = type { %"struct.std::__1::__hash_node_base.506" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.std::__1::unique_ptr.495"* }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.540" }
%"struct.std::__1::__split_buffer" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"**, %"class.std::__1::__compressed_pair.535" }
%"struct.cc::PictureLayerTilingSet::FrameVisibleRect" = type { %"class.gfx::Rect", double }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.536" }
%"struct.std::__1::__compressed_pair_elem.536" = type { %"struct.cc::PictureLayerTilingSet::FrameVisibleRect"** }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.cc::PictureLayerTilingSet::StateSinceLastTilePriorityUpdate" = type { i8, i8 }
%class.scoped_refptr.498 = type { %"class.cc::RasterSource"* }
%"class.cc::RasterSource" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.499", [4 x i8], i64, %class.scoped_refptr.500, i32, i8, i8, [2 x i8], i32, %"class.gfx::Rect", %"class.gfx::Size", i32, float, [4 x i8] }>
%"class.base::RefCountedThreadSafe.499" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.500 = type { %"class.cc::DisplayItemList"* }
%"class.cc::DisplayItemList" = type opaque
%"class.absl::optional.547" = type { %"class.absl::optional_internal::optional_data.548" }
%"class.absl::optional_internal::optional_data.548" = type { %"class.absl::optional_internal::optional_data_base.549" }
%"class.absl::optional_internal::optional_data_base.549" = type { %"class.absl::optional_internal::optional_data_dtor_base.550" }
%"class.absl::optional_internal::optional_data_dtor_base.550" = type { i8, %union.anon.551 }
%union.anon.551 = type { %"class.gfx::Size" }
%"class.std::__1::vector.552" = type { %"class.std::__1::__vector_base.553" }
%"class.std::__1::__vector_base.553" = type { %"class.cc::PictureLayerTiling"**, %"class.cc::PictureLayerTiling"**, %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.cc::PictureLayerTiling"** }
%"class.base::flat_map.559" = type { %"class.base::internal::flat_tree.560" }
%"class.base::internal::flat_tree.560" = type { %"class.std::__1::vector.561" }
%"class.std::__1::vector.561" = type { %"class.std::__1::__vector_base.562" }
%"class.std::__1::__vector_base.562" = type { %"struct.std::__1::pair.563"*, %"struct.std::__1::pair.563"*, %"class.std::__1::__compressed_pair.564" }
%"struct.std::__1::pair.563" = type opaque
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"struct.std::__1::pair.563"* }
%"class.cc::TileSizeCalculator" = type { %"class.cc::PictureLayerImpl"*, %"struct.cc::TileSizeCalculator::AffectingParams", %"class.gfx::Size" }
%"struct.cc::TileSizeCalculator::AffectingParams" = type { i32, i8, float, %"class.gfx::Size", i32, %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size", %"class.gfx::Size" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.cc::PictureLayerImpl"** }
%"class.base::internal::flat_tree.574" = type { %"class.std::__1::vector.488" }
%"class.std::__1::vector.588" = type { %"class.std::__1::__vector_base.589" }
%"class.std::__1::__vector_base.589" = type { %"class.cc::RenderSurfaceImpl"**, %"class.cc::RenderSurfaceImpl"**, %"class.std::__1::__compressed_pair.590" }
%"class.std::__1::__compressed_pair.590" = type { %"struct.std::__1::__compressed_pair_elem.591" }
%"struct.std::__1::__compressed_pair_elem.591" = type { %"class.cc::RenderSurfaceImpl"** }
%"class.cc::Region" = type { %class.SkRegion }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::vector.603" = type { %"class.std::__1::__vector_base.604" }
%"class.std::__1::__vector_base.604" = type { %"class.cc::UIResourceRequest"*, %"class.cc::UIResourceRequest"*, %"class.std::__1::__compressed_pair.605" }
%"class.cc::UIResourceRequest" = type opaque
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.606" }
%"struct.std::__1::__compressed_pair_elem.606" = type { %"class.cc::UIResourceRequest"* }
%"struct.cc::BrowserControlsParams" = type <{ float, float, float, float, i8, i8, i8, i8 }>
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%class.scoped_refptr.610 = type { %"class.cc::SyncedProperty.611"* }
%"class.cc::SyncedProperty.611" = type <{ %"class.base::RefCounted.612", %"class.cc::AdditionGroup.613", %"class.cc::AdditionGroup.613", %"class.cc::AdditionGroup.613", %"class.cc::AdditionGroup.613", %"class.cc::AdditionGroup.613", i8, [3 x i8] }>
%"class.base::RefCounted.612" = type { %"class.base::subtle::RefCountedBase" }
%"class.cc::AdditionGroup.613" = type { float }
%"class.std::__1::unique_ptr.615" = type { %"class.std::__1::__compressed_pair.616" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.cc::PendingPageScaleAnimation"* }
%"struct.cc::PendingPageScaleAnimation" = type opaque
%"class.cc::LayerTreeLifecycle" = type { i32 }
%"class.std::__1::vector.621" = type { %"class.std::__1::__vector_base.622" }
%"class.std::__1::__vector_base.622" = type { %"class.base::OnceCallback"*, %"class.base::OnceCallback"*, %"class.std::__1::__compressed_pair.623" }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::__compressed_pair.623" = type { %"struct.std::__1::__compressed_pair_elem.624" }
%"struct.std::__1::__compressed_pair_elem.624" = type { %"class.base::OnceCallback"* }
%"class.std::__1::vector.628" = type { %"class.std::__1::__vector_base.629" }
%"class.std::__1::__vector_base.629" = type { %"class.std::__1::unique_ptr.630"*, %"class.std::__1::unique_ptr.630"*, %"class.std::__1::__compressed_pair.631" }
%"class.std::__1::unique_ptr.630" = type { %"class.std::__1::__compressed_pair.1433" }
%"class.std::__1::__compressed_pair.1433" = type { %"struct.std::__1::__compressed_pair_elem.1434" }
%"struct.std::__1::__compressed_pair_elem.1434" = type { %"class.cc::EventMetrics"* }
%"class.cc::EventMetrics" = type { i32, %"class.absl::optional.1435", %"class.base::TickClock"*, [6 x %"class.base::TimeTicks"] }
%"class.absl::optional.1435" = type { %"class.absl::optional_internal::optional_data.1436" }
%"class.absl::optional_internal::optional_data.1436" = type { %"class.absl::optional_internal::optional_data_base.1437" }
%"class.absl::optional_internal::optional_data_base.1437" = type { %"class.absl::optional_internal::optional_data_dtor_base.1438" }
%"class.absl::optional_internal::optional_data_dtor_base.1438" = type { i8, %union.anon.1439 }
%union.anon.1439 = type { i32 }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.632" }
%"struct.std::__1::__compressed_pair_elem.632" = type { %"class.std::__1::unique_ptr.630"* }
%"class.std::__1::unique_ptr.636" = type { %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.gfx::DelegatedInkMetadata"* }
%"class.gfx::DelegatedInkMetadata" = type <{ %"class.gfx::PointF", double, i32, [4 x i8], %"class.base::TimeTicks", %"class.gfx::RectF", %"class.base::TimeTicks", i8, [7 x i8] }>
%"class.std::__1::vector.642" = type { %"class.std::__1::__vector_base.643" }
%"class.std::__1::__vector_base.643" = type { %"class.std::__1::unique_ptr.644"*, %"class.std::__1::unique_ptr.644"*, %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::unique_ptr.644" = type opaque
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.std::__1::unique_ptr.644"* }
%"class.std::__1::vector.595" = type { %"class.std::__1::__vector_base.596" }
%"class.std::__1::__vector_base.596" = type { %"class.std::__1::unique_ptr.597"*, %"class.std::__1::unique_ptr.597"*, %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::unique_ptr.597" = type { %"class.std::__1::__compressed_pair.1457" }
%"class.std::__1::__compressed_pair.1457" = type { %"struct.std::__1::__compressed_pair_elem.1458" }
%"struct.std::__1::__compressed_pair_elem.1458" = type { %"class.cc::SwapPromise"* }
%"class.cc::SwapPromise" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { %"class.std::__1::unique_ptr.597"* }
%"class.cc::LayerTreeDebugState" = type <{ i8, [7 x i8], %"class.std::__1::bitset", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"struct.cc::ManagedMemoryPolicy" = type { i64, i32, i64 }
%"class.cc::TileManager" = type { %"class.cc::CheckerImageTrackerClient", %"class.cc::TileManagerClient"*, %"class.base::SequencedTaskRunner"*, %"class.cc::ResourcePool"*, %"class.std::__1::unique_ptr.653", %"class.cc::RasterBufferProvider"*, %"class.cc::GlobalStateThatImpactsTilePriority", i64, %"struct.cc::TileManagerSettings", i8, i8, %"class.cc::RasterQueryQueue"*, %"class.std::__1::unordered_map.659", i8, [7 x i8], %"struct.cc::MemoryHistory::Entry", i8, i8, %"class.cc::ImageController", %"class.cc::DecodedImageTracker", %"class.cc::CheckerImageTracker", %"struct.cc::RasterTaskCompletionStats", %"struct.cc::TaskGraph", %"class.cc::UniqueNotifier", %"struct.cc::TileManager::Signals", %"class.cc::UniqueNotifier", i8, i64, i64, %"class.std::__1::unordered_set", i64, i64, i8, [7 x i8], %"class.std::__1::unordered_map.885", %"class.std::__1::vector.747", i32, %class.GURL, i8, %"class.base::internal::CancelableCallbackImpl", %"class.base::WaitableEvent", %"class.base::WeakPtrFactory.923", %"class.base::WeakPtrFactory.923" }
%"class.cc::CheckerImageTrackerClient" = type { i32 (...)** }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.cc::TileTaskManager"* }
%"class.cc::TileTaskManager" = type { i32 (...)** }
%"struct.cc::TileManagerSettings" = type { i8, i8, i64 }
%"class.std::__1::unordered_map.659" = type { %"class.std::__1::__hash_table.660" }
%"class.std::__1::__hash_table.660" = type <{ %"class.std::__1::unique_ptr.661", %"class.std::__1::__compressed_pair.671", %"class.std::__1::__compressed_pair.676", %"class.std::__1::__compressed_pair.681", [4 x i8] }>
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663", %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"struct.std::__1::__hash_node_base.664"** }
%"struct.std::__1::__hash_node_base.664" = type { %"struct.std::__1::__hash_node_base.664"* }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.std::__1::__bucket_list_deallocator.666" }
%"class.std::__1::__bucket_list_deallocator.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"struct.std::__1::__hash_node_base.664" }
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.cc::MemoryHistory::Entry" = type <{ i64, i64, i8, [7 x i8] }>
%"class.cc::ImageController" = type { i32 (...)**, %class.scoped_refptr.686, %"class.base::WeakPtr.687", %"class.cc::ImageDecodeCache"*, %"class.std::__1::vector.688", %"class.base::flat_map.723", %"class.base::SequencedTaskRunner"*, i64, %"class.base::Lock", %"class.std::__1::map.733", %"class.std::__1::map.733", i8, %"class.std::__1::vector.742", %"class.base::WeakPtrFactory.759" }
%class.scoped_refptr.686 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::WeakPtr.687" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"class.cc::DrawImage"*, %"class.cc::DrawImage"*, %"class.std::__1::__compressed_pair.718" }
%"class.cc::DrawImage" = type <{ %"class.cc::PaintImage", i8, [3 x i8], %struct.SkIRect, i32, %struct.SkSize, i8, [7 x i8], %"class.absl::optional.708", %"class.absl::optional.713", float, [4 x i8] }>
%"class.cc::PaintImage" = type { %class.sk_sp.690, %class.sk_sp.692, %"class.gfx::Rect", i32, %class.sk_sp.697, %class.sk_sp.705, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.690, %class.scoped_refptr.706 }
%class.sk_sp.692 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.693", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { i8* }
%class.sk_sp.697 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.698" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.691, i32, i32 }
%class.sk_sp.691 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.698" = type { %"class.std::__1::__vector_base.699" }
%"class.std::__1::__vector_base.699" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.700" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.705 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.sk_sp.690 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.706 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.707", [4 x i8] }>
%"class.base::RefCountedThreadSafe.707" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%struct.SkSize = type { float, float }
%"class.absl::optional.708" = type { %"class.absl::optional_internal::optional_data.709" }
%"class.absl::optional_internal::optional_data.709" = type { %"class.absl::optional_internal::optional_data_base.710" }
%"class.absl::optional_internal::optional_data_base.710" = type { %"class.absl::optional_internal::optional_data_dtor_base.711" }
%"class.absl::optional_internal::optional_data_dtor_base.711" = type { i8, %union.anon.712 }
%union.anon.712 = type { i64 }
%"class.absl::optional.713" = type { %"class.absl::optional_internal::optional_data.714" }
%"class.absl::optional_internal::optional_data.714" = type { %"class.absl::optional_internal::optional_data_base.715" }
%"class.absl::optional_internal::optional_data_base.715" = type { %"class.absl::optional_internal::optional_data_dtor_base.716" }
%"class.absl::optional_internal::optional_data_dtor_base.716" = type { i8, %union.anon.717 }
%union.anon.717 = type { %"class.gfx::ColorSpace" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.cc::DrawImage"* }
%"class.base::flat_map.723" = type { %"class.base::internal::flat_tree.724" }
%"class.base::internal::flat_tree.724" = type { %"class.std::__1::vector.725" }
%"class.std::__1::vector.725" = type { %"class.std::__1::__vector_base.726" }
%"class.std::__1::__vector_base.726" = type { %"struct.std::__1::pair.727"*, %"struct.std::__1::pair.727"*, %"class.std::__1::__compressed_pair.728" }
%"struct.std::__1::pair.727" = type opaque
%"class.std::__1::__compressed_pair.728" = type { %"struct.std::__1::__compressed_pair_elem.729" }
%"struct.std::__1::__compressed_pair_elem.729" = type { %"struct.std::__1::pair.727"* }
%"class.std::__1::map.733" = type { %"class.std::__1::__tree.734" }
%"class.std::__1::__tree.734" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.735", %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.735" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::vector.742" = type { %"class.std::__1::__vector_base.743" }
%"class.std::__1::__vector_base.743" = type { %"struct.cc::ImageController::ImageDecodeRequest"*, %"struct.cc::ImageController::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.754" }
%"struct.cc::ImageController::ImageDecodeRequest" = type <{ i64, %"class.cc::DrawImage", %"class.base::OnceCallback.744", %class.scoped_refptr.745, i8, [7 x i8] }>
%"class.base::OnceCallback.744" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.106 }
%class.scoped_refptr.106 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.107", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.107" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.745 = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector.747", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.746", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe.746" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.cc::ImageController::ImageDecodeRequest"* }
%"class.base::WeakPtrFactory.759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::DecodedImageTracker" = type { %"class.cc::ImageController"*, %"class.base::flat_map.760", i8, %class.scoped_refptr.686, %"class.base::TickClock"*, %"class.base::WeakPtrFactory.770" }
%"class.base::flat_map.760" = type { %"class.base::internal::flat_tree.761" }
%"class.base::internal::flat_tree.761" = type { %"class.std::__1::vector.762" }
%"class.std::__1::vector.762" = type { %"class.std::__1::__vector_base.763" }
%"class.std::__1::__vector_base.763" = type { %"struct.std::__1::pair.764"*, %"struct.std::__1::pair.764"*, %"class.std::__1::__compressed_pair.765" }
%"struct.std::__1::pair.764" = type { i32, %"class.std::__1::unique_ptr.1443" }
%"class.std::__1::unique_ptr.1443" = type { %"class.std::__1::__compressed_pair.1444" }
%"class.std::__1::__compressed_pair.1444" = type { %"struct.std::__1::__compressed_pair_elem.1445" }
%"struct.std::__1::__compressed_pair_elem.1445" = type { %"class.cc::DecodedImageTracker::ImageLock"* }
%"class.cc::DecodedImageTracker::ImageLock" = type { %"class.cc::DecodedImageTracker"*, i64, %"class.base::TimeTicks" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"struct.std::__1::pair.764"* }
%"class.base::WeakPtrFactory.770" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::CheckerImageTracker" = type { %"class.cc::ImageController"*, %"class.cc::CheckerImageTrackerClient"*, i8, i64, i8, %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771", %"class.std::__1::vector.772", i32, %"class.absl::optional.779", %"class.std::__1::unordered_map.784", %"class.std::__1::unordered_map.808", %"class.base::flat_map.832", %"class.base::WeakPtrFactory.842" }
%"class.base::internal::flat_tree.771" = type { %"class.std::__1::vector.149" }
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"struct.cc::CheckerImageTracker::ImageDecodeRequest"*, %"class.std::__1::__compressed_pair.774" }
%"struct.cc::CheckerImageTracker::ImageDecodeRequest" = type <{ %"class.cc::PaintImage", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"struct.cc::CheckerImageTracker::ImageDecodeRequest"* }
%"class.absl::optional.779" = type { %"class.absl::optional_internal::optional_data.780" }
%"class.absl::optional_internal::optional_data.780" = type { %"class.absl::optional_internal::optional_data_base.781" }
%"class.absl::optional_internal::optional_data_base.781" = type { %"class.absl::optional_internal::optional_data_dtor_base.782" }
%"class.absl::optional_internal::optional_data_dtor_base.782" = type { i8, %union.anon.783 }
%union.anon.783 = type { %"class.cc::PaintImage" }
%"class.std::__1::unordered_map.784" = type { %"class.std::__1::__hash_table.785" }
%"class.std::__1::__hash_table.785" = type <{ %"class.std::__1::unique_ptr.786", %"class.std::__1::__compressed_pair.796", %"class.std::__1::__compressed_pair.801", %"class.std::__1::__compressed_pair.804", [4 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788", %"struct.std::__1::__compressed_pair_elem.790" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.std::__1::__hash_node_base.789"** }
%"struct.std::__1::__hash_node_base.789" = type { %"struct.std::__1::__hash_node_base.789"* }
%"struct.std::__1::__compressed_pair_elem.790" = type { %"class.std::__1::__bucket_list_deallocator.791" }
%"class.std::__1::__bucket_list_deallocator.791" = type { %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::__hash_node_base.789" }
%"class.std::__1::__compressed_pair.801" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.804" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.808" = type { %"class.std::__1::__hash_table.809" }
%"class.std::__1::__hash_table.809" = type <{ %"class.std::__1::unique_ptr.810", %"class.std::__1::__compressed_pair.820", %"class.std::__1::__compressed_pair.825", %"class.std::__1::__compressed_pair.828", [4 x i8] }>
%"class.std::__1::unique_ptr.810" = type { %"class.std::__1::__compressed_pair.811" }
%"class.std::__1::__compressed_pair.811" = type { %"struct.std::__1::__compressed_pair_elem.812", %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.812" = type { %"struct.std::__1::__hash_node_base.813"** }
%"struct.std::__1::__hash_node_base.813" = type { %"struct.std::__1::__hash_node_base.813"* }
%"struct.std::__1::__compressed_pair_elem.814" = type { %"class.std::__1::__bucket_list_deallocator.815" }
%"class.std::__1::__bucket_list_deallocator.815" = type { %"class.std::__1::__compressed_pair.816" }
%"class.std::__1::__compressed_pair.816" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"struct.std::__1::__hash_node_base.813" }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.828" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.base::flat_map.832" = type { %"class.base::internal::flat_tree.833" }
%"class.base::internal::flat_tree.833" = type { %"class.std::__1::vector.834" }
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { %"struct.std::__1::pair.836"*, %"struct.std::__1::pair.836"*, %"class.std::__1::__compressed_pair.837" }
%"struct.std::__1::pair.836" = type { i32, i32 }
%"class.std::__1::__compressed_pair.837" = type { %"struct.std::__1::__compressed_pair_elem.838" }
%"struct.std::__1::__compressed_pair_elem.838" = type { %"struct.std::__1::pair.836"* }
%"class.base::WeakPtrFactory.842" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"struct.cc::RasterTaskCompletionStats" = type { i64, i64 }
%"struct.cc::TaskGraph" = type { %"class.std::__1::vector.843", %"class.std::__1::vector.851" }
%"class.std::__1::vector.843" = type { %"class.std::__1::__vector_base.844" }
%"class.std::__1::__vector_base.844" = type { %"struct.cc::TaskGraph::Node"*, %"struct.cc::TaskGraph::Node"*, %"class.std::__1::__compressed_pair.846" }
%"struct.cc::TaskGraph::Node" = type { %class.scoped_refptr.845, i16, i16, i32 }
%class.scoped_refptr.845 = type { %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.cc::TaskGraph::Node"* }
%"class.std::__1::vector.851" = type { %"class.std::__1::__vector_base.852" }
%"class.std::__1::__vector_base.852" = type { %"struct.cc::TaskGraph::Edge"*, %"struct.cc::TaskGraph::Edge"*, %"class.std::__1::__compressed_pair.853" }
%"struct.cc::TaskGraph::Edge" = type { %"class.cc::Task"*, %"class.cc::Task"* }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.854" }
%"struct.std::__1::__compressed_pair_elem.854" = type { %"struct.cc::TaskGraph::Edge"* }
%"struct.cc::TileManager::Signals" = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.cc::UniqueNotifier" = type { %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.858", %"class.base::Lock", i8, %"class.base::WeakPtrFactory.859" }
%"class.base::WeakPtrFactory.859" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.860" }
%"class.std::__1::__hash_table.860" = type <{ %"class.std::__1::unique_ptr.861", %"class.std::__1::__compressed_pair.871", %"class.std::__1::__compressed_pair.876", %"class.std::__1::__compressed_pair.880", [4 x i8] }>
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863", %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::__hash_node_base.864"** }
%"struct.std::__1::__hash_node_base.864" = type { %"struct.std::__1::__hash_node_base.864"* }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"class.std::__1::__bucket_list_deallocator.866" }
%"class.std::__1::__bucket_list_deallocator.866" = type { %"class.std::__1::__compressed_pair.867" }
%"class.std::__1::__compressed_pair.867" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"struct.std::__1::__hash_node_base.864" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.880" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::unordered_map.885" = type { %"class.std::__1::__hash_table.886" }
%"class.std::__1::__hash_table.886" = type <{ %"class.std::__1::unique_ptr.887", %"class.std::__1::__compressed_pair.897", %"class.std::__1::__compressed_pair.902", %"class.std::__1::__compressed_pair.905", [4 x i8] }>
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889", %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"struct.std::__1::__hash_node_base.890"** }
%"struct.std::__1::__hash_node_base.890" = type { %"struct.std::__1::__hash_node_base.890"* }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"class.std::__1::__bucket_list_deallocator.892" }
%"class.std::__1::__bucket_list_deallocator.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.897" = type { %"struct.std::__1::__compressed_pair_elem.898" }
%"struct.std::__1::__compressed_pair_elem.898" = type { %"struct.std::__1::__hash_node_base.890" }
%"class.std::__1::__compressed_pair.902" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.std::__1::vector.747" = type { %"class.std::__1::__vector_base.748" }
%"class.std::__1::__vector_base.748" = type { %class.scoped_refptr.745*, %class.scoped_refptr.745*, %"class.std::__1::__compressed_pair.749" }
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.750" }
%"struct.std::__1::__compressed_pair_elem.750" = type { %class.scoped_refptr.745* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.909" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %class.GURL* }
%"class.base::internal::CancelableCallbackImpl" = type { %"class.base::OnceCallback.915", %"class.base::WeakPtrFactory.916" }
%"class.base::OnceCallback.915" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.916" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.917, i8, [7 x i8] }>
%class.scoped_refptr.917 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.918", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.918" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.919" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.919" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::WeakPtrFactory.923" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::BrowserControlsOffsetManager"* }
%"class.cc::BrowserControlsOffsetManager" = type { i32 (...)**, %"class.cc::BrowserControlsOffsetManagerClient"*, i32, float, float, float, float, float, i8, i8, [2 x i8], %"struct.cc::BrowserControlsParams", i8, i8, float, float, %"class.absl::optional.927", %"class.absl::optional.927", [4 x i8], %"class.cc::BrowserControlsOffsetManager::Animation", %"class.cc::BrowserControlsOffsetManager::Animation" }
%"class.absl::optional.927" = type { %"class.absl::optional_internal::optional_data.928" }
%"class.absl::optional_internal::optional_data.928" = type { %"class.absl::optional_internal::optional_data_base.929" }
%"class.absl::optional_internal::optional_data_base.929" = type { %"class.absl::optional_internal::optional_data_dtor_base.930" }
%"class.absl::optional_internal::optional_data_dtor_base.930" = type { i8, %union.anon.931 }
%union.anon.931 = type { %"struct.std::__1::pair.932" }
%"struct.std::__1::pair.932" = type { float, float }
%"class.cc::BrowserControlsOffsetManager::Animation" = type <{ i8, i8, [2 x i8], i32, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeDelta", float, float, float, float, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.936" = type { %"class.std::__1::__compressed_pair.937" }
%"class.std::__1::__compressed_pair.937" = type { %"struct.std::__1::__compressed_pair_elem.938" }
%"struct.std::__1::__compressed_pair_elem.938" = type { %"class.cc::PageScaleAnimation"* }
%"class.cc::PageScaleAnimation" = type opaque
%"class.cc::DroppedFrameCounter" = type { %"class.base::TimeDelta", %"class.std::__1::queue", i32, double, %"class.cc::DroppedFrameCounter::SlidingWindowHistogram", %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::RingBuffer", i64, i64, i64, i64, i8, double, %"class.absl::optional.955", %"class.absl::optional.955", %"class.absl::optional.955", %"class.base::TimeTicks", %"class.base::TimeDelta", %"struct.cc::SharedMetricsBuffer"*, %"class.cc::FrameSorter", %"class.cc::TotalFrameCounter"*, %struct.anon.974, %"class.absl::optional.975", %"class.std::__1::map.980" }
%"class.std::__1::queue" = type { %"class.std::__1::deque.942" }
%"class.std::__1::deque.942" = type { %"class.std::__1::__deque_base.943" }
%"class.std::__1::__deque_base.943" = type { %"struct.std::__1::__split_buffer.944", i64, %"class.std::__1::__compressed_pair.951" }
%"struct.std::__1::__split_buffer.944" = type { %"struct.std::__1::pair.945"**, %"struct.std::__1::pair.945"**, %"struct.std::__1::pair.945"**, %"class.std::__1::__compressed_pair.946" }
%"struct.std::__1::pair.945" = type opaque
%"class.std::__1::__compressed_pair.946" = type { %"struct.std::__1::__compressed_pair_elem.947" }
%"struct.std::__1::__compressed_pair_elem.947" = type { %"struct.std::__1::pair.945"** }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::DroppedFrameCounter::SlidingWindowHistogram" = type { [101 x i32], i32 }
%"class.base::RingBuffer" = type { [180 x i32], i64 }
%"class.absl::optional.955" = type { %"class.absl::optional_internal::optional_data.956" }
%"class.absl::optional_internal::optional_data.956" = type { %"class.absl::optional_internal::optional_data_base.957" }
%"class.absl::optional_internal::optional_data_base.957" = type { %"class.absl::optional_internal::optional_data_dtor_base.958" }
%"class.absl::optional_internal::optional_data_dtor_base.958" = type { i8, %union.anon.959 }
%union.anon.959 = type { double }
%"struct.cc::SharedMetricsBuffer" = type opaque
%"class.cc::FrameSorter" = type { i64, %"class.base::RepeatingCallback.960", %"class.base::circular_deque.961", %"class.std::__1::map.963", %"class.absl::optional.708" }
%"class.base::RepeatingCallback.960" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::circular_deque.961" = type { %"class.base::internal::VectorBuffer.962", i64, i64 }
%"class.base::internal::VectorBuffer.962" = type { %"struct.viz::BeginFrameArgs"*, i64 }
%"class.std::__1::map.963" = type { %"class.std::__1::__tree.964" }
%"class.std::__1::__tree.964" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.965", %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%struct.anon.974 = type { double, double }
%"class.absl::optional.975" = type { %"class.absl::optional_internal::optional_data.976" }
%"class.absl::optional_internal::optional_data.976" = type { %"class.absl::optional_internal::optional_data_base.977" }
%"class.absl::optional_internal::optional_data_base.977" = type { %"class.absl::optional_internal::optional_data_dtor_base.978" }
%"class.absl::optional_internal::optional_data_dtor_base.978" = type { i8, %union.anon.979 }
%union.anon.979 = type { %"struct.cc::DroppedFrameCounter::ScrollStartInfo" }
%"struct.cc::DroppedFrameCounter::ScrollStartInfo" = type { %"class.base::TimeTicks", %"struct.viz::BeginFrameId" }
%"class.std::__1::map.980" = type { %"class.std::__1::__tree.981" }
%"class.std::__1::__tree.981" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.982", %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::TotalFrameCounter" = type { i64, %"class.base::TimeDelta", %"class.base::TimeTicks" }
%"class.std::__1::unique_ptr.989" = type { %"class.std::__1::__compressed_pair.990" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.cc::MemoryHistory"* }
%"class.cc::MemoryHistory" = type { %"class.base::RingBuffer.992" }
%"class.base::RingBuffer.992" = type { [80 x %"struct.cc::MemoryHistory::Entry"], i64 }
%"class.std::__1::unique_ptr.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.cc::DebugRectHistory"* }
%"class.cc::DebugRectHistory" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.std::__1::unique_ptr.1002" = type { %"class.std::__1::__compressed_pair.1003" }
%"class.std::__1::__compressed_pair.1003" = type { %"struct.std::__1::__compressed_pair_elem.1004" }
%"struct.std::__1::__compressed_pair_elem.1004" = type { %"class.cc::MutatorHost"* }
%"class.cc::MutatorHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1008" = type { %"class.std::__1::__compressed_pair.1009" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.1010" }
%"struct.std::__1::__compressed_pair_elem.1010" = type { %"class.cc::MutatorEvents"* }
%"class.cc::MutatorEvents" = type { i32 (...)** }
%"class.std::__1::set.1014" = type { %"class.std::__1::__tree.1015" }
%"class.std::__1::__tree.1015" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1016", %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::RasterDarkModeFilter" = type opaque
%"class.std::__1::unordered_map.1024" = type { %"class.std::__1::__hash_table.1025" }
%"class.std::__1::__hash_table.1025" = type <{ %"class.std::__1::unique_ptr.1026", %"class.std::__1::__compressed_pair.1036", %"class.std::__1::__compressed_pair.1041", %"class.std::__1::__compressed_pair.1044", [4 x i8] }>
%"class.std::__1::unique_ptr.1026" = type { %"class.std::__1::__compressed_pair.1027" }
%"class.std::__1::__compressed_pair.1027" = type { %"struct.std::__1::__compressed_pair_elem.1028", %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1028" = type { %"struct.std::__1::__hash_node_base.1029"** }
%"struct.std::__1::__hash_node_base.1029" = type { %"struct.std::__1::__hash_node_base.1029"* }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"class.std::__1::__bucket_list_deallocator.1031" }
%"class.std::__1::__bucket_list_deallocator.1031" = type { %"class.std::__1::__compressed_pair.1032" }
%"class.std::__1::__compressed_pair.1032" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"struct.std::__1::__hash_node_base.1029" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::__compressed_pair.1044" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"class.cc::RenderingStatsInstrumentation" = type { i32 (...)**, %"struct.cc::RenderingStats", i8, %"class.base::Lock" }
%"struct.cc::RenderingStats" = type { i64, i64, i64, i64, i64, i64, %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList", %"class.cc::RenderingStats::TimeDeltaList" }
%"class.cc::RenderingStats::TimeDeltaList" = type { %"class.std::__1::vector.1048" }
%"class.std::__1::vector.1048" = type { %"class.std::__1::__vector_base.1049" }
%"class.std::__1::__vector_base.1049" = type { %"class.base::TimeDelta"*, %"class.base::TimeDelta"*, %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.base::TimeDelta"* }
%"class.cc::MicroBenchmarkControllerImpl" = type { %"class.cc::LayerTreeHostImpl"*, %"class.std::__1::vector.1055" }
%"class.std::__1::vector.1055" = type { %"class.std::__1::__vector_base.1056" }
%"class.std::__1::__vector_base.1056" = type { %"class.std::__1::unique_ptr.1057"*, %"class.std::__1::unique_ptr.1057"*, %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::unique_ptr.1057" = type opaque
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.std::__1::unique_ptr.1057"* }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.cc::SynchronousTaskGraphRunner"* }
%"class.cc::SynchronousTaskGraphRunner" = type opaque
%"class.base::RepeatingCallback.858" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::TaskGraphRunner" = type { i32 (...)** }
%"class.std::__1::set.1069" = type { %"class.std::__1::__tree.1070" }
%"class.std::__1::__tree.1070" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1071", %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1071" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::unique_ptr.1079" = type { %"class.std::__1::__compressed_pair.1080" }
%"class.std::__1::__compressed_pair.1080" = type { %"struct.std::__1::__compressed_pair_elem.1081" }
%"struct.std::__1::__compressed_pair_elem.1081" = type { %"class.cc::Viewport"* }
%"class.cc::Viewport" = type <{ %"class.cc::LayerTreeHostImpl"*, i8, [3 x i8], %"class.gfx::Vector2d", [4 x i8] }>
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::unique_ptr.1085" = type { %"class.std::__1::__compressed_pair.1086" }
%"class.std::__1::__compressed_pair.1086" = type { %"struct.std::__1::__compressed_pair_elem.1087" }
%"struct.std::__1::__compressed_pair_elem.1087" = type { %"class.cc::PendingTreeRasterDurationHistogramTimer"* }
%"class.cc::PendingTreeRasterDurationHistogramTimer" = type opaque
%"class.std::__1::vector.1091" = type { %"class.std::__1::__vector_base.1092" }
%"class.std::__1::__vector_base.1092" = type { %"struct.std::__1::pair.1093"*, %"struct.std::__1::pair.1093"*, %"class.std::__1::__compressed_pair.1094" }
%"struct.std::__1::pair.1093" = type opaque
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::pair.1093"* }
%"class.cc::ImageAnimationController" = type <{ %"class.base::flat_map.1099", %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771", %"class.cc::ImageAnimationController::InvalidationScheduler", i8, i8, i8, [5 x i8] }>
%"class.base::flat_map.1099" = type { %"class.base::internal::flat_tree.1100" }
%"class.base::internal::flat_tree.1100" = type { %"class.std::__1::vector.1101" }
%"class.std::__1::vector.1101" = type { %"class.std::__1::__vector_base.1102" }
%"class.std::__1::__vector_base.1102" = type { %"struct.std::__1::pair.1103"*, %"struct.std::__1::pair.1103"*, %"class.std::__1::__compressed_pair.1104" }
%"struct.std::__1::pair.1103" = type { i32, %"class.cc::ImageAnimationController::AnimationState" }
%"class.cc::ImageAnimationController::AnimationState" = type { i32, %"class.std::__1::vector.698", i32, %"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState", %"class.base::internal::flat_tree.1449", i64, i8, i8, %"class.base::TimeTicks", i32, i32, i64 }
%"struct.cc::ImageAnimationController::AnimationState::AnimationAdvancementState" = type { i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i64 }
%"class.base::internal::flat_tree.1449" = type { %"class.std::__1::vector.1450" }
%"class.std::__1::vector.1450" = type { %"class.std::__1::__vector_base.1451" }
%"class.std::__1::__vector_base.1451" = type { %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.cc::ImageAnimationController::AnimationDriver"**, %"class.std::__1::__compressed_pair.1452" }
%"class.std::__1::__compressed_pair.1452" = type { %"struct.std::__1::__compressed_pair_elem.1453" }
%"struct.std::__1::__compressed_pair_elem.1453" = type { %"class.cc::ImageAnimationController::AnimationDriver"** }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"struct.std::__1::pair.1103"* }
%"class.cc::ImageAnimationController::InvalidationScheduler" = type { %"class.base::SingleThreadTaskRunner"*, %"class.cc::ImageAnimationController::Client"*, %"class.base::RepeatingCallback.1109", i32, %"class.base::TimeTicks", %"class.base::WeakPtrFactory.1110" }
%"class.base::RepeatingCallback.1109" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.1110" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1111" = type { %"class.std::__1::__compressed_pair.1112" }
%"class.std::__1::__compressed_pair.1112" = type { %"struct.std::__1::__compressed_pair_elem.1113" }
%"struct.std::__1::__compressed_pair_elem.1113" = type { %"class.cc::UkmManager"* }
%"class.cc::UkmManager" = type { i8, i64, i64, i64, i64, i64, i32, i64, %"class.std::__1::unique_ptr.1114" }
%"class.std::__1::unique_ptr.1114" = type { %"class.std::__1::__compressed_pair.1115" }
%"class.std::__1::__compressed_pair.1115" = type { %"struct.std::__1::__compressed_pair_elem.1116" }
%"struct.std::__1::__compressed_pair_elem.1116" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1123" = type { %"class.std::__1::__compressed_pair.1124" }
%"class.std::__1::__compressed_pair.1124" = type { %"struct.std::__1::__compressed_pair_elem.1125" }
%"struct.std::__1::__compressed_pair_elem.1125" = type { %"class.cc::RenderFrameMetadataObserver"* }
%"class.cc::RenderFrameMetadataObserver" = type opaque
%"class.viz::FrameTokenGenerator" = type { i32 }
%"class.base::internal::flat_tree.575" = type { %"class.std::__1::vector.576" }
%"class.std::__1::vector.576" = type { %"class.std::__1::__vector_base.577" }
%"class.std::__1::__vector_base.577" = type { %"class.viz::SurfaceRange"*, %"class.viz::SurfaceRange"*, %"class.std::__1::__compressed_pair.583" }
%"class.viz::SurfaceRange" = type { %"class.absl::optional.578", %"class.viz::SurfaceId" }
%"class.absl::optional.578" = type { %"class.absl::optional_internal::optional_data.579" }
%"class.absl::optional_internal::optional_data.579" = type { %"class.absl::optional_internal::optional_data_base.580" }
%"class.absl::optional_internal::optional_data_base.580" = type { %"class.absl::optional_internal::optional_data_dtor_base.581" }
%"class.absl::optional_internal::optional_data_dtor_base.581" = type { i8, %union.anon.582 }
%union.anon.582 = type { %"class.viz::SurfaceId" }
%"class.viz::SurfaceId" = type { %"class.viz::FrameSinkId", %"class.viz::LocalSurfaceId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"class.viz::SurfaceRange"* }
%"class.absl::optional.1129" = type { %"class.absl::optional_internal::optional_data.1130" }
%"class.absl::optional_internal::optional_data.1130" = type { %"class.absl::optional_internal::optional_data_base.1131" }
%"class.absl::optional_internal::optional_data_base.1131" = type { %"class.absl::optional_internal::optional_data_dtor_base.1132" }
%"class.absl::optional_internal::optional_data_dtor_base.1132" = type { i8, [7 x i8], %union.anon.1133 }
%union.anon.1133 = type { %"class.cc::RenderFrameMetadata" }
%"class.cc::RenderFrameMetadata" = type <{ i8, [3 x i8], i32, %"class.absl::optional.1134", %"struct.viz::Selection.1139", i8, %"class.absl::optional.1140", i8, float, %"class.gfx::Size", [4 x i8], %"class.absl::optional.1145", float, float, float, float, i32, [4 x i8] }>
%"class.absl::optional.1134" = type { %"class.absl::optional_internal::optional_data.1135" }
%"class.absl::optional_internal::optional_data.1135" = type { %"class.absl::optional_internal::optional_data_base.1136" }
%"class.absl::optional_internal::optional_data_base.1136" = type { %"class.absl::optional_internal::optional_data_dtor_base.1137" }
%"class.absl::optional_internal::optional_data_dtor_base.1137" = type { i8, %union.anon.1138 }
%union.anon.1138 = type { %"class.gfx::Vector2dF" }
%"struct.viz::Selection.1139" = type { %"class.gfx::SelectionBound", %"class.gfx::SelectionBound" }
%"class.gfx::SelectionBound" = type <{ i32, %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::PointF", %"class.gfx::Point", %"class.gfx::Point", i8, [3 x i8] }>
%"class.absl::optional.1140" = type { %"class.absl::optional_internal::optional_data.1141" }
%"class.absl::optional_internal::optional_data.1141" = type { %"class.absl::optional_internal::optional_data_base.1142" }
%"class.absl::optional_internal::optional_data_base.1142" = type { %"class.absl::optional_internal::optional_data_dtor_base.1143" }
%"class.absl::optional_internal::optional_data_dtor_base.1143" = type { i8, %union.anon.1144 }
%union.anon.1144 = type { %"struct.cc::DelegatedInkBrowserMetadata" }
%"struct.cc::DelegatedInkBrowserMetadata" = type { i8 }
%"class.absl::optional.1145" = type { %"class.absl::optional_internal::optional_data.1146" }
%"class.absl::optional_internal::optional_data.1146" = type { %"class.absl::optional_internal::optional_data_base.1147" }
%"class.absl::optional_internal::optional_data_base.1147" = type { %"class.absl::optional_internal::optional_data_dtor_base.1148" }
%"class.absl::optional_internal::optional_data_dtor_base.1148" = type { i8, %union.anon.1149 }
%union.anon.1149 = type { %"class.viz::LocalSurfaceId" }
%"class.viz::LocalSurfaceId" = type { i32, i32, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.viz::ChildLocalSurfaceIdAllocator" = type { %"class.viz::LocalSurfaceId" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.base::MemoryPressureListener"* }
%"class.base::MemoryPressureListener" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback", %"class.base::Location" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.cc::PresentationTimeCallbackBuffer" = type { %"class.base::circular_deque.1150" }
%"class.base::circular_deque.1150" = type { %"class.base::internal::VectorBuffer.1151", i64, i64 }
%"class.base::internal::VectorBuffer.1151" = type { %"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo"*, i64 }
%"struct.cc::PresentationTimeCallbackBuffer::FrameTokenInfo" = type { i32, %"class.std::__1::vector.621", %"class.std::__1::vector.621" }
%"class.cc::FrameSequenceTrackerCollection" = type { i8, %"class.std::__1::unique_ptr.1152", %"class.base::flat_map.1158", %"class.base::flat_map.1168", %"class.base::RepeatingCallback.1178", %"class.std::__1::vector.1179", %"class.cc::CompositorFrameReportingController"*, %"class.base::flat_map.1187", i64, i64 }
%"class.std::__1::unique_ptr.1152" = type { %"class.std::__1::__compressed_pair.1153" }
%"class.std::__1::__compressed_pair.1153" = type { %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.cc::ThroughputUkmReporter"* }
%"class.cc::ThroughputUkmReporter" = type opaque
%"class.base::flat_map.1158" = type { %"class.base::internal::flat_tree.1159" }
%"class.base::internal::flat_tree.1159" = type { %"class.std::__1::vector.1160" }
%"class.std::__1::vector.1160" = type { %"class.std::__1::__vector_base.1161" }
%"class.std::__1::__vector_base.1161" = type { %"struct.std::__1::pair.1162"*, %"struct.std::__1::pair.1162"*, %"class.std::__1::__compressed_pair.1163" }
%"struct.std::__1::pair.1162" = type opaque
%"class.std::__1::__compressed_pair.1163" = type { %"struct.std::__1::__compressed_pair_elem.1164" }
%"struct.std::__1::__compressed_pair_elem.1164" = type { %"struct.std::__1::pair.1162"* }
%"class.base::flat_map.1168" = type { %"class.base::internal::flat_tree.1169" }
%"class.base::internal::flat_tree.1169" = type { %"class.std::__1::vector.1170" }
%"class.std::__1::vector.1170" = type { %"class.std::__1::__vector_base.1171" }
%"class.std::__1::__vector_base.1171" = type { %"struct.std::__1::pair.1172"*, %"struct.std::__1::pair.1172"*, %"class.std::__1::__compressed_pair.1173" }
%"struct.std::__1::pair.1172" = type opaque
%"class.std::__1::__compressed_pair.1173" = type { %"struct.std::__1::__compressed_pair_elem.1174" }
%"struct.std::__1::__compressed_pair_elem.1174" = type { %"struct.std::__1::pair.1172"* }
%"class.base::RepeatingCallback.1178" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::vector.1179" = type { %"class.std::__1::__vector_base.1180" }
%"class.std::__1::__vector_base.1180" = type { %"class.std::__1::unique_ptr.1181"*, %"class.std::__1::unique_ptr.1181"*, %"class.std::__1::__compressed_pair.1182" }
%"class.std::__1::unique_ptr.1181" = type opaque
%"class.std::__1::__compressed_pair.1182" = type { %"struct.std::__1::__compressed_pair_elem.1183" }
%"struct.std::__1::__compressed_pair_elem.1183" = type { %"class.std::__1::unique_ptr.1181"* }
%"class.base::flat_map.1187" = type { %"class.base::internal::flat_tree.1188" }
%"class.base::internal::flat_tree.1188" = type { %"class.std::__1::vector.1189" }
%"class.std::__1::vector.1189" = type { %"class.std::__1::__vector_base.1190" }
%"class.std::__1::__vector_base.1190" = type { %"struct.std::__1::pair.1191"*, %"struct.std::__1::pair.1191"*, %"class.std::__1::__compressed_pair.1192" }
%"struct.std::__1::pair.1191" = type opaque
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"struct.std::__1::pair.1191"* }
%"class.std::__1::unique_ptr.1197" = type { %"class.std::__1::__compressed_pair.1198" }
%"class.std::__1::__compressed_pair.1198" = type { %"struct.std::__1::__compressed_pair_elem.1199" }
%"struct.std::__1::__compressed_pair_elem.1199" = type { %"class.cc::PaintWorkletLayerPainter"* }
%"class.cc::PaintWorkletLayerPainter" = type opaque
%"class.cc::AnimatedPaintWorkletTracker" = type { %"class.base::flat_map.1203", %"class.base::internal::flat_tree.1213" }
%"class.base::flat_map.1203" = type { %"class.base::internal::flat_tree.1204" }
%"class.base::internal::flat_tree.1204" = type { %"class.std::__1::vector.1205" }
%"class.std::__1::vector.1205" = type { %"class.std::__1::__vector_base.1206" }
%"class.std::__1::__vector_base.1206" = type { %"struct.std::__1::pair.1207"*, %"struct.std::__1::pair.1207"*, %"class.std::__1::__compressed_pair.1208" }
%"struct.std::__1::pair.1207" = type opaque
%"class.std::__1::__compressed_pair.1208" = type { %"struct.std::__1::__compressed_pair_elem.1209" }
%"struct.std::__1::__compressed_pair_elem.1209" = type { %"struct.std::__1::pair.1207"* }
%"class.base::internal::flat_tree.1213" = type { %"class.std::__1::vector.1214" }
%"class.std::__1::vector.1214" = type { %"class.std::__1::__vector_base.1215" }
%"class.std::__1::__vector_base.1215" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.1226" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1216", %"class.absl::optional.1221", %"struct.cc::ElementId" }
%"class.absl::optional.1216" = type { %"class.absl::optional_internal::optional_data.1217" }
%"class.absl::optional_internal::optional_data.1217" = type { %"class.absl::optional_internal::optional_data_base.1218" }
%"class.absl::optional_internal::optional_data_base.1218" = type { %"class.absl::optional_internal::optional_data_dtor_base.1219" }
%"class.absl::optional_internal::optional_data_dtor_base.1219" = type { i8, %union.anon.1220 }
%union.anon.1220 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.1221" = type { %"class.absl::optional_internal::optional_data.1222" }
%"class.absl::optional_internal::optional_data.1222" = type { %"class.absl::optional_internal::optional_data_base.1223" }
%"class.absl::optional_internal::optional_data_base.1223" = type { %"class.absl::optional_internal::optional_data_dtor_base.1224" }
%"class.absl::optional_internal::optional_data_dtor_base.1224" = type { i8, %union.anon.1225 }
%union.anon.1225 = type { i32 }
%"class.std::__1::__compressed_pair.1226" = type { %"struct.std::__1::__compressed_pair_elem.1227" }
%"struct.std::__1::__compressed_pair_elem.1227" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.cc::AverageLagTrackingManager" = type { %"class.cc::AverageLagTracker", %"class.cc::AverageLagTracker", %"class.base::circular_deque.1243" }
%"class.cc::AverageLagTracker" = type <{ i32, [4 x i8], %"class.std::__1::deque.1231", %"class.base::TimeTicks", %"class.base::TimeTicks", float, float, %"class.base::TimeTicks", i8, [3 x i8], float, float, [4 x i8] }>
%"class.std::__1::deque.1231" = type { %"class.std::__1::__deque_base.1232" }
%"class.std::__1::__deque_base.1232" = type { %"struct.std::__1::__split_buffer.1233", i64, %"class.std::__1::__compressed_pair.1239" }
%"struct.std::__1::__split_buffer.1233" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"struct.cc::AverageLagTracker::LagAreaInFrame"**, %"class.std::__1::__compressed_pair.1234" }
%"struct.cc::AverageLagTracker::LagAreaInFrame" = type { %"class.base::TimeTicks", float, float, float, float }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"struct.cc::AverageLagTracker::LagAreaInFrame"** }
%"class.std::__1::__compressed_pair.1239" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.base::circular_deque.1243" = type { %"class.base::internal::VectorBuffer.1244", i64, i64 }
%"class.base::internal::VectorBuffer.1244" = type { %"struct.std::__1::pair.1245"*, i64 }
%"struct.std::__1::pair.1245" = type opaque
%"class.cc::DeJellyState" = type { i8, i32, float, float, %"class.absl::optional.1246", %"class.std::__1::map.1251", %"class.std::__1::map.1251" }
%"class.absl::optional.1246" = type { %"class.absl::optional_internal::optional_data.1247" }
%"class.absl::optional_internal::optional_data.1247" = type { %"class.absl::optional_internal::optional_data_base.1248" }
%"class.absl::optional_internal::optional_data_base.1248" = type { %"class.absl::optional_internal::optional_data_dtor_base.1249" }
%"class.absl::optional_internal::optional_data_dtor_base.1249" = type { i8, [3 x i8], %union.anon.1250 }
%union.anon.1250 = type { %"class.gfx::Transform" }
%"class.std::__1::map.1251" = type { %"class.std::__1::__tree.1252" }
%"class.std::__1::__tree.1252" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1253", %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1253" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::EventsMetricsManager" = type { %"class.std::__1::vector.1260", %"class.std::__1::vector.628" }
%"class.std::__1::vector.1260" = type { %"class.std::__1::__vector_base.1261" }
%"class.std::__1::__vector_base.1261" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.cc::EventsMetricsManager::ScopedMonitorImpl"**, %"class.std::__1::__compressed_pair.1262" }
%"class.cc::EventsMetricsManager::ScopedMonitorImpl" = type opaque
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.1263" }
%"struct.std::__1::__compressed_pair_elem.1263" = type { %"class.cc::EventsMetricsManager::ScopedMonitorImpl"** }
%"class.std::__1::unique_ptr.1267" = type { %"class.std::__1::__compressed_pair.1268" }
%"class.std::__1::__compressed_pair.1268" = type { %"struct.std::__1::__compressed_pair_elem.1269" }
%"struct.std::__1::__compressed_pair_elem.1269" = type { %"class.cc::LCDTextMetricsReporter"* }
%"class.cc::LCDTextMetricsReporter" = type opaque
%"class.cc::FrameRateEstimator" = type { i8, %"class.base::TimeTicks", i64, i8, %"class.cc::DelayedUniqueNotifier" }
%"class.cc::DelayedUniqueNotifier" = type { i32 (...)**, %"class.base::SequencedTaskRunner"*, %"class.base::RepeatingCallback.858", %"class.base::TimeDelta", %"class.base::TimeTicks", i8, %"class.base::WeakPtrFactory.1273" }
%"class.base::WeakPtrFactory.1273" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list.1274", %"class.std::__1::map.1281", i64 }
%"class.std::__1::list.1274" = type { %"class.std::__1::__list_imp.1275" }
%"class.std::__1::__list_imp.1275" = type { %"struct.std::__1::__list_node_base.1276", %"class.std::__1::__compressed_pair.1277" }
%"struct.std::__1::__list_node_base.1276" = type { %"struct.std::__1::__list_node_base.1276"*, %"struct.std::__1::__list_node_base.1276"* }
%"class.std::__1::__compressed_pair.1277" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.std::__1::map.1281" = type { %"class.std::__1::__tree.1282" }
%"class.std::__1::__tree.1282" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1283", %"class.std::__1::__compressed_pair.1287" }
%"class.std::__1::__compressed_pair.1283" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"class.std::__1::__compressed_pair.1287" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::ThrottleDecider" = type { %"class.base::flat_map.1292", %"class.base::internal::flat_tree.1302", %"class.base::internal::flat_tree.1302" }
%"class.base::flat_map.1292" = type { %"class.base::internal::flat_tree.1293" }
%"class.base::internal::flat_tree.1293" = type { %"class.std::__1::vector.1294" }
%"class.std::__1::vector.1294" = type { %"class.std::__1::__vector_base.1295" }
%"class.std::__1::__vector_base.1295" = type { %"struct.std::__1::pair.1296"*, %"struct.std::__1::pair.1296"*, %"class.std::__1::__compressed_pair.1297" }
%"struct.std::__1::pair.1296" = type opaque
%"class.std::__1::__compressed_pair.1297" = type { %"struct.std::__1::__compressed_pair_elem.1298" }
%"struct.std::__1::__compressed_pair_elem.1298" = type { %"struct.std::__1::pair.1296"* }
%"class.base::internal::flat_tree.1302" = type { %"class.std::__1::vector.1303" }
%"class.std::__1::vector.1303" = type { %"class.std::__1::__vector_base.1304" }
%"class.std::__1::__vector_base.1304" = type { %"class.viz::FrameSinkId"*, %"class.viz::FrameSinkId"*, %"class.std::__1::__compressed_pair.1305" }
%"class.std::__1::__compressed_pair.1305" = type { %"struct.std::__1::__compressed_pair_elem.1306" }
%"struct.std::__1::__compressed_pair_elem.1306" = type { %"class.viz::FrameSinkId"* }
%"class.std::__1::vector.195" = type { %"class.std::__1::__vector_base.196" }
%"class.std::__1::__vector_base.196" = type { i32*, i32*, %"class.std::__1::__compressed_pair.197" }
%"class.std::__1::__compressed_pair.197" = type { %"struct.std::__1::__compressed_pair_elem.198" }
%"struct.std::__1::__compressed_pair_elem.198" = type { i32* }
%"class.base::WeakPtrFactory.1310" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gfx::PointF" = type { float, float }
%"class.absl::optional.1311" = type { %"class.absl::optional_internal::optional_data.1312" }
%"class.absl::optional_internal::optional_data.1312" = type { %"class.absl::optional_internal::optional_data_base.1313" }
%"class.absl::optional_internal::optional_data_base.1313" = type { %"class.absl::optional_internal::optional_data_dtor_base.1314" }
%"class.absl::optional_internal::optional_data_dtor_base.1314" = type { i8, [7 x i8], %union.anon.1315 }
%union.anon.1315 = type { %"struct.cc::ScrollbarController::CapturedScrollbarMetadata" }
%"struct.cc::ScrollbarController::CapturedScrollbarMetadata" = type <{ %"struct.cc::ElementId", i32, [4 x i8] }>
%"class.absl::optional.1316" = type { %"class.absl::optional_internal::optional_data.1317" }
%"class.absl::optional_internal::optional_data.1317" = type { %"class.absl::optional_internal::optional_data_base.1318" }
%"class.absl::optional_internal::optional_data_base.1318" = type { %"class.absl::optional_internal::optional_data_dtor_base.1319" }
%"class.absl::optional_internal::optional_data_dtor_base.1319" = type { i8, %union.anon.1320 }
%union.anon.1320 = type { %"struct.cc::ScrollbarController::AutoScrollState" }
%"struct.cc::ScrollbarController::AutoScrollState" = type { i32, float, float, i32 }
%"class.absl::optional.1321" = type { %"class.absl::optional_internal::optional_data.1322" }
%"class.absl::optional_internal::optional_data.1322" = type { %"class.absl::optional_internal::optional_data_base.1323" }
%"class.absl::optional_internal::optional_data_base.1323" = type { %"class.absl::optional_internal::optional_data_dtor_base.1324" }
%"class.absl::optional_internal::optional_data_dtor_base.1324" = type { i8, %union.anon.1325 }
%union.anon.1325 = type { %"struct.cc::ScrollbarController::DragState" }
%"struct.cc::ScrollbarController::DragState" = type { %"class.gfx::PointF", float, float, float }
%"class.std::__1::unique_ptr.1326" = type { %"class.std::__1::__compressed_pair.1327" }
%"class.std::__1::__compressed_pair.1327" = type { %"struct.std::__1::__compressed_pair_elem.1328" }
%"struct.std::__1::__compressed_pair_elem.1328" = type { %"class.base::internal::CancelableCallbackImpl"* }
%"class.absl::optional.1335" = type { %"class.absl::optional_internal::optional_data.1336" }
%"class.absl::optional_internal::optional_data.1336" = type { %"class.absl::optional_internal::optional_data_base.1337" }
%"class.absl::optional_internal::optional_data_base.1337" = type { %"class.absl::optional_internal::optional_data_dtor_base.1338" }
%"class.absl::optional_internal::optional_data_dtor_base.1338" = type { i8, %union.anon.1339 }
%union.anon.1339 = type { i32 }
%"class.absl::optional.1340" = type { %"class.absl::optional_internal::optional_data.1341" }
%"class.absl::optional_internal::optional_data.1341" = type { %"class.absl::optional_internal::optional_data_base.1342" }
%"class.absl::optional_internal::optional_data_base.1342" = type { %"class.absl::optional_internal::optional_data_dtor_base.1343" }
%"class.absl::optional_internal::optional_data_dtor_base.1343" = type { i8, %union.anon.1344 }
%union.anon.1344 = type { %"class.cc::ScrollState" }
%"class.cc::ScrollState" = type { %"class.cc::ScrollStateData" }
%"class.cc::ScrollStateData" = type { double, double, double, double, i32, i32, double, double, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.cc::ElementId" }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.base::WeakPtrFactory.1345" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtr.1349" = type { %"class.base::internal::WeakPtrBase" }
%"struct.cc::InputHandler::ScrollStatus" = type <{ i32, i32, i8, i8, [2 x i8] }>
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1488", [4 x i8] }>
%"struct.std::__1::atomic.1488" = type { %"struct.std::__1::__atomic_base.1489" }
%"struct.std::__1::__atomic_base.1489" = type { %"struct.std::__1::__atomic_base.1490" }
%"struct.std::__1::__atomic_base.1490" = type { %"struct.std::__1::__cxx_atomic_impl.1491" }
%"struct.std::__1::__cxx_atomic_impl.1491" = type { %"struct.std::__1::__cxx_atomic_base_impl.1492" }
%"struct.std::__1::__cxx_atomic_base_impl.1492" = type { i32 }
%"class.std::__1::vector.1421" = type { %"class.std::__1::__vector_base.1422" }
%"class.std::__1::__vector_base.1422" = type { %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"**, %"class.std::__1::__compressed_pair.1423" }
%"class.std::__1::__compressed_pair.1423" = type { %"struct.std::__1::__compressed_pair_elem.1424" }
%"struct.std::__1::__compressed_pair_elem.1424" = type { %"class.cc::LayerImpl"** }
%"struct.cc::InputHandlerScrollResult" = type { i8, i8, %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::OverscrollBehavior", %"class.gfx::Vector2dF" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.1463", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.1463" = type { %"class.std::__1::__vector_base.1464" }
%"class.std::__1::__vector_base.1464" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.1471" }
%"class.std::__1::__compressed_pair.1471" = type { %"struct.std::__1::__compressed_pair_elem.1472" }
%"struct.std::__1::__compressed_pair_elem.1472" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.1465", i64, i64 }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.1476" }
%"class.std::__1::list.1476" = type { %"class.std::__1::__list_imp.1477" }
%"class.std::__1::__list_imp.1477" = type { %"struct.std::__1::__list_node_base.1478", %"class.std::__1::__compressed_pair.1479" }
%"struct.std::__1::__list_node_base.1478" = type { %"struct.std::__1::__list_node_base.1478"*, %"struct.std::__1::__list_node_base.1478"* }
%"class.std::__1::__compressed_pair.1479" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"class.cc::SnapSelectionStrategy" = type { i32 (...)**, %"class.gfx::ScrollOffset" }
%"class.cc::FrameSequenceTracker" = type <{ i32, i32, %"struct.cc::FrameSequenceTracker::TrackedFrameData", %"struct.cc::FrameSequenceTracker::TrackedFrameData", %"class.std::__1::unique_ptr.1356", %"struct.cc::FrameSequenceTracker::CheckerboardingData", %"class.base::circular_deque.1369", i64, i32, i32, i64, i64, i64, %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, i8, i8, [4 x i8], %"class.base::internal::flat_tree.194", %"class.base::TimeDelta", i64, i64, i64, i64, i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"struct.cc::FrameSequenceTracker::TrackedFrameData" = type <{ i64, i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1356" = type { %"class.std::__1::__compressed_pair.1357" }
%"class.std::__1::__compressed_pair.1357" = type { %"struct.std::__1::__compressed_pair_elem.1358" }
%"struct.std::__1::__compressed_pair_elem.1358" = type { %"class.cc::FrameSequenceMetrics"* }
%"class.cc::FrameSequenceMetrics" = type { i32, %"struct.cc::FrameSequenceMetrics::TraceData", %"class.cc::ThroughputUkmReporter"*, %"struct.cc::FrameSequenceMetrics::ThroughputData", %"struct.cc::FrameSequenceMetrics::ThroughputData", i32, i32, %"class.base::OnceCallback.1359", %"class.std::__1::unique_ptr.1360" }
%"struct.cc::FrameSequenceMetrics::TraceData" = type { %"class.cc::FrameSequenceMetrics"*, %"class.base::TimeTicks", i32, i8, i8* }
%"struct.cc::FrameSequenceMetrics::ThroughputData" = type { i32, i32, i32 }
%"class.base::OnceCallback.1359" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.1360" = type { %"class.std::__1::__compressed_pair.1361" }
%"class.std::__1::__compressed_pair.1361" = type { %"struct.std::__1::__compressed_pair_elem.1362" }
%"struct.std::__1::__compressed_pair_elem.1362" = type { %"class.cc::JankMetrics"* }
%"class.cc::JankMetrics" = type opaque
%"struct.cc::FrameSequenceTracker::CheckerboardingData" = type { i8, %"class.base::TimeTicks", %"class.base::circular_deque.1369" }
%"class.base::circular_deque.1369" = type { %"class.base::internal::VectorBuffer.1370", i64, i64 }
%"class.base::internal::VectorBuffer.1370" = type { i32*, i64 }
%"struct.cc::InputHandlerPointerResult" = type { i32, i8, %"class.gfx::ScrollOffset", %"struct.cc::ElementId" }
%"class.cc::ScrollbarAnimationController" = type { %"class.cc::ScrollbarAnimationControllerClient"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeDelta", i8, i8, i32, %"struct.cc::ElementId", %"class.base::internal::CancelableCallbackImpl", float, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371", %"class.base::WeakPtrFactory.1377" }
%"class.std::__1::unique_ptr.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"class.cc::SingleScrollbarAnimationControllerThinning"* }
%"class.cc::SingleScrollbarAnimationControllerThinning" = type { %"class.cc::ScrollbarAnimationControllerClient"*, %"class.base::TimeTicks", i8, %"struct.cc::ElementId", i32, i8, i8, i8, i8, i32, %"class.base::TimeDelta" }
%"class.base::WeakPtrFactory.1377" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.cc::SwapPromiseMonitor" = type { i32 (...)**, %"class.cc::SwapPromiseManager"*, %"class.cc::LayerTreeHostImpl"* }
%"class.cc::SwapPromiseManager" = type { %"class.std::__1::vector.595", %"class.std::__1::set.1069" }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map.1384", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map.1384" = type { %"class.base::internal::flat_tree.1385" }
%"class.base::internal::flat_tree.1385" = type { %"class.std::__1::vector.1386" }
%"class.std::__1::vector.1386" = type { %"class.std::__1::__vector_base.1387" }
%"class.std::__1::__vector_base.1387" = type { %"struct.std::__1::pair.1388"*, %"struct.std::__1::pair.1388"*, %"class.std::__1::__compressed_pair.1389" }
%"struct.std::__1::pair.1388" = type opaque
%"class.std::__1::__compressed_pair.1389" = type { %"struct.std::__1::__compressed_pair_elem.1390" }
%"struct.std::__1::__compressed_pair_elem.1390" = type { %"struct.std::__1::pair.1388"* }
%"class.cc::EventsMetricsManager::ScopedMonitor" = type { i32 (...)** }
%"class.base::OnceCallback.1400" = type { %"class.base::internal::CallbackBase" }
%"struct.cc::CompositorCommitData" = type <{ %"struct.cc::CompositorCommitData::ScrollUpdateInfo", %"class.std::__1::vector.1407", float, i8, i8, [2 x i8], %"class.gfx::Vector2dF", %"class.gfx::Vector2dF", %"struct.cc::ElementId", float, float, %"class.std::__1::vector.1414", %"class.std::__1::vector.595", i32, i8, i8, i8, i8, i32, [4 x i8] }>
%"struct.cc::CompositorCommitData::ScrollUpdateInfo" = type { %"struct.cc::ElementId", %"class.gfx::ScrollOffset", %"class.absl::optional.1402" }
%"class.absl::optional.1402" = type { %"class.absl::optional_internal::optional_data.1403" }
%"class.absl::optional_internal::optional_data.1403" = type { %"class.absl::optional_internal::optional_data_base.1404" }
%"class.absl::optional_internal::optional_data_base.1404" = type { %"class.absl::optional_internal::optional_data_dtor_base.1405" }
%"class.absl::optional_internal::optional_data_dtor_base.1405" = type { i8, %union.anon.1406 }
%union.anon.1406 = type { %"struct.cc::TargetSnapAreaElementIds" }
%"class.std::__1::vector.1407" = type { %"class.std::__1::__vector_base.1408" }
%"class.std::__1::__vector_base.1408" = type { %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollUpdateInfo"*, %"class.std::__1::__compressed_pair.1409" }
%"class.std::__1::__compressed_pair.1409" = type { %"struct.std::__1::__compressed_pair_elem.1410" }
%"struct.std::__1::__compressed_pair_elem.1410" = type { %"struct.cc::CompositorCommitData::ScrollUpdateInfo"* }
%"class.std::__1::vector.1414" = type { %"class.std::__1::__vector_base.1415" }
%"class.std::__1::__vector_base.1415" = type { %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"*, %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"*, %"class.std::__1::__compressed_pair.1416" }
%"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo" = type <{ %"struct.cc::ElementId", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1416" = type { %"struct.std::__1::__compressed_pair_elem.1417" }
%"struct.std::__1::__compressed_pair_elem.1417" = type { %"struct.cc::CompositorCommitData::ScrollbarsUpdateInfo"* }
%"struct.std::__1::__split_buffer.1498" = type { %"struct.cc::ElementId"*, %"struct.cc::ElementId"*, %"struct.cc::ElementId"*, %"class.std::__1::__compressed_pair.1499" }
%"class.std::__1::__compressed_pair.1499" = type { %"struct.std::__1::__compressed_pair_elem", %"struct.std::__1::__compressed_pair_elem.1500" }
%"struct.std::__1::__compressed_pair_elem.1500" = type { %"class.std::__1::allocator"* }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::__split_buffer.1505" = type { i32*, i32*, i32*, %"class.std::__1::__compressed_pair.1506" }
%"class.std::__1::__compressed_pair.1506" = type { %"struct.std::__1::__compressed_pair_elem.152", %"struct.std::__1::__compressed_pair_elem.1507" }
%"struct.std::__1::__compressed_pair_elem.1507" = type { %"class.std::__1::allocator.154"* }
%"class.std::__1::allocator.154" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIddEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIfRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_ = comdat any

$_ZN20trace_event_internal13AddTraceEventIfEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZNSt3__16vectorIN2cc9ElementIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIN2cc9ElementIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_ = comdat any

$_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_ = comdat any

@_ZTVN2cc20ThreadedInputHandlerE = hidden unnamed_addr constant { [49 x i8*], [16 x i8*] } { [49 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)* @_ZNK2cc20ThreadedInputHandler9AsWeakPtrEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"class.cc::InputHandlerClient"*)* @_ZN2cc20ThreadedInputHandler12BindToClientEPNS_18InputHandlerClientE to i8*), i8* bitcast ({ i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)* @_ZN2cc20ThreadedInputHandler11ScrollBeginEPNS_11ScrollStateEN2ui15ScrollInputTypeE to i8*), i8* bitcast ({ i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)* @_ZN2cc20ThreadedInputHandler15RootScrollBeginEPNS_11ScrollStateEN2ui15ScrollInputTypeE to i8*), i8* bitcast (void (%"struct.cc::InputHandlerScrollResult"*, %"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i64)* @_ZN2cc20ThreadedInputHandler12ScrollUpdateEPNS_11ScrollStateEN4base9TimeDeltaE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i1)* @_ZN2cc20ThreadedInputHandler9ScrollEndEb to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i32, i32)* @_ZN2cc20ThreadedInputHandler17RecordScrollBeginEN2ui15ScrollInputTypeENS_22ScrollBeginThreadStateE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i32)* @_ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE to i8*), i8* bitcast (i32 (%"class.cc::ThreadedInputHandler"*, %"class.gfx::PointF"*)* @_ZN2cc20ThreadedInputHandler7HitTestERKN3gfx6PointFE to i8*), i8* bitcast (void (%"struct.cc::InputHandlerPointerResult"*, %"class.cc::ThreadedInputHandler"*, %"class.gfx::Point"*)* @_ZN2cc20ThreadedInputHandler11MouseMoveAtERKN3gfx5PointE to i8*), i8* bitcast (void (%"struct.cc::InputHandlerPointerResult"*, %"class.cc::ThreadedInputHandler"*, %"class.gfx::PointF"*, i1)* @_ZN2cc20ThreadedInputHandler9MouseDownERKN3gfx6PointFEb to i8*), i8* bitcast (void (%"struct.cc::InputHandlerPointerResult"*, %"class.cc::ThreadedInputHandler"*, %"class.gfx::PointF"*)* @_ZN2cc20ThreadedInputHandler7MouseUpERKN3gfx6PointFE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler10MouseLeaveEv to i8*), i8* bitcast (i64 (%"class.cc::ThreadedInputHandler"*, %"class.gfx::PointF"*)* @_ZN2cc20ThreadedInputHandler25FindFrameElementIdAtPointERKN3gfx6PointFE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler39RequestUpdateForSynchronousInputHandlerEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"class.gfx::ScrollOffset"*)* @_ZN2cc20ThreadedInputHandler42SetSynchronousInputHandlerRootScrollOffsetERKN3gfx12ScrollOffsetE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler17PinchGestureBeginEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, float, %"class.gfx::Point"*)* @_ZN2cc20ThreadedInputHandler18PinchGestureUpdateEfRKN3gfx5PointE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"class.gfx::Point"*, i1)* @_ZN2cc20ThreadedInputHandler15PinchGestureEndERKN3gfx5PointEb to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler20SetNeedsAnimateInputEv to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*)* @_ZNK2cc20ThreadedInputHandler28IsCurrentlyScrollingViewportEv to i8*), i8* bitcast (i32 (%"class.cc::ThreadedInputHandler"*, i32)* @_ZNK2cc20ThreadedInputHandler26GetEventListenerPropertiesENS_18EventListenerClassE to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*, %"class.gfx::Point"*)* @_ZNK2cc20ThreadedInputHandler30HasBlockingWheelEventHandlerAtERKN3gfx5PointE to i8*), i8* bitcast (i32 (%"class.cc::ThreadedInputHandler"*, %"class.gfx::Point"*, i32*)* @_ZN2cc20ThreadedInputHandler38EventListenerTypeForTouchStartOrMoveAtERKN3gfx5PointEPNS_11TouchActionE to i8*), i8* bitcast (%"class.cc::SwapPromiseMonitor"* (%"class.cc::ThreadedInputHandler"*, %"class.ui::LatencyInfo"*)* @_ZN2cc20ThreadedInputHandler35CreateLatencyInfoSwapPromiseMonitorEPN2ui11LatencyInfoE to i8*), i8* bitcast (%"class.cc::EventsMetricsManager::ScopedMonitor"* (%"class.cc::ThreadedInputHandler"*, %"class.base::OnceCallback.1400"*)* @_ZN2cc20ThreadedInputHandler28GetScopedEventMetricsMonitorEN4base12OnceCallbackIFNSt3__110unique_ptrINS_12EventMetricsENS3_14default_deleteIS5_EEEEbEEE to i8*), i8* bitcast (%"class.cc::ScrollElasticityHelper"* (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler28CreateScrollElasticityHelperEv to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*, i64, %"class.gfx::ScrollOffset"*)* @_ZN2cc20ThreadedInputHandler23GetScrollOffsetForLayerENS_9ElementIdEPN3gfx12ScrollOffsetE to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*, i64, %"class.gfx::ScrollOffset"*)* @_ZN2cc20ThreadedInputHandler13ScrollLayerToENS_9ElementIdERKN3gfx12ScrollOffsetE to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler33ScrollingShouldSwitchtoMainThreadEv to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*)* @_ZN2cc20ThreadedInputHandler41GetSnapFlingInfoAndSetAnimatingSnapTargetERKN3gfx9Vector2dFEPS2_S5_ to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i1)* @_ZN2cc20ThreadedInputHandler21ScrollEndForSnapFlingEb to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler16NotifyInputEventEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandlerD2Ev to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandlerD0Ev to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"struct.cc::CompositorCommitData"*)* @_ZN2cc20ThreadedInputHandler19ProcessCommitDeltasEPNS_20CompositorCommitDataE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i64)* @_ZN2cc20ThreadedInputHandler14TickAnimationsEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler12WillShutdownEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler8WillDrawEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"struct.viz::BeginFrameArgs"*)* @_ZN2cc20ThreadedInputHandler18WillBeginImplFrameERKN3viz14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler9DidCommitEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler22DidActivatePendingTreeEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler28RootLayerStateMayHaveChangedEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i64, i32)* @_ZN2cc20ThreadedInputHandler22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandler29ScrollOffsetAnimationFinishedEv to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*)* @_ZNK2cc20ThreadedInputHandler20IsCurrentlyScrollingEv to i8*), i8* bitcast (i32 (%"class.cc::ThreadedInputHandler"*)* @_ZNK2cc20ThreadedInputHandler24GetActivelyScrollingTypeEv to i8*)], [16 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandlerD1Ev to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandlerD0Ev to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"struct.cc::CompositorCommitData"*)* @_ZThn8_N2cc20ThreadedInputHandler19ProcessCommitDeltasEPNS_20CompositorCommitDataE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i64)* @_ZThn8_N2cc20ThreadedInputHandler14TickAnimationsEN4base9TimeTicksE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler12WillShutdownEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler8WillDrawEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, %"struct.viz::BeginFrameArgs"*)* @_ZThn8_N2cc20ThreadedInputHandler18WillBeginImplFrameERKN3viz14BeginFrameArgsE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler9DidCommitEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler22DidActivatePendingTreeEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler28RootLayerStateMayHaveChangedEv to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*, i64, i32)* @_ZThn8_N2cc20ThreadedInputHandler22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE to i8*), i8* bitcast (void (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_N2cc20ThreadedInputHandler29ScrollOffsetAnimationFinishedEv to i8*), i8* bitcast (i1 (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_NK2cc20ThreadedInputHandler20IsCurrentlyScrollingEv to i8*), i8* bitcast (i32 (%"class.cc::ThreadedInputHandler"*)* @_ZThn8_NK2cc20ThreadedInputHandler24GetActivelyScrollingTypeEv to i8*)] }, align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [34 x i8] c"ThreadedInputHandler::ScrollBegin\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Latched scroll node provided\00", align 1
@_ZN8features18kScrollUnificationE = external global %"struct.base::Feature", align 8
@.str.2 = private unnamed_addr constant [31 x i8] c"Unlatched scroll node provided\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"Hit Testing for ScrollNode\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"Scrollbar Scrolling\00", align 1
@.str.5 = private unnamed_addr constant [29 x i8] c"Request Main Thread Hit Test\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"Failed Hit Test\00", align 1
@.str.7 = private unnamed_addr constant [32 x i8] c"Ignored - No ScrollNode (OOPIF)\00", align 1
@.str.8 = private unnamed_addr constant [24 x i8] c"Ignored - No ScrollNode\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"ThreadedInputHandler::RootScrollBegin\00", align 1
@.str.10 = private unnamed_addr constant [35 x i8] c"ThreadedInputHandler::ScrollUpdate\00", align 1
@.str.11 = private unnamed_addr constant [3 x i8] c"dx\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c"dy\00", align 1
@.str.13 = private unnamed_addr constant [65 x i8] c"ThreadedInputHandler::SetSynchronousInputHandlerRootScrollOffset\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"offset_x\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"offset_y\00", align 1
@.str.16 = private unnamed_addr constant [44 x i8] c"SetCurrentlyScrollingNode PinchGestureBegin\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"isNull\00", align 1
@.str.18 = private unnamed_addr constant [41 x i8] c"ThreadedInputHandler::PinchGestureUpdate\00", align 1
@.str.19 = private unnamed_addr constant [52 x i8] c"ThreadedInputHandler::ScrollOffsetAnimationFinished\00", align 1
@.str.20 = private unnamed_addr constant [54 x i8] c"LayerImpl::TryScroll: Failed ShouldScrollOnMainThread\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"MainThreadScrollingReason\00", align 1
@.str.22 = private unnamed_addr constant [53 x i8] c"LayerImpl::TryScroll: Ignored NonInvertibleTransform\00", align 1
@.str.23 = private unnamed_addr constant [45 x i8] c"LayerImpl::tryScroll: Ignored not scrollable\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"LayerImpl::tryScroll: Failed due to no scrolling layer\00", align 1
@.str.25 = private unnamed_addr constant [98 x i8] c"LayerImpl::tryScroll: Ignored. Technically scrollable, but has no affordance in either direction.\00", align 1
@.str.26 = private unnamed_addr constant [33 x i8] c"ScrollNodeWithViewportSpaceDelta\00", align 1
@.str.27 = private unnamed_addr constant [8 x i8] c"delta_y\00", align 1
@.str.28 = private unnamed_addr constant [9 x i8] c"is_outer\00", align 1
@.str.29 = private unnamed_addr constant [14 x i8] c"ConsumedDelta\00", align 1
@.str.30 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform = private unnamed_addr constant %"class.gfx::Transform" { %class.SkMatrix44 <{ [4 x [4 x float]] [[4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000]], i8 -86, [3 x i8] c"\AA\AA\AA" }> }, align 4
@.str.31 = private unnamed_addr constant [25 x i8] c"ScrollNodeWithLocalDelta\00", align 1
@.str.32 = private unnamed_addr constant [44 x i8] c"ThreadedInputHandler::ScrollLatchedScroller\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"delta_x\00", align 1
@.str.34 = private unnamed_addr constant [24 x i8] c"UpdateExistingAnimation\00", align 1
@.str.35 = private unnamed_addr constant [24 x i8] c"Didn't Update Animation\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"CreateNewAnimation\00", align 1
@.str.37 = private unnamed_addr constant [50 x i8] c"ThreadedInputHandler::ClearCurrentlyScrollingNode\00", align 1
@_ZN2cc9ElementId17kInvalidElementIdE = external local_unnamed_addr constant i64, align 8
@.str.38 = private unnamed_addr constant [44 x i8] c"Renderer4.CompositorWheelScrollUpdateThread\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"Renderer4.CompositorTouchScrollUpdateThread\00", align 1
@_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@switch.table._ZN2cc20ThreadedInputHandler17RecordScrollBeginEN2ui15ScrollInputTypeENS_22ScrollBeginThreadStateE.41 = private unnamed_addr constant [3 x i32] [i32 1, i32 0, i32 0], align 4
@switch.table._ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE = private unnamed_addr constant [4 x i32] [i32 4, i32 7, i32 12, i32 8], align 4

@_ZN2cc22InputHandlerCommitDataC1Ev = hidden unnamed_addr alias void (%"struct.cc::InputHandlerCommitData"*), void (%"struct.cc::InputHandlerCommitData"*)* @_ZN2cc22InputHandlerCommitDataC2Ev
@_ZN2cc22InputHandlerCommitDataD1Ev = hidden unnamed_addr alias void (%"struct.cc::InputHandlerCommitData"*), void (%"struct.cc::InputHandlerCommitData"*)* @_ZN2cc22InputHandlerCommitDataD2Ev
@_ZN2cc20ThreadedInputHandlerC1ERNS_26CompositorDelegateForInputE = hidden unnamed_addr alias void (%"class.cc::ThreadedInputHandler"*, %"class.cc::CompositorDelegateForInput"*), void (%"class.cc::ThreadedInputHandler"*, %"class.cc::CompositorDelegateForInput"*)* @_ZN2cc20ThreadedInputHandlerC2ERNS_26CompositorDelegateForInputE
@_ZN2cc20ThreadedInputHandlerD1Ev = hidden unnamed_addr alias void (%"class.cc::ThreadedInputHandler"*), void (%"class.cc::ThreadedInputHandler"*)* @_ZN2cc20ThreadedInputHandlerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22InputHandlerCommitDataC2Ev(%"struct.cc::InputHandlerCommitData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::InputHandlerCommitData", %"struct.cc::InputHandlerCommitData"* %0, i64 0, i32 2, i32 0
  %3 = bitcast %"struct.cc::InputHandlerCommitData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 32, i1 false)
  %4 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %4, i64* %2, align 8
  %5 = getelementptr inbounds %"struct.cc::InputHandlerCommitData", %"struct.cc::InputHandlerCommitData"* %0, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 5, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc22InputHandlerCommitDataD2Ev(%"struct.cc::InputHandlerCommitData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.cc::InputHandlerCommitData", %"struct.cc::InputHandlerCommitData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %2, align 8
  %4 = icmp eq %"struct.cc::ElementId"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.cc::ElementId"* %3 to i64
  %7 = getelementptr inbounds %"struct.cc::InputHandlerCommitData", %"struct.cc::InputHandlerCommitData"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.cc::ElementId"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.cc::ElementId"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc12InputHandler6CreateERNS_26CompositorDelegateForInputE(%"class.base::WeakPtr"* noalias sret, %"class.cc::CompositorDelegateForInput"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 344) #18
  %4 = bitcast i8* %3 to %"class.cc::ThreadedInputHandler"*
  %5 = getelementptr inbounds i8, i8* %3, i64 8
  %6 = bitcast i8* %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %6, align 8
  %7 = getelementptr inbounds i8, i8* %3, i64 16
  %8 = bitcast i8* %7 to %"class.cc::CompositorDelegateForInput"**
  store %"class.cc::CompositorDelegateForInput"* %1, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = bitcast %"class.cc::CompositorDelegateForInput"* %1 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #19
  %11 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %11, i64 22
  %13 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %12, align 8
  %14 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %13(%"class.cc::CompositorDelegateForInput"* %1) #19
  %15 = tail call i8* @_Znwm(i64 112) #18
  %16 = bitcast i8* %15 to %"class.cc::ScrollbarController"*
  tail call void @_ZN2cc19ScrollbarControllerC1EPNS_17LayerTreeHostImplE(%"class.cc::ScrollbarController"* nonnull %16, %"class.cc::LayerTreeHostImpl"* %14) #19
  %17 = getelementptr inbounds i8, i8* %3, i64 40
  %18 = bitcast i8* %17 to i8**
  store i8* %15, i8** %18, align 8
  %19 = getelementptr inbounds i8, i8* %3, i64 48
  %20 = getelementptr inbounds i8, i8* %3, i64 72
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds i8, i8* %3, i64 80
  %22 = getelementptr inbounds i8, i8* %3, i64 168
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 80, i1 false) #19
  %23 = getelementptr inbounds i8, i8* %3, i64 248
  %24 = bitcast i8* %23 to i64*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 17, i1 false) #19
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 81, i1 false) #19
  %25 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %25, i64* %24, align 8
  %26 = getelementptr inbounds i8, i8* %3, i64 256
  %27 = bitcast i8* %26 to i64*
  store i64 %25, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %3, i64 264
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 24, i1 false) #19
  %29 = getelementptr inbounds i8, i8* %3, i64 288
  %30 = bitcast i8* %29 to i64*
  store i64 %25, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %3, i64 296
  %32 = bitcast i8* %31 to i64*
  store i64 %25, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %3, i64 304
  %34 = bitcast i8* %33 to i64*
  store i64 %25, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %3, i64 312
  %36 = getelementptr inbounds i8, i8* %3, i64 328
  %37 = bitcast i8* %36 to %"class.base::internal::WeakPtrFactoryBase"*
  %38 = ptrtoint i8* %3 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 13, i1 false) #19
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %37, i64 %38) #19
  %39 = bitcast i8* %3 to void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)***
  %40 = bitcast %"class.base::WeakPtr"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 -86, i64 16, i1 false)
  %41 = load void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)**, void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)*** %39, align 8
  %42 = load void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)*, void (%"class.base::WeakPtr"*, %"class.cc::ThreadedInputHandler"*)** %41, align 8
  tail call void %42(%"class.base::WeakPtr"* sret %0, %"class.cc::ThreadedInputHandler"* nonnull %4) #19
  %43 = bitcast i8* %5 to %"class.cc::InputDelegateForCompositor"*
  %44 = bitcast %"class.cc::CompositorDelegateForInput"* %1 to void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)***
  %45 = load void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)**, void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)*, void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)** %45, i64 2
  %47 = load void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)*, void (%"class.cc::CompositorDelegateForInput"*, %"class.cc::InputDelegateForCompositor"*)** %46, align 8
  tail call void %47(%"class.cc::CompositorDelegateForInput"* %1, %"class.cc::InputDelegateForCompositor"* %43) #19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandlerC2ERNS_26CompositorDelegateForInputE(%"class.cc::ThreadedInputHandler"*, %"class.cc::CompositorDelegateForInput"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.cc::ThreadedInputHandler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %3, align 8
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  store %"class.cc::CompositorDelegateForInput"* %1, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %1 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = bitcast %"class.cc::InputHandlerClient"** %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false)
  %8 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 22
  %10 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %10(%"class.cc::CompositorDelegateForInput"* %1) #19
  %12 = tail call i8* @_Znwm(i64 112) #18
  %13 = bitcast i8* %12 to %"class.cc::ScrollbarController"*
  tail call void @_ZN2cc19ScrollbarControllerC1EPNS_17LayerTreeHostImplE(%"class.cc::ScrollbarController"* nonnull %13, %"class.cc::LayerTreeHostImpl"* %11) #19
  %14 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %15 = bitcast %"class.cc::ScrollbarController"** %14 to i8**
  store i8* %12, i8** %15, align 8
  %16 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 6, i32 0
  %17 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %17, align 8
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast %union.anon.1344* %19 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 80, i1 false) #19
  %21 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  %22 = bitcast float* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %22, i8 0, i64 17, i1 false)
  %23 = bitcast %union.anon.1344* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 81, i1 false)
  %24 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %24, i64* %21, align 8
  %25 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12
  %27 = bitcast %"class.base::internal::flat_tree"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 24, i1 false) #19
  %28 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 13, i32 0
  store i64 %24, i64* %28, align 8
  %29 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 14, i32 0
  store i64 %24, i64* %29, align 8
  %30 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 15, i32 0
  store i64 %24, i64* %30, align 8
  %31 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  %32 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 29, i32 0
  %33 = ptrtoint %"class.cc::ThreadedInputHandler"* %0 to i64
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 13, i1 false)
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %32, i64 %33) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandlerD2Ev(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.cc::ThreadedInputHandler"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [49 x i8*], [16 x i8*] }, { [49 x i8*], [16 x i8*] }* @_ZTVN2cc20ThreadedInputHandlerE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 29, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %3) #19
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %5 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %4, align 8
  %6 = icmp eq %"struct.cc::ElementId"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.cc::ElementId"* %5 to i64
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.cc::ElementId"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = bitcast %"struct.cc::ElementId"* %5 to i8*
  tail call void @_ZdlPv(i8* %11) #18
  br label %12

12:                                               ; preds = %1, %7
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc11ScrollStateD1Ev(%"class.cc::ScrollState"* %17) #19
  store i8 0, i8* %13, align 8
  br label %18

18:                                               ; preds = %12, %16
  %19 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN2cc11ScrollStateD1Ev(%"class.cc::ScrollState"* %23) #19
  store i8 0, i8* %19, align 8
  br label %24

24:                                               ; preds = %18, %22
  %25 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %26 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %25, align 8
  store %"class.cc::ScrollbarController"* null, %"class.cc::ScrollbarController"** %25, align 8
  %27 = icmp eq %"class.cc::ScrollbarController"* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.cc::ScrollbarController"* %26 to void (%"class.cc::ScrollbarController"*)***
  %30 = load void (%"class.cc::ScrollbarController"*)**, void (%"class.cc::ScrollbarController"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.cc::ScrollbarController"*)*, void (%"class.cc::ScrollbarController"*)** %30, i64 1
  %32 = load void (%"class.cc::ScrollbarController"*)*, void (%"class.cc::ScrollbarController"*)** %31, align 8
  tail call void %32(%"class.cc::ScrollbarController"* nonnull %26) #19
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %35 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %34, align 8
  store %"class.cc::ScrollElasticityHelper"* null, %"class.cc::ScrollElasticityHelper"** %34, align 8
  %36 = icmp eq %"class.cc::ScrollElasticityHelper"* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %"class.cc::ScrollElasticityHelper"* %35 to void (%"class.cc::ScrollElasticityHelper"*)***
  %39 = load void (%"class.cc::ScrollElasticityHelper"*)**, void (%"class.cc::ScrollElasticityHelper"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %39, i64 1
  %41 = load void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %40, align 8
  tail call void %41(%"class.cc::ScrollElasticityHelper"* nonnull %35) #19
  br label %42

42:                                               ; preds = %33, %37
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandlerD1Ev(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  tail call void @_ZN2cc20ThreadedInputHandlerD2Ev(%"class.cc::ThreadedInputHandler"* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandlerD0Ev(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc20ThreadedInputHandlerD2Ev(%"class.cc::ThreadedInputHandler"* %0) #19
  %2 = bitcast %"class.cc::ThreadedInputHandler"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandlerD0Ev(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  tail call void @_ZN2cc20ThreadedInputHandlerD2Ev(%"class.cc::ThreadedInputHandler"* %3) #19
  %4 = bitcast i64* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc20ThreadedInputHandler9AsWeakPtrEv(%"class.base::WeakPtr"* noalias sret, %"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::WeakReference", align 8
  %4 = alloca %"class.base::WeakPtr.1349", align 8
  %5 = bitcast %"class.base::WeakPtr.1349"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #19
  %6 = bitcast %"class.base::internal::WeakReference"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19, !noalias !3
  %7 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 29, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %3, %"class.base::internal::WeakReferenceOwner"* %7) #19, !noalias !3
  %8 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 29, i32 0, i32 1
  %9 = load i64, i64* %8, align 8, !noalias !3
  %10 = getelementptr inbounds %"class.base::WeakPtr.1349", %"class.base::WeakPtr.1349"* %4, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %10, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %3, i64 %9) #19
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19, !noalias !3
  %11 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::WeakPtr.1349", %"class.base::WeakPtr.1349"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %11, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %12) #19
  %13 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::WeakPtr.1349", %"class.base::WeakPtr.1349"* %4, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %13, align 8
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #19
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc20ThreadedInputHandler12BindToClientEPNS_18InputHandlerClientE(%"class.cc::ThreadedInputHandler"* nocapture, %"class.cc::InputHandlerClient"*) unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  store %"class.cc::InputHandlerClient"* %1, %"class.cc::InputHandlerClient"** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2cc20ThreadedInputHandler11ScrollBeginEPNS_11ScrollStateEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32) unnamed_addr #5 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.base::TimeTicks", align 8
  %9 = alloca %"class.base::TimeTicks", align 8
  %10 = alloca %"class.base::TimeTicks", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = alloca %"class.base::TimeTicks", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = alloca %"struct.cc::InputHandler::ScrollStatus", align 8
  %15 = alloca i8, align 1
  %16 = alloca <2 x float>, align 8
  %17 = bitcast <2 x float>* %16 to %"class.gfx::PointF"*
  %18 = alloca %"class.gfx::PointF", align 4
  %19 = getelementptr inbounds %"struct.cc::InputHandler::ScrollStatus", %"struct.cc::InputHandler::ScrollStatus"* %14, i64 0, i32 0
  %20 = getelementptr inbounds %"struct.cc::InputHandler::ScrollStatus", %"struct.cc::InputHandler::ScrollStatus"* %14, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.cc::InputHandler::ScrollStatus", %"struct.cc::InputHandler::ScrollStatus"* %14, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.cc::InputHandler::ScrollStatus", %"struct.cc::InputHandler::ScrollStatus"* %14, i64 0, i32 3
  %23 = bitcast %"struct.cc::InputHandler::ScrollStatus"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 12, i1 false)
  store i32 1, i32* %19, align 8
  %24 = bitcast i32* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %24, i8 0, i64 6, i1 false)
  %25 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %26 = and i8 %25, 25
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %34, label %28, !prof !6

28:                                               ; preds = %3
  %29 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %30 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %32 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %32, i64* %31, align 8
  %33 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %29, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  br label %34

34:                                               ; preds = %3, %28
  %35 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %28 ]
  %36 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0), %28 ]
  %37 = phi i64 [ -6148914691236517206, %3 ], [ %33, %28 ]
  %38 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %58

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %43 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %42, align 8
  %44 = bitcast %"class.cc::CompositorDelegateForInput"* %43 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %45 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %45, i64 22
  %47 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %46, align 8
  %48 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %47(%"class.cc::CompositorDelegateForInput"* %43) #19
  %49 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %48, i64 0, i32 58, i32 0, i32 0, i32 0
  %50 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %49, align 8
  %51 = bitcast %"class.cc::MutatorHost"* %50 to void (%"class.cc::MutatorHost"*)***
  %52 = load void (%"class.cc::MutatorHost"*)**, void (%"class.cc::MutatorHost"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.cc::MutatorHost"*)*, void (%"class.cc::MutatorHost"*)** %52, i64 39
  %54 = load void (%"class.cc::MutatorHost"*)*, void (%"class.cc::MutatorHost"*)** %53, align 8
  call void %54(%"class.cc::MutatorHost"* %50) #19
  %55 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %56 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %55, i64* %56, align 8
  %57 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %55, i64* %57, align 8
  br label %58

58:                                               ; preds = %41, %34
  %59 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %60 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %61 = bitcast %"class.cc::CompositorDelegateForInput"* %60 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %62 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %61, align 8
  %63 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %62, i64 3
  %64 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %63, align 8
  %65 = call dereferenceable(120) %"class.cc::ScrollTree"* %64(%"class.cc::CompositorDelegateForInput"* %60) #19
  %66 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %65) #19
  %67 = icmp eq %"struct.cc::ScrollNode"* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %70 = load i8, i8* %69, align 4, !range !2
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %78, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = icmp eq i32 %74, %2
  br i1 %75, label %76, label %78

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  store i8 0, i8* %77, align 8
  br label %384

78:                                               ; preds = %68, %58, %72
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #19
  store i8 0, i8* %15, align 1
  call void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* %0)
  %79 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0
  %80 = call i64 @_ZNK2cc15ScrollStateData32current_native_scrolling_elementEv(%"class.cc::ScrollStateData"* %79) #19
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %143, label %82

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 19
  %84 = load i8, i8* %83, align 1, !range !2
  %85 = icmp eq i8 %84, 0
  %86 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %87 = and i8 %86, 25
  %88 = icmp eq i8 %87, 0
  br i1 %85, label %89, label %124

89:                                               ; preds = %82
  br i1 %88, label %96, label %90, !prof !6

90:                                               ; preds = %89
  %91 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %92 = bitcast %"class.base::TimeTicks"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #19
  %93 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %12, i64 0, i32 0, i32 0
  %94 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %94, i64* %93, align 8
  %95 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %91, %"class.base::TimeTicks"* nonnull dereferenceable(8) %12, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #19
  br label %96

96:                                               ; preds = %89, %90
  %97 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %98 = bitcast %"class.cc::CompositorDelegateForInput"* %97 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %99 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %98, align 8
  %100 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %99, i64 3
  %101 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %100, align 8
  %102 = call dereferenceable(120) %"class.cc::ScrollTree"* %101(%"class.cc::CompositorDelegateForInput"* %97) #19
  %103 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %102, i64 %80) #19
  %104 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kScrollUnificationE) #19
  %105 = xor i1 %104, true
  %106 = icmp ne %"struct.cc::ScrollNode"* %103, null
  %107 = and i1 %106, %105
  br i1 %107, label %108, label %308

108:                                              ; preds = %96
  %109 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %110 = bitcast %"class.cc::CompositorDelegateForInput"* %109 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %111 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %110, align 8
  %112 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %111, i64 3
  %113 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %112, align 8
  %114 = call dereferenceable(120) %"class.cc::ScrollTree"* %113(%"class.cc::CompositorDelegateForInput"* %109) #19
  %115 = call { i64, i32 } @_ZNK2cc20ThreadedInputHandler9TryScrollERKNS_10ScrollTreeEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollTree"* dereferenceable(120) %114, %"struct.cc::ScrollNode"* nonnull %103)
  %116 = extractvalue { i64, i32 } %115, 0
  %117 = extractvalue { i64, i32 } %115, 1
  %118 = bitcast %"struct.cc::InputHandler::ScrollStatus"* %14 to i64*
  store i64 %116, i64* %118, align 8
  %119 = bitcast i8* %21 to i16*
  %120 = trunc i32 %117 to i16
  store i16 %120, i16* %119, align 8
  %121 = trunc i64 %116 to i32
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %339

123:                                              ; preds = %108
  store i8 1, i8* %15, align 1
  br label %290

124:                                              ; preds = %82
  br i1 %88, label %131, label %125, !prof !6

125:                                              ; preds = %124
  %126 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %127 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #19
  %128 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %129 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %129, i64* %128, align 8
  %130 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %126, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #19
  br label %131

131:                                              ; preds = %124, %125
  %132 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %133 = bitcast %"class.cc::CompositorDelegateForInput"* %132 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %134 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %133, align 8
  %135 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %134, i64 3
  %136 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %135, align 8
  %137 = call dereferenceable(120) %"class.cc::ScrollTree"* %136(%"class.cc::CompositorDelegateForInput"* %132) #19
  %138 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %137, i64 %80) #19
  %139 = icmp eq %"struct.cc::ScrollNode"* %138, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %131
  %141 = call %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler15FindNodeToLatchEPNS_11ScrollStateEPNS_10ScrollNodeEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* %1, %"struct.cc::ScrollNode"* nonnull %138, i32 %2)
  br label %308

142:                                              ; preds = %131
  store i32 512, i32* %20, align 4
  store i32 2, i32* %19, align 8
  br label %383

143:                                              ; preds = %78
  %144 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %145 = and i8 %144, 25
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %153, label %147, !prof !6

147:                                              ; preds = %143
  %148 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %149 = bitcast %"class.base::TimeTicks"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #19
  %150 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %10, i64 0, i32 0, i32 0
  %151 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %151, i64* %150, align 8
  %152 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %148, %"class.base::TimeTicks"* nonnull dereferenceable(8) %10, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #19
  br label %153

153:                                              ; preds = %143, %147
  %154 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 4
  %155 = load i32, i32* %154, align 8
  %156 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 5
  %157 = load i32, i32* %156, align 4
  %158 = bitcast <2 x float>* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %158) #19
  %159 = getelementptr inbounds <2 x float>, <2 x float>* %16, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %159, align 8
  %160 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %17, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %160, align 4
  %161 = bitcast %"class.gfx::PointF"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %161) #19
  %162 = sitofp i32 %155 to float
  %163 = sitofp i32 %157 to float
  %164 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %18, i64 0, i32 0
  store float %162, float* %164, align 4
  %165 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %18, i64 0, i32 1
  store float %163, float* %165, align 4
  %166 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %167 = bitcast %"class.cc::CompositorDelegateForInput"* %166 to float (%"class.cc::CompositorDelegateForInput"*)***
  %168 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %167, align 8
  %169 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %168, i64 18
  %170 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %169, align 8
  %171 = call float %170(%"class.cc::CompositorDelegateForInput"* %166) #19
  %172 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %18, float %171, float %171) #19
  store <2 x float> %172, <2 x float>* %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %161) #19
  %173 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN8features18kScrollUnificationE) #19
  br i1 %173, label %174, label %227

174:                                              ; preds = %153
  %175 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 19
  %176 = load i8, i8* %175, align 1, !range !2
  %177 = icmp eq i8 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %174
  store i32 512, i32* %20, align 4
  store i32 2, i32* %19, align 8
  br label %285

179:                                              ; preds = %174
  %180 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %181 = bitcast %"class.cc::CompositorDelegateForInput"* %180 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %182 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %182, i64 22
  %184 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %183, align 8
  %185 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %184(%"class.cc::CompositorDelegateForInput"* %180) #19
  %186 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %185, i64 0, i32 35, i32 0, i32 0, i32 0
  %187 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %186, align 8
  %188 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl50FindFirstScrollingLayerOrScrollbarThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %187, %"class.gfx::PointF"* nonnull dereferenceable(8) %17) #19
  %189 = icmp eq %"class.cc::LayerImpl"* %188, null
  br i1 %189, label %209, label %190

190:                                              ; preds = %179
  %191 = bitcast %"class.cc::LayerImpl"* %188 to i1 (%"class.cc::LayerImpl"*)***
  %192 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %191, align 8
  %193 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %192, i64 7
  %194 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %193, align 8
  %195 = call zeroext i1 %194(%"class.cc::LayerImpl"* nonnull %188) #19
  %196 = icmp eq i32 %2, 0
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %209

198:                                              ; preds = %190
  %199 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %200 = and i8 %199, 25
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %208, label %202, !prof !6

202:                                              ; preds = %198
  %203 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %204 = bitcast %"class.base::TimeTicks"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %204) #19
  %205 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %9, i64 0, i32 0, i32 0
  %206 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %206, i64* %205, align 8
  %207 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %203, %"class.base::TimeTicks"* nonnull dereferenceable(8) %9, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %204) #19
  br label %208

208:                                              ; preds = %202, %198
  store i32 0, i32* %19, align 8
  store i32 16, i32* %20, align 4
  br label %285

209:                                              ; preds = %179, %190
  %210 = call { %"struct.cc::ScrollNode"*, i8 } @_ZNK2cc20ThreadedInputHandler17HitTestScrollNodeERKN3gfx6PointFE(%"class.cc::ThreadedInputHandler"* %0, %"class.gfx::PointF"* nonnull dereferenceable(8) %17)
  %211 = extractvalue { %"struct.cc::ScrollNode"*, i8 } %210, 1
  %212 = and i8 %211, 1
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %224

214:                                              ; preds = %209
  %215 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %216 = and i8 %215, 25
  %217 = icmp eq i8 %216, 0
  br i1 %217, label %226, label %218, !prof !6

218:                                              ; preds = %214
  %219 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %220 = bitcast %"class.base::TimeTicks"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %220) #19
  %221 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %8, i64 0, i32 0, i32 0
  %222 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %222, i64* %221, align 8
  %223 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.5, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %219, %"class.base::TimeTicks"* nonnull dereferenceable(8) %8, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %220) #19
  br label %226

224:                                              ; preds = %209
  %225 = extractvalue { %"struct.cc::ScrollNode"*, i8 } %210, 0
  br label %286

226:                                              ; preds = %218, %214
  store i32 1, i32* %19, align 8
  store i8 1, i8* %22, align 1
  br label %285

227:                                              ; preds = %153
  %228 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %229 = bitcast %"class.cc::CompositorDelegateForInput"* %228 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %230 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %229, align 8
  %231 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %230, i64 22
  %232 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %231, align 8
  %233 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %232(%"class.cc::CompositorDelegateForInput"* %228) #19
  %234 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %233, i64 0, i32 35, i32 0, i32 0, i32 0
  %235 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %234, align 8
  %236 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl25FindLayerThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %235, %"class.gfx::PointF"* nonnull dereferenceable(8) %17) #19
  %237 = icmp eq %"class.cc::LayerImpl"* %236, null
  br i1 %237, label %281, label %238

238:                                              ; preds = %227
  %239 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %240 = bitcast %"class.cc::CompositorDelegateForInput"* %239 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %241 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %240, align 8
  %242 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %241, i64 22
  %243 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %242, align 8
  %244 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %243(%"class.cc::CompositorDelegateForInput"* %239) #19
  %245 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %244, i64 0, i32 35, i32 0, i32 0, i32 0
  %246 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %245, align 8
  %247 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl50FindFirstScrollingLayerOrScrollbarThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %246, %"class.gfx::PointF"* nonnull dereferenceable(8) %17) #19
  %248 = icmp eq %"class.cc::LayerImpl"* %247, null
  br i1 %248, label %268, label %249

249:                                              ; preds = %238
  %250 = bitcast %"class.cc::LayerImpl"* %247 to i1 (%"class.cc::LayerImpl"*)***
  %251 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %250, align 8
  %252 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %251, i64 7
  %253 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %252, align 8
  %254 = call zeroext i1 %253(%"class.cc::LayerImpl"* nonnull %247) #19
  %255 = icmp eq i32 %2, 0
  %256 = and i1 %255, %254
  br i1 %256, label %257, label %268

257:                                              ; preds = %249
  %258 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %259 = and i8 %258, 25
  %260 = icmp eq i8 %259, 0
  br i1 %260, label %267, label %261, !prof !6

261:                                              ; preds = %257
  %262 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %263 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %263) #19
  %264 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %265 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %265, i64* %264, align 8
  %266 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %262, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %263) #19
  br label %267

267:                                              ; preds = %257, %261
  store i32 0, i32* %19, align 8
  store i32 16, i32* %20, align 4
  br label %285

268:                                              ; preds = %238, %249
  %269 = call zeroext i1 @_ZNK2cc20ThreadedInputHandler30IsInitialScrollHitTestReliableEPKNS_9LayerImplES3_(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::LayerImpl"* nonnull %236, %"class.cc::LayerImpl"* %247)
  br i1 %269, label %281, label %270

270:                                              ; preds = %268
  %271 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %272 = and i8 %271, 25
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %280, label %274, !prof !6

274:                                              ; preds = %270
  %275 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %276 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #19
  %277 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %278 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %278, i64* %277, align 8
  %279 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %275, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #19
  br label %280

280:                                              ; preds = %270, %274
  store i32 0, i32* %19, align 8
  store i32 256, i32* %20, align 4
  br label %285

281:                                              ; preds = %227, %268
  %282 = call %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler36FindScrollNodeForCompositedScrollingERKN3gfx6PointFEPNS_9LayerImplEPbPj(%"class.cc::ThreadedInputHandler"* %0, %"class.gfx::PointF"* nonnull dereferenceable(8) %17, %"class.cc::LayerImpl"* %236, i8* nonnull %15, i32* %20)
  %283 = load i8, i8* %15, align 1
  %284 = icmp eq i8 %283, 0
  br label %286

285:                                              ; preds = %178, %226, %208, %267, %280
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #19
  br label %383

286:                                              ; preds = %281, %224
  %287 = phi i1 [ true, %224 ], [ %284, %281 ]
  %288 = phi %"struct.cc::ScrollNode"* [ %225, %224 ], [ %282, %281 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %158) #19
  %289 = call %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler15FindNodeToLatchEPNS_11ScrollStateEPNS_10ScrollNodeEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* %1, %"struct.cc::ScrollNode"* %288, i32 %2)
  br i1 %287, label %308, label %290

290:                                              ; preds = %123, %286
  switch i32 %2, label %307 [
    i32 1, label %291
    i32 0, label %298
  ]

291:                                              ; preds = %290
  %292 = load atomic i64, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %293 = inttoptr i64 %292 to %"class.base::HistogramBase"*
  %294 = icmp eq i64 %292, 0
  br i1 %294, label %295, label %305

295:                                              ; preds = %291
  %296 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0), i32 1) #19
  %297 = ptrtoint %"class.base::HistogramBase"* %296 to i64
  store atomic i64 %297, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %305

298:                                              ; preds = %290
  %299 = load atomic i64, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %300 = inttoptr i64 %299 to %"class.base::HistogramBase"*
  %301 = icmp eq i64 %299, 0
  br i1 %301, label %302, label %305

302:                                              ; preds = %298
  %303 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i64 0, i64 0), i32 1) #19
  %304 = ptrtoint %"class.base::HistogramBase"* %303 to i64
  store atomic i64 %304, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %305

305:                                              ; preds = %298, %302, %291, %295
  %306 = phi %"class.base::HistogramBase"* [ %293, %291 ], [ %296, %295 ], [ %300, %298 ], [ %303, %302 ]
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %306, i1 zeroext true) #19
  br label %307

307:                                              ; preds = %305, %290
  store i32 0, i32* %19, align 8
  br label %383

308:                                              ; preds = %96, %140, %286
  %309 = phi %"struct.cc::ScrollNode"* [ %289, %286 ], [ %141, %140 ], [ %103, %96 ]
  %310 = icmp eq %"struct.cc::ScrollNode"* %309, null
  br i1 %310, label %311, label %339

311:                                              ; preds = %308
  store i32 512, i32* %20, align 4
  %312 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %313 = bitcast %"class.cc::CompositorDelegateForInput"* %312 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %314 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %313, align 8
  %315 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %314, i64 21
  %316 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %315, align 8
  %317 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* %316(%"class.cc::CompositorDelegateForInput"* %312) #19
  %318 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %317, i64 0, i32 60
  %319 = load i8, i8* %318, align 8, !range !2
  %320 = icmp eq i8 %319, 0
  %321 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %322 = and i8 %321, 25
  %323 = icmp eq i8 %322, 0
  br i1 %320, label %331, label %324

324:                                              ; preds = %311
  br i1 %323, label %338, label %325, !prof !6

325:                                              ; preds = %324
  %326 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %327 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %327) #19
  %328 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %329 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %329, i64* %328, align 8
  %330 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.7, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %326, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %327) #19
  br label %338

331:                                              ; preds = %311
  br i1 %323, label %338, label %332, !prof !6

332:                                              ; preds = %331
  %333 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %334 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #19
  %335 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %336 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %336, i64* %335, align 8
  %337 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %333, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #19
  br label %338

338:                                              ; preds = %332, %331, %325, %324
  store i32 2, i32* %19, align 8
  br label %383

339:                                              ; preds = %108, %308
  %340 = phi %"struct.cc::ScrollNode"* [ %309, %308 ], [ %103, %108 ]
  %341 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %342 = bitcast %"class.cc::CompositorDelegateForInput"* %341 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %343 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %342, align 8
  %344 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %343, i64 22
  %345 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %344, align 8
  %346 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %345(%"class.cc::CompositorDelegateForInput"* %341) #19
  %347 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %346, i64 0, i32 35, i32 0, i32 0, i32 0
  %348 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %347, align 8
  call void @_ZN2cc13LayerTreeImpl25SetCurrentlyScrollingNodeEPKNS_10ScrollNodeE(%"class.cc::LayerTreeImpl"* %348, %"struct.cc::ScrollNode"* nonnull %340) #19
  call void @_ZN2cc20ThreadedInputHandler18DidLatchToScrollerERKNS_11ScrollStateEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* dereferenceable(80) %1, i32 %2)
  %349 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %350 = bitcast %"class.cc::CompositorDelegateForInput"* %349 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %351 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %350, align 8
  %352 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %351, i64 22
  %353 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %352, align 8
  %354 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %353(%"class.cc::CompositorDelegateForInput"* %349) #19
  %355 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %354, i64 0, i32 74, i32 0, i32 0, i32 0
  %356 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %355, align 8
  %357 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %358 = bitcast %"class.cc::CompositorDelegateForInput"* %357 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %359 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %358, align 8
  %360 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %359, i64 3
  %361 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %360, align 8
  %362 = call dereferenceable(120) %"class.cc::ScrollTree"* %361(%"class.cc::CompositorDelegateForInput"* %357) #19
  %363 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %362) #19
  %364 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %356, %"struct.cc::ScrollNode"* dereferenceable(168) %363) #19
  br i1 %364, label %365, label %383

365:                                              ; preds = %339
  %366 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %367 = bitcast %"class.cc::CompositorDelegateForInput"* %366 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %368 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %367, align 8
  %369 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %368, i64 22
  %370 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %369, align 8
  %371 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %370(%"class.cc::CompositorDelegateForInput"* %366) #19
  %372 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %371, i64 0, i32 74, i32 0, i32 0, i32 0
  %373 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %372, align 8
  %374 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %59, align 8
  %375 = bitcast %"class.cc::CompositorDelegateForInput"* %374 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %376 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %375, align 8
  %377 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %376, i64 3
  %378 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %377, align 8
  %379 = call dereferenceable(120) %"class.cc::ScrollTree"* %378(%"class.cc::CompositorDelegateForInput"* %374) #19
  %380 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %379) #19
  %381 = call zeroext i1 @_ZNK2cc8Viewport9CanScrollERKNS_10ScrollNodeERKNS_11ScrollStateE(%"class.cc::Viewport"* %373, %"struct.cc::ScrollNode"* dereferenceable(168) %380, %"class.cc::ScrollState"* dereferenceable(80) %1) #19
  br i1 %381, label %383, label %382

382:                                              ; preds = %365
  store i8 1, i8* %21, align 8
  br label %383

383:                                              ; preds = %285, %142, %339, %365, %382, %338, %307
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #19
  br label %384

384:                                              ; preds = %383, %76
  %385 = icmp eq i8* %35, null
  br i1 %385, label %390, label %386

386:                                              ; preds = %384
  %387 = load i8, i8* %35, align 1
  %388 = icmp eq i8 %387, 0
  br i1 %388, label %390, label %389

389:                                              ; preds = %386
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %35, i8* %36, i64 %37) #19
  br label %390

390:                                              ; preds = %384, %386, %389
  %391 = bitcast %"struct.cc::InputHandler::ScrollStatus"* %14 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = bitcast i8* %21 to i32*
  %394 = load i32, i32* %393, align 8
  %395 = insertvalue { i64, i32 } undef, i64 %392, 0
  %396 = insertvalue { i64, i32 } %395, i32 %394, 1
  ret { i64, i32 } %396
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler22CurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  ret %"struct.cc::ScrollNode"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([50 x i8], [50 x i8]* @.str.37, i64 0, i64 0), %6 ]
  %15 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %16 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %17 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %16, align 8
  %18 = bitcast %"class.cc::CompositorDelegateForInput"* %17 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %19 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %18, align 8
  %20 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %19, i64 22
  %21 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %20, align 8
  %22 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %21(%"class.cc::CompositorDelegateForInput"* %17) #19
  %23 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %22, i64 0, i32 35, i32 0, i32 0, i32 0
  %24 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %23, align 8
  call void @_ZN2cc13LayerTreeImpl27ClearCurrentlyScrollingNodeEv(%"class.cc::LayerTreeImpl"* %24) #19
  %25 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 6
  %26 = bitcast %"class.gfx::Vector2dF"* %25 to i32*
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 6, i32 1
  %28 = bitcast float* %27 to i32*
  store i32 0, i32* %28, align 4
  %29 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 18
  store i8 0, i8* %29, align 2
  %30 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 19
  store i8 0, i8* %30, align 1
  %31 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %32 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %31, i64* %32, align 8
  %33 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %31, i64* %33, align 8
  %34 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %36 = load i8, i8* %35, align 8, !range !2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %40, label %38

38:                                               ; preds = %12
  %39 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc11ScrollStateD1Ev(%"class.cc::ScrollState"* %39) #19
  store i8 0, i8* %35, align 8
  br label %40

40:                                               ; preds = %12, %38
  %41 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %46, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN2cc11ScrollStateD1Ev(%"class.cc::ScrollState"* %45) #19
  store i8 0, i8* %41, align 8
  br label %46

46:                                               ; preds = %40, %44
  %47 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %16, align 8
  %48 = bitcast %"class.cc::CompositorDelegateForInput"* %47 to void (%"class.cc::CompositorDelegateForInput"*)***
  %49 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %49, i64 13
  %51 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %50, align 8
  call void %51(%"class.cc::CompositorDelegateForInput"* %47) #19
  %52 = icmp eq i8* %13, null
  br i1 %52, label %57, label %53

53:                                               ; preds = %46
  %54 = load i8, i8* %13, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %13, i8* %14, i64 %15) #19
  br label %57

57:                                               ; preds = %46, %53, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZN2cc20ThreadedInputHandler13GetScrollTreeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  ret %"class.cc::ScrollTree"* %8
}

declare %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #6

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZNK2cc20ThreadedInputHandler9TryScrollERKNS_10ScrollTreeEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::ScrollTree"* dereferenceable(120), %"struct.cc::ScrollNode"*) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca %"class.base::TimeTicks", align 8
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %22, label %12

12:                                               ; preds = %3
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %129, label %16, !prof !6

16:                                               ; preds = %12
  %17 = tail call i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i64 0, i64 0), i32* dereferenceable(4) %9)
  %18 = load i32, i32* %9, align 8
  %19 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %129, label %21

21:                                               ; preds = %16
  tail call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.20, i64 0, i64 0), i64 %17) #19
  br label %129

22:                                               ; preds = %3
  %23 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %23) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %23, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  %24 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 0
  %25 = load i32, i32* %24, align 8
  call void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* nonnull sret %8, %"class.cc::ScrollTree"* %1, i32 %25) #19
  %26 = getelementptr inbounds %"class.gfx::Transform", %"class.gfx::Transform"* %8, i64 0, i32 0
  %27 = call zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44* nonnull %26, %class.SkMatrix44* null) #19
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %30 = and i8 %29, 25
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %126, label %32, !prof !6

32:                                               ; preds = %28
  %33 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %34 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #19
  %35 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %36 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %36, i64* %35, align 8
  %37 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %33, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #19
  %38 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %126, label %40

40:                                               ; preds = %32
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.22, i64 0, i64 0), i64 %37) #19
  br label %126

41:                                               ; preds = %22
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 5
  %43 = load i8, i8* %42, align 4
  %44 = and i8 %43, 1
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %59

46:                                               ; preds = %41
  %47 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %48 = and i8 %47, 25
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %126, label %50, !prof !6

50:                                               ; preds = %46
  %51 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %52 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #19
  %53 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %54 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %54, i64* %53, align 8
  %55 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %51, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #19
  %56 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %126, label %58

58:                                               ; preds = %50
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.23, i64 0, i64 0), i64 %55) #19
  br label %126

59:                                               ; preds = %41
  %60 = load i32, i32* %24, align 8
  %61 = icmp ugt i32 %60, 1
  %62 = and i8 %43, 4
  %63 = icmp eq i8 %62, 0
  %64 = and i1 %63, %61
  br i1 %64, label %65, label %94

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %67 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %66, align 8
  %68 = bitcast %"class.cc::CompositorDelegateForInput"* %67 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %69 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %68, align 8
  %70 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %69, i64 22
  %71 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %70, align 8
  %72 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %71(%"class.cc::CompositorDelegateForInput"* %67) #19
  %73 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %72, i64 0, i32 35, i32 0, i32 0, i32 0
  %74 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %73, align 8
  %75 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 8, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = call %"class.cc::LayerImpl"* @_ZNK2cc13LayerTreeImpl16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %74, i64 %76) #19
  %78 = icmp eq %"class.cc::LayerImpl"* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %65
  %80 = load i32, i32* %24, align 8
  br label %94

81:                                               ; preds = %65
  %82 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %83 = and i8 %82, 25
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %126, label %85, !prof !6

85:                                               ; preds = %81
  %86 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %87 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #19
  %88 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %89 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %89, i64* %88, align 8
  %90 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %86, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #19
  %91 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %126, label %93

93:                                               ; preds = %85
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i64 %90) #19
  br label %126

94:                                               ; preds = %79, %59
  %95 = phi i32 [ %80, %79 ], [ %60, %59 ]
  %96 = call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %1, i32 %95) #19
  %97 = extractelement <2 x float> %96, i32 0
  %98 = fcmp ugt float %97, 0.000000e+00
  %99 = extractelement <2 x float> %96, i32 1
  %100 = fcmp ugt float %99, 0.000000e+00
  %101 = or i1 %98, %100
  br i1 %101, label %126, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %104 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %103, align 8
  %105 = bitcast %"class.cc::CompositorDelegateForInput"* %104 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %106 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %106, i64 22
  %108 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %107, align 8
  %109 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %108(%"class.cc::CompositorDelegateForInput"* %104) #19
  %110 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %109, i64 0, i32 74, i32 0, i32 0, i32 0
  %111 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %110, align 8
  %112 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %111, %"struct.cc::ScrollNode"* dereferenceable(168) %2) #19
  br i1 %112, label %126, label %113

113:                                              ; preds = %102
  %114 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %115 = and i8 %114, 25
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %126, label %117, !prof !6

117:                                              ; preds = %113
  %118 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %119 = bitcast %"class.base::TimeTicks"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #19
  %120 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %7, i64 0, i32 0, i32 0
  %121 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %121, i64* %120, align 8
  %122 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.25, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %118, %"class.base::TimeTicks"* nonnull dereferenceable(8) %7, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #19
  %123 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %126, label %125

125:                                              ; preds = %117
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([98 x i8], [98 x i8]* @.str.25, i64 0, i64 0), i64 %122) #19
  br label %126

126:                                              ; preds = %113, %81, %46, %28, %117, %125, %94, %102, %93, %85, %58, %50, %40, %32
  %127 = phi i32 [ 4096, %32 ], [ 4096, %40 ], [ 1024, %50 ], [ 1024, %58 ], [ 64, %85 ], [ 64, %93 ], [ 1024, %117 ], [ 1024, %125 ], [ 0, %94 ], [ 0, %102 ], [ 4096, %28 ], [ 1024, %46 ], [ 64, %81 ], [ 1024, %113 ]
  %128 = phi i64 [ 2, %32 ], [ 2, %40 ], [ 2, %50 ], [ 2, %58 ], [ 0, %85 ], [ 0, %93 ], [ 2, %117 ], [ 2, %125 ], [ 1, %94 ], [ 1, %102 ], [ 2, %28 ], [ 2, %46 ], [ 0, %81 ], [ 2, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %23) #19
  br label %129

129:                                              ; preds = %12, %21, %16, %126
  %130 = phi i32 [ %127, %126 ], [ %18, %16 ], [ %18, %21 ], [ %10, %12 ]
  %131 = phi i64 [ %128, %126 ], [ 0, %16 ], [ 0, %21 ], [ 0, %12 ]
  %132 = zext i32 %130 to i64
  %133 = shl nuw i64 %132, 32
  %134 = and i64 %131, 4294967295
  %135 = or i64 %133, %134
  %136 = insertvalue { i64, i32 } undef, i64 %135, 0
  %137 = insertvalue { i64, i32 } %136, i32 -1431699456, 1
  ret { i64, i32 } %137
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler21IsMainThreadScrollingERKNS_12InputHandler12ScrollStatusEPKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readnone, %"struct.cc::InputHandler::ScrollStatus"* nocapture readonly dereferenceable(12), %"struct.cc::ScrollNode"* nocapture readnone) local_unnamed_addr #7 align 2 {
  %4 = getelementptr inbounds %"struct.cc::InputHandler::ScrollStatus", %"struct.cc::InputHandler::ScrollStatus"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1896) %"class.cc::LayerTreeImpl"* @_ZN2cc20ThreadedInputHandler10ActiveTreeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %8, i64 0, i32 35, i32 0, i32 0, i32 0
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %9, align 8
  ret %"class.cc::LayerTreeImpl"* %10
}

declare %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl50FindFirstScrollingLayerOrScrollbarThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler24IsTouchDraggingScrollbarEPNS_9LayerImplEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* nocapture readnone, %"class.cc::LayerImpl"*, i32) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.cc::LayerImpl"* %1, null
  br i1 %4, label %13, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.cc::LayerImpl"* %1 to i1 (%"class.cc::LayerImpl"*)***
  %7 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %7, i64 7
  %9 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.cc::LayerImpl"* nonnull %1) #19
  %11 = icmp eq i32 %2, 0
  %12 = and i1 %11, %10
  ret i1 %12

13:                                               ; preds = %3
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden { %"struct.cc::ScrollNode"*, i8 } @_ZNK2cc20ThreadedInputHandler17HitTestScrollNodeERKN3gfx6PointFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = alloca %"class.std::__1::vector.1421", align 8
  %5 = bitcast %"class.std::__1::vector.1421"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #19
  %6 = getelementptr inbounds %"class.std::__1::vector.1421", %"class.std::__1::vector.1421"* %4, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.1421", %"class.std::__1::vector.1421"* %4, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::vector.1421"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 24, i1 false)
  %10 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %11 = bitcast %"class.cc::CompositorDelegateForInput"* %10 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %12 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %12, i64 22
  %14 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %13, align 8
  %15 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %14(%"class.cc::CompositorDelegateForInput"* %10) #19
  %16 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %15, i64 0, i32 35, i32 0, i32 0, i32 0
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  call void @_ZN2cc13LayerTreeImpl44FindAllLayersUpToAndIncludingFirstScrollableERKN3gfx6PointFE(%"class.std::__1::vector.1421"* nonnull sret %4, %"class.cc::LayerTreeImpl"* %17, %"class.gfx::PointF"* dereferenceable(8) %1) #19
  %18 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %6, align 8
  %19 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %7, align 8
  %20 = icmp eq %"class.cc::LayerImpl"** %18, %19
  br i1 %20, label %30, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %19, i64 -1
  %23 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %22, align 8
  %24 = call zeroext i1 @_ZNK2cc9LayerImpl21IsScrollerOrScrollbarEv(%"class.cc::LayerImpl"* %23) #19
  %25 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %7, align 8
  br i1 %24, label %26, label %30

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %25, i64 -1
  %28 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %27, align 8
  %29 = bitcast %"class.cc::LayerImpl"* %28 to i1 (%"class.cc::LayerImpl"*)***
  br label %30

30:                                               ; preds = %21, %2, %26
  %31 = phi %"class.cc::LayerImpl"** [ %25, %26 ], [ %18, %2 ], [ %25, %21 ]
  %32 = phi i1 (%"class.cc::LayerImpl"*)*** [ %29, %26 ], [ null, %2 ], [ null, %21 ]
  %33 = phi %"class.cc::LayerImpl"* [ %28, %26 ], [ null, %2 ], [ null, %21 ]
  %34 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %6, align 8
  %35 = icmp eq %"class.cc::LayerImpl"** %34, %31
  br i1 %35, label %63, label %38

36:                                               ; preds = %52
  %37 = icmp eq %"class.cc::LayerImpl"** %62, %31
  br i1 %37, label %63, label %38

38:                                               ; preds = %30, %36
  %39 = phi %"class.cc::LayerImpl"** [ %62, %36 ], [ %34, %30 ]
  %40 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %39, align 8
  %41 = call zeroext i1 @_ZNK2cc20ThreadedInputHandler30IsInitialScrollHitTestReliableEPKNS_9LayerImplES3_(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::LayerImpl"* %40, %"class.cc::LayerImpl"* %33)
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %44 = and i8 %43, 25
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %148, label %46, !prof !6

46:                                               ; preds = %42
  %47 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %48 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #19
  %49 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %50 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %50, i64* %49, align 8
  %51 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %47, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #19
  br label %148

52:                                               ; preds = %38
  %53 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %54 = bitcast %"class.cc::CompositorDelegateForInput"* %53 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %55 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %55, i64 22
  %57 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %56, align 8
  %58 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %57(%"class.cc::CompositorDelegateForInput"* %53) #19
  %59 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %58, i64 0, i32 35, i32 0, i32 0, i32 0
  %60 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %59, align 8
  %61 = call zeroext i1 @_ZNK2cc13LayerTreeImpl32PointHitsNonFastScrollableRegionERKN3gfx6PointFERKNS_9LayerImplE(%"class.cc::LayerTreeImpl"* %60, %"class.gfx::PointF"* dereferenceable(8) %1, %"class.cc::LayerImpl"* dereferenceable(640) %40) #19
  %62 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %39, i64 1
  br i1 %61, label %148, label %36

63:                                               ; preds = %36, %30
  %64 = icmp eq %"class.cc::LayerImpl"* %33, null
  br i1 %64, label %65, label %100

65:                                               ; preds = %63
  %66 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %67 = bitcast %"class.cc::CompositorDelegateForInput"* %66 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %68 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %68, i64 22
  %70 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %69, align 8
  %71 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %70(%"class.cc::CompositorDelegateForInput"* %66) #19
  %72 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %71, i64 0, i32 35, i32 0, i32 0, i32 0
  %73 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %72, align 8
  %74 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %73) #19
  %75 = icmp eq %"struct.cc::ScrollNode"* %74, null
  br i1 %75, label %148, label %76

76:                                               ; preds = %65
  %77 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %78 = bitcast %"class.cc::CompositorDelegateForInput"* %77 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %79 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %78, align 8
  %80 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %79, i64 22
  %81 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %80, align 8
  %82 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %81(%"class.cc::CompositorDelegateForInput"* %77) #19
  %83 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %82, i64 0, i32 35, i32 0, i32 0, i32 0
  %84 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %83, align 8
  %85 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %84) #19
  %86 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %85, i64 0, i32 5
  %87 = load i8, i8* %86, align 4
  %88 = and i8 %87, 20
  %89 = icmp eq i8 %88, 4
  br i1 %89, label %90, label %148

90:                                               ; preds = %76
  %91 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %92 = bitcast %"class.cc::CompositorDelegateForInput"* %91 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %93 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %93, i64 22
  %95 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %94, align 8
  %96 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %95(%"class.cc::CompositorDelegateForInput"* %91) #19
  %97 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %96, i64 0, i32 35, i32 0, i32 0, i32 0
  %98 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %97, align 8
  %99 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %98) #19
  br label %148

100:                                              ; preds = %63
  %101 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %32, align 8
  %102 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %101, i64 7
  %103 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %102, align 8
  %104 = call zeroext i1 %103(%"class.cc::LayerImpl"* nonnull %33) #19
  br i1 %104, label %105, label %118

105:                                              ; preds = %100
  %106 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %107 = bitcast %"class.cc::CompositorDelegateForInput"* %106 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %108 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %108, i64 22
  %110 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %109, align 8
  %111 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %110(%"class.cc::CompositorDelegateForInput"* %106) #19
  %112 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %111, i64 0, i32 35, i32 0, i32 0, i32 0
  %113 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %112, align 8
  %114 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %33, i64 1
  %115 = bitcast %"class.cc::LayerImpl"* %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = call %"class.cc::LayerImpl"* @_ZNK2cc13LayerTreeImpl16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %113, i64 %116) #19
  br label %118

118:                                              ; preds = %105, %100
  %119 = phi %"class.cc::LayerImpl"* [ %117, %105 ], [ %33, %100 ]
  %120 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %121 = bitcast %"class.cc::CompositorDelegateForInput"* %120 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %122 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %121, align 8
  %123 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %122, i64 3
  %124 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %123, align 8
  %125 = call dereferenceable(120) %"class.cc::ScrollTree"* %124(%"class.cc::CompositorDelegateForInput"* %120) #19
  %126 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %119, i64 0, i32 20
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, -1
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %125, i64 0, i32 0, i32 1, i32 0, i32 0
  %131 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %130, align 8
  %132 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %131, i64 %129
  %133 = select i1 %128, %"struct.cc::ScrollNode"* %132, %"struct.cc::ScrollNode"* null
  %134 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %133, i64 0, i32 5
  %135 = load i8, i8* %134, align 4
  %136 = and i8 %135, 20
  %137 = icmp eq i8 %136, 4
  br i1 %137, label %138, label %148

138:                                              ; preds = %118
  %139 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %140 = bitcast %"class.cc::CompositorDelegateForInput"* %139 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %141 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %140, align 8
  %142 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %141, i64 22
  %143 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %142, align 8
  %144 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %143(%"class.cc::CompositorDelegateForInput"* %139) #19
  %145 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %144, i64 0, i32 35, i32 0, i32 0, i32 0
  %146 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %145, align 8
  %147 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %146) #19
  br label %148

148:                                              ; preds = %52, %138, %118, %90, %76, %46, %42, %65
  %149 = phi %"struct.cc::ScrollNode"* [ null, %65 ], [ null, %42 ], [ null, %46 ], [ %99, %90 ], [ %85, %76 ], [ %147, %138 ], [ %133, %118 ], [ null, %52 ]
  %150 = phi i8 [ 1, %65 ], [ 0, %42 ], [ 0, %46 ], [ 1, %90 ], [ 1, %76 ], [ 1, %138 ], [ 1, %118 ], [ 0, %52 ]
  %151 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %6, align 8
  %152 = icmp eq %"class.cc::LayerImpl"** %151, null
  br i1 %152, label %157, label %153

153:                                              ; preds = %148
  %154 = ptrtoint %"class.cc::LayerImpl"** %151 to i64
  %155 = bitcast %"class.cc::LayerImpl"*** %7 to i64*
  store i64 %154, i64* %155, align 8
  %156 = bitcast %"class.cc::LayerImpl"** %151 to i8*
  call void @_ZdlPv(i8* %156) #18
  br label %157

157:                                              ; preds = %148, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #19
  %158 = insertvalue { %"struct.cc::ScrollNode"*, i8 } undef, %"struct.cc::ScrollNode"* %149, 0
  %159 = insertvalue { %"struct.cc::ScrollNode"*, i8 } %158, i8 %150, 1
  ret { %"struct.cc::ScrollNode"*, i8 } %159
}

declare %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl25FindLayerThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler30IsInitialScrollHitTestReliableEPKNS_9LayerImplES3_(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"*) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.cc::LayerImpl"* %2, null
  br i1 %4, label %73, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.cc::LayerImpl"* %1 to i1 (%"class.cc::LayerImpl"*)***
  %7 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %7, i64 7
  %9 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.cc::LayerImpl"* %1) #19
  br i1 %10, label %73, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %13 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %12, align 8
  %14 = bitcast %"class.cc::CompositorDelegateForInput"* %13 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %15 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %15, i64 3
  %17 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %16, align 8
  %18 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %17(%"class.cc::CompositorDelegateForInput"* %13) #19
  %19 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 20
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, -1
  %22 = sext i32 %20 to i64
  %23 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %18, i64 0, i32 0, i32 1, i32 0, i32 0
  %24 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %23, align 8
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 %22
  %26 = select i1 %21, %"struct.cc::ScrollNode"* %25, %"struct.cc::ScrollNode"* null
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %26, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %30, label %73

30:                                               ; preds = %11, %54
  %31 = phi i32 [ %56, %54 ], [ %28, %11 ]
  %32 = phi %"struct.cc::ScrollNode"* [ %34, %54 ], [ %26, %11 ]
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 %33
  %35 = icmp eq %"struct.cc::ScrollNode"* %34, null
  br i1 %35, label %73, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %32, i64 0, i32 5
  %38 = load i8, i8* %37, align 4
  %39 = and i8 %38, 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %36
  %42 = and i8 %38, 20
  %43 = icmp eq i8 %42, 4
  br i1 %43, label %44, label %58

44:                                               ; preds = %41
  %45 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %12, align 8
  %46 = bitcast %"class.cc::CompositorDelegateForInput"* %45 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %47 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %47, i64 22
  %49 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %48, align 8
  %50 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %49(%"class.cc::CompositorDelegateForInput"* %45) #19
  %51 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %50, i64 0, i32 35, i32 0, i32 0, i32 0
  %52 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %51, align 8
  %53 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %52) #19
  br label %58

54:                                               ; preds = %36
  %55 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %24, i64 %33, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = icmp sgt i32 %56, -1
  br i1 %57, label %30, label %73

58:                                               ; preds = %44, %41
  %59 = phi %"struct.cc::ScrollNode"* [ %53, %44 ], [ %32, %41 ]
  %60 = icmp eq %"struct.cc::ScrollNode"* %59, null
  br i1 %60, label %73, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.cc::LayerImpl"* %2 to i1 (%"class.cc::LayerImpl"*)***
  %63 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %63, i64 7
  %65 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.cc::LayerImpl"* nonnull %2) #19
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %59, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %2, i64 0, i32 20
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  br label %73

73:                                               ; preds = %30, %54, %11, %67, %58, %61, %5, %3
  %74 = phi i1 [ true, %3 ], [ true, %5 ], [ %72, %67 ], [ false, %58 ], [ false, %61 ], [ false, %11 ], [ false, %54 ], [ false, %30 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler36FindScrollNodeForCompositedScrollingERKN3gfx6PointFEPNS_9LayerImplEPbPj(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::PointF"* dereferenceable(8), %"class.cc::LayerImpl"*, i8* nocapture, i32* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::internal::flat_tree.771", align 8
  store i32 0, i32* %4, align 4
  %7 = bitcast %"class.base::internal::flat_tree.771"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #19
  call void @_ZNK2cc20ThreadedInputHandler22NonFastScrollableNodesERKN3gfx6PointFE(%"class.base::internal::flat_tree.771"* nonnull sret %6, %"class.cc::ThreadedInputHandler"* %0, %"class.gfx::PointF"* dereferenceable(8) %1)
  %8 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %9 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %10 = bitcast %"class.cc::CompositorDelegateForInput"* %9 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %11 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %11, i64 3
  %13 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %12, align 8
  %14 = call dereferenceable(120) %"class.cc::ScrollTree"* %13(%"class.cc::CompositorDelegateForInput"* %9) #19
  %15 = icmp eq %"class.cc::LayerImpl"* %2, null
  br i1 %15, label %124, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %2, i64 0, i32 20
  %18 = load i32, i32* %17, align 4
  %19 = bitcast %"class.cc::LayerImpl"* %2 to i1 (%"class.cc::LayerImpl"*)***
  %20 = load i1 (%"class.cc::LayerImpl"*)**, i1 (%"class.cc::LayerImpl"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %20, i64 7
  %22 = load i1 (%"class.cc::LayerImpl"*)*, i1 (%"class.cc::LayerImpl"*)** %21, align 8
  %23 = call zeroext i1 %22(%"class.cc::LayerImpl"* nonnull %2) #19
  br i1 %23, label %24, label %39

24:                                               ; preds = %16
  %25 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %26 = bitcast %"class.cc::CompositorDelegateForInput"* %25 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %27 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %26, align 8
  %28 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %27, i64 22
  %29 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %28, align 8
  %30 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %29(%"class.cc::CompositorDelegateForInput"* %25) #19
  %31 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %30, i64 0, i32 35, i32 0, i32 0, i32 0
  %32 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %2, i64 1
  %34 = bitcast %"class.cc::LayerImpl"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = call %"class.cc::LayerImpl"* @_ZNK2cc13LayerTreeImpl16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeImpl"* %32, i64 %35) #19
  %37 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %36, i64 0, i32 20
  %38 = load i32, i32* %37, align 4
  br label %39

39:                                               ; preds = %24, %16
  %40 = phi i32 [ %38, %24 ], [ %18, %16 ]
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %42, label %47

42:                                               ; preds = %39
  %43 = sext i32 %40 to i64
  %44 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %45 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %44, align 8
  %46 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %45, i64 %43
  br label %47

47:                                               ; preds = %39, %42
  %48 = phi %"struct.cc::ScrollNode"* [ %46, %42 ], [ null, %39 ]
  %49 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %48, i64 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %52, label %124

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %54 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 1
  %56 = bitcast i32** %55 to i64*
  %57 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %53, align 8
  br label %58

58:                                               ; preds = %52, %107
  %59 = phi %"struct.cc::ScrollNode"* [ %57, %52 ], [ %115, %107 ]
  %60 = phi i32 [ %50, %52 ], [ %119, %107 ]
  %61 = phi i32* [ %49, %52 ], [ %118, %107 ]
  %62 = phi %"struct.cc::ScrollNode"* [ null, %52 ], [ %111, %107 ]
  %63 = phi %"struct.cc::ScrollNode"* [ %48, %52 ], [ %117, %107 ]
  %64 = sext i32 %60 to i64
  %65 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %59, i64 %64
  %66 = icmp eq %"struct.cc::ScrollNode"* %65, null
  br i1 %66, label %121, label %67

67:                                               ; preds = %58
  %68 = call { i64, i32 } @_ZNK2cc20ThreadedInputHandler9TryScrollERKNS_10ScrollTreeEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollTree"* dereferenceable(120) %14, %"struct.cc::ScrollNode"* %63)
  %69 = extractvalue { i64, i32 } %68, 0
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %67
  %73 = lshr i64 %69, 32
  %74 = trunc i64 %73 to i32
  store i8 1, i8* %3, align 1
  store i32 %74, i32* %4, align 4
  br label %195

75:                                               ; preds = %67
  %76 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %63, i64 0, i32 0
  %77 = load i32*, i32** %54, align 8
  %78 = load i64, i64* %56, align 8
  %79 = ptrtoint i32* %77 to i64
  %80 = sub i64 %78, %79
  %81 = icmp eq i64 %80, 0
  %82 = inttoptr i64 %78 to i32*
  br i1 %81, label %99, label %83

83:                                               ; preds = %75
  %84 = ashr exact i64 %80, 2
  %85 = load i32, i32* %76, align 4
  br label %86

86:                                               ; preds = %86, %83
  %87 = phi i32* [ %77, %83 ], [ %97, %86 ]
  %88 = phi i64 [ %84, %83 ], [ %96, %86 ]
  %89 = lshr i64 %88, 1
  %90 = getelementptr inbounds i32, i32* %87, i64 %89
  %91 = load i32, i32* %90, align 4
  %92 = icmp slt i32 %91, %85
  %93 = getelementptr inbounds i32, i32* %90, i64 1
  %94 = xor i64 %89, -1
  %95 = add i64 %88, %94
  %96 = select i1 %92, i64 %95, i64 %89
  %97 = select i1 %92, i32* %93, i32* %87
  %98 = icmp eq i64 %96, 0
  br i1 %98, label %99, label %86

99:                                               ; preds = %86, %75
  %100 = phi i32* [ %77, %75 ], [ %97, %86 ]
  %101 = icmp eq i32* %100, %82
  br i1 %101, label %107, label %102

102:                                              ; preds = %99
  %103 = load i32, i32* %76, align 4
  %104 = load i32, i32* %100, align 4
  %105 = icmp slt i32 %103, %104
  br i1 %105, label %107, label %106

106:                                              ; preds = %102
  store i8 1, i8* %3, align 1
  store i32 64, i32* %4, align 4
  br label %195

107:                                              ; preds = %102, %99
  %108 = icmp ne i32 %70, 1
  %109 = icmp ne %"struct.cc::ScrollNode"* %62, null
  %110 = or i1 %109, %108
  %111 = select i1 %110, %"struct.cc::ScrollNode"* %62, %"struct.cc::ScrollNode"* %63
  %112 = load i32, i32* %61, align 4
  %113 = icmp sgt i32 %112, -1
  %114 = sext i32 %112 to i64
  %115 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %53, align 8
  %116 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %115, i64 %114
  %117 = select i1 %113, %"struct.cc::ScrollNode"* %116, %"struct.cc::ScrollNode"* null
  %118 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %117, i64 0, i32 1
  %119 = load i32, i32* %118, align 4
  %120 = icmp sgt i32 %119, -1
  br i1 %120, label %58, label %121

121:                                              ; preds = %58, %107
  %122 = phi %"struct.cc::ScrollNode"* [ %62, %58 ], [ %111, %107 ]
  %123 = icmp eq %"struct.cc::ScrollNode"* %122, null
  br i1 %123, label %124, label %135

124:                                              ; preds = %47, %5, %121
  %125 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %126 = bitcast %"class.cc::CompositorDelegateForInput"* %125 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %127 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %126, align 8
  %128 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %127, i64 22
  %129 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %128, align 8
  %130 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %129(%"class.cc::CompositorDelegateForInput"* %125) #19
  %131 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %130, i64 0, i32 35, i32 0, i32 0, i32 0
  %132 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %131, align 8
  %133 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %132) #19
  %134 = icmp eq %"struct.cc::ScrollNode"* %133, null
  br i1 %134, label %195, label %135

135:                                              ; preds = %121, %124
  %136 = phi %"struct.cc::ScrollNode"* [ %133, %124 ], [ %122, %121 ]
  %137 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %136, i64 0, i32 5
  %138 = load i8, i8* %137, align 4
  %139 = and i8 %138, 20
  %140 = icmp eq i8 %139, 4
  br i1 %140, label %141, label %151

141:                                              ; preds = %135
  %142 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %143 = bitcast %"class.cc::CompositorDelegateForInput"* %142 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %144 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %143, align 8
  %145 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %144, i64 22
  %146 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %145, align 8
  %147 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %146(%"class.cc::CompositorDelegateForInput"* %142) #19
  %148 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %147, i64 0, i32 35, i32 0, i32 0, i32 0
  %149 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %148, align 8
  %150 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %149) #19
  br label %151

151:                                              ; preds = %135, %141
  %152 = phi %"struct.cc::ScrollNode"* [ %150, %141 ], [ %136, %135 ]
  %153 = call { i64, i32 } @_ZNK2cc20ThreadedInputHandler9TryScrollERKNS_10ScrollTreeEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollTree"* dereferenceable(120) %14, %"struct.cc::ScrollNode"* %152)
  %154 = extractvalue { i64, i32 } %153, 0
  %155 = trunc i64 %154 to i32
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %160

157:                                              ; preds = %151
  %158 = lshr i64 %154, 32
  %159 = trunc i64 %158 to i32
  store i8 1, i8* %3, align 1
  store i32 %159, i32* %4, align 4
  br label %195

160:                                              ; preds = %151
  %161 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %152, i64 0, i32 0
  %162 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 1
  %165 = bitcast i32** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = ptrtoint i32* %163 to i64
  %168 = sub i64 %166, %167
  %169 = icmp eq i64 %168, 0
  %170 = inttoptr i64 %166 to i32*
  br i1 %169, label %187, label %171

171:                                              ; preds = %160
  %172 = ashr exact i64 %168, 2
  %173 = load i32, i32* %161, align 4
  br label %174

174:                                              ; preds = %174, %171
  %175 = phi i32* [ %163, %171 ], [ %185, %174 ]
  %176 = phi i64 [ %172, %171 ], [ %184, %174 ]
  %177 = lshr i64 %176, 1
  %178 = getelementptr inbounds i32, i32* %175, i64 %177
  %179 = load i32, i32* %178, align 4
  %180 = icmp slt i32 %179, %173
  %181 = getelementptr inbounds i32, i32* %178, i64 1
  %182 = xor i64 %177, -1
  %183 = add i64 %176, %182
  %184 = select i1 %180, i64 %183, i64 %177
  %185 = select i1 %180, i32* %181, i32* %175
  %186 = icmp eq i64 %184, 0
  br i1 %186, label %187, label %174

187:                                              ; preds = %174, %160
  %188 = phi i32* [ %163, %160 ], [ %185, %174 ]
  %189 = icmp eq i32* %188, %170
  br i1 %189, label %195, label %190

190:                                              ; preds = %187
  %191 = load i32, i32* %161, align 4
  %192 = load i32, i32* %188, align 4
  %193 = icmp slt i32 %191, %192
  br i1 %193, label %195, label %194

194:                                              ; preds = %190
  store i8 1, i8* %3, align 1
  store i32 64, i32* %4, align 4
  br label %195

195:                                              ; preds = %190, %187, %157, %194, %106, %72, %124
  %196 = phi %"struct.cc::ScrollNode"* [ null, %124 ], [ %63, %72 ], [ %63, %106 ], [ %152, %190 ], [ %152, %194 ], [ %152, %157 ], [ %152, %187 ]
  %197 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8
  %199 = icmp eq i32* %198, null
  br i1 %199, label %205, label %200

200:                                              ; preds = %195
  %201 = ptrtoint i32* %198 to i64
  %202 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %6, i64 0, i32 0, i32 0, i32 1
  %203 = bitcast i32** %202 to i64*
  store i64 %201, i64* %203, align 8
  %204 = bitcast i32* %198 to i8*
  call void @_ZdlPv(i8* %204) #18
  br label %205

205:                                              ; preds = %195, %200
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #19
  ret %"struct.cc::ScrollNode"* %196
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZN2cc20ThreadedInputHandler15FindNodeToLatchEPNS_11ScrollStateEPNS_10ScrollNodeEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::ScrollState"* nocapture, %"struct.cc::ScrollNode"*, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 3
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = icmp eq %"struct.cc::ScrollNode"* %2, null
  br i1 %12, label %97, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 8
  %15 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 2
  %16 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 3
  %17 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  br label %20

20:                                               ; preds = %13, %76
  %21 = phi %"struct.cc::ScrollNode"* [ %2, %13 ], [ %83, %76 ]
  %22 = phi %"struct.cc::ScrollNode"* [ null, %13 ], [ %77, %76 ]
  %23 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %24 = bitcast %"class.cc::CompositorDelegateForInput"* %23 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %25 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %24, align 8
  %26 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %25, i64 22
  %27 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %26, align 8
  %28 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %27(%"class.cc::CompositorDelegateForInput"* %23) #19
  %29 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %28, i64 0, i32 74, i32 0, i32 0, i32 0
  %30 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %29, align 8
  %31 = tail call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %30, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %21) #19
  %32 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 0, i32 5
  %33 = load i8, i8* %32, align 4
  br i1 %31, label %34, label %47

34:                                               ; preds = %20
  %35 = and i8 %33, 20
  %36 = icmp eq i8 %35, 4
  br i1 %36, label %37, label %86

37:                                               ; preds = %34
  %38 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %39 = bitcast %"class.cc::CompositorDelegateForInput"* %38 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %40 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %40, i64 22
  %42 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %41, align 8
  %43 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %42(%"class.cc::CompositorDelegateForInput"* %38) #19
  %44 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %43, i64 0, i32 35, i32 0, i32 0, i32 0
  %45 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %44, align 8
  %46 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %45) #19
  br label %86

47:                                               ; preds = %20
  %48 = and i8 %33, 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %76, label %50

50:                                               ; preds = %47
  %51 = icmp eq %"struct.cc::ScrollNode"* %22, null
  %52 = select i1 %51, %"struct.cc::ScrollNode"* %21, %"struct.cc::ScrollNode"* %22
  %53 = tail call zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* dereferenceable(80) %1, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %21)
  br i1 %53, label %86, label %54

54:                                               ; preds = %50
  %55 = load i8, i8* %14, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  %57 = select i1 %56, double* %17, double* %15
  %58 = select i1 %56, double* %18, double* %16
  %59 = load double, double* %57, align 8
  %60 = load double, double* %58, align 8
  %61 = fptrunc double %59 to float
  %62 = fptrunc double %60 to float
  %63 = fcmp oeq float %61, 0.000000e+00
  br i1 %63, label %68, label %64

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 0, i32 10, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %74

68:                                               ; preds = %64, %54
  %69 = fcmp oeq float %62, 0.000000e+00
  br i1 %69, label %76, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 0, i32 10, i32 1
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %76, label %74

74:                                               ; preds = %64, %70
  %75 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 18
  store i8 1, i8* %75, align 2
  br label %86

76:                                               ; preds = %68, %70, %47
  %77 = phi %"struct.cc::ScrollNode"* [ %22, %47 ], [ %52, %70 ], [ %52, %68 ]
  %78 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %21, i64 0, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp slt i32 %79, 0
  %81 = sext i32 %79 to i64
  %82 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %19, align 8
  %83 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %82, i64 %81
  %84 = icmp eq %"struct.cc::ScrollNode"* %83, null
  %85 = or i1 %84, %80
  br i1 %85, label %86, label %20

86:                                               ; preds = %76, %50, %74, %37, %34
  %87 = phi %"struct.cc::ScrollNode"* [ %21, %74 ], [ %46, %37 ], [ %21, %34 ], [ null, %76 ], [ %21, %50 ]
  %88 = phi %"struct.cc::ScrollNode"* [ %52, %74 ], [ %22, %37 ], [ %22, %34 ], [ %77, %76 ], [ %52, %50 ]
  %89 = icmp eq i32 %3, 2
  %90 = icmp ne %"struct.cc::ScrollNode"* %88, null
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %97

92:                                               ; preds = %86
  %93 = icmp eq %"struct.cc::ScrollNode"* %87, null
  br i1 %93, label %96, label %94

94:                                               ; preds = %92
  %95 = tail call zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* dereferenceable(80) %1, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %87)
  br i1 %95, label %97, label %96

96:                                               ; preds = %92, %94
  br label %97

97:                                               ; preds = %4, %94, %96, %86
  %98 = phi %"struct.cc::ScrollNode"* [ %87, %94 ], [ %88, %96 ], [ %87, %86 ], [ null, %4 ]
  ret %"struct.cc::ScrollNode"* %98
}

declare void @_ZN2cc13LayerTreeImpl25SetCurrentlyScrollingNodeEPKNS_10ScrollNodeE(%"class.cc::LayerTreeImpl"*, %"struct.cc::ScrollNode"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler18DidLatchToScrollerERKNS_11ScrollStateEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"* dereferenceable(80), i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 22
  %10 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %11, i64 0, i32 46, i32 0, i32 0, i32 0
  %13 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %12, align 8
  tail call void @_ZN2cc28BrowserControlsOffsetManager11ScrollBeginEv(%"class.cc::BrowserControlsOffsetManager"* %13) #19
  %14 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %15 = bitcast %"class.cc::CompositorDelegateForInput"* %14 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %16 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %16, i64 22
  %18 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %17, align 8
  %19 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %18(%"class.cc::CompositorDelegateForInput"* %14) #19
  %20 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %19, i64 0, i32 58, i32 0, i32 0, i32 0
  %21 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %20, align 8
  %22 = bitcast %"class.cc::MutatorHost"* %21 to void (%"class.cc::MutatorHost"*)***
  %23 = load void (%"class.cc::MutatorHost"*)**, void (%"class.cc::MutatorHost"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.cc::MutatorHost"*)*, void (%"class.cc::MutatorHost"*)** %23, i64 39
  %25 = load void (%"class.cc::MutatorHost"*)*, void (%"class.cc::MutatorHost"*)** %24, align 8
  tail call void %25(%"class.cc::MutatorHost"* %21) #19
  %26 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %27 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %26, i64* %27, align 8
  %28 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %26, i64* %28, align 8
  %29 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %30 = bitcast %"class.cc::CompositorDelegateForInput"* %29 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %31 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %30, align 8
  %32 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %31, i64 3
  %33 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %32, align 8
  %34 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %33(%"class.cc::CompositorDelegateForInput"* %29) #19
  %35 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %34) #19
  %36 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %35, i64 0, i32 8, i32 0
  %37 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 15, i32 0
  %38 = load i64, i64* %36, align 8
  store i64 %38, i64* %37, align 8
  %39 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast i8* %39 to i64*
  %41 = zext i32 %2 to i64
  %42 = shl nuw i64 %41, 32
  %43 = or i64 %42, 1
  store i64 %43, i64* %40, align 8
  %44 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  %47 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %46, label %51, label %48

48:                                               ; preds = %3
  %49 = bitcast %"class.cc::ScrollState"* %47 to i8*
  %50 = bitcast %"class.cc::ScrollState"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 80, i1 false) #19
  br label %52

51:                                               ; preds = %3
  tail call void @_ZN2cc11ScrollStateC1ERKS0_(%"class.cc::ScrollState"* %47, %"class.cc::ScrollState"* dereferenceable(80) %1) #19
  store i8 1, i8* %44, align 8
  br label %52

52:                                               ; preds = %48, %51
  %53 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %54 = bitcast %"class.cc::CompositorDelegateForInput"* %53 to void (%"class.cc::CompositorDelegateForInput"*)***
  %55 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %55, i64 12
  %57 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %56, align 8
  tail call void %57(%"class.cc::CompositorDelegateForInput"* %53) #19
  switch i32 %2, label %86 [
    i32 1, label %58
    i32 0, label %70
    i32 3, label %84
  ]

58:                                               ; preds = %52
  %59 = load atomic i64, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %60 = inttoptr i64 %59 to %"class.base::HistogramBase"*
  %61 = icmp eq i64 %59, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %58
  %63 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.38, i64 0, i64 0), i32 1) #19
  %64 = ptrtoint %"class.base::HistogramBase"* %63 to i64
  store atomic i64 %64, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %65

65:                                               ; preds = %58, %62
  %66 = phi %"class.base::HistogramBase"* [ %60, %58 ], [ %63, %62 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %66, i1 zeroext false) #19
  %67 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %80, label %82

70:                                               ; preds = %52
  %71 = load atomic i64, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %72 = inttoptr i64 %71 to %"class.base::HistogramBase"*
  %73 = icmp eq i64 %71, 0
  br i1 %73, label %74, label %77

74:                                               ; preds = %70
  %75 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i64 0, i64 0), i32 1) #19
  %76 = ptrtoint %"class.base::HistogramBase"* %75 to i64
  store atomic i64 %76, i64* @_ZZN2cc12_GLOBAL__N_132RecordCompositorSlowScrollMetricEN2ui15ScrollInputTypeENS0_22SlowScrollMetricThreadEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %77

77:                                               ; preds = %70, %74
  %78 = phi %"class.base::HistogramBase"* [ %72, %70 ], [ %75, %74 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %78, i1 zeroext false) #19
  %79 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 26
  store i8 1, i8* %79, align 2
  br label %86

80:                                               ; preds = %65
  %81 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 27
  store i8 1, i8* %81, align 1
  br label %86

82:                                               ; preds = %65
  %83 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 25
  store i8 1, i8* %83, align 1
  br label %86

84:                                               ; preds = %52
  %85 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 28
  store i8 1, i8* %85, align 4
  br label %86

86:                                               ; preds = %52, %80, %82, %77, %84
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.cc::Viewport"* @_ZNK2cc20ThreadedInputHandler11GetViewportEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %8, i64 0, i32 74, i32 0, i32 0, i32 0
  %10 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %9, align 8
  ret %"class.cc::Viewport"* %10
}

declare zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"*, %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc8Viewport9CanScrollERKNS_10ScrollNodeERKNS_11ScrollStateE(%"class.cc::Viewport"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.cc::ScrollState"* dereferenceable(80)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN2cc20ThreadedInputHandler15RootScrollBeginEPNS_11ScrollStateEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !6

8:                                                ; preds = %3
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i64 [ -6148914691236517206, %3 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 22
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %24, i64 0, i32 35, i32 0, i32 0, i32 0
  %26 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %25, align 8
  %27 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %26) #19
  %28 = icmp eq %"struct.cc::ScrollNode"* %27, null
  br i1 %28, label %55, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0
  %31 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %32 = bitcast %"class.cc::CompositorDelegateForInput"* %31 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %33 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %33, i64 22
  %35 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %34, align 8
  %36 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %35(%"class.cc::CompositorDelegateForInput"* %31) #19
  %37 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %36, i64 0, i32 35, i32 0, i32 0, i32 0
  %38 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %37, align 8
  %39 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %38) #19
  %40 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %39, i64 0, i32 8, i32 0
  %41 = load i64, i64* %40, align 8
  call void @_ZN2cc15ScrollStateData36set_current_native_scrolling_elementENS_9ElementIdE(%"class.cc::ScrollStateData"* %30, i64 %41) #19
  %42 = bitcast %"class.cc::ThreadedInputHandler"* %0 to { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)***
  %43 = load { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)**, { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)*** %42, align 8
  %44 = getelementptr inbounds { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)*, { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)** %43, i64 2
  %45 = load { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)*, { i64, i32 } (%"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i32)** %44, align 8
  %46 = call { i64, i32 } %45(%"class.cc::ThreadedInputHandler"* %0, %"class.cc::ScrollState"* %1, i32 %2) #19
  %47 = extractvalue { i64, i32 } %46, 0
  %48 = extractvalue { i64, i32 } %46, 1
  %49 = and i64 %47, -4294967296
  %50 = and i32 %48, -16777216
  %51 = and i64 %47, 4294967295
  %52 = and i32 %48, 16711680
  %53 = and i32 %48, 65280
  %54 = and i32 %48, 255
  br label %55

55:                                               ; preds = %14, %29
  %56 = phi i32 [ %50, %29 ], [ -1442840576, %14 ]
  %57 = phi i32 [ %52, %29 ], [ 11141120, %14 ]
  %58 = phi i32 [ %53, %29 ], [ 0, %14 ]
  %59 = phi i32 [ %54, %29 ], [ 0, %14 ]
  %60 = phi i64 [ %49, %29 ], [ 2199023255552, %14 ]
  %61 = phi i64 [ %51, %29 ], [ 2, %14 ]
  %62 = icmp eq i8* %17, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %55
  %64 = load i8, i8* %17, align 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #19
  br label %67

67:                                               ; preds = %55, %63, %66
  %68 = or i64 %61, %60
  %69 = or i32 %57, %56
  %70 = or i32 %69, %58
  %71 = or i32 %70, %59
  %72 = insertvalue { i64, i32 } undef, i64 %68, 0
  %73 = insertvalue { i64, i32 } %72, i32 %71, 1
  ret { i64, i32 } %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc20ThreadedInputHandler23OuterViewportScrollNodeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %8, i64 0, i32 35, i32 0, i32 0, i32 0
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %9, align 8
  %11 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %10) #19
  ret %"struct.cc::ScrollNode"* %11
}

declare void @_ZN2cc15ScrollStateData36set_current_native_scrolling_elementENS_9ElementIdE(%"class.cc::ScrollStateData"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler12ScrollUpdateEPNS_11ScrollStateEN4base9TimeDeltaE(%"struct.cc::InputHandlerScrollResult"* noalias nocapture sret, %"class.cc::ThreadedInputHandler"*, %"class.cc::ScrollState"*, i64) unnamed_addr #5 align 2 {
  %5 = alloca double, align 8
  %6 = alloca double, align 8
  %7 = alloca %"class.gfx::Vector2dF", align 4
  %8 = alloca %"class.gfx::Vector2dF", align 4
  %9 = alloca %"class.gfx::Vector2dF", align 4
  %10 = alloca i64, align 8
  %11 = bitcast i64* %10 to %"class.gfx::Vector2dF"*
  %12 = alloca %"struct.cc::InputHandlerScrollResult", align 4
  %13 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %14 = and i8 %13, 25
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %27, label %16, !prof !6

16:                                               ; preds = %4
  %17 = bitcast double* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #19
  %18 = bitcast %"class.cc::ScrollState"* %2 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast double* %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #19
  %22 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 1
  %23 = bitcast double* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast double* %6 to i64*
  store i64 %24, i64* %25, align 8
  %26 = call i64 @_ZN20trace_event_internal13AddTraceEventIddEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.11, i64 0, i64 0), double* nonnull dereferenceable(8) %5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), double* nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #19
  br label %27

27:                                               ; preds = %4, %16
  %28 = phi i8* [ null, %4 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %16 ]
  %29 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %4 ], [ getelementptr inbounds ([35 x i8], [35 x i8]* @.str.10, i64 0, i64 0), %16 ]
  %30 = phi i64 [ -6148914691236517206, %4 ], [ %26, %16 ]
  %31 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %32 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %33 = bitcast %"class.cc::CompositorDelegateForInput"* %32 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %34 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %34, i64 3
  %36 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %35, align 8
  %37 = call dereferenceable(120) %"class.cc::ScrollTree"* %36(%"class.cc::CompositorDelegateForInput"* %32) #19
  %38 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %37) #19
  %39 = icmp eq %"struct.cc::ScrollNode"* %38, null
  br i1 %39, label %40, label %46

40:                                               ; preds = %27
  %41 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 4, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 4 %41, i8 0, i64 20, i1 false)
  store i32 1, i32* %42, align 4
  %43 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 4, i32 1
  store i32 1, i32* %43, align 4
  %44 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 5, i32 0
  store float 0.000000e+00, float* %44, align 4
  %45 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 5, i32 1
  store float 0.000000e+00, float* %45, align 4
  br label %392

46:                                               ; preds = %27
  %47 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %48 = load i8, i8* %47, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  %50 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %49, label %54, label %51

51:                                               ; preds = %46
  %52 = bitcast %"class.cc::ScrollState"* %50 to i8*
  %53 = bitcast %"class.cc::ScrollState"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 80, i1 false) #19
  br label %55

54:                                               ; preds = %46
  call void @_ZN2cc11ScrollStateC1ERKS0_(%"class.cc::ScrollState"* %50, %"class.cc::ScrollState"* dereferenceable(80) %2) #19
  store i8 1, i8* %47, align 8
  br label %55

55:                                               ; preds = %51, %54
  %56 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 14
  %57 = load i8, i8* %56, align 2, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 15
  %61 = load i8, i8* %60, align 1
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  call void @_ZN2cc20ThreadedInputHandler33AdjustScrollDeltaForScrollbarSnapEPNS_11ScrollStateE(%"class.cc::ThreadedInputHandler"* %1, %"class.cc::ScrollState"* %2)
  br label %64

64:                                               ; preds = %55, %59, %63
  %65 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %66 = bitcast %"class.cc::CompositorDelegateForInput"* %65 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %67 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %66, align 8
  %68 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %67, i64 3
  %69 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %68, align 8
  %70 = call dereferenceable(120) %"class.cc::ScrollTree"* %69(%"class.cc::CompositorDelegateForInput"* %65) #19
  %71 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %70) #19
  %72 = bitcast %"class.gfx::Vector2dF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #19
  %73 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 0
  %74 = load double, double* %73, align 8
  %75 = fptrunc double %74 to float
  %76 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 1
  %77 = load double, double* %76, align 8
  %78 = fptrunc double %77 to float
  %79 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %7, i64 0, i32 0
  store float %75, float* %79, align 4
  %80 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %7, i64 0, i32 1
  store float %78, float* %80, align 4
  %81 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 15
  %82 = load i8, i8* %81, align 1
  %83 = call <2 x float> @_ZN2cc20ThreadedInputHandler32ResolveScrollGranularityToPixelsERKNS_10ScrollNodeERKN3gfx9Vector2dFEN2ui17ScrollGranularityE(%"class.cc::ThreadedInputHandler"* %1, %"struct.cc::ScrollNode"* dereferenceable(168) %71, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %7, i8 zeroext %82)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #19
  %84 = fpext <2 x float> %83 to <2 x double>
  %85 = bitcast %"class.cc::ScrollState"* %2 to <2 x double>*
  store <2 x double> %84, <2 x double>* %85, align 8
  %86 = load i8, i8* %81, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %64
  store i8 1, i8* %81, align 1
  br label %89

89:                                               ; preds = %64, %88
  %90 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %91 = bitcast %"class.gfx::Vector2dF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #19
  %92 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 0
  %93 = extractelement <2 x float> %83, i32 0
  store float %93, float* %92, align 4
  %94 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %8, i64 0, i32 1
  %95 = extractelement <2 x float> %83, i32 1
  store float %95, float* %94, align 4
  %96 = bitcast %"class.cc::CompositorDelegateForInput"* %90 to void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)***
  %97 = load void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)**, void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)*** %96, align 8
  %98 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)*, void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)** %97, i64 8
  %99 = load void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)*, void (%"class.cc::CompositorDelegateForInput"*, %"class.gfx::Vector2dF"*)** %98, align 8
  call void %99(%"class.cc::CompositorDelegateForInput"* %90, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #19
  %100 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %101 = bitcast %"class.cc::CompositorDelegateForInput"* %100 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %102 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %101, align 8
  %103 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %102, i64 3
  %104 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %103, align 8
  %105 = call dereferenceable(120) %"class.cc::ScrollTree"* %104(%"class.cc::CompositorDelegateForInput"* %100) #19
  %106 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %105) #19
  %107 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %106, i64 0, i32 8, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.cc::CompositorDelegateForInput"* %100 to void (%"class.cc::CompositorDelegateForInput"*, i64)***
  %110 = load void (%"class.cc::CompositorDelegateForInput"*, i64)**, void (%"class.cc::CompositorDelegateForInput"*, i64)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, i64)*, void (%"class.cc::CompositorDelegateForInput"*, i64)** %110, i64 16
  %112 = load void (%"class.cc::CompositorDelegateForInput"*, i64)*, void (%"class.cc::CompositorDelegateForInput"*, i64)** %111, align 8
  call void %112(%"class.cc::CompositorDelegateForInput"* %100, i64 %108) #19
  %113 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %114 = bitcast %"class.cc::CompositorDelegateForInput"* %113 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %115 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %114, align 8
  %116 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %115, i64 22
  %117 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %116, align 8
  %118 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %117(%"class.cc::CompositorDelegateForInput"* %113) #19
  %119 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %118, i64 0, i32 46, i32 0, i32 0, i32 0
  %120 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %119, align 8
  %121 = call float @_ZNK2cc28BrowserControlsOffsetManager17ControlsTopOffsetEv(%"class.cc::BrowserControlsOffsetManager"* %120) #19
  call void @_ZN2cc20ThreadedInputHandler21ScrollLatchedScrollerEPNS_11ScrollStateEN4base9TimeDeltaE(%"class.cc::ThreadedInputHandler"* %1, %"class.cc::ScrollState"* %2, i64 %3)
  %122 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 16
  %123 = load i8, i8* %122, align 8, !range !2
  %124 = icmp eq i8 %123, 0
  %125 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 17
  %126 = load i8, i8* %125, align 1, !range !2
  %127 = icmp eq i8 %126, 0
  %128 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 18
  %129 = load i8, i8* %128, align 2, !range !2
  %130 = or i8 %129, %123
  store i8 %130, i8* %128, align 2
  %131 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 19
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = or i8 %132, %126
  store i8 %133, i8* %131, align 1
  %134 = or i8 %126, %123
  %135 = icmp ne i8 %134, 0
  br i1 %135, label %136, label %162

136:                                              ; preds = %89
  %137 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %138 = bitcast %"class.cc::CompositorDelegateForInput"* %137 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %139 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %138, align 8
  %140 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %139, i64 21
  %141 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %140, align 8
  %142 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* %141(%"class.cc::CompositorDelegateForInput"* %137) #19
  %143 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %142, i64 0, i32 66
  %144 = load i8, i8* %143, align 2, !range !2
  %145 = icmp ne i8 %144, 0
  %146 = load i8, i8* %81, align 1
  %147 = icmp ne i8 %146, 0
  %148 = and i1 %145, %147
  %149 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %150 = bitcast %"class.cc::CompositorDelegateForInput"* %149 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %151 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %151, i64 3
  %153 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %152, align 8
  %154 = call dereferenceable(120) %"class.cc::ScrollTree"* %153(%"class.cc::CompositorDelegateForInput"* %149) #19
  %155 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %154) #19
  %156 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %155, i64 0, i32 8, i32 0
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.cc::CompositorDelegateForInput"* %149 to void (%"class.cc::CompositorDelegateForInput"*, i64, i1)***
  %159 = load void (%"class.cc::CompositorDelegateForInput"*, i64, i1)**, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)** %159, i64 17
  %161 = load void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)** %160, align 8
  call void %161(%"class.cc::CompositorDelegateForInput"* %149, i64 %157, i1 zeroext %148) #19
  br label %171

162:                                              ; preds = %89
  %163 = bitcast %"class.gfx::Vector2dF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #19
  %164 = load double, double* %73, align 8
  %165 = fptrunc double %164 to float
  %166 = load double, double* %76, align 8
  %167 = fptrunc double %166 to float
  %168 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %9, i64 0, i32 0
  store float %165, float* %168, align 4
  %169 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %9, i64 0, i32 1
  store float %167, float* %169, align 4
  %170 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 7
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* %170, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #19
  br label %171

171:                                              ; preds = %162, %136
  %172 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %173 = bitcast %"class.cc::CompositorDelegateForInput"* %172 to void (%"class.cc::CompositorDelegateForInput"*)***
  %174 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %173, align 8
  %175 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %174, i64 5
  %176 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %175, align 8
  call void %176(%"class.cc::CompositorDelegateForInput"* %172) #19
  br i1 %124, label %179, label %177

177:                                              ; preds = %171
  %178 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 6, i32 0
  store float 0.000000e+00, float* %178, align 4
  br label %179

179:                                              ; preds = %171, %177
  br i1 %127, label %182, label %180

180:                                              ; preds = %179
  %181 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 6, i32 1
  store float 0.000000e+00, float* %181, align 4
  br label %182

182:                                              ; preds = %179, %180
  %183 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %183) #19
  %184 = bitcast i64* %10 to float*
  %185 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %11, i64 0, i32 1
  store float 0.000000e+00, float* %184, align 8
  store float 0.000000e+00, float* %185, align 4
  %186 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %187 = bitcast %"class.cc::CompositorDelegateForInput"* %186 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %188 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %187, align 8
  %189 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %188, i64 22
  %190 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %189, align 8
  %191 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %190(%"class.cc::CompositorDelegateForInput"* %186) #19
  %192 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %191, i64 0, i32 74, i32 0, i32 0, i32 0
  %193 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %192, align 8
  %194 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %195 = bitcast %"class.cc::CompositorDelegateForInput"* %194 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %196 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %195, align 8
  %197 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %196, i64 3
  %198 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %197, align 8
  %199 = call dereferenceable(120) %"class.cc::ScrollTree"* %198(%"class.cc::CompositorDelegateForInput"* %194) #19
  %200 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %199) #19
  %201 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %193, %"struct.cc::ScrollNode"* dereferenceable(168) %200) #19
  br i1 %201, label %202, label %209

202:                                              ; preds = %182
  %203 = load double, double* %73, align 8
  %204 = fptrunc double %203 to float
  %205 = load double, double* %76, align 8
  %206 = fptrunc double %205 to float
  store float %204, float* %184, align 8
  %207 = getelementptr inbounds i8, i8* %183, i64 4
  %208 = bitcast i8* %207 to float*
  store float %206, float* %208, align 4
  br label %209

209:                                              ; preds = %202, %182
  %210 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %211 = bitcast %"class.cc::CompositorDelegateForInput"* %210 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %212 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %211, align 8
  %213 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %212, i64 22
  %214 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %213, align 8
  %215 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %214(%"class.cc::CompositorDelegateForInput"* %210) #19
  %216 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %215, i64 0, i32 35, i32 0, i32 0, i32 0
  %217 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %216, align 8
  %218 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %217) #19
  %219 = icmp eq %"struct.cc::ScrollNode"* %218, null
  br i1 %219, label %232, label %220

220:                                              ; preds = %209
  %221 = bitcast i64* %10 to <2 x float>*
  %222 = load <2 x float>, <2 x float>* %221, align 8
  %223 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %218, i64 0, i32 5
  %224 = load i8, i8* %223, align 4
  %225 = and i8 %224, 64
  %226 = icmp eq i8 %225, 0
  %227 = insertelement <2 x float> %222, float 0.000000e+00, i32 0
  %228 = select i1 %226, <2 x float> %227, <2 x float> %222
  %229 = icmp sgt i8 %224, -1
  %230 = insertelement <2 x float> %228, float 0.000000e+00, i32 1
  %231 = select i1 %229, <2 x float> %230, <2 x float> %228
  store <2 x float> %231, <2 x float>* %221, align 8
  br label %232

232:                                              ; preds = %209, %220
  %233 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 6
  call void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"* %233, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %11) #19
  %234 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %235 = bitcast %"class.cc::CompositorDelegateForInput"* %234 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %236 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %235, align 8
  %237 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %236, i64 22
  %238 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %237, align 8
  %239 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %238(%"class.cc::CompositorDelegateForInput"* %234) #19
  %240 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %239, i64 0, i32 46, i32 0, i32 0, i32 0
  %241 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %240, align 8
  %242 = call float @_ZNK2cc28BrowserControlsOffsetManager17ControlsTopOffsetEv(%"class.cc::BrowserControlsOffsetManager"* %241) #19
  %243 = fcmp une float %121, %242
  %244 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %244) #19
  %245 = bitcast %"struct.cc::InputHandlerScrollResult"* %12 to i32*
  store i32 -1431655766, i32* %245, align 4
  %246 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 1
  %247 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 4, i32 0
  store i32 1, i32* %247, align 4
  %248 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 4, i32 1
  store i32 1, i32* %248, align 4
  %249 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 5, i32 0
  store float 0.000000e+00, float* %249, align 4
  %250 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 5, i32 1
  store float 0.000000e+00, float* %250, align 4
  %251 = or i1 %135, %243
  %252 = zext i1 %251 to i8
  store i8 %252, i8* %244, align 4
  %253 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %11) #19
  %254 = xor i1 %253, true
  %255 = zext i1 %254 to i8
  store i8 %255, i8* %246, align 1
  %256 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 2
  %257 = bitcast %"class.gfx::Vector2dF"* %233 to i64*
  %258 = bitcast %"class.gfx::Vector2dF"* %256 to i64*
  %259 = load i64, i64* %257, align 4
  store i64 %259, i64* %258, align 4
  %260 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 3
  %261 = bitcast %"class.gfx::Vector2dF"* %260 to i64*
  %262 = load i64, i64* %10, align 8
  store i64 %262, i64* %261, align 4
  %263 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %2, i64 0, i32 0, i32 18
  %264 = load i8, i8* %263, align 2, !range !2
  %265 = icmp eq i8 %264, 0
  br i1 %265, label %266, label %281

266:                                              ; preds = %232
  %267 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %268 = bitcast %"class.cc::CompositorDelegateForInput"* %267 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %269 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %268, align 8
  %270 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %269, i64 22
  %271 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %270, align 8
  %272 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %271(%"class.cc::CompositorDelegateForInput"* %267) #19
  %273 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %272, i64 0, i32 35, i32 0, i32 0, i32 0
  %274 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %273, align 8
  %275 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %274, i64 0, i32 48
  %276 = bitcast %"struct.cc::OverscrollBehavior"* %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = and i64 %277, -4294967296
  %279 = and i64 %277, 4294967295
  %280 = load i8, i8* %244, align 4, !range !2
  br label %281

281:                                              ; preds = %232, %266
  %282 = phi i8 [ %280, %266 ], [ %252, %232 ]
  %283 = phi i64 [ %278, %266 ], [ 0, %232 ]
  %284 = phi i64 [ %279, %266 ], [ 0, %232 ]
  %285 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 4
  %286 = bitcast %"struct.cc::OverscrollBehavior"* %285 to i64*
  %287 = or i64 %284, %283
  store i64 %287, i64* %286, align 4
  %288 = icmp eq i8 %282, 0
  br i1 %288, label %290, label %289

289:                                              ; preds = %281
  call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %1)
  br label %290

290:                                              ; preds = %281, %289
  %291 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %292 = bitcast %"class.cc::CompositorDelegateForInput"* %291 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %293 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %292, align 8
  %294 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %293, i64 3
  %295 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %294, align 8
  %296 = call dereferenceable(120) %"class.cc::ScrollTree"* %295(%"class.cc::CompositorDelegateForInput"* %291) #19
  %297 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %296) #19
  %298 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %297, i64 0, i32 5
  %299 = load i8, i8* %298, align 4
  %300 = and i8 %299, 8
  %301 = icmp eq i8 %300, 0
  %302 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  br i1 %301, label %312, label %303

303:                                              ; preds = %290
  %304 = bitcast %"class.cc::CompositorDelegateForInput"* %302 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %305 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %304, align 8
  %306 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %305, i64 22
  %307 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %306, align 8
  %308 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %307(%"class.cc::CompositorDelegateForInput"* %302) #19
  %309 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %308, i64 0, i32 74, i32 0, i32 0, i32 0
  %310 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %309, align 8
  %311 = call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %310) #19
  br label %321

312:                                              ; preds = %290
  %313 = bitcast %"class.cc::CompositorDelegateForInput"* %302 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %314 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %313, align 8
  %315 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %314, i64 3
  %316 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %315, align 8
  %317 = call dereferenceable(120) %"class.cc::ScrollTree"* %316(%"class.cc::CompositorDelegateForInput"* %302) #19
  %318 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %297, i64 0, i32 8, i32 0
  %319 = load i64, i64* %318, align 8
  %320 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %317, i64 %319) #19
  br label %321

321:                                              ; preds = %303, %312
  %322 = phi <2 x float> [ %311, %303 ], [ %320, %312 ]
  %323 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %12, i64 0, i32 5
  %324 = bitcast %"class.gfx::Vector2dF"* %323 to <2 x float>*
  store <2 x float> %322, <2 x float>* %324, align 4
  %325 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %326 = bitcast %"class.cc::CompositorDelegateForInput"* %325 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %327 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %326, align 8
  %328 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %327, i64 22
  %329 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %328, align 8
  %330 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %329(%"class.cc::CompositorDelegateForInput"* %325) #19
  %331 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %330, i64 0, i32 35, i32 0, i32 0, i32 0
  %332 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %331, align 8
  %333 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %332, i64 0, i32 13
  %334 = load float, float* %333, align 8
  %335 = call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %332) #19
  %336 = call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %332) #19
  br i1 %336, label %337, label %341

337:                                              ; preds = %321
  %338 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 3, i32 0
  %339 = load float, float* %338, align 4
  %340 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 2, i32 0
  br label %354

341:                                              ; preds = %321
  %342 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 6
  %343 = load i8, i8* %342, align 4, !range !2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %345, label %351

345:                                              ; preds = %341
  %346 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 5, i32 0
  %347 = load float, float* %346, align 4
  %348 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 3, i32 0
  %349 = load float, float* %348, align 4
  %350 = fdiv float %349, %347
  br label %351

351:                                              ; preds = %345, %341
  %352 = phi float [ %350, %345 ], [ 1.000000e+00, %341 ]
  %353 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %335, i64 0, i32 1, i32 0
  br label %354

354:                                              ; preds = %337, %351
  %355 = phi float* [ %340, %337 ], [ %353, %351 ]
  %356 = phi float [ %339, %337 ], [ %352, %351 ]
  %357 = load float, float* %355, align 4
  %358 = fmul float %356, %357
  %359 = fmul float %334, %358
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* %323, float %359, float %359) #19
  %360 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %361 = bitcast %"class.cc::CompositorDelegateForInput"* %360 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %362 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %361, align 8
  %363 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %362, i64 22
  %364 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %363, align 8
  %365 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %364(%"class.cc::CompositorDelegateForInput"* %360) #19
  %366 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %365, i64 0, i32 58, i32 0, i32 0, i32 0
  %367 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %366, align 8
  %368 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %369 = bitcast %"class.cc::CompositorDelegateForInput"* %368 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %370 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %369, align 8
  %371 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %370, i64 22
  %372 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %371, align 8
  %373 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %372(%"class.cc::CompositorDelegateForInput"* %368) #19
  %374 = bitcast %"class.cc::LayerTreeHostImpl"* %373 to %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)***
  %375 = load %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)**, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*** %374, align 8
  %376 = getelementptr inbounds %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)** %375, i64 102
  %377 = load %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)** %376, align 8
  %378 = call dereferenceable(64) %"struct.viz::BeginFrameArgs"* %377(%"class.cc::LayerTreeHostImpl"* %373) #19
  %379 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %378, i64 0, i32 0, i32 0, i32 0
  %380 = load i64, i64* %379, align 8
  %381 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %382 = bitcast %"class.cc::CompositorDelegateForInput"* %381 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %383 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %382, align 8
  %384 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %383, i64 3
  %385 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %384, align 8
  %386 = call dereferenceable(120) %"class.cc::ScrollTree"* %385(%"class.cc::CompositorDelegateForInput"* %381) #19
  %387 = bitcast %"class.cc::MutatorHost"* %367 to void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)***
  %388 = load void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)**, void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)*** %387, align 8
  %389 = getelementptr inbounds void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)*, void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)** %388, i64 15
  %390 = load void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)*, void (%"class.cc::MutatorHost"*, i64, %"class.cc::ScrollTree"*)** %389, align 8
  call void %390(%"class.cc::MutatorHost"* %367, i64 %380, %"class.cc::ScrollTree"* dereferenceable(120) %386) #19
  %391 = getelementptr inbounds %"struct.cc::InputHandlerScrollResult", %"struct.cc::InputHandlerScrollResult"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %391, i8* nonnull align 4 %244, i64 36, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %244) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %183) #19
  br label %392

392:                                              ; preds = %354, %40
  %393 = icmp eq i8* %28, null
  br i1 %393, label %398, label %394

394:                                              ; preds = %392
  %395 = load i8, i8* %28, align 1
  %396 = icmp eq i8 %395, 0
  br i1 %396, label %398, label %397

397:                                              ; preds = %394
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %28, i8* %29, i64 %30) #19
  br label %398

398:                                              ; preds = %392, %394, %397
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIddEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, double* dereferenceable(8), i8*, double* dereferenceable(8)) local_unnamed_addr #8 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #19
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247438846, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = bitcast double* %8 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = bitcast double* %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1, i32 0
  store i64 %26, i64* %27, align 8
  %28 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #19
  %29 = load i8, i8* %18, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %65, label %31

31:                                               ; preds = %11, %60
  %32 = phi i64 [ %61, %60 ], [ 0, %11 ]
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %32
  %34 = load i8, i8* %33, align 1
  %35 = icmp eq i8 %34, 8
  br i1 %35, label %36, label %47

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %38 = bitcast %"union.base::trace_event::TraceValue"* %37 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %39 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %38, align 8
  %40 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %39, null
  br i1 %40, label %60, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %39 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %43 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %43, i64 1
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, align 8
  call void %45(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %39) #19
  %46 = load i8, i8* %33, align 1
  br label %47

47:                                               ; preds = %41, %31
  %48 = phi i8 [ %34, %31 ], [ %46, %41 ]
  %49 = icmp eq i8 %48, 9
  br i1 %49, label %50, label %60

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %32
  %52 = bitcast %"union.base::trace_event::TraceValue"* %51 to %"class.protozero::HeapBuffered"**
  %53 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %52, align 8
  %54 = icmp eq %"class.protozero::HeapBuffered"* %53, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %56) #19
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %57) #19
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %53, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %58) #19
  %59 = bitcast %"class.protozero::HeapBuffered"* %53 to i8*
  call void @_ZdlPv(i8* %59) #18
  br label %60

60:                                               ; preds = %55, %50, %47, %36
  %61 = add nuw nsw i64 %32, 1
  %62 = load i8, i8* %18, align 8
  %63 = zext i8 %62 to i64
  %64 = icmp ult i64 %61, %63
  br i1 %64, label %31, label %65

65:                                               ; preds = %60, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler33AdjustScrollDeltaForScrollbarSnapEPNS_11ScrollStateE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::ScrollState"* nocapture) local_unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::ScrollOffset"*
  %5 = alloca %"struct.cc::TargetSnapAreaElementIds", align 8
  %6 = alloca %"struct.cc::ElementId", align 8
  %7 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %8 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %7, align 8
  %9 = bitcast %"class.cc::CompositorDelegateForInput"* %8 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %10, i64 3
  %12 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %11, align 8
  %13 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %12(%"class.cc::CompositorDelegateForInput"* %8) #19
  %14 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %13) #19
  %15 = icmp eq %"struct.cc::ScrollNode"* %14, null
  br i1 %15, label %77, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %14, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 8, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %77, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %14, i64 0, i32 5
  %22 = load i8, i8* %21, align 4
  %23 = and i8 %22, 8
  %24 = icmp eq i8 %23, 0
  %25 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %7, align 8
  br i1 %24, label %35, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.cc::CompositorDelegateForInput"* %25 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %28, i64 22
  %30 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %29, align 8
  %31 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %30(%"class.cc::CompositorDelegateForInput"* %25) #19
  %32 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %31, i64 0, i32 74, i32 0, i32 0, i32 0
  %33 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %32, align 8
  %34 = tail call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %33) #19
  br label %44

35:                                               ; preds = %20
  %36 = bitcast %"class.cc::CompositorDelegateForInput"* %25 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %37 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %36, align 8
  %38 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %37, i64 3
  %39 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %38, align 8
  %40 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %39(%"class.cc::CompositorDelegateForInput"* %25) #19
  %41 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %14, i64 0, i32 8, i32 0
  %42 = load i64, i64* %41, align 8
  %43 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %40, i64 %42) #19
  br label %44

44:                                               ; preds = %26, %35
  %45 = phi <2 x float> [ %34, %26 ], [ %43, %35 ]
  %46 = load i8, i8* %17, align 8, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %44
  tail call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #20
  unreachable

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %14, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = bitcast %"class.cc::ScrollState"* %1 to <2 x double>*
  %52 = load <2 x double>, <2 x double>* %51, align 8
  %53 = fptrunc <2 x double> %52 to <2 x float>
  %54 = tail call %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy18CreateForDirectionEN3gfx12ScrollOffsetES2_bNS_20SnapStopAlwaysFilterE(<2 x float> %45, <2 x float> %53, i1 zeroext true, i32 0) #19
  %55 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  %56 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  %57 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 1
  store float 0.000000e+00, float* %56, align 8
  store float 0.000000e+00, float* %57, align 4
  %58 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #19
  %59 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %5, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %5, i64 0, i32 1, i32 0
  %61 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %61, i64* %59, align 8
  store i64 %61, i64* %60, align 8
  %62 = bitcast %"struct.cc::ElementId"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #19
  %63 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %6, i64 0, i32 0
  store i64 %61, i64* %63, align 8
  %64 = call zeroext i1 @_ZNK2cc17SnapContainerData16FindSnapPositionERKNS_21SnapSelectionStrategyEPN3gfx12ScrollOffsetEPNS_24TargetSnapAreaElementIdsERKNS_9ElementIdE(%"class.cc::SnapContainerData"* %50, %"class.cc::SnapSelectionStrategy"* dereferenceable(16) %54, %"class.gfx::ScrollOffset"* nonnull %4, %"struct.cc::TargetSnapAreaElementIds"* nonnull %5, %"struct.cc::ElementId"* nonnull dereferenceable(8) %6) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #19
  br i1 %64, label %65, label %70

65:                                               ; preds = %49
  %66 = load <2 x float>, <2 x float>* %3, align 8
  %67 = fsub <2 x float> %66, %45
  %68 = fpext <2 x float> %67 to <2 x double>
  %69 = bitcast %"class.cc::ScrollState"* %1 to <2 x double>*
  store <2 x double> %68, <2 x double>* %69, align 8
  br label %70

70:                                               ; preds = %49, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  %71 = icmp eq %"class.cc::SnapSelectionStrategy"* %54, null
  br i1 %71, label %77, label %72

72:                                               ; preds = %70
  %73 = bitcast %"class.cc::SnapSelectionStrategy"* %54 to void (%"class.cc::SnapSelectionStrategy"*)***
  %74 = load void (%"class.cc::SnapSelectionStrategy"*)**, void (%"class.cc::SnapSelectionStrategy"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %74, i64 1
  %76 = load void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %75, align 8
  call void %76(%"class.cc::SnapSelectionStrategy"* nonnull %54) #19
  br label %77

77:                                               ; preds = %16, %72, %70, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc20ThreadedInputHandler32ResolveScrollGranularityToPixelsERKNS_10ScrollNodeERKN3gfx9Vector2dFEN2ui17ScrollGranularityE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), i8 zeroext) local_unnamed_addr #5 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Vector2dF"*
  %7 = alloca %"class.gfx::SizeF", align 4
  %8 = alloca %"class.gfx::SizeF", align 4
  %9 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %10 = load i64, i64* %9, align 4
  store i64 %10, i64* %5, align 8
  switch i8 %3, label %11 [
    i8 3, label %13
    i8 5, label %14
  ]

11:                                               ; preds = %4
  %12 = bitcast i64 %10 to <2 x float>
  br label %74

13:                                               ; preds = %4
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %6, float 8.750000e-01, float 8.750000e-01) #19
  br label %14

14:                                               ; preds = %4, %13
  %15 = bitcast %"class.gfx::SizeF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %7, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %7, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 3, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp sgt i32 %19, 0
  %23 = select i1 %22, i32 %19, i32 0
  %24 = sitofp i32 %23 to float
  store float %24, float* %16, align 4
  %25 = icmp sgt i32 %21, 0
  %26 = select i1 %25, i32 %21, i32 0
  %27 = sitofp i32 %26 to float
  store float %27, float* %17, align 4
  %28 = bitcast %"class.gfx::SizeF"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #19
  %29 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 0
  store float 0xFFFFFFFFE0000000, float* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::SizeF", %"class.gfx::SizeF"* %8, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %30, align 4
  %31 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %32 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %33 = bitcast %"class.cc::CompositorDelegateForInput"* %32 to i64 (%"class.cc::CompositorDelegateForInput"*)***
  %34 = load i64 (%"class.cc::CompositorDelegateForInput"*)**, i64 (%"class.cc::CompositorDelegateForInput"*)*** %33, align 8
  %35 = getelementptr inbounds i64 (%"class.cc::CompositorDelegateForInput"*)*, i64 (%"class.cc::CompositorDelegateForInput"*)** %34, i64 20
  %36 = load i64 (%"class.cc::CompositorDelegateForInput"*)*, i64 (%"class.cc::CompositorDelegateForInput"*)** %35, align 8
  %37 = call i64 %36(%"class.cc::CompositorDelegateForInput"* %32) #19
  %38 = trunc i64 %37 to i32
  %39 = lshr i64 %37, 32
  %40 = trunc i64 %39 to i32
  %41 = icmp sgt i32 %38, 0
  %42 = select i1 %41, i32 %38, i32 0
  %43 = sitofp i32 %42 to float
  store float %43, float* %29, align 4
  %44 = icmp sgt i32 %40, 0
  %45 = select i1 %44, i32 %40, i32 0
  %46 = sitofp i32 %45 to float
  store float %46, float* %30, align 4
  %47 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %48 = bitcast %"class.cc::CompositorDelegateForInput"* %47 to float (%"class.cc::CompositorDelegateForInput"*)***
  %49 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %48, align 8
  %50 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %49, i64 19
  %51 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %50, align 8
  %52 = call float %51(%"class.cc::CompositorDelegateForInput"* %47) #19
  %53 = fmul float %52, %24
  %54 = fmul float %52, %27
  %55 = fcmp ogt float %53, 0x3EB0000000000000
  %56 = select i1 %55, float %53, float 0.000000e+00
  store float %56, float* %16, align 4
  %57 = fcmp ogt float %54, 0x3EB0000000000000
  %58 = select i1 %57, float %54, float 0.000000e+00
  store float %58, float* %17, align 4
  %59 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %60 = bitcast %"class.cc::CompositorDelegateForInput"* %59 to float (%"class.cc::CompositorDelegateForInput"*)***
  %61 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %60, align 8
  %62 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %61, i64 18
  %63 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %62, align 8
  %64 = call float %63(%"class.cc::CompositorDelegateForInput"* %59) #19
  %65 = fdiv float 1.000000e+00, %64
  %66 = fmul float %65, %43
  %67 = fmul float %65, %46
  %68 = fcmp ogt float %66, 0x3EB0000000000000
  %69 = select i1 %68, float %66, float 0.000000e+00
  store float %69, float* %29, align 4
  %70 = fcmp ogt float %67, 0x3EB0000000000000
  %71 = select i1 %70, float %67, float 0.000000e+00
  store float %71, float* %30, align 4
  %72 = call <2 x float> @_ZN2cc11ScrollUtils31ResolveScrollPercentageToPixelsERKN3gfx9Vector2dFERKNS1_5SizeFES7_(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %6, %"class.gfx::SizeF"* nonnull dereferenceable(8) %7, %"class.gfx::SizeF"* nonnull dereferenceable(8) %8) #19
  %73 = bitcast i64* %5 to <2 x float>*
  store <2 x float> %72, <2 x float>* %73, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  br label %74

74:                                               ; preds = %11, %14
  %75 = phi <2 x float> [ %12, %11 ], [ %72, %14 ]
  ret <2 x float> %75
}

declare float @_ZNK2cc28BrowserControlsOffsetManager17ControlsTopOffsetEv(%"class.cc::BrowserControlsOffsetManager"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler21ScrollLatchedScrollerEPNS_11ScrollStateEN4base9TimeDeltaE(%"class.cc::ThreadedInputHandler"* nocapture, %"class.cc::ScrollState"*, i64) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = alloca i64, align 8
  %8 = alloca <2 x float>, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.gfx::PointF", align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Vector2dF"*
  %13 = alloca float, align 4
  %14 = alloca float, align 4
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %"class.gfx::Vector2dF"*
  %17 = alloca %"class.gfx::Point", align 4
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 3
  %23 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %24) #19
  %26 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #19
  %27 = bitcast i64* %11 to float*
  %28 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %12, i64 0, i32 1
  %29 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 0
  %30 = load double, double* %29, align 8
  %31 = fptrunc double %30 to float
  %32 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 1
  %33 = load double, double* %32, align 8
  %34 = fptrunc double %33 to float
  store float %31, float* %27, align 8
  store float %34, float* %28, align 4
  %35 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %36 = and i8 %35, 25
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38, !prof !6

38:                                               ; preds = %3
  %39 = bitcast float* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #19
  store float %31, float* %13, align 4
  %40 = bitcast float* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #19
  store float %34, float* %14, align 4
  %41 = call i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), float* nonnull dereferenceable(4) %13, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), float* nonnull dereferenceable(4) %14)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #19
  br label %42

42:                                               ; preds = %3, %38
  %43 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32, i64 0, i64 0), %38 ]
  %44 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %38 ]
  %45 = phi i64 [ -6148914691236517206, %3 ], [ %41, %38 ]
  %46 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #19
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %15, i64 0, i64 0
  %48 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %16, i64 0, i32 1
  store float 0.000000e+00, float* %47, align 8
  store float 0.000000e+00, float* %48, align 4
  %49 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %50 = bitcast %"class.cc::CompositorDelegateForInput"* %49 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %51 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %51, i64 21
  %53 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %52, align 8
  %54 = call dereferenceable(296) %"class.cc::LayerTreeSettings"* %53(%"class.cc::CompositorDelegateForInput"* %49) #19
  %55 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %54, i64 0, i32 66
  %56 = load i8, i8* %55, align 2, !range !2
  %57 = icmp ne i8 %56, 0
  %58 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %59 = load i8, i8* %58, align 1
  %60 = icmp ne i8 %59, 0
  %61 = and i1 %57, %60
  br i1 %61, label %62, label %177

62:                                               ; preds = %42
  %63 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %64 = bitcast %"class.cc::CompositorDelegateForInput"* %63 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %65 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %65, i64 22
  %67 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %66, align 8
  %68 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %67(%"class.cc::CompositorDelegateForInput"* %63) #19
  %69 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %68, i64 0, i32 58, i32 0, i32 0, i32 0
  %70 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %69, align 8
  %71 = bitcast %"class.cc::MutatorHost"* %70 to i64 (%"class.cc::MutatorHost"*)***
  %72 = load i64 (%"class.cc::MutatorHost"*)**, i64 (%"class.cc::MutatorHost"*)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.cc::MutatorHost"*)*, i64 (%"class.cc::MutatorHost"*)** %72, i64 40
  %74 = load i64 (%"class.cc::MutatorHost"*)*, i64 (%"class.cc::MutatorHost"*)** %73, align 8
  %75 = call i64 %74(%"class.cc::MutatorHost"* %70) #19
  %76 = icmp eq i64 %75, 0
  %77 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %78 = and i8 %77, 25
  %79 = icmp eq i8 %78, 0
  br i1 %76, label %109, label %80

80:                                               ; preds = %62
  br i1 %79, label %87, label %81, !prof !6

81:                                               ; preds = %80
  %82 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %83 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #19
  %84 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  %85 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %85, i64* %84, align 8
  %86 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.34, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %82, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %83) #19
  br label %87

87:                                               ; preds = %80, %81
  %88 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %89 = bitcast %"class.cc::CompositorDelegateForInput"* %88 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %90 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %90, i64 3
  %92 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %91, align 8
  %93 = call dereferenceable(120) %"class.cc::ScrollTree"* %92(%"class.cc::CompositorDelegateForInput"* %88) #19
  %94 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %93, i64 %75) #19
  %95 = call zeroext i1 @_ZN2cc20ThreadedInputHandler27ScrollAnimationUpdateTargetERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %94, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, i64 %2)
  br i1 %95, label %96, label %99

96:                                               ; preds = %87
  %97 = bitcast <2 x float>* %15 to i64*
  %98 = load i64, i64* %11, align 8
  store i64 %98, i64* %97, align 8
  br label %173

99:                                               ; preds = %87
  %100 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %101 = and i8 %100, 25
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %173, label %103, !prof !6

103:                                              ; preds = %99
  %104 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %105 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #19
  %106 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %107 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %107, i64* %106, align 8
  %108 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.35, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %104, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #19
  br label %173

109:                                              ; preds = %62
  br i1 %79, label %116, label %110, !prof !6

110:                                              ; preds = %109
  %111 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %112 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #19
  %113 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %114 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %114, i64* %113, align 8
  %115 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %111, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #19
  br label %116

116:                                              ; preds = %109, %110
  %117 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 5
  %118 = load i8, i8* %117, align 4
  %119 = and i8 %118, 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %116
  %122 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %123 = bitcast %"class.cc::CompositorDelegateForInput"* %122 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %124 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %123, align 8
  %125 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %124, i64 22
  %126 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %125, align 8
  %127 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %126(%"class.cc::CompositorDelegateForInput"* %122) #19
  %128 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %127, i64 0, i32 74, i32 0, i32 0, i32 0
  %129 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %128, align 8
  %130 = call <2 x float> @_ZN2cc8Viewport14ScrollAnimatedERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::Viewport"* %129, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, i64 %2) #19
  store <2 x float> %130, <2 x float>* %15, align 8
  br label %173

131:                                              ; preds = %116
  %132 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %133 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %134 = bitcast %"class.cc::CompositorDelegateForInput"* %133 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %135 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %134, align 8
  %136 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %135, i64 3
  %137 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %136, align 8
  %138 = call dereferenceable(120) %"class.cc::ScrollTree"* %137(%"class.cc::CompositorDelegateForInput"* %133) #19
  %139 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %140 = bitcast %"class.cc::CompositorDelegateForInput"* %139 to float (%"class.cc::CompositorDelegateForInput"*)***
  %141 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %140, align 8
  %142 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %141, i64 19
  %143 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %142, align 8
  %144 = call float %143(%"class.cc::CompositorDelegateForInput"* %139) #19
  %145 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #19
  %146 = load i64, i64* %11, align 8
  store i64 %146, i64* %7, align 8
  %147 = fdiv float 1.000000e+00, %144
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %132, float %147, float %147) #19
  %148 = bitcast i64* %7 to <2 x float>*
  %149 = load <2 x float>, <2 x float>* %148, align 8
  %150 = load i8, i8* %117, align 4
  %151 = and i8 %150, 64
  %152 = icmp eq i8 %151, 0
  %153 = insertelement <2 x float> %149, float 0.000000e+00, i32 0
  %154 = select i1 %152, <2 x float> %153, <2 x float> %149
  %155 = icmp sgt i8 %150, -1
  %156 = insertelement <2 x float> %154, float 0.000000e+00, i32 1
  %157 = select i1 %155, <2 x float> %156, <2 x float> %154
  store <2 x float> %157, <2 x float>* %148, align 8
  %158 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 8, i32 0
  %159 = load i64, i64* %158, align 8
  %160 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %138, i64 %159) #19
  %161 = bitcast i64* %7 to <2 x float>*
  %162 = load <2 x float>, <2 x float>* %161, align 8
  %163 = fadd <2 x float> %162, %160
  %164 = call <2 x float> @_ZNK2cc10ScrollTree25ClampScrollOffsetToLimitsEN3gfx12ScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ScrollTree"* %138, <2 x float> %163, %"struct.cc::ScrollNode"* dereferenceable(168) %25) #19
  %165 = fsub <2 x float> %164, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #19
  store <2 x float> %165, <2 x float>* %15, align 8
  %166 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %167 = bitcast %"class.cc::CompositorDelegateForInput"* %166 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %168 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %167, align 8
  %169 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %168, i64 22
  %170 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %169, align 8
  %171 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %170(%"class.cc::CompositorDelegateForInput"* %166) #19
  %172 = call zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"* %171, %"struct.cc::ScrollNode"* dereferenceable(168) %25, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16, i64 %2) #19
  br label %173

173:                                              ; preds = %96, %99, %103, %121, %131
  %174 = bitcast i64* %11 to <2 x float>*
  %175 = load <2 x float>, <2 x float>* %174, align 8
  %176 = load float, float* %47, align 8
  br label %270

177:                                              ; preds = %42
  %178 = bitcast %"class.gfx::Point"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #19
  %179 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %17, i64 0, i32 0
  %180 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %17, i64 0, i32 1
  %181 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 4
  %182 = load i32, i32* %181, align 8
  %183 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 5
  %184 = load i32, i32* %183, align 4
  store i32 %182, i32* %179, align 4
  store i32 %184, i32* %180, align 4
  %185 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %186 = bitcast %"class.cc::CompositorDelegateForInput"* %185 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %187 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %186, align 8
  %188 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %187, i64 22
  %189 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %188, align 8
  %190 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %189(%"class.cc::CompositorDelegateForInput"* %185) #19
  %191 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %190, i64 0, i32 74, i32 0, i32 0, i32 0
  %192 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %191, align 8
  %193 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %192, %"struct.cc::ScrollNode"* dereferenceable(168) %25) #19
  br i1 %193, label %194, label %222

194:                                              ; preds = %177
  %195 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %196 = bitcast %"class.cc::CompositorDelegateForInput"* %195 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %197 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %196, align 8
  %198 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %197, i64 22
  %199 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %198, align 8
  %200 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %199(%"class.cc::CompositorDelegateForInput"* %195) #19
  %201 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %200, i64 0, i32 74, i32 0, i32 0, i32 0
  %202 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %201, align 8
  %203 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 13
  %204 = load i8, i8* %203, align 1, !range !2
  %205 = icmp ne i8 %204, 0
  %206 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %207 = load i8, i8* %206, align 4, !range !2
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %194
  %210 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %211 = load i32, i32* %210, align 4
  %212 = icmp ne i32 %211, 1
  br label %213

213:                                              ; preds = %194, %209
  %214 = phi i1 [ %212, %209 ], [ true, %194 ]
  %215 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 5
  %216 = load i8, i8* %215, align 4
  %217 = and i8 %216, 8
  %218 = icmp ne i8 %217, 0
  %219 = call { <2 x float>, <2 x float> } @_ZN2cc8Viewport8ScrollByERKN3gfx9Vector2dFERKNS1_5PointEbbb(%"class.cc::Viewport"* %202, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, %"class.gfx::Point"* nonnull dereferenceable(8) %17, i1 zeroext %205, i1 zeroext %214, i1 zeroext %218) #19
  %220 = extractvalue { <2 x float>, <2 x float> } %219, 0
  %221 = extractvalue { <2 x float>, <2 x float> } %219, 1
  br label %266

222:                                              ; preds = %177
  %223 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 13
  %224 = load i8, i8* %223, align 1, !range !2
  %225 = icmp eq i8 %224, 0
  %226 = bitcast i64* %9 to %"class.gfx::Vector2dF"*
  %227 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #19
  %228 = bitcast i64* %11 to <2 x float>*
  %229 = load <2 x float>, <2 x float>* %228, align 8
  %230 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 5
  %231 = load i8, i8* %230, align 4
  %232 = and i8 %231, 64
  %233 = icmp eq i8 %232, 0
  %234 = insertelement <2 x float> %229, float 0.000000e+00, i32 0
  %235 = select i1 %233, <2 x float> %234, <2 x float> %229
  %236 = icmp sgt i8 %231, -1
  %237 = insertelement <2 x float> %235, float 0.000000e+00, i32 1
  %238 = select i1 %236, <2 x float> %237, <2 x float> %235
  store <2 x float> %238, <2 x float>* %8, align 8
  br i1 %225, label %261, label %239

239:                                              ; preds = %222
  %240 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %240) #19
  %241 = bitcast i64* %9 to <2 x float>*
  store <2 x float> %238, <2 x float>* %241, align 8
  %242 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %243 = bitcast %"class.cc::CompositorDelegateForInput"* %242 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %244 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %243, align 8
  %245 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %244, i64 22
  %246 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %245, align 8
  %247 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %246(%"class.cc::CompositorDelegateForInput"* %242) #19
  %248 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %247, i64 0, i32 35, i32 0, i32 0, i32 0
  %249 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %248, align 8
  %250 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %249, i64 0, i32 13
  %251 = load float, float* %250, align 8
  %252 = fdiv float 1.000000e+00, %251
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %226, float %252, float %252) #19
  %253 = bitcast %"class.gfx::PointF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %253) #19
  %254 = load i32, i32* %179, align 4
  %255 = sitofp i32 %254 to float
  %256 = load i32, i32* %180, align 4
  %257 = sitofp i32 %256 to float
  %258 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %10, i64 0, i32 0
  store float %255, float* %258, align 4
  %259 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %10, i64 0, i32 1
  store float %257, float* %259, align 4
  %260 = call <2 x float> @_ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %25, %"class.gfx::PointF"* nonnull dereferenceable(8) %10, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %226) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %253) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %240) #19
  br label %264

261:                                              ; preds = %222
  %262 = bitcast <2 x float>* %8 to %"class.gfx::Vector2dF"*
  %263 = call <2 x float> @_ZNK2cc20ThreadedInputHandler24ScrollNodeWithLocalDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %25, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %262) #19
  br label %264

264:                                              ; preds = %239, %261
  %265 = phi <2 x float> [ %260, %239 ], [ %263, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %227) #19
  br label %266

266:                                              ; preds = %264, %213
  %267 = phi <2 x float> [ %265, %264 ], [ %220, %213 ]
  %268 = phi <2 x float> [ zeroinitializer, %264 ], [ %221, %213 ]
  store <2 x float> %267, <2 x float>* %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #19
  %269 = extractelement <2 x float> %267, i32 0
  br label %270

270:                                              ; preds = %266, %173
  %271 = phi float [ %176, %173 ], [ %269, %266 ]
  %272 = phi <2 x float> [ %175, %173 ], [ %268, %266 ]
  %273 = call float @llvm.fabs.f32(float %271) #19
  %274 = fcmp ogt float %273, 0x3FB99999A0000000
  br i1 %274, label %284, label %275

275:                                              ; preds = %270
  %276 = load float, float* %48, align 4
  %277 = call float @llvm.fabs.f32(float %276) #19
  %278 = fcmp ogt float %277, 0x3FB99999A0000000
  br i1 %278, label %284, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %25, i64 0, i32 5
  %281 = load i8, i8* %280, align 4
  %282 = and i8 %281, 8
  %283 = icmp eq i8 %282, 0
  br i1 %283, label %341, label %336

284:                                              ; preds = %270, %275
  %285 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %286 = bitcast %"class.cc::CompositorDelegateForInput"* %285 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %287 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %286, align 8
  %288 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %287, i64 22
  %289 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %288, align 8
  %290 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %289(%"class.cc::CompositorDelegateForInput"* %285) #19
  %291 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %290, i64 0, i32 74, i32 0, i32 0, i32 0
  %292 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %291, align 8
  %293 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %292, %"struct.cc::ScrollNode"* dereferenceable(168) %25) #19
  br i1 %293, label %294, label %297

294:                                              ; preds = %284
  %295 = load float, float* %47, align 8
  %296 = load float, float* %48, align 4
  br label %318

297:                                              ; preds = %284
  %298 = call float @_ZN2cc8MathUtil27SmallestAngleBetweenVectorsERKN3gfx9Vector2dFES4_(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12) #19
  %299 = fcmp olt float %298, 4.500000e+01
  br i1 %299, label %300, label %308

300:                                              ; preds = %297
  %301 = bitcast <2 x float>* %15 to i64*
  %302 = load i64, i64* %11, align 8
  store i64 %302, i64* %301, align 8
  %303 = bitcast i64 %302 to <2 x float>
  %304 = trunc i64 %302 to i32
  %305 = lshr i64 %302, 32
  %306 = trunc i64 %305 to i32
  %307 = bitcast i32 %306 to float
  br label %313

308:                                              ; preds = %297
  %309 = call <2 x float> @_ZN2cc8MathUtil13ProjectVectorERKN3gfx9Vector2dFES4_(%"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %16) #19
  store <2 x float> %309, <2 x float>* %15, align 8
  %310 = bitcast <2 x float> %309 to <2 x i32>
  %311 = extractelement <2 x i32> %310, i32 0
  %312 = extractelement <2 x float> %309, i32 1
  br label %313

313:                                              ; preds = %308, %300
  %314 = phi float [ %312, %308 ], [ %307, %300 ]
  %315 = phi i32 [ %311, %308 ], [ %304, %300 ]
  %316 = phi <2 x float> [ %309, %308 ], [ %303, %300 ]
  %317 = bitcast i32 %315 to float
  br label %318

318:                                              ; preds = %294, %313
  %319 = phi float [ %296, %294 ], [ %314, %313 ]
  %320 = phi float [ %295, %294 ], [ %317, %313 ]
  %321 = phi <2 x float> [ %272, %294 ], [ %316, %313 ]
  %322 = extractelement <2 x float> %321, i32 0
  %323 = call float @llvm.fabs.f32(float %322) #19
  %324 = fcmp ogt float %323, 0x3FB99999A0000000
  %325 = extractelement <2 x float> %321, i32 1
  %326 = call float @llvm.fabs.f32(float %325) #19
  %327 = fcmp ogt float %326, 0x3FB99999A0000000
  %328 = zext i1 %324 to i8
  %329 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 16
  %330 = load i8, i8* %329, align 8, !range !2
  %331 = or i8 %330, %328
  store i8 %331, i8* %329, align 8
  %332 = zext i1 %327 to i8
  %333 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 17
  %334 = load i8, i8* %333, align 1, !range !2
  %335 = or i8 %334, %332
  store i8 %335, i8* %333, align 1
  br label %336

336:                                              ; preds = %279, %318
  %337 = phi float [ %320, %318 ], [ %271, %279 ]
  %338 = phi float [ %319, %318 ], [ %276, %279 ]
  %339 = fpext float %337 to double
  %340 = fpext float %338 to double
  call void @_ZN2cc11ScrollState12ConsumeDeltaEdd(%"class.cc::ScrollState"* %1, double %339, double %340) #19
  br label %341

341:                                              ; preds = %336, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #19
  %342 = icmp eq i8* %44, null
  br i1 %342, label %347, label %343

343:                                              ; preds = %341
  %344 = load i8, i8* %44, align 1
  %345 = icmp eq i8 %344, 0
  br i1 %345, label %347, label %346

346:                                              ; preds = %343
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %44, i8* %43, i64 %45) #19
  br label %347

347:                                              ; preds = %341, %343, %346
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler19ShouldAnimateScrollERKNS_11ScrollStateE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::ScrollState"* nocapture readonly dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 21
  %8 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %9, i64 0, i32 66
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp ne i8 %11, 0
  %13 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %14 = load i8, i8* %13, align 1
  %15 = icmp ne i8 %14, 0
  %16 = and i1 %12, %15
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler14SetNeedsCommitEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to void (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %5, i64 5
  %7 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  tail call void %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc20ThreadedInputHandler23InnerViewportScrollNodeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %8, i64 0, i32 35, i32 0, i32 0, i32 0
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %9, align 8
  %11 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %10) #19
  ret %"struct.cc::ScrollNode"* %11
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK2cc20ThreadedInputHandler19UserScrollableDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* nocapture readnone, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #9 align 2 {
  %4 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %5 = load <2 x float>, <2 x float>* %4, align 4
  %6 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %7 = load i8, i8* %6, align 4
  %8 = and i8 %7, 64
  %9 = icmp eq i8 %8, 0
  %10 = insertelement <2 x float> %5, float 0.000000e+00, i32 0
  %11 = select i1 %9, <2 x float> %10, <2 x float> %5
  %12 = icmp sgt i8 %7, -1
  %13 = insertelement <2 x float> %11, float 0.000000e+00, i32 1
  %14 = select i1 %12, <2 x float> %13, <2 x float> %11
  ret <2 x float> %14
}

declare zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = alloca <2 x float>, align 8
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %6 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %5, align 8
  %7 = icmp eq %"class.cc::InputHandlerClient"* %6, null
  br i1 %7, label %99, label %8

8:                                                ; preds = %1
  %9 = bitcast <2 x float>* %4 to %"class.gfx::SizeF"*
  %10 = bitcast <2 x float>* %3 to %"class.gfx::ScrollOffset"*
  %11 = bitcast <2 x float>* %2 to %"class.gfx::ScrollOffset"*
  %12 = bitcast <2 x float>* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #19
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %14 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %15 = bitcast %"class.cc::CompositorDelegateForInput"* %14 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %16 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %15, align 8
  %17 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %16, i64 22
  %18 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %17, align 8
  %19 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %18(%"class.cc::CompositorDelegateForInput"* %14) #19
  %20 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %19, i64 0, i32 35, i32 0, i32 0, i32 0
  %21 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %20, align 8
  %22 = tail call <2 x float> @_ZNK2cc13LayerTreeImpl17TotalScrollOffsetEv(%"class.cc::LayerTreeImpl"* %21) #19
  store <2 x float> %22, <2 x float>* %2, align 8
  %23 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  %24 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %25 = bitcast %"class.cc::CompositorDelegateForInput"* %24 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %26 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %26, i64 22
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %27, align 8
  %29 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %28(%"class.cc::CompositorDelegateForInput"* %24) #19
  %30 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %29, i64 0, i32 35, i32 0, i32 0, i32 0
  %31 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %30, align 8
  %32 = tail call <2 x float> @_ZNK2cc13LayerTreeImpl20TotalMaxScrollOffsetEv(%"class.cc::LayerTreeImpl"* %31) #19
  store <2 x float> %32, <2 x float>* %3, align 8
  %33 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #19
  %34 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %35 = bitcast %"class.cc::CompositorDelegateForInput"* %34 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %36 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %36, i64 22
  %38 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %37, align 8
  %39 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %38(%"class.cc::CompositorDelegateForInput"* %34) #19
  %40 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %39, i64 0, i32 35, i32 0, i32 0, i32 0
  %41 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %40, align 8
  %42 = tail call <2 x float> @_ZNK2cc13LayerTreeImpl14ScrollableSizeEv(%"class.cc::LayerTreeImpl"* %41) #19
  store <2 x float> %42, <2 x float>* %4, align 8
  %43 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %44 = bitcast %"class.cc::CompositorDelegateForInput"* %43 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %45 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %45, i64 22
  %47 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %46, align 8
  %48 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %47(%"class.cc::CompositorDelegateForInput"* %43) #19
  %49 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %48, i64 0, i32 35, i32 0, i32 0, i32 0
  %50 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %49, align 8
  %51 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %50) #19
  %52 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %50) #19
  br i1 %52, label %53, label %57

53:                                               ; preds = %8
  %54 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 3, i32 0
  %55 = load float, float* %54, align 4
  %56 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 2, i32 0
  br label %70

57:                                               ; preds = %8
  %58 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 6
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 5, i32 0
  %63 = load float, float* %62, align 4
  %64 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 3, i32 0
  %65 = load float, float* %64, align 4
  %66 = fdiv float %65, %63
  br label %67

67:                                               ; preds = %61, %57
  %68 = phi float [ %66, %61 ], [ 1.000000e+00, %57 ]
  %69 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %51, i64 0, i32 1, i32 0
  br label %70

70:                                               ; preds = %53, %67
  %71 = phi float* [ %56, %53 ], [ %69, %67 ]
  %72 = phi float [ %55, %53 ], [ %68, %67 ]
  %73 = load float, float* %71, align 4
  %74 = fmul float %72, %73
  %75 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %76 = bitcast %"class.cc::CompositorDelegateForInput"* %75 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %77 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %77, i64 22
  %79 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %78, align 8
  %80 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %79(%"class.cc::CompositorDelegateForInput"* %75) #19
  %81 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %80, i64 0, i32 35, i32 0, i32 0, i32 0
  %82 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %81, align 8
  %83 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %82, i64 0, i32 11
  %84 = load float, float* %83, align 8
  %85 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %86 = bitcast %"class.cc::CompositorDelegateForInput"* %85 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %87 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %86, align 8
  %88 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %87, i64 22
  %89 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %88, align 8
  %90 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %89(%"class.cc::CompositorDelegateForInput"* %85) #19
  %91 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %90, i64 0, i32 35, i32 0, i32 0, i32 0
  %92 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %91, align 8
  %93 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %92, i64 0, i32 12
  %94 = load float, float* %93, align 4
  %95 = bitcast %"class.cc::InputHandlerClient"* %6 to void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)***
  %96 = load void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)**, void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)*, void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)** %96, i64 5
  %98 = load void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)*, void (%"class.cc::InputHandlerClient"*, %"class.gfx::ScrollOffset"*, %"class.gfx::ScrollOffset"*, %"class.gfx::SizeF"*, float, float, float)** %97, align 8
  call void %98(%"class.cc::InputHandlerClient"* nonnull %6, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %11, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %10, %"class.gfx::SizeF"* nonnull dereferenceable(8) %9, float %74, float %84, float %94) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #19
  br label %99

99:                                               ; preds = %1, %70
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc20ThreadedInputHandler21GetVisualScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 8
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %8 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %7, align 8
  br i1 %6, label %18, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.cc::CompositorDelegateForInput"* %8 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %11 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %11, i64 22
  %13 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %12, align 8
  %14 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %13(%"class.cc::CompositorDelegateForInput"* %8) #19
  %15 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %14, i64 0, i32 74, i32 0, i32 0, i32 0
  %16 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %15, align 8
  %17 = tail call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %16) #19
  br label %27

18:                                               ; preds = %2
  %19 = bitcast %"class.cc::CompositorDelegateForInput"* %8 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %20 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %19, align 8
  %21 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %20, i64 3
  %22 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %21, align 8
  %23 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %22(%"class.cc::CompositorDelegateForInput"* %8) #19
  %24 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %23, i64 %25) #19
  br label %27

27:                                               ; preds = %18, %9
  %28 = phi <2 x float> [ %17, %9 ], [ %26, %18 ]
  ret <2 x float> %28
}

declare %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy18CreateForDirectionEN3gfx12ScrollOffsetES2_bNS_20SnapStopAlwaysFilterE(<2 x float>, <2 x float>, i1 zeroext, i32) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc17SnapContainerData16FindSnapPositionERKNS_21SnapSelectionStrategyEPN3gfx12ScrollOffsetEPNS_24TargetSnapAreaElementIdsERKNS_9ElementIdE(%"class.cc::SnapContainerData"*, %"class.cc::SnapSelectionStrategy"* dereferenceable(16), %"class.gfx::ScrollOffset"*, %"struct.cc::TargetSnapAreaElementIds"*, %"struct.cc::ElementId"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler9ScrollEndEb(%"class.cc::ThreadedInputHandler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %3, align 8
  tail call void @_ZN2cc19ScrollbarController10ResetStateEv(%"class.cc::ScrollbarController"* %4) #19
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 3
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %11) #19
  %13 = icmp eq %"struct.cc::ScrollNode"* %12, null
  br i1 %13, label %52, label %14

14:                                               ; preds = %2
  %15 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %16 = bitcast %"class.cc::CompositorDelegateForInput"* %15 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %17 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %17, i64 22
  %19 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %18, align 8
  %20 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %19(%"class.cc::CompositorDelegateForInput"* %15) #19
  %21 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %20, i64 0, i32 58, i32 0, i32 0, i32 0
  %22 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %21, align 8
  %23 = bitcast %"class.cc::MutatorHost"* %22 to i64 (%"class.cc::MutatorHost"*)***
  %24 = load i64 (%"class.cc::MutatorHost"*)**, i64 (%"class.cc::MutatorHost"*)*** %23, align 8
  %25 = getelementptr inbounds i64 (%"class.cc::MutatorHost"*)*, i64 (%"class.cc::MutatorHost"*)** %24, i64 40
  %26 = load i64 (%"class.cc::MutatorHost"*)*, i64 (%"class.cc::MutatorHost"*)** %25, align 8
  %27 = tail call i64 %26(%"class.cc::MutatorHost"* %22) #19
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  store i8 1, i8* %30, align 8
  br label %52

31:                                               ; preds = %14
  br i1 %1, label %32, label %36

32:                                               ; preds = %31
  %33 = tail call zeroext i1 @_ZN2cc20ThreadedInputHandler15SnapAtScrollEndENS0_10SnapReasonE(%"class.cc::ThreadedInputHandler"* %0, i32 0)
  br i1 %33, label %34, label %36

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  store i8 1, i8* %35, align 8
  br label %52

36:                                               ; preds = %32, %31
  %37 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %38 = bitcast %"class.cc::CompositorDelegateForInput"* %37 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %39 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %39, i64 22
  %41 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %40, align 8
  %42 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %41(%"class.cc::CompositorDelegateForInput"* %37) #19
  %43 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %42, i64 0, i32 46, i32 0, i32 0, i32 0
  %44 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %43, align 8
  tail call void @_ZN2cc28BrowserControlsOffsetManager9ScrollEndEv(%"class.cc::BrowserControlsOffsetManager"* %44) #19
  tail call void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* %0)
  %45 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  store i8 0, i8* %45, align 8
  %46 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 17
  store i8 1, i8* %46, align 1
  %47 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %48 = bitcast %"class.cc::CompositorDelegateForInput"* %47 to void (%"class.cc::CompositorDelegateForInput"*)***
  %49 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %49, i64 5
  %51 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %50, align 8
  tail call void %51(%"class.cc::CompositorDelegateForInput"* %47) #19
  br label %52

52:                                               ; preds = %2, %36, %34, %29
  ret void
}

declare void @_ZN2cc19ScrollbarController10ResetStateEv(%"class.cc::ScrollbarController"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler15SnapAtScrollEndENS0_10SnapReasonE(%"class.cc::ThreadedInputHandler"*, i32) local_unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::ScrollOffset"*
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::ScrollOffset"*
  %7 = alloca %"struct.cc::TargetSnapAreaElementIds", align 8
  %8 = alloca %"struct.cc::ElementId", align 8
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %"class.gfx::Vector2dF"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Vector2dF"*
  %13 = alloca <2 x float>, align 8
  %14 = bitcast <2 x float>* %13 to %"class.gfx::Vector2dF"*
  %15 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %16 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %17 = bitcast %"class.cc::CompositorDelegateForInput"* %16 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %18 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %18, i64 3
  %20 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %19, align 8
  %21 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %20(%"class.cc::CompositorDelegateForInput"* %16) #19
  %22 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %21) #19
  %23 = icmp eq %"struct.cc::ScrollNode"* %22, null
  br i1 %23, label %238, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %238, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %30 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %31, align 8
  %32 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %32, align 4
  %33 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 5
  %34 = load i8, i8* %33, align 4
  %35 = and i8 %34, 8
  %36 = icmp eq i8 %35, 0
  %37 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  br i1 %36, label %47, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.cc::CompositorDelegateForInput"* %37 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %40 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %39, align 8
  %41 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %40, i64 22
  %42 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %41, align 8
  %43 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %42(%"class.cc::CompositorDelegateForInput"* %37) #19
  %44 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %43, i64 0, i32 74, i32 0, i32 0, i32 0
  %45 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %44, align 8
  %46 = tail call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %45) #19
  br label %56

47:                                               ; preds = %28
  %48 = bitcast %"class.cc::CompositorDelegateForInput"* %37 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %49 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %48, align 8
  %50 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %49, i64 3
  %51 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %50, align 8
  %52 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %51(%"class.cc::CompositorDelegateForInput"* %37) #19
  %53 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 8, i32 0
  %54 = load i64, i64* %53, align 8
  %55 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %52, i64 %54) #19
  br label %56

56:                                               ; preds = %38, %47
  %57 = phi <2 x float> [ %46, %38 ], [ %55, %47 ]
  store <2 x float> %57, <2 x float>* %3, align 8
  %58 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %63, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %70

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %65 = load i8, i8* %64, align 8, !range !2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68, !prof !7

67:                                               ; preds = %63
  tail call void @llvm.trap() #19
  unreachable

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi %"class.cc::ScrollState"* [ %62, %61 ], [ %69, %68 ]
  %72 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 4, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %81, label %79

79:                                               ; preds = %75, %70
  %80 = tail call <2 x float> @_ZNK2cc11ScrollState11DeltaOrHintEv(%"class.cc::ScrollState"* %71) #19
  br label %96

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %71, i64 0, i32 0, i32 15
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  %85 = tail call <2 x float> @_ZNK2cc11ScrollState11DeltaOrHintEv(%"class.cc::ScrollState"* %71) #19
  br i1 %84, label %96, label %86

86:                                               ; preds = %81
  %87 = extractelement <2 x float> %85, i32 0
  %88 = fcmp une float %87, 0.000000e+00
  %89 = extractelement <2 x float> %85, i32 1
  %90 = fcmp une float %89, 0.000000e+00
  %91 = or i1 %90, %88
  %92 = icmp eq i32 %1, 1
  %93 = and i1 %92, %91
  br i1 %93, label %94, label %96

94:                                               ; preds = %86
  %95 = tail call %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy18CreateForDirectionEN3gfx12ScrollOffsetES2_bNS_20SnapStopAlwaysFilterE(<2 x float> %57, <2 x float> %85, i1 zeroext true, i32 0) #19
  br label %104

96:                                               ; preds = %81, %79, %86
  %97 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 18
  %98 = load i8, i8* %97, align 2, !range !2
  %99 = icmp ne i8 %98, 0
  %100 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 19
  %101 = load i8, i8* %100, align 1, !range !2
  %102 = icmp ne i8 %101, 0
  %103 = call %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy20CreateForEndPositionERKN3gfx12ScrollOffsetEbbNS_25SnapTargetsPrioritizationE(%"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %4, i1 zeroext %99, i1 zeroext %102, i32 0) #19
  br label %104

104:                                              ; preds = %96, %94
  %105 = phi %"class.cc::SnapSelectionStrategy"* [ %95, %94 ], [ %103, %96 ]
  %106 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #19
  %107 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %108 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %6, i64 0, i32 1
  store float 0.000000e+00, float* %107, align 8
  store float 0.000000e+00, float* %108, align 4
  %109 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #19
  %110 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %7, i64 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %7, i64 0, i32 1, i32 0
  %112 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %112, i64* %110, align 8
  store i64 %112, i64* %111, align 8
  %113 = bitcast %"struct.cc::ElementId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #19
  %114 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 0, i32 0
  store i64 %112, i64* %114, align 8
  %115 = call zeroext i1 @_ZNK2cc17SnapContainerData16FindSnapPositionERKNS_21SnapSelectionStrategyEPN3gfx12ScrollOffsetEPNS_24TargetSnapAreaElementIdsERKNS_9ElementIdE(%"class.cc::SnapContainerData"* %29, %"class.cc::SnapSelectionStrategy"* dereferenceable(16) %105, %"class.gfx::ScrollOffset"* nonnull %6, %"struct.cc::TargetSnapAreaElementIds"* nonnull %7, %"struct.cc::ElementId"* nonnull dereferenceable(8) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #19
  br i1 %115, label %116, label %229

116:                                              ; preds = %104
  %117 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %118 = bitcast %"class.cc::CompositorDelegateForInput"* %117 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %119 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %118, align 8
  %120 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %119, i64 22
  %121 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %120, align 8
  %122 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %121(%"class.cc::CompositorDelegateForInput"* %117) #19
  %123 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %122, i64 0, i32 74, i32 0, i32 0, i32 0
  %124 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %123, align 8
  %125 = call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %124, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %22) #19
  br i1 %125, label %126, label %134

126:                                              ; preds = %116
  %127 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %128 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 8, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.cc::CompositorDelegateForInput"* %127 to void (%"class.cc::CompositorDelegateForInput"*, i64)***
  %131 = load void (%"class.cc::CompositorDelegateForInput"*, i64)**, void (%"class.cc::CompositorDelegateForInput"*, i64)*** %130, align 8
  %132 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, i64)*, void (%"class.cc::CompositorDelegateForInput"*, i64)** %131, i64 16
  %133 = load void (%"class.cc::CompositorDelegateForInput"*, i64)*, void (%"class.cc::CompositorDelegateForInput"*, i64)** %132, align 8
  call void %133(%"class.cc::CompositorDelegateForInput"* %127, i64 %129) #19
  br label %134

134:                                              ; preds = %126, %116
  %135 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %135) #19
  %136 = load <2 x float>, <2 x float>* %5, align 8
  %137 = load <2 x float>, <2 x float>* %3, align 8
  %138 = fsub <2 x float> %136, %137
  store <2 x float> %138, <2 x float>* %9, align 8
  %139 = load i8, i8* %33, align 4
  %140 = and i8 %139, 8
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %164, label %142

142:                                              ; preds = %134
  %143 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #19
  %144 = bitcast i64* %11 to <2 x float>*
  store <2 x float> %138, <2 x float>* %144, align 8
  %145 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %146 = bitcast %"class.cc::CompositorDelegateForInput"* %145 to float (%"class.cc::CompositorDelegateForInput"*)***
  %147 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %146, align 8
  %148 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %147, i64 19
  %149 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %148, align 8
  %150 = call float %149(%"class.cc::CompositorDelegateForInput"* %145) #19
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %12, float %150, float %150) #19
  %151 = bitcast <2 x float>* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #19
  %152 = getelementptr inbounds <2 x float>, <2 x float>* %13, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %152, align 8
  %153 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %14, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %153, align 4
  %154 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %155 = bitcast %"class.cc::CompositorDelegateForInput"* %154 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %156 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %155, align 8
  %157 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %156, i64 22
  %158 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %157, align 8
  %159 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %158(%"class.cc::CompositorDelegateForInput"* %154) #19
  %160 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %159, i64 0, i32 74, i32 0, i32 0, i32 0
  %161 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %160, align 8
  %162 = call <2 x float> @_ZN2cc8Viewport14ScrollAnimatedERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::Viewport"* %161, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %12, i64 0) #19
  store <2 x float> %162, <2 x float>* %13, align 8
  %163 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #19
  br i1 %163, label %175, label %172

164:                                              ; preds = %134
  %165 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %166 = bitcast %"class.cc::CompositorDelegateForInput"* %165 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %167 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %166, align 8
  %168 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %167, i64 22
  %169 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %168, align 8
  %170 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %169(%"class.cc::CompositorDelegateForInput"* %165) #19
  %171 = call zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"* %170, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %22, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %10, i64 0) #19
  br i1 %171, label %172, label %175

172:                                              ; preds = %142, %164
  %173 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11
  %174 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %109, i64 16, i1 false)
  br label %227

175:                                              ; preds = %142, %164
  %176 = load i64, i64* %110, align 8
  %177 = load i64, i64* %111, align 8
  %178 = call zeroext i1 @_ZN2cc17SnapContainerData27SetTargetSnapAreaElementIdsENS_24TargetSnapAreaElementIdsE(%"class.cc::SnapContainerData"* %29, i64 %176, i64 %177) #19
  br i1 %178, label %179, label %227

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12
  %181 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %22, i64 0, i32 8
  %182 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %180, i64 0, i32 0, i32 0, i32 0
  %183 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %182, align 8
  %184 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %185 = bitcast %"struct.cc::ElementId"** %184 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = ptrtoint %"struct.cc::ElementId"* %183 to i64
  %188 = sub i64 %186, %187
  %189 = icmp eq i64 %188, 0
  %190 = inttoptr i64 %186 to %"struct.cc::ElementId"*
  br i1 %189, label %209, label %191

191:                                              ; preds = %179
  %192 = ashr exact i64 %188, 3
  %193 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %181, i64 0, i32 0
  %194 = load i64, i64* %193, align 8
  br label %195

195:                                              ; preds = %195, %191
  %196 = phi %"struct.cc::ElementId"* [ %183, %191 ], [ %207, %195 ]
  %197 = phi i64 [ %192, %191 ], [ %206, %195 ]
  %198 = lshr i64 %197, 1
  %199 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %196, i64 %198
  %200 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %199, i64 0, i32 0
  %201 = load i64, i64* %200, align 8
  %202 = icmp ult i64 %201, %194
  %203 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %199, i64 1
  %204 = xor i64 %198, -1
  %205 = add i64 %197, %204
  %206 = select i1 %202, i64 %205, i64 %198
  %207 = select i1 %202, %"struct.cc::ElementId"* %203, %"struct.cc::ElementId"* %196
  %208 = icmp eq i64 %206, 0
  br i1 %208, label %209, label %195

209:                                              ; preds = %195, %179
  %210 = phi %"struct.cc::ElementId"* [ %183, %179 ], [ %207, %195 ]
  %211 = icmp eq %"struct.cc::ElementId"* %210, %190
  br i1 %211, label %218, label %212

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %181, i64 0, i32 0
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %210, i64 0, i32 0
  %216 = load i64, i64* %215, align 8
  %217 = icmp ult i64 %214, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %212, %209
  %219 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %180, i64 0, i32 0
  %220 = call %"struct.cc::ElementId"* @_ZNSt3__16vectorIN2cc9ElementIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector"* %219, %"struct.cc::ElementId"* %210, %"struct.cc::ElementId"* dereferenceable(8) %181) #19
  br label %221

221:                                              ; preds = %212, %218
  %222 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %223 = bitcast %"class.cc::CompositorDelegateForInput"* %222 to void (%"class.cc::CompositorDelegateForInput"*)***
  %224 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %223, align 8
  %225 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %224, i64 5
  %226 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %225, align 8
  call void %226(%"class.cc::CompositorDelegateForInput"* %222) #19
  br label %227

227:                                              ; preds = %175, %221, %172
  %228 = phi i1 [ false, %175 ], [ false, %221 ], [ true, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #19
  br label %229

229:                                              ; preds = %104, %227
  %230 = phi i1 [ %228, %227 ], [ false, %104 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #19
  %231 = icmp eq %"class.cc::SnapSelectionStrategy"* %105, null
  br i1 %231, label %237, label %232

232:                                              ; preds = %229
  %233 = bitcast %"class.cc::SnapSelectionStrategy"* %105 to void (%"class.cc::SnapSelectionStrategy"*)***
  %234 = load void (%"class.cc::SnapSelectionStrategy"*)**, void (%"class.cc::SnapSelectionStrategy"*)*** %233, align 8
  %235 = getelementptr inbounds void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %234, i64 1
  %236 = load void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %235, align 8
  call void %236(%"class.cc::SnapSelectionStrategy"* nonnull %105) #19
  br label %237

237:                                              ; preds = %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  br label %238

238:                                              ; preds = %24, %2, %237
  %239 = phi i1 [ %230, %237 ], [ false, %2 ], [ false, %24 ]
  ret i1 %239
}

declare void @_ZN2cc28BrowserControlsOffsetManager9ScrollEndEv(%"class.cc::BrowserControlsOffsetManager"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler17RecordScrollBeginEN2ui15ScrollInputTypeENS_22ScrollBeginThreadStateE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i32, i32) unnamed_addr #0 align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE, i64 0, i64 %4
  %6 = load i32, i32* %5, align 4
  %7 = icmp ult i32 %2, 3
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = sext i32 %2 to i64
  %10 = getelementptr inbounds [3 x i32], [3 x i32]* @switch.table._ZN2cc20ThreadedInputHandler17RecordScrollBeginEN2ui15ScrollInputTypeENS_22ScrollBeginThreadStateE.41, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %8, %3
  %13 = phi i32 [ -1431655766, %3 ], [ %11, %8 ]
  %14 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %15 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %14, align 8
  %16 = bitcast %"class.cc::CompositorDelegateForInput"* %15 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %17 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %17, i64 22
  %19 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %18, align 8
  %20 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %19(%"class.cc::CompositorDelegateForInput"* %15) #19
  %21 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %20, i64 0, i32 94
  %22 = tail call %"class.cc::FrameSequenceTracker"* @_ZN2cc30FrameSequenceTrackerCollection19StartScrollSequenceENS_24FrameSequenceTrackerTypeENS_20FrameSequenceMetrics10ThreadTypeE(%"class.cc::FrameSequenceTrackerCollection"* %21, i32 %6, i32 %13) #19
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK2cc20ThreadedInputHandler23GetTrackerTypeForScrollEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* nocapture readnone, i32) local_unnamed_addr #10 align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE, i64 0, i64 %3
  %5 = load i32, i32* %4, align 4
  ret i32 %5
}

declare %"class.cc::FrameSequenceTracker"* @_ZN2cc30FrameSequenceTrackerCollection19StartScrollSequenceENS_24FrameSequenceTrackerTypeENS_20FrameSequenceMetrics10ThreadTypeE(%"class.cc::FrameSequenceTrackerCollection"*, i32, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 22
  %8 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %9, i64 0, i32 94
  %11 = sext i32 %1 to i64
  %12 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2cc20ThreadedInputHandler15RecordScrollEndEN2ui15ScrollInputTypeE, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN2cc30FrameSequenceTrackerCollection12StopSequenceENS_24FrameSequenceTrackerTypeE(%"class.cc::FrameSequenceTrackerCollection"* %10, i32 %13) #19
  ret void
}

declare void @_ZN2cc30FrameSequenceTrackerCollection12StopSequenceENS_24FrameSequenceTrackerTypeE(%"class.cc::FrameSequenceTrackerCollection"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler11MouseMoveAtERKN3gfx5PointE(%"struct.cc::InputHandlerPointerResult"* noalias nocapture sret, %"class.cc::ThreadedInputHandler"* nocapture, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %4 = alloca %"struct.cc::InputHandlerPointerResult", align 8
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::PointF"*
  %7 = alloca %"class.gfx::PointF", align 4
  %8 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i64*
  store i64 -6148914691236517206, i64* %8, align 8
  %9 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 0
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 1
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %12, align 4
  %13 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 3, i32 0
  %14 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %14, i64* %13, align 8
  %15 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %16 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %17 = bitcast %"class.cc::CompositorDelegateForInput"* %16 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %18 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %17, align 8
  %19 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %18, i64 21
  %20 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %19, align 8
  %21 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %20(%"class.cc::CompositorDelegateForInput"* %16) #19
  %22 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %21, i64 0, i32 64
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %38, label %25

25:                                               ; preds = %3
  %26 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i8*
  %27 = bitcast %"struct.cc::InputHandlerPointerResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #19
  %28 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %29 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %28, align 8
  %30 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = sitofp i32 %31 to float
  %33 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = sitofp i32 %34 to float
  %36 = insertelement <2 x float> undef, float %32, i32 0
  %37 = insertelement <2 x float> %36, float %35, i32 1
  call void @_ZN2cc19ScrollbarController17HandlePointerMoveEN3gfx6PointFE(%"struct.cc::InputHandlerPointerResult"* nonnull sret %4, %"class.cc::ScrollbarController"* %29, <2 x float> %37) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* nonnull align 8 %27, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #19
  br label %38

38:                                               ; preds = %3, %25
  %39 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %40 = bitcast %"class.cc::CompositorDelegateForInput"* %39 to i1 (%"class.cc::CompositorDelegateForInput"*)***
  %41 = load i1 (%"class.cc::CompositorDelegateForInput"*)**, i1 (%"class.cc::CompositorDelegateForInput"*)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %41, i64 4
  %43 = load i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %42, align 8
  %44 = call zeroext i1 %43(%"class.cc::CompositorDelegateForInput"* %39) #19
  br i1 %44, label %45, label %117

45:                                               ; preds = %38
  %46 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #19
  %47 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %47, align 8
  %48 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %48, align 4
  %49 = bitcast %"class.gfx::PointF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #19
  %50 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = sitofp i32 %51 to float
  %53 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %2, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = sitofp i32 %54 to float
  %56 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 0
  store float %52, float* %56, align 4
  %57 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %7, i64 0, i32 1
  store float %55, float* %57, align 4
  %58 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %59 = bitcast %"class.cc::CompositorDelegateForInput"* %58 to float (%"class.cc::CompositorDelegateForInput"*)***
  %60 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %59, align 8
  %61 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %60, i64 18
  %62 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %61, align 8
  %63 = call float %62(%"class.cc::CompositorDelegateForInput"* %58) #19
  %64 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %7, float %63, float %63) #19
  store <2 x float> %64, <2 x float>* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #19
  %65 = call { %"struct.cc::ScrollNode"*, i8 } @_ZNK2cc20ThreadedInputHandler17HitTestScrollNodeERKN3gfx6PointFE(%"class.cc::ThreadedInputHandler"* %1, %"class.gfx::PointF"* nonnull dereferenceable(8) %6)
  %66 = extractvalue { %"struct.cc::ScrollNode"*, i8 } %65, 0
  %67 = extractvalue { %"struct.cc::ScrollNode"*, i8 } %65, 1
  %68 = and i8 %67, 1
  %69 = icmp ne i8 %68, 0
  %70 = icmp ne %"struct.cc::ScrollNode"* %66, null
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %116

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %66, i64 0, i32 5
  %74 = load i8, i8* %73, align 4
  %75 = and i8 %74, 4
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %72
  %78 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %79 = bitcast %"class.cc::CompositorDelegateForInput"* %78 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %80 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %79, align 8
  %81 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %80, i64 22
  %82 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %81, align 8
  %83 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %82(%"class.cc::CompositorDelegateForInput"* %78) #19
  %84 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %83, i64 0, i32 35, i32 0, i32 0, i32 0
  %85 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %84, align 8
  %86 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %85) #19
  br label %87

87:                                               ; preds = %72, %77
  %88 = phi %"struct.cc::ScrollNode"* [ %86, %77 ], [ %66, %72 ]
  %89 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %88, i64 0, i32 8, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %92 = bitcast %"class.cc::CompositorDelegateForInput"* %91 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %93 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %92, align 8
  %94 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %93, i64 22
  %95 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %94, align 8
  %96 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %95(%"class.cc::CompositorDelegateForInput"* %91) #19
  %97 = call %"class.cc::ScrollbarAnimationController"* @_ZNK2cc17LayerTreeHostImpl40ScrollbarAnimationControllerForElementIdENS_9ElementIdE(%"class.cc::LayerTreeHostImpl"* %96, i64 %90) #19
  %98 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 13, i32 0
  %99 = load i64, i64* %98, align 8
  %100 = icmp eq i64 %90, %99
  br i1 %100, label %113, label %101

101:                                              ; preds = %87
  %102 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %15, align 8
  %103 = bitcast %"class.cc::CompositorDelegateForInput"* %102 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %104 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %103, align 8
  %105 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %104, i64 22
  %106 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %105, align 8
  %107 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %106(%"class.cc::CompositorDelegateForInput"* %102) #19
  %108 = load i64, i64* %98, align 8
  %109 = call %"class.cc::ScrollbarAnimationController"* @_ZNK2cc17LayerTreeHostImpl40ScrollbarAnimationControllerForElementIdENS_9ElementIdE(%"class.cc::LayerTreeHostImpl"* %107, i64 %108) #19
  %110 = icmp eq %"class.cc::ScrollbarAnimationController"* %109, null
  br i1 %110, label %112, label %111

111:                                              ; preds = %101
  call void @_ZN2cc28ScrollbarAnimationController13DidMouseLeaveEv(%"class.cc::ScrollbarAnimationController"* nonnull %109) #19
  br label %112

112:                                              ; preds = %101, %111
  store i64 %90, i64* %98, align 8
  br label %113

113:                                              ; preds = %87, %112
  %114 = icmp eq %"class.cc::ScrollbarAnimationController"* %97, null
  br i1 %114, label %116, label %115

115:                                              ; preds = %113
  call void @_ZN2cc28ScrollbarAnimationController12DidMouseMoveERKN3gfx6PointFE(%"class.cc::ScrollbarAnimationController"* nonnull %97, %"class.gfx::PointF"* nonnull dereferenceable(8) %6) #19
  br label %116

116:                                              ; preds = %115, %113, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #19
  br label %117

117:                                              ; preds = %38, %116
  ret void
}

declare void @_ZN2cc19ScrollbarController17HandlePointerMoveEN3gfx6PointFE(%"struct.cc::InputHandlerPointerResult"* sret, %"class.cc::ScrollbarController"*, <2 x float>) local_unnamed_addr #6

declare %"class.cc::ScrollbarAnimationController"* @_ZNK2cc17LayerTreeHostImpl40ScrollbarAnimationControllerForElementIdENS_9ElementIdE(%"class.cc::LayerTreeHostImpl"*, i64) local_unnamed_addr #6

declare void @_ZN2cc28ScrollbarAnimationController13DidMouseLeaveEv(%"class.cc::ScrollbarAnimationController"*) local_unnamed_addr #6

declare void @_ZN2cc28ScrollbarAnimationController12DidMouseMoveERKN3gfx6PointFE(%"class.cc::ScrollbarAnimationController"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc20ThreadedInputHandler7HitTestERKN3gfx6PointFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 21
  %8 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %9, i64 0, i32 64
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %19, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %15 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %14, align 8
  %16 = bitcast %"class.gfx::PointF"* %1 to <2 x float>*
  %17 = load <2 x float>, <2 x float>* %16, align 4
  %18 = tail call i32 @_ZNK2cc19ScrollbarController7HitTestEN3gfx6PointFE(%"class.cc::ScrollbarController"* %15, <2 x float> %17) #19
  br label %19

19:                                               ; preds = %2, %13
  %20 = phi i32 [ %18, %13 ], [ 0, %2 ]
  ret i32 %20
}

declare i32 @_ZNK2cc19ScrollbarController7HitTestEN3gfx6PointFE(%"class.cc::ScrollbarController"*, <2 x float>) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler9MouseDownERKN3gfx6PointFEb(%"struct.cc::InputHandlerPointerResult"* noalias nocapture sret, %"class.cc::ThreadedInputHandler"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8), i1 zeroext) unnamed_addr #5 align 2 {
  %5 = alloca %"struct.cc::InputHandlerPointerResult", align 8
  %6 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %7 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %8 = bitcast %"class.cc::CompositorDelegateForInput"* %7 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %9 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %9, i64 22
  %11 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %10, align 8
  %12 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %11(%"class.cc::CompositorDelegateForInput"* %7) #19
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 13, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = tail call %"class.cc::ScrollbarAnimationController"* @_ZNK2cc17LayerTreeHostImpl40ScrollbarAnimationControllerForElementIdENS_9ElementIdE(%"class.cc::LayerTreeHostImpl"* %12, i64 %14) #19
  %16 = icmp eq %"class.cc::ScrollbarAnimationController"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  tail call void @_ZN2cc28ScrollbarAnimationController12DidMouseDownEv(%"class.cc::ScrollbarAnimationController"* nonnull %15) #19
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 14, i32 0
  %19 = load i64, i64* %13, align 8
  store i64 %19, i64* %18, align 8
  br label %20

20:                                               ; preds = %4, %17
  %21 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i64*
  store i64 -6148914691236517206, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 0
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 1
  store i8 0, i8* %23, align 4
  %24 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %24, align 8
  %25 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %25, align 4
  %26 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 3, i32 0
  %27 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %27, i64* %26, align 8
  %28 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %29 = bitcast %"class.cc::CompositorDelegateForInput"* %28 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %30 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %30, i64 21
  %32 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %31, align 8
  %33 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %32(%"class.cc::CompositorDelegateForInput"* %28) #19
  %34 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %33, i64 0, i32 64
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %20
  %38 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i8*
  %39 = bitcast %"struct.cc::InputHandlerPointerResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %41 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %40, align 8
  %42 = bitcast %"class.gfx::PointF"* %2 to <2 x float>*
  %43 = load <2 x float>, <2 x float>* %42, align 4
  call void @_ZN2cc19ScrollbarController17HandlePointerDownEN3gfx6PointFEb(%"struct.cc::InputHandlerPointerResult"* nonnull sret %5, %"class.cc::ScrollbarController"* %41, <2 x float> %43, i1 zeroext %3) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %39, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #19
  br label %44

44:                                               ; preds = %20, %37
  ret void
}

declare void @_ZN2cc28ScrollbarAnimationController12DidMouseDownEv(%"class.cc::ScrollbarAnimationController"*) local_unnamed_addr #6

declare void @_ZN2cc19ScrollbarController17HandlePointerDownEN3gfx6PointFEb(%"struct.cc::InputHandlerPointerResult"* sret, %"class.cc::ScrollbarController"*, <2 x float>, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler7MouseUpERKN3gfx6PointFE(%"struct.cc::InputHandlerPointerResult"* noalias nocapture sret, %"class.cc::ThreadedInputHandler"* nocapture, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %4 = alloca %"struct.cc::InputHandlerPointerResult", align 8
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 14, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  br label %23

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %12 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %11, align 8
  %13 = bitcast %"class.cc::CompositorDelegateForInput"* %12 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %14 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %14, i64 22
  %16 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %15, align 8
  %17 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %16(%"class.cc::CompositorDelegateForInput"* %12) #19
  %18 = load i64, i64* %5, align 8
  %19 = tail call %"class.cc::ScrollbarAnimationController"* @_ZNK2cc17LayerTreeHostImpl40ScrollbarAnimationControllerForElementIdENS_9ElementIdE(%"class.cc::LayerTreeHostImpl"* %17, i64 %18) #19
  %20 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %20, i64* %5, align 8
  %21 = icmp eq %"class.cc::ScrollbarAnimationController"* %19, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %10
  tail call void @_ZN2cc28ScrollbarAnimationController10DidMouseUpEv(%"class.cc::ScrollbarAnimationController"* nonnull %19) #19
  br label %23

23:                                               ; preds = %8, %22, %10
  %24 = phi i64 [ %9, %8 ], [ %20, %22 ], [ %20, %10 ]
  %25 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i64*
  store i64 -6148914691236517206, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 0
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 1
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 0
  store float 0.000000e+00, float* %28, align 8
  %29 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 2, i32 1
  store float 0.000000e+00, float* %29, align 4
  %30 = getelementptr inbounds %"struct.cc::InputHandlerPointerResult", %"struct.cc::InputHandlerPointerResult"* %0, i64 0, i32 3, i32 0
  store i64 %24, i64* %30, align 8
  %31 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %32 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %31, align 8
  %33 = bitcast %"class.cc::CompositorDelegateForInput"* %32 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %34 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %34, i64 21
  %36 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %35, align 8
  %37 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %36(%"class.cc::CompositorDelegateForInput"* %32) #19
  %38 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %37, i64 0, i32 64
  %39 = load i8, i8* %38, align 4, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %48, label %41

41:                                               ; preds = %23
  %42 = bitcast %"struct.cc::InputHandlerPointerResult"* %0 to i8*
  %43 = bitcast %"struct.cc::InputHandlerPointerResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #19
  %44 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %45 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %44, align 8
  %46 = bitcast %"class.gfx::PointF"* %2 to <2 x float>*
  %47 = load <2 x float>, <2 x float>* %46, align 4
  call void @_ZN2cc19ScrollbarController15HandlePointerUpEN3gfx6PointFE(%"struct.cc::InputHandlerPointerResult"* nonnull sret %4, %"class.cc::ScrollbarController"* %45, <2 x float> %47) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* nonnull align 8 %43, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #19
  br label %48

48:                                               ; preds = %23, %41
  ret void
}

declare void @_ZN2cc28ScrollbarAnimationController10DidMouseUpEv(%"class.cc::ScrollbarAnimationController"*) local_unnamed_addr #6

declare void @_ZN2cc19ScrollbarController15HandlePointerUpEN3gfx6PointFE(%"struct.cc::InputHandlerPointerResult"* sret, %"class.cc::ScrollbarController"*, <2 x float>) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler10MouseLeaveEv(%"class.cc::ThreadedInputHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to void (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %5, i64 14
  %7 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  tail call void %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %8 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 13, i32 0
  store i64 %8, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2cc20ThreadedInputHandler25FindFrameElementIdAtPointERKN3gfx6PointFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::PointF"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::PointF"*
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::PointF"*
  %7 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #19
  %8 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %8, align 8
  %9 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %10 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = bitcast %"class.gfx::PointF"* %1 to i64*
  %12 = load i64, i64* %11, align 4
  store i64 %12, i64* %5, align 8
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %14 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %15 = bitcast %"class.cc::CompositorDelegateForInput"* %14 to float (%"class.cc::CompositorDelegateForInput"*)***
  %16 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %15, align 8
  %17 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %16, i64 18
  %18 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %17, align 8
  %19 = tail call float %18(%"class.cc::CompositorDelegateForInput"* %14) #19
  %20 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %6, float %19, float %19) #19
  store <2 x float> %20, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  %21 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %13, align 8
  %22 = bitcast %"class.cc::CompositorDelegateForInput"* %21 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %23, i64 22
  %25 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %24, align 8
  %26 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %25(%"class.cc::CompositorDelegateForInput"* %21) #19
  %27 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %26, i64 0, i32 35, i32 0, i32 0, i32 0
  %28 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %27, align 8
  %29 = call i64 @_ZN2cc13LayerTreeImpl25FindFrameElementIdAtPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %28, %"class.gfx::PointF"* nonnull dereferenceable(8) %4) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #19
  ret i64 %29
}

declare i64 @_ZN2cc13LayerTreeImpl25FindFrameElementIdAtPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler39RequestUpdateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler42SetSynchronousInputHandlerRootScrollOffsetERKN3gfx12ScrollOffsetE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %7 = alloca { <2 x float>, <2 x float> }, align 8
  %8 = alloca %"class.gfx::Point", align 4
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %23, label %12, !prof !6

12:                                               ; preds = %2
  %13 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #19
  %14 = bitcast %"class.gfx::ScrollOffset"* %1 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = bitcast float* %3 to i32*
  store i32 %15, i32* %16, align 4
  %17 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #19
  %18 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %1, i64 0, i32 1
  %19 = bitcast float* %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = bitcast float* %4 to i32*
  store i32 %20, i32* %21, align 4
  %22 = call i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), float* nonnull dereferenceable(4) %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i64 0, i64 0), float* nonnull dereferenceable(4) %4)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #19
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #19
  br label %23

23:                                               ; preds = %2, %12
  %24 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %2 ], [ getelementptr inbounds ([65 x i8], [65 x i8]* @.str.13, i64 0, i64 0), %12 ]
  %25 = phi i8* [ null, %2 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %12 ]
  %26 = phi i64 [ -6148914691236517206, %2 ], [ %22, %12 ]
  %27 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #19
  %28 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %28, align 8
  %29 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %6, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %29, align 4
  %30 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %31 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %32 = bitcast %"class.cc::CompositorDelegateForInput"* %31 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %33 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %33, i64 22
  %35 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %34, align 8
  %36 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %35(%"class.cc::CompositorDelegateForInput"* %31) #19
  %37 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %36, i64 0, i32 74, i32 0, i32 0, i32 0
  %38 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %37, align 8
  %39 = call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %38) #19
  %40 = bitcast %"class.gfx::ScrollOffset"* %1 to <2 x float>*
  %41 = load <2 x float>, <2 x float>* %40, align 4
  %42 = fsub <2 x float> %41, %39
  store <2 x float> %42, <2 x float>* %5, align 8
  %43 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %44 = bitcast %"class.cc::CompositorDelegateForInput"* %43 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %45 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %45, i64 22
  %47 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %46, align 8
  %48 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %47(%"class.cc::CompositorDelegateForInput"* %43) #19
  %49 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %48, i64 0, i32 35, i32 0, i32 0, i32 0
  %50 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %50, i64 0, i32 13
  %52 = load float, float* %51, align 8
  %53 = call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %50) #19
  %54 = call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %50) #19
  br i1 %54, label %55, label %59

55:                                               ; preds = %23
  %56 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 3, i32 0
  %57 = load float, float* %56, align 4
  %58 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 2, i32 0
  br label %72

59:                                               ; preds = %23
  %60 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 6
  %61 = load i8, i8* %60, align 4, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %63, label %69

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 5, i32 0
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 3, i32 0
  %67 = load float, float* %66, align 4
  %68 = fdiv float %67, %65
  br label %69

69:                                               ; preds = %63, %59
  %70 = phi float [ %68, %63 ], [ 1.000000e+00, %59 ]
  %71 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %53, i64 0, i32 1, i32 0
  br label %72

72:                                               ; preds = %55, %69
  %73 = phi float* [ %58, %55 ], [ %71, %69 ]
  %74 = phi float [ %57, %55 ], [ %70, %69 ]
  %75 = load float, float* %73, align 4
  %76 = fmul float %74, %75
  %77 = fmul float %52, %76
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %6, float %77, float %77) #19
  %78 = bitcast { <2 x float>, <2 x float> }* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #19
  %79 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %80 = bitcast %"class.cc::CompositorDelegateForInput"* %79 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %81 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %80, align 8
  %82 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %81, i64 22
  %83 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %82, align 8
  %84 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %83(%"class.cc::CompositorDelegateForInput"* %79) #19
  %85 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %84, i64 0, i32 74, i32 0, i32 0, i32 0
  %86 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %85, align 8
  %87 = bitcast %"class.gfx::Point"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #19
  %88 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %8, i64 0, i32 0
  store i32 0, i32* %88, align 4
  %89 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %8, i64 0, i32 1
  store i32 0, i32* %89, align 4
  %90 = call { <2 x float>, <2 x float> } @_ZN2cc8Viewport8ScrollByERKN3gfx9Vector2dFERKNS1_5PointEbbb(%"class.cc::Viewport"* %86, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %6, %"class.gfx::Point"* nonnull dereferenceable(8) %8, i1 zeroext false, i1 zeroext false, i1 zeroext true) #19
  %91 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 0
  %92 = extractvalue { <2 x float>, <2 x float> } %90, 0
  store <2 x float> %92, <2 x float>* %91, align 8
  %93 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %7, i64 0, i32 1
  %94 = extractvalue { <2 x float>, <2 x float> } %90, 1
  store <2 x float> %94, <2 x float>* %93, align 8
  %95 = bitcast { <2 x float>, <2 x float> }* %7 to %"class.gfx::Vector2dF"*
  %96 = call zeroext i1 @_ZNK3gfx9Vector2dF6IsZeroEv(%"class.gfx::Vector2dF"* nonnull %95) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #19
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #19
  br i1 %96, label %123, label %97

97:                                               ; preds = %72
  %98 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %99 = bitcast %"class.cc::CompositorDelegateForInput"* %98 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %100 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %99, align 8
  %101 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %100, i64 22
  %102 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %101, align 8
  %103 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %102(%"class.cc::CompositorDelegateForInput"* %98) #19
  %104 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %103, i64 0, i32 35, i32 0, i32 0, i32 0
  %105 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %104, align 8
  %106 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %105) #19
  %107 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %106, i64 0, i32 8, i32 0
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.cc::CompositorDelegateForInput"* %98 to void (%"class.cc::CompositorDelegateForInput"*, i64, i1)***
  %110 = load void (%"class.cc::CompositorDelegateForInput"*, i64, i1)**, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)** %110, i64 17
  %112 = load void (%"class.cc::CompositorDelegateForInput"*, i64, i1)*, void (%"class.cc::CompositorDelegateForInput"*, i64, i1)** %111, align 8
  call void %112(%"class.cc::CompositorDelegateForInput"* %98, i64 %108, i1 zeroext false) #19
  %113 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %114 = bitcast %"class.cc::CompositorDelegateForInput"* %113 to void (%"class.cc::CompositorDelegateForInput"*)***
  %115 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %115, i64 5
  %117 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %116, align 8
  call void %117(%"class.cc::CompositorDelegateForInput"* %113) #19
  call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %0)
  %118 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %30, align 8
  %119 = bitcast %"class.cc::CompositorDelegateForInput"* %118 to void (%"class.cc::CompositorDelegateForInput"*)***
  %120 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %119, align 8
  %121 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %120, i64 6
  %122 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %121, align 8
  call void %122(%"class.cc::CompositorDelegateForInput"* %118) #19
  br label %123

123:                                              ; preds = %72, %97
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #19
  %124 = icmp eq i8* %25, null
  br i1 %124, label %129, label %125

125:                                              ; preds = %123
  %126 = load i8, i8* %25, align 1
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %129, label %128

128:                                              ; preds = %125
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %25, i8* %24, i64 %26) #19
  br label %129

129:                                              ; preds = %123, %125, %128
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIffEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_S7_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, float* dereferenceable(4), i8*, float* dereferenceable(4)) local_unnamed_addr #8 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #19
  %19 = bitcast %"class.base::trace_event::TraceArguments"* %12 to i64*
  store i64 -6148914691247438846, i64* %19, align 8
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %20, align 8
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %23 = load float, float* %8, align 4
  %24 = load float, float* %10, align 4
  %25 = insertelement <2 x float> undef, float %23, i32 0
  %26 = insertelement <2 x float> %25, float %24, i32 1
  %27 = fpext <2 x float> %26 to <2 x double>
  %28 = bitcast %"union.base::trace_event::TraceValue"* %22 to <2 x double>*
  store <2 x double> %27, <2 x double>* %28, align 8
  %29 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #19
  %30 = load i8, i8* %18, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %66, label %32

32:                                               ; preds = %11, %61
  %33 = phi i64 [ %62, %61 ], [ 0, %11 ]
  %34 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %33
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 8
  br i1 %36, label %37, label %48

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %39 = bitcast %"union.base::trace_event::TraceValue"* %38 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %40 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %39, align 8
  %41 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %40, null
  br i1 %41, label %61, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %40 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %44 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %44, i64 1
  %46 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, align 8
  call void %46(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %40) #19
  %47 = load i8, i8* %34, align 1
  br label %48

48:                                               ; preds = %42, %32
  %49 = phi i8 [ %35, %32 ], [ %47, %42 ]
  %50 = icmp eq i8 %49, 9
  br i1 %50, label %51, label %61

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %33
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.protozero::HeapBuffered"**
  %54 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %53, align 8
  %55 = icmp eq %"class.protozero::HeapBuffered"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %57) #19
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %58) #19
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %54, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %59) #19
  %60 = bitcast %"class.protozero::HeapBuffered"* %54 to i8*
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %56, %51, %48, %37
  %62 = add nuw nsw i64 %33, 1
  %63 = load i8, i8* %18, align 8
  %64 = zext i8 %63 to i64
  %65 = icmp ult i64 %62, %64
  br i1 %65, label %32, label %66

66:                                               ; preds = %61, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i64 %29
}

declare <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"*) local_unnamed_addr #6

declare { <2 x float>, <2 x float> } @_ZN2cc8Viewport8ScrollByERKN3gfx9Vector2dFERKNS1_5PointEbbb(%"class.cc::Viewport"*, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Point"* dereferenceable(8), i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler17PinchGestureBeginEv(%"class.cc::ThreadedInputHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 21
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %5 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %5 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %7, i64 3
  %9 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, align 8
  %10 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %9(%"class.cc::CompositorDelegateForInput"* %5) #19
  %11 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %10) #19
  %12 = icmp eq %"struct.cc::ScrollNode"* %11, null
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 23
  %14 = zext i1 %12 to i8
  store i8 %14, i8* %13, align 1
  %15 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %31, label %18, !prof !6

18:                                               ; preds = %1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2) #19
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 22
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %24, i64 0, i32 35, i32 0, i32 0, i32 0
  %26 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %25, align 8
  %27 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %26) #19
  %28 = icmp eq %"struct.cc::ScrollNode"* %27, null
  %29 = zext i1 %28 to i8
  store i8 %29, i8* %2, align 1
  %30 = call i64 @_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0), i8* nonnull dereferenceable(1) %2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2) #19
  br label %31

31:                                               ; preds = %1, %18
  %32 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %33 = bitcast %"class.cc::CompositorDelegateForInput"* %32 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %34 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %33, align 8
  %35 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %34, i64 22
  %36 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %35, align 8
  %37 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %36(%"class.cc::CompositorDelegateForInput"* %32) #19
  %38 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %37, i64 0, i32 35, i32 0, i32 0, i32 0
  %39 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %38, align 8
  %40 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %41 = bitcast %"class.cc::CompositorDelegateForInput"* %40 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %42 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %41, align 8
  %43 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %42, i64 22
  %44 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %43, align 8
  %45 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %44(%"class.cc::CompositorDelegateForInput"* %40) #19
  %46 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %45, i64 0, i32 35, i32 0, i32 0, i32 0
  %47 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %46, align 8
  %48 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %47) #19
  call void @_ZN2cc13LayerTreeImpl25SetCurrentlyScrollingNodeEPKNS_10ScrollNodeE(%"class.cc::LayerTreeImpl"* %39, %"struct.cc::ScrollNode"* %48) #19
  %49 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %50 = bitcast %"class.cc::CompositorDelegateForInput"* %49 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %51 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %51, i64 22
  %53 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %52, align 8
  %54 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %53(%"class.cc::CompositorDelegateForInput"* %49) #19
  %55 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %54, i64 0, i32 46, i32 0, i32 0, i32 0
  %56 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %55, align 8
  call void @_ZN2cc28BrowserControlsOffsetManager10PinchBeginEv(%"class.cc::BrowserControlsOffsetManager"* %56) #19
  %57 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %58 = bitcast %"class.cc::CompositorDelegateForInput"* %57 to void (%"class.cc::CompositorDelegateForInput"*)***
  %59 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %59, i64 9
  %61 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %60, align 8
  call void %61(%"class.cc::CompositorDelegateForInput"* %57) #19
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIbEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #19
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load i8, i8* %8, align 1, !range !2
  %21 = bitcast %"union.base::trace_event::TraceValue"* %19 to i8*
  store i8 %20, i8* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #19
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #19
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #19
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #19
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #19
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  ret i64 %22
}

declare void @_ZN2cc28BrowserControlsOffsetManager10PinchBeginEv(%"class.cc::BrowserControlsOffsetManager"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler18PinchGestureUpdateEfRKN3gfx5PointE(%"class.cc::ThreadedInputHandler"* nocapture, float, %"class.gfx::Point"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %6 = and i8 %5, 25
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %14, label %8, !prof !6

8:                                                ; preds = %3
  %9 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %10 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %12 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %12, i64* %11, align 8
  %13 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %9, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  br label %14

14:                                               ; preds = %3, %8
  %15 = phi i64 [ -6148914691236517206, %3 ], [ %13, %8 ]
  %16 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([41 x i8], [41 x i8]* @.str.18, i64 0, i64 0), %8 ]
  %17 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %8 ]
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 22
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %24, i64 0, i32 35, i32 0, i32 0, i32 0
  %26 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %25, align 8
  %27 = call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %26) #19
  %28 = icmp eq %"struct.cc::ScrollNode"* %27, null
  br i1 %28, label %49, label %29

29:                                               ; preds = %14
  %30 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 24
  store i8 1, i8* %30, align 8
  %31 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %32 = bitcast %"class.cc::CompositorDelegateForInput"* %31 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %33 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %32, align 8
  %34 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %33, i64 22
  %35 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %34, align 8
  %36 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %35(%"class.cc::CompositorDelegateForInput"* %31) #19
  %37 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %36, i64 0, i32 74, i32 0, i32 0, i32 0
  %38 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %37, align 8
  call void @_ZN2cc8Viewport11PinchUpdateEfRKN3gfx5PointE(%"class.cc::Viewport"* %38, float %1, %"class.gfx::Point"* dereferenceable(8) %2) #19
  %39 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %40 = bitcast %"class.cc::CompositorDelegateForInput"* %39 to void (%"class.cc::CompositorDelegateForInput"*)***
  %41 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %41, i64 5
  %43 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %42, align 8
  call void %43(%"class.cc::CompositorDelegateForInput"* %39) #19
  %44 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %45 = bitcast %"class.cc::CompositorDelegateForInput"* %44 to void (%"class.cc::CompositorDelegateForInput"*)***
  %46 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %46, i64 10
  %48 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %47, align 8
  call void %48(%"class.cc::CompositorDelegateForInput"* %44) #19
  call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %0)
  br label %49

49:                                               ; preds = %14, %29
  %50 = icmp eq i8* %17, null
  br i1 %50, label %55, label %51

51:                                               ; preds = %49
  %52 = load i8, i8* %17, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %17, i8* %16, i64 %15) #19
  br label %55

55:                                               ; preds = %49, %51, %54
  ret void
}

declare void @_ZN2cc8Viewport11PinchUpdateEfRKN3gfx5PointE(%"class.cc::Viewport"*, float, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler15PinchGestureEndERKN3gfx5PointEb(%"class.cc::ThreadedInputHandler"*, %"class.gfx::Point"* dereferenceable(8), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 21
  store i8 0, i8* %4, align 1
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 23
  %6 = load i8, i8* %5, align 1, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %3
  store i8 0, i8* %5, align 1
  tail call void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* %0)
  br label %9

9:                                                ; preds = %3, %8
  %10 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %11 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %10, align 8
  %12 = bitcast %"class.cc::CompositorDelegateForInput"* %11 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %13 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %13, i64 22
  %15 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %14, align 8
  %16 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %15(%"class.cc::CompositorDelegateForInput"* %11) #19
  %17 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %16, i64 0, i32 74, i32 0, i32 0, i32 0
  %18 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %17, align 8
  tail call void @_ZN2cc8Viewport8PinchEndERKN3gfx5PointEb(%"class.cc::Viewport"* %18, %"class.gfx::Point"* dereferenceable(8) %1, i1 zeroext %2) #19
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %10, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 22
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %24, i64 0, i32 46, i32 0, i32 0, i32 0
  %26 = load %"class.cc::BrowserControlsOffsetManager"*, %"class.cc::BrowserControlsOffsetManager"** %25, align 8
  tail call void @_ZN2cc28BrowserControlsOffsetManager8PinchEndEv(%"class.cc::BrowserControlsOffsetManager"* %26) #19
  %27 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %10, align 8
  %28 = bitcast %"class.cc::CompositorDelegateForInput"* %27 to void (%"class.cc::CompositorDelegateForInput"*)***
  %29 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %29, i64 5
  %31 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %30, align 8
  tail call void %31(%"class.cc::CompositorDelegateForInput"* %27) #19
  %32 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %10, align 8
  %33 = bitcast %"class.cc::CompositorDelegateForInput"* %32 to void (%"class.cc::CompositorDelegateForInput"*)***
  %34 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %34, i64 11
  %36 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %35, align 8
  tail call void %36(%"class.cc::CompositorDelegateForInput"* %32) #19
  ret void
}

declare void @_ZN2cc8Viewport8PinchEndERKN3gfx5PointEb(%"class.cc::Viewport"*, %"class.gfx::Point"* dereferenceable(8), i1 zeroext) local_unnamed_addr #6

declare void @_ZN2cc28BrowserControlsOffsetManager8PinchEndEv(%"class.cc::BrowserControlsOffsetManager"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler20SetNeedsAnimateInputEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  tail call void @_ZN2cc17LayerTreeHostImpl20SetNeedsAnimateInputEv(%"class.cc::LayerTreeHostImpl"* %8) #19
  ret void
}

declare void @_ZN2cc17LayerTreeHostImpl20SetNeedsAnimateInputEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler28IsCurrentlyScrollingViewportEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %1
  %12 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %13 = bitcast %"class.cc::CompositorDelegateForInput"* %12 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %14 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %14, i64 22
  %16 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %15, align 8
  %17 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %16(%"class.cc::CompositorDelegateForInput"* %12) #19
  %18 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %17, i64 0, i32 74, i32 0, i32 0, i32 0
  %19 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK2cc8Viewport12ShouldScrollERKNS_10ScrollNodeE(%"class.cc::Viewport"* %19, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %9) #19
  br label %21

21:                                               ; preds = %1, %11
  %22 = phi i1 [ %20, %11 ], [ false, %1 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc20ThreadedInputHandler22CurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  ret %"struct.cc::ScrollNode"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc20ThreadedInputHandler26GetEventListenerPropertiesENS_18EventListenerClassE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 22
  %8 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %9, i64 0, i32 35, i32 0, i32 0, i32 0
  %11 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %10, align 8
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %11, i64 0, i32 46, i64 %12
  %14 = load i32, i32* %13, align 4
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(1896) %"class.cc::LayerTreeImpl"* @_ZNK2cc20ThreadedInputHandler10ActiveTreeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %8, i64 0, i32 35, i32 0, i32 0, i32 0
  %10 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %9, align 8
  ret %"class.cc::LayerTreeImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler30HasBlockingWheelEventHandlerAtERKN3gfx5PointE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = bitcast <2 x float>* %3 to %"class.gfx::PointF"*
  %5 = alloca %"class.gfx::PointF", align 4
  %6 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #19
  %7 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %7, align 8
  %8 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %4, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %8, align 4
  %9 = bitcast %"class.gfx::PointF"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #19
  %10 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = sitofp i32 %11 to float
  %13 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sitofp i32 %14 to float
  %16 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 0
  store float %12, float* %16, align 4
  %17 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 1
  store float %15, float* %17, align 4
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to float (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %21, i64 18
  %23 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = tail call float %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %5, float %24, float %24) #19
  store <2 x float> %25, <2 x float>* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #19
  %26 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %27 = bitcast %"class.cc::CompositorDelegateForInput"* %26 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %28, i64 22
  %30 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %29, align 8
  %31 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %30(%"class.cc::CompositorDelegateForInput"* %26) #19
  %32 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %31, i64 0, i32 35, i32 0, i32 0, i32 0
  %33 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %32, align 8
  %34 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl50FindLayerThatIsHitByPointInWheelEventHandlerRegionERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %33, %"class.gfx::PointF"* nonnull dereferenceable(8) %4) #19
  %35 = icmp ne %"class.cc::LayerImpl"* %34, null
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #19
  ret i1 %35
}

declare %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl50FindLayerThatIsHitByPointInWheelEventHandlerRegionERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2cc20ThreadedInputHandler38EventListenerTypeForTouchStartOrMoveAtERKN3gfx5PointEPNS_11TouchActionE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::Point"* nocapture readonly dereferenceable(8), i32*) unnamed_addr #5 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::PointF"*
  %6 = alloca %"class.gfx::PointF", align 4
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca i8, align 1
  %10 = alloca %"class.gfx::PointF", align 4
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Point"*
  %13 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %14, align 8
  %15 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %5, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %15, align 4
  %16 = bitcast %"class.gfx::PointF"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %1, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %6, i64 0, i32 0
  store float %19, float* %23, align 4
  %24 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %6, i64 0, i32 1
  store float %22, float* %24, align 4
  %25 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %26 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %27 = bitcast %"class.cc::CompositorDelegateForInput"* %26 to float (%"class.cc::CompositorDelegateForInput"*)***
  %28 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %27, align 8
  %29 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %28, i64 18
  %30 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %29, align 8
  %31 = tail call float %30(%"class.cc::CompositorDelegateForInput"* %26) #19
  %32 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %6, float %31, float %31) #19
  store <2 x float> %32, <2 x float>* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  %33 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %34 = bitcast %"class.cc::CompositorDelegateForInput"* %33 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %35 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %35, i64 22
  %37 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %36, align 8
  %38 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %37(%"class.cc::CompositorDelegateForInput"* %33) #19
  %39 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %38, i64 0, i32 35, i32 0, i32 0, i32 0
  %40 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %39, align 8
  %41 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl45FindLayerThatIsHitByPointInTouchHandlerRegionERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %40, %"class.gfx::PointF"* nonnull dereferenceable(8) %5) #19
  %42 = icmp eq %"class.cc::LayerImpl"* %41, null
  %43 = icmp ne i32* %2, null
  br i1 %42, label %44, label %46

44:                                               ; preds = %3
  br i1 %43, label %45, label %121

45:                                               ; preds = %44
  store i32 127, i32* %2, align 4
  br label %121

46:                                               ; preds = %3
  br i1 %43, label %47, label %62

47:                                               ; preds = %46
  %48 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %48) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %48, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  call void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* nonnull sret %7, %"class.cc::LayerImpl"* nonnull %41) #19
  %49 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %49) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  %50 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* nonnull %8) #19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #19
  store i8 0, i8* %9, align 1
  %51 = call { <2 x float>, float } @_ZN2cc8MathUtil14ProjectPoint3DERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %8, %"class.gfx::PointF"* nonnull dereferenceable(8) %5, i8* nonnull %9) #19
  %52 = extractvalue { <2 x float>, float } %51, 0
  %53 = bitcast %"class.gfx::PointF"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #19
  %54 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %10, i64 0, i32 0
  %55 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %10, i64 0, i32 1
  %56 = extractelement <2 x float> %52, i32 0
  %57 = extractelement <2 x float> %52, i32 1
  store float %56, float* %54, align 4
  store float %57, float* %55, align 4
  %58 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %41, i64 0, i32 13
  %59 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #19
  %60 = call i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* nonnull dereferenceable(8) %10) #19
  store i64 %60, i64* %11, align 8
  %61 = call i32 @_ZNK2cc17TouchActionRegion21GetAllowedTouchActionERKN3gfx5PointE(%"class.cc::TouchActionRegion"* %58, %"class.gfx::Point"* nonnull dereferenceable(8) %12) #19
  store i32 %61, i32* %2, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %49) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %48) #19
  br label %62

62:                                               ; preds = %47, %46
  %63 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %64 = bitcast %"class.cc::CompositorDelegateForInput"* %63 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %65 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %64, align 8
  %66 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %65, i64 3
  %67 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %66, align 8
  %68 = call dereferenceable(120) %"class.cc::ScrollTree"* %67(%"class.cc::CompositorDelegateForInput"* %63) #19
  %69 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %68) #19
  %70 = icmp eq %"struct.cc::ScrollNode"* %69, null
  br i1 %70, label %121, label %71

71:                                               ; preds = %62
  %72 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %73 = bitcast %"class.cc::CompositorDelegateForInput"* %72 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %74 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %73, align 8
  %75 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %74, i64 22
  %76 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %75, align 8
  %77 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %76(%"class.cc::CompositorDelegateForInput"* %72) #19
  %78 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %77, i64 0, i32 35, i32 0, i32 0, i32 0
  %79 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %78, align 8
  %80 = call %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl25FindLayerThatIsHitByPointERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"* %79, %"class.gfx::PointF"* nonnull dereferenceable(8) %5) #19
  %81 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %82 = bitcast %"class.cc::CompositorDelegateForInput"* %81 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %83 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %82, align 8
  %84 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %83, i64 3
  %85 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %84, align 8
  %86 = call dereferenceable(120) %"class.cc::ScrollTree"* %85(%"class.cc::CompositorDelegateForInput"* %81) #19
  %87 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %86) #19
  %88 = icmp eq %"class.cc::LayerImpl"* %80, null
  br i1 %88, label %121, label %89

89:                                               ; preds = %71
  %90 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %91 = bitcast %"class.cc::CompositorDelegateForInput"* %90 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %92 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %91, align 8
  %93 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %92, i64 3
  %94 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %93, align 8
  %95 = call dereferenceable(120) %"class.cc::ScrollTree"* %94(%"class.cc::CompositorDelegateForInput"* %90) #19
  %96 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %80, i64 0, i32 20
  %97 = load i32, i32* %96, align 4
  %98 = icmp slt i32 %97, 0
  %99 = sext i32 %97 to i64
  %100 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %95, i64 0, i32 0, i32 1, i32 0, i32 0
  %101 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %100, align 8
  %102 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %101, i64 %99
  %103 = icmp eq %"struct.cc::ScrollNode"* %102, null
  %104 = or i1 %98, %103
  br i1 %104, label %121, label %105

105:                                              ; preds = %89
  %106 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %87, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  br label %108

108:                                              ; preds = %113, %105
  %109 = phi %"struct.cc::ScrollNode"* [ %102, %105 ], [ %118, %113 ]
  %110 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %109, i64 0, i32 0
  %111 = load i32, i32* %110, align 8
  %112 = icmp eq i32 %111, %107
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %109, i64 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = icmp slt i32 %115, 0
  %117 = sext i32 %115 to i64
  %118 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %101, i64 %117
  %119 = icmp eq %"struct.cc::ScrollNode"* %118, null
  %120 = or i1 %116, %119
  br i1 %120, label %121, label %108

121:                                              ; preds = %113, %108, %89, %71, %62, %44, %45
  %122 = phi i32 [ 0, %45 ], [ 0, %44 ], [ 1, %62 ], [ 1, %71 ], [ 1, %89 ], [ 1, %113 ], [ 2, %108 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  ret i32 %122
}

declare %"class.cc::LayerImpl"* @_ZN2cc13LayerTreeImpl45FindLayerThatIsHitByPointInTouchHandlerRegionERKN3gfx6PointFE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZNK2cc9LayerImpl20ScreenSpaceTransformEv(%"class.gfx::Transform"* sret, %"class.cc::LayerImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"*, %"class.gfx::Transform"*) local_unnamed_addr #6

declare { <2 x float>, float } @_ZN2cc8MathUtil14ProjectPoint3DERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::PointF"* dereferenceable(8), i8*) local_unnamed_addr #6

declare i64 @_ZN3gfx14ToRoundedPointERKNS_6PointFE(%"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

declare i32 @_ZNK2cc17TouchActionRegion21GetAllowedTouchActionERKN3gfx5PointE(%"class.cc::TouchActionRegion"*, %"class.gfx::Point"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler12IsScrolledByEPNS_9LayerImplEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::LayerImpl"* readonly, %"struct.cc::ScrollNode"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = icmp eq %"class.cc::LayerImpl"* %1, null
  br i1 %4, label %38, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %7 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %8 = bitcast %"class.cc::CompositorDelegateForInput"* %7 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %9 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, i64 3
  %11 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %10, align 8
  %12 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %11(%"class.cc::CompositorDelegateForInput"* %7) #19
  %13 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %1, i64 0, i32 20
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, 0
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %17, align 8
  %19 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %18, i64 %16
  %20 = icmp eq %"struct.cc::ScrollNode"* %19, null
  %21 = or i1 %20, %15
  br i1 %21, label %38, label %22

22:                                               ; preds = %5
  %23 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  br label %25

25:                                               ; preds = %22, %30
  %26 = phi %"struct.cc::ScrollNode"* [ %19, %22 ], [ %35, %30 ]
  %27 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %24
  br i1 %29, label %38, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %26, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %18, i64 %34
  %36 = icmp eq %"struct.cc::ScrollNode"* %35, null
  %37 = or i1 %36, %33
  br i1 %37, label %38, label %25

38:                                               ; preds = %30, %25, %5, %3
  %39 = phi i1 [ false, %3 ], [ false, %5 ], [ false, %30 ], [ true, %25 ]
  ret i1 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::SwapPromiseMonitor"* @_ZN2cc20ThreadedInputHandler35CreateLatencyInfoSwapPromiseMonitorEPN2ui11LatencyInfoE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.ui::LatencyInfo"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 22
  %8 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = tail call %"class.cc::SwapPromiseMonitor"* @_ZN2cc17LayerTreeHostImpl35CreateLatencyInfoSwapPromiseMonitorEPN2ui11LatencyInfoE(%"class.cc::LayerTreeHostImpl"* %9, %"class.ui::LatencyInfo"* %1) #19
  ret %"class.cc::SwapPromiseMonitor"* %10
}

declare %"class.cc::SwapPromiseMonitor"* @_ZN2cc17LayerTreeHostImpl35CreateLatencyInfoSwapPromiseMonitorEPN2ui11LatencyInfoE(%"class.cc::LayerTreeHostImpl"*, %"class.ui::LatencyInfo"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::EventsMetricsManager::ScopedMonitor"* @_ZN2cc20ThreadedInputHandler28GetScopedEventMetricsMonitorEN4base12OnceCallbackIFNSt3__110unique_ptrINS_12EventMetricsENS3_14default_deleteIS5_EEEEbEEE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.base::OnceCallback.1400"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.1400", align 8
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %5 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %5 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %7, i64 22
  %9 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %8, align 8
  %10 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %9(%"class.cc::CompositorDelegateForInput"* %5) #19
  %11 = getelementptr inbounds %"class.base::OnceCallback.1400", %"class.base::OnceCallback.1400"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback.1400"* %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback.1400"* %3 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = call %"class.cc::EventsMetricsManager::ScopedMonitor"* @_ZN2cc17LayerTreeHostImpl28GetScopedEventMetricsMonitorEN4base12OnceCallbackIFNSt3__110unique_ptrINS_12EventMetricsENS3_14default_deleteIS5_EEEEbEEE(%"class.cc::LayerTreeHostImpl"* %10, %"class.base::OnceCallback.1400"* nonnull %3) #19
  %16 = getelementptr inbounds %"class.base::OnceCallback.1400", %"class.base::OnceCallback.1400"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #19
  ret %"class.cc::EventsMetricsManager::ScopedMonitor"* %15
}

declare %"class.cc::EventsMetricsManager::ScopedMonitor"* @_ZN2cc17LayerTreeHostImpl28GetScopedEventMetricsMonitorEN4base12OnceCallbackIFNSt3__110unique_ptrINS_12EventMetricsENS3_14default_deleteIS5_EEEEbEEE(%"class.cc::LayerTreeHostImpl"*, %"class.base::OnceCallback.1400"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::ScrollElasticityHelper"* @_ZN2cc20ThreadedInputHandler28CreateScrollElasticityHelperEv(%"class.cc::ThreadedInputHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 21
  %7 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %8, i64 0, i32 42
  %10 = load i8, i8* %9, align 2, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %28, label %12

12:                                               ; preds = %1
  %13 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %14 = bitcast %"class.cc::CompositorDelegateForInput"* %13 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %15 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %14, align 8
  %16 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %15, i64 22
  %17 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %16, align 8
  %18 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %17(%"class.cc::CompositorDelegateForInput"* %13) #19
  %19 = tail call %"class.cc::ScrollElasticityHelper"* @_ZN2cc22ScrollElasticityHelper26CreateForLayerTreeHostImplEPNS_17LayerTreeHostImplE(%"class.cc::LayerTreeHostImpl"* %18) #19
  %20 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %20, align 8
  store %"class.cc::ScrollElasticityHelper"* %19, %"class.cc::ScrollElasticityHelper"** %20, align 8
  %22 = icmp eq %"class.cc::ScrollElasticityHelper"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %12
  %24 = bitcast %"class.cc::ScrollElasticityHelper"* %21 to void (%"class.cc::ScrollElasticityHelper"*)***
  %25 = load void (%"class.cc::ScrollElasticityHelper"*)**, void (%"class.cc::ScrollElasticityHelper"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %25, i64 1
  %27 = load void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %26, align 8
  tail call void %27(%"class.cc::ScrollElasticityHelper"* nonnull %21) #19
  br label %28

28:                                               ; preds = %23, %12, %1
  %29 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %30 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %29, align 8
  ret %"class.cc::ScrollElasticityHelper"* %30
}

declare %"class.cc::ScrollElasticityHelper"* @_ZN2cc22ScrollElasticityHelper26CreateForLayerTreeHostImplEPNS_17LayerTreeHostImplE(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler23GetScrollOffsetForLayerENS_9ElementIdEPN3gfx12ScrollOffsetE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64, %"class.gfx::ScrollOffset"* nocapture) unnamed_addr #5 align 2 {
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %5 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %5 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %7, i64 3
  %9 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, align 8
  %10 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %9(%"class.cc::CompositorDelegateForInput"* %5) #19
  %11 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %10, i64 %1) #19
  %12 = icmp eq %"struct.cc::ScrollNode"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %10, i64 %1) #19
  %15 = bitcast %"class.gfx::ScrollOffset"* %2 to <2 x float>*
  store <2 x float> %14, <2 x float>* %15, align 4
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi i1 [ true, %13 ], [ false, %3 ]
  ret i1 %17
}

declare <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler13ScrollLayerToENS_9ElementIdERKN3gfx12ScrollOffsetE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64, %"class.gfx::ScrollOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #5 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 3
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree21FindNodeFromElementIdENS_9ElementIdE(%"class.cc::ScrollTree"* %11, i64 %1) #19
  %13 = icmp eq %"struct.cc::ScrollNode"* %12, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %3
  %15 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %16 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %11, i64 %1) #19
  %18 = bitcast %"class.gfx::ScrollOffset"* %2 to <2 x float>*
  %19 = load <2 x float>, <2 x float>* %18, align 4
  %20 = fsub <2 x float> %19, %17
  store <2 x float> %20, <2 x float>* %4, align 8
  %21 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %22 = bitcast %"class.cc::CompositorDelegateForInput"* %21 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %23 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %22, align 8
  %24 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %23, i64 22
  %25 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %24, align 8
  %26 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %25(%"class.cc::CompositorDelegateForInput"* %21) #19
  %27 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %26, i64 0, i32 35, i32 0, i32 0, i32 0
  %28 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %27, align 8
  %29 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %11, %"struct.cc::ScrollNode"* nonnull dereferenceable(168) %12, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %15, %"class.cc::LayerTreeImpl"* %28) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  br label %30

30:                                               ; preds = %3, %14
  %31 = phi i1 [ true, %14 ], [ false, %3 ]
  ret i1 %31
}

declare <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), %"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler33ScrollingShouldSwitchtoMainThreadEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, -1
  br i1 %14, label %15, label %32

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cc::ScrollTree", %"class.cc::ScrollTree"* %8, i64 0, i32 0, i32 1, i32 0, i32 0
  %17 = load %"struct.cc::ScrollNode"*, %"struct.cc::ScrollNode"** %16, align 8
  br label %18

18:                                               ; preds = %15, %28
  %19 = phi i32 [ %13, %15 ], [ %30, %28 ]
  %20 = phi %"struct.cc::ScrollNode"* [ %9, %15 ], [ %22, %28 ]
  %21 = sext i32 %19 to i64
  %22 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %17, i64 %21
  %23 = icmp eq %"struct.cc::ScrollNode"* %22, null
  br i1 %23, label %32, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %20, i64 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %32

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %17, i64 %21, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %18, label %32

32:                                               ; preds = %24, %18, %28, %11, %1
  %33 = phi i1 [ true, %1 ], [ false, %11 ], [ true, %24 ], [ false, %18 ], [ false, %28 ]
  ret i1 %33
}

declare %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler41GetSnapFlingInfoAndSetAnimatingSnapTargetERKN3gfx9Vector2dFEPS2_S5_(%"class.cc::ThreadedInputHandler"* nocapture, %"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"*) unnamed_addr #5 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::ScrollOffset"*
  %7 = alloca %"struct.cc::TargetSnapAreaElementIds", align 8
  %8 = alloca %"struct.cc::ElementId", align 8
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %10 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %11 = bitcast %"class.cc::CompositorDelegateForInput"* %10 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %12 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %12, i64 3
  %14 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %13, align 8
  %15 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %14(%"class.cc::CompositorDelegateForInput"* %10) #19
  %16 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %15) #19
  %17 = icmp eq %"struct.cc::ScrollNode"* %16, null
  br i1 %17, label %113, label %18

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %113, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %25 = bitcast %"class.cc::CompositorDelegateForInput"* %24 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %26 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %26, i64 22
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %27, align 8
  %29 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %28(%"class.cc::CompositorDelegateForInput"* %24) #19
  %30 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %29, i64 0, i32 35, i32 0, i32 0, i32 0
  %31 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %31, i64 0, i32 13
  %33 = load float, float* %32, align 8
  %34 = tail call %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"* %31) #19
  %35 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"* %31) #19
  br i1 %35, label %36, label %40

36:                                               ; preds = %22
  %37 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 3, i32 0
  %38 = load float, float* %37, align 4
  %39 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 2, i32 0
  br label %53

40:                                               ; preds = %22
  %41 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 6
  %42 = load i8, i8* %41, align 4, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 5, i32 0
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 3, i32 0
  %48 = load float, float* %47, align 4
  %49 = fdiv float %48, %46
  br label %50

50:                                               ; preds = %44, %40
  %51 = phi float [ %49, %44 ], [ 1.000000e+00, %40 ]
  %52 = getelementptr inbounds %"class.cc::SyncedProperty", %"class.cc::SyncedProperty"* %34, i64 0, i32 1, i32 0
  br label %53

53:                                               ; preds = %36, %50
  %54 = phi float* [ %39, %36 ], [ %52, %50 ]
  %55 = phi float [ %38, %36 ], [ %51, %50 ]
  %56 = load float, float* %54, align 4
  %57 = fmul float %55, %56
  %58 = fmul float %33, %57
  %59 = fdiv float 1.000000e+00, %58
  %60 = tail call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8) %1, float %59, float %59) #19
  %61 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 5
  %62 = load i8, i8* %61, align 4
  %63 = and i8 %62, 8
  %64 = icmp eq i8 %63, 0
  %65 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  br i1 %64, label %75, label %66

66:                                               ; preds = %53
  %67 = bitcast %"class.cc::CompositorDelegateForInput"* %65 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %68 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %67, align 8
  %69 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %68, i64 22
  %70 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %69, align 8
  %71 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %70(%"class.cc::CompositorDelegateForInput"* %65) #19
  %72 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %71, i64 0, i32 74, i32 0, i32 0, i32 0
  %73 = load %"class.cc::Viewport"*, %"class.cc::Viewport"** %72, align 8
  %74 = tail call <2 x float> @_ZNK2cc8Viewport17TotalScrollOffsetEv(%"class.cc::Viewport"* %73) #19
  br label %84

75:                                               ; preds = %53
  %76 = bitcast %"class.cc::CompositorDelegateForInput"* %65 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %77 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %76, align 8
  %78 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %77, i64 3
  %79 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %78, align 8
  %80 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %79(%"class.cc::CompositorDelegateForInput"* %65) #19
  %81 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %16, i64 0, i32 8, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = tail call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %80, i64 %82) #19
  br label %84

84:                                               ; preds = %66, %75
  %85 = phi <2 x float> [ %74, %66 ], [ %83, %75 ]
  %86 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  store <2 x float> %85, <2 x float>* %86, align 4
  %87 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #19
  %88 = getelementptr inbounds <2 x float>, <2 x float>* %5, i64 0, i64 0
  %89 = getelementptr inbounds %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset"* %6, i64 0, i32 1
  store float 0.000000e+00, float* %88, align 8
  store float 0.000000e+00, float* %89, align 4
  %90 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %90) #19
  %91 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %7, i64 0, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.cc::TargetSnapAreaElementIds", %"struct.cc::TargetSnapAreaElementIds"* %7, i64 0, i32 1, i32 0
  %93 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %93, i64* %91, align 8
  store i64 %93, i64* %92, align 8
  %94 = tail call %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy24CreateForEndAndDirectionEN3gfx12ScrollOffsetES2_b(<2 x float> %85, <2 x float> %60, i1 zeroext true) #19
  %95 = bitcast %"struct.cc::ElementId"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #19
  %96 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 0, i32 0
  store i64 %93, i64* %96, align 8
  %97 = call zeroext i1 @_ZNK2cc17SnapContainerData16FindSnapPositionERKNS_21SnapSelectionStrategyEPN3gfx12ScrollOffsetEPNS_24TargetSnapAreaElementIdsERKNS_9ElementIdE(%"class.cc::SnapContainerData"* %23, %"class.cc::SnapSelectionStrategy"* dereferenceable(16) %94, %"class.gfx::ScrollOffset"* nonnull %6, %"struct.cc::TargetSnapAreaElementIds"* nonnull %7, %"struct.cc::ElementId"* nonnull dereferenceable(8) %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #19
  br i1 %97, label %98, label %104

98:                                               ; preds = %84
  %99 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11
  %100 = bitcast %"struct.cc::TargetSnapAreaElementIds"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* nonnull align 8 %90, i64 16, i1 false)
  %101 = bitcast <2 x float>* %5 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.gfx::Vector2dF"* %3 to i64*
  store i64 %102, i64* %103, align 4
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* %3, float %58, float %58) #19
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* %2, float %58, float %58) #19
  br label %104

104:                                              ; preds = %84, %98
  %105 = phi i1 [ true, %98 ], [ false, %84 ]
  %106 = icmp eq %"class.cc::SnapSelectionStrategy"* %94, null
  br i1 %106, label %112, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.cc::SnapSelectionStrategy"* %94 to void (%"class.cc::SnapSelectionStrategy"*)***
  %109 = load void (%"class.cc::SnapSelectionStrategy"*)**, void (%"class.cc::SnapSelectionStrategy"*)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %109, i64 1
  %111 = load void (%"class.cc::SnapSelectionStrategy"*)*, void (%"class.cc::SnapSelectionStrategy"*)** %110, align 8
  call void %111(%"class.cc::SnapSelectionStrategy"* nonnull %94) #19
  br label %112

112:                                              ; preds = %104, %107
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %90) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #19
  br label %113

113:                                              ; preds = %18, %4, %112
  %114 = phi i1 [ %105, %112 ], [ false, %4 ], [ false, %18 ]
  ret i1 %114
}

declare %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy24CreateForEndAndDirectionEN3gfx12ScrollOffsetES2_b(<2 x float>, <2 x float>, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler21ScrollEndForSnapFlingEb(%"class.cc::ThreadedInputHandler"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %4 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %5 = bitcast %"class.cc::CompositorDelegateForInput"* %4 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %6 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, i64 3
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %7, align 8
  %9 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %8(%"class.cc::CompositorDelegateForInput"* %4) #19
  %10 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %9) #19
  %11 = icmp ne %"struct.cc::ScrollNode"* %10, null
  %12 = and i1 %11, %1
  br i1 %12, label %13, label %71

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %71, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = tail call zeroext i1 @_ZN2cc17SnapContainerData27SetTargetSnapAreaElementIdsENS_24TargetSnapAreaElementIdsE(%"class.cc::SnapContainerData"* %18, i64 %20, i64 %22) #19
  %24 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %10, i64 0, i32 8
  %26 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %24, i64 0, i32 0, i32 0, i32 0
  %27 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %26, align 8
  %28 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.cc::ElementId"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = ptrtoint %"struct.cc::ElementId"* %27 to i64
  %32 = sub i64 %30, %31
  %33 = icmp eq i64 %32, 0
  %34 = inttoptr i64 %30 to %"struct.cc::ElementId"*
  br i1 %33, label %53, label %35

35:                                               ; preds = %17
  %36 = ashr exact i64 %32, 3
  %37 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %25, i64 0, i32 0
  %38 = load i64, i64* %37, align 8
  br label %39

39:                                               ; preds = %39, %35
  %40 = phi %"struct.cc::ElementId"* [ %27, %35 ], [ %51, %39 ]
  %41 = phi i64 [ %36, %35 ], [ %50, %39 ]
  %42 = lshr i64 %41, 1
  %43 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %40, i64 %42
  %44 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %43, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, %38
  %47 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %43, i64 1
  %48 = xor i64 %42, -1
  %49 = add i64 %41, %48
  %50 = select i1 %46, i64 %49, i64 %42
  %51 = select i1 %46, %"struct.cc::ElementId"* %47, %"struct.cc::ElementId"* %40
  %52 = icmp eq i64 %50, 0
  br i1 %52, label %53, label %39

53:                                               ; preds = %39, %17
  %54 = phi %"struct.cc::ElementId"* [ %27, %17 ], [ %51, %39 ]
  %55 = icmp eq %"struct.cc::ElementId"* %54, %34
  br i1 %55, label %62, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %25, i64 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %54, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = icmp ult i64 %58, %60
  br i1 %61, label %62, label %65

62:                                               ; preds = %56, %53
  %63 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %24, i64 0, i32 0
  %64 = tail call %"struct.cc::ElementId"* @_ZNSt3__16vectorIN2cc9ElementIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector"* %63, %"struct.cc::ElementId"* %54, %"struct.cc::ElementId"* dereferenceable(8) %25) #19
  br label %65

65:                                               ; preds = %56, %62
  %66 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %3, align 8
  %67 = bitcast %"class.cc::CompositorDelegateForInput"* %66 to void (%"class.cc::CompositorDelegateForInput"*)***
  %68 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %68, i64 5
  %70 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %69, align 8
  tail call void %70(%"class.cc::CompositorDelegateForInput"* %66) #19
  br label %71

71:                                               ; preds = %13, %65, %2
  %72 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %73 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %72, i64* %74, align 8
  %75 = bitcast %"class.cc::ThreadedInputHandler"* %0 to void (%"class.cc::ThreadedInputHandler"*, i1)***
  %76 = load void (%"class.cc::ThreadedInputHandler"*, i1)**, void (%"class.cc::ThreadedInputHandler"*, i1)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.cc::ThreadedInputHandler"*, i1)*, void (%"class.cc::ThreadedInputHandler"*, i1)** %76, i64 5
  %78 = load void (%"class.cc::ThreadedInputHandler"*, i1)*, void (%"class.cc::ThreadedInputHandler"*, i1)** %77, align 8
  tail call void %78(%"class.cc::ThreadedInputHandler"* %0, i1 zeroext false) #19
  ret void
}

declare zeroext i1 @_ZN2cc17SnapContainerData27SetTargetSnapAreaElementIdsENS_24TargetSnapAreaElementIdsE(%"class.cc::SnapContainerData"*, i64, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler16NotifyInputEventEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 22
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  tail call void @_ZN2cc17LayerTreeHostImpl16NotifyInputEventEv(%"class.cc::LayerTreeHostImpl"* %8) #19
  ret void
}

declare void @_ZN2cc17LayerTreeHostImpl16NotifyInputEventEv(%"class.cc::LayerTreeHostImpl"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler19ProcessCommitDeltasEPNS_20CompositorCommitDataE(%"class.cc::ThreadedInputHandler"* nocapture, %"struct.cc::CompositorCommitData"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::internal::flat_tree", align 16
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %5 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %5 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %7, i64 22
  %9 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %8, align 8
  %10 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %9(%"class.cc::CompositorDelegateForInput"* %5) #19
  %11 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %10, i64 0, i32 35, i32 0, i32 0, i32 0
  %12 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %11, align 8
  %13 = tail call zeroext i1 @_ZNK2cc13LayerTreeImpl16LayerListIsEmptyEv(%"class.cc::LayerTreeImpl"* %12) #19
  br i1 %13, label %133, label %14

14:                                               ; preds = %2
  %15 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %16 = bitcast %"class.cc::CompositorDelegateForInput"* %15 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %17 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %17, i64 22
  %19 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %18, align 8
  %20 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %19(%"class.cc::CompositorDelegateForInput"* %15) #19
  %21 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %20, i64 0, i32 35, i32 0, i32 0, i32 0
  %22 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %21, align 8
  %23 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %22) #19
  %24 = icmp eq %"struct.cc::ScrollNode"* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %14
  %26 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %27 = bitcast %"class.cc::CompositorDelegateForInput"* %26 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %28, i64 22
  %30 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %29, align 8
  %31 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %30(%"class.cc::CompositorDelegateForInput"* %26) #19
  %32 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %31, i64 0, i32 35, i32 0, i32 0, i32 0
  %33 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %32, align 8
  %34 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %33) #19
  %35 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 0, i32 8, i32 0
  br label %36

36:                                               ; preds = %14, %25
  %37 = phi i64* [ %35, %25 ], [ @_ZN2cc9ElementId17kInvalidElementIdE, %14 ]
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.base::internal::flat_tree"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #19
  %40 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %3, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12
  %44 = bitcast %"class.base::internal::flat_tree"* %43 to <2 x i64>*
  %45 = load <2 x i64>, <2 x i64>* %44, align 8
  %46 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.cc::ElementId"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"struct.cc::ElementId"** %41 to i64*
  %50 = bitcast %"struct.cc::ElementId"** %42 to i64*
  %51 = bitcast %"class.base::internal::flat_tree"* %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false)
  %52 = bitcast %"class.base::internal::flat_tree"* %3 to <2 x i64>*
  store <2 x i64> %45, <2 x i64>* %52, align 16
  store i64 %48, i64* %50, align 16
  %53 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %54 = bitcast %"class.cc::CompositorDelegateForInput"* %53 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %55 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %54, align 8
  %56 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %55, i64 3
  %57 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %56, align 8
  %58 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %57(%"class.cc::CompositorDelegateForInput"* %53) #19
  %59 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %60 = bitcast %"class.cc::CompositorDelegateForInput"* %59 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %61 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %60, align 8
  %62 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %61, i64 21
  %63 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %62, align 8
  %64 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %63(%"class.cc::CompositorDelegateForInput"* %59) #19
  %65 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %64, i64 0, i32 72
  %66 = load i8, i8* %65, align 4, !range !2
  %67 = icmp ne i8 %66, 0
  call void @_ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE(%"class.cc::ScrollTree"* %58, %"struct.cc::CompositorCommitData"* %1, i64 %38, i1 zeroext %67, %"class.base::internal::flat_tree"* nonnull dereferenceable(24) %3) #19
  %68 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 25
  %69 = load i8, i8* %68, align 1, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %75, label %71

71:                                               ; preds = %36
  %72 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 18
  %73 = load i32, i32* %72, align 8
  %74 = or i32 %73, 1
  store i32 %74, i32* %72, align 8
  br label %75

75:                                               ; preds = %36, %71
  %76 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 26
  %77 = load i8, i8* %76, align 2, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %83, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 18
  %81 = load i32, i32* %80, align 8
  %82 = or i32 %81, 2
  store i32 %82, i32* %80, align 8
  br label %83

83:                                               ; preds = %75, %79
  %84 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 27
  %85 = load i8, i8* %84, align 1, !range !2
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %91, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 18
  %89 = load i32, i32* %88, align 8
  %90 = or i32 %89, 4
  store i32 %90, i32* %88, align 8
  br label %91

91:                                               ; preds = %83, %87
  %92 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 24
  %93 = load i8, i8* %92, align 8, !range !2
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %99, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 18
  %97 = load i32, i32* %96, align 8
  %98 = or i32 %97, 8
  store i32 %98, i32* %96, align 8
  br label %99

99:                                               ; preds = %91, %95
  %100 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 28
  %101 = load i8, i8* %100, align 4, !range !2
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %107, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 18
  %105 = load i32, i32* %104, align 8
  %106 = or i32 %105, 16
  store i32 %106, i32* %104, align 8
  br label %107

107:                                              ; preds = %99, %103
  %108 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 17
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 5, i1 false)
  %109 = load i8, i8* %108, align 1, !range !2
  %110 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 15
  store i8 %109, i8* %110, align 1
  store i8 0, i8* %108, align 1
  %111 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 7
  %112 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 7
  %113 = bitcast %"class.gfx::Vector2dF"* %111 to i64*
  %114 = bitcast %"class.gfx::Vector2dF"* %112 to i64*
  %115 = load i64, i64* %113, align 4
  store i64 %115, i64* %114, align 8
  %116 = bitcast %"class.gfx::Vector2dF"* %111 to i32*
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 7, i32 1
  %118 = bitcast float* %117 to i32*
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 15, i32 0
  %120 = getelementptr inbounds %"struct.cc::CompositorCommitData", %"struct.cc::CompositorCommitData"* %1, i64 0, i32 8, i32 0
  %121 = load i64, i64* %119, align 8
  store i64 %121, i64* %120, align 8
  %122 = load i8, i8* %110, align 1, !range !2
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %126, label %124

124:                                              ; preds = %107
  %125 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  store i64 %125, i64* %119, align 8
  br label %126

126:                                              ; preds = %107, %124
  %127 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %40, align 16
  %128 = icmp eq %"struct.cc::ElementId"* %127, null
  br i1 %128, label %132, label %129

129:                                              ; preds = %126
  %130 = ptrtoint %"struct.cc::ElementId"* %127 to i64
  store i64 %130, i64* %49, align 8
  %131 = bitcast %"struct.cc::ElementId"* %127 to i8*
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #19
  br label %133

133:                                              ; preds = %2, %132
  ret void
}

declare zeroext i1 @_ZNK2cc13LayerTreeImpl16LayerListIsEmptyEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare void @_ZN2cc10ScrollTree19CollectScrollDeltasEPNS_20CompositorCommitDataENS_9ElementIdEbRKN4base8internal9flat_treeIS3_NS4_8identityENSt3__14lessIvEENS8_6vectorIS3_NS8_9allocatorIS3_EEEEEE(%"class.cc::ScrollTree"*, %"struct.cc::CompositorCommitData"*, i64, i1 zeroext, %"class.base::internal::flat_tree"* dereferenceable(24)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler19ProcessCommitDeltasEPNS_20CompositorCommitDataE(%"class.cc::ThreadedInputHandler"* nocapture, %"struct.cc::CompositorCommitData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %4 = bitcast i64* %3 to %"class.cc::ThreadedInputHandler"*
  tail call void @_ZN2cc20ThreadedInputHandler19ProcessCommitDeltasEPNS_20CompositorCommitDataE(%"class.cc::ThreadedInputHandler"* %4, %"struct.cc::CompositorCommitData"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler14TickAnimationsEN4base9TimeTicksE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %4 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %3, align 8
  %5 = icmp eq %"class.cc::InputHandlerClient"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.cc::InputHandlerClient"* %4 to void (%"class.cc::InputHandlerClient"*, i64)***
  %8 = load void (%"class.cc::InputHandlerClient"*, i64)**, void (%"class.cc::InputHandlerClient"*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*, i64)*, void (%"class.cc::InputHandlerClient"*, i64)** %8, i64 3
  %10 = load void (%"class.cc::InputHandlerClient"*, i64)*, void (%"class.cc::InputHandlerClient"*, i64)** %9, align 8
  tail call void %10(%"class.cc::InputHandlerClient"* nonnull %4, i64 %1) #19
  br label %11

11:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler14TickAnimationsEN4base9TimeTicksE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 3
  %5 = bitcast i64* %4 to %"class.cc::InputHandlerClient"**
  %6 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %5, align 8
  %7 = icmp eq %"class.cc::InputHandlerClient"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.cc::InputHandlerClient"* %6 to void (%"class.cc::InputHandlerClient"*, i64)***
  %10 = load void (%"class.cc::InputHandlerClient"*, i64)**, void (%"class.cc::InputHandlerClient"*, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*, i64)*, void (%"class.cc::InputHandlerClient"*, i64)** %10, i64 3
  %12 = load void (%"class.cc::InputHandlerClient"*, i64)*, void (%"class.cc::InputHandlerClient"*, i64)** %11, align 8
  tail call void %12(%"class.cc::InputHandlerClient"* nonnull %6, i64 %1) #19
  br label %13

13:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler12WillShutdownEv(%"class.cc::ThreadedInputHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %3 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %2, align 8
  %4 = icmp eq %"class.cc::InputHandlerClient"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::InputHandlerClient"* %3 to void (%"class.cc::InputHandlerClient"*)***
  %7 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %7, i64 2
  %9 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %8, align 8
  tail call void %9(%"class.cc::InputHandlerClient"* nonnull %3) #19
  store %"class.cc::InputHandlerClient"* null, %"class.cc::InputHandlerClient"** %2, align 8
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %11, align 8
  %13 = icmp eq %"class.cc::ScrollElasticityHelper"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  store %"class.cc::ScrollElasticityHelper"* null, %"class.cc::ScrollElasticityHelper"** %11, align 8
  %15 = bitcast %"class.cc::ScrollElasticityHelper"* %12 to void (%"class.cc::ScrollElasticityHelper"*)***
  %16 = load void (%"class.cc::ScrollElasticityHelper"*)**, void (%"class.cc::ScrollElasticityHelper"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %16, i64 1
  %18 = load void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %17, align 8
  tail call void %18(%"class.cc::ScrollElasticityHelper"* nonnull %12) #19
  br label %19

19:                                               ; preds = %10, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler12WillShutdownEv(%"class.cc::ThreadedInputHandler"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 3
  %4 = bitcast i64* %3 to %"class.cc::InputHandlerClient"**
  %5 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %4, align 8
  %6 = icmp eq %"class.cc::InputHandlerClient"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.cc::InputHandlerClient"* %5 to void (%"class.cc::InputHandlerClient"*)***
  %9 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %9, i64 2
  %11 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %10, align 8
  tail call void %11(%"class.cc::InputHandlerClient"* nonnull %5) #19
  store %"class.cc::InputHandlerClient"* null, %"class.cc::InputHandlerClient"** %4, align 8
  br label %12

12:                                               ; preds = %7, %1
  %13 = getelementptr inbounds i64, i64* %2, i64 4
  %14 = bitcast i64* %13 to %"class.cc::ScrollElasticityHelper"**
  %15 = load %"class.cc::ScrollElasticityHelper"*, %"class.cc::ScrollElasticityHelper"** %14, align 8
  %16 = icmp eq %"class.cc::ScrollElasticityHelper"* %15, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %12
  store %"class.cc::ScrollElasticityHelper"* null, %"class.cc::ScrollElasticityHelper"** %14, align 8
  %18 = bitcast %"class.cc::ScrollElasticityHelper"* %15 to void (%"class.cc::ScrollElasticityHelper"*)***
  %19 = load void (%"class.cc::ScrollElasticityHelper"*)**, void (%"class.cc::ScrollElasticityHelper"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %19, i64 1
  %21 = load void (%"class.cc::ScrollElasticityHelper"*)*, void (%"class.cc::ScrollElasticityHelper"*)** %20, align 8
  tail call void %21(%"class.cc::ScrollElasticityHelper"* nonnull %15) #19
  br label %22

22:                                               ; preds = %12, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler8WillDrawEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %3 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %2, align 8
  %4 = icmp eq %"class.cc::InputHandlerClient"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.cc::InputHandlerClient"* %3 to void (%"class.cc::InputHandlerClient"*)***
  %7 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %7, i64 4
  %9 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %8, align 8
  tail call void %9(%"class.cc::InputHandlerClient"* nonnull %3) #19
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler8WillDrawEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 3
  %4 = bitcast i64* %3 to %"class.cc::InputHandlerClient"**
  %5 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %4, align 8
  %6 = icmp eq %"class.cc::InputHandlerClient"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.cc::InputHandlerClient"* %5 to void (%"class.cc::InputHandlerClient"*)***
  %9 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %9, i64 4
  %11 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %10, align 8
  tail call void %11(%"class.cc::InputHandlerClient"* nonnull %5) #19
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler18WillBeginImplFrameERKN3viz14BeginFrameArgsE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %4 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %3, align 8
  %5 = icmp eq %"class.cc::InputHandlerClient"* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %8 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %7, align 8
  tail call void @_ZN2cc19ScrollbarController18WillBeginImplFrameEv(%"class.cc::ScrollbarController"* %8) #19
  %9 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %3, align 8
  %10 = bitcast %"class.cc::InputHandlerClient"* %9 to void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)***
  %11 = load void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)**, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)** %11, i64 6
  %13 = load void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)** %12, align 8
  tail call void %13(%"class.cc::InputHandlerClient"* %9, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1) #19
  br label %14

14:                                               ; preds = %2, %6
  ret void
}

declare void @_ZN2cc19ScrollbarController18WillBeginImplFrameEv(%"class.cc::ScrollbarController"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler18WillBeginImplFrameERKN3viz14BeginFrameArgsE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.viz::BeginFrameArgs"* dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %4 = getelementptr inbounds i64, i64* %3, i64 3
  %5 = bitcast i64* %4 to %"class.cc::InputHandlerClient"**
  %6 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %5, align 8
  %7 = icmp eq %"class.cc::InputHandlerClient"* %6, null
  br i1 %7, label %17, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i64, i64* %3, i64 5
  %10 = bitcast i64* %9 to %"class.cc::ScrollbarController"**
  %11 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %10, align 8
  tail call void @_ZN2cc19ScrollbarController18WillBeginImplFrameEv(%"class.cc::ScrollbarController"* %11) #19
  %12 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %5, align 8
  %13 = bitcast %"class.cc::InputHandlerClient"* %12 to void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)***
  %14 = load void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)**, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)** %14, i64 6
  %16 = load void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)*, void (%"class.cc::InputHandlerClient"*, %"struct.viz::BeginFrameArgs"*)** %15, align 8
  tail call void %16(%"class.cc::InputHandlerClient"* %12, %"struct.viz::BeginFrameArgs"* dereferenceable(64) %1) #19
  br label %17

17:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler9DidCommitEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 3
  %3 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %2, align 8
  %4 = icmp eq %"class.cc::InputHandlerClient"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %7 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %8 = bitcast %"class.cc::CompositorDelegateForInput"* %7 to i1 (%"class.cc::CompositorDelegateForInput"*)***
  %9 = load i1 (%"class.cc::CompositorDelegateForInput"*)**, i1 (%"class.cc::CompositorDelegateForInput"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %9, i64 15
  %11 = load i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.cc::CompositorDelegateForInput"* %7) #19
  br i1 %12, label %13, label %19

13:                                               ; preds = %5
  %14 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %2, align 8
  %15 = bitcast %"class.cc::InputHandlerClient"* %14 to void (%"class.cc::InputHandlerClient"*)***
  %16 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %16, i64 7
  %18 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %17, align 8
  tail call void %18(%"class.cc::InputHandlerClient"* %14) #19
  br label %19

19:                                               ; preds = %1, %13, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler9DidCommitEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 3
  %4 = bitcast i64* %3 to %"class.cc::InputHandlerClient"**
  %5 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %4, align 8
  %6 = icmp eq %"class.cc::InputHandlerClient"* %5, null
  br i1 %6, label %22, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds i64, i64* %2, i64 2
  %9 = bitcast i64* %8 to %"class.cc::CompositorDelegateForInput"**
  %10 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %11 = bitcast %"class.cc::CompositorDelegateForInput"* %10 to i1 (%"class.cc::CompositorDelegateForInput"*)***
  %12 = load i1 (%"class.cc::CompositorDelegateForInput"*)**, i1 (%"class.cc::CompositorDelegateForInput"*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %12, i64 15
  %14 = load i1 (%"class.cc::CompositorDelegateForInput"*)*, i1 (%"class.cc::CompositorDelegateForInput"*)** %13, align 8
  %15 = tail call zeroext i1 %14(%"class.cc::CompositorDelegateForInput"* %10) #19
  br i1 %15, label %16, label %22

16:                                               ; preds = %7
  %17 = load %"class.cc::InputHandlerClient"*, %"class.cc::InputHandlerClient"** %4, align 8
  %18 = bitcast %"class.cc::InputHandlerClient"* %17 to void (%"class.cc::InputHandlerClient"*)***
  %19 = load void (%"class.cc::InputHandlerClient"*)**, void (%"class.cc::InputHandlerClient"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %19, i64 7
  %21 = load void (%"class.cc::InputHandlerClient"*)*, void (%"class.cc::InputHandlerClient"*)** %20, align 8
  tail call void %21(%"class.cc::InputHandlerClient"* %17) #19
  br label %22

22:                                               ; preds = %1, %7, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler22DidActivatePendingTreeEv(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %1
  tail call void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* %0)
  br label %12

12:                                               ; preds = %1, %11
  tail call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler22DidActivatePendingTreeEv(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  %4 = getelementptr inbounds i64, i64* %2, i64 2
  %5 = bitcast i64* %4 to %"class.cc::CompositorDelegateForInput"**
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 3
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %11) #19
  %13 = icmp eq %"struct.cc::ScrollNode"* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %1
  tail call void @_ZN2cc20ThreadedInputHandler27ClearCurrentlyScrollingNodeEv(%"class.cc::ThreadedInputHandler"* %3) #19
  br label %15

15:                                               ; preds = %1, %14
  tail call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler28RootLayerStateMayHaveChangedEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  tail call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler28RootLayerStateMayHaveChangedEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  tail call void @_ZN2cc20ThreadedInputHandler46UpdateRootLayerStateForSynchronousInputHandlerEv(%"class.cc::ThreadedInputHandler"* %3) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %5 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %4, align 8
  tail call void @_ZN2cc19ScrollbarController22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE(%"class.cc::ScrollbarController"* %5, i64 %1, i32 %2) #19
  ret void
}

declare void @_ZN2cc19ScrollbarController22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE(%"class.cc::ScrollbarController"*, i64, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE(%"class.cc::ThreadedInputHandler"* nocapture readonly, i64, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %5 = getelementptr inbounds i64, i64* %4, i64 5
  %6 = bitcast i64* %5 to %"class.cc::ScrollbarController"**
  %7 = load %"class.cc::ScrollbarController"*, %"class.cc::ScrollbarController"** %6, align 8
  tail call void @_ZN2cc19ScrollbarController22DidUnregisterScrollbarENS_9ElementIdENS_20ScrollbarOrientationE(%"class.cc::ScrollbarController"* %7, i64 %1, i32 %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler29ScrollOffsetAnimationFinishedEv(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.base::TimeTicks", align 8
  %3 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %4 = and i8 %3, 25
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6, !prof !6

6:                                                ; preds = %1
  %7 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %8 = bitcast %"class.base::TimeTicks"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #19
  %9 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %2, i64 0, i32 0, i32 0
  %10 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %10, i64* %9, align 8
  %11 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %7, %"class.base::TimeTicks"* nonnull dereferenceable(8) %2, %"class.base::trace_event::TraceArguments"* null, i32 0) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #19
  br label %12

12:                                               ; preds = %1, %6
  %13 = phi i64 [ -6148914691236517206, %1 ], [ %11, %6 ]
  %14 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %1 ], [ getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19, i64 0, i64 0), %6 ]
  %15 = phi i8* [ null, %1 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %6 ]
  %16 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %17 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %16, %18
  br i1 %19, label %20, label %26

20:                                               ; preds = %12
  %21 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %16, %22
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = call zeroext i1 @_ZN2cc20ThreadedInputHandler15SnapAtScrollEndENS0_10SnapReasonE(%"class.cc::ThreadedInputHandler"* %0, i32 1)
  br i1 %25, label %103, label %26

26:                                               ; preds = %20, %12, %24
  %27 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %28 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %27, align 8
  %29 = bitcast %"class.cc::CompositorDelegateForInput"* %28 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %30 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %30, i64 3
  %32 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %31, align 8
  %33 = call dereferenceable(120) %"class.cc::ScrollTree"* %32(%"class.cc::CompositorDelegateForInput"* %28) #19
  %34 = call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %33) #19
  %35 = icmp eq %"struct.cc::ScrollNode"* %34, null
  br i1 %35, label %93, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %93, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = load i64, i64* %17, align 8
  %43 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = call zeroext i1 @_ZN2cc17SnapContainerData27SetTargetSnapAreaElementIdsENS_24TargetSnapAreaElementIdsE(%"class.cc::SnapContainerData"* %41, i64 %42, i64 %44) #19
  %46 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12
  %47 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %34, i64 0, i32 8
  %48 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %46, i64 0, i32 0, i32 0, i32 0
  %49 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %48, align 8
  %50 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %51 = bitcast %"struct.cc::ElementId"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = ptrtoint %"struct.cc::ElementId"* %49 to i64
  %54 = sub i64 %52, %53
  %55 = icmp eq i64 %54, 0
  %56 = inttoptr i64 %52 to %"struct.cc::ElementId"*
  br i1 %55, label %75, label %57

57:                                               ; preds = %40
  %58 = ashr exact i64 %54, 3
  %59 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %47, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  br label %61

61:                                               ; preds = %61, %57
  %62 = phi %"struct.cc::ElementId"* [ %49, %57 ], [ %73, %61 ]
  %63 = phi i64 [ %58, %57 ], [ %72, %61 ]
  %64 = lshr i64 %63, 1
  %65 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %62, i64 %64
  %66 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %65, i64 0, i32 0
  %67 = load i64, i64* %66, align 8
  %68 = icmp ult i64 %67, %60
  %69 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %65, i64 1
  %70 = xor i64 %64, -1
  %71 = add i64 %63, %70
  %72 = select i1 %68, i64 %71, i64 %64
  %73 = select i1 %68, %"struct.cc::ElementId"* %69, %"struct.cc::ElementId"* %62
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %61, %40
  %76 = phi %"struct.cc::ElementId"* [ %49, %40 ], [ %73, %61 ]
  %77 = icmp eq %"struct.cc::ElementId"* %76, %56
  br i1 %77, label %84, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %47, i64 0, i32 0
  %80 = load i64, i64* %79, align 8
  %81 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %76, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = icmp ult i64 %80, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %78, %75
  %85 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %46, i64 0, i32 0
  %86 = call %"struct.cc::ElementId"* @_ZNSt3__16vectorIN2cc9ElementIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector"* %85, %"struct.cc::ElementId"* %76, %"struct.cc::ElementId"* dereferenceable(8) %47) #19
  br label %87

87:                                               ; preds = %78, %84
  %88 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %27, align 8
  %89 = bitcast %"class.cc::CompositorDelegateForInput"* %88 to void (%"class.cc::CompositorDelegateForInput"*)***
  %90 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %90, i64 5
  %92 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %91, align 8
  call void %92(%"class.cc::CompositorDelegateForInput"* %88) #19
  br label %93

93:                                               ; preds = %36, %26, %87
  store i64 %16, i64* %17, align 8
  %94 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %16, i64* %94, align 8
  %95 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 16
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = bitcast %"class.cc::ThreadedInputHandler"* %0 to void (%"class.cc::ThreadedInputHandler"*, i1)***
  %100 = load void (%"class.cc::ThreadedInputHandler"*, i1)**, void (%"class.cc::ThreadedInputHandler"*, i1)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.cc::ThreadedInputHandler"*, i1)*, void (%"class.cc::ThreadedInputHandler"*, i1)** %100, i64 5
  %102 = load void (%"class.cc::ThreadedInputHandler"*, i1)*, void (%"class.cc::ThreadedInputHandler"*, i1)** %101, align 8
  call void %102(%"class.cc::ThreadedInputHandler"* %0, i1 zeroext false) #19
  br label %103

103:                                              ; preds = %98, %93, %24
  %104 = icmp eq i8* %15, null
  br i1 %104, label %109, label %105

105:                                              ; preds = %103
  %106 = load i8, i8* %15, align 1
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %109, label %108

108:                                              ; preds = %105
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %15, i8* %14, i64 %13) #19
  br label %109

109:                                              ; preds = %103, %105, %108
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler18IsAnimatingForSnapEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %3 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %2, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp ne i64 %2, %8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i1 [ true, %1 ], [ %9, %6 ]
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N2cc20ThreadedInputHandler29ScrollOffsetAnimationFinishedEv(%"class.cc::ThreadedInputHandler"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  tail call void @_ZN2cc20ThreadedInputHandler29ScrollOffsetAnimationFinishedEv(%"class.cc::ThreadedInputHandler"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2cc20ThreadedInputHandler20IsCurrentlyScrollingEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  %10 = icmp ne %"struct.cc::ScrollNode"* %9, null
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn8_NK2cc20ThreadedInputHandler20IsCurrentlyScrollingEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = getelementptr inbounds i64, i64* %2, i64 2
  %4 = bitcast i64* %3 to %"class.cc::CompositorDelegateForInput"**
  %5 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %4, align 8
  %6 = bitcast %"class.cc::CompositorDelegateForInput"* %5 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %7, i64 3
  %9 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, align 8
  %10 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %9(%"class.cc::CompositorDelegateForInput"* %5) #19
  %11 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %10) #19
  %12 = icmp ne %"struct.cc::ScrollNode"* %11, null
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2cc20ThreadedInputHandler24GetActivelyScrollingTypeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  %9 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %8) #19
  %10 = icmp eq %"struct.cc::ScrollNode"* %9, null
  br i1 %10, label %38, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 18
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 19
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %38, label %23

23:                                               ; preds = %19, %15
  %24 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %25 = bitcast %"class.cc::CompositorDelegateForInput"* %24 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %26 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %26, i64 21
  %28 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %27, align 8
  %29 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %28(%"class.cc::CompositorDelegateForInput"* %24) #19
  %30 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %29, i64 0, i32 66
  %31 = load i8, i8* %30, align 2, !range !2
  %32 = icmp ne i8 %31, 0
  %33 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 15
  %34 = load i8, i8* %33, align 1
  %35 = icmp ne i8 %34, 0
  %36 = and i1 %32, %35
  %37 = select i1 %36, i32 2, i32 1
  br label %38

38:                                               ; preds = %19, %11, %23, %1
  %39 = phi i32 [ 0, %1 ], [ 0, %11 ], [ 0, %19 ], [ %37, %23 ]
  ret i32 %39
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZThn8_NK2cc20ThreadedInputHandler24GetActivelyScrollingTypeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 -1, i32 29, i32 0, i32 1
  %3 = bitcast i64* %2 to %"class.cc::ThreadedInputHandler"*
  %4 = getelementptr inbounds i64, i64* %2, i64 2
  %5 = bitcast i64* %4 to %"class.cc::CompositorDelegateForInput"**
  %6 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %7 = bitcast %"class.cc::CompositorDelegateForInput"* %6 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %8 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %8, i64 3
  %10 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, align 8
  %11 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %10(%"class.cc::CompositorDelegateForInput"* %6) #19
  %12 = tail call %"struct.cc::ScrollNode"* @_ZN2cc10ScrollTree22CurrentlyScrollingNodeEv(%"class.cc::ScrollTree"* %11) #19
  %13 = icmp eq %"struct.cc::ScrollNode"* %12, null
  br i1 %13, label %42, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds i64, i64* %2, i64 20
  %16 = bitcast i64* %15 to i8*
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %42, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %3, i64 0, i32 18
  %21 = load i8, i8* %20, align 2, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %3, i64 0, i32 19
  %25 = load i8, i8* %24, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %42, label %27

27:                                               ; preds = %23, %19
  %28 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %5, align 8
  %29 = bitcast %"class.cc::CompositorDelegateForInput"* %28 to %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)***
  %30 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %30, i64 21
  %32 = load %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeSettings"* (%"class.cc::CompositorDelegateForInput"*)** %31, align 8
  %33 = tail call dereferenceable(296) %"class.cc::LayerTreeSettings"* %32(%"class.cc::CompositorDelegateForInput"* %28) #19
  %34 = getelementptr inbounds %"class.cc::LayerTreeSettings", %"class.cc::LayerTreeSettings"* %33, i64 0, i32 66
  %35 = load i8, i8* %34, align 2, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %3, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 15
  %38 = load i8, i8* %37, align 1
  %39 = icmp ne i8 %38, 0
  %40 = and i1 %36, %39
  %41 = select i1 %40, i32 2, i32 1
  br label %42

42:                                               ; preds = %1, %14, %23, %27
  %43 = phi i32 [ 0, %1 ], [ 0, %14 ], [ 0, %23 ], [ %41, %27 ]
  ret i32 %43
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"class.cc::ScrollTree"* @_ZNK2cc20ThreadedInputHandler13GetScrollTreeEv(%"class.cc::ThreadedInputHandler"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %3 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %2, align 8
  %4 = bitcast %"class.cc::CompositorDelegateForInput"* %3 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %5 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %5, i64 3
  %7 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %6, align 8
  %8 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %7(%"class.cc::CompositorDelegateForInput"* %3) #19
  ret %"class.cc::ScrollTree"* %8
}

declare <2 x float> @_ZN2cc11ScrollUtils31ResolveScrollPercentageToPixelsERKN3gfx9Vector2dFERKNS1_5SizeFES7_(%"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::SizeF"* dereferenceable(8), %"class.gfx::SizeF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIRjEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #19
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 2, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #19
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #19
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #19
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #19
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #19
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #18
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  ret i64 %22
}

declare void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* sret, %"class.cc::ScrollTree"*, i32) local_unnamed_addr #6

declare %"class.cc::LayerImpl"* @_ZNK2cc13LayerTreeImpl16LayerByElementIdENS_9ElementIdE(%"class.cc::LayerTreeImpl"*, i64) local_unnamed_addr #6

declare <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"*, i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2cc20ThreadedInputHandler22NonFastScrollableNodesERKN3gfx6PointFE(%"class.base::internal::flat_tree.771"* noalias sret, %"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::vector.1421", align 8
  %5 = alloca i32, align 4
  %6 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = bitcast %"class.base::internal::flat_tree.771"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #19
  %8 = bitcast %"class.std::__1::vector.1421"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #19
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %1, i64 0, i32 2
  %10 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %11 = bitcast %"class.cc::CompositorDelegateForInput"* %10 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %12 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %12, i64 22
  %14 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %13, align 8
  %15 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %14(%"class.cc::CompositorDelegateForInput"* %10) #19
  %16 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %15, i64 0, i32 35, i32 0, i32 0, i32 0
  %17 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %16, align 8
  call void @_ZN2cc13LayerTreeImpl45FindLayersHitByPointInNonFastScrollableRegionERKN3gfx6PointFE(%"class.std::__1::vector.1421"* nonnull sret %4, %"class.cc::LayerTreeImpl"* %17, %"class.gfx::PointF"* dereferenceable(8) %2) #19
  %18 = getelementptr inbounds %"class.std::__1::vector.1421", %"class.std::__1::vector.1421"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %18, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.1421", %"class.std::__1::vector.1421"* %4, i64 0, i32 0, i32 1
  %21 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %20, align 8
  %22 = icmp eq %"class.cc::LayerImpl"** %19, %21
  br i1 %22, label %30, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %0, i64 0, i32 0, i32 0, i32 1
  %25 = bitcast i32* %5 to i8*
  %26 = bitcast i32** %24 to i64*
  %27 = getelementptr inbounds %"class.base::internal::flat_tree.771", %"class.base::internal::flat_tree.771"* %0, i64 0, i32 0
  br label %38

28:                                               ; preds = %72
  %29 = load %"class.cc::LayerImpl"**, %"class.cc::LayerImpl"*** %18, align 8
  br label %30

30:                                               ; preds = %28, %3
  %31 = phi %"class.cc::LayerImpl"** [ %29, %28 ], [ %19, %3 ]
  %32 = icmp eq %"class.cc::LayerImpl"** %31, null
  br i1 %32, label %37, label %33

33:                                               ; preds = %30
  %34 = ptrtoint %"class.cc::LayerImpl"** %31 to i64
  %35 = bitcast %"class.cc::LayerImpl"*** %20 to i64*
  store i64 %34, i64* %35, align 8
  %36 = bitcast %"class.cc::LayerImpl"** %31 to i8*
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %30, %33
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #19
  ret void

38:                                               ; preds = %75, %23
  %39 = phi i64 [ 0, %23 ], [ %77, %75 ]
  %40 = phi i32* [ null, %23 ], [ %76, %75 ]
  %41 = phi %"class.cc::LayerImpl"** [ %19, %23 ], [ %73, %75 ]
  %42 = load %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %41, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #19
  %43 = getelementptr inbounds %"class.cc::LayerImpl", %"class.cc::LayerImpl"* %42, i64 0, i32 20
  %44 = load i32, i32* %43, align 4
  store i32 %44, i32* %5, align 4
  %45 = ptrtoint i32* %40 to i64
  %46 = sub i64 %39, %45
  %47 = icmp eq i64 %46, 0
  %48 = inttoptr i64 %39 to i32*
  br i1 %47, label %64, label %49

49:                                               ; preds = %38
  %50 = ashr exact i64 %46, 2
  br label %51

51:                                               ; preds = %51, %49
  %52 = phi i32* [ %40, %49 ], [ %62, %51 ]
  %53 = phi i64 [ %50, %49 ], [ %61, %51 ]
  %54 = lshr i64 %53, 1
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = icmp slt i32 %56, %44
  %58 = getelementptr inbounds i32, i32* %55, i64 1
  %59 = xor i64 %54, -1
  %60 = add i64 %53, %59
  %61 = select i1 %57, i64 %60, i64 %54
  %62 = select i1 %57, i32* %58, i32* %52
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %51

64:                                               ; preds = %51, %38
  %65 = phi i32* [ %40, %38 ], [ %62, %51 ]
  %66 = icmp eq i32* %65, %48
  br i1 %66, label %70, label %67

67:                                               ; preds = %64
  %68 = load i32, i32* %65, align 4
  %69 = icmp slt i32 %44, %68
  br i1 %69, label %70, label %72

70:                                               ; preds = %67, %64
  %71 = call i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector.149"* %27, i32* %65, i32* nonnull dereferenceable(4) %5) #19
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #19
  %73 = getelementptr inbounds %"class.cc::LayerImpl"*, %"class.cc::LayerImpl"** %41, i64 1
  %74 = icmp eq %"class.cc::LayerImpl"** %73, %21
  br i1 %74, label %28, label %75

75:                                               ; preds = %72
  %76 = load i32*, i32** %6, align 8
  %77 = load i64, i64* %26, align 8
  br label %38
}

declare void @_ZN2cc13LayerTreeImpl45FindLayersHitByPointInNonFastScrollableRegionERKN3gfx6PointFE(%"class.std::__1::vector.1421"* sret, %"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.cc::ScrollNode"* @_ZNK2cc20ThreadedInputHandler15GetNodeToScrollEPNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %4 = load i8, i8* %3, align 4
  %5 = and i8 %4, 20
  %6 = icmp eq i8 %5, 4
  br i1 %6, label %7, label %18

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %9 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %8, align 8
  %10 = bitcast %"class.cc::CompositorDelegateForInput"* %9 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %11 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %10, align 8
  %12 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %11, i64 22
  %13 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %12, align 8
  %14 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %13(%"class.cc::CompositorDelegateForInput"* %9) #19
  %15 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %14, i64 0, i32 35, i32 0, i32 0, i32 0
  %16 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %15, align 8
  %17 = tail call %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"* %16) #19
  br label %18

18:                                               ; preds = %2, %7
  %19 = phi %"struct.cc::ScrollNode"* [ %17, %7 ], [ %1, %2 ]
  ret %"struct.cc::ScrollNode"* %19
}

declare void @_ZN2cc13LayerTreeImpl44FindAllLayersUpToAndIncludingFirstScrollableERKN3gfx6PointFE(%"class.std::__1::vector.1421"* sret, %"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8)) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc9LayerImpl21IsScrollerOrScrollbarEv(%"class.cc::LayerImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc13LayerTreeImpl32PointHitsNonFastScrollableRegionERKN3gfx6PointFERKNS_9LayerImplE(%"class.cc::LayerTreeImpl"*, %"class.gfx::PointF"* dereferenceable(8), %"class.cc::LayerImpl"* dereferenceable(640)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc20ThreadedInputHandler18ComputeScrollDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.gfx::Vector2dF"*
  %6 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %7 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %8 = bitcast %"class.cc::CompositorDelegateForInput"* %7 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %9 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %9, i64 3
  %11 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %10, align 8
  %12 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %11(%"class.cc::CompositorDelegateForInput"* %7) #19
  %13 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %6, align 8
  %14 = bitcast %"class.cc::CompositorDelegateForInput"* %13 to float (%"class.cc::CompositorDelegateForInput"*)***
  %15 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %14, align 8
  %16 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %15, i64 19
  %17 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %16, align 8
  %18 = tail call float %17(%"class.cc::CompositorDelegateForInput"* %13) #19
  %19 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #19
  %20 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %4, align 8
  %22 = fdiv float 1.000000e+00, %18
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %5, float %22, float %22) #19
  %23 = bitcast i64* %4 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 8
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %26 = load i8, i8* %25, align 4
  %27 = and i8 %26, 64
  %28 = icmp eq i8 %27, 0
  %29 = insertelement <2 x float> %24, float 0.000000e+00, i32 0
  %30 = select i1 %28, <2 x float> %29, <2 x float> %24
  %31 = icmp sgt i8 %26, -1
  %32 = insertelement <2 x float> %30, float 0.000000e+00, i32 1
  %33 = select i1 %31, <2 x float> %32, <2 x float> %30
  store <2 x float> %33, <2 x float>* %23, align 8
  %34 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %12, i64 %35) #19
  %37 = bitcast i64* %4 to <2 x float>*
  %38 = load <2 x float>, <2 x float>* %37, align 8
  %39 = fadd <2 x float> %38, %36
  %40 = call <2 x float> @_ZNK2cc10ScrollTree25ClampScrollOffsetToLimitsEN3gfx12ScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ScrollTree"* %12, <2 x float> %39, %"struct.cc::ScrollNode"* dereferenceable(168) %1) #19
  %41 = fsub <2 x float> %40, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #19
  ret <2 x float> %41
}

declare <2 x float> @_ZNK2cc10ScrollTree25ClampScrollOffsetToLimitsEN3gfx12ScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ScrollTree"*, <2 x float>, %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler38CalculateLocalScrollDeltaAndStartPointERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFEPS8_PS5_(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.gfx::Vector2dF"* nocapture, %"class.gfx::PointF"*) local_unnamed_addr #5 align 2 {
  %7 = alloca %"class.gfx::Transform", align 4
  %8 = alloca %"class.gfx::Transform", align 4
  %9 = alloca <2 x float>, align 8
  %10 = bitcast <2 x float>* %9 to %"class.gfx::PointF"*
  %11 = alloca i64, align 8
  %12 = bitcast i64* %11 to %"class.gfx::Vector2dF"*
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca <2 x float>, align 8
  %16 = bitcast <2 x float>* %15 to %"class.gfx::PointF"*
  %17 = bitcast %"class.gfx::Transform"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %17) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  %18 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %19 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %20 = bitcast %"class.cc::CompositorDelegateForInput"* %19 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %21 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %21, i64 3
  %23 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %22, align 8
  %24 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %23(%"class.cc::CompositorDelegateForInput"* %19) #19
  %25 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  call void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* nonnull sret %7, %"class.cc::ScrollTree"* %24, i32 %26) #19
  %27 = bitcast %"class.gfx::Transform"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %27) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %27, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  %28 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %7, %"class.gfx::Transform"* nonnull %8) #19
  %29 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %18, align 8
  %30 = bitcast %"class.cc::CompositorDelegateForInput"* %29 to float (%"class.cc::CompositorDelegateForInput"*)***
  %31 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %30, align 8
  %32 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %31, i64 18
  %33 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %32, align 8
  %34 = call float %33(%"class.cc::CompositorDelegateForInput"* %29) #19
  %35 = bitcast <2 x float>* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #19
  %36 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %2, float %34, float %34) #19
  store <2 x float> %36, <2 x float>* %9, align 8
  %37 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #19
  %38 = bitcast %"class.gfx::Vector2dF"* %3 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %11, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %12, float %34, float %34) #19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #19
  store i8 -86, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #19
  store i8 -86, i8* %14, align 1
  %40 = bitcast <2 x float>* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #19
  %41 = bitcast i64* %11 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 8
  %43 = fadd <2 x float> %42, %36
  store <2 x float> %43, <2 x float>* %15, align 8
  %44 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %8, %"class.gfx::PointF"* nonnull dereferenceable(8) %10, i8* nonnull %13) #19
  %45 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %8, %"class.gfx::PointF"* nonnull dereferenceable(8) %16, i8* nonnull %14) #19
  %46 = fsub <2 x float> %45, %44
  %47 = bitcast %"class.gfx::Vector2dF"* %4 to <2 x float>*
  store <2 x float> %46, <2 x float>* %47, align 4
  %48 = icmp eq %"class.gfx::PointF"* %5, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %6
  %50 = bitcast %"class.gfx::PointF"* %5 to <2 x float>*
  store <2 x float> %44, <2 x float>* %50, align 4
  br label %51

51:                                               ; preds = %6, %49
  %52 = load i8, i8* %13, align 1, !range !2
  %53 = load i8, i8* %14, align 1
  %54 = or i8 %53, %52
  %55 = icmp eq i8 %54, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %27) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %17) #19
  ret i1 %55
}

declare <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::PointF"* dereferenceable(8), i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::PointF"* dereferenceable(8), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca %"class.gfx::Transform", align 4
  %7 = alloca <2 x float>, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8, align 1
  %10 = alloca i8, align 1
  %11 = alloca <2 x float>, align 8
  %12 = alloca <2 x float>, align 8
  %13 = bitcast <2 x float>* %12 to %"class.gfx::Vector2dF"*
  %14 = alloca i8, align 1
  %15 = alloca float, align 4
  %16 = alloca float, align 4
  %17 = alloca <2 x float>, align 8
  %18 = bitcast <2 x float>* %17 to %"class.gfx::PointF"*
  %19 = alloca i8, align 1
  %20 = alloca %"class.gfx::Transform", align 4
  %21 = alloca <2 x float>, align 8
  %22 = bitcast <2 x float>* %21 to %"class.gfx::PointF"*
  %23 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %24 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %23, align 8
  %25 = bitcast %"class.cc::CompositorDelegateForInput"* %24 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %26 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %25, align 8
  %27 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %26, i64 3
  %28 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %27, align 8
  %29 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %28(%"class.cc::CompositorDelegateForInput"* %24) #19
  %30 = bitcast <2 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #19
  %31 = getelementptr inbounds <2 x float>, <2 x float>* %12, i64 0, i64 0
  %32 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %13, i64 0, i32 1
  store float 0.000000e+00, float* %31, align 8
  store float 0.000000e+00, float* %32, align 4
  %33 = bitcast <2 x float>* %7 to %"class.gfx::PointF"*
  %34 = bitcast i64* %8 to %"class.gfx::Vector2dF"*
  %35 = bitcast <2 x float>* %11 to %"class.gfx::PointF"*
  %36 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %36) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false) #19
  %37 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %23, align 8
  %38 = bitcast %"class.cc::CompositorDelegateForInput"* %37 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %39 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %39, i64 3
  %41 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %40, align 8
  %42 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %41(%"class.cc::CompositorDelegateForInput"* %37) #19
  %43 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  call void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* nonnull sret %5, %"class.cc::ScrollTree"* %42, i32 %44) #19
  %45 = bitcast %"class.gfx::Transform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %45) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %45, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false) #19
  %46 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %5, %"class.gfx::Transform"* nonnull %6) #19
  %47 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %23, align 8
  %48 = bitcast %"class.cc::CompositorDelegateForInput"* %47 to float (%"class.cc::CompositorDelegateForInput"*)***
  %49 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %48, align 8
  %50 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %49, i64 18
  %51 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %50, align 8
  %52 = call float %51(%"class.cc::CompositorDelegateForInput"* %47) #19
  %53 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #19
  %54 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8) %2, float %52, float %52) #19
  store <2 x float> %54, <2 x float>* %7, align 8
  %55 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #19
  %56 = bitcast %"class.gfx::Vector2dF"* %3 to i64*
  %57 = load i64, i64* %56, align 4
  store i64 %57, i64* %8, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %34, float %52, float %52) #19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #19
  store i8 -86, i8* %9, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #19
  store i8 -86, i8* %10, align 1
  %58 = bitcast <2 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #19
  %59 = bitcast i64* %8 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 8
  %61 = fadd <2 x float> %54, %60
  store <2 x float> %61, <2 x float>* %11, align 8
  %62 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::PointF"* nonnull dereferenceable(8) %33, i8* nonnull %9) #19
  %63 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %6, %"class.gfx::PointF"* nonnull dereferenceable(8) %35, i8* nonnull %10) #19
  %64 = fsub <2 x float> %63, %62
  %65 = extractelement <2 x float> %64, i32 1
  store <2 x float> %64, <2 x float>* %12, align 8
  %66 = load i8, i8* %9, align 1, !range !2
  %67 = load i8, i8* %10, align 1
  %68 = or i8 %67, %66
  %69 = icmp eq i8 %68, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %45) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %36) #19
  br i1 %69, label %70, label %136

70:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #19
  %71 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %72 = load i8, i8* %71, align 4
  %73 = lshr i8 %72, 3
  %74 = and i8 %73, 1
  store i8 %74, i8* %14, align 1
  %75 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %76 = and i8 %75, 25
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78, !prof !6

78:                                               ; preds = %70
  %79 = bitcast float* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %79) #19
  store float %65, float* %15, align 4
  %80 = call i64 @_ZN20trace_event_internal13AddTraceEventIfRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), float* nonnull dereferenceable(4) %15, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i8* nonnull dereferenceable(1) %14)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %79) #19
  br label %81

81:                                               ; preds = %70, %78
  %82 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %70 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str.26, i64 0, i64 0), %78 ]
  %83 = phi i8* [ null, %70 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %78 ]
  %84 = phi i64 [ -6148914691236517206, %70 ], [ %80, %78 ]
  %85 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %86 = load i64, i64* %85, align 8
  %87 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %29, i64 %86) #19
  %88 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %23, align 8
  %89 = bitcast %"class.cc::CompositorDelegateForInput"* %88 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %90 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %89, align 8
  %91 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %90, i64 22
  %92 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %91, align 8
  %93 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %92(%"class.cc::CompositorDelegateForInput"* %88) #19
  %94 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %93, i64 0, i32 35, i32 0, i32 0, i32 0
  %95 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %94, align 8
  %96 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %29, %"struct.cc::ScrollNode"* dereferenceable(168) %1, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %13, %"class.cc::LayerTreeImpl"* %95) #19
  %97 = load i64, i64* %85, align 8
  %98 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %29, i64 %97) #19
  %99 = fsub <2 x float> %98, %87
  %100 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %101 = and i8 %100, 25
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %107, label %103, !prof !6

103:                                              ; preds = %81
  %104 = bitcast float* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104) #19
  %105 = extractelement <2 x float> %99, i32 1
  store float %105, float* %16, align 4
  %106 = call i64 @_ZN20trace_event_internal13AddTraceEventIfEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), float* nonnull dereferenceable(4) %16)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104) #19
  br label %107

107:                                              ; preds = %81, %103
  %108 = bitcast <2 x float>* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #19
  %109 = fadd <2 x float> %62, %99
  store <2 x float> %109, <2 x float>* %17, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %19) #19
  store i8 -86, i8* %19, align 1
  %110 = bitcast %"class.gfx::Transform"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %110) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %110, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false)
  %111 = load i32, i32* %43, align 8
  call void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* nonnull sret %20, %"class.cc::ScrollTree"* %29, i32 %111) #19
  %112 = bitcast <2 x float>* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #19
  %113 = call <2 x float> @_ZN2cc8MathUtil8MapPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %20, %"class.gfx::PointF"* nonnull dereferenceable(8) %18, i8* nonnull %19) #19
  store <2 x float> %113, <2 x float>* %21, align 8
  %114 = load i8, i8* %19, align 1, !range !2
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %128

116:                                              ; preds = %107
  %117 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %23, align 8
  %118 = bitcast %"class.cc::CompositorDelegateForInput"* %117 to float (%"class.cc::CompositorDelegateForInput"*)***
  %119 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %118, align 8
  %120 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %119, i64 18
  %121 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %120, align 8
  %122 = call float %121(%"class.cc::CompositorDelegateForInput"* %117) #19
  %123 = fdiv float 1.000000e+00, %122
  %124 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %22, float %123, float %123) #19
  %125 = bitcast %"class.gfx::PointF"* %2 to <2 x float>*
  %126 = load <2 x float>, <2 x float>* %125, align 4
  %127 = fsub <2 x float> %124, %126
  br label %128

128:                                              ; preds = %107, %116
  %129 = phi <2 x float> [ %127, %116 ], [ zeroinitializer, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %110) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %19) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #19
  %130 = icmp eq i8* %83, null
  br i1 %130, label %135, label %131

131:                                              ; preds = %128
  %132 = load i8, i8* %83, align 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %135, label %134

134:                                              ; preds = %131
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %83, i8* %82, i64 %84) #19
  br label %135

135:                                              ; preds = %128, %131, %134
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #19
  br label %136

136:                                              ; preds = %4, %135
  %137 = phi <2 x float> [ %129, %135 ], [ zeroinitializer, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #19
  ret <2 x float> %137
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIfRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, float* dereferenceable(4), i8*, i8* dereferenceable(1)) local_unnamed_addr #8 comdat {
  %12 = alloca %"class.base::trace_event::TraceArguments", align 8
  %13 = alloca %"class.base::TimeTicks", align 8
  %14 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %15 = bitcast %"class.base::TimeTicks"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %13, i64 0, i32 0, i32 0
  %17 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %17, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 40, i1 false) #19
  store i8 2, i8* %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 0
  store i8 4, i8* %19, align 1
  %20 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 1
  store i8 1, i8* %20, align 1
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 0
  store i8* %7, i8** %21, align 8
  %22 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 2, i64 1
  store i8* %9, i8** %22, align 8
  %23 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 0
  %24 = load float, float* %8, align 4
  %25 = fpext float %24 to double
  %26 = bitcast %"union.base::trace_event::TraceValue"* %23 to double*
  store double %25, double* %26, align 8
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 1
  %28 = load i8, i8* %10, align 1, !range !2
  %29 = bitcast %"union.base::trace_event::TraceValue"* %27 to i8*
  store i8 %28, i8* %29, align 8
  %30 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %14, %"class.base::TimeTicks"* nonnull dereferenceable(8) %13, %"class.base::trace_event::TraceArguments"* nonnull %12, i32 %5) #19
  %31 = load i8, i8* %18, align 8
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %67, label %33

33:                                               ; preds = %11, %62
  %34 = phi i64 [ %63, %62 ], [ 0, %11 ]
  %35 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 1, i64 %34
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 8
  br i1 %37, label %38, label %49

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %34
  %40 = bitcast %"union.base::trace_event::TraceValue"* %39 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %41 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %40, align 8
  %42 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %41, null
  br i1 %42, label %62, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %41 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %45 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %45, i64 1
  %47 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %46, align 8
  call void %47(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %41) #19
  %48 = load i8, i8* %35, align 1
  br label %49

49:                                               ; preds = %43, %33
  %50 = phi i8 [ %36, %33 ], [ %48, %43 ]
  %51 = icmp eq i8 %50, 9
  br i1 %51, label %52, label %62

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %12, i64 0, i32 3, i64 %34
  %54 = bitcast %"union.base::trace_event::TraceValue"* %53 to %"class.protozero::HeapBuffered"**
  %55 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %54, align 8
  %56 = icmp eq %"class.protozero::HeapBuffered"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %55, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %58) #19
  %59 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %55, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %59) #19
  %60 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %55, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %60) #19
  %61 = bitcast %"class.protozero::HeapBuffered"* %55 to i8*
  call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %57, %52, %49, %38
  %63 = add nuw nsw i64 %34, 1
  %64 = load i8, i8* %18, align 8
  %65 = zext i8 %64 to i64
  %66 = icmp ult i64 %63, %65
  br i1 %66, label %33, label %67

67:                                               ; preds = %62, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %18) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i64 %30
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIfEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, float* dereferenceable(4)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #19
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #19
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #19
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #19
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 4, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = load float, float* %8, align 4
  %21 = fpext float %20 to double
  %22 = bitcast %"union.base::trace_event::TraceValue"* %19 to double*
  store double %21, double* %22, align 8
  %23 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #19
  %24 = load i8, i8* %16, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %60, label %26

26:                                               ; preds = %9, %55
  %27 = phi i64 [ %56, %55 ], [ 0, %9 ]
  %28 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %42

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %27
  %33 = bitcast %"union.base::trace_event::TraceValue"* %32 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %34 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %33, align 8
  %35 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %34, null
  br i1 %35, label %55, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %34 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %38 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, i64 1
  %40 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %39, align 8
  call void %40(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %34) #19
  %41 = load i8, i8* %28, align 1
  br label %42

42:                                               ; preds = %36, %26
  %43 = phi i8 [ %29, %26 ], [ %41, %36 ]
  %44 = icmp eq i8 %43, 9
  br i1 %44, label %45, label %55

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %27
  %47 = bitcast %"union.base::trace_event::TraceValue"* %46 to %"class.protozero::HeapBuffered"**
  %48 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %47, align 8
  %49 = icmp eq %"class.protozero::HeapBuffered"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %48, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %51) #19
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %48, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %52) #19
  %53 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %48, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %53) #19
  %54 = bitcast %"class.protozero::HeapBuffered"* %48 to i8*
  call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %50, %45, %42, %31
  %56 = add nuw nsw i64 %27, 1
  %57 = load i8, i8* %16, align 8
  %58 = zext i8 %57 to i64
  %59 = icmp ult i64 %56, %58
  br i1 %59, label %26, label %60

60:                                               ; preds = %55, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #19
  ret i64 %23
}

declare <2 x float> @_ZN2cc8MathUtil8MapPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* dereferenceable(68), %"class.gfx::PointF"* dereferenceable(8), i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK2cc20ThreadedInputHandler24ScrollNodeWithLocalDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8)) local_unnamed_addr #5 align 2 {
  %4 = alloca <2 x float>, align 8
  %5 = bitcast <2 x float>* %4 to %"class.gfx::Vector2dF"*
  %6 = alloca i8, align 1
  %7 = alloca float, align 4
  %8 = alloca i64, align 8
  %9 = bitcast i64* %8 to %"class.gfx::Vector2dF"*
  %10 = alloca float, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #19
  %11 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %12 = load i8, i8* %11, align 4
  %13 = lshr i8 %12, 3
  %14 = and i8 %13, 1
  store i8 %14, i8* %6, align 1
  %15 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %16 = and i8 %15, 25
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %25, label %18, !prof !6

18:                                               ; preds = %3
  %19 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #19
  %20 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %2, i64 0, i32 1
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  %23 = bitcast float* %7 to i32*
  store i32 %22, i32* %23, align 4
  %24 = call i64 @_ZN20trace_event_internal13AddTraceEventIfRbEEN4base11trace_event16TraceEventHandleEcPKhPKcS8_yjyS8_OT_S8_OT0_(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.27, i64 0, i64 0), float* nonnull dereferenceable(4) %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.28, i64 0, i64 0), i8* nonnull dereferenceable(1) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #19
  br label %25

25:                                               ; preds = %3, %18
  %26 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([25 x i8], [25 x i8]* @.str.31, i64 0, i64 0), %18 ]
  %27 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), %18 ]
  %28 = phi i64 [ -6148914691236517206, %3 ], [ %24, %18 ]
  %29 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %30 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %29, align 8
  %31 = bitcast %"class.cc::CompositorDelegateForInput"* %30 to float (%"class.cc::CompositorDelegateForInput"*)***
  %32 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %31, align 8
  %33 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %32, i64 19
  %34 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %33, align 8
  %35 = call float %34(%"class.cc::CompositorDelegateForInput"* %30) #19
  %36 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %29, align 8
  %37 = bitcast %"class.cc::CompositorDelegateForInput"* %36 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %38 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %37, align 8
  %39 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %38, i64 3
  %40 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %39, align 8
  %41 = call dereferenceable(120) %"class.cc::ScrollTree"* %40(%"class.cc::CompositorDelegateForInput"* %36) #19
  %42 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 8, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %41, i64 %43) #19
  %45 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #19
  %46 = bitcast %"class.gfx::Vector2dF"* %2 to i64*
  %47 = load i64, i64* %46, align 4
  store i64 %47, i64* %8, align 8
  %48 = fdiv float 1.000000e+00, %35
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %9, float %48, float %48) #19
  %49 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %29, align 8
  %50 = bitcast %"class.cc::CompositorDelegateForInput"* %49 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %51 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %50, align 8
  %52 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %51, i64 22
  %53 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %52, align 8
  %54 = call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %53(%"class.cc::CompositorDelegateForInput"* %49) #19
  %55 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %54, i64 0, i32 35, i32 0, i32 0, i32 0
  %56 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %55, align 8
  %57 = call <2 x float> @_ZN2cc10ScrollTree8ScrollByERKNS_10ScrollNodeERKN3gfx9Vector2dFEPNS_13LayerTreeImplE(%"class.cc::ScrollTree"* %41, %"struct.cc::ScrollNode"* dereferenceable(168) %1, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %9, %"class.cc::LayerTreeImpl"* %56) #19
  %58 = load i64, i64* %42, align 8
  %59 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %41, i64 %58) #19
  %60 = extractelement <2 x float> %44, i32 0
  %61 = extractelement <2 x float> %44, i32 1
  %62 = extractelement <2 x float> %59, i32 0
  %63 = fsub float %62, %60
  %64 = extractelement <2 x float> %59, i32 1
  %65 = fsub float %64, %61
  %66 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  %67 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %5, i64 0, i32 1
  store float %63, float* %66, align 8
  store float %65, float* %67, align 4
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %5, float %35, float %35) #19
  %68 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), align 16
  %69 = and i8 %68, 25
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %77, label %71, !prof !6

71:                                               ; preds = %25
  %72 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #19
  %73 = bitcast float* %67 to i32*
  %74 = load i32, i32* %73, align 4
  %75 = bitcast float* %10 to i32*
  store i32 %74, i32* %75, align 4
  %76 = call i64 @_ZN20trace_event_internal13AddTraceEventIfEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 32, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.29, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.30, i64 0, i64 0), float* nonnull dereferenceable(4) %10)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #19
  br label %77

77:                                               ; preds = %25, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #19
  %78 = icmp eq i8* %27, null
  br i1 %78, label %83, label %79

79:                                               ; preds = %77
  %80 = load i8, i8* %27, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %83, label %82

82:                                               ; preds = %79
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %27, i8* %26, i64 %28) #19
  br label %83

83:                                               ; preds = %77, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #19
  %84 = load <2 x float>, <2 x float>* %4, align 8
  ret <2 x float> %84
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZN2cc20ThreadedInputHandler16ScrollSingleNodeERKNS_10ScrollNodeERKN3gfx9Vector2dFERKNS4_5PointEb(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* nocapture readonly dereferenceable(8), %"class.gfx::Point"* nocapture readonly dereferenceable(8), i1 zeroext) local_unnamed_addr #5 align 2 {
  %6 = alloca <2 x float>, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %9 = alloca %"class.gfx::PointF", align 4
  %10 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #19
  %11 = bitcast %"class.gfx::Vector2dF"* %2 to <2 x float>*
  %12 = load <2 x float>, <2 x float>* %11, align 4
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %14 = load i8, i8* %13, align 4
  %15 = and i8 %14, 64
  %16 = icmp eq i8 %15, 0
  %17 = insertelement <2 x float> %12, float 0.000000e+00, i32 0
  %18 = select i1 %16, <2 x float> %17, <2 x float> %12
  %19 = icmp sgt i8 %14, -1
  %20 = insertelement <2 x float> %18, float 0.000000e+00, i32 1
  %21 = select i1 %19, <2 x float> %20, <2 x float> %18
  store <2 x float> %21, <2 x float>* %6, align 8
  br i1 %4, label %22, label %47

22:                                               ; preds = %5
  %23 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #19
  %24 = bitcast i64* %7 to <2 x float>*
  store <2 x float> %21, <2 x float>* %24, align 8
  %25 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %26 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %25, align 8
  %27 = bitcast %"class.cc::CompositorDelegateForInput"* %26 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %28 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %27, align 8
  %29 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %28, i64 22
  %30 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %29, align 8
  %31 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %30(%"class.cc::CompositorDelegateForInput"* %26) #19
  %32 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %31, i64 0, i32 35, i32 0, i32 0, i32 0
  %33 = load %"class.cc::LayerTreeImpl"*, %"class.cc::LayerTreeImpl"** %32, align 8
  %34 = getelementptr inbounds %"class.cc::LayerTreeImpl", %"class.cc::LayerTreeImpl"* %33, i64 0, i32 13
  %35 = load float, float* %34, align 8
  %36 = fdiv float 1.000000e+00, %35
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %8, float %36, float %36) #19
  %37 = bitcast %"class.gfx::PointF"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #19
  %38 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %3, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sitofp i32 %39 to float
  %41 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %3, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = sitofp i32 %42 to float
  %44 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %9, i64 0, i32 0
  store float %40, float* %44, align 4
  %45 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %9, i64 0, i32 1
  store float %43, float* %45, align 4
  %46 = call <2 x float> @_ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %1, %"class.gfx::PointF"* nonnull dereferenceable(8) %9, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %8)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #19
  br label %50

47:                                               ; preds = %5
  %48 = bitcast <2 x float>* %6 to %"class.gfx::Vector2dF"*
  %49 = call <2 x float> @_ZNK2cc20ThreadedInputHandler24ScrollNodeWithLocalDeltaERKNS_10ScrollNodeERKN3gfx9Vector2dFE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %1, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %48)
  br label %50

50:                                               ; preds = %47, %22
  %51 = phi <2 x float> [ %46, %22 ], [ %49, %47 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #19
  ret <2 x float> %51
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler27ScrollAnimationUpdateTargetERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::ThreadedInputHandler"* nocapture, %"struct.cc::ScrollNode"* nocapture readonly dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), i64) local_unnamed_addr #5 align 2 {
  %5 = alloca <2 x float>, align 8
  %6 = bitcast <2 x float>* %5 to %"class.gfx::Vector2dF"*
  %7 = alloca <2 x float>, align 8
  %8 = bitcast <2 x float>* %7 to %"class.gfx::ScrollOffset"*
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %10 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %11 = bitcast %"class.cc::CompositorDelegateForInput"* %10 to float (%"class.cc::CompositorDelegateForInput"*)***
  %12 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %11, align 8
  %13 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %12, i64 19
  %14 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %13, align 8
  %15 = tail call float %14(%"class.cc::CompositorDelegateForInput"* %10) #19
  %16 = bitcast <2 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #19
  %17 = fdiv float 1.000000e+00, %15
  %18 = tail call <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8) %2, float %17, float %17) #19
  %19 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 5
  %20 = load i8, i8* %19, align 4
  %21 = and i8 %20, 64
  %22 = icmp eq i8 %21, 0
  %23 = insertelement <2 x float> %18, float 0.000000e+00, i32 0
  %24 = select i1 %22, <2 x float> %23, <2 x float> %18
  %25 = icmp sgt i8 %20, -1
  %26 = insertelement <2 x float> %24, float 0.000000e+00, i32 1
  %27 = select i1 %25, <2 x float> %26, <2 x float> %24
  store <2 x float> %27, <2 x float>* %5, align 8
  %28 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %29 = bitcast %"class.cc::CompositorDelegateForInput"* %28 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %30 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %29, align 8
  %31 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %30, i64 22
  %32 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %31, align 8
  %33 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %32(%"class.cc::CompositorDelegateForInput"* %28) #19
  %34 = getelementptr inbounds %"class.cc::LayerTreeHostImpl", %"class.cc::LayerTreeHostImpl"* %33, i64 0, i32 58, i32 0, i32 0, i32 0
  %35 = load %"class.cc::MutatorHost"*, %"class.cc::MutatorHost"** %34, align 8
  %36 = bitcast <2 x float>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #19
  %37 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %38 = bitcast %"class.cc::CompositorDelegateForInput"* %37 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %39 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %39, i64 3
  %41 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %40, align 8
  %42 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %41(%"class.cc::CompositorDelegateForInput"* %37) #19
  %43 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = tail call <2 x float> @_ZNK2cc10ScrollTree15MaxScrollOffsetEi(%"class.cc::ScrollTree"* %42, i32 %44) #19
  store <2 x float> %45, <2 x float>* %7, align 8
  %46 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %47 = bitcast %"class.cc::CompositorDelegateForInput"* %46 to %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)***
  %48 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*** %47, align 8
  %49 = getelementptr inbounds %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %48, i64 22
  %50 = load %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::LayerTreeHostImpl"* (%"class.cc::CompositorDelegateForInput"*)** %49, align 8
  %51 = tail call dereferenceable(5848) %"class.cc::LayerTreeHostImpl"* %50(%"class.cc::CompositorDelegateForInput"* %46) #19
  %52 = bitcast %"class.cc::LayerTreeHostImpl"* %51 to %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)***
  %53 = load %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)**, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*** %52, align 8
  %54 = getelementptr inbounds %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)** %53, i64 102
  %55 = load %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)*, %"struct.viz::BeginFrameArgs"* (%"class.cc::LayerTreeHostImpl"*)** %54, align 8
  %56 = tail call dereferenceable(64) %"struct.viz::BeginFrameArgs"* %55(%"class.cc::LayerTreeHostImpl"* %51) #19
  %57 = getelementptr inbounds %"struct.viz::BeginFrameArgs", %"struct.viz::BeginFrameArgs"* %56, i64 0, i32 0, i32 0, i32 0
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.cc::MutatorHost"* %35 to i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)***
  %60 = load i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)**, i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)*, i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)** %60, i64 38
  %62 = load i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)*, i1 (%"class.cc::MutatorHost"*, %"class.gfx::Vector2dF"*, %"class.gfx::ScrollOffset"*, i64, i64)** %61, align 8
  %63 = call zeroext i1 %62(%"class.cc::MutatorHost"* %35, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %6, %"class.gfx::ScrollOffset"* nonnull dereferenceable(8) %8, i64 %58, i64 %3) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #19
  br i1 %63, label %64, label %73

64:                                               ; preds = %4
  %65 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %9, align 8
  %66 = bitcast %"class.cc::CompositorDelegateForInput"* %65 to void (%"class.cc::CompositorDelegateForInput"*)***
  %67 = load void (%"class.cc::CompositorDelegateForInput"*)**, void (%"class.cc::CompositorDelegateForInput"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %67, i64 7
  %69 = load void (%"class.cc::CompositorDelegateForInput"*)*, void (%"class.cc::CompositorDelegateForInput"*)** %68, align 8
  call void %69(%"class.cc::CompositorDelegateForInput"* %65) #19
  %70 = load i64, i64* @_ZN2cc9ElementId17kInvalidElementIdE, align 8
  %71 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 0, i32 0
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 11, i32 1, i32 0
  store i64 %70, i64* %72, align 8
  br label %73

73:                                               ; preds = %64, %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #19
  ret i1 %63
}

declare <2 x float> @_ZN2cc8Viewport14ScrollAnimatedERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::Viewport"*, %"class.gfx::Vector2dF"* dereferenceable(8), i64) local_unnamed_addr #6

declare zeroext i1 @_ZN2cc17LayerTreeHostImpl21ScrollAnimationCreateERKNS_10ScrollNodeERKN3gfx9Vector2dFEN4base9TimeDeltaE(%"class.cc::LayerTreeHostImpl"*, %"struct.cc::ScrollNode"* dereferenceable(168), %"class.gfx::Vector2dF"* dereferenceable(8), i64) local_unnamed_addr #6

declare void @_ZN2cc11ScrollState12ConsumeDeltaEdd(%"class.cc::ScrollState"*, double, double) local_unnamed_addr #6

declare float @_ZN2cc8MathUtil27SmallestAngleBetweenVectorsERKN3gfx9Vector2dFES4_(%"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

declare <2 x float> @_ZN2cc8MathUtil13ProjectVectorERKN3gfx9Vector2dFES4_(%"class.gfx::Vector2dF"* dereferenceable(8), %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler12CanPropagateEPNS_10ScrollNodeEff(%"class.cc::ThreadedInputHandler"* nocapture readnone, %"struct.cc::ScrollNode"* nocapture readonly, float, float) local_unnamed_addr #7 align 2 {
  %5 = fcmp oeq float %2, 0.000000e+00
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 10, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %6, %4
  %11 = fcmp oeq float %3, 0.000000e+00
  br i1 %11, label %16, label %12

12:                                               ; preds = %10
  %13 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %1, i64 0, i32 10, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 1
  br label %16

16:                                               ; preds = %10, %12, %6
  %17 = phi i1 [ false, %6 ], [ true, %10 ], [ %15, %12 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2cc20ThreadedInputHandler15CanConsumeDeltaERKNS_11ScrollStateERKNS_10ScrollNodeE(%"class.cc::ThreadedInputHandler"* nocapture readonly, %"class.cc::ScrollState"* nocapture readonly dereferenceable(80), %"struct.cc::ScrollNode"* dereferenceable(168)) local_unnamed_addr #5 align 2 {
  %4 = alloca %"class.gfx::Transform", align 4
  %5 = alloca %"class.gfx::Transform", align 4
  %6 = alloca <2 x float>, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8, align 1
  %9 = alloca i8, align 1
  %10 = alloca <2 x float>, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  %13 = bitcast i64* %12 to %"class.gfx::Vector2dF"*
  %14 = alloca %"class.gfx::PointF", align 4
  %15 = bitcast i64* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #19
  %16 = bitcast i64* %12 to float*
  %17 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %13, i64 0, i32 1
  store float 0.000000e+00, float* %16, align 8
  store float 0.000000e+00, float* %17, align 4
  %18 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 8
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  %21 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 0
  %22 = load double, double* %21, align 8
  %23 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 2
  %25 = load double, double* %24, align 8
  %26 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 3
  %27 = select i1 %20, double %22, double %25
  %28 = fptrunc double %27 to float
  %29 = load double, double* %23, align 8
  %30 = load double, double* %26, align 8
  %31 = select i1 %20, double %29, double %30
  %32 = fptrunc double %31 to float
  store float %28, float* %16, align 8
  %33 = getelementptr inbounds i8, i8* %15, i64 4
  %34 = bitcast i8* %33 to float*
  store float %32, float* %34, align 4
  %35 = fcmp oeq float %28, 0.000000e+00
  %36 = fcmp oeq float %32, 0.000000e+00
  %37 = and i1 %35, %36
  br i1 %37, label %140, label %38

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 13
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %89, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.gfx::PointF"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #19
  %44 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 4
  %45 = load i32, i32* %44, align 8
  %46 = sitofp i32 %45 to float
  %47 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 5
  %48 = load i32, i32* %47, align 4
  %49 = sitofp i32 %48 to float
  %50 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %14, i64 0, i32 0
  store float %46, float* %50, align 4
  %51 = getelementptr inbounds %"class.gfx::PointF", %"class.gfx::PointF"* %14, i64 0, i32 1
  store float %49, float* %51, align 4
  %52 = bitcast <2 x float>* %6 to %"class.gfx::PointF"*
  %53 = bitcast i64* %7 to %"class.gfx::Vector2dF"*
  %54 = bitcast <2 x float>* %10 to %"class.gfx::PointF"*
  %55 = bitcast %"class.gfx::Transform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %55) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false) #19
  %56 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %57 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %56, align 8
  %58 = bitcast %"class.cc::CompositorDelegateForInput"* %57 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %59 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %59, i64 3
  %61 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %60, align 8
  %62 = tail call dereferenceable(120) %"class.cc::ScrollTree"* %61(%"class.cc::CompositorDelegateForInput"* %57) #19
  %63 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 0
  %64 = load i32, i32* %63, align 8
  call void @_ZNK2cc10ScrollTree20ScreenSpaceTransformEi(%"class.gfx::Transform"* nonnull sret %4, %"class.cc::ScrollTree"* %62, i32 %64) #19
  %65 = bitcast %"class.gfx::Transform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* nonnull %65) #19
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %65, i8* align 4 bitcast (%"class.gfx::Transform"* @__const._ZN2cc20ThreadedInputHandler32ScrollNodeWithViewportSpaceDeltaERKNS_10ScrollNodeERKN3gfx6PointFERKNS4_9Vector2dFE.screen_space_transform to i8*), i64 68, i1 false) #19
  %66 = call zeroext i1 @_ZNK3gfx9Transform10GetInverseEPS0_(%"class.gfx::Transform"* nonnull %4, %"class.gfx::Transform"* nonnull %5) #19
  %67 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %56, align 8
  %68 = bitcast %"class.cc::CompositorDelegateForInput"* %67 to float (%"class.cc::CompositorDelegateForInput"*)***
  %69 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %68, align 8
  %70 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %69, i64 18
  %71 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %70, align 8
  %72 = call float %71(%"class.cc::CompositorDelegateForInput"* %67) #19
  %73 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #19
  %74 = call <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* nonnull dereferenceable(8) %14, float %72, float %72) #19
  store <2 x float> %74, <2 x float>* %6, align 8
  %75 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #19
  %76 = load i64, i64* %12, align 8
  store i64 %76, i64* %7, align 8
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %53, float %72, float %72) #19
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #19
  store i8 -86, i8* %8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #19
  store i8 -86, i8* %9, align 1
  %77 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #19
  %78 = bitcast i64* %7 to <2 x float>*
  %79 = load <2 x float>, <2 x float>* %78, align 8
  %80 = fadd <2 x float> %74, %79
  store <2 x float> %80, <2 x float>* %10, align 8
  %81 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::PointF"* nonnull dereferenceable(8) %52, i8* nonnull %8) #19
  %82 = call <2 x float> @_ZN2cc8MathUtil12ProjectPointERKN3gfx9TransformERKNS1_6PointFEPb(%"class.gfx::Transform"* nonnull dereferenceable(68) %5, %"class.gfx::PointF"* nonnull dereferenceable(8) %54, i8* nonnull %9) #19
  %83 = load i8, i8* %8, align 1, !range !2
  %84 = load i8, i8* %9, align 1
  %85 = or i8 %84, %83
  %86 = icmp eq i8 %85, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %65) #19
  call void @llvm.lifetime.end.p0i8(i64 68, i8* nonnull %55) #19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #19
  br i1 %86, label %87, label %140

87:                                               ; preds = %42
  %88 = fsub <2 x float> %82, %81
  br label %93

89:                                               ; preds = %38
  %90 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %91 = load i8, i8* %90, align 1
  %92 = call <2 x float> @_ZN2cc20ThreadedInputHandler32ResolveScrollGranularityToPixelsERKNS_10ScrollNodeERKN3gfx9Vector2dFEN2ui17ScrollGranularityE(%"class.cc::ThreadedInputHandler"* %0, %"struct.cc::ScrollNode"* dereferenceable(168) %2, %"class.gfx::Vector2dF"* nonnull dereferenceable(8) %13, i8 zeroext %91)
  br label %93

93:                                               ; preds = %87, %89
  %94 = phi <2 x float> [ %88, %87 ], [ %92, %89 ]
  %95 = bitcast i64* %12 to <2 x float>*
  store <2 x float> %94, <2 x float>* %95, align 8
  %96 = bitcast i64* %11 to %"class.gfx::Vector2dF"*
  %97 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 2
  %98 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %97, align 8
  %99 = bitcast %"class.cc::CompositorDelegateForInput"* %98 to %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)***
  %100 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)**, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*** %99, align 8
  %101 = getelementptr inbounds %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %100, i64 3
  %102 = load %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)*, %"class.cc::ScrollTree"* (%"class.cc::CompositorDelegateForInput"*)** %101, align 8
  %103 = call dereferenceable(120) %"class.cc::ScrollTree"* %102(%"class.cc::CompositorDelegateForInput"* %98) #19
  %104 = load %"class.cc::CompositorDelegateForInput"*, %"class.cc::CompositorDelegateForInput"** %97, align 8
  %105 = bitcast %"class.cc::CompositorDelegateForInput"* %104 to float (%"class.cc::CompositorDelegateForInput"*)***
  %106 = load float (%"class.cc::CompositorDelegateForInput"*)**, float (%"class.cc::CompositorDelegateForInput"*)*** %105, align 8
  %107 = getelementptr inbounds float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %106, i64 19
  %108 = load float (%"class.cc::CompositorDelegateForInput"*)*, float (%"class.cc::CompositorDelegateForInput"*)** %107, align 8
  %109 = call float %108(%"class.cc::CompositorDelegateForInput"* %104) #19
  %110 = bitcast i64* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #19
  %111 = bitcast i64* %11 to <2 x float>*
  store <2 x float> %94, <2 x float>* %111, align 8
  %112 = fdiv float 1.000000e+00, %109
  call void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"* nonnull %96, float %112, float %112) #19
  %113 = bitcast i64* %11 to <2 x float>*
  %114 = load <2 x float>, <2 x float>* %113, align 8
  %115 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 5
  %116 = load i8, i8* %115, align 4
  %117 = and i8 %116, 64
  %118 = icmp eq i8 %117, 0
  %119 = insertelement <2 x float> %114, float 0.000000e+00, i32 0
  %120 = select i1 %118, <2 x float> %119, <2 x float> %114
  %121 = icmp sgt i8 %116, -1
  %122 = insertelement <2 x float> %120, float 0.000000e+00, i32 1
  %123 = select i1 %121, <2 x float> %122, <2 x float> %120
  store <2 x float> %123, <2 x float>* %113, align 8
  %124 = getelementptr inbounds %"struct.cc::ScrollNode", %"struct.cc::ScrollNode"* %2, i64 0, i32 8, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = call <2 x float> @_ZNK2cc10ScrollTree21current_scroll_offsetENS_9ElementIdE(%"class.cc::ScrollTree"* %103, i64 %125) #19
  %127 = bitcast i64* %11 to <2 x float>*
  %128 = load <2 x float>, <2 x float>* %127, align 8
  %129 = fadd <2 x float> %128, %126
  %130 = call <2 x float> @_ZNK2cc10ScrollTree25ClampScrollOffsetToLimitsEN3gfx12ScrollOffsetERKNS_10ScrollNodeE(%"class.cc::ScrollTree"* %103, <2 x float> %129, %"struct.cc::ScrollNode"* dereferenceable(168) %2) #19
  %131 = extractelement <2 x float> %130, i32 0
  %132 = extractelement <2 x float> %126, i32 0
  %133 = fsub float %131, %132
  %134 = extractelement <2 x float> %130, i32 1
  %135 = extractelement <2 x float> %126, i32 1
  %136 = fsub float %134, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #19
  %137 = fcmp une float %133, 0.000000e+00
  %138 = fcmp une float %136, 0.000000e+00
  %139 = or i1 %137, %138
  br label %140

140:                                              ; preds = %93, %3, %42
  %141 = phi i1 [ false, %42 ], [ true, %3 ], [ %139, %93 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #19
  ret i1 %141
}

declare <2 x float> @_ZNK2cc13LayerTreeImpl17TotalScrollOffsetEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare <2 x float> @_ZNK2cc13LayerTreeImpl20TotalMaxScrollOffsetEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare <2 x float> @_ZNK2cc13LayerTreeImpl14ScrollableSizeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare void @_ZN2cc28BrowserControlsOffsetManager11ScrollBeginEv(%"class.cc::BrowserControlsOffsetManager"*) local_unnamed_addr #6

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2cc20ThreadedInputHandler22UpdateScrollSourceInfoERKNS_11ScrollStateEN2ui15ScrollInputTypeE(%"class.cc::ThreadedInputHandler"* nocapture, %"class.cc::ScrollState"* nocapture readonly dereferenceable(80), i32) local_unnamed_addr #12 align 2 {
  switch i32 %2, label %16 [
    i32 1, label %4
    i32 0, label %12
    i32 3, label %14
  ]

4:                                                ; preds = %3
  %5 = getelementptr inbounds %"class.cc::ScrollState", %"class.cc::ScrollState"* %1, i64 0, i32 0, i32 15
  %6 = load i8, i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 27
  store i8 1, i8* %9, align 1
  br label %16

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 25
  store i8 1, i8* %11, align 1
  br label %16

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 26
  store i8 1, i8* %13, align 2
  br label %16

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.cc::ThreadedInputHandler", %"class.cc::ThreadedInputHandler"* %0, i64 0, i32 28
  store i8 1, i8* %15, align 4
  br label %16

16:                                               ; preds = %3, %10, %14, %12, %8
  ret void
}

declare <2 x float> @_ZNK2cc11ScrollState11DeltaOrHintEv(%"class.cc::ScrollState"*) local_unnamed_addr #6

declare %"class.cc::SnapSelectionStrategy"* @_ZN2cc21SnapSelectionStrategy20CreateForEndPositionERKN3gfx12ScrollOffsetEbbNS_25SnapTargetsPrioritizationE(%"class.gfx::ScrollOffset"* dereferenceable(8), i1 zeroext, i1 zeroext, i32) local_unnamed_addr #6

declare void @_ZN2cc13LayerTreeImpl27ClearCurrentlyScrollingNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

; Function Attrs: nounwind
declare void @_ZN2cc11ScrollStateD1Ev(%"class.cc::ScrollState"*) unnamed_addr #2

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #6

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #6

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #6

declare i64 @_ZNK2cc15ScrollStateData32current_native_scrolling_elementEv(%"class.cc::ScrollStateData"*) local_unnamed_addr #6

declare <2 x float> @_ZN3gfx10ScalePointERKNS_6PointFEff(%"class.gfx::PointF"* dereferenceable(8), float, float) local_unnamed_addr #6

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #6

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #6

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF3AddERKS0_(%"class.gfx::Vector2dF"*, %"class.gfx::Vector2dF"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN3gfx9Vector2dF5ScaleEff(%"class.gfx::Vector2dF"*, float, float) local_unnamed_addr #6

declare <2 x float> @_ZN3gfx13ScaleVector2dERKNS_9Vector2dFEff(%"class.gfx::Vector2dF"* dereferenceable(8), float, float) local_unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #14

declare %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23InnerViewportScrollNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare %"struct.cc::ScrollNode"* @_ZNK2cc13LayerTreeImpl23OuterViewportScrollNodeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK10SkMatrix446invertEPS_(%class.SkMatrix44*, %class.SkMatrix44*) local_unnamed_addr #6

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #15

declare %"class.cc::SyncedProperty"* @_ZNK2cc13LayerTreeImpl17page_scale_factorEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare zeroext i1 @_ZNK2cc13LayerTreeImpl12IsActiveTreeEv(%"class.cc::LayerTreeImpl"*) local_unnamed_addr #6

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #16

declare void @_ZN2cc19ScrollbarControllerC1EPNS_17LayerTreeHostImplE(%"class.cc::ScrollbarController"*, %"class.cc::LayerTreeHostImpl"*) unnamed_addr #6

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #2

declare void @_ZN2cc11ScrollStateC1ERKS0_(%"class.cc::ScrollState"*, %"class.cc::ScrollState"* dereferenceable(80)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.cc::ElementId"* @_ZNSt3__16vectorIN2cc9ElementIdENS_9allocatorIS2_EEE7emplaceIJRKS2_EEENS_11__wrap_iterIPS2_EENS9_IPS7_EEDpOT_(%"class.std::__1::vector"*, %"struct.cc::ElementId"*, %"struct.cc::ElementId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.cc::ElementId"* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1498", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %8 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %9, align 8
  %11 = icmp ult %"struct.cc::ElementId"* %8, %10
  %12 = ptrtoint %"struct.cc::ElementId"* %8 to i64
  %13 = ptrtoint %"struct.cc::ElementId"* %10 to i64
  br i1 %11, label %14, label %164

14:                                               ; preds = %3
  %15 = icmp eq %"struct.cc::ElementId"* %8, %1
  %16 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %2, i64 0, i32 0
  br i1 %15, label %17, label %23

17:                                               ; preds = %14
  %18 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %19 = load i64, i64* %16, align 8
  store i64 %19, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 1
  %21 = ptrtoint %"struct.cc::ElementId"* %20 to i64
  %22 = bitcast %"struct.cc::ElementId"** %7 to i64*
  store i64 %21, i64* %22, align 8
  br label %314

23:                                               ; preds = %14
  %24 = load i64, i64* %16, align 8
  %25 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 1
  %26 = ptrtoint %"struct.cc::ElementId"* %25 to i64
  %27 = sub i64 %12, %26
  %28 = ashr exact i64 %27, 3
  %29 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 %28
  %30 = bitcast %"struct.cc::ElementId"** %7 to i64*
  %31 = icmp ult %"struct.cc::ElementId"* %29, %8
  br i1 %31, label %32, label %145

32:                                               ; preds = %23
  %33 = sub nsw i64 0, %28
  %34 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %33, i32 0
  %35 = bitcast i64* %34 to i8*
  %36 = xor i64 %4, -1
  %37 = getelementptr i8, i8* %35, i64 %36
  %38 = ptrtoint i8* %37 to i64
  %39 = lshr i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = icmp ult i64 %40, 4
  br i1 %41, label %42, label %45

42:                                               ; preds = %140, %45, %32
  %43 = phi %"struct.cc::ElementId"* [ %8, %45 ], [ %8, %32 ], [ %63, %140 ]
  %44 = phi %"struct.cc::ElementId"* [ %29, %45 ], [ %29, %32 ], [ %64, %140 ]
  br label %153

45:                                               ; preds = %32
  %46 = sub nsw i64 0, %28
  %47 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %46, i32 0
  %48 = bitcast i64* %47 to i8*
  %49 = xor i64 %4, -1
  %50 = getelementptr i8, i8* %48, i64 %49
  %51 = ptrtoint i8* %50 to i64
  %52 = lshr i64 %51, 3
  %53 = add nuw nsw i64 %52, 1
  %54 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %53
  %55 = add nsw i64 %28, %52
  %56 = add nsw i64 %55, 1
  %57 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 %56
  %58 = icmp ult %"struct.cc::ElementId"* %8, %57
  %59 = icmp ult %"struct.cc::ElementId"* %29, %54
  %60 = and i1 %58, %59
  br i1 %60, label %42, label %61

61:                                               ; preds = %45
  %62 = and i64 %40, 4611686018427387900
  %63 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %62
  %64 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %62
  %65 = add nsw i64 %62, -4
  %66 = lshr exact i64 %65, 2
  %67 = add nuw nsw i64 %66, 1
  %68 = and i64 %67, 3
  %69 = icmp ult i64 %65, 12
  br i1 %69, label %121, label %70

70:                                               ; preds = %61
  %71 = sub nsw i64 %67, %68
  br label %72

72:                                               ; preds = %72, %70
  %73 = phi i64 [ 0, %70 ], [ %118, %72 ]
  %74 = phi i64 [ %71, %70 ], [ %119, %72 ]
  %75 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %73
  %76 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %73, i32 0
  %77 = bitcast %"struct.cc::ElementId"* %75 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !alias.scope !8
  %79 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %75, i64 2
  %80 = bitcast %"struct.cc::ElementId"* %79 to <2 x i64>*
  %81 = load <2 x i64>, <2 x i64>* %80, align 8, !alias.scope !8
  %82 = bitcast i64* %76 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %82, align 8, !alias.scope !11, !noalias !8
  %83 = getelementptr i64, i64* %76, i64 2
  %84 = bitcast i64* %83 to <2 x i64>*
  store <2 x i64> %81, <2 x i64>* %84, align 8, !alias.scope !11, !noalias !8
  %85 = or i64 %73, 4
  %86 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %85
  %87 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %85, i32 0
  %88 = bitcast %"struct.cc::ElementId"* %86 to <2 x i64>*
  %89 = load <2 x i64>, <2 x i64>* %88, align 8, !alias.scope !8
  %90 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %86, i64 2
  %91 = bitcast %"struct.cc::ElementId"* %90 to <2 x i64>*
  %92 = load <2 x i64>, <2 x i64>* %91, align 8, !alias.scope !8
  %93 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> %89, <2 x i64>* %93, align 8, !alias.scope !11, !noalias !8
  %94 = getelementptr i64, i64* %87, i64 2
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> %92, <2 x i64>* %95, align 8, !alias.scope !11, !noalias !8
  %96 = or i64 %73, 8
  %97 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %96
  %98 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %96, i32 0
  %99 = bitcast %"struct.cc::ElementId"* %97 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !8
  %101 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %97, i64 2
  %102 = bitcast %"struct.cc::ElementId"* %101 to <2 x i64>*
  %103 = load <2 x i64>, <2 x i64>* %102, align 8, !alias.scope !8
  %104 = bitcast i64* %98 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %104, align 8, !alias.scope !11, !noalias !8
  %105 = getelementptr i64, i64* %98, i64 2
  %106 = bitcast i64* %105 to <2 x i64>*
  store <2 x i64> %103, <2 x i64>* %106, align 8, !alias.scope !11, !noalias !8
  %107 = or i64 %73, 12
  %108 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %107
  %109 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %107, i32 0
  %110 = bitcast %"struct.cc::ElementId"* %108 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !8
  %112 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %108, i64 2
  %113 = bitcast %"struct.cc::ElementId"* %112 to <2 x i64>*
  %114 = load <2 x i64>, <2 x i64>* %113, align 8, !alias.scope !8
  %115 = bitcast i64* %109 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %115, align 8, !alias.scope !11, !noalias !8
  %116 = getelementptr i64, i64* %109, i64 2
  %117 = bitcast i64* %116 to <2 x i64>*
  store <2 x i64> %114, <2 x i64>* %117, align 8, !alias.scope !11, !noalias !8
  %118 = add i64 %73, 16
  %119 = add i64 %74, -4
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %72, !llvm.loop !13

121:                                              ; preds = %72, %61
  %122 = phi i64 [ 0, %61 ], [ %118, %72 ]
  %123 = icmp eq i64 %68, 0
  br i1 %123, label %140, label %124

124:                                              ; preds = %121, %124
  %125 = phi i64 [ %137, %124 ], [ %122, %121 ]
  %126 = phi i64 [ %138, %124 ], [ %68, %121 ]
  %127 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %29, i64 %125
  %128 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %125, i32 0
  %129 = bitcast %"struct.cc::ElementId"* %127 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !8
  %131 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %127, i64 2
  %132 = bitcast %"struct.cc::ElementId"* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !8
  %134 = bitcast i64* %128 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !11, !noalias !8
  %135 = getelementptr i64, i64* %128, i64 2
  %136 = bitcast i64* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !11, !noalias !8
  %137 = add i64 %125, 4
  %138 = add i64 %126, -1
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %124, !llvm.loop !15

140:                                              ; preds = %124, %121
  %141 = icmp eq i64 %40, %62
  br i1 %141, label %142, label %42

142:                                              ; preds = %153, %140
  %143 = phi %"struct.cc::ElementId"* [ %63, %140 ], [ %160, %153 ]
  %144 = ptrtoint %"struct.cc::ElementId"* %143 to i64
  br label %145

145:                                              ; preds = %142, %23
  %146 = phi i64 [ %144, %142 ], [ %12, %23 ]
  store i64 %146, i64* %30, align 8
  %147 = icmp eq i64 %27, 0
  br i1 %147, label %162, label %148

148:                                              ; preds = %145
  %149 = sub nsw i64 0, %28
  %150 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %8, i64 %149
  %151 = bitcast %"struct.cc::ElementId"* %150 to i8*
  %152 = bitcast %"struct.cc::ElementId"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %152, i64 %27, i1 false) #19
  br label %162

153:                                              ; preds = %42, %153
  %154 = phi %"struct.cc::ElementId"* [ %160, %153 ], [ %43, %42 ]
  %155 = phi %"struct.cc::ElementId"* [ %159, %153 ], [ %44, %42 ]
  %156 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %155, i64 0, i32 0
  %157 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %154, i64 0, i32 0
  %158 = load i64, i64* %156, align 8
  store i64 %158, i64* %157, align 8
  %159 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %155, i64 1
  %160 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %154, i64 1
  %161 = icmp ult %"struct.cc::ElementId"* %159, %8
  br i1 %161, label %153, label %142, !llvm.loop !17

162:                                              ; preds = %145, %148
  %163 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  store i64 %24, i64* %163, align 8
  br label %314

164:                                              ; preds = %3
  %165 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2
  %166 = bitcast %"struct.std::__1::__split_buffer.1498"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %166) #19
  %167 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %5, i64 0, i32 0
  %168 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %5, i64 0, i32 1
  %169 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %5, i64 0, i32 2
  %170 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %5, i64 0, i32 3, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %5, i64 0, i32 3, i32 1, i32 0
  %172 = bitcast %"struct.cc::ElementId"** %7 to i64*
  %173 = bitcast %"class.std::__1::vector"* %0 to i64*
  %174 = bitcast %"struct.std::__1::__split_buffer.1498"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %174, i8 -86, i64 40, i1 false)
  %175 = load i64, i64* %173, align 8
  %176 = sub i64 %12, %175
  %177 = ashr exact i64 %176, 3
  %178 = add nsw i64 %177, 1
  %179 = icmp ugt i64 %178, 2305843009213693951
  br i1 %179, label %180, label %182

180:                                              ; preds = %164
  %181 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %181) #20
  unreachable

182:                                              ; preds = %164
  %183 = bitcast %"struct.cc::ElementId"** %9 to i64*
  %184 = sub i64 %13, %175
  %185 = ashr exact i64 %184, 3
  %186 = icmp ult i64 %185, 1152921504606846975
  br i1 %186, label %191, label %187

187:                                              ; preds = %182
  %188 = sub i64 %4, %175
  %189 = ashr exact i64 %188, 3
  store %"struct.cc::ElementId"* null, %"struct.cc::ElementId"** %170, align 8
  %190 = bitcast %"class.std::__1::allocator"** %171 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %165, %"class.std::__1::__compressed_pair"** %190, align 8
  br label %202

191:                                              ; preds = %182
  %192 = ashr exact i64 %184, 2
  %193 = icmp ult i64 %192, %178
  %194 = select i1 %193, i64 %178, i64 %192
  %195 = sub i64 %4, %175
  %196 = ashr exact i64 %195, 3
  store %"struct.cc::ElementId"* null, %"struct.cc::ElementId"** %170, align 8
  %197 = bitcast %"class.std::__1::allocator"** %171 to %"class.std::__1::__compressed_pair"**
  store %"class.std::__1::__compressed_pair"* %165, %"class.std::__1::__compressed_pair"** %197, align 8
  %198 = icmp eq i64 %194, 0
  br i1 %198, label %208, label %199

199:                                              ; preds = %191
  %200 = icmp ugt i64 %194, 2305843009213693951
  br i1 %200, label %201, label %202

201:                                              ; preds = %199
  tail call void @abort() #20
  unreachable

202:                                              ; preds = %187, %199
  %203 = phi i64 [ 2305843009213693951, %187 ], [ %194, %199 ]
  %204 = phi i64 [ %189, %187 ], [ %196, %199 ]
  %205 = shl i64 %203, 3
  %206 = tail call i8* @_Znwm(i64 %205) #18
  %207 = bitcast i8* %206 to %"struct.cc::ElementId"*
  br label %208

208:                                              ; preds = %191, %202
  %209 = phi i64 [ %204, %202 ], [ %196, %191 ]
  %210 = phi i64 [ %203, %202 ], [ 0, %191 ]
  %211 = phi %"struct.cc::ElementId"* [ %207, %202 ], [ null, %191 ]
  store %"struct.cc::ElementId"* %211, %"struct.cc::ElementId"** %167, align 8
  %212 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %211, i64 %209
  store %"struct.cc::ElementId"* %212, %"struct.cc::ElementId"** %169, align 8
  store %"struct.cc::ElementId"* %212, %"struct.cc::ElementId"** %168, align 8
  %213 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %211, i64 %210
  store %"struct.cc::ElementId"* %213, %"struct.cc::ElementId"** %170, align 8
  call void @_ZNSt3__114__split_bufferIN2cc9ElementIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.1498"* nonnull %5, %"struct.cc::ElementId"* dereferenceable(8) %2)
  %214 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %168, align 8
  %215 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %6, align 8
  %216 = ptrtoint %"struct.cc::ElementId"* %215 to i64
  %217 = sub i64 %4, %216
  %218 = ashr exact i64 %217, 3
  %219 = sub nsw i64 0, %218
  %220 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %214, i64 %219
  store %"struct.cc::ElementId"* %220, %"struct.cc::ElementId"** %168, align 8
  %221 = icmp sgt i64 %217, 0
  br i1 %221, label %222, label %225

222:                                              ; preds = %208
  %223 = bitcast %"struct.cc::ElementId"* %220 to i8*
  %224 = bitcast %"struct.cc::ElementId"* %215 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %223, i8* align 8 %224, i64 %217, i1 false) #19
  br label %225

225:                                              ; preds = %222, %208
  %226 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %7, align 8
  %227 = icmp eq %"struct.cc::ElementId"* %226, %1
  br i1 %227, label %228, label %232

228:                                              ; preds = %225
  %229 = ptrtoint %"struct.cc::ElementId"* %226 to i64
  %230 = bitcast %"struct.cc::ElementId"** %169 to i64*
  %231 = load i64, i64* %230, align 8
  br label %288

232:                                              ; preds = %225
  %233 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %234 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %226, i64 -1, i32 0
  %235 = ptrtoint i64* %234 to i64
  %236 = sub i64 %235, %4
  %237 = lshr i64 %236, 3
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %253, label %241

241:                                              ; preds = %232, %241
  %242 = phi %"struct.cc::ElementId"* [ %250, %241 ], [ %233, %232 ]
  %243 = phi %"struct.cc::ElementId"* [ %248, %241 ], [ %1, %232 ]
  %244 = phi i64 [ %251, %241 ], [ %239, %232 ]
  %245 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %243, i64 0, i32 0
  %246 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %242, i64 0, i32 0
  %247 = load i64, i64* %245, align 8
  store i64 %247, i64* %246, align 8
  %248 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %243, i64 1
  %249 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %250 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %249, i64 1
  store %"struct.cc::ElementId"* %250, %"struct.cc::ElementId"** %169, align 8
  %251 = add i64 %244, -1
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %253, label %241, !llvm.loop !18

253:                                              ; preds = %241, %232
  %254 = phi %"struct.cc::ElementId"* [ undef, %232 ], [ %250, %241 ]
  %255 = phi %"struct.cc::ElementId"* [ %233, %232 ], [ %250, %241 ]
  %256 = phi %"struct.cc::ElementId"* [ %1, %232 ], [ %248, %241 ]
  %257 = icmp ult i64 %236, 24
  br i1 %257, label %283, label %258

258:                                              ; preds = %253, %258
  %259 = phi %"struct.cc::ElementId"* [ %281, %258 ], [ %255, %253 ]
  %260 = phi %"struct.cc::ElementId"* [ %279, %258 ], [ %256, %253 ]
  %261 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %260, i64 0, i32 0
  %262 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %259, i64 0, i32 0
  %263 = load i64, i64* %261, align 8
  store i64 %263, i64* %262, align 8
  %264 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %265 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %264, i64 1
  store %"struct.cc::ElementId"* %265, %"struct.cc::ElementId"** %169, align 8
  %266 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %260, i64 1, i32 0
  %267 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %265, i64 0, i32 0
  %268 = load i64, i64* %266, align 8
  store i64 %268, i64* %267, align 8
  %269 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %270 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %269, i64 1
  store %"struct.cc::ElementId"* %270, %"struct.cc::ElementId"** %169, align 8
  %271 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %260, i64 2, i32 0
  %272 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %270, i64 0, i32 0
  %273 = load i64, i64* %271, align 8
  store i64 %273, i64* %272, align 8
  %274 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %275 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %274, i64 1
  store %"struct.cc::ElementId"* %275, %"struct.cc::ElementId"** %169, align 8
  %276 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %260, i64 3, i32 0
  %277 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %275, i64 0, i32 0
  %278 = load i64, i64* %276, align 8
  store i64 %278, i64* %277, align 8
  %279 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %260, i64 4
  %280 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %169, align 8
  %281 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %280, i64 1
  store %"struct.cc::ElementId"* %281, %"struct.cc::ElementId"** %169, align 8
  %282 = icmp eq %"struct.cc::ElementId"* %279, %226
  br i1 %282, label %283, label %258

283:                                              ; preds = %258, %253
  %284 = phi %"struct.cc::ElementId"* [ %254, %253 ], [ %281, %258 ]
  %285 = ptrtoint %"struct.cc::ElementId"* %284 to i64
  %286 = load i64, i64* %172, align 8
  %287 = bitcast %"struct.cc::ElementId"** %169 to i64*
  br label %288

288:                                              ; preds = %228, %283
  %289 = phi i64* [ %230, %228 ], [ %287, %283 ]
  %290 = phi i64 [ %231, %228 ], [ %285, %283 ]
  %291 = phi i64 [ %229, %228 ], [ %286, %283 ]
  %292 = load i64, i64* %173, align 8
  %293 = bitcast %"struct.cc::ElementId"** %168 to i64*
  %294 = load i64, i64* %293, align 8
  store i64 %294, i64* %173, align 8
  store i64 %292, i64* %293, align 8
  store i64 %290, i64* %172, align 8
  store i64 %291, i64* %289, align 8
  %295 = load i64, i64* %183, align 8
  %296 = bitcast %"struct.cc::ElementId"** %170 to i64*
  %297 = load i64, i64* %296, align 8
  store i64 %297, i64* %183, align 8
  store i64 %295, i64* %296, align 8
  %298 = bitcast %"struct.std::__1::__split_buffer.1498"* %5 to i64*
  store i64 %292, i64* %298, align 8
  %299 = inttoptr i64 %292 to %"struct.cc::ElementId"*
  %300 = inttoptr i64 %291 to %"struct.cc::ElementId"*
  %301 = icmp eq %"struct.cc::ElementId"* %300, %299
  br i1 %301, label %309, label %302

302:                                              ; preds = %288
  %303 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %300, i64 -1, i32 0
  %304 = ptrtoint i64* %303 to i64
  %305 = sub i64 %304, %292
  %306 = lshr i64 %305, 3
  %307 = xor i64 %306, -1
  %308 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %300, i64 %307
  store %"struct.cc::ElementId"* %308, %"struct.cc::ElementId"** %169, align 8
  br label %309

309:                                              ; preds = %302, %288
  %310 = icmp eq i64 %292, 0
  br i1 %310, label %313, label %311

311:                                              ; preds = %309
  %312 = inttoptr i64 %292 to i8*
  call void @_ZdlPv(i8* %312) #18
  br label %313

313:                                              ; preds = %309, %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %166) #19
  br label %314

314:                                              ; preds = %17, %162, %313
  %315 = phi %"struct.cc::ElementId"* [ %1, %17 ], [ %1, %162 ], [ %214, %313 ]
  ret %"struct.cc::ElementId"* %315
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIN2cc9ElementIdERNS_9allocatorIS2_EEE12emplace_backIJRKS2_EEEvDpOT_(%"struct.std::__1::__split_buffer.1498"*, %"struct.cc::ElementId"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %0, i64 0, i32 2
  %4 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %5, align 8
  %7 = icmp eq %"struct.cc::ElementId"* %4, %6
  %8 = ptrtoint %"struct.cc::ElementId"* %6 to i64
  br i1 %7, label %9, label %233

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %0, i64 0, i32 1
  %11 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %10, align 8
  %12 = bitcast %"struct.cc::ElementId"* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1498", %"struct.std::__1::__split_buffer.1498"* %0, i64 0, i32 0
  %14 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %13, align 8
  %15 = icmp ugt %"struct.cc::ElementId"* %11, %14
  %16 = ptrtoint %"struct.cc::ElementId"* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint %"struct.cc::ElementId"* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %22
  %24 = ptrtoint %"struct.cc::ElementId"* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast %"struct.cc::ElementId"* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %12, i64 %25, i1 false) #19
  %30 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi %"struct.cc::ElementId"* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %23, i64 %26
  store %"struct.cc::ElementId"* %33, %"struct.cc::ElementId"** %3, align 8
  %34 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %32, i64 %22
  store %"struct.cc::ElementId"* %34, %"struct.cc::ElementId"** %10, align 8
  br label %233

35:                                               ; preds = %9
  %36 = bitcast %"struct.cc::ElementId"** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.1498"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 2
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 2305843009213693951
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #20
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 3
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to %"struct.cc::ElementId"*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %48, i64 %45
  %51 = ptrtoint %"struct.cc::ElementId"* %50 to i64
  %52 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %48, i64 %41
  %53 = ptrtoint %"struct.cc::ElementId"* %52 to i64
  %54 = ptrtoint %"struct.cc::ElementId"* %11 to i64
  %55 = ptrtoint %"struct.cc::ElementId"* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 3
  %58 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %223, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -8
  %62 = lshr i64 %61, 3
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 4
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = shl nuw nsw i64 %45, 3
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -8
  %69 = lshr i64 %68, 3
  %70 = and i64 %68, -8
  %71 = add i64 %66, %70
  %72 = add i64 %71, 8
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %74
  %76 = bitcast %"struct.cc::ElementId"* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 4611686018427387900
  %82 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %81
  %83 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %81
  %84 = add nsw i64 %81, -4
  %85 = lshr exact i64 %84, 2
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 12
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %92
  %95 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %92, i32 0
  %96 = bitcast i64* %95 to <2 x i64>*
  %97 = load <2 x i64>, <2 x i64>* %96, align 8, !alias.scope !19
  %98 = getelementptr i64, i64* %95, i64 2
  %99 = bitcast i64* %98 to <2 x i64>*
  %100 = load <2 x i64>, <2 x i64>* %99, align 8, !alias.scope !19
  %101 = bitcast %"struct.cc::ElementId"* %94 to <2 x i64>*
  store <2 x i64> %97, <2 x i64>* %101, align 8, !alias.scope !22, !noalias !19
  %102 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %94, i64 2
  %103 = bitcast %"struct.cc::ElementId"* %102 to <2 x i64>*
  store <2 x i64> %100, <2 x i64>* %103, align 8, !alias.scope !22, !noalias !19
  %104 = or i64 %92, 4
  %105 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %104
  %106 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %104, i32 0
  %107 = bitcast i64* %106 to <2 x i64>*
  %108 = load <2 x i64>, <2 x i64>* %107, align 8, !alias.scope !19
  %109 = getelementptr i64, i64* %106, i64 2
  %110 = bitcast i64* %109 to <2 x i64>*
  %111 = load <2 x i64>, <2 x i64>* %110, align 8, !alias.scope !19
  %112 = bitcast %"struct.cc::ElementId"* %105 to <2 x i64>*
  store <2 x i64> %108, <2 x i64>* %112, align 8, !alias.scope !22, !noalias !19
  %113 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %105, i64 2
  %114 = bitcast %"struct.cc::ElementId"* %113 to <2 x i64>*
  store <2 x i64> %111, <2 x i64>* %114, align 8, !alias.scope !22, !noalias !19
  %115 = or i64 %92, 8
  %116 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %115
  %117 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %115, i32 0
  %118 = bitcast i64* %117 to <2 x i64>*
  %119 = load <2 x i64>, <2 x i64>* %118, align 8, !alias.scope !19
  %120 = getelementptr i64, i64* %117, i64 2
  %121 = bitcast i64* %120 to <2 x i64>*
  %122 = load <2 x i64>, <2 x i64>* %121, align 8, !alias.scope !19
  %123 = bitcast %"struct.cc::ElementId"* %116 to <2 x i64>*
  store <2 x i64> %119, <2 x i64>* %123, align 8, !alias.scope !22, !noalias !19
  %124 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %116, i64 2
  %125 = bitcast %"struct.cc::ElementId"* %124 to <2 x i64>*
  store <2 x i64> %122, <2 x i64>* %125, align 8, !alias.scope !22, !noalias !19
  %126 = or i64 %92, 12
  %127 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %126
  %128 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %126, i32 0
  %129 = bitcast i64* %128 to <2 x i64>*
  %130 = load <2 x i64>, <2 x i64>* %129, align 8, !alias.scope !19
  %131 = getelementptr i64, i64* %128, i64 2
  %132 = bitcast i64* %131 to <2 x i64>*
  %133 = load <2 x i64>, <2 x i64>* %132, align 8, !alias.scope !19
  %134 = bitcast %"struct.cc::ElementId"* %127 to <2 x i64>*
  store <2 x i64> %130, <2 x i64>* %134, align 8, !alias.scope !22, !noalias !19
  %135 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %127, i64 2
  %136 = bitcast %"struct.cc::ElementId"* %135 to <2 x i64>*
  store <2 x i64> %133, <2 x i64>* %136, align 8, !alias.scope !22, !noalias !19
  %137 = add i64 %92, 16
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !24

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %50, i64 %144
  %147 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %11, i64 %144, i32 0
  %148 = bitcast i64* %147 to <2 x i64>*
  %149 = load <2 x i64>, <2 x i64>* %148, align 8, !alias.scope !19
  %150 = getelementptr i64, i64* %147, i64 2
  %151 = bitcast i64* %150 to <2 x i64>*
  %152 = load <2 x i64>, <2 x i64>* %151, align 8, !alias.scope !19
  %153 = bitcast %"struct.cc::ElementId"* %146 to <2 x i64>*
  store <2 x i64> %149, <2 x i64>* %153, align 8, !alias.scope !22, !noalias !19
  %154 = getelementptr %"struct.cc::ElementId", %"struct.cc::ElementId"* %146, i64 2
  %155 = bitcast %"struct.cc::ElementId"* %154 to <2 x i64>*
  store <2 x i64> %152, <2 x i64>* %155, align 8, !alias.scope !22, !noalias !19
  %156 = add i64 %144, 4
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !25

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %220, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi %"struct.cc::ElementId"* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi %"struct.cc::ElementId"* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint %"struct.cc::ElementId"* %162 to i64
  %165 = shl nuw nsw i64 %45, 3
  %166 = add i64 %56, %165
  %167 = add i64 %166, -8
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %186, label %175

175:                                              ; preds = %161, %175
  %176 = phi %"struct.cc::ElementId"* [ %182, %175 ], [ %162, %161 ]
  %177 = phi %"struct.cc::ElementId"* [ %183, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %184, %175 ], [ %173, %161 ]
  %179 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %177, i64 0, i32 0
  %180 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %176, i64 0, i32 0
  %181 = load i64, i64* %179, align 8
  store i64 %181, i64* %180, align 8
  %182 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %176, i64 1
  %183 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %177, i64 1
  %184 = add i64 %178, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %175, !llvm.loop !26

186:                                              ; preds = %175, %161
  %187 = phi %"struct.cc::ElementId"* [ %162, %161 ], [ %182, %175 ]
  %188 = phi %"struct.cc::ElementId"* [ %163, %161 ], [ %183, %175 ]
  %189 = icmp ult i8* %169, inttoptr (i64 56 to i8*)
  br i1 %189, label %220, label %190

190:                                              ; preds = %186, %190
  %191 = phi %"struct.cc::ElementId"* [ %217, %190 ], [ %187, %186 ]
  %192 = phi %"struct.cc::ElementId"* [ %218, %190 ], [ %188, %186 ]
  %193 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 0, i32 0
  %194 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 0, i32 0
  %195 = load i64, i64* %193, align 8
  store i64 %195, i64* %194, align 8
  %196 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 1, i32 0
  %197 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 1, i32 0
  %198 = load i64, i64* %196, align 8
  store i64 %198, i64* %197, align 8
  %199 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 2, i32 0
  %200 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 2, i32 0
  %201 = load i64, i64* %199, align 8
  store i64 %201, i64* %200, align 8
  %202 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 3, i32 0
  %203 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 3, i32 0
  %204 = load i64, i64* %202, align 8
  store i64 %204, i64* %203, align 8
  %205 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 4, i32 0
  %206 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 4, i32 0
  %207 = load i64, i64* %205, align 8
  store i64 %207, i64* %206, align 8
  %208 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 5, i32 0
  %209 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 5, i32 0
  %210 = load i64, i64* %208, align 8
  store i64 %210, i64* %209, align 8
  %211 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 6, i32 0
  %212 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 6, i32 0
  %213 = load i64, i64* %211, align 8
  store i64 %213, i64* %212, align 8
  %214 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 7, i32 0
  %215 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 7, i32 0
  %216 = load i64, i64* %214, align 8
  store i64 %216, i64* %215, align 8
  %217 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %191, i64 8
  %218 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %192, i64 8
  %219 = icmp eq %"struct.cc::ElementId"* %58, %217
  br i1 %219, label %220, label %190, !llvm.loop !27

220:                                              ; preds = %186, %190, %159
  %221 = ptrtoint %"struct.cc::ElementId"* %58 to i64
  %222 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %13, align 8
  br label %223

223:                                              ; preds = %44, %220
  %224 = phi %"struct.cc::ElementId"* [ %222, %220 ], [ %14, %44 ]
  %225 = phi i64 [ %221, %220 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %226 = bitcast %"struct.cc::ElementId"** %10 to i64*
  store i64 %51, i64* %226, align 8
  %227 = bitcast %"struct.cc::ElementId"** %3 to i64*
  store i64 %225, i64* %227, align 8
  store i64 %53, i64* %36, align 8
  %228 = icmp eq %"struct.cc::ElementId"* %224, null
  %229 = inttoptr i64 %225 to %"struct.cc::ElementId"*
  br i1 %228, label %233, label %230

230:                                              ; preds = %223
  %231 = bitcast %"struct.cc::ElementId"* %224 to i8*
  tail call void @_ZdlPv(i8* %231) #18
  %232 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %3, align 8
  br label %233

233:                                              ; preds = %230, %223, %31, %2
  %234 = phi %"struct.cc::ElementId"* [ %232, %230 ], [ %229, %223 ], [ %33, %31 ], [ %4, %2 ]
  %235 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %1, i64 0, i32 0
  %236 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %234, i64 0, i32 0
  %237 = load i64, i64* %235, align 8
  store i64 %237, i64* %236, align 8
  %238 = load %"struct.cc::ElementId"*, %"struct.cc::ElementId"** %3, align 8
  %239 = getelementptr inbounds %"struct.cc::ElementId", %"struct.cc::ElementId"* %238, i64 1
  store %"struct.cc::ElementId"* %239, %"struct.cc::ElementId"** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZNSt3__16vectorIiNS_9allocatorIiEEE7emplaceIJiEEENS_11__wrap_iterIPiEENS5_IPKiEEDpOT_(%"class.std::__1::vector.149"*, i32*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i32* %1 to i64
  %5 = alloca %"struct.std::__1::__split_buffer.1505", align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 1
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp ult i32* %8, %10
  %12 = ptrtoint i32* %8 to i64
  %13 = ptrtoint i32* %10 to i64
  br i1 %11, label %14, label %158

14:                                               ; preds = %3
  %15 = icmp eq i32* %8, %1
  %16 = load i32, i32* %2, align 4
  br i1 %15, label %17, label %21

17:                                               ; preds = %14
  store i32 %16, i32* %1, align 4
  %18 = getelementptr inbounds i32, i32* %1, i64 1
  %19 = ptrtoint i32* %18 to i64
  %20 = bitcast i32** %7 to i64*
  store i64 %19, i64* %20, align 8
  br label %301

21:                                               ; preds = %14
  %22 = getelementptr inbounds i32, i32* %1, i64 1
  %23 = ptrtoint i32* %22 to i64
  %24 = sub i64 %12, %23
  %25 = ashr exact i64 %24, 2
  %26 = getelementptr inbounds i32, i32* %1, i64 %25
  %27 = bitcast i32** %7 to i64*
  %28 = icmp ult i32* %26, %8
  br i1 %28, label %29, label %142

29:                                               ; preds = %21
  %30 = sub nsw i64 0, %25
  %31 = getelementptr i32, i32* %8, i64 %30
  %32 = bitcast i32* %31 to i8*
  %33 = xor i64 %4, -1
  %34 = getelementptr i8, i8* %32, i64 %33
  %35 = ptrtoint i8* %34 to i64
  %36 = lshr i64 %35, 2
  %37 = add nuw nsw i64 %36, 1
  %38 = icmp ult i64 %37, 8
  br i1 %38, label %39, label %42

39:                                               ; preds = %137, %42, %29
  %40 = phi i32* [ %8, %42 ], [ %8, %29 ], [ %60, %137 ]
  %41 = phi i32* [ %26, %42 ], [ %26, %29 ], [ %61, %137 ]
  br label %150

42:                                               ; preds = %29
  %43 = sub nsw i64 0, %25
  %44 = getelementptr i32, i32* %8, i64 %43
  %45 = bitcast i32* %44 to i8*
  %46 = xor i64 %4, -1
  %47 = getelementptr i8, i8* %45, i64 %46
  %48 = ptrtoint i8* %47 to i64
  %49 = lshr i64 %48, 2
  %50 = add nuw nsw i64 %49, 1
  %51 = getelementptr i32, i32* %8, i64 %50
  %52 = add nsw i64 %25, %49
  %53 = add i64 %52, 1
  %54 = getelementptr i32, i32* %1, i64 %53
  %55 = icmp ult i32* %8, %54
  %56 = icmp ult i32* %26, %51
  %57 = and i1 %55, %56
  br i1 %57, label %39, label %58

58:                                               ; preds = %42
  %59 = and i64 %37, 9223372036854775800
  %60 = getelementptr i32, i32* %8, i64 %59
  %61 = getelementptr i32, i32* %26, i64 %59
  %62 = add nsw i64 %59, -8
  %63 = lshr exact i64 %62, 3
  %64 = add nuw nsw i64 %63, 1
  %65 = and i64 %64, 3
  %66 = icmp ult i64 %62, 24
  br i1 %66, label %118, label %67

67:                                               ; preds = %58
  %68 = sub nsw i64 %64, %65
  br label %69

69:                                               ; preds = %69, %67
  %70 = phi i64 [ 0, %67 ], [ %115, %69 ]
  %71 = phi i64 [ %68, %67 ], [ %116, %69 ]
  %72 = getelementptr i32, i32* %8, i64 %70
  %73 = getelementptr i32, i32* %26, i64 %70
  %74 = bitcast i32* %73 to <4 x i32>*
  %75 = load <4 x i32>, <4 x i32>* %74, align 4, !alias.scope !28
  %76 = getelementptr i32, i32* %73, i64 4
  %77 = bitcast i32* %76 to <4 x i32>*
  %78 = load <4 x i32>, <4 x i32>* %77, align 4, !alias.scope !28
  %79 = bitcast i32* %72 to <4 x i32>*
  store <4 x i32> %75, <4 x i32>* %79, align 4, !alias.scope !31, !noalias !28
  %80 = getelementptr i32, i32* %72, i64 4
  %81 = bitcast i32* %80 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %81, align 4, !alias.scope !31, !noalias !28
  %82 = or i64 %70, 8
  %83 = getelementptr i32, i32* %8, i64 %82
  %84 = getelementptr i32, i32* %26, i64 %82
  %85 = bitcast i32* %84 to <4 x i32>*
  %86 = load <4 x i32>, <4 x i32>* %85, align 4, !alias.scope !28
  %87 = getelementptr i32, i32* %84, i64 4
  %88 = bitcast i32* %87 to <4 x i32>*
  %89 = load <4 x i32>, <4 x i32>* %88, align 4, !alias.scope !28
  %90 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> %86, <4 x i32>* %90, align 4, !alias.scope !31, !noalias !28
  %91 = getelementptr i32, i32* %83, i64 4
  %92 = bitcast i32* %91 to <4 x i32>*
  store <4 x i32> %89, <4 x i32>* %92, align 4, !alias.scope !31, !noalias !28
  %93 = or i64 %70, 16
  %94 = getelementptr i32, i32* %8, i64 %93
  %95 = getelementptr i32, i32* %26, i64 %93
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !28
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !28
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !31, !noalias !28
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !31, !noalias !28
  %104 = or i64 %70, 24
  %105 = getelementptr i32, i32* %8, i64 %104
  %106 = getelementptr i32, i32* %26, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !28
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !28
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !31, !noalias !28
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !31, !noalias !28
  %115 = add i64 %70, 32
  %116 = add i64 %71, -4
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %69, !llvm.loop !33

118:                                              ; preds = %69, %58
  %119 = phi i64 [ 0, %58 ], [ %115, %69 ]
  %120 = icmp eq i64 %65, 0
  br i1 %120, label %137, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %134, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %135, %121 ], [ %65, %118 ]
  %124 = getelementptr i32, i32* %8, i64 %122
  %125 = getelementptr i32, i32* %26, i64 %122
  %126 = bitcast i32* %125 to <4 x i32>*
  %127 = load <4 x i32>, <4 x i32>* %126, align 4, !alias.scope !28
  %128 = getelementptr i32, i32* %125, i64 4
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !28
  %131 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %131, align 4, !alias.scope !31, !noalias !28
  %132 = getelementptr i32, i32* %124, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %133, align 4, !alias.scope !31, !noalias !28
  %134 = add i64 %122, 8
  %135 = add i64 %123, -1
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %137, label %121, !llvm.loop !34

137:                                              ; preds = %121, %118
  %138 = icmp eq i64 %37, %59
  br i1 %138, label %139, label %39

139:                                              ; preds = %150, %137
  %140 = phi i32* [ %60, %137 ], [ %155, %150 ]
  %141 = ptrtoint i32* %140 to i64
  br label %142

142:                                              ; preds = %139, %21
  %143 = phi i64 [ %141, %139 ], [ %12, %21 ]
  store i64 %143, i64* %27, align 8
  %144 = icmp eq i64 %24, 0
  br i1 %144, label %157, label %145

145:                                              ; preds = %142
  %146 = sub nsw i64 0, %25
  %147 = getelementptr inbounds i32, i32* %8, i64 %146
  %148 = bitcast i32* %147 to i8*
  %149 = bitcast i32* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %148, i8* align 4 %149, i64 %24, i1 false) #19
  br label %157

150:                                              ; preds = %39, %150
  %151 = phi i32* [ %155, %150 ], [ %40, %39 ]
  %152 = phi i32* [ %154, %150 ], [ %41, %39 ]
  %153 = load i32, i32* %152, align 4
  store i32 %153, i32* %151, align 4
  %154 = getelementptr inbounds i32, i32* %152, i64 1
  %155 = getelementptr inbounds i32, i32* %151, i64 1
  %156 = icmp ult i32* %154, %8
  br i1 %156, label %150, label %139, !llvm.loop !35

157:                                              ; preds = %142, %145
  store i32 %16, i32* %1, align 4
  br label %301

158:                                              ; preds = %3
  %159 = getelementptr inbounds %"class.std::__1::vector.149", %"class.std::__1::vector.149"* %0, i64 0, i32 0, i32 2
  %160 = bitcast %"struct.std::__1::__split_buffer.1505"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %160) #19
  %161 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %5, i64 0, i32 0
  %162 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %5, i64 0, i32 1
  %163 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %5, i64 0, i32 2
  %164 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %5, i64 0, i32 3, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %5, i64 0, i32 3, i32 1, i32 0
  %166 = bitcast i32** %7 to i64*
  %167 = bitcast %"class.std::__1::vector.149"* %0 to i64*
  %168 = bitcast %"struct.std::__1::__split_buffer.1505"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %168, i8 -86, i64 40, i1 false)
  %169 = load i64, i64* %167, align 8
  %170 = sub i64 %12, %169
  %171 = ashr exact i64 %170, 2
  %172 = add nsw i64 %171, 1
  %173 = icmp ugt i64 %172, 4611686018427387903
  br i1 %173, label %174, label %176

174:                                              ; preds = %158
  %175 = bitcast %"class.std::__1::vector.149"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %175) #20
  unreachable

176:                                              ; preds = %158
  %177 = bitcast i32** %9 to i64*
  %178 = sub i64 %13, %169
  %179 = ashr exact i64 %178, 2
  %180 = icmp ult i64 %179, 2305843009213693951
  br i1 %180, label %185, label %181

181:                                              ; preds = %176
  %182 = sub i64 %4, %169
  %183 = ashr exact i64 %182, 2
  store i32* null, i32** %164, align 8
  %184 = bitcast %"class.std::__1::allocator.154"** %165 to %"class.std::__1::__compressed_pair.151"**
  store %"class.std::__1::__compressed_pair.151"* %159, %"class.std::__1::__compressed_pair.151"** %184, align 8
  br label %196

185:                                              ; preds = %176
  %186 = ashr exact i64 %178, 1
  %187 = icmp ult i64 %186, %172
  %188 = select i1 %187, i64 %172, i64 %186
  %189 = sub i64 %4, %169
  %190 = ashr exact i64 %189, 2
  store i32* null, i32** %164, align 8
  %191 = bitcast %"class.std::__1::allocator.154"** %165 to %"class.std::__1::__compressed_pair.151"**
  store %"class.std::__1::__compressed_pair.151"* %159, %"class.std::__1::__compressed_pair.151"** %191, align 8
  %192 = icmp eq i64 %188, 0
  br i1 %192, label %202, label %193

193:                                              ; preds = %185
  %194 = icmp ugt i64 %188, 4611686018427387903
  br i1 %194, label %195, label %196

195:                                              ; preds = %193
  tail call void @abort() #20
  unreachable

196:                                              ; preds = %181, %193
  %197 = phi i64 [ 4611686018427387903, %181 ], [ %188, %193 ]
  %198 = phi i64 [ %183, %181 ], [ %190, %193 ]
  %199 = shl i64 %197, 2
  %200 = tail call i8* @_Znwm(i64 %199) #18
  %201 = bitcast i8* %200 to i32*
  br label %202

202:                                              ; preds = %185, %196
  %203 = phi i64 [ %198, %196 ], [ %190, %185 ]
  %204 = phi i64 [ %197, %196 ], [ 0, %185 ]
  %205 = phi i32* [ %201, %196 ], [ null, %185 ]
  store i32* %205, i32** %161, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 %203
  store i32* %206, i32** %163, align 8
  store i32* %206, i32** %162, align 8
  %207 = getelementptr inbounds i32, i32* %205, i64 %204
  store i32* %207, i32** %164, align 8
  call void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer.1505"* nonnull %5, i32* dereferenceable(4) %2)
  %208 = load i32*, i32** %162, align 8
  %209 = load i32*, i32** %6, align 8
  %210 = ptrtoint i32* %209 to i64
  %211 = sub i64 %4, %210
  %212 = ashr exact i64 %211, 2
  %213 = sub nsw i64 0, %212
  %214 = getelementptr inbounds i32, i32* %208, i64 %213
  store i32* %214, i32** %162, align 8
  %215 = icmp sgt i64 %211, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %202
  %217 = bitcast i32* %214 to i8*
  %218 = bitcast i32* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %217, i8* align 4 %218, i64 %211, i1 false) #19
  br label %219

219:                                              ; preds = %216, %202
  %220 = load i32*, i32** %7, align 8
  %221 = icmp eq i32* %220, %1
  br i1 %221, label %222, label %226

222:                                              ; preds = %219
  %223 = ptrtoint i32* %220 to i64
  %224 = bitcast i32** %163 to i64*
  %225 = load i64, i64* %224, align 8
  br label %275

226:                                              ; preds = %219
  %227 = load i32*, i32** %163, align 8
  %228 = getelementptr i32, i32* %220, i64 -1
  %229 = ptrtoint i32* %228 to i64
  %230 = sub i64 %229, %4
  %231 = lshr i64 %230, 2
  %232 = add nuw nsw i64 %231, 1
  %233 = and i64 %232, 3
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %245, label %235

235:                                              ; preds = %226, %235
  %236 = phi i32* [ %242, %235 ], [ %227, %226 ]
  %237 = phi i32* [ %240, %235 ], [ %1, %226 ]
  %238 = phi i64 [ %243, %235 ], [ %233, %226 ]
  %239 = load i32, i32* %237, align 4
  store i32 %239, i32* %236, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 1
  %241 = load i32*, i32** %163, align 8
  %242 = getelementptr inbounds i32, i32* %241, i64 1
  store i32* %242, i32** %163, align 8
  %243 = add i64 %238, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %235, !llvm.loop !36

245:                                              ; preds = %235, %226
  %246 = phi i32* [ undef, %226 ], [ %242, %235 ]
  %247 = phi i32* [ %227, %226 ], [ %242, %235 ]
  %248 = phi i32* [ %1, %226 ], [ %240, %235 ]
  %249 = icmp ult i64 %230, 12
  br i1 %249, label %270, label %250

250:                                              ; preds = %245, %250
  %251 = phi i32* [ %268, %250 ], [ %247, %245 ]
  %252 = phi i32* [ %266, %250 ], [ %248, %245 ]
  %253 = load i32, i32* %252, align 4
  store i32 %253, i32* %251, align 4
  %254 = getelementptr inbounds i32, i32* %252, i64 1
  %255 = load i32*, i32** %163, align 8
  %256 = getelementptr inbounds i32, i32* %255, i64 1
  store i32* %256, i32** %163, align 8
  %257 = load i32, i32* %254, align 4
  store i32 %257, i32* %256, align 4
  %258 = getelementptr inbounds i32, i32* %252, i64 2
  %259 = load i32*, i32** %163, align 8
  %260 = getelementptr inbounds i32, i32* %259, i64 1
  store i32* %260, i32** %163, align 8
  %261 = load i32, i32* %258, align 4
  store i32 %261, i32* %260, align 4
  %262 = getelementptr inbounds i32, i32* %252, i64 3
  %263 = load i32*, i32** %163, align 8
  %264 = getelementptr inbounds i32, i32* %263, i64 1
  store i32* %264, i32** %163, align 8
  %265 = load i32, i32* %262, align 4
  store i32 %265, i32* %264, align 4
  %266 = getelementptr inbounds i32, i32* %252, i64 4
  %267 = load i32*, i32** %163, align 8
  %268 = getelementptr inbounds i32, i32* %267, i64 1
  store i32* %268, i32** %163, align 8
  %269 = icmp eq i32* %266, %220
  br i1 %269, label %270, label %250

270:                                              ; preds = %250, %245
  %271 = phi i32* [ %246, %245 ], [ %268, %250 ]
  %272 = ptrtoint i32* %271 to i64
  %273 = load i64, i64* %166, align 8
  %274 = bitcast i32** %163 to i64*
  br label %275

275:                                              ; preds = %222, %270
  %276 = phi i64* [ %224, %222 ], [ %274, %270 ]
  %277 = phi i64 [ %225, %222 ], [ %272, %270 ]
  %278 = phi i64 [ %223, %222 ], [ %273, %270 ]
  %279 = load i64, i64* %167, align 8
  %280 = bitcast i32** %162 to i64*
  %281 = load i64, i64* %280, align 8
  store i64 %281, i64* %167, align 8
  store i64 %279, i64* %280, align 8
  store i64 %277, i64* %166, align 8
  store i64 %278, i64* %276, align 8
  %282 = load i64, i64* %177, align 8
  %283 = bitcast i32** %164 to i64*
  %284 = load i64, i64* %283, align 8
  store i64 %284, i64* %177, align 8
  store i64 %282, i64* %283, align 8
  %285 = bitcast %"struct.std::__1::__split_buffer.1505"* %5 to i64*
  store i64 %279, i64* %285, align 8
  %286 = inttoptr i64 %279 to i32*
  %287 = inttoptr i64 %278 to i32*
  %288 = icmp eq i32* %287, %286
  br i1 %288, label %296, label %289

289:                                              ; preds = %275
  %290 = getelementptr i32, i32* %287, i64 -1
  %291 = ptrtoint i32* %290 to i64
  %292 = sub i64 %291, %279
  %293 = lshr i64 %292, 2
  %294 = xor i64 %293, -1
  %295 = getelementptr i32, i32* %287, i64 %294
  store i32* %295, i32** %163, align 8
  br label %296

296:                                              ; preds = %289, %275
  %297 = icmp eq i64 %279, 0
  br i1 %297, label %300, label %298

298:                                              ; preds = %296
  %299 = inttoptr i64 %279 to i8*
  call void @_ZdlPv(i8* %299) #18
  br label %300

300:                                              ; preds = %296, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %160) #19
  br label %301

301:                                              ; preds = %17, %157, %300
  %302 = phi i32* [ %1, %17 ], [ %1, %157 ], [ %208, %300 ]
  ret i32* %302
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE12emplace_backIJiEEEvDpOT_(%"struct.std::__1::__split_buffer.1505"*, i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %0, i64 0, i32 2
  %4 = load i32*, i32** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %4, %6
  %8 = ptrtoint i32* %6 to i64
  br i1 %7, label %9, label %229

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %0, i64 0, i32 1
  %11 = load i32*, i32** %10, align 8
  %12 = bitcast i32* %11 to i8*
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1505", %"struct.std::__1::__split_buffer.1505"* %0, i64 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp ugt i32* %11, %14
  %16 = ptrtoint i32* %14 to i64
  br i1 %15, label %17, label %35

17:                                               ; preds = %9
  %18 = ptrtoint i32* %11 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 2
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds i32, i32* %11, i64 %22
  %24 = ptrtoint i32* %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 2
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %17
  %29 = bitcast i32* %23 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %29, i8* align 4 %12, i64 %25, i1 false) #19
  %30 = load i32*, i32** %10, align 8
  br label %31

31:                                               ; preds = %17, %28
  %32 = phi i32* [ %11, %17 ], [ %30, %28 ]
  %33 = getelementptr inbounds i32, i32* %23, i64 %26
  store i32* %33, i32** %3, align 8
  %34 = getelementptr inbounds i32, i32* %32, i64 %22
  store i32* %34, i32** %10, align 8
  br label %229

35:                                               ; preds = %9
  %36 = bitcast i32** %5 to i64*
  %37 = bitcast %"struct.std::__1::__split_buffer.1505"* %0 to i64*
  %38 = sub i64 %8, %16
  %39 = ashr exact i64 %38, 1
  %40 = icmp eq i64 %38, 0
  %41 = select i1 %40, i64 1, i64 %39
  %42 = icmp ugt i64 %41, 4611686018427387903
  br i1 %42, label %43, label %44

43:                                               ; preds = %35
  tail call void @abort() #20
  unreachable

44:                                               ; preds = %35
  %45 = lshr i64 %41, 2
  %46 = shl i64 %41, 2
  %47 = tail call i8* @_Znwm(i64 %46) #18
  %48 = bitcast i8* %47 to i32*
  %49 = ptrtoint i8* %47 to i64
  %50 = getelementptr inbounds i32, i32* %48, i64 %45
  %51 = ptrtoint i32* %50 to i64
  %52 = getelementptr inbounds i32, i32* %48, i64 %41
  %53 = ptrtoint i32* %52 to i64
  %54 = ptrtoint i32* %11 to i64
  %55 = ptrtoint i32* %4 to i64
  %56 = sub i64 %55, %54
  %57 = ashr exact i64 %56, 2
  %58 = getelementptr inbounds i32, i32* %50, i64 %57
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %219, label %60

60:                                               ; preds = %44
  %61 = add i64 %56, -4
  %62 = lshr i64 %61, 2
  %63 = add nuw nsw i64 %62, 1
  %64 = icmp ult i64 %63, 8
  br i1 %64, label %161, label %65

65:                                               ; preds = %60
  %66 = and i64 %41, -4
  %67 = getelementptr i8, i8* %47, i64 %66
  %68 = add i64 %56, -4
  %69 = lshr i64 %68, 2
  %70 = and i64 %68, -4
  %71 = add i64 %66, %70
  %72 = add i64 %71, 4
  %73 = getelementptr i8, i8* %47, i64 %72
  %74 = add nuw nsw i64 %69, 1
  %75 = getelementptr i32, i32* %11, i64 %74
  %76 = bitcast i32* %75 to i8*
  %77 = icmp ult i8* %67, %76
  %78 = icmp ugt i8* %73, %12
  %79 = and i1 %77, %78
  br i1 %79, label %161, label %80

80:                                               ; preds = %65
  %81 = and i64 %63, 9223372036854775800
  %82 = getelementptr i32, i32* %50, i64 %81
  %83 = getelementptr i32, i32* %11, i64 %81
  %84 = add nsw i64 %81, -8
  %85 = lshr exact i64 %84, 3
  %86 = add nuw nsw i64 %85, 1
  %87 = and i64 %86, 3
  %88 = icmp ult i64 %84, 24
  br i1 %88, label %140, label %89

89:                                               ; preds = %80
  %90 = sub nsw i64 %86, %87
  br label %91

91:                                               ; preds = %91, %89
  %92 = phi i64 [ 0, %89 ], [ %137, %91 ]
  %93 = phi i64 [ %90, %89 ], [ %138, %91 ]
  %94 = getelementptr i32, i32* %50, i64 %92
  %95 = getelementptr i32, i32* %11, i64 %92
  %96 = bitcast i32* %95 to <4 x i32>*
  %97 = load <4 x i32>, <4 x i32>* %96, align 4, !alias.scope !37
  %98 = getelementptr i32, i32* %95, i64 4
  %99 = bitcast i32* %98 to <4 x i32>*
  %100 = load <4 x i32>, <4 x i32>* %99, align 4, !alias.scope !37
  %101 = bitcast i32* %94 to <4 x i32>*
  store <4 x i32> %97, <4 x i32>* %101, align 4, !alias.scope !40, !noalias !37
  %102 = getelementptr i32, i32* %94, i64 4
  %103 = bitcast i32* %102 to <4 x i32>*
  store <4 x i32> %100, <4 x i32>* %103, align 4, !alias.scope !40, !noalias !37
  %104 = or i64 %92, 8
  %105 = getelementptr i32, i32* %50, i64 %104
  %106 = getelementptr i32, i32* %11, i64 %104
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4, !alias.scope !37
  %109 = getelementptr i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4, !alias.scope !37
  %112 = bitcast i32* %105 to <4 x i32>*
  store <4 x i32> %108, <4 x i32>* %112, align 4, !alias.scope !40, !noalias !37
  %113 = getelementptr i32, i32* %105, i64 4
  %114 = bitcast i32* %113 to <4 x i32>*
  store <4 x i32> %111, <4 x i32>* %114, align 4, !alias.scope !40, !noalias !37
  %115 = or i64 %92, 16
  %116 = getelementptr i32, i32* %50, i64 %115
  %117 = getelementptr i32, i32* %11, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !37
  %120 = getelementptr i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !37
  %123 = bitcast i32* %116 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %123, align 4, !alias.scope !40, !noalias !37
  %124 = getelementptr i32, i32* %116, i64 4
  %125 = bitcast i32* %124 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %125, align 4, !alias.scope !40, !noalias !37
  %126 = or i64 %92, 24
  %127 = getelementptr i32, i32* %50, i64 %126
  %128 = getelementptr i32, i32* %11, i64 %126
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !37
  %131 = getelementptr i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !37
  %134 = bitcast i32* %127 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %134, align 4, !alias.scope !40, !noalias !37
  %135 = getelementptr i32, i32* %127, i64 4
  %136 = bitcast i32* %135 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %136, align 4, !alias.scope !40, !noalias !37
  %137 = add i64 %92, 32
  %138 = add i64 %93, -4
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %91, !llvm.loop !42

140:                                              ; preds = %91, %80
  %141 = phi i64 [ 0, %80 ], [ %137, %91 ]
  %142 = icmp eq i64 %87, 0
  br i1 %142, label %159, label %143

143:                                              ; preds = %140, %143
  %144 = phi i64 [ %156, %143 ], [ %141, %140 ]
  %145 = phi i64 [ %157, %143 ], [ %87, %140 ]
  %146 = getelementptr i32, i32* %50, i64 %144
  %147 = getelementptr i32, i32* %11, i64 %144
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !37
  %150 = getelementptr i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !37
  %153 = bitcast i32* %146 to <4 x i32>*
  store <4 x i32> %149, <4 x i32>* %153, align 4, !alias.scope !40, !noalias !37
  %154 = getelementptr i32, i32* %146, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %155, align 4, !alias.scope !40, !noalias !37
  %156 = add i64 %144, 8
  %157 = add i64 %145, -1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %143, !llvm.loop !43

159:                                              ; preds = %143, %140
  %160 = icmp eq i64 %63, %81
  br i1 %160, label %216, label %161

161:                                              ; preds = %159, %65, %60
  %162 = phi i32* [ %50, %65 ], [ %50, %60 ], [ %82, %159 ]
  %163 = phi i32* [ %11, %65 ], [ %11, %60 ], [ %83, %159 ]
  %164 = ptrtoint i32* %162 to i64
  %165 = and i64 %41, -4
  %166 = add i64 %56, %165
  %167 = add i64 %166, -4
  %168 = sub i64 %167, %164
  %169 = getelementptr i8, i8* %47, i64 %168
  %170 = ptrtoint i8* %169 to i64
  %171 = lshr i64 %170, 2
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 7
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %161, %175
  %176 = phi i32* [ %180, %175 ], [ %162, %161 ]
  %177 = phi i32* [ %181, %175 ], [ %163, %161 ]
  %178 = phi i64 [ %182, %175 ], [ %173, %161 ]
  %179 = load i32, i32* %177, align 4
  store i32 %179, i32* %176, align 4
  %180 = getelementptr inbounds i32, i32* %176, i64 1
  %181 = getelementptr inbounds i32, i32* %177, i64 1
  %182 = add i64 %178, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !44

184:                                              ; preds = %175, %161
  %185 = phi i32* [ %162, %161 ], [ %180, %175 ]
  %186 = phi i32* [ %163, %161 ], [ %181, %175 ]
  %187 = icmp ult i8* %169, inttoptr (i64 28 to i8*)
  br i1 %187, label %216, label %188

188:                                              ; preds = %184, %188
  %189 = phi i32* [ %213, %188 ], [ %185, %184 ]
  %190 = phi i32* [ %214, %188 ], [ %186, %184 ]
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %189, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 1
  %193 = getelementptr inbounds i32, i32* %190, i64 1
  %194 = load i32, i32* %193, align 4
  store i32 %194, i32* %192, align 4
  %195 = getelementptr inbounds i32, i32* %189, i64 2
  %196 = getelementptr inbounds i32, i32* %190, i64 2
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %195, align 4
  %198 = getelementptr inbounds i32, i32* %189, i64 3
  %199 = getelementptr inbounds i32, i32* %190, i64 3
  %200 = load i32, i32* %199, align 4
  store i32 %200, i32* %198, align 4
  %201 = getelementptr inbounds i32, i32* %189, i64 4
  %202 = getelementptr inbounds i32, i32* %190, i64 4
  %203 = load i32, i32* %202, align 4
  store i32 %203, i32* %201, align 4
  %204 = getelementptr inbounds i32, i32* %189, i64 5
  %205 = getelementptr inbounds i32, i32* %190, i64 5
  %206 = load i32, i32* %205, align 4
  store i32 %206, i32* %204, align 4
  %207 = getelementptr inbounds i32, i32* %189, i64 6
  %208 = getelementptr inbounds i32, i32* %190, i64 6
  %209 = load i32, i32* %208, align 4
  store i32 %209, i32* %207, align 4
  %210 = getelementptr inbounds i32, i32* %189, i64 7
  %211 = getelementptr inbounds i32, i32* %190, i64 7
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %210, align 4
  %213 = getelementptr inbounds i32, i32* %189, i64 8
  %214 = getelementptr inbounds i32, i32* %190, i64 8
  %215 = icmp eq i32* %58, %213
  br i1 %215, label %216, label %188, !llvm.loop !45

216:                                              ; preds = %184, %188, %159
  %217 = ptrtoint i32* %58 to i64
  %218 = load i32*, i32** %13, align 8
  br label %219

219:                                              ; preds = %44, %216
  %220 = phi i32* [ %218, %216 ], [ %14, %44 ]
  %221 = phi i64 [ %217, %216 ], [ %51, %44 ]
  store i64 %49, i64* %37, align 8
  %222 = bitcast i32** %10 to i64*
  store i64 %51, i64* %222, align 8
  %223 = bitcast i32** %3 to i64*
  store i64 %221, i64* %223, align 8
  store i64 %53, i64* %36, align 8
  %224 = icmp eq i32* %220, null
  %225 = inttoptr i64 %221 to i32*
  br i1 %224, label %229, label %226

226:                                              ; preds = %219
  %227 = bitcast i32* %220 to i8*
  tail call void @_ZdlPv(i8* %227) #18
  %228 = load i32*, i32** %3, align 8
  br label %229

229:                                              ; preds = %226, %219, %31, %2
  %230 = phi i32* [ %228, %226 ], [ %225, %219 ], [ %33, %31 ], [ %4, %2 ]
  %231 = load i32, i32* %1, align 4
  store i32 %231, i32* %230, align 4
  %232 = load i32*, i32** %3, align 8
  %233 = getelementptr inbounds i32, i32* %232, i64 1
  store i32* %233, i32** %3, align 8
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind readnone speculatable }
attributes #16 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { builtin nounwind }
attributes #19 = { nounwind }
attributes #20 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN2cc20ThreadedInputHandlerEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN2cc20ThreadedInputHandlerEE10GetWeakPtrEv"}
!6 = !{!"branch_weights", i32 2000, i32 1}
!7 = !{!"branch_weights", i32 1, i32 2000}
!8 = !{!9}
!9 = distinct !{!9, !10}
!10 = distinct !{!10, !"LVerDomain"}
!11 = !{!12}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !14}
!14 = !{!"llvm.loop.isvectorized", i32 1}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.unroll.disable"}
!17 = distinct !{!17, !14}
!18 = distinct !{!18, !16}
!19 = !{!20}
!20 = distinct !{!20, !21}
!21 = distinct !{!21, !"LVerDomain"}
!22 = !{!23}
!23 = distinct !{!23, !21}
!24 = distinct !{!24, !14}
!25 = distinct !{!25, !16}
!26 = distinct !{!26, !16}
!27 = distinct !{!27, !14}
!28 = !{!29}
!29 = distinct !{!29, !30}
!30 = distinct !{!30, !"LVerDomain"}
!31 = !{!32}
!32 = distinct !{!32, !30}
!33 = distinct !{!33, !14}
!34 = distinct !{!34, !16}
!35 = distinct !{!35, !14}
!36 = distinct !{!36, !16}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = !{!41}
!41 = distinct !{!41, !39}
!42 = distinct !{!42, !14}
!43 = distinct !{!43, !16}
!44 = distinct !{!44, !16}
!45 = distinct !{!45, !14}
