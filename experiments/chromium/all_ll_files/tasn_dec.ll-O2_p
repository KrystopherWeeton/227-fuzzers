; ModuleID = '../../third_party/boringssl/src/crypto/asn1/tasn_dec.c'
source_filename = "../../third_party/boringssl/src/crypto/asn1/tasn_dec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_VALUE_st = type opaque
%struct.ASN1_ITEM_st = type { i8, i64, %struct.ASN1_TEMPLATE_st*, i64, i8*, i64, i8* }
%struct.ASN1_TEMPLATE_st = type { i64, i64, i64, i8*, %struct.ASN1_ITEM_st* }
%struct.ASN1_TLC_st = type { i8, i32, i64, i32, i32, i32 }
%struct.ASN1_AUX_st = type { i8*, i32, i32, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 }
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.stack_st_ASN1_VALUE = type opaque

@tag2bit = internal unnamed_addr constant [32 x i64] [i64 0, i64 0, i64 0, i64 1024, i64 512, i64 0, i64 0, i64 4096, i64 4096, i64 4096, i64 4096, i64 4096, i64 8192, i64 4096, i64 4096, i64 4096, i64 65536, i64 0, i64 1, i64 2, i64 4, i64 8, i64 16, i64 16384, i64 32768, i64 32, i64 64, i64 128, i64 256, i64 4096, i64 2048, i64 4096], align 16
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/asn1/tasn_dec.c\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"Field=\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c", Type=\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"Type=\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @ASN1_tag2bit(i32) local_unnamed_addr #0 {
  %2 = icmp ugt i32 %0, 30
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = sext i32 %0 to i64
  %5 = getelementptr inbounds [32 x i64], [32 x i64]* @tag2bit, i64 0, i64 %4
  %6 = load i64, i64* %5, align 8
  br label %7

7:                                                ; preds = %1, %3
  %8 = phi i64 [ %6, %3 ], [ 0, %1 ]
  ret i64 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.ASN1_VALUE_st* @ASN1_item_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*) local_unnamed_addr #1 {
  %5 = alloca %struct.ASN1_TLC_st, align 8
  %6 = alloca %struct.ASN1_VALUE_st*, align 8
  %7 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  %8 = bitcast %struct.ASN1_VALUE_st** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #4
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %6, align 8
  %9 = icmp eq %struct.ASN1_VALUE_st** %0, null
  %10 = select i1 %9, %struct.ASN1_VALUE_st** %6, %struct.ASN1_VALUE_st** %0
  store i8 0, i8* %7, align 8
  %11 = call fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** %10, i8** %1, i64 %2, %struct.ASN1_ITEM_st* %3, i32 -1, i32 0, i8 signext 0, %struct.ASN1_TLC_st* nonnull %5, i32 0) #4
  %12 = icmp sgt i32 %11, 0
  br i1 %12, label %13, label %15

13:                                               ; preds = %4
  %14 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %10, align 8
  br label %15

15:                                               ; preds = %4, %13
  %16 = phi %struct.ASN1_VALUE_st* [ %14, %13 ], [ null, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #4
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #4
  ret %struct.ASN1_VALUE_st* %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @ASN1_item_ex_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8 signext, %struct.ASN1_TLC_st*) local_unnamed_addr #1 {
  %9 = tail call fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** %0, i8** %1, i64 %2, %struct.ASN1_ITEM_st* %3, i32 %4, i32 %5, i8 signext %6, %struct.ASN1_TLC_st* %7, i32 0)
  ret i32 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8 signext, %struct.ASN1_TLC_st*, i32) unnamed_addr #1 {
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  store i64 %2, i64* %10, align 8
  %16 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 4
  %17 = bitcast i8** %16 to %struct.ASN1_AUX_st**
  %18 = load %struct.ASN1_AUX_st*, %struct.ASN1_AUX_st** %17, align 8
  %19 = bitcast i8** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  store i8* null, i8** %11, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #4
  store i8 -86, i8* %12, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #4
  store i8 -86, i8* %13, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #4
  store i8 -86, i8* %14, align 1
  %20 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #4
  store i32 -1431655766, i32* %15, align 4
  %21 = and i32 %5, 1024
  %22 = and i32 %5, -1025
  %23 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %23, label %365, label %24

24:                                               ; preds = %9
  %25 = icmp eq %struct.ASN1_AUX_st* %18, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %18, i64 0, i32 3
  %28 = load i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)*, i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)** %27, align 8
  %29 = icmp eq i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %26, %24
  br label %31

31:                                               ; preds = %26, %30
  %32 = phi i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* [ null, %30 ], [ %28, %26 ]
  %33 = icmp sgt i64 %2, 1073741823
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  store i64 1073741823, i64* %10, align 8
  br label %35

35:                                               ; preds = %34, %31
  %36 = phi i64 [ 1073741823, %34 ], [ %2, %31 ]
  %37 = add nsw i32 %8, 1
  %38 = icmp sgt i32 %8, 29
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @ERR_put_error(i32 12, i32 0, i32 192, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 200) #4
  br label %351

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 0
  %42 = load i8, i8* %41, align 8
  %43 = sext i8 %42 to i32
  switch i32 %43, label %365 [
    i32 0, label %44
    i32 5, label %57
    i32 4, label %92
    i32 2, label %97
    i32 1, label %179
  ]

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 2
  %46 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %45, align 8
  %47 = icmp eq %struct.ASN1_TEMPLATE_st* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = icmp eq i32 %4, -1
  %50 = icmp eq i8 %6, 0
  %51 = and i1 %49, %50
  br i1 %51, label %53, label %52

52:                                               ; preds = %48
  tail call void @ERR_put_error(i32 12, i32 0, i32 136, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 215) #4
  br label %351

53:                                               ; preds = %48
  %54 = tail call fastcc i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st** nonnull %0, i8** %1, i64 %36, %struct.ASN1_TEMPLATE_st* nonnull %46, i8 signext 0, %struct.ASN1_TLC_st* %7, i32 %37)
  br label %365

55:                                               ; preds = %44
  %56 = tail call fastcc i32 @asn1_d2i_ex_primitive(%struct.ASN1_VALUE_st** nonnull %0, i8** %1, i64 %36, %struct.ASN1_ITEM_st* %3, i32 %4, i32 %22, i8 signext %6, %struct.ASN1_TLC_st* %7)
  br label %365

57:                                               ; preds = %40
  %58 = icmp eq i32 %4, -1
  br i1 %58, label %60, label %59

59:                                               ; preds = %57
  tail call void @ERR_put_error(i32 12, i32 0, i32 193, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 231) #4
  br label %351

60:                                               ; preds = %57
  %61 = bitcast i8** %1 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i8** %11 to i64*
  store i64 %62, i64* %63, align 8
  %64 = call fastcc i32 @asn1_check_tlen(i64* null, i32* nonnull %15, i8* nonnull %12, i8* null, i8* null, i8** nonnull %11, i64 %36, i32 -1, i32 0, i8 signext 1, %struct.ASN1_TLC_st* %7)
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %60
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 240) #4
  br label %351

67:                                               ; preds = %60
  %68 = load i8, i8* %12, align 1
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = icmp eq i8 %6, 0
  br i1 %71, label %72, label %365

72:                                               ; preds = %70
  call void @ERR_put_error(i32 12, i32 0, i32 156, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 249) #4
  br label %351

73:                                               ; preds = %67
  %74 = load i32, i32* %15, align 4
  %75 = icmp ugt i32 %74, 30
  br i1 %75, label %80, label %76

76:                                               ; preds = %73
  %77 = sext i32 %74 to i64
  %78 = getelementptr inbounds [32 x i64], [32 x i64]* @tag2bit, i64 0, i64 %77
  %79 = load i64, i64* %78, align 8
  br label %80

80:                                               ; preds = %73, %76
  %81 = phi i64 [ %79, %76 ], [ 0, %73 ]
  %82 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = and i64 %83, %81
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = icmp eq i8 %6, 0
  br i1 %87, label %88, label %365

88:                                               ; preds = %86
  call void @ERR_put_error(i32 12, i32 0, i32 157, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 257) #4
  br label %351

89:                                               ; preds = %80
  %90 = load i64, i64* %10, align 8
  %91 = call fastcc i32 @asn1_d2i_ex_primitive(%struct.ASN1_VALUE_st** nonnull %0, i8** %1, i64 %90, %struct.ASN1_ITEM_st* %3, i32 %74, i32 0, i8 signext 0, %struct.ASN1_TLC_st* %7)
  br label %365

92:                                               ; preds = %40
  %93 = getelementptr inbounds %struct.ASN1_AUX_st, %struct.ASN1_AUX_st* %18, i64 1
  %94 = bitcast %struct.ASN1_AUX_st* %93 to i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)**
  %95 = load i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)*, i32 (%struct.ASN1_VALUE_st**, i8**, i64, %struct.ASN1_ITEM_st*, i32, i32, i8, %struct.ASN1_TLC_st*)** %94, align 8
  %96 = tail call i32 %95(%struct.ASN1_VALUE_st** nonnull %0, i8** %1, i64 %36, %struct.ASN1_ITEM_st* %3, i32 %4, i32 %22, i8 signext %6, %struct.ASN1_TLC_st* %7) #4
  br label %365

97:                                               ; preds = %40
  %98 = icmp eq i32 %4, -1
  br i1 %98, label %100, label %99

99:                                               ; preds = %97
  tail call void @ERR_put_error(i32 12, i32 0, i32 193, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 273) #4
  br label %351

100:                                              ; preds = %97
  %101 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %32, null
  br i1 %101, label %102, label %105

102:                                              ; preds = %100
  %103 = tail call i32 %32(i32 4, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %3, i8* null) #4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %350, label %105

105:                                              ; preds = %102, %100
  %106 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %107 = icmp eq %struct.ASN1_VALUE_st* %106, null
  br i1 %107, label %122, label %108

108:                                              ; preds = %105
  %109 = tail call i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %3) #4
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %111, label %126

111:                                              ; preds = %108
  %112 = sext i32 %109 to i64
  %113 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 3
  %114 = load i64, i64* %113, align 8
  %115 = icmp sgt i64 %114, %112
  br i1 %115, label %116, label %126

116:                                              ; preds = %111
  %117 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 2
  %118 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %117, align 8
  %119 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %118, i64 %112
  %120 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* %119) #4
  tail call void @ASN1_template_free(%struct.ASN1_VALUE_st** %120, %struct.ASN1_TEMPLATE_st* %119) #4
  %121 = tail call i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st** nonnull %0, i32 -1, %struct.ASN1_ITEM_st* %3) #4
  br label %126

122:                                              ; preds = %105
  %123 = tail call i32 @ASN1_item_ex_new(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %3) #4
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  tail call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 290) #4
  br label %351

126:                                              ; preds = %122, %108, %111, %116
  %127 = bitcast i8** %1 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast i8** %11 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 3
  %131 = load i64, i64* %130, align 8
  %132 = icmp sgt i64 %131, 0
  br i1 %132, label %133, label %163

133:                                              ; preds = %126
  %134 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 2
  %135 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %134, align 8
  %136 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %135) #4
  %137 = call fastcc i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st** %136, i8** nonnull %11, i64 %36, %struct.ASN1_TEMPLATE_st* %135, i8 signext 1, %struct.ASN1_TLC_st* %7, i32 %37)
  %138 = icmp eq i32 %137, -1
  br i1 %138, label %148, label %139

139:                                              ; preds = %154, %133
  %140 = phi i64 [ 0, %133 ], [ %151, %154 ]
  %141 = phi %struct.ASN1_TEMPLATE_st* [ %135, %133 ], [ %155, %154 ]
  %142 = phi i32 [ %137, %133 ], [ %158, %154 ]
  %143 = icmp sgt i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %139
  %145 = trunc i64 %140 to i32
  %146 = load i64, i64* %130, align 8
  br label %163

147:                                              ; preds = %139
  tail call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 309) #4
  br label %351

148:                                              ; preds = %133, %154
  %149 = phi %struct.ASN1_TEMPLATE_st* [ %155, %154 ], [ %135, %133 ]
  %150 = phi i64 [ %151, %154 ], [ 0, %133 ]
  %151 = add nuw nsw i64 %150, 1
  %152 = load i64, i64* %130, align 8
  %153 = icmp sgt i64 %152, %151
  br i1 %153, label %154, label %160

154:                                              ; preds = %148
  %155 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %149, i64 1
  %156 = load i64, i64* %10, align 8
  %157 = tail call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %155) #4
  %158 = call fastcc i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st** %157, i8** nonnull %11, i64 %156, %struct.ASN1_TEMPLATE_st* %155, i8 signext 1, %struct.ASN1_TLC_st* %7, i32 %37)
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %148, label %139

160:                                              ; preds = %148
  %161 = trunc i64 %151 to i32
  %162 = and i64 %151, 4294967295
  br label %163

163:                                              ; preds = %144, %126, %160
  %164 = phi i64 [ %146, %144 ], [ %152, %160 ], [ %131, %126 ]
  %165 = phi i32 [ %145, %144 ], [ %161, %160 ], [ 0, %126 ]
  %166 = phi i64 [ %140, %144 ], [ %162, %160 ], [ 0, %126 ]
  %167 = icmp eq i64 %164, %166
  br i1 %167, label %168, label %172

168:                                              ; preds = %163
  %169 = icmp eq i8 %6, 0
  br i1 %169, label %171, label %170

170:                                              ; preds = %168
  tail call void @ASN1_item_ex_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %3) #4
  br label %365

171:                                              ; preds = %168
  tail call void @ERR_put_error(i32 12, i32 0, i32 163, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 321) #4
  br label %351

172:                                              ; preds = %163
  %173 = tail call i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st** %0, i32 %165, %struct.ASN1_ITEM_st* %3) #4
  br i1 %101, label %174, label %177

174:                                              ; preds = %172
  %175 = tail call i32 %32(i32 5, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %3, i8* null) #4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %350, label %177

177:                                              ; preds = %174, %172
  %178 = load i64, i64* %129, align 8
  store i64 %178, i64* %127, align 8
  br label %365

179:                                              ; preds = %40
  %180 = bitcast i8** %1 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast i8** %11 to i64*
  store i64 %181, i64* %182, align 8
  %183 = icmp eq i32 %4, -1
  %184 = select i1 %183, i32 0, i32 %22
  %185 = select i1 %183, i32 16, i32 %4
  %186 = call fastcc i32 @asn1_check_tlen(i64* nonnull %10, i32* null, i8* null, i8* nonnull %13, i8* nonnull %14, i8** nonnull %11, i64 %36, i32 %185, i32 %184, i8 signext %6, %struct.ASN1_TLC_st* %7)
  switch i32 %186, label %188 [
    i32 0, label %187
    i32 -1, label %365
  ]

187:                                              ; preds = %179
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 343) #4
  br label %351

188:                                              ; preds = %179
  %189 = load i8, i8* %13, align 1
  %190 = load i8, i8* %14, align 1
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %188
  call void @ERR_put_error(i32 12, i32 0, i32 169, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 350) #4
  br label %351

193:                                              ; preds = %188
  %194 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %195 = icmp eq %struct.ASN1_VALUE_st* %194, null
  br i1 %195, label %196, label %200

196:                                              ; preds = %193
  %197 = call i32 @ASN1_item_ex_new(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %3) #4
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 355) #4
  br label %351

200:                                              ; preds = %196, %193
  %201 = icmp ne i32 (i32, %struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*, i8*)* %32, null
  br i1 %201, label %202, label %205

202:                                              ; preds = %200
  %203 = call i32 %32(i32 4, %struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_ITEM_st* %3, i8* null) #4
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %350, label %205

205:                                              ; preds = %202, %200
  %206 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 2
  %207 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %206, align 8
  %208 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 3
  %209 = load i64, i64* %208, align 8
  %210 = icmp sgt i64 %209, 0
  br i1 %210, label %211, label %289

211:                                              ; preds = %205, %223
  %212 = phi i64 [ %224, %223 ], [ 0, %205 ]
  %213 = phi %struct.ASN1_TEMPLATE_st* [ %225, %223 ], [ %207, %205 ]
  %214 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %213, i64 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = and i64 %215, 768
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %223, label %218

218:                                              ; preds = %211
  %219 = call %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %213, i32 0) #4
  %220 = icmp eq %struct.ASN1_TEMPLATE_st* %219, null
  br i1 %220, label %223, label %221

221:                                              ; preds = %218
  %222 = call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* nonnull %219) #4
  call void @ASN1_template_free(%struct.ASN1_VALUE_st** %222, %struct.ASN1_TEMPLATE_st* nonnull %219) #4
  br label %223

223:                                              ; preds = %221, %218, %211
  %224 = add nuw nsw i64 %212, 1
  %225 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %213, i64 1
  %226 = load i64, i64* %208, align 8
  %227 = icmp sgt i64 %226, %224
  br i1 %227, label %211, label %228

228:                                              ; preds = %223
  %229 = load %struct.ASN1_TEMPLATE_st*, %struct.ASN1_TEMPLATE_st** %206, align 8
  %230 = icmp sgt i64 %226, 0
  br i1 %230, label %231, label %289

231:                                              ; preds = %228, %281
  %232 = phi i64 [ %282, %281 ], [ 0, %228 ]
  %233 = phi i32 [ %283, %281 ], [ 0, %228 ]
  %234 = phi %struct.ASN1_TEMPLATE_st* [ %284, %281 ], [ %229, %228 ]
  %235 = call %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %234, i32 1) #4
  %236 = icmp eq %struct.ASN1_TEMPLATE_st* %235, null
  br i1 %236, label %351, label %237

237:                                              ; preds = %231
  %238 = call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* nonnull %235) #4
  %239 = load i64, i64* %10, align 8
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %287, label %241

241:                                              ; preds = %237
  %242 = load i8*, i8** %11, align 8
  %243 = icmp slt i64 %239, 2
  br i1 %243, label %262, label %244

244:                                              ; preds = %241
  %245 = load i8, i8* %242, align 1
  %246 = icmp eq i8 %245, 0
  br i1 %246, label %247, label %262

247:                                              ; preds = %244
  %248 = getelementptr inbounds i8, i8* %242, i64 1
  %249 = load i8, i8* %248, align 1
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %251, label %262

251:                                              ; preds = %247
  %252 = getelementptr inbounds i8, i8* %242, i64 2
  store i8* %252, i8** %11, align 8
  %253 = load i8, i8* %13, align 1
  %254 = icmp eq i8 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  call void @ERR_put_error(i32 12, i32 0, i32 180, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 389) #4
  br label %351

256:                                              ; preds = %251
  %257 = trunc i64 %232 to i32
  %258 = ptrtoint i8* %252 to i64
  %259 = ptrtoint i8* %242 to i64
  %260 = add i64 %239, %259
  %261 = sub i64 %260, %258
  store i64 %261, i64* %10, align 8
  store i8 0, i8* %13, align 1
  br label %308

262:                                              ; preds = %241, %247, %244
  %263 = load i64, i64* %208, align 8
  %264 = add nsw i64 %263, -1
  %265 = icmp eq i64 %264, %232
  br i1 %265, label %271, label %266

266:                                              ; preds = %262
  %267 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %235, i64 0, i32 0
  %268 = load i64, i64* %267, align 8
  %269 = trunc i64 %268 to i8
  %270 = and i8 %269, 1
  br label %271

271:                                              ; preds = %262, %266
  %272 = phi i8 [ %270, %266 ], [ 0, %262 ]
  %273 = call fastcc i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st** %238, i8** nonnull %11, i64 %239, %struct.ASN1_TEMPLATE_st* nonnull %235, i8 signext %272, %struct.ASN1_TLC_st* %7, i32 %37)
  switch i32 %273, label %275 [
    i32 0, label %351
    i32 -1, label %274
  ]

274:                                              ; preds = %271
  call void @ASN1_template_free(%struct.ASN1_VALUE_st** %238, %struct.ASN1_TEMPLATE_st* nonnull %235) #4
  br label %281

275:                                              ; preds = %271
  %276 = load i64, i64* %182, align 8
  %277 = ptrtoint i8* %242 to i64
  %278 = load i64, i64* %10, align 8
  %279 = sub i64 %277, %276
  %280 = add i64 %279, %278
  store i64 %280, i64* %10, align 8
  br label %281

281:                                              ; preds = %274, %275
  %282 = add nuw nsw i64 %232, 1
  %283 = add nuw nsw i32 %233, 1
  %284 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %234, i64 1
  %285 = load i64, i64* %208, align 8
  %286 = icmp sgt i64 %285, %282
  br i1 %286, label %231, label %289

287:                                              ; preds = %237
  %288 = trunc i64 %232 to i32
  br label %289

289:                                              ; preds = %281, %287, %205, %228
  %290 = phi %struct.ASN1_TEMPLATE_st* [ %229, %228 ], [ %207, %205 ], [ %234, %287 ], [ %284, %281 ]
  %291 = phi i32 [ 0, %228 ], [ 0, %205 ], [ %288, %287 ], [ %283, %281 ]
  %292 = load i8, i8* %13, align 1
  %293 = icmp eq i8 %292, 0
  %294 = load i64, i64* %10, align 8
  br i1 %293, label %308, label %295

295:                                              ; preds = %289
  %296 = icmp slt i64 %294, 2
  br i1 %296, label %307, label %297

297:                                              ; preds = %295
  %298 = load i8*, i8** %11, align 8
  %299 = load i8, i8* %298, align 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %307

301:                                              ; preds = %297
  %302 = getelementptr inbounds i8, i8* %298, i64 1
  %303 = load i8, i8* %302, align 1
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %305, label %307

305:                                              ; preds = %301
  %306 = getelementptr inbounds i8, i8* %298, i64 2
  store i8* %306, i8** %11, align 8
  br label %308

307:                                              ; preds = %295, %301, %297
  call void @ERR_put_error(i32 12, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 429) #4
  br label %351

308:                                              ; preds = %289, %305, %256
  %309 = phi i64 [ %294, %305 ], [ %261, %256 ], [ %294, %289 ]
  %310 = phi %struct.ASN1_TEMPLATE_st* [ %290, %305 ], [ %234, %256 ], [ %290, %289 ]
  %311 = phi i32 [ %291, %305 ], [ %257, %256 ], [ %291, %289 ]
  %312 = icmp eq i8 %189, 0
  %313 = icmp ne i64 %309, 0
  %314 = and i1 %312, %313
  br i1 %314, label %319, label %315

315:                                              ; preds = %308
  %316 = zext i32 %311 to i64
  %317 = load i64, i64* %208, align 8
  %318 = icmp sgt i64 %317, %316
  br i1 %318, label %320, label %337

319:                                              ; preds = %308
  call void @ERR_put_error(i32 12, i32 0, i32 168, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 434) #4
  br label %351

320:                                              ; preds = %315, %331
  %321 = phi i64 [ %334, %331 ], [ %316, %315 ]
  %322 = phi %struct.ASN1_TEMPLATE_st* [ %333, %331 ], [ %310, %315 ]
  %323 = call %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* %322, i32 1) #4
  %324 = icmp eq %struct.ASN1_TEMPLATE_st* %323, null
  br i1 %324, label %351, label %325

325:                                              ; preds = %320
  %326 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %323, i64 0, i32 0
  %327 = load i64, i64* %326, align 8
  %328 = and i64 %327, 1
  %329 = icmp eq i64 %328, 0
  br i1 %329, label %330, label %331

330:                                              ; preds = %325
  call void @ERR_put_error(i32 12, i32 0, i32 121, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 454) #4
  br label %351

331:                                              ; preds = %325
  %332 = call %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st** %0, %struct.ASN1_TEMPLATE_st* nonnull %323) #4
  call void @ASN1_template_free(%struct.ASN1_VALUE_st** %332, %struct.ASN1_TEMPLATE_st* nonnull %323) #4
  %333 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %322, i64 1
  %334 = add nuw nsw i64 %321, 1
  %335 = load i64, i64* %208, align 8
  %336 = icmp sgt i64 %335, %334
  br i1 %336, label %320, label %337

337:                                              ; preds = %331, %315
  %338 = load i8*, i8** %1, align 8
  %339 = load i64, i64* %182, align 8
  %340 = ptrtoint i8* %338 to i64
  %341 = sub i64 %339, %340
  %342 = trunc i64 %341 to i32
  %343 = call i32 @asn1_enc_save(%struct.ASN1_VALUE_st** %0, i8* %338, i32 %342, %struct.ASN1_ITEM_st* %3) #4
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %350, label %345

345:                                              ; preds = %337
  br i1 %201, label %346, label %349

346:                                              ; preds = %345
  %347 = call i32 %32(i32 5, %struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %3, i8* null) #4
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %350, label %349

349:                                              ; preds = %346, %345
  store i64 %339, i64* %180, align 8
  br label %365

350:                                              ; preds = %102, %174, %202, %346, %337
  call void @ERR_put_error(i32 12, i32 0, i32 101, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 470) #4
  br label %351

351:                                              ; preds = %271, %231, %320, %330, %255, %350, %319, %307, %199, %192, %187, %171, %147, %125, %99, %88, %72, %66, %59, %52, %39
  %352 = phi %struct.ASN1_TEMPLATE_st* [ null, %39 ], [ null, %319 ], [ null, %350 ], [ null, %307 ], [ null, %199 ], [ null, %192 ], [ null, %187 ], [ null, %99 ], [ null, %171 ], [ %141, %147 ], [ null, %125 ], [ null, %59 ], [ null, %72 ], [ null, %88 ], [ null, %66 ], [ null, %52 ], [ null, %255 ], [ %323, %330 ], [ null, %320 ], [ null, %231 ], [ %235, %271 ]
  %353 = icmp eq i32 %21, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @ASN1_item_ex_free(%struct.ASN1_VALUE_st** %0, %struct.ASN1_ITEM_st* %3) #4
  br label %355

355:                                              ; preds = %354, %351
  %356 = icmp eq %struct.ASN1_TEMPLATE_st* %352, null
  br i1 %356, label %362, label %357

357:                                              ; preds = %355
  %358 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %352, i64 0, i32 3
  %359 = load i8*, i8** %358, align 8
  %360 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 6
  %361 = load i8*, i8** %360, align 8
  call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8* %359, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i8* %361) #4
  br label %365

362:                                              ; preds = %355
  %363 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 6
  %364 = load i8*, i8** %363, align 8
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i8* %364) #4
  br label %365

365:                                              ; preds = %357, %362, %40, %179, %86, %70, %9, %349, %177, %170, %92, %89, %55, %53
  %366 = phi i32 [ 1, %349 ], [ -1, %170 ], [ 1, %177 ], [ %96, %92 ], [ %91, %89 ], [ %54, %53 ], [ %56, %55 ], [ 0, %9 ], [ -1, %70 ], [ -1, %86 ], [ %186, %179 ], [ 0, %40 ], [ 0, %362 ], [ 0, %357 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  ret i32 %366
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_template_ex_d2i(%struct.ASN1_VALUE_st**, i8** nocapture, i64, %struct.ASN1_TEMPLATE_st*, i8 signext, %struct.ASN1_TLC_st*, i32) unnamed_addr #1 {
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #4
  store i64 -6148914691236517206, i64* %8, align 8
  %13 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #4
  store i8 -86, i8* %10, align 1
  %14 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %14, label %72, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = bitcast i8** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast i8** %9 to i64*
  store i64 %20, i64* %21, align 8
  %22 = and i32 %18, 16
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %15
  %25 = and i32 %18, 192
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #4
  store i8 -86, i8* %11, align 1
  %26 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = trunc i64 %27 to i32
  %29 = call fastcc i32 @asn1_check_tlen(i64* nonnull %8, i32* null, i8* null, i8* nonnull %10, i8* nonnull %11, i8** nonnull %9, i64 %2, i32 %28, i32 %25, i8 signext %4, %struct.ASN1_TLC_st* %5)
  %30 = load i64, i64* %21, align 8
  switch i32 %29, label %32 [
    i32 0, label %31
    i32 -1, label %65
  ]

31:                                               ; preds = %24
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 522) #4
  br label %65

32:                                               ; preds = %24
  %33 = load i8, i8* %11, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @ERR_put_error(i32 12, i32 0, i32 120, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 527) #4
  br label %65

36:                                               ; preds = %32
  %37 = load i64, i64* %8, align 8
  %38 = call fastcc i32 @asn1_template_noexp_d2i(%struct.ASN1_VALUE_st** nonnull %0, i8** nonnull %9, i64 %37, %struct.ASN1_TEMPLATE_st* %3, i8 signext 0, %struct.ASN1_TLC_st* %5, i32 %6)
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %36
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 533) #4
  br label %65

41:                                               ; preds = %36
  %42 = load i64, i64* %21, align 8
  %43 = load i64, i64* %8, align 8
  %44 = sub i64 %30, %42
  %45 = add i64 %43, %44
  store i64 %45, i64* %8, align 8
  %46 = load i8, i8* %10, align 1
  %47 = icmp eq i8 %46, 0
  %48 = inttoptr i64 %42 to i8*
  br i1 %47, label %62, label %49

49:                                               ; preds = %41
  %50 = icmp slt i64 %45, 2
  br i1 %50, label %61, label %51

51:                                               ; preds = %49
  %52 = load i8, i8* %48, align 1
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %61

54:                                               ; preds = %51
  %55 = getelementptr inbounds i8, i8* %48, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %54
  %59 = getelementptr inbounds i8, i8* %48, i64 2
  store i8* %59, i8** %9, align 8
  %60 = ptrtoint i8* %59 to i64
  br label %69

61:                                               ; preds = %49, %54, %51
  call void @ERR_put_error(i32 12, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 541) #4
  br label %71

62:                                               ; preds = %41
  %63 = icmp eq i64 %45, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %62
  call void @ERR_put_error(i32 12, i32 0, i32 119, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 549) #4
  br label %71

65:                                               ; preds = %40, %35, %31, %24
  %66 = phi i32 [ %29, %24 ], [ 0, %31 ], [ 0, %35 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #4
  br label %72

67:                                               ; preds = %15
  %68 = tail call fastcc i32 @asn1_template_noexp_d2i(%struct.ASN1_VALUE_st** nonnull %0, i8** %1, i64 %2, %struct.ASN1_TEMPLATE_st* %3, i8 signext %4, %struct.ASN1_TLC_st* %5, i32 %6)
  br label %72

69:                                               ; preds = %58, %62
  %70 = phi i64 [ %60, %58 ], [ %42, %62 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #4
  store i64 %70, i64* %19, align 8
  br label %72

71:                                               ; preds = %61, %64
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #4
  call void @ASN1_template_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* %3) #4
  br label %72

72:                                               ; preds = %65, %7, %71, %69, %67
  %73 = phi i32 [ 0, %71 ], [ 1, %69 ], [ %68, %67 ], [ 0, %7 ], [ %66, %65 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #4
  ret i32 %73
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_d2i_ex_primitive(%struct.ASN1_VALUE_st**, i8** nocapture, i64, %struct.ASN1_ITEM_st* nocapture readonly, i32, i32, i8 signext, %struct.ASN1_TLC_st*) unnamed_addr #1 {
  %9 = alloca i8*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8*, align 8
  %14 = alloca i32, align 4
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = alloca i8*, align 8
  %19 = alloca %struct.buf_mem_st, align 8
  %20 = alloca i8, align 1
  %21 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %21) #4
  store i32 -1431655766, i32* %14, align 4
  %22 = bitcast i64* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #4
  store i64 -6148914691236517206, i64* %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #4
  store i8 -86, i8* %16, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #4
  store i8 -86, i8* %17, align 1
  %23 = bitcast i8** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %24 = bitcast %struct.buf_mem_st* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 0, i64 24, i1 false)
  %25 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %25, label %26, label %27

26:                                               ; preds = %8
  tail call void @ERR_put_error(i32 12, i32 0, i32 132, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 694) #4
  br label %335

27:                                               ; preds = %8
  %28 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 0
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 5
  br i1 %30, label %35, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = trunc i64 %33 to i32
  br label %35

35:                                               ; preds = %27, %31
  %36 = phi i32 [ %34, %31 ], [ %4, %27 ]
  %37 = phi i32 [ %4, %31 ], [ -1, %27 ]
  store i32 %36, i32* %14, align 4
  %38 = icmp eq i32 %36, -4
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = bitcast i8** %1 to i64*
  %41 = bitcast i8** %18 to i64*
  br label %63

42:                                               ; preds = %35
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %20) #4
  store i8 -86, i8* %20, align 1
  %43 = icmp sgt i32 %37, -1
  br i1 %43, label %44, label %45

44:                                               ; preds = %42
  tail call void @ERR_put_error(i32 12, i32 0, i32 137, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 708) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #4
  br label %335

45:                                               ; preds = %42
  %46 = icmp eq i8 %6, 0
  br i1 %46, label %48, label %47

47:                                               ; preds = %45
  tail call void @ERR_put_error(i32 12, i32 0, i32 135, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 712) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #4
  br label %335

48:                                               ; preds = %45
  %49 = bitcast i8** %1 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i8** %18 to i64*
  store i64 %50, i64* %51, align 8
  %52 = call fastcc i32 @asn1_check_tlen(i64* null, i32* nonnull %14, i8* nonnull %20, i8* null, i8* null, i8** nonnull %18, i64 %2, i32 -1, i32 0, i8 signext 0, %struct.ASN1_TLC_st* %7)
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 719) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #4
  br label %335

55:                                               ; preds = %48
  %56 = load i8, i8* %20, align 1
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %55
  %59 = load i32, i32* %14, align 4
  br label %61

60:                                               ; preds = %55
  store i32 -3, i32* %14, align 4
  br label %61

61:                                               ; preds = %58, %60
  %62 = phi i32 [ %59, %58 ], [ -3, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %20) #4
  br label %63

63:                                               ; preds = %39, %61
  %64 = phi i64* [ %41, %39 ], [ %51, %61 ]
  %65 = phi i64* [ %40, %39 ], [ %49, %61 ]
  %66 = phi i32 [ %36, %39 ], [ %62, %61 ]
  %67 = icmp eq i32 %37, -1
  %68 = select i1 %67, i32 0, i32 %5
  %69 = select i1 %67, i32 %66, i32 %37
  %70 = load i64, i64* %65, align 8
  store i64 %70, i64* %64, align 8
  %71 = call fastcc i32 @asn1_check_tlen(i64* nonnull %15, i32* null, i8* null, i8* nonnull %17, i8* nonnull %16, i8** nonnull %18, i64 %2, i32 %69, i32 %68, i8 signext %6, %struct.ASN1_TLC_st* %7)
  switch i32 %71, label %73 [
    i32 0, label %72
    i32 -1, label %335
  ]

72:                                               ; preds = %63
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 734) #4
  br label %335

73:                                               ; preds = %63
  %74 = load i32, i32* %14, align 4
  switch i32 %74, label %179 [
    i32 -3, label %75
    i32 16, label %79
    i32 17, label %79
  ]

75:                                               ; preds = %73
  %76 = icmp eq %struct.ASN1_TLC_st* %7, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %7, i64 0, i32 0
  store i8 0, i8* %78, align 8
  br label %83

79:                                               ; preds = %73, %73
  %80 = load i8, i8* %16, align 1
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @ERR_put_error(i32 12, i32 0, i32 178, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 751) #4
  br label %335

83:                                               ; preds = %75, %79, %77
  %84 = load i8*, i8** %1, align 8
  %85 = load i8, i8* %17, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %171, label %87

87:                                               ; preds = %83
  %88 = load i64, i64* %15, align 8
  %89 = icmp sgt i64 %88, 0
  br i1 %89, label %90, label %164

90:                                               ; preds = %87
  %91 = load i64, i64* %64, align 8
  %92 = bitcast i32* %10 to i8*
  %93 = bitcast i32* %11 to i8*
  %94 = bitcast i64* %12 to i8*
  %95 = bitcast i8** %13 to i8*
  %96 = bitcast i8** %13 to i64*
  br label %156

97:                                               ; preds = %156, %115
  %98 = phi i32 [ %157, %156 ], [ %112, %115 ]
  %99 = phi i64 [ %158, %156 ], [ %116, %115 ]
  %100 = phi i64 [ %159, %156 ], [ %114, %115 ]
  %101 = icmp eq i64 %99, 1
  br i1 %101, label %118, label %102

102:                                              ; preds = %97
  %103 = inttoptr i64 %100 to i8*
  %104 = load i8, i8* %103, align 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %118

106:                                              ; preds = %102
  %107 = getelementptr inbounds i8, i8* %103, i64 1
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %118

110:                                              ; preds = %106
  %111 = getelementptr inbounds i8, i8* %103, i64 2
  %112 = add nsw i32 %98, -1
  %113 = icmp eq i32 %112, 0
  %114 = ptrtoint i8* %111 to i64
  br i1 %113, label %165, label %115

115:                                              ; preds = %110
  %116 = add nsw i64 %99, -2
  %117 = icmp sgt i64 %116, 0
  br i1 %117, label %97, label %164

118:                                              ; preds = %102, %106, %97
  %119 = inttoptr i64 %100 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %92) #4
  store i32 -1431655766, i32* %10, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #4
  store i32 -1431655766, i32* %11, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #4
  store i64 -6148914691236517206, i64* %12, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #4
  store i8* %119, i8** %13, align 8
  %120 = call i32 @ASN1_get_object(i8** nonnull %13, i64* nonnull %12, i32* nonnull %10, i32* nonnull %11, i64 %99) #4
  %121 = trunc i32 %120 to i8
  %122 = icmp slt i8 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %118
  call void @ERR_put_error(i32 12, i32 0, i32 103, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1151) #4
  br label %138

124:                                              ; preds = %118
  %125 = and i32 %120, 1
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %124
  %128 = load i64, i64* %12, align 8
  %129 = load i64, i64* %96, align 8
  br label %134

130:                                              ; preds = %124
  %131 = load i64, i64* %96, align 8
  %132 = add i64 %100, %99
  %133 = sub i64 %132, %131
  store i64 %133, i64* %12, align 8
  br label %134

134:                                              ; preds = %130, %127
  %135 = phi i64 [ %129, %127 ], [ %131, %130 ]
  %136 = phi i64 [ %128, %127 ], [ %133, %130 ]
  %137 = trunc i32 %125 to i8
  br label %138

138:                                              ; preds = %134, %123
  %139 = phi i8 [ %161, %123 ], [ %137, %134 ]
  %140 = phi i64 [ %160, %123 ], [ %136, %134 ]
  %141 = phi i64 [ %100, %123 ], [ %135, %134 ]
  %142 = phi i1 [ true, %123 ], [ false, %134 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %92) #4
  br i1 %142, label %143, label %144

143:                                              ; preds = %138
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 986) #4
  br label %335

144:                                              ; preds = %138
  %145 = icmp eq i8 %139, 0
  %146 = inttoptr i64 %141 to i8*
  %147 = getelementptr inbounds i8, i8* %146, i64 %140
  %148 = ptrtoint i8* %147 to i64
  %149 = select i1 %145, i64 %148, i64 %141
  %150 = xor i1 %145, true
  %151 = zext i1 %150 to i32
  %152 = add nsw i32 %98, %151
  %153 = add i64 %100, %99
  %154 = sub i64 %153, %149
  %155 = icmp sgt i64 %154, 0
  br i1 %155, label %156, label %162

156:                                              ; preds = %144, %90
  %157 = phi i32 [ 1, %90 ], [ %152, %144 ]
  %158 = phi i64 [ %88, %90 ], [ %154, %144 ]
  %159 = phi i64 [ %91, %90 ], [ %149, %144 ]
  %160 = phi i64 [ -6148914691236517206, %90 ], [ %140, %144 ]
  %161 = phi i8 [ %85, %90 ], [ %139, %144 ]
  br label %97

162:                                              ; preds = %144
  %163 = icmp eq i32 %152, 0
  br i1 %163, label %167, label %164

164:                                              ; preds = %115, %162, %87
  call void @ERR_put_error(i32 12, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 996) #4
  br label %335

165:                                              ; preds = %110
  %166 = ptrtoint i8* %111 to i64
  br label %167

167:                                              ; preds = %165, %162
  %168 = phi i64 [ %149, %162 ], [ %166, %165 ]
  store i64 %168, i64* %64, align 8
  %169 = ptrtoint i8* %84 to i64
  %170 = sub i64 %168, %169
  br label %205

171:                                              ; preds = %83
  %172 = load i8*, i8** %18, align 8
  %173 = ptrtoint i8* %172 to i64
  %174 = ptrtoint i8* %84 to i64
  %175 = sub i64 %173, %174
  %176 = load i64, i64* %15, align 8
  %177 = add nsw i64 %175, %176
  %178 = getelementptr inbounds i8, i8* %172, i64 %176
  store i8* %178, i8** %18, align 8
  br label %205

179:                                              ; preds = %73
  %180 = load i8, i8* %16, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %201, label %182

182:                                              ; preds = %179
  switch i32 %74, label %184 [
    i32 10, label %183
    i32 6, label %183
    i32 5, label %183
    i32 2, label %183
    i32 1, label %183
  ]

183:                                              ; preds = %182, %182, %182, %182, %182
  call void @ERR_put_error(i32 12, i32 0, i32 179, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 770) #4
  br label %335

184:                                              ; preds = %182
  %185 = load i64, i64* %15, align 8
  %186 = load i8, i8* %17, align 1
  %187 = call fastcc i32 @asn1_collect(%struct.buf_mem_st* nonnull %19, i8** nonnull %18, i64 %185, i8 signext %186, i32 0)
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %329, label %189

189:                                              ; preds = %184
  %190 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %19, i64 0, i32 0
  %191 = load i64, i64* %190, align 8
  %192 = add nsw i64 %191, 1
  %193 = call i64 @BUF_MEM_grow_clean(%struct.buf_mem_st* nonnull %19, i64 %192) #4
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %189
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 788) #4
  br label %329

196:                                              ; preds = %189
  %197 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %19, i64 0, i32 1
  %198 = load i8*, i8** %197, align 8
  %199 = getelementptr inbounds i8, i8* %198, i64 %191
  store i8 0, i8* %199, align 1
  %200 = load i8*, i8** %197, align 8
  br label %205

201:                                              ; preds = %179
  %202 = load i8*, i8** %18, align 8
  %203 = load i64, i64* %15, align 8
  %204 = getelementptr inbounds i8, i8* %202, i64 %203
  store i8* %204, i8** %18, align 8
  br label %205

205:                                              ; preds = %196, %201, %167, %171
  %206 = phi i8 [ 0, %201 ], [ 1, %196 ], [ 0, %171 ], [ 0, %167 ]
  %207 = phi i8* [ %202, %201 ], [ %200, %196 ], [ %84, %171 ], [ %84, %167 ]
  %208 = phi i64 [ %203, %201 ], [ %191, %196 ], [ %177, %171 ], [ %170, %167 ]
  %209 = trunc i64 %208 to i32
  %210 = load i32, i32* %14, align 4
  %211 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %211)
  store i8* %207, i8** %9, align 8
  %212 = getelementptr inbounds %struct.ASN1_ITEM_st, %struct.ASN1_ITEM_st* %3, i64 0, i32 1
  %213 = load i64, i64* %212, align 8
  %214 = icmp eq i64 %213, -4
  br i1 %214, label %215, label %235

215:                                              ; preds = %205
  %216 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %217 = icmp eq %struct.ASN1_VALUE_st* %216, null
  br i1 %217, label %218, label %224

218:                                              ; preds = %215
  %219 = call %struct.asn1_type_st* @ASN1_TYPE_new() #4
  %220 = icmp eq %struct.asn1_type_st* %219, null
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @ASN1_TYPE_free(%struct.asn1_type_st* null) #4
  br label %321

222:                                              ; preds = %218
  %223 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.asn1_type_st**
  store %struct.asn1_type_st* %219, %struct.asn1_type_st** %223, align 8
  br label %226

224:                                              ; preds = %215
  %225 = bitcast %struct.ASN1_VALUE_st* %216 to %struct.asn1_type_st*
  br label %226

226:                                              ; preds = %224, %222
  %227 = phi %struct.asn1_type_st* [ %225, %224 ], [ %219, %222 ]
  %228 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %227, i64 0, i32 0
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, %210
  br i1 %230, label %232, label %231

231:                                              ; preds = %226
  call void @ASN1_TYPE_set(%struct.asn1_type_st* %227, i32 %210, i8* null) #4
  br label %232

232:                                              ; preds = %231, %226
  %233 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %227, i64 0, i32 1
  %234 = bitcast %union.anon* %233 to %struct.ASN1_VALUE_st**
  br label %235

235:                                              ; preds = %232, %205
  %236 = phi %struct.ASN1_VALUE_st** [ %0, %232 ], [ null, %205 ]
  %237 = phi %struct.asn1_type_st* [ %227, %232 ], [ null, %205 ]
  %238 = phi %struct.ASN1_VALUE_st** [ %234, %232 ], [ %0, %205 ]
  switch i32 %210, label %282 [
    i32 6, label %239
    i32 5, label %245
    i32 1, label %249
    i32 3, label %256
    i32 2, label %262
    i32 10, label %262
    i32 30, label %274
    i32 28, label %278
  ]

239:                                              ; preds = %235
  %240 = bitcast %struct.ASN1_VALUE_st** %238 to %struct.asn1_object_st**
  %241 = shl i64 %208, 32
  %242 = ashr exact i64 %241, 32
  %243 = call %struct.asn1_object_st* @c2i_ASN1_OBJECT(%struct.asn1_object_st** %240, i8** nonnull %9, i64 %242) #4
  %244 = icmp eq %struct.asn1_object_st* %243, null
  br i1 %244, label %318, label %322

245:                                              ; preds = %235
  %246 = icmp eq i32 %209, 0
  br i1 %246, label %248, label %247

247:                                              ; preds = %245
  call void @ERR_put_error(i32 12, i32 0, i32 164, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 850) #4
  br label %318

248:                                              ; preds = %245
  store %struct.ASN1_VALUE_st* inttoptr (i64 1 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %238, align 8
  br label %312

249:                                              ; preds = %235
  %250 = icmp eq i32 %209, 1
  br i1 %250, label %252, label %251

251:                                              ; preds = %249
  call void @ERR_put_error(i32 12, i32 0, i32 106, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 858) #4
  br label %318

252:                                              ; preds = %249
  %253 = bitcast %struct.ASN1_VALUE_st** %238 to i32*
  %254 = load i8, i8* %207, align 1
  %255 = zext i8 %254 to i32
  store i32 %255, i32* %253, align 4
  br label %322

256:                                              ; preds = %235
  %257 = bitcast %struct.ASN1_VALUE_st** %238 to %struct.asn1_string_st**
  %258 = shl i64 %208, 32
  %259 = ashr exact i64 %258, 32
  %260 = call %struct.asn1_string_st* @c2i_ASN1_BIT_STRING(%struct.asn1_string_st** %257, i8** nonnull %9, i64 %259) #4
  %261 = icmp eq %struct.asn1_string_st* %260, null
  br i1 %261, label %318, label %322

262:                                              ; preds = %235, %235
  %263 = bitcast %struct.ASN1_VALUE_st** %238 to %struct.asn1_string_st**
  %264 = shl i64 %208, 32
  %265 = ashr exact i64 %264, 32
  %266 = call %struct.asn1_string_st* @c2i_ASN1_INTEGER(%struct.asn1_string_st** %263, i8** nonnull %9, i64 %265) #4
  %267 = icmp eq %struct.asn1_string_st* %266, null
  br i1 %267, label %318, label %268

268:                                              ; preds = %262
  %269 = load %struct.asn1_string_st*, %struct.asn1_string_st** %263, align 8
  %270 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %269, i64 0, i32 1
  %271 = load i32, i32* %270, align 4
  %272 = and i32 %271, 256
  %273 = or i32 %272, %210
  store i32 %273, i32* %270, align 4
  br label %312

274:                                              ; preds = %235
  %275 = and i32 %209, 1
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %282, label %277

277:                                              ; preds = %274
  call void @ERR_put_error(i32 12, i32 0, i32 104, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 900) #4
  br label %318

278:                                              ; preds = %235
  %279 = and i32 %209, 3
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %282, label %281

281:                                              ; preds = %278
  call void @ERR_put_error(i32 12, i32 0, i32 181, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 904) #4
  br label %318

282:                                              ; preds = %278, %274, %235
  %283 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %238, align 8
  %284 = icmp eq %struct.ASN1_VALUE_st* %283, null
  br i1 %284, label %285, label %291

285:                                              ; preds = %282
  %286 = call %struct.asn1_string_st* @ASN1_STRING_type_new(i32 %210) #4
  %287 = icmp eq %struct.asn1_string_st* %286, null
  br i1 %287, label %288, label %289

288:                                              ; preds = %285
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 911) #4
  br label %318

289:                                              ; preds = %285
  %290 = bitcast %struct.ASN1_VALUE_st** %238 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %286, %struct.asn1_string_st** %290, align 8
  br label %294

291:                                              ; preds = %282
  %292 = bitcast %struct.ASN1_VALUE_st* %283 to %struct.asn1_string_st*
  %293 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %292, i64 0, i32 1
  store i32 %210, i32* %293, align 4
  br label %294

294:                                              ; preds = %291, %289
  %295 = phi %struct.asn1_string_st* [ %292, %291 ], [ %286, %289 ]
  %296 = icmp eq i8 %206, 0
  br i1 %296, label %307, label %297

297:                                              ; preds = %294
  %298 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %295, i64 0, i32 2
  %299 = load i8*, i8** %298, align 8
  %300 = icmp eq i8* %299, null
  br i1 %300, label %302, label %301

301:                                              ; preds = %297
  call void @OPENSSL_free(i8* nonnull %299) #4
  br label %302

302:                                              ; preds = %301, %297
  %303 = bitcast i8** %9 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast i8** %298 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %295, i64 0, i32 0
  store i32 %209, i32* %306, align 8
  br label %322

307:                                              ; preds = %294
  %308 = load i8*, i8** %9, align 8
  %309 = call i32 @ASN1_STRING_set(%struct.asn1_string_st* %295, i8* %308, i32 %209) #4
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %322

311:                                              ; preds = %307
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 928) #4
  call void @ASN1_STRING_free(%struct.asn1_string_st* %295) #4
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %238, align 8
  br label %318

312:                                              ; preds = %268, %248
  %313 = icmp ne %struct.asn1_type_st* %237, null
  %314 = icmp eq i32 %210, 5
  %315 = and i1 %314, %313
  br i1 %315, label %316, label %322

316:                                              ; preds = %312
  %317 = getelementptr inbounds %struct.asn1_type_st, %struct.asn1_type_st* %237, i64 0, i32 1, i32 0
  store i8* null, i8** %317, align 8
  br label %322

318:                                              ; preds = %311, %288, %281, %277, %262, %256, %251, %247, %239
  call void @ASN1_TYPE_free(%struct.asn1_type_st* %237) #4
  %319 = icmp eq %struct.ASN1_VALUE_st** %236, null
  br i1 %319, label %321, label %320

320:                                              ; preds = %318
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %236, align 8
  br label %321

321:                                              ; preds = %221, %318, %320
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211)
  br label %325

322:                                              ; preds = %316, %312, %307, %239, %256, %302, %252
  %323 = phi i8 [ %206, %239 ], [ %206, %252 ], [ %206, %256 ], [ %206, %312 ], [ %206, %316 ], [ 0, %302 ], [ 0, %307 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %211)
  %324 = load i64, i64* %64, align 8
  store i64 %324, i64* %65, align 8
  br label %325

325:                                              ; preds = %321, %322
  %326 = phi i8 [ %206, %321 ], [ %323, %322 ]
  %327 = phi i32 [ 0, %321 ], [ 1, %322 ]
  %328 = icmp eq i8 %326, 0
  br i1 %328, label %335, label %329

329:                                              ; preds = %195, %184, %325
  %330 = phi i32 [ %327, %325 ], [ 0, %184 ], [ 0, %195 ]
  %331 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %19, i64 0, i32 1
  %332 = load i8*, i8** %331, align 8
  %333 = icmp eq i8* %332, null
  br i1 %333, label %335, label %334

334:                                              ; preds = %329
  call void @OPENSSL_free(i8* nonnull %332) #4
  br label %335

335:                                              ; preds = %164, %143, %334, %325, %329, %63, %54, %47, %44, %183, %82, %72, %26
  %336 = phi i32 [ 0, %82 ], [ 0, %183 ], [ 0, %72 ], [ 0, %26 ], [ 0, %44 ], [ 0, %47 ], [ 0, %54 ], [ %71, %63 ], [ %330, %329 ], [ %327, %325 ], [ %330, %334 ], [ 0, %143 ], [ 0, %164 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %21) #4
  ret i32 %336
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_check_tlen(i64*, i32*, i8*, i8*, i8*, i8** nocapture, i64, i32, i32, i8 signext, %struct.ASN1_TLC_st*) unnamed_addr #1 {
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i64, align 8
  %15 = alloca i8*, align 8
  %16 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #4
  store i32 -1431655766, i32* %12, align 4
  %17 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #4
  store i32 -1431655766, i32* %13, align 4
  %18 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #4
  store i64 -6148914691236517206, i64* %14, align 8
  %19 = bitcast i8** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #4
  %20 = load i8*, i8** %5, align 8
  store i8* %20, i8** %15, align 8
  %21 = icmp ne %struct.ASN1_TLC_st* %10, null
  br i1 %21, label %22, label %39

22:                                               ; preds = %11
  %23 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 0
  %24 = load i8, i8* %23, align 8
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %41, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %14, align 8
  %31 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 4
  %32 = load i32, i32* %31, align 4
  store i32 %32, i32* %13, align 4
  %33 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 3
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %12, align 4
  %35 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 5
  %36 = load i32, i32* %35, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %20, i64 %37
  store i8* %38, i8** %15, align 8
  br label %64

39:                                               ; preds = %11
  %40 = call i32 @ASN1_get_object(i8** nonnull %15, i64* nonnull %14, i32* nonnull %12, i32* nonnull %13, i64 %6) #4
  br label %64

41:                                               ; preds = %22
  %42 = call i32 @ASN1_get_object(i8** nonnull %15, i64* nonnull %14, i32* nonnull %12, i32* nonnull %13, i64 %6) #4
  %43 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 1
  store i32 %42, i32* %43, align 4
  %44 = load i64, i64* %14, align 8
  %45 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = load i32, i32* %13, align 4
  %47 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 4
  store i32 %46, i32* %47, align 4
  %48 = load i32, i32* %12, align 4
  %49 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 3
  store i32 %48, i32* %49, align 8
  %50 = bitcast i8** %15 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = ptrtoint i8* %20 to i64
  %53 = sub i64 %51, %52
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 5
  store i32 %54, i32* %55, align 8
  store i8 1, i8* %23, align 8
  %56 = and i32 %42, 129
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %64

58:                                               ; preds = %41
  %59 = shl i64 %53, 32
  %60 = ashr exact i64 %59, 32
  %61 = add nsw i64 %60, %44
  %62 = icmp sgt i64 %61, %6
  br i1 %62, label %63, label %64

63:                                               ; preds = %58
  call void @ERR_put_error(i32 12, i32 0, i32 177, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1143) #4
  store i8 0, i8* %23, align 8
  br label %122

64:                                               ; preds = %39, %41, %58, %26
  %65 = phi i32 [ %28, %26 ], [ %42, %41 ], [ %42, %58 ], [ %40, %39 ]
  %66 = trunc i32 %65 to i8
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %64
  call void @ERR_put_error(i32 12, i32 0, i32 103, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1151) #4
  br i1 %21, label %69, label %122

69:                                               ; preds = %68
  %70 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 0
  store i8 0, i8* %70, align 8
  br label %122

71:                                               ; preds = %64
  %72 = icmp sgt i32 %7, -1
  br i1 %72, label %73, label %88

73:                                               ; preds = %71
  %74 = load i32, i32* %12, align 4
  %75 = icmp eq i32 %74, %7
  %76 = load i32, i32* %13, align 4
  %77 = icmp eq i32 %76, %8
  %78 = and i1 %75, %77
  br i1 %78, label %85, label %79

79:                                               ; preds = %73
  %80 = icmp eq i8 %9, 0
  br i1 %80, label %81, label %122

81:                                               ; preds = %79
  br i1 %21, label %82, label %84

82:                                               ; preds = %81
  %83 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 0
  store i8 0, i8* %83, align 8
  br label %84

84:                                               ; preds = %82, %81
  call void @ERR_put_error(i32 12, i32 0, i32 190, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1163) #4
  br label %122

85:                                               ; preds = %73
  br i1 %21, label %86, label %88

86:                                               ; preds = %85
  %87 = getelementptr inbounds %struct.ASN1_TLC_st, %struct.ASN1_TLC_st* %10, i64 0, i32 0
  store i8 0, i8* %87, align 8
  br label %88

88:                                               ; preds = %85, %86, %71
  %89 = and i32 %65, 1
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %88
  %92 = bitcast i8** %15 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = ptrtoint i8* %20 to i64
  %95 = add i64 %94, %6
  %96 = sub i64 %95, %93
  store i64 %96, i64* %14, align 8
  br label %97

97:                                               ; preds = %88, %91
  %98 = icmp eq i8* %3, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %97
  %100 = trunc i32 %89 to i8
  store i8 %100, i8* %3, align 1
  br label %101

101:                                              ; preds = %97, %99
  %102 = icmp eq i8* %4, null
  br i1 %102, label %105, label %103

103:                                              ; preds = %101
  %104 = and i8 %66, 32
  store i8 %104, i8* %4, align 1
  br label %105

105:                                              ; preds = %101, %103
  %106 = icmp eq i64* %0, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %105
  %108 = load i64, i64* %14, align 8
  store i64 %108, i64* %0, align 8
  br label %109

109:                                              ; preds = %105, %107
  %110 = icmp eq i8* %2, null
  br i1 %110, label %114, label %111

111:                                              ; preds = %109
  %112 = load i32, i32* %13, align 4
  %113 = trunc i32 %112 to i8
  store i8 %113, i8* %2, align 1
  br label %114

114:                                              ; preds = %109, %111
  %115 = icmp eq i32* %1, null
  br i1 %115, label %118, label %116

116:                                              ; preds = %114
  %117 = load i32, i32* %12, align 4
  store i32 %117, i32* %1, align 4
  br label %118

118:                                              ; preds = %114, %116
  %119 = bitcast i8** %15 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast i8** %5 to i64*
  store i64 %120, i64* %121, align 8
  br label %122

122:                                              ; preds = %79, %68, %69, %118, %84, %63
  %123 = phi i32 [ 0, %84 ], [ 1, %118 ], [ 0, %63 ], [ 0, %69 ], [ 0, %68 ], [ -1, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #4
  ret i32 %123
}

declare i32 @asn1_get_choice_selector(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #3

declare %struct.ASN1_VALUE_st** @asn1_get_field_ptr(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*) local_unnamed_addr #3

declare void @ASN1_template_free(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*) local_unnamed_addr #3

declare i32 @asn1_set_choice_selector(%struct.ASN1_VALUE_st**, i32, %struct.ASN1_ITEM_st*) local_unnamed_addr #3

declare i32 @ASN1_item_ex_new(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #3

declare void @ASN1_item_ex_free(%struct.ASN1_VALUE_st**, %struct.ASN1_ITEM_st*) local_unnamed_addr #3

declare %struct.ASN1_TEMPLATE_st* @asn1_do_adb(%struct.ASN1_VALUE_st**, %struct.ASN1_TEMPLATE_st*, i32) local_unnamed_addr #3

declare i32 @asn1_enc_save(%struct.ASN1_VALUE_st**, i8*, i32, %struct.ASN1_ITEM_st*) local_unnamed_addr #3

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_template_noexp_d2i(%struct.ASN1_VALUE_st**, i8** nocapture, i64, %struct.ASN1_TEMPLATE_st*, i8 signext, %struct.ASN1_TLC_st*, i32) unnamed_addr #1 {
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8, align 1
  %11 = alloca %struct.ASN1_VALUE_st*, align 8
  %12 = alloca %struct.ASN1_VALUE_st*, align 8
  store i64 %2, i64* %8, align 8
  %13 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #4
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %14 = icmp eq %struct.ASN1_VALUE_st** %0, null
  br i1 %14, label %145, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 192
  %20 = bitcast i8** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast i8** %9 to i64*
  store i64 %21, i64* %22, align 8
  %23 = and i32 %18, 6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %127, label %25

25:                                               ; preds = %15
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #4
  store i8 -86, i8* %10, align 1
  %26 = and i32 %18, 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = trunc i64 %30 to i32
  br label %36

32:                                               ; preds = %25
  %33 = and i32 %18, 2
  %34 = icmp eq i32 %33, 0
  %35 = select i1 %34, i32 16, i32 17
  br label %36

36:                                               ; preds = %32, %28
  %37 = phi i32 [ %31, %28 ], [ %35, %32 ]
  %38 = phi i32 [ %19, %28 ], [ 0, %32 ]
  %39 = call fastcc i32 @asn1_check_tlen(i64* nonnull %8, i32* null, i8* null, i8* nonnull %10, i8* null, i8** nonnull %9, i64 %2, i32 %37, i32 %38, i8 signext %4, %struct.ASN1_TLC_st* %5)
  switch i32 %39, label %41 [
    i32 0, label %40
    i32 -1, label %124
  ]

40:                                               ; preds = %36
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 598) #4
  br label %124

41:                                               ; preds = %36
  %42 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  %43 = icmp eq %struct.ASN1_VALUE_st* %42, null
  br i1 %43, label %44, label %49

44:                                               ; preds = %41
  %45 = call %struct.stack_st* @sk_new_null() #4
  %46 = bitcast %struct.stack_st* %45 to %struct.stack_st_ASN1_VALUE*
  %47 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.stack_st**
  store %struct.stack_st* %45, %struct.stack_st** %47, align 8
  %48 = bitcast %struct.stack_st_ASN1_VALUE* %46 to %struct.ASN1_VALUE_st*
  br label %65

49:                                               ; preds = %41
  %50 = bitcast %struct.ASN1_VALUE_st* %42 to %struct.stack_st_ASN1_VALUE*
  %51 = bitcast %struct.ASN1_VALUE_st** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #4
  store %struct.ASN1_VALUE_st* inttoptr (i64 -6148914691236517206 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %11, align 8
  %52 = bitcast %struct.stack_st_ASN1_VALUE* %50 to %struct.stack_st*
  %53 = call i64 @sk_num(%struct.stack_st* nonnull %52) #4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %63, label %55

55:                                               ; preds = %49
  %56 = bitcast %struct.ASN1_VALUE_st** %11 to i8**
  %57 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 4
  br label %58

58:                                               ; preds = %55, %58
  %59 = call i8* @sk_pop(%struct.stack_st* nonnull %52) #4
  store i8* %59, i8** %56, align 8
  %60 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %57, align 8
  call void @ASN1_item_ex_free(%struct.ASN1_VALUE_st** nonnull %11, %struct.ASN1_ITEM_st* %60) #4
  %61 = call i64 @sk_num(%struct.stack_st* nonnull %52) #4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %63, label %58

63:                                               ; preds = %58, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #4
  %64 = load %struct.ASN1_VALUE_st*, %struct.ASN1_VALUE_st** %0, align 8
  br label %65

65:                                               ; preds = %63, %44
  %66 = phi %struct.ASN1_VALUE_st* [ %64, %63 ], [ %48, %44 ]
  %67 = icmp eq %struct.ASN1_VALUE_st* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %65
  %69 = load i64, i64* %8, align 8
  %70 = icmp sgt i64 %69, 0
  br i1 %70, label %71, label %119

71:                                               ; preds = %68
  %72 = bitcast %struct.ASN1_VALUE_st** %12 to i8*
  %73 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 4
  %74 = bitcast %struct.ASN1_VALUE_st** %0 to %struct.stack_st**
  %75 = bitcast %struct.ASN1_VALUE_st** %12 to i8**
  br label %77

76:                                               ; preds = %65
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 617) #4
  br label %123

77:                                               ; preds = %71, %116
  %78 = phi i64 [ %69, %71 ], [ %117, %116 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #4
  store %struct.ASN1_VALUE_st* inttoptr (i64 -6148914691236517206 to %struct.ASN1_VALUE_st*), %struct.ASN1_VALUE_st** %12, align 8
  %79 = load i8*, i8** %9, align 8
  %80 = icmp eq i64 %78, 1
  br i1 %80, label %98, label %81

81:                                               ; preds = %77
  %82 = load i8, i8* %79, align 1
  %83 = icmp eq i8 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %81
  %85 = getelementptr inbounds i8, i8* %79, i64 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %98

88:                                               ; preds = %84
  %89 = getelementptr inbounds i8, i8* %79, i64 2
  store i8* %89, i8** %9, align 8
  %90 = load i8, i8* %10, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %88
  call void @ERR_put_error(i32 12, i32 0, i32 180, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 628) #4
  br label %115

93:                                               ; preds = %88
  %94 = ptrtoint i8* %89 to i64
  %95 = ptrtoint i8* %79 to i64
  %96 = add i64 %78, %95
  %97 = sub i64 %96, %94
  store i64 %97, i64* %8, align 8
  store i8 0, i8* %10, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #4
  br label %126

98:                                               ; preds = %77, %84, %81
  store %struct.ASN1_VALUE_st* null, %struct.ASN1_VALUE_st** %12, align 8
  %99 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %73, align 8
  %100 = call fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** nonnull %12, i8** nonnull %9, i64 %78, %struct.ASN1_ITEM_st* %99, i32 -1, i32 0, i8 signext 0, %struct.ASN1_TLC_st* %5, i32 %6)
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %98
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 638) #4
  br label %115

103:                                              ; preds = %98
  %104 = load i64, i64* %22, align 8
  %105 = ptrtoint i8* %79 to i64
  %106 = load i64, i64* %8, align 8
  %107 = sub i64 %105, %104
  %108 = add i64 %107, %106
  store i64 %108, i64* %8, align 8
  %109 = load %struct.stack_st*, %struct.stack_st** %74, align 8
  %110 = load i8*, i8** %75, align 8
  %111 = call i64 @sk_push(%struct.stack_st* %109, i8* %110) #4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %103
  %114 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %73, align 8
  call void @ASN1_item_ex_free(%struct.ASN1_VALUE_st** nonnull %12, %struct.ASN1_ITEM_st* %114) #4
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 644) #4
  br label %115

115:                                              ; preds = %92, %113, %102
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #4
  br label %123

116:                                              ; preds = %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #4
  %117 = load i64, i64* %8, align 8
  %118 = icmp sgt i64 %117, 0
  br i1 %118, label %77, label %119

119:                                              ; preds = %116, %68
  %120 = load i8, i8* %10, align 1
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %119
  call void @ERR_put_error(i32 12, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 649) #4
  br label %123

123:                                              ; preds = %122, %76, %115
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #4
  br label %144

124:                                              ; preds = %40, %36
  %125 = phi i32 [ %39, %36 ], [ 0, %40 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #4
  br label %145

126:                                              ; preds = %93, %119
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #4
  br label %142

127:                                              ; preds = %15
  %128 = and i32 %18, 8
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 4
  %131 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %130, align 8
  br i1 %129, label %138, label %132

132:                                              ; preds = %127
  %133 = getelementptr inbounds %struct.ASN1_TEMPLATE_st, %struct.ASN1_TEMPLATE_st* %3, i64 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = trunc i64 %134 to i32
  %136 = call fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** nonnull %0, i8** nonnull %9, i64 %2, %struct.ASN1_ITEM_st* %131, i32 %135, i32 %19, i8 signext %4, %struct.ASN1_TLC_st* %5, i32 %6)
  switch i32 %136, label %142 [
    i32 0, label %137
    i32 -1, label %145
  ]

137:                                              ; preds = %132
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 657) #4
  br label %144

138:                                              ; preds = %127
  %139 = and i32 %18, 1024
  %140 = call fastcc i32 @asn1_item_ex_d2i(%struct.ASN1_VALUE_st** nonnull %0, i8** nonnull %9, i64 %2, %struct.ASN1_ITEM_st* %131, i32 -1, i32 %139, i8 signext %4, %struct.ASN1_TLC_st* %5, i32 %6)
  switch i32 %140, label %142 [
    i32 0, label %141
    i32 -1, label %145
  ]

141:                                              ; preds = %138
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 667) #4
  br label %144

142:                                              ; preds = %126, %138, %132
  %143 = load i64, i64* %22, align 8
  store i64 %143, i64* %20, align 8
  br label %145

144:                                              ; preds = %123, %141, %137
  call void @ASN1_template_free(%struct.ASN1_VALUE_st** nonnull %0, %struct.ASN1_TEMPLATE_st* %3) #4
  br label %145

145:                                              ; preds = %124, %138, %132, %7, %144, %142
  %146 = phi i32 [ 0, %144 ], [ 1, %142 ], [ 0, %7 ], [ %136, %132 ], [ %140, %138 ], [ %125, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #4
  ret i32 %146
}

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #3

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #3

declare i8* @sk_pop(%struct.stack_st*) local_unnamed_addr #3

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @asn1_collect(%struct.buf_mem_st*, i8** nocapture, i64, i8 signext, i32) unnamed_addr #1 {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i8*, align 8
  %11 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #4
  %12 = bitcast i8** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast i8** %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = and i8 %3, 1
  %16 = icmp ne %struct.buf_mem_st* %0, null
  %17 = icmp ne i8 %15, 0
  %18 = or i1 %16, %17
  %19 = inttoptr i64 %13 to i8*
  br i1 %18, label %20, label %33

20:                                               ; preds = %5
  %21 = icmp sgt i64 %2, 0
  br i1 %21, label %22, label %119

22:                                               ; preds = %20
  %23 = bitcast i32* %6 to i8*
  %24 = bitcast i32* %7 to i8*
  %25 = bitcast i64* %8 to i8*
  %26 = bitcast i8** %9 to i8*
  %27 = bitcast i8** %9 to i64*
  %28 = icmp sgt i32 %4, 4
  %29 = add nsw i32 %4, 1
  %30 = icmp eq %struct.buf_mem_st* %0, null
  %31 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %0, i64 0, i32 0
  %32 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %0, i64 0, i32 1
  br label %35

33:                                               ; preds = %5
  %34 = getelementptr inbounds i8, i8* %19, i64 %2
  store i8* %34, i8** %1, align 8
  br label %125

35:                                               ; preds = %22, %112
  %36 = phi i64 [ %13, %22 ], [ %113, %112 ]
  %37 = phi i64 [ %13, %22 ], [ %114, %112 ]
  %38 = phi i8* [ %19, %22 ], [ %118, %112 ]
  %39 = phi i64 [ %2, %22 ], [ %116, %112 ]
  %40 = phi i8 [ -86, %22 ], [ %83, %112 ]
  %41 = phi i8 [ -86, %22 ], [ %82, %112 ]
  %42 = phi i64 [ -6148914691236517206, %22 ], [ %81, %112 ]
  %43 = icmp eq i64 %39, 1
  br i1 %43, label %55, label %44

44:                                               ; preds = %35
  %45 = load i8, i8* %38, align 1
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %55

47:                                               ; preds = %44
  %48 = getelementptr inbounds i8, i8* %38, i64 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %47
  %52 = getelementptr inbounds i8, i8* %38, i64 2
  store i8* %52, i8** %10, align 8
  %53 = ptrtoint i8* %52 to i64
  br i1 %17, label %123, label %54

54:                                               ; preds = %51
  call void @ERR_put_error(i32 12, i32 0, i32 180, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1041) #4
  br label %125

55:                                               ; preds = %35, %47, %44
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #4
  store i32 -1431655766, i32* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #4
  store i32 -1431655766, i32* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #4
  store i64 -6148914691236517206, i64* %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #4
  store i8* %38, i8** %9, align 8
  %56 = call i32 @ASN1_get_object(i8** nonnull %9, i64* nonnull %8, i32* nonnull %6, i32* nonnull %7, i64 %39) #4
  %57 = trunc i32 %56 to i8
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %55
  call void @ERR_put_error(i32 12, i32 0, i32 103, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1151) #4
  br label %77

60:                                               ; preds = %55
  %61 = and i32 %56, 1
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %60
  %64 = load i64, i64* %8, align 8
  %65 = load i64, i64* %27, align 8
  br label %71

66:                                               ; preds = %60
  %67 = load i64, i64* %27, align 8
  %68 = ptrtoint i8* %38 to i64
  %69 = add i64 %39, %68
  %70 = sub i64 %69, %67
  store i64 %70, i64* %8, align 8
  br label %71

71:                                               ; preds = %63, %66
  %72 = phi i64 [ %65, %63 ], [ %67, %66 ]
  %73 = phi i64 [ %64, %63 ], [ %70, %66 ]
  %74 = trunc i32 %61 to i8
  %75 = and i8 %57, 32
  store i64 %72, i64* %14, align 8
  %76 = inttoptr i64 %72 to i8*
  br label %77

77:                                               ; preds = %59, %71
  %78 = phi i64 [ %36, %59 ], [ %72, %71 ]
  %79 = phi i64 [ %37, %59 ], [ %72, %71 ]
  %80 = phi i8* [ %38, %59 ], [ %76, %71 ]
  %81 = phi i64 [ %42, %59 ], [ %73, %71 ]
  %82 = phi i8 [ %41, %59 ], [ %75, %71 ]
  %83 = phi i8 [ %40, %59 ], [ %74, %71 ]
  %84 = phi i1 [ true, %59 ], [ false, %71 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #4
  br i1 %84, label %85, label %86

85:                                               ; preds = %77
  call void @ERR_put_error(i32 12, i32 0, i32 158, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1050) #4
  br label %125

86:                                               ; preds = %77
  %87 = icmp eq i8 %82, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %86
  br i1 %28, label %89, label %90

89:                                               ; preds = %88
  call void @ERR_put_error(i32 12, i32 0, i32 159, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1057) #4
  br label %125

90:                                               ; preds = %88
  %91 = call fastcc i32 @asn1_collect(%struct.buf_mem_st* %0, i8** nonnull %10, i64 %81, i8 signext %83, i32 %29)
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %125, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %14, align 8
  br label %112

95:                                               ; preds = %86
  %96 = icmp eq i64 %81, 0
  br i1 %96, label %112, label %97

97:                                               ; preds = %95
  br i1 %30, label %109, label %98

98:                                               ; preds = %97
  %99 = load i64, i64* %31, align 8
  %100 = shl i64 %99, 32
  %101 = ashr exact i64 %100, 32
  %102 = add nsw i64 %101, %81
  %103 = call i64 @BUF_MEM_grow_clean(%struct.buf_mem_st* nonnull %0, i64 %102) #4
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %98
  call void @ERR_put_error(i32 12, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1080) #4
  br label %125

106:                                              ; preds = %98
  %107 = load i8*, i8** %32, align 8
  %108 = getelementptr inbounds i8, i8* %107, i64 %101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %108, i8* align 1 %80, i64 %81, i1 false) #4
  br label %109

109:                                              ; preds = %97, %106
  %110 = getelementptr inbounds i8, i8* %80, i64 %81
  store i8* %110, i8** %10, align 8
  %111 = ptrtoint i8* %110 to i64
  br label %112

112:                                              ; preds = %93, %109, %95
  %113 = phi i64 [ %94, %93 ], [ %111, %109 ], [ %78, %95 ]
  %114 = phi i64 [ %94, %93 ], [ %111, %109 ], [ %79, %95 ]
  %115 = add i64 %37, %39
  %116 = sub i64 %115, %114
  %117 = icmp sgt i64 %116, 0
  %118 = inttoptr i64 %114 to i8*
  br i1 %117, label %35, label %119

119:                                              ; preds = %112, %20
  %120 = phi i64 [ %13, %20 ], [ %113, %112 ]
  %121 = icmp eq i8 %15, 0
  br i1 %121, label %123, label %122

122:                                              ; preds = %119
  call void @ERR_put_error(i32 12, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 1067) #4
  br label %125

123:                                              ; preds = %51, %119
  %124 = phi i64 [ %53, %51 ], [ %120, %119 ]
  store i64 %124, i64* %12, align 8
  br label %125

125:                                              ; preds = %90, %105, %123, %122, %89, %85, %54, %33
  %126 = phi i32 [ 0, %122 ], [ 1, %123 ], [ 0, %54 ], [ 0, %89 ], [ 0, %85 ], [ 1, %33 ], [ 0, %105 ], [ 0, %90 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #4
  ret i32 %126
}

declare i64 @BUF_MEM_grow_clean(%struct.buf_mem_st*, i64) local_unnamed_addr #3

declare void @OPENSSL_free(i8*) local_unnamed_addr #3

declare %struct.asn1_type_st* @ASN1_TYPE_new() local_unnamed_addr #3

declare void @ASN1_TYPE_set(%struct.asn1_type_st*, i32, i8*) local_unnamed_addr #3

declare %struct.asn1_object_st* @c2i_ASN1_OBJECT(%struct.asn1_object_st**, i8**, i64) local_unnamed_addr #3

declare %struct.asn1_string_st* @c2i_ASN1_BIT_STRING(%struct.asn1_string_st**, i8**, i64) local_unnamed_addr #3

declare %struct.asn1_string_st* @c2i_ASN1_INTEGER(%struct.asn1_string_st**, i8**, i64) local_unnamed_addr #3

declare %struct.asn1_string_st* @ASN1_STRING_type_new(i32) local_unnamed_addr #3

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #3

declare void @ASN1_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #3

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) local_unnamed_addr #3

declare i32 @ASN1_get_object(i8**, i64*, i32*, i32*, i64) local_unnamed_addr #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
