; ModuleID = '../../third_party/blink/renderer/modules/webaudio/cpu/x86/oscillator_kernel_sse2.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/cpu/x86/oscillator_kernel_sse2.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::OscillatorHandler" = type { %"class.blink::AudioScheduledSourceHandler.base", i8, %class.scoped_refptr.352, %class.scoped_refptr.352, i8, double, %"class.blink::AudioArray", %"class.blink::AudioArray", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::AudioScheduledSourceHandler.base" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"class.base::SupportsWeakPtr.347", %"class.WTF::Mutex", double, double, %"struct.std::__1::atomic.348", [4 x i8], %class.scoped_refptr.259, i8 }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.263, %"class.WTF::Vector.335", %"class.WTF::Vector.341", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.333" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.25", %class.scoped_refptr.263, %class.scoped_refptr.277, %"class.blink::HeapVector.317", %"class.blink::HeapVector.325" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.6" }
%"struct.std::__1::atomic.6" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl.9" }
%"struct.std::__1::__cxx_atomic_impl.9" = type { %"struct.std::__1::__cxx_atomic_base_impl.10" }
%"struct.std::__1::__cxx_atomic_base_impl.10" = type { i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.11"* }
%"class.blink::HeapVector.11" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.WTF::Vector.12"* }
%"class.WTF::Vector.12" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.14", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.20", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.18" }
%"class.blink::Member.18" = type { %"class.blink::MemberBase.19" }
%"class.blink::MemberBase.19" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.417", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.419", %"class.blink::Member.423", %"class.blink::Member.425", %"class.blink::Member.427", %"class.blink::Member.429", %"class.blink::Member.431", %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::HeapObserverSet.437", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::Member.449", %"class.blink::Member.451", %"class.blink::Member.453", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.465", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.496", %"class.blink::Member.18", %"class.blink::Member.18", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.504", %"class.std::__1::unique_ptr.510", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.404" }
%"class.blink::HeapHashMap.404" = type { %"class.WTF::HashMap.407" }
%"class.WTF::HashMap.407" = type { %"class.WTF::HashTable.408" }
%"class.WTF::HashTable.408" = type <{ %"struct.WTF::KeyValuePair.410"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.410" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.411" }
%"class.std::__1::unique_ptr.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.18", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.425" = type { %"class.blink::MemberBase.426" }
%"class.blink::MemberBase.426" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.437" = type { i32, [4 x i8], %"class.blink::HeapHashSet.438" }
%"class.blink::HeapHashSet.438" = type { %"class.WTF::HashSet.441" }
%"class.WTF::HashSet.441" = type { %"class.WTF::HashTable.442" }
%"class.WTF::HashTable.442" = type <{ %"class.blink::WeakMember.444"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.444" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.449" = type { %"class.blink::MemberBase.450" }
%"class.blink::MemberBase.450" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.451" = type { %"class.blink::MemberBase.452" }
%"class.blink::MemberBase.452" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.465" = type { %"class.blink::MemberBase.466" }
%"class.blink::MemberBase.466" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.467" }
%"class.WTF::Deque.467" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"class.std::__1::unique_ptr.472"*, i32, i32 }
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.478", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.478" = type { %"class.std::__1::__bitset.479" }
%"class.std::__1::__bitset.479" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.480", i64, %"class.absl::optional.485", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.480" = type { %"class.absl::optional_internal::optional_data.481" }
%"class.absl::optional_internal::optional_data.481" = type { %"class.absl::optional_internal::optional_data_base.482" }
%"class.absl::optional_internal::optional_data_base.482" = type { %"class.absl::optional_internal::optional_data_dtor_base.483" }
%"class.absl::optional_internal::optional_data_dtor_base.483" = type { i8, %union.anon.484 }
%union.anon.484 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.485" = type { %"class.absl::optional_internal::optional_data.486" }
%"class.absl::optional_internal::optional_data.486" = type { %"class.absl::optional_internal::optional_data_base.487" }
%"class.absl::optional_internal::optional_data_base.487" = type { %"class.absl::optional_internal::optional_data_dtor_base.488" }
%"class.absl::optional_internal::optional_data_dtor_base.488" = type { i8, %union.anon.489 }
%union.anon.489 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.490" }
%"class.std::__1::unique_ptr.490" = type { %"class.std::__1::__compressed_pair.491" }
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.496" = type { %"class.WTF::HashSet.499" }
%"class.WTF::HashSet.499" = type { %"class.WTF::HashTable.500" }
%"class.WTF::HashTable.500" = type <{ %"class.blink::WeakMember.502"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.502" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.503 }
%class.scoped_refptr.503 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.267", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.267" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.268" }
%"struct.std::__1::atomic.268" = type { %"struct.std::__1::__atomic_base.269" }
%"struct.std::__1::__atomic_base.269" = type { %"struct.std::__1::__atomic_base.270" }
%"struct.std::__1::__atomic_base.270" = type { %"struct.std::__1::__cxx_atomic_impl.271" }
%"struct.std::__1::__cxx_atomic_impl.271" = type { %"struct.std::__1::__cxx_atomic_base_impl.272" }
%"struct.std::__1::__cxx_atomic_base_impl.272" = type { i8 }
%"class.std::__1::unique_ptr.504" = type { %"class.std::__1::__compressed_pair.505" }
%"class.std::__1::__compressed_pair.505" = type { %"struct.std::__1::__compressed_pair_elem.506" }
%"struct.std::__1::__compressed_pair_elem.506" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.20" = type { %"class.blink::MemberBase.21" }
%"class.blink::MemberBase.21" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.36", %"class.blink::Member.37", %"class.blink::HeapVector.39", i8, %class.scoped_refptr.259, i8, %"class.blink::Member.261", i8, %class.scoped_refptr.263, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.295", %"class.blink::Member.301", %"class.blink::Member.301", %"class.blink::Member.301", %"class.blink::Member.301", %class.scoped_refptr.314, %"class.blink::Member.315", %"class.blink::WorkerThread"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.27" }
%"class.blink::WeakMember.27" = type { %"class.blink::MemberBase.28" }
%"class.blink::MemberBase.28" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.29" }
%"class.blink::HeapHashSet.29" = type { %"class.WTF::HashSet.32" }
%"class.WTF::HashSet.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ %"class.blink::WeakMember.35"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.35" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.36" = type { i8 }
%"class.blink::Member.37" = type { %"class.blink::MemberBase.38" }
%"class.blink::MemberBase.38" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::HeapVector.39" = type { %"class.WTF::Vector.42" }
%"class.WTF::Vector.42" = type { %"class.WTF::VectorBuffer.43" }
%"class.WTF::VectorBuffer.43" = type { %"class.WTF::VectorBufferBase.44" }
%"class.WTF::VectorBufferBase.44" = type { %"class.blink::Member.45"*, i32, i32 }
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.49", i32, %"class.blink::Member.50", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference.251", %"class.blink::SelfKeepAlive.255" }
%"class.blink::ThreadState::PrefinalizerRegistration.49" = type { i8 }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.54, %"class.blink::Member.246", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.54 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.55" }
%"class.blink::PersistentBase.55" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.60" }
%"class.WTF::HashTable.60" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.62", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.64", i32, [4 x i8], %"class.std::__1::unique_ptr.200", %"class.std::__1::unique_ptr.200", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.217", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.229", %"class.std::__1::unique_ptr.235", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.242", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.64" = type { %"class.std::__1::__compressed_pair.65" }
%"class.std::__1::__compressed_pair.65" = type { %"struct.std::__1::__compressed_pair_elem.66" }
%"struct.std::__1::__compressed_pair_elem.66" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.129", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.150", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.180", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.100" = type { %"struct.std::__1::__atomic_base.101" }
%"struct.std::__1::__atomic_base.101" = type { %"struct.std::__1::__atomic_base.102" }
%"struct.std::__1::__atomic_base.102" = type { %"struct.std::__1::__cxx_atomic_impl.103" }
%"struct.std::__1::__cxx_atomic_impl.103" = type { %"struct.std::__1::__cxx_atomic_base_impl.104" }
%"struct.std::__1::__cxx_atomic_base_impl.104" = type { i64 }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::Worklist.111"* }
%"class.blink::Worklist.111" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.blink::Worklist.118"* }
%"class.blink::Worklist.118" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::Worklist.125"* }
%"class.blink::Worklist.125" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.129" = type { %"class.std::__1::__compressed_pair.130" }
%"class.std::__1::__compressed_pair.130" = type { %"struct.std::__1::__compressed_pair_elem.131" }
%"struct.std::__1::__compressed_pair_elem.131" = type { %"class.blink::Worklist.132"* }
%"class.blink::Worklist.132" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::Worklist.139"* }
%"class.blink::Worklist.139" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::Worklist.146"* }
%"class.blink::Worklist.146" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.blink::Worklist.153"* }
%"class.blink::Worklist.153" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.100" }
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.160", %"class.std::__1::__compressed_pair.167", %"class.std::__1::__compressed_pair.172", %"class.std::__1::__compressed_pair.174", [4 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162", %"struct.std::__1::__compressed_pair_elem.163" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.163" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { i64 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"class.std::__1::__compressed_pair.174" = type { %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.175" = type { float }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.183", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.192" }
%"class.WTF::Vector.192" = type { %"class.WTF::VectorBuffer.193" }
%"class.WTF::VectorBuffer.193" = type { %"class.WTF::VectorBufferBase.194" }
%"class.WTF::VectorBufferBase.194" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.200" = type { %"class.std::__1::__compressed_pair.201" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.208" }
%"class.WTF::VectorBuffer.208" = type { %"class.WTF::VectorBufferBase.209" }
%"class.WTF::VectorBufferBase.209" = type { %"struct.std::__1::pair.210"*, i32, i32 }
%"struct.std::__1::pair.210" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.217" = type { %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.223" }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.111"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.118"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.125"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.132"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.139"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.397" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.397" = type { %"struct.std::__1::__compressed_pair_elem.398" }
%"struct.std::__1::__compressed_pair_elem.398" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.241 }
%class.scoped_refptr.241 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.242" = type { %"struct.std::__1::__atomic_base.243" }
%"struct.std::__1::__atomic_base.243" = type { %"struct.std::__1::__cxx_atomic_impl.244" }
%"struct.std::__1::__cxx_atomic_impl.244" = type { %"struct.std::__1::__cxx_atomic_base_impl.245" }
%"struct.std::__1::__cxx_atomic_base_impl.245" = type { i8 }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.248" }
%"class.blink::Persistent.248" = type { %"class.blink::PersistentBase.249" }
%"class.blink::PersistentBase.249" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.250 }
%class.scoped_refptr.250 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.50", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.251", %class.scoped_refptr.254 }
%class.scoped_refptr.254 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::TraceWrapperV8Reference.251" = type { %"class.v8::TracedReference.252" }
%"class.v8::TracedReference.252" = type { %"class.v8::BasicTracedReference.253" }
%"class.v8::BasicTracedReference.253" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::SelfKeepAlive.255" = type { %"class.blink::Persistent.256" }
%"class.blink::Persistent.256" = type { %"class.blink::PersistentBase.257" }
%"class.blink::PersistentBase.257" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.295" = type { %"class.WTF::HashSet.298" }
%"class.WTF::HashSet.298" = type { %"class.WTF::HashTable.299" }
%"class.WTF::HashTable.299" = type <{ %"class.blink::Member.45"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type { %"class.blink::ScriptWrappable", i64, float, i32, float, float, float, %"class.WTF::Vector.303" }
%"class.WTF::Vector.303" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"class.std::__1::unique_ptr.306"*, i32, i32 }
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::AudioArray"* }
%class.scoped_refptr.314 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.100", i8, [7 x i8] }>
%"class.blink::Member.315" = type { %"class.blink::MemberBase.316" }
%"class.blink::MemberBase.316" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.277 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.263, %"class.WTF::Vector.335", %"class.WTF::Vector.341", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.317" = type { %"class.WTF::Vector.320" }
%"class.WTF::Vector.320" = type { %"class.WTF::VectorBuffer.321" }
%"class.WTF::VectorBuffer.321" = type { %"class.WTF::VectorBufferBase.322" }
%"class.WTF::VectorBufferBase.322" = type { %"class.blink::Member.323"*, i32, i32 }
%"class.blink::Member.323" = type opaque
%"class.blink::HeapVector.325" = type { %"class.WTF::Vector.328" }
%"class.WTF::Vector.328" = type { %"class.WTF::VectorBuffer.329" }
%"class.WTF::VectorBuffer.329" = type { %"class.WTF::VectorBufferBase.330" }
%"class.WTF::VectorBufferBase.330" = type { %"class.blink::Member.331"*, i32, i32 }
%"class.blink::Member.331" = type opaque
%"class.blink::PersistentNodePtr.333" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.334" }
%"class.blink::MemberBase.334" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.263 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.264", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.273", %"class.WTF::Vector.278", i8, [3 x i8], i32, %"class.WTF::HashSet.283", %"class.WTF::HashSet.283", %"class.WTF::HashSet.287", %"class.WTF::HashSet.291", %"class.WTF::Vector.278", %"class.WTF::Vector.278", %"class.WTF::Vector.278", %"class.WTF::Vector.278", i8, [7 x i8], %"class.WTF::HashSet.273", %"class.WTF::Vector.278", %class.scoped_refptr.259, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.264" = type { %"class.base::RefCountedThreadSafe.265" }
%"class.base::RefCountedThreadSafe.265" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.266 }
%class.scoped_refptr.266 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.283" = type { %"class.WTF::HashTable.284" }
%"class.WTF::HashTable.284" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.287" = type { %"class.WTF::HashTable.288" }
%"class.WTF::HashTable.288" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type <{ i32 (...)**, %class.scoped_refptr.263, %"class.WTF::HashSet.291", %"class.WTF::Vector.355", i8, [7 x i8] }>
%"class.WTF::Vector.355" = type { %"class.WTF::VectorBuffer.356" }
%"class.WTF::VectorBuffer.356" = type { %"class.WTF::VectorBufferBase.357" }
%"class.WTF::VectorBufferBase.357" = type { %"class.blink::AudioNodeOutput"**, i32, i32 }
%"class.blink::AudioNodeOutput" = type opaque
%"class.WTF::HashSet.291" = type { %"class.WTF::HashTable.292" }
%"class.WTF::HashTable.292" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.273" = type { %"class.WTF::HashTable.274" }
%"class.WTF::HashTable.274" = type <{ %class.scoped_refptr.277*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %class.scoped_refptr.277*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337" }
%"class.WTF::VectorBufferBase.337" = type { %"class.std::__1::unique_ptr.338"*, i32, i32 }
%"class.std::__1::unique_ptr.338" = type opaque
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"class.std::__1::unique_ptr.344"*, i32, i32 }
%"class.std::__1::unique_ptr.344" = type opaque
%"class.base::SupportsWeakPtr.347" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"struct.std::__1::atomic.348" = type { %"struct.std::__1::__atomic_base.349" }
%"struct.std::__1::__atomic_base.349" = type { %"struct.std::__1::__cxx_atomic_impl.350" }
%"struct.std::__1::__cxx_atomic_impl.350" = type { %"struct.std::__1::__cxx_atomic_base_impl.351" }
%"struct.std::__1::__cxx_atomic_base_impl.351" = type { i32 }
%class.scoped_refptr.259 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.260" }>
%"class.base::RefCountedThreadSafe.260" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.352 = type { %"class.blink::AudioParamHandler"* }
%"class.blink::AudioParamHandler" = type { %"class.blink::AudioSummingJunction.base", %"class.WTF::ThreadSafeRefCounted.353", i32, %"class.WTF::String", %"struct.std::__1::atomic.360", float, i32, i32, float, float, %"class.blink::AudioParamTimeline", %class.scoped_refptr.314, %class.scoped_refptr.379 }
%"class.blink::AudioSummingJunction.base" = type <{ i32 (...)**, %class.scoped_refptr.263, %"class.WTF::HashSet.291", %"class.WTF::Vector.355", i8 }>
%"class.WTF::ThreadSafeRefCounted.353" = type { %"class.base::RefCountedThreadSafe.354" }
%"class.base::RefCountedThreadSafe.354" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.360" = type { %"struct.std::__1::__atomic_base.361" }
%"struct.std::__1::__atomic_base.361" = type { %"struct.std::__1::__cxx_atomic_impl.362" }
%"struct.std::__1::__cxx_atomic_impl.362" = type { %"struct.std::__1::__cxx_atomic_base_impl.363" }
%"struct.std::__1::__cxx_atomic_base_impl.363" = type { float }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector.364", %"class.WTF::HashSet.375", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.std::__1::unique_ptr.367"*, i32, i32 }
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.392", double, float, [4 x i8], %"class.std::__1::unique_ptr.367", i8, [7 x i8] }>
%"class.WTF::Vector.392" = type { %"class.WTF::VectorBuffer.393" }
%"class.WTF::VectorBuffer.393" = type { %"class.WTF::VectorBufferBase.394" }
%"class.WTF::VectorBufferBase.394" = type { float*, i32, i32 }
%"class.WTF::HashSet.375" = type { %"class.WTF::HashTable.376" }
%"class.WTF::HashTable.376" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.379 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted.380", i32, %"class.WTF::Vector.382", i32, float }
%"class.WTF::ThreadSafeRefCounted.380" = type { %"class.base::RefCountedThreadSafe.381" }
%"class.base::RefCountedThreadSafe.381" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384", [64 x i8] }
%"class.WTF::VectorBufferBase.384" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.306", i8, [7 x i8] }>
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.387" }
%"class.blink::PersistentBase.387" = type { %"class.blink::PeriodicWave"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.388" }
%"struct.std::__1::atomic.388" = type { %"struct.std::__1::__atomic_base.389" }
%"struct.std::__1::__atomic_base.389" = type { %"struct.std::__1::__cxx_atomic_impl.390" }
%"struct.std::__1::__cxx_atomic_impl.390" = type { %"struct.std::__1::__cxx_atomic_base_impl.391" }
%"struct.std::__1::__cxx_atomic_base_impl.391" = type { %"class.blink::PersistentNode"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.516" }
%"class.blink::PersistentBase.516" = type { %"class.blink::PeriodicWave"*, %"class.blink::CrossThreadPersistentNodePtr.517" }
%"class.blink::CrossThreadPersistentNodePtr.517" = type { %"struct.std::__1::atomic.388" }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden { i32, double } @_ZNK5blink17OscillatorHandler18ProcessKRateVectorEiPfdff(%"class.blink::OscillatorHandler"* nocapture readonly, i32, float* nocapture, double, float, float) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = alloca float*, align 8
  %9 = alloca float*, align 8
  %10 = alloca float, align 4
  %11 = alloca <4 x float>, align 16
  %12 = alloca <4 x float>, align 16
  %13 = alloca <4 x float>, align 16
  %14 = alloca <4 x float>, align 16
  %15 = alloca <2 x i64>, align 16
  %16 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #6
  %17 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #6, !alias.scope !2
  %19 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6, !noalias !2
  %20 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %19, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %20) #6, !noalias !2
  %21 = getelementptr inbounds %"class.blink::OscillatorHandler", %"class.blink::OscillatorHandler"* %0, i64 0, i32 8, i32 0, i32 0
  %22 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %21, align 8, !noalias !2
  call void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.516"* nonnull %18, %"class.blink::PeriodicWave"* %22) #6
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %20) #6
  %23 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %17, align 8
  %24 = call i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"* %23) #6
  %25 = uitofp i32 %24 to double
  %26 = fdiv double 1.000000e+00, %25
  %27 = bitcast float** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  store float* null, float** %8, align 8
  %28 = bitcast float** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #6
  store float* null, float** %9, align 8
  %29 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %29) #6
  store float 0.000000e+00, float* %10, align 4
  %30 = fmul float %4, %5
  %31 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %17, align 8
  call void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"* %31, float %4, float** nonnull dereferenceable(8) %9, float** nonnull dereferenceable(8) %8, float* nonnull dereferenceable(4) %10) #6
  %32 = uitofp i32 %24 to float
  %33 = insertelement <4 x float> undef, float %32, i32 0
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> zeroinitializer
  %35 = fdiv float 1.000000e+00, %32
  %36 = insertelement <4 x float> undef, float %35, i32 0
  %37 = shufflevector <4 x float> %36, <4 x float> undef, <4 x i32> zeroinitializer
  %38 = add i32 %24, -1
  %39 = insertelement <4 x i32> undef, i32 %38, i32 0
  %40 = shufflevector <4 x i32> %39, <4 x i32> undef, <4 x i32> zeroinitializer
  %41 = load float, float* %10, align 4
  %42 = insertelement <4 x float> undef, float %41, i32 0
  %43 = shufflevector <4 x float> %42, <4 x float> undef, <4 x i32> zeroinitializer
  %44 = fmul float %30, 4.000000e+00
  %45 = insertelement <4 x float> undef, float %44, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = fmul float %30, 3.000000e+00
  %48 = fpext float %47 to double
  %49 = fadd double %48, %3
  %50 = fptrunc double %49 to float
  %51 = fmul float %30, 2.000000e+00
  %52 = fpext float %51 to double
  %53 = fadd double %52, %3
  %54 = fptrunc double %53 to float
  %55 = fpext float %30 to double
  %56 = fadd double %55, %3
  %57 = fptrunc double %56 to float
  %58 = fptrunc double %3 to float
  %59 = insertelement <4 x float> undef, float %58, i32 0
  %60 = insertelement <4 x float> %59, float %57, i32 1
  %61 = insertelement <4 x float> %60, float %54, i32 2
  %62 = insertelement <4 x float> %61, float %50, i32 3
  %63 = fmul <4 x float> %62, %37
  %64 = call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %63) #6
  %65 = bitcast <4 x float>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #6
  %66 = bitcast <4 x float>* %12 to i8*
  %67 = bitcast <4 x float>* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %67, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #6
  %68 = bitcast <4 x float>* %13 to i8*
  %69 = bitcast <4 x float>* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %69, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %68) #6
  %70 = bitcast <4 x float>* %14 to i8*
  %71 = bitcast <4 x float>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #6
  %72 = sdiv i32 %1, 4
  %73 = icmp sgt i32 %1, 3
  %74 = bitcast <4 x float>* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %74, i8 -1, i64 16, i1 false)
  br i1 %73, label %75, label %117

75:                                               ; preds = %6
  %76 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 3
  %77 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 2
  %78 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 1
  %79 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 3
  %80 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 2
  %81 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 1
  %82 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 3
  %83 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 2
  %84 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 1
  %85 = getelementptr inbounds <4 x float>, <4 x float>* %11, i64 0, i64 3
  %86 = getelementptr inbounds <4 x float>, <4 x float>* %11, i64 0, i64 2
  %87 = getelementptr inbounds <4 x float>, <4 x float>* %11, i64 0, i64 1
  %88 = sitofp <4 x i32> %64 to <4 x float>
  %89 = fcmp olt <4 x float> %63, %88
  %90 = zext <4 x i1> %89 to <4 x i32>
  %91 = sub <4 x i32> %64, %90
  %92 = sitofp <4 x i32> %91 to <4 x float>
  %93 = fmul <4 x float> %34, %92
  %94 = fsub <4 x float> %62, %93
  %95 = bitcast <2 x i64>* %15 to i8*
  %96 = bitcast <2 x i64>* %15 to <4 x i32>*
  %97 = bitcast <2 x i64>* %15 to i32*
  %98 = bitcast <4 x float>* %11 to i32*
  %99 = bitcast <4 x float>* %12 to i32*
  %100 = bitcast <4 x float>* %13 to i32*
  %101 = bitcast <4 x float>* %14 to i32*
  %102 = bitcast float* %87 to i32*
  %103 = bitcast float* %84 to i32*
  %104 = bitcast float* %81 to i32*
  %105 = bitcast float* %78 to i32*
  %106 = bitcast float* %86 to i32*
  %107 = bitcast float* %83 to i32*
  %108 = bitcast float* %80 to i32*
  %109 = bitcast float* %77 to i32*
  %110 = bitcast float* %85 to i32*
  %111 = getelementptr inbounds i32, i32* %97, i64 3
  %112 = bitcast float* %82 to i32*
  %113 = bitcast float* %79 to i32*
  %114 = bitcast float* %76 to i32*
  br label %148

115:                                              ; preds = %148
  %116 = trunc i64 %252 to i32
  br label %117

117:                                              ; preds = %115, %6
  %118 = phi i32 [ 0, %6 ], [ %116, %115 ]
  %119 = sitofp i32 %118 to float
  %120 = fmul float %30, %119
  %121 = fpext float %120 to double
  %122 = fadd double %121, %3
  %123 = fmul double %26, %122
  %124 = call double @llvm.floor.f64(double %123)
  %125 = fmul double %124, %25
  %126 = fsub double %122, %125
  %127 = insertvalue { i32, double } undef, i32 %118, 0
  %128 = insertvalue { i32, double } %127, double %126, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %68) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %29) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  %129 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %130 = bitcast %"class.blink::CrossThreadPersistentNodePtr.517"* %129 to i64*
  %131 = load atomic i64, i64* %130 acquire, align 8
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %147, label %133

133:                                              ; preds = %117
  %134 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #6
  %135 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %134, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %135) #6
  %136 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %137 = load atomic i64, i64* %130 monotonic, align 8
  %138 = inttoptr i64 %137 to %"class.blink::PersistentNode"*
  %139 = icmp eq i64 %137, 0
  br i1 %139, label %146, label %140

140:                                              ; preds = %133
  %141 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %136, i64 0, i32 0, i32 0
  %142 = bitcast %"class.blink::CrossThreadPersistentRegion"* %136 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = inttoptr i64 %137 to i64*
  store i64 %143, i64* %144, align 8
  %145 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %138, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %145, align 8
  store %"class.blink::PersistentNode"* %138, %"class.blink::PersistentNode"** %141, align 8
  br label %146

146:                                              ; preds = %140, %133
  store atomic i64 0, i64* %130 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %135) #6
  br label %147

147:                                              ; preds = %117, %146
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #6
  ret { i32, double } %128

148:                                              ; preds = %148, %75
  %149 = phi i64 [ 0, %75 ], [ %252, %148 ]
  %150 = phi i32 [ 0, %75 ], [ %251, %148 ]
  %151 = phi <4 x float> [ %94, %75 ], [ %250, %148 ]
  %152 = call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %151) #6
  %153 = and <4 x i32> %152, %40
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #6
  %154 = add <4 x i32> %153, <i32 1, i32 1, i32 1, i32 1>
  %155 = and <4 x i32> %154, %40
  store <4 x i32> %155, <4 x i32>* %96, align 16
  %156 = load float*, float** %9, align 8
  %157 = load float*, float** %8, align 8
  %158 = bitcast <4 x i32> %153 to <2 x i64>
  %159 = extractelement <2 x i64> %158, i32 0
  %160 = and i64 %159, 4294967295
  %161 = getelementptr inbounds float, float* %156, i64 %160
  %162 = bitcast float* %161 to i32*
  %163 = load i32, i32* %162, align 4
  store i32 %163, i32* %98, align 16
  %164 = bitcast <4 x i32> %155 to <2 x i64>
  %165 = extractelement <2 x i64> %164, i32 0
  %166 = and i64 %165, 4294967295
  %167 = getelementptr inbounds float, float* %156, i64 %166
  %168 = bitcast float* %167 to i32*
  %169 = load i32, i32* %168, align 4
  store i32 %169, i32* %99, align 16
  %170 = getelementptr inbounds float, float* %157, i64 %160
  %171 = bitcast float* %170 to i32*
  %172 = load i32, i32* %171, align 4
  store i32 %172, i32* %100, align 16
  %173 = getelementptr inbounds float, float* %157, i64 %166
  %174 = bitcast float* %173 to i32*
  %175 = load i32, i32* %174, align 4
  store i32 %175, i32* %101, align 16
  %176 = extractelement <4 x i32> %153, i32 1
  %177 = zext i32 %176 to i64
  %178 = getelementptr inbounds float, float* %156, i64 %177
  %179 = bitcast float* %178 to i32*
  %180 = load i32, i32* %179, align 4
  store i32 %180, i32* %102, align 4
  %181 = extractelement <4 x i32> %155, i32 1
  %182 = zext i32 %181 to i64
  %183 = getelementptr inbounds float, float* %156, i64 %182
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  store i32 %185, i32* %103, align 4
  %186 = getelementptr inbounds float, float* %157, i64 %177
  %187 = bitcast float* %186 to i32*
  %188 = load i32, i32* %187, align 4
  store i32 %188, i32* %104, align 4
  %189 = getelementptr inbounds float, float* %157, i64 %182
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %105, align 4
  %192 = extractelement <4 x i32> %153, i32 2
  %193 = zext i32 %192 to i64
  %194 = getelementptr inbounds float, float* %156, i64 %193
  %195 = bitcast float* %194 to i32*
  %196 = load i32, i32* %195, align 4
  store i32 %196, i32* %106, align 8
  %197 = extractelement <4 x i32> %155, i32 2
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %156, i64 %198
  %200 = bitcast float* %199 to i32*
  %201 = load i32, i32* %200, align 4
  store i32 %201, i32* %107, align 8
  %202 = getelementptr inbounds float, float* %157, i64 %193
  %203 = bitcast float* %202 to i32*
  %204 = load i32, i32* %203, align 4
  store i32 %204, i32* %108, align 8
  %205 = getelementptr inbounds float, float* %157, i64 %198
  %206 = bitcast float* %205 to i32*
  %207 = load i32, i32* %206, align 4
  store i32 %207, i32* %109, align 8
  %208 = extractelement <4 x i32> %153, i32 3
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds float, float* %156, i64 %209
  %211 = bitcast float* %210 to i32*
  %212 = load i32, i32* %211, align 4
  store i32 %212, i32* %110, align 4
  %213 = load i32, i32* %111, align 4
  %214 = zext i32 %213 to i64
  %215 = getelementptr inbounds float, float* %156, i64 %214
  %216 = bitcast float* %215 to i32*
  %217 = load i32, i32* %216, align 4
  store i32 %217, i32* %112, align 4
  %218 = getelementptr inbounds float, float* %157, i64 %209
  %219 = bitcast float* %218 to i32*
  %220 = load i32, i32* %219, align 4
  store i32 %220, i32* %113, align 4
  %221 = getelementptr inbounds float, float* %157, i64 %214
  %222 = bitcast float* %221 to i32*
  %223 = load i32, i32* %222, align 4
  store i32 %223, i32* %114, align 4
  %224 = load <4 x float>, <4 x float>* %11, align 16
  %225 = load <4 x float>, <4 x float>* %12, align 16
  %226 = load <4 x float>, <4 x float>* %13, align 16
  %227 = load <4 x float>, <4 x float>* %14, align 16
  %228 = sitofp <4 x i32> %153 to <4 x float>
  %229 = fsub <4 x float> %151, %228
  %230 = fsub <4 x float> %227, %226
  %231 = fmul <4 x float> %229, %230
  %232 = fadd <4 x float> %226, %231
  %233 = fsub <4 x float> %225, %224
  %234 = fmul <4 x float> %229, %233
  %235 = fadd <4 x float> %224, %234
  %236 = fsub <4 x float> %235, %232
  %237 = fmul <4 x float> %43, %236
  %238 = fadd <4 x float> %232, %237
  %239 = getelementptr inbounds float, float* %2, i64 %149
  %240 = bitcast float* %239 to <4 x float>*
  store <4 x float> %238, <4 x float>* %240, align 1
  %241 = fadd <4 x float> %46, %151
  %242 = fmul <4 x float> %37, %241
  %243 = call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %242) #6
  %244 = sitofp <4 x i32> %243 to <4 x float>
  %245 = fcmp olt <4 x float> %242, %244
  %246 = zext <4 x i1> %245 to <4 x i32>
  %247 = sub <4 x i32> %243, %246
  %248 = sitofp <4 x i32> %247 to <4 x float>
  %249 = fmul <4 x float> %34, %248
  %250 = fsub <4 x float> %241, %249
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #6
  %251 = add nuw nsw i32 %150, 1
  %252 = add nuw nsw i64 %149, 4
  %253 = icmp eq i32 %251, %72
  br i1 %253, label %115, label %148
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @_ZNK5blink12PeriodicWave16PeriodicWaveSizeEv(%"class.blink::PeriodicWave"*) local_unnamed_addr #2

declare void @_ZN5blink12PeriodicWave31WaveDataForFundamentalFrequencyEfRPfS2_Rf(%"class.blink::PeriodicWave"*, float, float** dereferenceable(8), float** dereferenceable(8), float* dereferenceable(4)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readnone speculatable
declare double @llvm.floor.f64(double) #3

; Function Attrs: nounwind ssp uwtable
define hidden double @_ZNK5blink17OscillatorHandler24ProcessARateVectorKernelEPfdPKfjPKS3_S5_S3_(%"class.blink::OscillatorHandler"* nocapture readnone, float* nocapture, double, float* nocapture readonly, i32, float** nocapture readonly, float** nocapture readonly, float* nocapture readonly) local_unnamed_addr #0 align 2 {
  %9 = alloca [4 x double], align 16
  %10 = alloca <2 x i64>, align 16
  %11 = alloca <2 x i64>, align 16
  %12 = alloca <4 x float>, align 16
  %13 = alloca <4 x float>, align 16
  %14 = alloca <4 x float>, align 16
  %15 = alloca <4 x float>, align 16
  %16 = uitofp i32 %4 to double
  %17 = fdiv double 1.000000e+00, %16
  %18 = bitcast [4 x double]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  %19 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 0
  %20 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 1
  %21 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 2
  %22 = getelementptr inbounds [4 x double], [4 x double]* %9, i64 0, i64 3
  %23 = bitcast float* %3 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = fpext <2 x float> %24 to <2 x double>
  %26 = extractelement <2 x double> %25, i32 0
  store double %26, double* %19, align 16
  %27 = extractelement <2 x double> %25, i32 1
  %28 = fadd double %26, %27
  store double %28, double* %20, align 8
  %29 = getelementptr inbounds float, float* %3, i64 2
  %30 = load float, float* %29, align 4
  %31 = fpext float %30 to double
  %32 = fadd double %28, %31
  store double %32, double* %21, align 16
  %33 = getelementptr inbounds float, float* %3, i64 3
  %34 = load float, float* %33, align 4
  %35 = fpext float %34 to double
  %36 = fadd double %32, %35
  store double %36, double* %22, align 8
  %37 = add i32 %4, -1
  %38 = fadd double %32, %2
  %39 = fadd double %28, %2
  %40 = insertelement <2 x double> undef, double %39, i32 0
  %41 = insertelement <2 x double> %40, double %38, i32 1
  %42 = fadd double %26, %2
  %43 = insertelement <2 x double> undef, double %2, i32 0
  %44 = insertelement <2 x double> %43, double %42, i32 1
  %45 = insertelement <2 x double> undef, double %16, i32 0
  %46 = shufflevector <2 x double> %45, <2 x double> undef, <2 x i32> zeroinitializer
  %47 = insertelement <2 x double> undef, double %17, i32 0
  %48 = shufflevector <2 x double> %47, <2 x double> undef, <2 x i32> zeroinitializer
  %49 = fmul <2 x double> %48, %41
  %50 = tail call <4 x i32> @llvm.x86.sse2.cvttpd2dq(<2 x double> %49) #6
  %51 = shufflevector <4 x i32> %50, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %52 = sitofp <2 x i32> %51 to <2 x double>
  %53 = fcmp olt <2 x double> %49, %52
  %54 = sext <2 x i1> %53 to <2 x i64>
  %55 = bitcast <2 x i64> %54 to <4 x i32>
  %56 = shufflevector <4 x i32> %55, <4 x i32> undef, <4 x i32> <i32 0, i32 2, i32 undef, i32 undef>
  %57 = add <4 x i32> %56, %50
  %58 = shufflevector <4 x i32> %57, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %59 = sitofp <2 x i32> %58 to <2 x double>
  %60 = fmul <2 x double> %46, %59
  %61 = fsub <2 x double> %41, %60
  %62 = fmul <2 x double> %48, %44
  %63 = tail call <4 x i32> @llvm.x86.sse2.cvttpd2dq(<2 x double> %62) #6
  %64 = shufflevector <4 x i32> %63, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %65 = sitofp <2 x i32> %64 to <2 x double>
  %66 = fcmp olt <2 x double> %62, %65
  %67 = sext <2 x i1> %66 to <2 x i64>
  %68 = bitcast <2 x i64> %67 to <4 x i32>
  %69 = shufflevector <4 x i32> %68, <4 x i32> undef, <4 x i32> <i32 0, i32 2, i32 undef, i32 undef>
  %70 = add <4 x i32> %69, %63
  %71 = shufflevector <4 x i32> %70, <4 x i32> undef, <2 x i32> <i32 0, i32 1>
  %72 = sitofp <2 x i32> %71 to <2 x double>
  %73 = fmul <2 x double> %46, %72
  %74 = fsub <2 x double> %44, %73
  %75 = bitcast <2 x i64>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #6
  %76 = tail call <4 x i32> @llvm.x86.sse2.cvttpd2dq(<2 x double> %74) #6
  %77 = bitcast <4 x i32> %76 to <4 x float>
  %78 = tail call <4 x i32> @llvm.x86.sse2.cvttpd2dq(<2 x double> %61) #6
  %79 = bitcast <4 x i32> %78 to <4 x float>
  %80 = shufflevector <4 x float> %77, <4 x float> %79, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %81 = bitcast <2 x i64>* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #6
  %82 = bitcast <4 x float> %80 to <4 x i32>
  %83 = add <4 x i32> %82, <i32 1, i32 1, i32 1, i32 1>
  %84 = bitcast <2 x i64>* %11 to <4 x i32>*
  %85 = insertelement <4 x i32> undef, i32 %37, i32 0
  %86 = shufflevector <4 x i32> %85, <4 x i32> undef, <4 x i32> zeroinitializer
  %87 = bitcast <4 x i32> %86 to <2 x i64>
  %88 = bitcast <4 x float> %80 to <2 x i64>
  %89 = and <2 x i64> %88, %87
  store <2 x i64> %89, <2 x i64>* %10, align 16
  %90 = and <4 x i32> %83, %86
  store <4 x i32> %90, <4 x i32>* %84, align 16
  %91 = bitcast <4 x float>* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #6
  %92 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 1
  %93 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 2
  %94 = getelementptr inbounds <4 x float>, <4 x float>* %12, i64 0, i64 3
  %95 = bitcast <4 x float>* %13 to i8*
  %96 = bitcast <4 x float>* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %96, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #6
  %97 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 1
  %98 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 2
  %99 = getelementptr inbounds <4 x float>, <4 x float>* %13, i64 0, i64 3
  %100 = bitcast <4 x float>* %14 to i8*
  %101 = bitcast <4 x float>* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %101, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #6
  %102 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 1
  %103 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 2
  %104 = getelementptr inbounds <4 x float>, <4 x float>* %14, i64 0, i64 3
  %105 = bitcast <4 x float>* %15 to i8*
  %106 = bitcast <4 x float>* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %106, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #6
  %107 = getelementptr inbounds <4 x float>, <4 x float>* %15, i64 0, i64 1
  %108 = getelementptr inbounds <4 x float>, <4 x float>* %15, i64 0, i64 2
  %109 = getelementptr inbounds <4 x float>, <4 x float>* %15, i64 0, i64 3
  %110 = bitcast <2 x i64>* %10 to i32*
  %111 = bitcast <2 x i64>* %11 to i32*
  %112 = bitcast <4 x float>* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %112, i8 -1, i64 16, i1 false)
  %113 = load float*, float** %5, align 8
  %114 = extractelement <2 x i64> %89, i32 0
  %115 = and i64 %114, 4294967295
  %116 = getelementptr inbounds float, float* %113, i64 %115
  %117 = bitcast float* %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = bitcast <4 x float>* %12 to i32*
  store i32 %118, i32* %119, align 16
  %120 = bitcast <4 x i32> %90 to <2 x i64>
  %121 = extractelement <2 x i64> %120, i32 0
  %122 = and i64 %121, 4294967295
  %123 = getelementptr inbounds float, float* %113, i64 %122
  %124 = bitcast float* %123 to i32*
  %125 = load i32, i32* %124, align 4
  %126 = bitcast <4 x float>* %13 to i32*
  store i32 %125, i32* %126, align 16
  %127 = load float*, float** %6, align 8
  %128 = getelementptr inbounds float, float* %127, i64 %115
  %129 = bitcast float* %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = bitcast <4 x float>* %14 to i32*
  store i32 %130, i32* %131, align 16
  %132 = getelementptr inbounds float, float* %127, i64 %122
  %133 = bitcast float* %132 to i32*
  %134 = load i32, i32* %133, align 4
  %135 = bitcast <4 x float>* %15 to i32*
  store i32 %134, i32* %135, align 16
  %136 = getelementptr inbounds float*, float** %5, i64 1
  %137 = load float*, float** %136, align 8
  %138 = bitcast <2 x i64> %89 to <4 x i32>
  %139 = extractelement <4 x i32> %138, i32 1
  %140 = zext i32 %139 to i64
  %141 = getelementptr inbounds float, float* %137, i64 %140
  %142 = bitcast float* %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = bitcast float* %92 to i32*
  store i32 %143, i32* %144, align 4
  %145 = extractelement <4 x i32> %90, i32 1
  %146 = zext i32 %145 to i64
  %147 = getelementptr inbounds float, float* %137, i64 %146
  %148 = bitcast float* %147 to i32*
  %149 = load i32, i32* %148, align 4
  %150 = bitcast float* %97 to i32*
  store i32 %149, i32* %150, align 4
  %151 = getelementptr inbounds float*, float** %6, i64 1
  %152 = load float*, float** %151, align 8
  %153 = getelementptr inbounds float, float* %152, i64 %140
  %154 = bitcast float* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = bitcast float* %102 to i32*
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds float, float* %152, i64 %146
  %158 = bitcast float* %157 to i32*
  %159 = load i32, i32* %158, align 4
  %160 = bitcast float* %107 to i32*
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds float*, float** %5, i64 2
  %162 = load float*, float** %161, align 8
  %163 = getelementptr inbounds i32, i32* %110, i64 2
  %164 = load i32, i32* %163, align 8
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds float, float* %162, i64 %165
  %167 = bitcast float* %166 to i32*
  %168 = load i32, i32* %167, align 4
  %169 = bitcast float* %93 to i32*
  store i32 %168, i32* %169, align 8
  %170 = getelementptr inbounds i32, i32* %111, i64 2
  %171 = load i32, i32* %170, align 8
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds float, float* %162, i64 %172
  %174 = bitcast float* %173 to i32*
  %175 = load i32, i32* %174, align 4
  %176 = bitcast float* %98 to i32*
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds float*, float** %6, i64 2
  %178 = load float*, float** %177, align 8
  %179 = getelementptr inbounds float, float* %178, i64 %165
  %180 = bitcast float* %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = bitcast float* %103 to i32*
  store i32 %181, i32* %182, align 8
  %183 = getelementptr inbounds float, float* %178, i64 %172
  %184 = bitcast float* %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = bitcast float* %108 to i32*
  store i32 %185, i32* %186, align 8
  %187 = getelementptr inbounds float*, float** %5, i64 3
  %188 = load float*, float** %187, align 8
  %189 = getelementptr inbounds i32, i32* %110, i64 3
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = getelementptr inbounds float, float* %188, i64 %191
  %193 = bitcast float* %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = bitcast float* %94 to i32*
  store i32 %194, i32* %195, align 4
  %196 = getelementptr inbounds i32, i32* %111, i64 3
  %197 = load i32, i32* %196, align 4
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds float, float* %188, i64 %198
  %200 = bitcast float* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = bitcast float* %99 to i32*
  store i32 %201, i32* %202, align 4
  %203 = getelementptr inbounds float*, float** %6, i64 3
  %204 = load float*, float** %203, align 8
  %205 = getelementptr inbounds float, float* %204, i64 %191
  %206 = bitcast float* %205 to i32*
  %207 = load i32, i32* %206, align 4
  %208 = bitcast float* %104 to i32*
  store i32 %207, i32* %208, align 4
  %209 = getelementptr inbounds float, float* %204, i64 %198
  %210 = bitcast float* %209 to i32*
  %211 = load i32, i32* %210, align 4
  %212 = bitcast float* %109 to i32*
  store i32 %211, i32* %212, align 4
  %213 = tail call <4 x float> @llvm.x86.sse2.cvtpd2ps(<2 x double> %74) #6
  %214 = tail call <4 x float> @llvm.x86.sse2.cvtpd2ps(<2 x double> %61) #6
  %215 = shufflevector <4 x float> %213, <4 x float> %214, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %216 = bitcast <2 x i64> %89 to <4 x i32>
  %217 = sitofp <4 x i32> %216 to <4 x float>
  %218 = fsub <4 x float> %215, %217
  %219 = load <4 x float>, <4 x float>* %14, align 16
  %220 = load <4 x float>, <4 x float>* %15, align 16
  %221 = fsub <4 x float> %220, %219
  %222 = fmul <4 x float> %218, %221
  %223 = fadd <4 x float> %219, %222
  %224 = load <4 x float>, <4 x float>* %12, align 16
  %225 = load <4 x float>, <4 x float>* %13, align 16
  %226 = fsub <4 x float> %225, %224
  %227 = fmul <4 x float> %218, %226
  %228 = fadd <4 x float> %224, %227
  %229 = bitcast float* %7 to <4 x float>*
  %230 = load <4 x float>, <4 x float>* %229, align 16
  %231 = fsub <4 x float> %228, %223
  %232 = fmul <4 x float> %230, %231
  %233 = fadd <4 x float> %223, %232
  %234 = bitcast float* %1 to <4 x float>*
  store <4 x float> %233, <4 x float>* %234, align 1
  %235 = load double, double* %22, align 8
  %236 = fadd double %235, %2
  %237 = fmul double %17, %236
  %238 = tail call double @llvm.floor.f64(double %237)
  %239 = fmul double %238, %16
  %240 = fsub double %236, %239
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  ret double %240
}

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float>) #4

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttpd2dq(<2 x double>) #4

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse2.cvtpd2ps(<2 x double>) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.516"*, %"class.blink::PeriodicWave"*) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.516", %"class.blink::PersistentBase.516"* %0, i64 0, i32 0
  store %"class.blink::PeriodicWave"* %1, %"class.blink::PeriodicWave"** %3, align 8
  %4 = ptrtoint %"class.blink::PeriodicWave"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.516", %"class.blink::PersistentBase.516"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.517"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.516"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !5

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #6
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.516"**
  store %"class.blink::PersistentBase.516"* %0, %"class.blink::PersistentBase.516"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.516", %"class.blink::PersistentBase.516"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.517"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #6
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_12PeriodicWaveELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #5 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::PeriodicWave"**
  %5 = load %"class.blink::PeriodicWave"*, %"class.blink::PeriodicWave"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #6
  %7 = icmp eq %"class.blink::PeriodicWave"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::PeriodicWave"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #6
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12PeriodicWaveEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #5 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind readnone }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv: argument 0"}
!4 = distinct !{!4, !"_ZNK5blink25CrossThreadWeakPersistentINS_12PeriodicWaveEE4LockEv"}
!5 = !{!"branch_weights", i32 1, i32 2000}
